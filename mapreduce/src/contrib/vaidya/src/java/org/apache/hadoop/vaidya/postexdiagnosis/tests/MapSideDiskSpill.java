begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.vaidya.postexdiagnosis.tests
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|postexdiagnosis
operator|.
name|tests
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|JobKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|KeyDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|MapTaskKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|ReduceTaskKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|MapTaskStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|DiagnosticTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|MapSideDiskSpill
specifier|public
class|class
name|MapSideDiskSpill
extends|extends
name|DiagnosticTest
block|{
DECL|field|_impact
specifier|private
name|double
name|_impact
decl_stmt|;
DECL|field|_job
specifier|private
name|JobStatistics
name|_job
decl_stmt|;
DECL|field|_numLocalBytesWrittenByMaps
specifier|private
name|long
name|_numLocalBytesWrittenByMaps
decl_stmt|;
comment|/**                *     */
DECL|method|MapSideDiskSpill ()
specifier|public
name|MapSideDiskSpill
parameter_list|()
block|{   }
comment|/*     *      */
annotation|@
name|Override
DECL|method|evaluate (JobStatistics job)
specifier|public
name|double
name|evaluate
parameter_list|(
name|JobStatistics
name|job
parameter_list|)
block|{
comment|/*      * Set the this._job      */
name|this
operator|.
name|_job
operator|=
name|job
expr_stmt|;
comment|/*      * Read the Normalization Factor      */
name|double
name|normF
init|=
name|getInputElementDoubleValue
argument_list|(
literal|"NormalizationFactor"
argument_list|,
literal|3.0
argument_list|)
decl_stmt|;
comment|/*      * Get the sorted map task list by number MapTaskKeys.OUTPUT_BYTES      */
name|List
argument_list|<
name|MapTaskStatistics
argument_list|>
name|smTaskList
init|=
name|job
operator|.
name|getMapTaskList
argument_list|(
name|MapTaskKeys
operator|.
name|FILE_BYTES_WRITTEN
argument_list|,
name|KeyDataType
operator|.
name|LONG
argument_list|)
decl_stmt|;
name|int
name|size
init|=
name|smTaskList
operator|.
name|size
argument_list|()
decl_stmt|;
name|long
name|numLocalBytesWrittenByMaps
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|numLocalBytesWrittenByMaps
operator|+=
name|smTaskList
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getLongValue
argument_list|(
name|MapTaskKeys
operator|.
name|FILE_BYTES_WRITTEN
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|_numLocalBytesWrittenByMaps
operator|=
name|numLocalBytesWrittenByMaps
expr_stmt|;
comment|/*      * Map only job vs. map reduce job      * For MapReduce job MAP_OUTPUT_BYTES are normally written by maps on local disk, so they are subtracted      * from the localBytesWrittenByMaps.      */
if|if
condition|(
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|TOTAL_REDUCES
argument_list|)
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|_impact
operator|=
operator|(
name|this
operator|.
name|_numLocalBytesWrittenByMaps
operator|-
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_OUTPUT_BYTES
argument_list|)
operator|)
operator|/
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_OUTPUT_BYTES
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|_impact
operator|=
name|this
operator|.
name|_numLocalBytesWrittenByMaps
operator|/
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_OUTPUT_BYTES
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|_impact
operator|>
name|normF
condition|)
block|{
name|this
operator|.
name|_impact
operator|=
literal|1.0
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|_impact
operator|=
name|this
operator|.
name|_impact
operator|/
name|normF
expr_stmt|;
block|}
return|return
name|this
operator|.
name|_impact
return|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.contrib.utils.perfadvisor.diagnostic_rules.DiagnosticRule#getAdvice()    */
annotation|@
name|Override
DECL|method|getPrescription ()
specifier|public
name|String
name|getPrescription
parameter_list|()
block|{
return|return
literal|"* Use combiner to lower the map output size.\n"
operator|+
literal|"* Increase map side sort buffer size ("
operator|+
name|MRJobConfig
operator|.
name|IO_SORT_MB
operator|+
literal|":"
operator|+
name|this
operator|.
name|_job
operator|.
name|getJobConf
argument_list|()
operator|.
name|getInt
argument_list|(
name|MRJobConfig
operator|.
name|IO_SORT_MB
argument_list|,
literal|0
argument_list|)
operator|+
literal|").\n"
operator|+
literal|") if number of Map Output Records are large. \n"
operator|+
literal|"* Increase ("
operator|+
name|MRJobConfig
operator|.
name|MAP_SORT_SPILL_PERCENT
operator|+
literal|":"
operator|+
name|this
operator|.
name|_job
operator|.
name|getJobConf
argument_list|()
operator|.
name|getInt
argument_list|(
name|MRJobConfig
operator|.
name|MAP_SORT_SPILL_PERCENT
argument_list|,
literal|0
argument_list|)
operator|+
literal|"), default 0.80 i.e. 80% of sort buffer size. \n"
return|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.contrib.utils.perfadvisor.diagnostic_rules.DiagnosticRule#getReferenceDetails()    */
annotation|@
name|Override
DECL|method|getReferenceDetails ()
specifier|public
name|String
name|getReferenceDetails
parameter_list|()
block|{
name|String
name|ref
init|=
literal|"* TotalMapOutputBytes: "
operator|+
name|this
operator|.
name|_job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_OUTPUT_BYTES
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"* Total Local Bytes Written by Maps: "
operator|+
name|this
operator|.
name|_numLocalBytesWrittenByMaps
operator|+
literal|"\n"
operator|+
literal|"* Impact: "
operator|+
name|truncate
argument_list|(
name|this
operator|.
name|_impact
argument_list|)
decl_stmt|;
return|return
name|ref
return|;
block|}
block|}
end_class

end_unit

