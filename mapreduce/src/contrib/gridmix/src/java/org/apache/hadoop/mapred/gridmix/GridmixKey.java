begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.gridmix
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataInputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|ResourceUsageMetrics
import|;
end_import

begin_class
DECL|class|GridmixKey
class|class
name|GridmixKey
extends|extends
name|GridmixRecord
block|{
DECL|field|REDUCE_SPEC
specifier|static
specifier|final
name|byte
name|REDUCE_SPEC
init|=
literal|0
decl_stmt|;
DECL|field|DATA
specifier|static
specifier|final
name|byte
name|DATA
init|=
literal|1
decl_stmt|;
DECL|field|META_BYTES
specifier|static
specifier|final
name|int
name|META_BYTES
init|=
literal|1
decl_stmt|;
DECL|field|type
specifier|private
name|byte
name|type
decl_stmt|;
DECL|field|partition
specifier|private
name|int
name|partition
decl_stmt|;
comment|// NOT serialized
DECL|field|spec
specifier|private
name|Spec
name|spec
init|=
operator|new
name|Spec
argument_list|()
decl_stmt|;
DECL|method|GridmixKey ()
name|GridmixKey
parameter_list|()
block|{
name|this
argument_list|(
name|DATA
argument_list|,
literal|1
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
DECL|method|GridmixKey (byte type, int size, long seed)
name|GridmixKey
parameter_list|(
name|byte
name|type
parameter_list|,
name|int
name|size
parameter_list|,
name|long
name|seed
parameter_list|)
block|{
name|super
argument_list|(
name|size
argument_list|,
name|seed
argument_list|)
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
comment|// setting type may change pcnt random bytes
name|setSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getSize ()
specifier|public
name|int
name|getSize
parameter_list|()
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|REDUCE_SPEC
case|:
return|return
name|super
operator|.
name|getSize
argument_list|()
operator|+
name|spec
operator|.
name|getSize
argument_list|()
operator|+
name|META_BYTES
return|;
case|case
name|DATA
case|:
return|return
name|super
operator|.
name|getSize
argument_list|()
operator|+
name|META_BYTES
return|;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Invalid type: "
operator|+
name|type
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setSize (int size)
specifier|public
name|void
name|setSize
parameter_list|(
name|int
name|size
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|REDUCE_SPEC
case|:
name|super
operator|.
name|setSize
argument_list|(
name|size
operator|-
operator|(
name|META_BYTES
operator|+
name|spec
operator|.
name|getSize
argument_list|()
operator|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DATA
case|:
name|super
operator|.
name|setSize
argument_list|(
name|size
operator|-
name|META_BYTES
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Invalid type: "
operator|+
name|type
argument_list|)
throw|;
block|}
block|}
comment|/**    * Partition is not serialized.    */
DECL|method|getPartition ()
specifier|public
name|int
name|getPartition
parameter_list|()
block|{
return|return
name|partition
return|;
block|}
DECL|method|setPartition (int partition)
specifier|public
name|void
name|setPartition
parameter_list|(
name|int
name|partition
parameter_list|)
block|{
name|this
operator|.
name|partition
operator|=
name|partition
expr_stmt|;
block|}
DECL|method|getReduceInputRecords ()
specifier|public
name|long
name|getReduceInputRecords
parameter_list|()
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
return|return
name|spec
operator|.
name|rec_in
return|;
block|}
DECL|method|setReduceInputRecords (long rec_in)
specifier|public
name|void
name|setReduceInputRecords
parameter_list|(
name|long
name|rec_in
parameter_list|)
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
specifier|final
name|int
name|origSize
init|=
name|getSize
argument_list|()
decl_stmt|;
name|spec
operator|.
name|rec_in
operator|=
name|rec_in
expr_stmt|;
name|setSize
argument_list|(
name|origSize
argument_list|)
expr_stmt|;
block|}
DECL|method|getReduceOutputRecords ()
specifier|public
name|long
name|getReduceOutputRecords
parameter_list|()
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
return|return
name|spec
operator|.
name|rec_out
return|;
block|}
DECL|method|setReduceOutputRecords (long rec_out)
specifier|public
name|void
name|setReduceOutputRecords
parameter_list|(
name|long
name|rec_out
parameter_list|)
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
specifier|final
name|int
name|origSize
init|=
name|getSize
argument_list|()
decl_stmt|;
name|spec
operator|.
name|rec_out
operator|=
name|rec_out
expr_stmt|;
name|setSize
argument_list|(
name|origSize
argument_list|)
expr_stmt|;
block|}
DECL|method|getReduceOutputBytes ()
specifier|public
name|long
name|getReduceOutputBytes
parameter_list|()
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
return|return
name|spec
operator|.
name|bytes_out
return|;
block|}
empty_stmt|;
DECL|method|setReduceOutputBytes (long b_out)
specifier|public
name|void
name|setReduceOutputBytes
parameter_list|(
name|long
name|b_out
parameter_list|)
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
specifier|final
name|int
name|origSize
init|=
name|getSize
argument_list|()
decl_stmt|;
name|spec
operator|.
name|bytes_out
operator|=
name|b_out
expr_stmt|;
name|setSize
argument_list|(
name|origSize
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get the {@link ResourceUsageMetrics} stored in the key.    */
DECL|method|getReduceResourceUsageMetrics ()
specifier|public
name|ResourceUsageMetrics
name|getReduceResourceUsageMetrics
parameter_list|()
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
return|return
name|spec
operator|.
name|metrics
return|;
block|}
comment|/**    * Store the {@link ResourceUsageMetrics} in the key.    */
DECL|method|setReduceResourceUsageMetrics (ResourceUsageMetrics metrics)
specifier|public
name|void
name|setReduceResourceUsageMetrics
parameter_list|(
name|ResourceUsageMetrics
name|metrics
parameter_list|)
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
name|spec
operator|.
name|setResourceUsageSpecification
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
block|}
DECL|method|getType ()
specifier|public
name|byte
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|setType (byte type)
specifier|public
name|void
name|setType
parameter_list|(
name|byte
name|type
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|int
name|origSize
init|=
name|getSize
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|REDUCE_SPEC
case|:
case|case
name|DATA
case|:
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Invalid type: "
operator|+
name|type
argument_list|)
throw|;
block|}
name|setSize
argument_list|(
name|origSize
argument_list|)
expr_stmt|;
block|}
DECL|method|setSpec (Spec spec)
specifier|public
name|void
name|setSpec
parameter_list|(
name|Spec
name|spec
parameter_list|)
block|{
assert|assert
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
assert|;
specifier|final
name|int
name|origSize
init|=
name|getSize
argument_list|()
decl_stmt|;
name|this
operator|.
name|spec
operator|.
name|set
argument_list|(
name|spec
argument_list|)
expr_stmt|;
name|setSize
argument_list|(
name|origSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|setType
argument_list|(
name|in
operator|.
name|readByte
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
condition|)
block|{
name|spec
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
specifier|final
name|byte
name|t
init|=
name|getType
argument_list|()
decl_stmt|;
name|out
operator|.
name|writeByte
argument_list|(
name|t
argument_list|)
expr_stmt|;
if|if
condition|(
name|REDUCE_SPEC
operator|==
name|t
condition|)
block|{
name|spec
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|fixedBytes ()
name|int
name|fixedBytes
parameter_list|()
block|{
return|return
name|super
operator|.
name|fixedBytes
argument_list|()
operator|+
operator|(
name|REDUCE_SPEC
operator|==
name|getType
argument_list|()
condition|?
name|spec
operator|.
name|getSize
argument_list|()
else|:
literal|0
operator|)
operator|+
name|META_BYTES
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (GridmixRecord other)
specifier|public
name|int
name|compareTo
parameter_list|(
name|GridmixRecord
name|other
parameter_list|)
block|{
specifier|final
name|GridmixKey
name|o
init|=
operator|(
name|GridmixKey
operator|)
name|other
decl_stmt|;
specifier|final
name|byte
name|t1
init|=
name|getType
argument_list|()
decl_stmt|;
specifier|final
name|byte
name|t2
init|=
name|o
operator|.
name|getType
argument_list|()
decl_stmt|;
if|if
condition|(
name|t1
operator|!=
name|t2
condition|)
block|{
return|return
name|t1
operator|-
name|t2
return|;
block|}
return|return
name|super
operator|.
name|compareTo
argument_list|(
name|other
argument_list|)
return|;
block|}
comment|/**    * Note that while the spec is not explicitly included, changing the spec    * may change its size, which will affect equality.    */
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|other
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|other
operator|!=
literal|null
operator|&&
name|other
operator|.
name|getClass
argument_list|()
operator|==
name|getClass
argument_list|()
condition|)
block|{
specifier|final
name|GridmixKey
name|o
init|=
operator|(
operator|(
name|GridmixKey
operator|)
name|other
operator|)
decl_stmt|;
return|return
name|getType
argument_list|()
operator|==
name|o
operator|.
name|getType
argument_list|()
operator|&&
name|super
operator|.
name|equals
argument_list|(
name|o
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|super
operator|.
name|hashCode
argument_list|()
operator|^
name|getType
argument_list|()
return|;
block|}
DECL|class|Spec
specifier|public
specifier|static
class|class
name|Spec
implements|implements
name|Writable
block|{
DECL|field|rec_in
name|long
name|rec_in
decl_stmt|;
DECL|field|rec_out
name|long
name|rec_out
decl_stmt|;
DECL|field|bytes_out
name|long
name|bytes_out
decl_stmt|;
DECL|field|metrics
specifier|private
name|ResourceUsageMetrics
name|metrics
init|=
literal|null
decl_stmt|;
DECL|field|sizeOfResourceUsageMetrics
specifier|private
name|int
name|sizeOfResourceUsageMetrics
init|=
literal|0
decl_stmt|;
DECL|method|Spec ()
specifier|public
name|Spec
parameter_list|()
block|{ }
DECL|method|set (Spec other)
specifier|public
name|void
name|set
parameter_list|(
name|Spec
name|other
parameter_list|)
block|{
name|rec_in
operator|=
name|other
operator|.
name|rec_in
expr_stmt|;
name|bytes_out
operator|=
name|other
operator|.
name|bytes_out
expr_stmt|;
name|rec_out
operator|=
name|other
operator|.
name|rec_out
expr_stmt|;
name|setResourceUsageSpecification
argument_list|(
name|other
operator|.
name|metrics
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets the {@link ResourceUsageMetrics} for this {@link Spec}.      */
DECL|method|setResourceUsageSpecification (ResourceUsageMetrics metrics)
specifier|public
name|void
name|setResourceUsageSpecification
parameter_list|(
name|ResourceUsageMetrics
name|metrics
parameter_list|)
block|{
name|this
operator|.
name|metrics
operator|=
name|metrics
expr_stmt|;
if|if
condition|(
name|metrics
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|sizeOfResourceUsageMetrics
operator|=
name|metrics
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|sizeOfResourceUsageMetrics
operator|=
literal|0
expr_stmt|;
block|}
block|}
DECL|method|getSize ()
specifier|public
name|int
name|getSize
parameter_list|()
block|{
return|return
name|WritableUtils
operator|.
name|getVIntSize
argument_list|(
name|rec_in
argument_list|)
operator|+
name|WritableUtils
operator|.
name|getVIntSize
argument_list|(
name|rec_out
argument_list|)
operator|+
name|WritableUtils
operator|.
name|getVIntSize
argument_list|(
name|bytes_out
argument_list|)
operator|+
name|WritableUtils
operator|.
name|getVIntSize
argument_list|(
name|sizeOfResourceUsageMetrics
argument_list|)
operator|+
name|sizeOfResourceUsageMetrics
return|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|rec_in
operator|=
name|WritableUtils
operator|.
name|readVLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|rec_out
operator|=
name|WritableUtils
operator|.
name|readVLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|bytes_out
operator|=
name|WritableUtils
operator|.
name|readVLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|sizeOfResourceUsageMetrics
operator|=
name|WritableUtils
operator|.
name|readVInt
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|sizeOfResourceUsageMetrics
operator|>
literal|0
condition|)
block|{
name|metrics
operator|=
operator|new
name|ResourceUsageMetrics
argument_list|()
expr_stmt|;
name|metrics
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|WritableUtils
operator|.
name|writeVLong
argument_list|(
name|out
argument_list|,
name|rec_in
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVLong
argument_list|(
name|out
argument_list|,
name|rec_out
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVLong
argument_list|(
name|out
argument_list|,
name|bytes_out
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|out
argument_list|,
name|sizeOfResourceUsageMetrics
argument_list|)
expr_stmt|;
if|if
condition|(
name|sizeOfResourceUsageMetrics
operator|>
literal|0
condition|)
block|{
name|metrics
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|Comparator
specifier|public
specifier|static
class|class
name|Comparator
extends|extends
name|GridmixRecord
operator|.
name|Comparator
block|{
DECL|field|di
specifier|private
specifier|final
name|DataInputBuffer
name|di
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
DECL|field|reset
specifier|private
specifier|final
name|byte
index|[]
name|reset
init|=
name|di
operator|.
name|getData
argument_list|()
decl_stmt|;
DECL|method|Comparator ()
specifier|public
name|Comparator
parameter_list|()
block|{
name|super
argument_list|(
name|GridmixKey
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|compare (byte[] b1, int s1, int l1, byte[] b2, int s2, int l2)
specifier|public
name|int
name|compare
parameter_list|(
name|byte
index|[]
name|b1
parameter_list|,
name|int
name|s1
parameter_list|,
name|int
name|l1
parameter_list|,
name|byte
index|[]
name|b2
parameter_list|,
name|int
name|s2
parameter_list|,
name|int
name|l2
parameter_list|)
block|{
try|try
block|{
name|di
operator|.
name|reset
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|,
name|l1
argument_list|)
expr_stmt|;
specifier|final
name|int
name|x1
init|=
name|WritableUtils
operator|.
name|readVInt
argument_list|(
name|di
argument_list|)
decl_stmt|;
name|di
operator|.
name|reset
argument_list|(
name|b2
argument_list|,
name|s2
argument_list|,
name|l2
argument_list|)
expr_stmt|;
specifier|final
name|int
name|x2
init|=
name|WritableUtils
operator|.
name|readVInt
argument_list|(
name|di
argument_list|)
decl_stmt|;
specifier|final
name|int
name|ret
init|=
operator|(
name|b1
index|[
name|s1
operator|+
name|x1
index|]
operator|!=
name|b2
index|[
name|s2
operator|+
name|x2
index|]
operator|)
condition|?
name|b1
index|[
name|s1
operator|+
name|x1
index|]
operator|-
name|b2
index|[
name|s2
operator|+
name|x2
index|]
else|:
name|super
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|,
name|x1
argument_list|,
name|b2
argument_list|,
name|s2
argument_list|,
name|x2
argument_list|)
decl_stmt|;
name|di
operator|.
name|reset
argument_list|(
name|reset
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
static|static
block|{
name|WritableComparator
operator|.
name|define
argument_list|(
name|GridmixKey
operator|.
name|class
argument_list|,
operator|new
name|Comparator
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

