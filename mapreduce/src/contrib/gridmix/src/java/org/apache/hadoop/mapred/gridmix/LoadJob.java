begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.gridmix
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|NullWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
operator|.
name|emulators
operator|.
name|resourceusage
operator|.
name|ResourceUsageMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Mapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Reducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskInputOutputContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|server
operator|.
name|tasktracker
operator|.
name|TTConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|util
operator|.
name|ResourceCalculatorPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|JobStory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|ResourceUsageMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|TaskInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_comment
comment|/**  * Synthetic job generated from a trace description.  */
end_comment

begin_class
DECL|class|LoadJob
class|class
name|LoadJob
extends|extends
name|GridmixJob
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|LoadJob
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|LoadJob (final Configuration conf, long submissionMillis, final JobStory jobdesc, Path outRoot, UserGroupInformation ugi, final int seq)
specifier|public
name|LoadJob
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|,
name|long
name|submissionMillis
parameter_list|,
specifier|final
name|JobStory
name|jobdesc
parameter_list|,
name|Path
name|outRoot
parameter_list|,
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|conf
argument_list|,
name|submissionMillis
argument_list|,
name|jobdesc
argument_list|,
name|outRoot
argument_list|,
name|ugi
argument_list|,
name|seq
argument_list|)
expr_stmt|;
block|}
DECL|method|call ()
specifier|public
name|Job
name|call
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|ClassNotFoundException
block|{
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Job
argument_list|>
argument_list|()
block|{
specifier|public
name|Job
name|run
parameter_list|()
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
throws|,
name|InterruptedException
block|{
name|job
operator|.
name|setMapperClass
argument_list|(
name|LoadMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setReducerClass
argument_list|(
name|LoadReducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setNumReduceTasks
argument_list|(
name|jobdesc
operator|.
name|getNumberReduces
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|setMapOutputKeyClass
argument_list|(
name|GridmixKey
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setMapOutputValueClass
argument_list|(
name|GridmixRecord
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setSortComparatorClass
argument_list|(
name|GridmixKey
operator|.
name|Comparator
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setGroupingComparatorClass
argument_list|(
name|SpecGroupingComparator
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setInputFormatClass
argument_list|(
name|LoadInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputFormatClass
argument_list|(
name|RawBytesOutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setPartitionerClass
argument_list|(
name|DraftPartitioner
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setJarByClass
argument_list|(
name|LoadJob
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setBoolean
argument_list|(
name|Job
operator|.
name|USED_GENERIC_PARSER
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|job
argument_list|,
name|outdir
argument_list|)
expr_stmt|;
name|job
operator|.
name|submit
argument_list|()
expr_stmt|;
return|return
name|job
return|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|job
return|;
block|}
annotation|@
name|Override
DECL|method|canEmulateCompression ()
specifier|protected
name|boolean
name|canEmulateCompression
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
comment|/**    * This is a progress based resource usage matcher.    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|class|ResourceUsageMatcherRunner
specifier|static
class|class
name|ResourceUsageMatcherRunner
extends|extends
name|Thread
block|{
DECL|field|matcher
specifier|private
specifier|final
name|ResourceUsageMatcher
name|matcher
decl_stmt|;
DECL|field|progress
specifier|private
specifier|final
name|Progressive
name|progress
decl_stmt|;
DECL|field|sleepTime
specifier|private
specifier|final
name|long
name|sleepTime
decl_stmt|;
DECL|field|SLEEP_CONFIG
specifier|private
specifier|static
specifier|final
name|String
name|SLEEP_CONFIG
init|=
literal|"gridmix.emulators.resource-usage.sleep-duration"
decl_stmt|;
DECL|field|DEFAULT_SLEEP_TIME
specifier|private
specifier|static
specifier|final
name|long
name|DEFAULT_SLEEP_TIME
init|=
literal|100
decl_stmt|;
comment|// 100ms
DECL|method|ResourceUsageMatcherRunner (final TaskInputOutputContext context, ResourceUsageMetrics metrics)
name|ResourceUsageMatcherRunner
parameter_list|(
specifier|final
name|TaskInputOutputContext
name|context
parameter_list|,
name|ResourceUsageMetrics
name|metrics
parameter_list|)
block|{
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
comment|// set the resource calculator plugin
name|Class
argument_list|<
name|?
extends|extends
name|ResourceCalculatorPlugin
argument_list|>
name|clazz
init|=
name|conf
operator|.
name|getClass
argument_list|(
name|TTConfig
operator|.
name|TT_RESOURCE_CALCULATOR_PLUGIN
argument_list|,
literal|null
argument_list|,
name|ResourceCalculatorPlugin
operator|.
name|class
argument_list|)
decl_stmt|;
name|ResourceCalculatorPlugin
name|plugin
init|=
name|ResourceCalculatorPlugin
operator|.
name|getResourceCalculatorPlugin
argument_list|(
name|clazz
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// set the other parameters
name|this
operator|.
name|sleepTime
operator|=
name|conf
operator|.
name|getLong
argument_list|(
name|SLEEP_CONFIG
argument_list|,
name|DEFAULT_SLEEP_TIME
argument_list|)
expr_stmt|;
name|progress
operator|=
operator|new
name|Progressive
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|float
name|getProgress
parameter_list|()
block|{
return|return
name|context
operator|.
name|getProgress
argument_list|()
return|;
block|}
block|}
expr_stmt|;
comment|// instantiate a resource-usage-matcher
name|matcher
operator|=
operator|new
name|ResourceUsageMatcher
argument_list|()
expr_stmt|;
name|matcher
operator|.
name|configure
argument_list|(
name|conf
argument_list|,
name|plugin
argument_list|,
name|metrics
argument_list|,
name|progress
argument_list|)
expr_stmt|;
block|}
DECL|method|match ()
specifier|protected
name|void
name|match
parameter_list|()
throws|throws
name|Exception
block|{
comment|// match the resource usage
name|matcher
operator|.
name|matchResourceUsage
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Resource usage matcher thread started."
argument_list|)
expr_stmt|;
try|try
block|{
while|while
condition|(
name|progress
operator|.
name|getProgress
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|// match
name|match
argument_list|()
expr_stmt|;
comment|// sleep for some time
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|sleepTime
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{}
block|}
comment|// match for progress = 1
name|match
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Resource usage emulation complete! Matcher exiting"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception while running the resource-usage-emulation matcher"
operator|+
literal|" thread! Exiting."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Makes sure that the TaskTracker doesn't kill the map/reduce tasks while
comment|// they are emulating
DECL|class|StatusReporter
specifier|private
specifier|static
class|class
name|StatusReporter
extends|extends
name|Thread
block|{
DECL|field|context
specifier|private
name|TaskAttemptContext
name|context
decl_stmt|;
DECL|method|StatusReporter (TaskAttemptContext context)
name|StatusReporter
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Status reporter thread started."
argument_list|)
expr_stmt|;
try|try
block|{
while|while
condition|(
name|context
operator|.
name|getProgress
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|// report progress
name|context
operator|.
name|progress
argument_list|()
expr_stmt|;
comment|// sleep for some time
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// sleep for 100ms
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{}
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Status reporter thread exiting"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception while running the status reporter thread!"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|LoadMapper
specifier|public
specifier|static
class|class
name|LoadMapper
extends|extends
name|Mapper
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|,
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|acc
specifier|private
name|double
name|acc
decl_stmt|;
DECL|field|ratio
specifier|private
name|double
name|ratio
decl_stmt|;
DECL|field|reduces
specifier|private
specifier|final
name|ArrayList
argument_list|<
name|RecordFactory
argument_list|>
name|reduces
init|=
operator|new
name|ArrayList
argument_list|<
name|RecordFactory
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|r
specifier|private
specifier|final
name|Random
name|r
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
DECL|field|key
specifier|private
specifier|final
name|GridmixKey
name|key
init|=
operator|new
name|GridmixKey
argument_list|()
decl_stmt|;
DECL|field|val
specifier|private
specifier|final
name|GridmixRecord
name|val
init|=
operator|new
name|GridmixRecord
argument_list|()
decl_stmt|;
DECL|field|matcher
specifier|private
name|ResourceUsageMatcherRunner
name|matcher
init|=
literal|null
decl_stmt|;
DECL|field|reporter
specifier|private
name|StatusReporter
name|reporter
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
DECL|method|setup (Context ctxt)
specifier|protected
name|void
name|setup
parameter_list|(
name|Context
name|ctxt
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
specifier|final
name|Configuration
name|conf
init|=
name|ctxt
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|LoadSplit
name|split
init|=
operator|(
name|LoadSplit
operator|)
name|ctxt
operator|.
name|getInputSplit
argument_list|()
decl_stmt|;
specifier|final
name|int
name|maps
init|=
name|split
operator|.
name|getMapCount
argument_list|()
decl_stmt|;
specifier|final
name|long
index|[]
name|reduceBytes
init|=
name|split
operator|.
name|getOutputBytes
argument_list|()
decl_stmt|;
specifier|final
name|long
index|[]
name|reduceRecords
init|=
name|split
operator|.
name|getOutputRecords
argument_list|()
decl_stmt|;
comment|// enable gridmix map output record for compression
specifier|final
name|boolean
name|emulateMapOutputCompression
init|=
name|CompressionEmulationUtil
operator|.
name|isCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|)
operator|&&
name|conf
operator|.
name|getBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|float
name|compressionRatio
init|=
literal|1.0f
decl_stmt|;
if|if
condition|(
name|emulateMapOutputCompression
condition|)
block|{
name|compressionRatio
operator|=
name|CompressionEmulationUtil
operator|.
name|getMapOutputCompressionEmulationRatio
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"GridMix is configured to use a compression ratio of "
operator|+
name|compressionRatio
operator|+
literal|" for the map output data."
argument_list|)
expr_stmt|;
name|key
operator|.
name|setCompressibility
argument_list|(
literal|true
argument_list|,
name|compressionRatio
argument_list|)
expr_stmt|;
name|val
operator|.
name|setCompressibility
argument_list|(
literal|true
argument_list|,
name|compressionRatio
argument_list|)
expr_stmt|;
block|}
name|long
name|totalRecords
init|=
literal|0L
decl_stmt|;
specifier|final
name|int
name|nReduces
init|=
name|ctxt
operator|.
name|getNumReduceTasks
argument_list|()
decl_stmt|;
if|if
condition|(
name|nReduces
operator|>
literal|0
condition|)
block|{
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|int
name|id
init|=
name|split
operator|.
name|getId
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nReduces
condition|;
operator|++
name|i
control|)
block|{
specifier|final
name|GridmixKey
operator|.
name|Spec
name|spec
init|=
operator|new
name|GridmixKey
operator|.
name|Spec
argument_list|()
decl_stmt|;
if|if
condition|(
name|i
operator|==
name|id
condition|)
block|{
name|spec
operator|.
name|bytes_out
operator|=
name|split
operator|.
name|getReduceBytes
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|spec
operator|.
name|rec_out
operator|=
name|split
operator|.
name|getReduceRecords
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|spec
operator|.
name|setResourceUsageSpecification
argument_list|(
name|split
operator|.
name|getReduceResourceUsageMetrics
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|idx
expr_stmt|;
name|id
operator|+=
name|maps
expr_stmt|;
block|}
comment|// set the map output bytes such that the final reduce input bytes
comment|// match the expected value obtained from the original job
name|long
name|mapOutputBytes
init|=
name|reduceBytes
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|emulateMapOutputCompression
condition|)
block|{
name|mapOutputBytes
operator|/=
name|compressionRatio
expr_stmt|;
block|}
name|reduces
operator|.
name|add
argument_list|(
operator|new
name|IntermediateRecordFactory
argument_list|(
operator|new
name|AvgRecordFactory
argument_list|(
name|mapOutputBytes
argument_list|,
name|reduceRecords
index|[
name|i
index|]
argument_list|,
name|conf
argument_list|,
literal|5
operator|*
literal|1024
argument_list|)
argument_list|,
name|i
argument_list|,
name|reduceRecords
index|[
name|i
index|]
argument_list|,
name|spec
argument_list|,
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|totalRecords
operator|+=
name|reduceRecords
index|[
name|i
index|]
expr_stmt|;
block|}
block|}
else|else
block|{
name|long
name|mapOutputBytes
init|=
name|reduceBytes
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
name|emulateMapOutputCompression
condition|)
block|{
name|mapOutputBytes
operator|/=
name|compressionRatio
expr_stmt|;
block|}
name|reduces
operator|.
name|add
argument_list|(
operator|new
name|AvgRecordFactory
argument_list|(
name|mapOutputBytes
argument_list|,
name|reduceRecords
index|[
literal|0
index|]
argument_list|,
name|conf
argument_list|,
literal|5
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|totalRecords
operator|=
name|reduceRecords
index|[
literal|0
index|]
expr_stmt|;
block|}
specifier|final
name|long
name|splitRecords
init|=
name|split
operator|.
name|getInputRecords
argument_list|()
decl_stmt|;
name|int
name|missingRecSize
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|AvgRecordFactory
operator|.
name|GRIDMIX_MISSING_REC_SIZE
argument_list|,
literal|64
operator|*
literal|1024
argument_list|)
decl_stmt|;
specifier|final
name|long
name|inputRecords
init|=
operator|(
name|splitRecords
operator|<=
literal|0
operator|&&
name|split
operator|.
name|getLength
argument_list|()
operator|>=
literal|0
operator|)
condition|?
name|Math
operator|.
name|max
argument_list|(
literal|1
argument_list|,
name|split
operator|.
name|getLength
argument_list|()
operator|/
name|missingRecSize
argument_list|)
else|:
name|splitRecords
decl_stmt|;
name|ratio
operator|=
name|totalRecords
operator|/
operator|(
literal|1.0
operator|*
name|inputRecords
operator|)
expr_stmt|;
name|acc
operator|=
literal|0.0
expr_stmt|;
name|matcher
operator|=
operator|new
name|ResourceUsageMatcherRunner
argument_list|(
name|ctxt
argument_list|,
name|split
operator|.
name|getMapResourceUsageMetrics
argument_list|()
argument_list|)
expr_stmt|;
comment|// start the status reporter thread
name|reporter
operator|=
operator|new
name|StatusReporter
argument_list|(
name|ctxt
argument_list|)
expr_stmt|;
name|reporter
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|map (NullWritable ignored, GridmixRecord rec, Context context)
specifier|public
name|void
name|map
parameter_list|(
name|NullWritable
name|ignored
parameter_list|,
name|GridmixRecord
name|rec
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|acc
operator|+=
name|ratio
expr_stmt|;
while|while
condition|(
name|acc
operator|>=
literal|1.0
operator|&&
operator|!
name|reduces
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|key
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|int
name|idx
init|=
name|r
operator|.
name|nextInt
argument_list|(
name|reduces
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|RecordFactory
name|f
init|=
name|reduces
operator|.
name|get
argument_list|(
name|idx
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|f
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
condition|)
block|{
name|reduces
operator|.
name|remove
argument_list|(
name|idx
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|context
operator|.
name|write
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|acc
operator|-=
literal|1.0
expr_stmt|;
comment|// match inline
try|try
block|{
name|matcher
operator|.
name|match
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Error in resource usage emulation! Message: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|cleanup (Context context)
specifier|public
name|void
name|cleanup
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
for|for
control|(
name|RecordFactory
name|factory
range|:
name|reduces
control|)
block|{
name|key
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
name|factory
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
condition|)
block|{
name|context
operator|.
name|write
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|key
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
comment|// match inline
try|try
block|{
name|matcher
operator|.
name|match
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Error in resource usage emulation! Message: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// start the matcher thread since the map phase ends here
name|matcher
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|LoadReducer
specifier|public
specifier|static
class|class
name|LoadReducer
extends|extends
name|Reducer
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|,
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|r
specifier|private
specifier|final
name|Random
name|r
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
DECL|field|val
specifier|private
specifier|final
name|GridmixRecord
name|val
init|=
operator|new
name|GridmixRecord
argument_list|()
decl_stmt|;
DECL|field|acc
specifier|private
name|double
name|acc
decl_stmt|;
DECL|field|ratio
specifier|private
name|double
name|ratio
decl_stmt|;
DECL|field|factory
specifier|private
name|RecordFactory
name|factory
decl_stmt|;
DECL|field|matcher
specifier|private
name|ResourceUsageMatcherRunner
name|matcher
init|=
literal|null
decl_stmt|;
DECL|field|reporter
specifier|private
name|StatusReporter
name|reporter
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
DECL|method|setup (Context context)
specifier|protected
name|void
name|setup
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
if|if
condition|(
operator|!
name|context
operator|.
name|nextKey
argument_list|()
operator|||
name|context
operator|.
name|getCurrentKey
argument_list|()
operator|.
name|getType
argument_list|()
operator|!=
name|GridmixKey
operator|.
name|REDUCE_SPEC
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Missing reduce spec"
argument_list|)
throw|;
block|}
name|long
name|outBytes
init|=
literal|0L
decl_stmt|;
name|long
name|outRecords
init|=
literal|0L
decl_stmt|;
name|long
name|inRecords
init|=
literal|0L
decl_stmt|;
name|ResourceUsageMetrics
name|metrics
init|=
operator|new
name|ResourceUsageMetrics
argument_list|()
decl_stmt|;
for|for
control|(
name|GridmixRecord
name|ignored
range|:
name|context
operator|.
name|getValues
argument_list|()
control|)
block|{
specifier|final
name|GridmixKey
name|spec
init|=
name|context
operator|.
name|getCurrentKey
argument_list|()
decl_stmt|;
name|inRecords
operator|+=
name|spec
operator|.
name|getReduceInputRecords
argument_list|()
expr_stmt|;
name|outBytes
operator|+=
name|spec
operator|.
name|getReduceOutputBytes
argument_list|()
expr_stmt|;
name|outRecords
operator|+=
name|spec
operator|.
name|getReduceOutputRecords
argument_list|()
expr_stmt|;
if|if
condition|(
name|spec
operator|.
name|getReduceResourceUsageMetrics
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|metrics
operator|=
name|spec
operator|.
name|getReduceResourceUsageMetrics
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
literal|0
operator|==
name|outRecords
operator|&&
name|inRecords
operator|>
literal|0
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Spec output bytes w/o records. Using input record count"
argument_list|)
expr_stmt|;
name|outRecords
operator|=
name|inRecords
expr_stmt|;
block|}
comment|// enable gridmix reduce output record for compression
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|CompressionEmulationUtil
operator|.
name|isCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|)
operator|&&
name|FileOutputFormat
operator|.
name|getCompressOutput
argument_list|(
name|context
argument_list|)
condition|)
block|{
name|float
name|compressionRatio
init|=
name|CompressionEmulationUtil
operator|.
name|getReduceOutputCompressionEmulationRatio
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"GridMix is configured to use a compression ratio of "
operator|+
name|compressionRatio
operator|+
literal|" for the reduce output data."
argument_list|)
expr_stmt|;
name|val
operator|.
name|setCompressibility
argument_list|(
literal|true
argument_list|,
name|compressionRatio
argument_list|)
expr_stmt|;
comment|// Set the actual output data size to make sure that the actual output
comment|// data size is same after compression
name|outBytes
operator|/=
name|compressionRatio
expr_stmt|;
block|}
name|factory
operator|=
operator|new
name|AvgRecordFactory
argument_list|(
name|outBytes
argument_list|,
name|outRecords
argument_list|,
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|5
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|ratio
operator|=
name|outRecords
operator|/
operator|(
literal|1.0
operator|*
name|inRecords
operator|)
expr_stmt|;
name|acc
operator|=
literal|0.0
expr_stmt|;
name|matcher
operator|=
operator|new
name|ResourceUsageMatcherRunner
argument_list|(
name|context
argument_list|,
name|metrics
argument_list|)
expr_stmt|;
comment|// start the status reporter thread
name|reporter
operator|=
operator|new
name|StatusReporter
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|reporter
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|reduce (GridmixKey key, Iterable<GridmixRecord> values, Context context)
specifier|protected
name|void
name|reduce
parameter_list|(
name|GridmixKey
name|key
parameter_list|,
name|Iterable
argument_list|<
name|GridmixRecord
argument_list|>
name|values
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
for|for
control|(
name|GridmixRecord
name|ignored
range|:
name|values
control|)
block|{
name|acc
operator|+=
name|ratio
expr_stmt|;
while|while
condition|(
name|acc
operator|>=
literal|1.0
operator|&&
name|factory
operator|.
name|next
argument_list|(
literal|null
argument_list|,
name|val
argument_list|)
condition|)
block|{
name|context
operator|.
name|write
argument_list|(
name|NullWritable
operator|.
name|get
argument_list|()
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|acc
operator|-=
literal|1.0
expr_stmt|;
comment|// match inline
try|try
block|{
name|matcher
operator|.
name|match
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Error in resource usage emulation! Message: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|cleanup (Context context)
specifier|protected
name|void
name|cleanup
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|val
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
name|factory
operator|.
name|next
argument_list|(
literal|null
argument_list|,
name|val
argument_list|)
condition|)
block|{
name|context
operator|.
name|write
argument_list|(
name|NullWritable
operator|.
name|get
argument_list|()
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|val
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
comment|// match inline
try|try
block|{
name|matcher
operator|.
name|match
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Error in resource usage emulation! Message: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|class|LoadRecordReader
specifier|static
class|class
name|LoadRecordReader
extends|extends
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|factory
specifier|private
name|RecordFactory
name|factory
decl_stmt|;
DECL|field|r
specifier|private
specifier|final
name|Random
name|r
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
DECL|field|val
specifier|private
specifier|final
name|GridmixRecord
name|val
init|=
operator|new
name|GridmixRecord
argument_list|()
decl_stmt|;
DECL|method|LoadRecordReader ()
specifier|public
name|LoadRecordReader
parameter_list|()
block|{ }
annotation|@
name|Override
DECL|method|initialize (InputSplit genericSplit, TaskAttemptContext ctxt)
specifier|public
name|void
name|initialize
parameter_list|(
name|InputSplit
name|genericSplit
parameter_list|,
name|TaskAttemptContext
name|ctxt
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
specifier|final
name|LoadSplit
name|split
init|=
operator|(
name|LoadSplit
operator|)
name|genericSplit
decl_stmt|;
specifier|final
name|Configuration
name|conf
init|=
name|ctxt
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|factory
operator|=
operator|new
name|ReadRecordFactory
argument_list|(
name|split
operator|.
name|getLength
argument_list|()
argument_list|,
name|split
operator|.
name|getInputRecords
argument_list|()
argument_list|,
operator|new
name|FileQueue
argument_list|(
name|split
argument_list|,
name|conf
argument_list|)
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|nextKeyValue ()
specifier|public
name|boolean
name|nextKeyValue
parameter_list|()
throws|throws
name|IOException
block|{
name|val
operator|.
name|setSeed
argument_list|(
name|r
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|factory
operator|.
name|next
argument_list|(
literal|null
argument_list|,
name|val
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|factory
operator|.
name|getProgress
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentKey ()
specifier|public
name|NullWritable
name|getCurrentKey
parameter_list|()
block|{
return|return
name|NullWritable
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentValue ()
specifier|public
name|GridmixRecord
name|getCurrentValue
parameter_list|()
block|{
return|return
name|val
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|factory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|LoadInputFormat
specifier|static
class|class
name|LoadInputFormat
extends|extends
name|InputFormat
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
block|{
annotation|@
name|Override
DECL|method|getSplits (JobContext jobCtxt)
specifier|public
name|List
argument_list|<
name|InputSplit
argument_list|>
name|getSplits
parameter_list|(
name|JobContext
name|jobCtxt
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|pullDescription
argument_list|(
name|jobCtxt
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createRecordReader ( InputSplit split, final TaskAttemptContext taskContext)
specifier|public
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
name|createRecordReader
parameter_list|(
name|InputSplit
name|split
parameter_list|,
specifier|final
name|TaskAttemptContext
name|taskContext
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|LoadRecordReader
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|buildSplits (FilePool inputDir)
name|void
name|buildSplits
parameter_list|(
name|FilePool
name|inputDir
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|mapInputBytesTotal
init|=
literal|0L
decl_stmt|;
name|long
name|mapOutputBytesTotal
init|=
literal|0L
decl_stmt|;
name|long
name|mapOutputRecordsTotal
init|=
literal|0L
decl_stmt|;
specifier|final
name|JobStory
name|jobdesc
init|=
name|getJobDesc
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|jobdesc
condition|)
block|{
return|return;
block|}
specifier|final
name|int
name|maps
init|=
name|jobdesc
operator|.
name|getNumberMaps
argument_list|()
decl_stmt|;
specifier|final
name|int
name|reds
init|=
name|jobdesc
operator|.
name|getNumberReduces
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maps
condition|;
operator|++
name|i
control|)
block|{
specifier|final
name|TaskInfo
name|info
init|=
name|jobdesc
operator|.
name|getTaskInfo
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|mapInputBytesTotal
operator|+=
name|info
operator|.
name|getInputBytes
argument_list|()
expr_stmt|;
name|mapOutputBytesTotal
operator|+=
name|info
operator|.
name|getOutputBytes
argument_list|()
expr_stmt|;
name|mapOutputRecordsTotal
operator|+=
name|info
operator|.
name|getOutputRecords
argument_list|()
expr_stmt|;
block|}
specifier|final
name|double
index|[]
name|reduceRecordRatio
init|=
operator|new
name|double
index|[
name|reds
index|]
decl_stmt|;
specifier|final
name|double
index|[]
name|reduceByteRatio
init|=
operator|new
name|double
index|[
name|reds
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reds
condition|;
operator|++
name|i
control|)
block|{
specifier|final
name|TaskInfo
name|info
init|=
name|jobdesc
operator|.
name|getTaskInfo
argument_list|(
name|TaskType
operator|.
name|REDUCE
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|reduceByteRatio
index|[
name|i
index|]
operator|=
name|info
operator|.
name|getInputBytes
argument_list|()
operator|/
operator|(
literal|1.0
operator|*
name|mapOutputBytesTotal
operator|)
expr_stmt|;
name|reduceRecordRatio
index|[
name|i
index|]
operator|=
name|info
operator|.
name|getInputRecords
argument_list|()
operator|/
operator|(
literal|1.0
operator|*
name|mapOutputRecordsTotal
operator|)
expr_stmt|;
block|}
specifier|final
name|InputStriper
name|striper
init|=
operator|new
name|InputStriper
argument_list|(
name|inputDir
argument_list|,
name|mapInputBytesTotal
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|InputSplit
argument_list|>
name|splits
init|=
operator|new
name|ArrayList
argument_list|<
name|InputSplit
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maps
condition|;
operator|++
name|i
control|)
block|{
specifier|final
name|int
name|nSpec
init|=
name|reds
operator|/
name|maps
operator|+
operator|(
operator|(
name|reds
operator|%
name|maps
operator|)
operator|>
name|i
condition|?
literal|1
else|:
literal|0
operator|)
decl_stmt|;
specifier|final
name|long
index|[]
name|specBytes
init|=
operator|new
name|long
index|[
name|nSpec
index|]
decl_stmt|;
specifier|final
name|long
index|[]
name|specRecords
init|=
operator|new
name|long
index|[
name|nSpec
index|]
decl_stmt|;
specifier|final
name|ResourceUsageMetrics
index|[]
name|metrics
init|=
operator|new
name|ResourceUsageMetrics
index|[
name|nSpec
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|nSpec
condition|;
operator|++
name|j
control|)
block|{
specifier|final
name|TaskInfo
name|info
init|=
name|jobdesc
operator|.
name|getTaskInfo
argument_list|(
name|TaskType
operator|.
name|REDUCE
argument_list|,
name|i
operator|+
name|j
operator|*
name|maps
argument_list|)
decl_stmt|;
name|specBytes
index|[
name|j
index|]
operator|=
name|info
operator|.
name|getOutputBytes
argument_list|()
expr_stmt|;
name|specRecords
index|[
name|j
index|]
operator|=
name|info
operator|.
name|getOutputRecords
argument_list|()
expr_stmt|;
name|metrics
index|[
name|j
index|]
operator|=
name|info
operator|.
name|getResourceUsageMetrics
argument_list|()
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"SPEC(%d) %d -> %d %d %d"
argument_list|,
name|id
argument_list|()
argument_list|,
name|i
argument_list|,
name|i
operator|+
name|j
operator|*
name|maps
argument_list|,
name|info
operator|.
name|getOutputRecords
argument_list|()
argument_list|,
name|info
operator|.
name|getOutputBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|final
name|TaskInfo
name|info
init|=
name|jobdesc
operator|.
name|getTaskInfo
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|splits
operator|.
name|add
argument_list|(
operator|new
name|LoadSplit
argument_list|(
name|striper
operator|.
name|splitFor
argument_list|(
name|inputDir
argument_list|,
name|info
operator|.
name|getInputBytes
argument_list|()
argument_list|,
literal|3
argument_list|)
argument_list|,
name|maps
argument_list|,
name|i
argument_list|,
name|info
operator|.
name|getInputBytes
argument_list|()
argument_list|,
name|info
operator|.
name|getInputRecords
argument_list|()
argument_list|,
name|info
operator|.
name|getOutputBytes
argument_list|()
argument_list|,
name|info
operator|.
name|getOutputRecords
argument_list|()
argument_list|,
name|reduceByteRatio
argument_list|,
name|reduceRecordRatio
argument_list|,
name|specBytes
argument_list|,
name|specRecords
argument_list|,
name|info
operator|.
name|getResourceUsageMetrics
argument_list|()
argument_list|,
name|metrics
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pushDescription
argument_list|(
name|id
argument_list|()
argument_list|,
name|splits
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

