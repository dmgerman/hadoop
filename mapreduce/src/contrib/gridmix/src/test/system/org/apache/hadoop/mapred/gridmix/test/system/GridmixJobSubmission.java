begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.gridmix.test.system
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
operator|.
name|test
operator|.
name|system
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|test
operator|.
name|system
operator|.
name|JTClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_comment
comment|/**  * Submit the gridmix jobs.   */
end_comment

begin_class
DECL|class|GridmixJobSubmission
specifier|public
class|class
name|GridmixJobSubmission
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|GridmixJobSubmission
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|gridmixJobCount
specifier|private
name|int
name|gridmixJobCount
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|gridmixDir
specifier|private
name|Path
name|gridmixDir
decl_stmt|;
DECL|field|jtClient
specifier|private
name|JTClient
name|jtClient
decl_stmt|;
DECL|method|GridmixJobSubmission (Configuration conf, JTClient jtClient , Path gridmixDir)
specifier|public
name|GridmixJobSubmission
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|JTClient
name|jtClient
parameter_list|,
name|Path
name|gridmixDir
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|jtClient
operator|=
name|jtClient
expr_stmt|;
name|this
operator|.
name|gridmixDir
operator|=
name|gridmixDir
expr_stmt|;
block|}
comment|/**    * Submit the gridmix jobs.    * @param runtimeArgs - gridmix common runtime arguments.    * @param otherArgs - gridmix other runtime arguments.    * @param traceInterval - trace time interval.    * @throws Exception    */
DECL|method|submitJobs (String [] runtimeArgs, String [] otherArgs, int mode)
specifier|public
name|void
name|submitJobs
parameter_list|(
name|String
index|[]
name|runtimeArgs
parameter_list|,
name|String
index|[]
name|otherArgs
parameter_list|,
name|int
name|mode
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|prvJobCount
init|=
name|jtClient
operator|.
name|getClient
argument_list|()
operator|.
name|getAllJobs
argument_list|()
operator|.
name|length
decl_stmt|;
name|int
name|exitCode
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|otherArgs
operator|==
literal|null
condition|)
block|{
name|exitCode
operator|=
name|UtilsForGridmix
operator|.
name|runGridmixJob
argument_list|(
name|gridmixDir
argument_list|,
name|conf
argument_list|,
name|mode
argument_list|,
name|runtimeArgs
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|exitCode
operator|=
name|UtilsForGridmix
operator|.
name|runGridmixJob
argument_list|(
name|gridmixDir
argument_list|,
name|conf
argument_list|,
name|mode
argument_list|,
name|runtimeArgs
argument_list|,
name|otherArgs
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Gridmix jobs have failed."
argument_list|,
literal|0
argument_list|,
name|exitCode
argument_list|)
expr_stmt|;
name|gridmixJobCount
operator|=
name|jtClient
operator|.
name|getClient
argument_list|()
operator|.
name|getAllJobs
argument_list|()
operator|.
name|length
operator|-
name|prvJobCount
expr_stmt|;
block|}
comment|/**    * Get the submitted jobs count.    * @return count of no. of jobs submitted for a trace.    */
DECL|method|getGridmixJobCount ()
specifier|public
name|int
name|getGridmixJobCount
parameter_list|()
block|{
return|return
name|gridmixJobCount
return|;
block|}
comment|/**    * Get the job configuration.    * @return Configuration of a submitted job.    */
DECL|method|getJobConf ()
specifier|public
name|Configuration
name|getJobConf
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

