begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.streaming
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_class
DECL|class|PipeCombiner
specifier|public
class|class
name|PipeCombiner
extends|extends
name|PipeReducer
block|{
DECL|method|getPipeCommand (JobConf job)
name|String
name|getPipeCommand
parameter_list|(
name|JobConf
name|job
parameter_list|)
block|{
name|String
name|str
init|=
name|job
operator|.
name|get
argument_list|(
literal|"stream.combine.streamprocessor"
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|str
operator|!=
literal|null
condition|)
block|{
return|return
name|URLDecoder
operator|.
name|decode
argument_list|(
name|str
argument_list|,
literal|"UTF-8"
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"stream.combine.streamprocessor"
operator|+
literal|" in jobconf not found"
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|getDoPipe ()
name|boolean
name|getDoPipe
parameter_list|()
block|{
return|return
operator|(
name|getPipeCommand
argument_list|(
name|job_
argument_list|)
operator|!=
literal|null
operator|)
return|;
block|}
block|}
end_class

end_unit

