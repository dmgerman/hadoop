begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.streaming.io
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
operator|.
name|PipeMapRed
import|;
end_import

begin_comment
comment|/**  * OutputReader that reads the client's output as raw bytes.  */
end_comment

begin_class
DECL|class|RawBytesOutputReader
specifier|public
class|class
name|RawBytesOutputReader
extends|extends
name|OutputReader
argument_list|<
name|BytesWritable
argument_list|,
name|BytesWritable
argument_list|>
block|{
DECL|field|clientIn
specifier|private
name|DataInput
name|clientIn
decl_stmt|;
DECL|field|bytes
specifier|private
name|byte
index|[]
name|bytes
decl_stmt|;
DECL|field|key
specifier|private
name|BytesWritable
name|key
decl_stmt|;
DECL|field|value
specifier|private
name|BytesWritable
name|value
decl_stmt|;
annotation|@
name|Override
DECL|method|initialize (PipeMapRed pipeMapRed)
specifier|public
name|void
name|initialize
parameter_list|(
name|PipeMapRed
name|pipeMapRed
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|initialize
argument_list|(
name|pipeMapRed
argument_list|)
expr_stmt|;
name|clientIn
operator|=
name|pipeMapRed
operator|.
name|getClientInput
argument_list|()
expr_stmt|;
name|key
operator|=
operator|new
name|BytesWritable
argument_list|()
expr_stmt|;
name|value
operator|=
operator|new
name|BytesWritable
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readKeyValue ()
specifier|public
name|boolean
name|readKeyValue
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|length
init|=
name|readLength
argument_list|()
decl_stmt|;
if|if
condition|(
name|length
operator|<
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
name|key
operator|.
name|set
argument_list|(
name|readBytes
argument_list|(
name|length
argument_list|)
argument_list|,
literal|0
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|length
operator|=
name|readLength
argument_list|()
expr_stmt|;
name|value
operator|.
name|set
argument_list|(
name|readBytes
argument_list|(
name|length
argument_list|)
argument_list|,
literal|0
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentKey ()
specifier|public
name|BytesWritable
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|key
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentValue ()
specifier|public
name|BytesWritable
name|getCurrentValue
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
DECL|method|getLastOutput ()
specifier|public
name|String
name|getLastOutput
parameter_list|()
block|{
if|if
condition|(
name|bytes
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|BytesWritable
argument_list|(
name|bytes
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|method|readLength ()
specifier|private
name|int
name|readLength
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|clientIn
operator|.
name|readInt
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|eof
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
DECL|method|readBytes (int length)
specifier|private
name|byte
index|[]
name|readBytes
parameter_list|(
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
name|bytes
operator|=
operator|new
name|byte
index|[
name|length
index|]
expr_stmt|;
name|clientIn
operator|.
name|readFully
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
return|return
name|bytes
return|;
block|}
block|}
end_class

end_unit

