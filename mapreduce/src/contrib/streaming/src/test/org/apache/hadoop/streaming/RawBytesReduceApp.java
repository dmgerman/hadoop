begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.streaming
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_class
DECL|class|RawBytesReduceApp
specifier|public
class|class
name|RawBytesReduceApp
block|{
DECL|field|dis
specifier|private
name|DataInputStream
name|dis
decl_stmt|;
DECL|method|RawBytesReduceApp ()
specifier|public
name|RawBytesReduceApp
parameter_list|()
block|{
name|dis
operator|=
operator|new
name|DataInputStream
argument_list|(
name|System
operator|.
name|in
argument_list|)
expr_stmt|;
block|}
DECL|method|go ()
specifier|public
name|void
name|go
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|prevKey
init|=
literal|null
decl_stmt|;
name|int
name|sum
init|=
literal|0
decl_stmt|;
name|String
name|key
init|=
name|readString
argument_list|()
decl_stmt|;
while|while
condition|(
name|key
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|prevKey
operator|!=
literal|null
operator|&&
operator|!
name|key
operator|.
name|equals
argument_list|(
name|prevKey
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|prevKey
operator|+
literal|"\t"
operator|+
name|sum
argument_list|)
expr_stmt|;
name|sum
operator|=
literal|0
expr_stmt|;
block|}
name|sum
operator|+=
name|readInt
argument_list|()
expr_stmt|;
name|prevKey
operator|=
name|key
expr_stmt|;
name|key
operator|=
name|readString
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|prevKey
operator|+
literal|"\t"
operator|+
name|sum
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|RawBytesReduceApp
name|app
init|=
operator|new
name|RawBytesReduceApp
argument_list|()
decl_stmt|;
name|app
operator|.
name|go
argument_list|()
expr_stmt|;
block|}
DECL|method|readString ()
specifier|private
name|String
name|readString
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|length
decl_stmt|;
try|try
block|{
name|length
operator|=
name|dis
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|eof
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
name|length
index|]
decl_stmt|;
name|dis
operator|.
name|readFully
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
return|return
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
literal|"UTF-8"
argument_list|)
return|;
block|}
DECL|method|readInt ()
specifier|private
name|int
name|readInt
parameter_list|()
throws|throws
name|IOException
block|{
name|dis
operator|.
name|readInt
argument_list|()
expr_stmt|;
comment|// ignore (we know it's 4)
name|IntWritable
name|iw
init|=
operator|new
name|IntWritable
argument_list|()
decl_stmt|;
name|iw
operator|.
name|readFields
argument_list|(
name|dis
argument_list|)
expr_stmt|;
return|return
name|iw
operator|.
name|get
argument_list|()
return|;
block|}
block|}
end_class

end_unit

