begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_class
DECL|class|NameNodeRaidTestUtil
specifier|public
class|class
name|NameNodeRaidTestUtil
block|{
DECL|method|readLock (final FSDirectory dir)
specifier|public
specifier|static
name|void
name|readLock
parameter_list|(
specifier|final
name|FSDirectory
name|dir
parameter_list|)
block|{
name|dir
operator|.
name|readLock
argument_list|()
expr_stmt|;
block|}
DECL|method|readUnLock (final FSDirectory dir)
specifier|public
specifier|static
name|void
name|readUnLock
parameter_list|(
specifier|final
name|FSDirectory
name|dir
parameter_list|)
block|{
name|dir
operator|.
name|readUnlock
argument_list|()
expr_stmt|;
block|}
DECL|method|getNode (final FSDirectory dir, final String src, final boolean resolveLink )
specifier|public
specifier|static
name|FSInodeInfo
name|getNode
parameter_list|(
specifier|final
name|FSDirectory
name|dir
parameter_list|,
specifier|final
name|String
name|src
parameter_list|,
specifier|final
name|boolean
name|resolveLink
parameter_list|)
throws|throws
name|UnresolvedLinkException
block|{
return|return
name|dir
operator|.
name|rootDir
operator|.
name|getNode
argument_list|(
name|src
argument_list|,
name|resolveLink
argument_list|)
return|;
block|}
DECL|method|getDatanodeMap ( final FSNamesystem namesystem)
specifier|public
specifier|static
name|NavigableMap
argument_list|<
name|String
argument_list|,
name|DatanodeDescriptor
argument_list|>
name|getDatanodeMap
parameter_list|(
specifier|final
name|FSNamesystem
name|namesystem
parameter_list|)
block|{
return|return
name|namesystem
operator|.
name|datanodeMap
return|;
block|}
block|}
end_class

end_unit

