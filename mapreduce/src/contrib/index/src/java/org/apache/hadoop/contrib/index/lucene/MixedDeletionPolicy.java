begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.contrib.index.lucene
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|contrib
operator|.
name|index
operator|.
name|lucene
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexCommitPoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexDeletionPolicy
import|;
end_import

begin_comment
comment|/**  * For mixed directory. Use KeepAllDeletionPolicy for the read-only directory  * (keep all from init) and use KeepOnlyLastCommitDeletionPolicy for the  * writable directory (initially empty, keep latest after init).  */
end_comment

begin_class
DECL|class|MixedDeletionPolicy
class|class
name|MixedDeletionPolicy
implements|implements
name|IndexDeletionPolicy
block|{
DECL|field|keepAllFromInit
specifier|private
name|int
name|keepAllFromInit
init|=
literal|0
decl_stmt|;
DECL|method|onInit (List commits)
specifier|public
name|void
name|onInit
parameter_list|(
name|List
name|commits
parameter_list|)
throws|throws
name|IOException
block|{
name|keepAllFromInit
operator|=
name|commits
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
DECL|method|onCommit (List commits)
specifier|public
name|void
name|onCommit
parameter_list|(
name|List
name|commits
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|size
init|=
name|commits
operator|.
name|size
argument_list|()
decl_stmt|;
assert|assert
operator|(
name|size
operator|>
name|keepAllFromInit
operator|)
assert|;
comment|// keep all from init and the latest, delete the rest
for|for
control|(
name|int
name|i
init|=
name|keepAllFromInit
init|;
name|i
operator|<
name|size
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
operator|(
operator|(
name|IndexCommitPoint
operator|)
name|commits
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

