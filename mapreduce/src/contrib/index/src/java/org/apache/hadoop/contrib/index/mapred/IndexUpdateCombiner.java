begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.contrib.index.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|contrib
operator|.
name|index
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MapReduceBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|OutputCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_comment
comment|/**  * This combiner combines multiple intermediate forms into one intermediate  * form. More specifically, the input intermediate forms are a single-document  * ram index and/or a single delete term. An output intermediate form contains  * a multi-document ram index and/or multiple delete terms.     */
end_comment

begin_class
DECL|class|IndexUpdateCombiner
specifier|public
class|class
name|IndexUpdateCombiner
extends|extends
name|MapReduceBase
implements|implements
name|Reducer
argument_list|<
name|Shard
argument_list|,
name|IntermediateForm
argument_list|,
name|Shard
argument_list|,
name|IntermediateForm
argument_list|>
block|{
DECL|field|LOG
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|IndexUpdateCombiner
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|iconf
name|IndexUpdateConfiguration
name|iconf
decl_stmt|;
DECL|field|maxSizeInBytes
name|long
name|maxSizeInBytes
decl_stmt|;
DECL|field|nearMaxSizeInBytes
name|long
name|nearMaxSizeInBytes
decl_stmt|;
comment|/* (non-Javadoc)    * @see org.apache.hadoop.mapred.Reducer#reduce(java.lang.Object, java.util.Iterator, org.apache.hadoop.mapred.OutputCollector, org.apache.hadoop.mapred.Reporter)    */
DECL|method|reduce (Shard key, Iterator<IntermediateForm> values, OutputCollector<Shard, IntermediateForm> output, Reporter reporter)
specifier|public
name|void
name|reduce
parameter_list|(
name|Shard
name|key
parameter_list|,
name|Iterator
argument_list|<
name|IntermediateForm
argument_list|>
name|values
parameter_list|,
name|OutputCollector
argument_list|<
name|Shard
argument_list|,
name|IntermediateForm
argument_list|>
name|output
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|message
init|=
name|key
operator|.
name|toString
argument_list|()
decl_stmt|;
name|IntermediateForm
name|form
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|values
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|IntermediateForm
name|singleDocForm
init|=
name|values
operator|.
name|next
argument_list|()
decl_stmt|;
name|long
name|formSize
init|=
name|form
operator|==
literal|null
condition|?
literal|0
else|:
name|form
operator|.
name|totalSizeInBytes
argument_list|()
decl_stmt|;
name|long
name|singleDocFormSize
init|=
name|singleDocForm
operator|.
name|totalSizeInBytes
argument_list|()
decl_stmt|;
if|if
condition|(
name|form
operator|!=
literal|null
operator|&&
name|formSize
operator|+
name|singleDocFormSize
operator|>
name|maxSizeInBytes
condition|)
block|{
name|closeForm
argument_list|(
name|form
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|output
operator|.
name|collect
argument_list|(
name|key
argument_list|,
name|form
argument_list|)
expr_stmt|;
name|form
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|form
operator|==
literal|null
operator|&&
name|singleDocFormSize
operator|>=
name|nearMaxSizeInBytes
condition|)
block|{
name|output
operator|.
name|collect
argument_list|(
name|key
argument_list|,
name|singleDocForm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|form
operator|==
literal|null
condition|)
block|{
name|form
operator|=
name|createForm
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
name|form
operator|.
name|process
argument_list|(
name|singleDocForm
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|form
operator|!=
literal|null
condition|)
block|{
name|closeForm
argument_list|(
name|form
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|output
operator|.
name|collect
argument_list|(
name|key
argument_list|,
name|form
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createForm (String message)
specifier|private
name|IntermediateForm
name|createForm
parameter_list|(
name|String
name|message
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Construct a form writer for "
operator|+
name|message
argument_list|)
expr_stmt|;
name|IntermediateForm
name|form
init|=
operator|new
name|IntermediateForm
argument_list|()
decl_stmt|;
name|form
operator|.
name|configure
argument_list|(
name|iconf
argument_list|)
expr_stmt|;
return|return
name|form
return|;
block|}
DECL|method|closeForm (IntermediateForm form, String message)
specifier|private
name|void
name|closeForm
parameter_list|(
name|IntermediateForm
name|form
parameter_list|,
name|String
name|message
parameter_list|)
throws|throws
name|IOException
block|{
name|form
operator|.
name|closeWriter
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Closed the form writer for "
operator|+
name|message
operator|+
literal|", form = "
operator|+
name|form
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.mapred.MapReduceBase#configure(org.apache.hadoop.mapred.JobConf)    */
DECL|method|configure (JobConf job)
specifier|public
name|void
name|configure
parameter_list|(
name|JobConf
name|job
parameter_list|)
block|{
name|iconf
operator|=
operator|new
name|IndexUpdateConfiguration
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|maxSizeInBytes
operator|=
name|iconf
operator|.
name|getMaxRAMSizeInBytes
argument_list|()
expr_stmt|;
name|nearMaxSizeInBytes
operator|=
name|maxSizeInBytes
operator|-
operator|(
name|maxSizeInBytes
operator|>>>
literal|3
operator|)
expr_stmt|;
comment|// 7/8 of max
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.mapred.MapReduceBase#close()    */
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{   }
block|}
end_class

end_unit

