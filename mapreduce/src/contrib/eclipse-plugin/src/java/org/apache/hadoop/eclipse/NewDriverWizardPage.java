begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.eclipse
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|CoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|FileLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|IProgressMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|IStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|core
operator|.
name|IType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|core
operator|.
name|JavaModelException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|core
operator|.
name|search
operator|.
name|SearchEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|ui
operator|.
name|IJavaElementSearchConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|ui
operator|.
name|JavaUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|ui
operator|.
name|wizards
operator|.
name|NewTypeWizardPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|dialogs
operator|.
name|ProgressMonitorDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|resource
operator|.
name|ImageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|viewers
operator|.
name|IStructuredSelection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|window
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|SWT
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|layout
operator|.
name|GridData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|layout
operator|.
name|GridLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Listener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|ui
operator|.
name|dialogs
operator|.
name|SelectionDialog
import|;
end_import

begin_comment
comment|/**  * Pre-fills the new MapReduce driver class with a template.  *   */
end_comment

begin_class
DECL|class|NewDriverWizardPage
specifier|public
class|class
name|NewDriverWizardPage
extends|extends
name|NewTypeWizardPage
block|{
DECL|field|isCreateMapMethod
specifier|private
name|Button
name|isCreateMapMethod
decl_stmt|;
DECL|field|reducerText
specifier|private
name|Text
name|reducerText
decl_stmt|;
DECL|field|mapperText
specifier|private
name|Text
name|mapperText
decl_stmt|;
DECL|field|showContainerSelector
specifier|private
specifier|final
name|boolean
name|showContainerSelector
decl_stmt|;
DECL|method|NewDriverWizardPage ()
specifier|public
name|NewDriverWizardPage
parameter_list|()
block|{
name|this
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|NewDriverWizardPage (boolean showContainerSelector)
specifier|public
name|NewDriverWizardPage
parameter_list|(
name|boolean
name|showContainerSelector
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|"MapReduce Driver"
argument_list|)
expr_stmt|;
name|this
operator|.
name|showContainerSelector
operator|=
name|showContainerSelector
expr_stmt|;
name|setTitle
argument_list|(
literal|"MapReduce Driver"
argument_list|)
expr_stmt|;
name|setDescription
argument_list|(
literal|"Create a new MapReduce driver."
argument_list|)
expr_stmt|;
name|setImageDescriptor
argument_list|(
name|ImageLibrary
operator|.
name|get
argument_list|(
literal|"wizard.driver.new"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setSelection (IStructuredSelection selection)
specifier|public
name|void
name|setSelection
parameter_list|(
name|IStructuredSelection
name|selection
parameter_list|)
block|{
name|initContainerPage
argument_list|(
name|getInitialJavaElement
argument_list|(
name|selection
argument_list|)
argument_list|)
expr_stmt|;
name|initTypePage
argument_list|(
name|getInitialJavaElement
argument_list|(
name|selection
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
comment|/**    * Creates the new type using the entered field values.    */
DECL|method|createType (IProgressMonitor monitor)
specifier|public
name|void
name|createType
parameter_list|(
name|IProgressMonitor
name|monitor
parameter_list|)
throws|throws
name|CoreException
throws|,
name|InterruptedException
block|{
name|super
operator|.
name|createType
argument_list|(
name|monitor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createTypeMembers (final IType newType, ImportsManager imports, final IProgressMonitor monitor)
specifier|protected
name|void
name|createTypeMembers
parameter_list|(
specifier|final
name|IType
name|newType
parameter_list|,
name|ImportsManager
name|imports
parameter_list|,
specifier|final
name|IProgressMonitor
name|monitor
parameter_list|)
throws|throws
name|CoreException
block|{
name|super
operator|.
name|createTypeMembers
argument_list|(
name|newType
argument_list|,
name|imports
argument_list|,
name|monitor
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.fs.Path"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.io.Text"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.io.IntWritable"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.JobClient"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.JobConf"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.Reducer"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.Mapper"
argument_list|)
expr_stmt|;
comment|/**      * TODO(jz) - move most code out of the runnable      */
name|getContainer
argument_list|()
operator|.
name|getShell
argument_list|()
operator|.
name|getDisplay
argument_list|()
operator|.
name|syncExec
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|String
name|method
init|=
literal|"public static void main(String[] args) {\n JobClient client = new JobClient();"
decl_stmt|;
name|method
operator|+=
literal|"JobConf conf = new JobConf("
operator|+
name|newType
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|".class);\n\n"
expr_stmt|;
name|method
operator|+=
literal|"// TODO: specify output types\nconf.setOutputKeyClass(Text.class);\nconf.setOutputValueClass(IntWritable.class);\n\n"
expr_stmt|;
name|method
operator|+=
literal|"// TODO: specify input and output DIRECTORIES (not files)\nconf.setInputPath(new Path(\"src\"));\nconf.setOutputPath(new Path(\"out\"));\n\n"
expr_stmt|;
if|if
condition|(
name|mapperText
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|method
operator|+=
literal|"conf.setMapperClass("
operator|+
name|mapperText
operator|.
name|getText
argument_list|()
operator|+
literal|".class);\n\n"
expr_stmt|;
block|}
else|else
block|{
name|method
operator|+=
literal|"// TODO: specify a mapper\nconf.setMapperClass(org.apache.hadoop.mapred.lib.IdentityMapper.class);\n\n"
expr_stmt|;
block|}
if|if
condition|(
name|reducerText
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|method
operator|+=
literal|"conf.setReducerClass("
operator|+
name|reducerText
operator|.
name|getText
argument_list|()
operator|+
literal|".class);\n\n"
expr_stmt|;
block|}
else|else
block|{
name|method
operator|+=
literal|"// TODO: specify a reducer\nconf.setReducerClass(org.apache.hadoop.mapred.lib.IdentityReducer.class);\n\n"
expr_stmt|;
block|}
name|method
operator|+=
literal|"client.setConf(conf);\n"
expr_stmt|;
name|method
operator|+=
literal|"try {\n\tJobClient.runJob(conf);\n} catch (Exception e) {\n"
operator|+
literal|"\te.printStackTrace();\n}\n"
expr_stmt|;
name|method
operator|+=
literal|"}\n"
expr_stmt|;
try|try
block|{
name|newType
operator|.
name|createMethod
argument_list|(
name|method
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|monitor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JavaModelException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|createControl (Composite parent)
specifier|public
name|void
name|createControl
parameter_list|(
name|Composite
name|parent
parameter_list|)
block|{
comment|// super.createControl(parent);
name|initializeDialogUnits
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|Composite
name|composite
init|=
operator|new
name|Composite
argument_list|(
name|parent
argument_list|,
name|SWT
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|GridLayout
name|layout
init|=
operator|new
name|GridLayout
argument_list|()
decl_stmt|;
name|layout
operator|.
name|numColumns
operator|=
literal|4
expr_stmt|;
name|composite
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|createContainerControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createPackageControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSeparator
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createTypeNameControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSuperClassControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSuperInterfacesControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSeparator
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createMapperControls
argument_list|(
name|composite
argument_list|)
expr_stmt|;
name|createReducerControls
argument_list|(
name|composite
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|showContainerSelector
condition|)
block|{
name|setPackageFragmentRoot
argument_list|(
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setSuperClass
argument_list|(
literal|"java.lang.Object"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setSuperInterfaces
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|setControl
argument_list|(
name|composite
argument_list|)
expr_stmt|;
name|setFocus
argument_list|()
expr_stmt|;
name|handleFieldChanged
argument_list|(
name|CONTAINER
argument_list|)
expr_stmt|;
comment|// setSuperClass("org.apache.hadoop.mapred.MapReduceBase", true);
comment|// setSuperInterfaces(Arrays.asList(new String[]{
comment|// "org.apache.hadoop.mapred.Mapper" }), true);
block|}
annotation|@
name|Override
DECL|method|handleFieldChanged (String fieldName)
specifier|protected
name|void
name|handleFieldChanged
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
name|super
operator|.
name|handleFieldChanged
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
block|}
DECL|method|validate ()
specifier|private
name|void
name|validate
parameter_list|()
block|{
if|if
condition|(
name|showContainerSelector
condition|)
block|{
name|updateStatus
argument_list|(
operator|new
name|IStatus
index|[]
block|{
name|fContainerStatus
block|,
name|fPackageStatus
block|,
name|fTypeNameStatus
block|,
name|fSuperClassStatus
block|,
name|fSuperInterfacesStatus
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|updateStatus
argument_list|(
operator|new
name|IStatus
index|[]
block|{
name|fTypeNameStatus
block|, }
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createMapperControls (Composite composite)
specifier|private
name|void
name|createMapperControls
parameter_list|(
name|Composite
name|composite
parameter_list|)
block|{
name|this
operator|.
name|mapperText
operator|=
name|createBrowseClassControl
argument_list|(
name|composite
argument_list|,
literal|"Ma&pper:"
argument_list|,
literal|"&Browse..."
argument_list|,
literal|"org.apache.hadoop.mapred.Mapper"
argument_list|,
literal|"Mapper Selection"
argument_list|)
expr_stmt|;
block|}
DECL|method|createReducerControls (Composite composite)
specifier|private
name|void
name|createReducerControls
parameter_list|(
name|Composite
name|composite
parameter_list|)
block|{
name|this
operator|.
name|reducerText
operator|=
name|createBrowseClassControl
argument_list|(
name|composite
argument_list|,
literal|"&Reducer:"
argument_list|,
literal|"Browse&..."
argument_list|,
literal|"org.apache.hadoop.mapred.Reducer"
argument_list|,
literal|"Reducer Selection"
argument_list|)
expr_stmt|;
block|}
DECL|method|createBrowseClassControl (final Composite composite, final String string, String browseButtonLabel, final String baseClassName, final String dialogTitle)
specifier|private
name|Text
name|createBrowseClassControl
parameter_list|(
specifier|final
name|Composite
name|composite
parameter_list|,
specifier|final
name|String
name|string
parameter_list|,
name|String
name|browseButtonLabel
parameter_list|,
specifier|final
name|String
name|baseClassName
parameter_list|,
specifier|final
name|String
name|dialogTitle
parameter_list|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|composite
argument_list|,
name|SWT
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|GridData
name|data
init|=
operator|new
name|GridData
argument_list|(
name|GridData
operator|.
name|FILL_HORIZONTAL
argument_list|)
decl_stmt|;
name|label
operator|.
name|setText
argument_list|(
name|string
argument_list|)
expr_stmt|;
name|label
operator|.
name|setLayoutData
argument_list|(
name|data
argument_list|)
expr_stmt|;
specifier|final
name|Text
name|text
init|=
operator|new
name|Text
argument_list|(
name|composite
argument_list|,
name|SWT
operator|.
name|SINGLE
operator||
name|SWT
operator|.
name|BORDER
argument_list|)
decl_stmt|;
name|GridData
name|data2
init|=
operator|new
name|GridData
argument_list|(
name|GridData
operator|.
name|FILL_HORIZONTAL
argument_list|)
decl_stmt|;
name|data2
operator|.
name|horizontalSpan
operator|=
literal|2
expr_stmt|;
name|text
operator|.
name|setLayoutData
argument_list|(
name|data2
argument_list|)
expr_stmt|;
name|Button
name|browse
init|=
operator|new
name|Button
argument_list|(
name|composite
argument_list|,
name|SWT
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|browse
operator|.
name|setText
argument_list|(
name|browseButtonLabel
argument_list|)
expr_stmt|;
name|GridData
name|data3
init|=
operator|new
name|GridData
argument_list|(
name|GridData
operator|.
name|FILL_HORIZONTAL
argument_list|)
decl_stmt|;
name|browse
operator|.
name|setLayoutData
argument_list|(
name|data3
argument_list|)
expr_stmt|;
name|browse
operator|.
name|addListener
argument_list|(
name|SWT
operator|.
name|Selection
argument_list|,
operator|new
name|Listener
argument_list|()
block|{
specifier|public
name|void
name|handleEvent
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
name|IType
name|baseType
decl_stmt|;
try|try
block|{
name|baseType
operator|=
name|getPackageFragmentRoot
argument_list|()
operator|.
name|getJavaProject
argument_list|()
operator|.
name|findType
argument_list|(
name|baseClassName
argument_list|)
expr_stmt|;
comment|// edit this to limit the scope
name|SelectionDialog
name|dialog
init|=
name|JavaUI
operator|.
name|createTypeDialog
argument_list|(
name|composite
operator|.
name|getShell
argument_list|()
argument_list|,
operator|new
name|ProgressMonitorDialog
argument_list|(
name|composite
operator|.
name|getShell
argument_list|()
argument_list|)
argument_list|,
name|SearchEngine
operator|.
name|createHierarchyScope
argument_list|(
name|baseType
argument_list|)
argument_list|,
name|IJavaElementSearchConstants
operator|.
name|CONSIDER_CLASSES
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setMessage
argument_list|(
literal|"&Choose a type:"
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setBlockOnOpen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setTitle
argument_list|(
name|dialogTitle
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|open
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|dialog
operator|.
name|getReturnCode
argument_list|()
operator|==
name|Window
operator|.
name|OK
operator|)
operator|&&
operator|(
name|dialog
operator|.
name|getResult
argument_list|()
operator|.
name|length
operator|>
literal|0
operator|)
condition|)
block|{
name|IType
name|type
init|=
operator|(
name|IType
operator|)
name|dialog
operator|.
name|getResult
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|text
operator|.
name|setText
argument_list|(
name|type
operator|.
name|getFullyQualifiedName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JavaModelException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|showContainerSelector
condition|)
block|{
name|label
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|text
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|browse
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|text
return|;
block|}
block|}
end_class

end_unit

