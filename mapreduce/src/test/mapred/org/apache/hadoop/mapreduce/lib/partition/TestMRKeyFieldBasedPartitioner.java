begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.lib.partition
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|partition
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
DECL|class|TestMRKeyFieldBasedPartitioner
specifier|public
class|class
name|TestMRKeyFieldBasedPartitioner
extends|extends
name|TestCase
block|{
comment|/**    * Test is key-field-based partitioned works with empty key.    */
DECL|method|testEmptyKey ()
specifier|public
name|void
name|testEmptyKey
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|numReducers
init|=
literal|10
decl_stmt|;
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
name|kfbp
init|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"num.key.fields.for.partition"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Empty key should map to 0th partition"
argument_list|,
literal|0
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|()
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// check if the hashcode is correct when no keyspec is specified
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|input
init|=
literal|"abc\tdef\txyz"
decl_stmt|;
name|int
name|hashCode
init|=
name|input
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|int
name|expectedPartition
init|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// check if the hashcode is correct with specified keyspec
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k2,2"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|expectedOutput
init|=
literal|"def"
decl_stmt|;
name|byte
index|[]
name|eBytes
init|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|expectedPartition
operator|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// test with invalid end index in keyspecs
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k2,5"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|expectedOutput
operator|=
literal|"def\txyz"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|expectedPartition
operator|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// test with 0 end index in keyspecs
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k2"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|expectedOutput
operator|=
literal|"def\txyz"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|expectedPartition
operator|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// test with invalid keyspecs
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k10"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
literal|0
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// test with multiple keyspecs
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k2,2 -k4,4"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|input
operator|=
literal|"abc\tdef\tpqr\txyz"
expr_stmt|;
name|expectedOutput
operator|=
literal|"def"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|expectedOutput
operator|=
literal|"xyz"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
name|hashCode
argument_list|)
expr_stmt|;
name|expectedPartition
operator|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
comment|// test with invalid start index in keyspecs
name|kfbp
operator|=
operator|new
name|KeyFieldBasedPartitioner
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|KeyFieldBasedPartitioner
operator|.
name|PARTITIONER_OPTIONS
argument_list|,
literal|"-k2,2 -k30,21 -k4,4 -k5"
argument_list|)
expr_stmt|;
name|kfbp
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|expectedOutput
operator|=
literal|"def"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|expectedOutput
operator|=
literal|"xyz"
expr_stmt|;
name|eBytes
operator|=
name|expectedOutput
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|hashCode
operator|=
name|kfbp
operator|.
name|hashCode
argument_list|(
name|eBytes
argument_list|,
literal|0
argument_list|,
name|eBytes
operator|.
name|length
operator|-
literal|1
argument_list|,
name|hashCode
argument_list|)
expr_stmt|;
name|expectedPartition
operator|=
name|kfbp
operator|.
name|getPartition
argument_list|(
name|hashCode
argument_list|,
name|numReducers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Partitioner doesnt work as expected"
argument_list|,
name|expectedPartition
argument_list|,
name|kfbp
operator|.
name|getPartition
argument_list|(
operator|new
name|Text
argument_list|(
name|input
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|()
argument_list|,
name|numReducers
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

