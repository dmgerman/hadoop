begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.pipes
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|pipes
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|ClusterWithLinuxTaskController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_comment
comment|/**  * Test Pipes jobs with LinuxTaskController running the jobs as a user different  * from the user running the cluster. See {@link ClusterWithLinuxTaskController}  */
end_comment

begin_class
DECL|class|TestPipesAsDifferentUser
specifier|public
class|class
name|TestPipesAsDifferentUser
extends|extends
name|ClusterWithLinuxTaskController
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestPipesAsDifferentUser
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|testPipes ()
specifier|public
name|void
name|testPipes
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"compile.c++"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"compile.c++ is not defined, so skipping TestPipes"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
operator|!
name|shouldRun
argument_list|()
condition|)
block|{
return|return;
block|}
name|super
operator|.
name|startCluster
argument_list|()
expr_stmt|;
name|jobOwner
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
specifier|public
name|Object
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|clusterConf
init|=
name|getClusterConf
argument_list|()
decl_stmt|;
name|Path
name|inputPath
init|=
operator|new
name|Path
argument_list|(
name|homeDirectory
argument_list|,
literal|"in"
argument_list|)
decl_stmt|;
name|Path
name|outputPath
init|=
operator|new
name|Path
argument_list|(
name|homeDirectory
argument_list|,
literal|"out"
argument_list|)
decl_stmt|;
name|TestPipes
operator|.
name|writeInputFile
argument_list|(
name|FileSystem
operator|.
name|get
argument_list|(
name|clusterConf
argument_list|)
argument_list|,
name|inputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|runProgram
argument_list|(
name|mrCluster
argument_list|,
name|dfsCluster
argument_list|,
name|TestPipes
operator|.
name|wordCountSimple
argument_list|,
name|inputPath
argument_list|,
name|outputPath
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
name|TestPipes
operator|.
name|twoSplitOutput
argument_list|,
name|clusterConf
argument_list|)
expr_stmt|;
name|assertOwnerShip
argument_list|(
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|cleanup
argument_list|(
name|dfsCluster
operator|.
name|getFileSystem
argument_list|()
argument_list|,
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|runProgram
argument_list|(
name|mrCluster
argument_list|,
name|dfsCluster
argument_list|,
name|TestPipes
operator|.
name|wordCountSimple
argument_list|,
name|inputPath
argument_list|,
name|outputPath
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
name|TestPipes
operator|.
name|noSortOutput
argument_list|,
name|clusterConf
argument_list|)
expr_stmt|;
name|assertOwnerShip
argument_list|(
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|cleanup
argument_list|(
name|dfsCluster
operator|.
name|getFileSystem
argument_list|()
argument_list|,
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|runProgram
argument_list|(
name|mrCluster
argument_list|,
name|dfsCluster
argument_list|,
name|TestPipes
operator|.
name|wordCountPart
argument_list|,
name|inputPath
argument_list|,
name|outputPath
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
name|TestPipes
operator|.
name|fixedPartitionOutput
argument_list|,
name|clusterConf
argument_list|)
expr_stmt|;
name|assertOwnerShip
argument_list|(
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|cleanup
argument_list|(
name|dfsCluster
operator|.
name|getFileSystem
argument_list|()
argument_list|,
name|outputPath
argument_list|)
expr_stmt|;
name|TestPipes
operator|.
name|runNonPipedProgram
argument_list|(
name|mrCluster
argument_list|,
name|dfsCluster
argument_list|,
name|TestPipes
operator|.
name|wordCountNoPipes
argument_list|,
name|clusterConf
argument_list|)
expr_stmt|;
name|assertOwnerShip
argument_list|(
name|TestPipes
operator|.
name|nonPipedOutDir
argument_list|,
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|clusterConf
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

