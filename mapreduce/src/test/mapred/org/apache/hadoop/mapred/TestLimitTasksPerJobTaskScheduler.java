begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TestJobQueueTaskScheduler
operator|.
name|FakeTaskTrackerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|server
operator|.
name|jobtracker
operator|.
name|JTConfig
import|;
end_import

begin_class
DECL|class|TestLimitTasksPerJobTaskScheduler
specifier|public
class|class
name|TestLimitTasksPerJobTaskScheduler
extends|extends
name|TestCase
block|{
DECL|field|jobConf
specifier|protected
name|JobConf
name|jobConf
decl_stmt|;
DECL|field|scheduler
specifier|protected
name|TaskScheduler
name|scheduler
decl_stmt|;
DECL|field|taskTrackerManager
specifier|private
name|FakeTaskTrackerManager
name|taskTrackerManager
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|TestJobQueueTaskScheduler
operator|.
name|resetCounters
argument_list|()
expr_stmt|;
name|jobConf
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|jobConf
operator|.
name|setNumMapTasks
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setNumReduceTasks
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|taskTrackerManager
operator|=
operator|new
name|FakeTaskTrackerManager
argument_list|()
expr_stmt|;
name|scheduler
operator|=
name|createTaskScheduler
argument_list|()
expr_stmt|;
name|scheduler
operator|.
name|setConf
argument_list|(
name|jobConf
argument_list|)
expr_stmt|;
name|scheduler
operator|.
name|setTaskTrackerManager
argument_list|(
name|taskTrackerManager
argument_list|)
expr_stmt|;
name|scheduler
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|scheduler
operator|!=
literal|null
condition|)
block|{
name|scheduler
operator|.
name|terminate
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|createTaskScheduler ()
specifier|protected
name|TaskScheduler
name|createTaskScheduler
parameter_list|()
block|{
return|return
operator|new
name|LimitTasksPerJobTaskScheduler
argument_list|()
return|;
block|}
DECL|method|testMaxRunningTasksPerJob ()
specifier|public
name|void
name|testMaxRunningTasksPerJob
parameter_list|()
throws|throws
name|IOException
block|{
name|jobConf
operator|.
name|setLong
argument_list|(
name|JTConfig
operator|.
name|JT_RUNNINGTASKS_PER_JOB
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|scheduler
operator|.
name|setConf
argument_list|(
name|jobConf
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|submitJobs
argument_list|(
name|taskTrackerManager
argument_list|,
name|jobConf
argument_list|,
literal|2
argument_list|,
name|JobStatus
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
comment|// First 4 slots are filled with job 1, second 4 with job 2
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_m_000001_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_m_000002_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_r_000003_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_r_000004_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_m_000005_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_m_000006_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_r_000007_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_r_000008_0 on tt2"
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|testMaxRunningTasksPerJobWithInterleavedTrackers ()
specifier|public
name|void
name|testMaxRunningTasksPerJobWithInterleavedTrackers
parameter_list|()
throws|throws
name|IOException
block|{
name|jobConf
operator|.
name|setLong
argument_list|(
name|JTConfig
operator|.
name|JT_RUNNINGTASKS_PER_JOB
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|scheduler
operator|.
name|setConf
argument_list|(
name|jobConf
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|submitJobs
argument_list|(
name|taskTrackerManager
argument_list|,
name|jobConf
argument_list|,
literal|2
argument_list|,
name|JobStatus
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
comment|// First 4 slots are filled with job 1, second 4 with job 2
comment|// even when tracker requests are interleaved
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_m_000001_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_m_000002_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_m_000003_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0001_r_000004_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_m_000005_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt1"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_r_000006_0 on tt1"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_r_000007_0 on tt2"
block|}
argument_list|)
expr_stmt|;
name|TestJobQueueTaskScheduler
operator|.
name|checkAssignment
argument_list|(
name|scheduler
argument_list|,
name|TestJobQueueTaskScheduler
operator|.
name|tracker
argument_list|(
name|taskTrackerManager
argument_list|,
literal|"tt2"
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"attempt_test_0002_r_000008_0 on tt2"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

