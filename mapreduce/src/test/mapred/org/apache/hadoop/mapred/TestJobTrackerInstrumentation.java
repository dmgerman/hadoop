begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|extensions
operator|.
name|TestSetup
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestSuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|FakeObjectUtilities
operator|.
name|FakeJobTrackerMetricsInst
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TestTaskTrackerBlacklisting
operator|.
name|FakeJobTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|UtilsForTests
operator|.
name|FakeClock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|server
operator|.
name|jobtracker
operator|.
name|JTConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|server
operator|.
name|jobtracker
operator|.
name|TaskTracker
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|TestJobTrackerInstrumentation
specifier|public
class|class
name|TestJobTrackerInstrumentation
extends|extends
name|TestCase
block|{
DECL|field|trackers
specifier|static
name|String
name|trackers
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"tracker_tracker1:1000"
block|,
literal|"tracker_tracker2:1000"
block|,
literal|"tracker_tracker3:1000"
block|}
decl_stmt|;
DECL|field|hosts
specifier|static
name|String
name|hosts
index|[]
init|=
operator|new
name|String
index|[]
block|{
literal|"tracker1"
block|,
literal|"tracker2"
block|,
literal|"tracker3"
block|}
decl_stmt|;
comment|// heartbeat responseId. increment this after sending a heartbeat
DECL|field|responseId
specifier|private
specifier|static
name|short
name|responseId
init|=
literal|1
decl_stmt|;
DECL|field|jobTracker
specifier|private
specifier|static
name|FakeJobTracker
name|jobTracker
decl_stmt|;
DECL|field|fakeJob
specifier|private
specifier|static
name|FakeJobInProgress
name|fakeJob
decl_stmt|;
DECL|field|mapSlotsPerTracker
specifier|private
specifier|static
name|int
name|mapSlotsPerTracker
init|=
literal|4
decl_stmt|;
DECL|field|reduceSlotsPerTracker
specifier|private
specifier|static
name|int
name|reduceSlotsPerTracker
init|=
literal|2
decl_stmt|;
DECL|field|numMapSlotsToReserve
specifier|private
specifier|static
name|int
name|numMapSlotsToReserve
init|=
literal|2
decl_stmt|;
DECL|field|numReduceSlotsToReserve
specifier|private
specifier|static
name|int
name|numReduceSlotsToReserve
init|=
literal|2
decl_stmt|;
DECL|field|mi
specifier|private
specifier|static
name|FakeJobTrackerMetricsInst
name|mi
decl_stmt|;
DECL|method|suite ()
specifier|public
specifier|static
name|Test
name|suite
parameter_list|()
block|{
name|TestSetup
name|setup
init|=
operator|new
name|TestSetup
argument_list|(
operator|new
name|TestSuite
argument_list|(
name|TestJobTrackerInstrumentation
operator|.
name|class
argument_list|)
argument_list|)
block|{
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JTConfig
operator|.
name|JT_IPC_ADDRESS
argument_list|,
literal|"localhost:0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JTConfig
operator|.
name|JT_HTTP_ADDRESS
argument_list|,
literal|"0.0.0.0:0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|JTConfig
operator|.
name|JT_MAX_TRACKER_BLACKLISTS
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|JTConfig
operator|.
name|JT_TASK_SCHEDULER
argument_list|,
name|FakeTaskScheduler
operator|.
name|class
argument_list|,
name|TaskScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JTConfig
operator|.
name|JT_INSTRUMENTATION
argument_list|,
name|FakeJobTrackerMetricsInst
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|jobTracker
operator|=
operator|new
name|FakeJobTracker
argument_list|(
name|conf
argument_list|,
operator|new
name|FakeClock
argument_list|()
argument_list|,
name|trackers
argument_list|)
expr_stmt|;
name|mi
operator|=
operator|(
name|FakeJobTrackerMetricsInst
operator|)
name|jobTracker
operator|.
name|getInstrumentation
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|tracker
range|:
name|trackers
control|)
block|{
name|FakeObjectUtilities
operator|.
name|establishFirstContact
argument_list|(
name|jobTracker
argument_list|,
name|tracker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{       }
block|}
decl_stmt|;
return|return
name|setup
return|;
block|}
DECL|method|getTTStatus (String trackerName, List<TaskStatus> taskStatuses)
specifier|private
name|TaskTrackerStatus
name|getTTStatus
parameter_list|(
name|String
name|trackerName
parameter_list|,
name|List
argument_list|<
name|TaskStatus
argument_list|>
name|taskStatuses
parameter_list|)
block|{
return|return
operator|new
name|TaskTrackerStatus
argument_list|(
name|trackerName
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|trackerName
argument_list|)
argument_list|,
literal|0
argument_list|,
name|taskStatuses
argument_list|,
literal|0
argument_list|,
name|mapSlotsPerTracker
argument_list|,
name|reduceSlotsPerTracker
argument_list|)
return|;
block|}
DECL|method|testMetrics ()
specifier|public
name|void
name|testMetrics
parameter_list|()
throws|throws
name|Exception
block|{
name|TaskAttemptID
index|[]
name|taskAttemptID
init|=
operator|new
name|TaskAttemptID
index|[
literal|3
index|]
decl_stmt|;
comment|// create TaskTrackerStatus and send heartbeats
name|TaskTrackerStatus
index|[]
name|status
init|=
operator|new
name|TaskTrackerStatus
index|[
name|trackers
operator|.
name|length
index|]
decl_stmt|;
name|status
index|[
literal|0
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|status
index|[
literal|1
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|status
index|[
literal|2
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|2
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|trackers
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|FakeObjectUtilities
operator|.
name|sendHeartBeat
argument_list|(
name|jobTracker
argument_list|,
name|status
index|[
name|i
index|]
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|trackers
index|[
name|i
index|]
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
block|}
name|responseId
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of trackers"
argument_list|,
name|trackers
operator|.
name|length
argument_list|,
name|mi
operator|.
name|numTrackers
argument_list|)
expr_stmt|;
name|int
name|numMaps
init|=
literal|2
decl_stmt|;
name|int
name|numReds
init|=
literal|1
decl_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setNumMapTasks
argument_list|(
name|numMaps
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setNumReduceTasks
argument_list|(
name|numReds
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxTaskFailuresPerTracker
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|JobContext
operator|.
name|SETUP_CLEANUP_NEEDED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|FakeJobInProgress
name|job
init|=
operator|new
name|FakeJobInProgress
argument_list|(
name|conf
argument_list|,
name|jobTracker
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|mi
operator|.
name|numJobsPreparing
operator|==
literal|1
argument_list|)
expr_stmt|;
name|job
operator|.
name|setClusterSize
argument_list|(
name|trackers
operator|.
name|length
argument_list|)
expr_stmt|;
name|job
operator|.
name|initTasks
argument_list|()
expr_stmt|;
name|jobTracker
operator|.
name|addJob
argument_list|(
name|job
operator|.
name|getJobID
argument_list|()
argument_list|,
name|job
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|0
index|]
operator|=
name|job
operator|.
name|findMapTask
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|1
index|]
operator|=
name|job
operator|.
name|findMapTask
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|2
index|]
operator|=
name|job
operator|.
name|findReduceTask
argument_list|(
name|trackers
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|job
operator|.
name|finishTask
argument_list|(
name|taskAttemptID
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|job
operator|.
name|finishTask
argument_list|(
name|taskAttemptID
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|job
operator|.
name|finishTask
argument_list|(
name|taskAttemptID
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|jobTracker
operator|.
name|finalizeJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in map tasks launched"
argument_list|,
name|mi
operator|.
name|numMapTasksLaunched
operator|==
name|numMaps
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in map tasks completed"
argument_list|,
name|mi
operator|.
name|numMapTasksCompleted
operator|==
name|numMaps
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in map tasks failed"
argument_list|,
name|mi
operator|.
name|numMapTasksFailed
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in reduce tasks launched"
argument_list|,
name|mi
operator|.
name|numReduceTasksLaunched
operator|==
name|numReds
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in reduce tasks completed"
argument_list|,
name|mi
operator|.
name|numReduceTasksCompleted
operator|==
name|numReds
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in reduce tasks failed"
argument_list|,
name|mi
operator|.
name|numReduceTasksFailed
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in num Jobs submitted"
argument_list|,
name|mi
operator|.
name|numJobsSubmitted
operator|==
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in num map slots"
argument_list|,
name|mi
operator|.
name|numMapSlots
operator|==
operator|(
name|mapSlotsPerTracker
operator|*
name|trackers
operator|.
name|length
operator|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Mismatch in num reduce slots"
argument_list|,
name|mi
operator|.
name|numReduceSlots
operator|==
operator|(
name|reduceSlotsPerTracker
operator|*
name|trackers
operator|.
name|length
operator|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No heartbeats were recorded, but at least one was sent."
argument_list|,
name|mi
operator|.
name|numHeartbeats
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|testBlackListing ()
specifier|public
name|void
name|testBlackListing
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|numMaps
decl_stmt|,
name|numReds
decl_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxTaskFailuresPerTracker
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|JobContext
operator|.
name|SETUP_CLEANUP_NEEDED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|TaskAttemptID
index|[]
name|taskAttemptID
init|=
operator|new
name|TaskAttemptID
index|[
literal|3
index|]
decl_stmt|;
name|numMaps
operator|=
literal|1
expr_stmt|;
name|numReds
operator|=
literal|1
expr_stmt|;
name|conf
operator|.
name|setNumMapTasks
argument_list|(
name|numMaps
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setNumReduceTasks
argument_list|(
name|numReds
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|JobContext
operator|.
name|SETUP_CLEANUP_NEEDED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|FakeJobInProgress
name|job1
init|=
operator|new
name|FakeJobInProgress
argument_list|(
name|conf
argument_list|,
name|jobTracker
argument_list|)
decl_stmt|;
name|job1
operator|.
name|setClusterSize
argument_list|(
name|trackers
operator|.
name|length
argument_list|)
expr_stmt|;
name|job1
operator|.
name|initTasks
argument_list|()
expr_stmt|;
name|jobTracker
operator|.
name|addJob
argument_list|(
name|job1
operator|.
name|getJobID
argument_list|()
argument_list|,
name|job1
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|0
index|]
operator|=
name|job1
operator|.
name|findMapTask
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|failTask
argument_list|(
name|taskAttemptID
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|1
index|]
operator|=
name|job1
operator|.
name|findMapTask
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|finishTask
argument_list|(
name|taskAttemptID
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|2
index|]
operator|=
name|job1
operator|.
name|findReduceTask
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|failTask
argument_list|(
name|taskAttemptID
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|2
index|]
operator|=
name|job1
operator|.
name|findReduceTask
argument_list|(
name|trackers
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|finishTask
argument_list|(
name|taskAttemptID
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|jobTracker
operator|.
name|finalizeJob
argument_list|(
name|job1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of failed map tasks"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numMapTasksFailed
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of failed reduce tasks"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numReduceTasksFailed
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of blacklisted trackers"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numTrackersBlackListed
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in blacklisted map slots"
argument_list|,
name|mi
operator|.
name|numBlackListedMapSlots
argument_list|,
operator|(
name|mapSlotsPerTracker
operator|*
name|mi
operator|.
name|numTrackersBlackListed
operator|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in blacklisted reduce slots"
argument_list|,
name|mi
operator|.
name|numBlackListedReduceSlots
argument_list|,
operator|(
name|reduceSlotsPerTracker
operator|*
name|mi
operator|.
name|numTrackersBlackListed
operator|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testOccupiedSlotCounts ()
specifier|public
name|void
name|testOccupiedSlotCounts
parameter_list|()
throws|throws
name|Exception
block|{
name|TaskTrackerStatus
index|[]
name|status
init|=
operator|new
name|TaskTrackerStatus
index|[
name|trackers
operator|.
name|length
index|]
decl_stmt|;
name|List
argument_list|<
name|TaskStatus
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
decl_stmt|;
comment|// create a map task status, which uses 2 slots.
name|int
name|mapSlotsPerTask
init|=
literal|2
decl_stmt|;
name|TaskStatus
name|ts
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
literal|true
argument_list|,
operator|new
name|TaskAttemptID
argument_list|(
literal|"jt"
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
name|mapSlotsPerTask
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|trackers
index|[
literal|0
index|]
argument_list|,
name|TaskStatus
operator|.
name|Phase
operator|.
name|MAP
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|int
name|mapSlotsPerTask1
init|=
literal|1
decl_stmt|;
name|ts
operator|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
literal|true
argument_list|,
operator|new
name|TaskAttemptID
argument_list|(
literal|"jt"
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
name|mapSlotsPerTask1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|trackers
index|[
literal|0
index|]
argument_list|,
name|TaskStatus
operator|.
name|Phase
operator|.
name|MAP
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|ts
argument_list|)
expr_stmt|;
comment|// create a reduce task status, which uses 3 slot.
name|int
name|reduceSlotsPerTask
init|=
literal|3
decl_stmt|;
name|ts
operator|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
literal|false
argument_list|,
operator|new
name|TaskAttemptID
argument_list|(
literal|"jt"
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
name|reduceSlotsPerTask
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|trackers
index|[
literal|0
index|]
argument_list|,
name|TaskStatus
operator|.
name|Phase
operator|.
name|REDUCE
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|int
name|reduceSlotsPerTask1
init|=
literal|1
decl_stmt|;
name|ts
operator|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
literal|false
argument_list|,
operator|new
name|TaskAttemptID
argument_list|(
literal|"jt"
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
name|reduceSlotsPerTask1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|trackers
index|[
literal|0
index|]
argument_list|,
name|TaskStatus
operator|.
name|Phase
operator|.
name|REDUCE
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|ts
argument_list|)
expr_stmt|;
comment|// create TaskTrackerStatus and send heartbeats
name|status
operator|=
operator|new
name|TaskTrackerStatus
index|[
name|trackers
operator|.
name|length
index|]
expr_stmt|;
name|status
index|[
literal|0
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|,
name|list
argument_list|)
expr_stmt|;
name|status
index|[
literal|1
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|status
index|[
literal|2
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|2
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|trackers
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|FakeObjectUtilities
operator|.
name|sendHeartBeat
argument_list|(
name|jobTracker
argument_list|,
name|status
index|[
name|i
index|]
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|trackers
index|[
name|i
index|]
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
block|}
name|responseId
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in map slots occupied"
argument_list|,
name|mapSlotsPerTask
operator|+
name|mapSlotsPerTask1
argument_list|,
name|mi
operator|.
name|numOccupiedMapSlots
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in reduce slots occupied"
argument_list|,
name|reduceSlotsPerTask
operator|+
name|reduceSlotsPerTask1
argument_list|,
name|mi
operator|.
name|numOccupiedReduceSlots
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in num  running maps"
argument_list|,
literal|2
argument_list|,
name|mi
operator|.
name|numRunningMaps
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in num running reduces"
argument_list|,
literal|2
argument_list|,
name|mi
operator|.
name|numRunningReduces
argument_list|)
expr_stmt|;
comment|//now send heartbeat with no running tasks
name|status
operator|=
operator|new
name|TaskTrackerStatus
index|[
literal|1
index|]
expr_stmt|;
name|status
index|[
literal|0
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|FakeObjectUtilities
operator|.
name|sendHeartBeat
argument_list|(
name|jobTracker
argument_list|,
name|status
index|[
literal|0
index|]
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|trackers
index|[
literal|0
index|]
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in map slots occupied"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numOccupiedMapSlots
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in reduce slots occupied"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numOccupiedReduceSlots
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in num  running maps"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numRunningMaps
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in num running reduces"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numRunningReduces
argument_list|)
expr_stmt|;
block|}
DECL|method|testReservedSlots ()
specifier|public
name|void
name|testReservedSlots
parameter_list|()
throws|throws
name|IOException
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setNumMapTasks
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setNumReduceTasks
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|//Set task tracker objects for reservation.
name|TaskTracker
name|tt2
init|=
name|jobTracker
operator|.
name|getTaskTracker
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|TaskTrackerStatus
name|status2
init|=
operator|new
name|TaskTrackerStatus
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|)
argument_list|,
literal|0
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|tt2
operator|.
name|setStatus
argument_list|(
name|status2
argument_list|)
expr_stmt|;
name|fakeJob
operator|=
operator|new
name|FakeJobInProgress
argument_list|(
name|conf
argument_list|,
name|jobTracker
argument_list|)
expr_stmt|;
name|fakeJob
operator|.
name|setClusterSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|fakeJob
operator|.
name|initTasks
argument_list|()
expr_stmt|;
name|FakeObjectUtilities
operator|.
name|sendHeartBeat
argument_list|(
name|jobTracker
argument_list|,
name|status2
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
name|trackers
index|[
literal|1
index|]
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
name|responseId
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismtach in reserved map slots"
argument_list|,
name|numMapSlotsToReserve
argument_list|,
name|mi
operator|.
name|numReservedMapSlots
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismtach in reserved red slots"
argument_list|,
name|numReduceSlotsToReserve
argument_list|,
name|mi
operator|.
name|numReservedReduceSlots
argument_list|)
expr_stmt|;
block|}
DECL|method|testDecomissionedTrackers ()
specifier|public
name|void
name|testDecomissionedTrackers
parameter_list|()
throws|throws
name|IOException
block|{
comment|// create TaskTrackerStatus and send heartbeats
name|TaskTrackerStatus
index|[]
name|status
init|=
operator|new
name|TaskTrackerStatus
index|[
name|trackers
operator|.
name|length
index|]
decl_stmt|;
name|status
index|[
literal|0
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|status
index|[
literal|1
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|1
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|status
index|[
literal|2
index|]
operator|=
name|getTTStatus
argument_list|(
name|trackers
index|[
literal|2
index|]
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|TaskStatus
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|trackers
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|FakeObjectUtilities
operator|.
name|sendHeartBeat
argument_list|(
name|jobTracker
argument_list|,
name|status
index|[
name|i
index|]
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|trackers
index|[
name|i
index|]
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"Mismatch in number of trackers"
argument_list|,
name|trackers
operator|.
name|length
argument_list|,
name|mi
operator|.
name|numTrackers
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|dHosts
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|dHosts
operator|.
name|add
argument_list|(
name|hosts
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of decommissioned trackers"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numTrackersDecommissioned
argument_list|)
expr_stmt|;
name|jobTracker
operator|.
name|decommissionNodes
argument_list|(
name|dHosts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of decommissioned trackers"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numTrackersDecommissioned
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of trackers"
argument_list|,
name|trackers
operator|.
name|length
operator|-
literal|1
argument_list|,
name|mi
operator|.
name|numTrackers
argument_list|)
expr_stmt|;
block|}
DECL|method|testKillTasks ()
specifier|public
name|void
name|testKillTasks
parameter_list|()
throws|throws
name|IOException
block|{
name|int
name|numMaps
decl_stmt|,
name|numReds
decl_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxTaskFailuresPerTracker
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|JobContext
operator|.
name|SETUP_CLEANUP_NEEDED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|TaskAttemptID
index|[]
name|taskAttemptID
init|=
operator|new
name|TaskAttemptID
index|[
literal|2
index|]
decl_stmt|;
name|numMaps
operator|=
literal|1
expr_stmt|;
name|numReds
operator|=
literal|1
expr_stmt|;
name|conf
operator|.
name|setNumMapTasks
argument_list|(
name|numMaps
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setNumReduceTasks
argument_list|(
name|numReds
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|JobContext
operator|.
name|SETUP_CLEANUP_NEEDED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of killed map tasks"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numMapTasksKilled
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of killed reduce tasks"
argument_list|,
literal|0
argument_list|,
name|mi
operator|.
name|numReduceTasksKilled
argument_list|)
expr_stmt|;
name|FakeJobInProgress
name|job1
init|=
operator|new
name|FakeJobInProgress
argument_list|(
name|conf
argument_list|,
name|jobTracker
argument_list|)
decl_stmt|;
name|job1
operator|.
name|setClusterSize
argument_list|(
name|trackers
operator|.
name|length
argument_list|)
expr_stmt|;
name|job1
operator|.
name|initTasks
argument_list|()
expr_stmt|;
name|jobTracker
operator|.
name|addJob
argument_list|(
name|job1
operator|.
name|getJobID
argument_list|()
argument_list|,
name|job1
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|0
index|]
operator|=
name|job1
operator|.
name|findMapTask
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|killTask
argument_list|(
name|taskAttemptID
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|taskAttemptID
index|[
literal|1
index|]
operator|=
name|job1
operator|.
name|findReduceTask
argument_list|(
name|trackers
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|job1
operator|.
name|killTask
argument_list|(
name|taskAttemptID
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|jobTracker
operator|.
name|finalizeJob
argument_list|(
name|job1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of killed map tasks"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numMapTasksKilled
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mismatch in number of killed reduce tasks"
argument_list|,
literal|1
argument_list|,
name|mi
operator|.
name|numReduceTasksKilled
argument_list|)
expr_stmt|;
block|}
DECL|class|FakeTaskScheduler
specifier|static
class|class
name|FakeTaskScheduler
extends|extends
name|JobQueueTaskScheduler
block|{
DECL|method|FakeTaskScheduler ()
specifier|public
name|FakeTaskScheduler
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|assignTasks (TaskTracker tt)
specifier|public
name|List
argument_list|<
name|Task
argument_list|>
name|assignTasks
parameter_list|(
name|TaskTracker
name|tt
parameter_list|)
block|{
name|tt
operator|.
name|reserveSlots
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|,
name|fakeJob
argument_list|,
name|numMapSlotsToReserve
argument_list|)
expr_stmt|;
name|tt
operator|.
name|reserveSlots
argument_list|(
name|TaskType
operator|.
name|REDUCE
argument_list|,
name|fakeJob
argument_list|,
name|numReduceSlotsToReserve
argument_list|)
expr_stmt|;
return|return
operator|new
name|ArrayList
argument_list|<
name|Task
argument_list|>
argument_list|()
return|;
block|}
block|}
DECL|class|FakeJobInProgress
specifier|static
class|class
name|FakeJobInProgress
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TestTaskTrackerBlacklisting
operator|.
name|FakeJobInProgress
block|{
DECL|method|FakeJobInProgress (JobConf jobConf, JobTracker tracker)
name|FakeJobInProgress
parameter_list|(
name|JobConf
name|jobConf
parameter_list|,
name|JobTracker
name|tracker
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|jobConf
argument_list|,
name|tracker
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initTasks ()
specifier|public
specifier|synchronized
name|void
name|initTasks
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|initTasks
argument_list|()
expr_stmt|;
name|jobtracker
operator|.
name|getInstrumentation
argument_list|()
operator|.
name|addWaitingMaps
argument_list|(
name|getJobID
argument_list|()
argument_list|,
name|numMapTasks
argument_list|)
expr_stmt|;
name|jobtracker
operator|.
name|getInstrumentation
argument_list|()
operator|.
name|addWaitingReduces
argument_list|(
name|getJobID
argument_list|()
argument_list|,
name|numReduceTasks
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

