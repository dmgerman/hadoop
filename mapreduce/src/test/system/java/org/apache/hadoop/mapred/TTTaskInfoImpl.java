begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|test
operator|.
name|system
operator|.
name|TTTaskInfo
import|;
end_import

begin_comment
comment|/**  * Abstract class which passes the Task view of the TaskTracker to the client.  * See {@link TTInfoImpl} for further details.  *  */
end_comment

begin_class
DECL|class|TTTaskInfoImpl
specifier|abstract
class|class
name|TTTaskInfoImpl
implements|implements
name|TTTaskInfo
block|{
DECL|field|slotTaken
specifier|private
name|boolean
name|slotTaken
decl_stmt|;
DECL|field|wasKilled
specifier|private
name|boolean
name|wasKilled
decl_stmt|;
DECL|field|status
name|TaskStatus
name|status
decl_stmt|;
DECL|field|conf
name|Configuration
name|conf
decl_stmt|;
DECL|field|user
name|String
name|user
decl_stmt|;
DECL|field|isTaskCleanupTask
name|boolean
name|isTaskCleanupTask
decl_stmt|;
DECL|field|pid
specifier|private
name|String
name|pid
decl_stmt|;
DECL|method|TTTaskInfoImpl ()
specifier|public
name|TTTaskInfoImpl
parameter_list|()
block|{   }
DECL|method|TTTaskInfoImpl (boolean slotTaken, boolean wasKilled, TaskStatus status, Configuration conf, String user, boolean isTaskCleanupTask, String pid)
specifier|public
name|TTTaskInfoImpl
parameter_list|(
name|boolean
name|slotTaken
parameter_list|,
name|boolean
name|wasKilled
parameter_list|,
name|TaskStatus
name|status
parameter_list|,
name|Configuration
name|conf
parameter_list|,
name|String
name|user
parameter_list|,
name|boolean
name|isTaskCleanupTask
parameter_list|,
name|String
name|pid
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|slotTaken
operator|=
name|slotTaken
expr_stmt|;
name|this
operator|.
name|wasKilled
operator|=
name|wasKilled
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|isTaskCleanupTask
operator|=
name|isTaskCleanupTask
expr_stmt|;
name|this
operator|.
name|pid
operator|=
name|pid
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|slotTaken ()
specifier|public
name|boolean
name|slotTaken
parameter_list|()
block|{
return|return
name|slotTaken
return|;
block|}
annotation|@
name|Override
DECL|method|wasKilled ()
specifier|public
name|boolean
name|wasKilled
parameter_list|()
block|{
return|return
name|wasKilled
return|;
block|}
annotation|@
name|Override
DECL|method|getTaskStatus ()
specifier|public
specifier|abstract
name|TaskStatus
name|getTaskStatus
parameter_list|()
function_decl|;
annotation|@
name|Override
DECL|method|getConf ()
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
annotation|@
name|Override
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
annotation|@
name|Override
DECL|method|isTaskCleanupTask ()
specifier|public
name|boolean
name|isTaskCleanupTask
parameter_list|()
block|{
return|return
name|isTaskCleanupTask
return|;
block|}
annotation|@
name|Override
DECL|method|getPid ()
specifier|public
name|String
name|getPid
parameter_list|()
block|{
return|return
name|pid
return|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|slotTaken
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|wasKilled
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|user
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|isTaskCleanupTask
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|pid
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
name|slotTaken
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|wasKilled
argument_list|)
expr_stmt|;
name|conf
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeUTF
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|isTaskCleanupTask
argument_list|)
expr_stmt|;
if|if
condition|(
name|pid
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|writeUTF
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|status
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
DECL|class|MapTTTaskInfo
specifier|static
class|class
name|MapTTTaskInfo
extends|extends
name|TTTaskInfoImpl
block|{
DECL|method|MapTTTaskInfo ()
specifier|public
name|MapTTTaskInfo
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|MapTTTaskInfo (boolean slotTaken, boolean wasKilled, MapTaskStatus status, Configuration conf, String user, boolean isTaskCleanup,String pid)
specifier|public
name|MapTTTaskInfo
parameter_list|(
name|boolean
name|slotTaken
parameter_list|,
name|boolean
name|wasKilled
parameter_list|,
name|MapTaskStatus
name|status
parameter_list|,
name|Configuration
name|conf
parameter_list|,
name|String
name|user
parameter_list|,
name|boolean
name|isTaskCleanup
parameter_list|,
name|String
name|pid
parameter_list|)
block|{
name|super
argument_list|(
name|slotTaken
argument_list|,
name|wasKilled
argument_list|,
name|status
argument_list|,
name|conf
argument_list|,
name|user
argument_list|,
name|isTaskCleanup
argument_list|,
name|pid
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTaskStatus ()
specifier|public
name|TaskStatus
name|getTaskStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|status
operator|=
operator|new
name|MapTaskStatus
argument_list|()
expr_stmt|;
name|status
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|ReduceTTTaskInfo
specifier|static
class|class
name|ReduceTTTaskInfo
extends|extends
name|TTTaskInfoImpl
block|{
DECL|method|ReduceTTTaskInfo ()
specifier|public
name|ReduceTTTaskInfo
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|ReduceTTTaskInfo (boolean slotTaken, boolean wasKilled, ReduceTaskStatus status, Configuration conf, String user, boolean isTaskCleanup, String pid)
specifier|public
name|ReduceTTTaskInfo
parameter_list|(
name|boolean
name|slotTaken
parameter_list|,
name|boolean
name|wasKilled
parameter_list|,
name|ReduceTaskStatus
name|status
parameter_list|,
name|Configuration
name|conf
parameter_list|,
name|String
name|user
parameter_list|,
name|boolean
name|isTaskCleanup
parameter_list|,
name|String
name|pid
parameter_list|)
block|{
name|super
argument_list|(
name|slotTaken
argument_list|,
name|wasKilled
argument_list|,
name|status
argument_list|,
name|conf
argument_list|,
name|user
argument_list|,
name|isTaskCleanup
argument_list|,
name|pid
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTaskStatus ()
specifier|public
name|TaskStatus
name|getTaskStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|status
operator|=
operator|new
name|ReduceTaskStatus
argument_list|()
expr_stmt|;
name|status
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

