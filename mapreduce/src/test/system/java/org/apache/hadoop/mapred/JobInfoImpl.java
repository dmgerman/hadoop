begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|test
operator|.
name|system
operator|.
name|JobInfo
import|;
end_import

begin_comment
comment|/**  * Concrete implementation of the JobInfo interface which is exposed to the  * clients.  * Look at {@link JobInfo} for further details.  */
end_comment

begin_class
DECL|class|JobInfoImpl
class|class
name|JobInfoImpl
implements|implements
name|JobInfo
block|{
DECL|field|blackListedTracker
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|blackListedTracker
decl_stmt|;
DECL|field|historyUrl
specifier|private
name|String
name|historyUrl
decl_stmt|;
DECL|field|id
specifier|private
name|JobID
name|id
decl_stmt|;
DECL|field|setupLaunched
specifier|private
name|boolean
name|setupLaunched
decl_stmt|;
DECL|field|setupFinished
specifier|private
name|boolean
name|setupFinished
decl_stmt|;
DECL|field|cleanupLaunched
specifier|private
name|boolean
name|cleanupLaunched
decl_stmt|;
DECL|field|status
specifier|private
name|JobStatus
name|status
decl_stmt|;
DECL|field|runningMaps
specifier|private
name|int
name|runningMaps
decl_stmt|;
DECL|field|runningReduces
specifier|private
name|int
name|runningReduces
decl_stmt|;
DECL|field|waitingMaps
specifier|private
name|int
name|waitingMaps
decl_stmt|;
DECL|field|waitingReduces
specifier|private
name|int
name|waitingReduces
decl_stmt|;
DECL|field|finishedMaps
specifier|private
name|int
name|finishedMaps
decl_stmt|;
DECL|field|finishedReduces
specifier|private
name|int
name|finishedReduces
decl_stmt|;
DECL|field|numMaps
specifier|private
name|int
name|numMaps
decl_stmt|;
DECL|field|numReduces
specifier|private
name|int
name|numReduces
decl_stmt|;
DECL|field|historyCopied
specifier|private
name|boolean
name|historyCopied
decl_stmt|;
DECL|method|JobInfoImpl ()
specifier|public
name|JobInfoImpl
parameter_list|()
block|{
name|id
operator|=
operator|new
name|JobID
argument_list|()
expr_stmt|;
name|status
operator|=
operator|new
name|JobStatus
argument_list|()
expr_stmt|;
name|blackListedTracker
operator|=
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|historyUrl
operator|=
literal|""
expr_stmt|;
block|}
DECL|method|JobInfoImpl ( JobID id, boolean setupLaunched, boolean setupFinished, boolean cleanupLaunched, int runningMaps, int runningReduces, int waitingMaps, int waitingReduces, int finishedMaps, int finishedReduces, JobStatus status, String historyUrl, List<String> blackListedTracker, boolean isComplete, int numMaps, int numReduces, boolean historyCopied)
specifier|public
name|JobInfoImpl
parameter_list|(
name|JobID
name|id
parameter_list|,
name|boolean
name|setupLaunched
parameter_list|,
name|boolean
name|setupFinished
parameter_list|,
name|boolean
name|cleanupLaunched
parameter_list|,
name|int
name|runningMaps
parameter_list|,
name|int
name|runningReduces
parameter_list|,
name|int
name|waitingMaps
parameter_list|,
name|int
name|waitingReduces
parameter_list|,
name|int
name|finishedMaps
parameter_list|,
name|int
name|finishedReduces
parameter_list|,
name|JobStatus
name|status
parameter_list|,
name|String
name|historyUrl
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|blackListedTracker
parameter_list|,
name|boolean
name|isComplete
parameter_list|,
name|int
name|numMaps
parameter_list|,
name|int
name|numReduces
parameter_list|,
name|boolean
name|historyCopied
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|blackListedTracker
operator|=
name|blackListedTracker
expr_stmt|;
name|this
operator|.
name|historyUrl
operator|=
name|historyUrl
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|setupLaunched
operator|=
name|setupLaunched
expr_stmt|;
name|this
operator|.
name|setupFinished
operator|=
name|setupFinished
expr_stmt|;
name|this
operator|.
name|cleanupLaunched
operator|=
name|cleanupLaunched
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|runningMaps
operator|=
name|runningMaps
expr_stmt|;
name|this
operator|.
name|runningReduces
operator|=
name|runningReduces
expr_stmt|;
name|this
operator|.
name|waitingMaps
operator|=
name|waitingMaps
expr_stmt|;
name|this
operator|.
name|waitingReduces
operator|=
name|waitingReduces
expr_stmt|;
name|this
operator|.
name|finishedMaps
operator|=
name|finishedMaps
expr_stmt|;
name|this
operator|.
name|finishedReduces
operator|=
name|finishedReduces
expr_stmt|;
name|this
operator|.
name|numMaps
operator|=
name|numMaps
expr_stmt|;
name|this
operator|.
name|numReduces
operator|=
name|numReduces
expr_stmt|;
name|this
operator|.
name|historyCopied
operator|=
name|historyCopied
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBlackListedTrackers ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getBlackListedTrackers
parameter_list|()
block|{
return|return
name|blackListedTracker
return|;
block|}
annotation|@
name|Override
DECL|method|getHistoryUrl ()
specifier|public
name|String
name|getHistoryUrl
parameter_list|()
block|{
return|return
name|historyUrl
return|;
block|}
annotation|@
name|Override
DECL|method|getID ()
specifier|public
name|JobID
name|getID
parameter_list|()
block|{
return|return
name|id
return|;
block|}
annotation|@
name|Override
DECL|method|getStatus ()
specifier|public
name|JobStatus
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
annotation|@
name|Override
DECL|method|isCleanupLaunched ()
specifier|public
name|boolean
name|isCleanupLaunched
parameter_list|()
block|{
return|return
name|cleanupLaunched
return|;
block|}
annotation|@
name|Override
DECL|method|isSetupLaunched ()
specifier|public
name|boolean
name|isSetupLaunched
parameter_list|()
block|{
return|return
name|setupLaunched
return|;
block|}
annotation|@
name|Override
DECL|method|isSetupFinished ()
specifier|public
name|boolean
name|isSetupFinished
parameter_list|()
block|{
return|return
name|setupFinished
return|;
block|}
annotation|@
name|Override
DECL|method|runningMaps ()
specifier|public
name|int
name|runningMaps
parameter_list|()
block|{
return|return
name|runningMaps
return|;
block|}
annotation|@
name|Override
DECL|method|runningReduces ()
specifier|public
name|int
name|runningReduces
parameter_list|()
block|{
return|return
name|runningReduces
return|;
block|}
annotation|@
name|Override
DECL|method|waitingMaps ()
specifier|public
name|int
name|waitingMaps
parameter_list|()
block|{
return|return
name|waitingMaps
return|;
block|}
annotation|@
name|Override
DECL|method|waitingReduces ()
specifier|public
name|int
name|waitingReduces
parameter_list|()
block|{
return|return
name|waitingReduces
return|;
block|}
annotation|@
name|Override
DECL|method|finishedMaps ()
specifier|public
name|int
name|finishedMaps
parameter_list|()
block|{
return|return
name|finishedMaps
return|;
block|}
annotation|@
name|Override
DECL|method|finishedReduces ()
specifier|public
name|int
name|finishedReduces
parameter_list|()
block|{
return|return
name|finishedReduces
return|;
block|}
annotation|@
name|Override
DECL|method|numMaps ()
specifier|public
name|int
name|numMaps
parameter_list|()
block|{
return|return
name|numMaps
return|;
block|}
annotation|@
name|Override
DECL|method|numReduces ()
specifier|public
name|int
name|numReduces
parameter_list|()
block|{
return|return
name|numReduces
return|;
block|}
annotation|@
name|Override
DECL|method|isHistoryFileCopied ()
specifier|public
name|boolean
name|isHistoryFileCopied
parameter_list|()
block|{
return|return
name|historyCopied
return|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|id
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|setupLaunched
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|setupFinished
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|cleanupLaunched
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
name|status
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|runningMaps
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|runningReduces
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|waitingMaps
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|waitingReduces
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|historyUrl
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
name|int
name|size
init|=
name|in
operator|.
name|readInt
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|blackListedTracker
operator|.
name|add
argument_list|(
name|in
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|finishedMaps
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|finishedReduces
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|numMaps
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|numReduces
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|historyCopied
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|id
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|setupLaunched
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|setupFinished
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|cleanupLaunched
argument_list|)
expr_stmt|;
name|status
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|runningMaps
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|runningReduces
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|waitingMaps
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|waitingReduces
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeUTF
argument_list|(
name|historyUrl
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|blackListedTracker
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|str
range|:
name|blackListedTracker
control|)
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|str
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeInt
argument_list|(
name|finishedMaps
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|finishedReduces
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|numMaps
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|numReduces
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|historyCopied
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

