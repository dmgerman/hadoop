begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactory
import|;
end_import

begin_comment
comment|/**************************************************  * A JobProfile is a MapReduce primitive.  Tracks a job,  * whether living or dead.  *  **************************************************/
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"MapReduce"
block|}
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|JobProfile
specifier|public
class|class
name|JobProfile
implements|implements
name|Writable
block|{
static|static
block|{
comment|// register a ctor
name|WritableFactories
operator|.
name|setFactory
argument_list|(
name|JobProfile
operator|.
name|class
argument_list|,
operator|new
name|WritableFactory
argument_list|()
block|{
specifier|public
name|Writable
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|JobProfile
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|field|user
name|String
name|user
decl_stmt|;
DECL|field|jobid
specifier|final
name|JobID
name|jobid
decl_stmt|;
DECL|field|jobFile
name|String
name|jobFile
decl_stmt|;
DECL|field|url
name|String
name|url
decl_stmt|;
DECL|field|name
name|String
name|name
decl_stmt|;
DECL|field|queueName
name|String
name|queueName
decl_stmt|;
comment|/**    * Construct an empty {@link JobProfile}.    */
DECL|method|JobProfile ()
specifier|public
name|JobProfile
parameter_list|()
block|{
name|jobid
operator|=
operator|new
name|JobID
argument_list|()
expr_stmt|;
block|}
comment|/**    * Construct a {@link JobProfile} the userid, jobid,     * job config-file, job-details url and job name.     *     * @param user userid of the person who submitted the job.    * @param jobid id of the job.    * @param jobFile job configuration file.     * @param url link to the web-ui for details of the job.    * @param name user-specified job name.    */
DECL|method|JobProfile (String user, org.apache.hadoop.mapreduce.JobID jobid, String jobFile, String url, String name)
specifier|public
name|JobProfile
parameter_list|(
name|String
name|user
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|jobid
parameter_list|,
name|String
name|jobFile
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|user
argument_list|,
name|jobid
argument_list|,
name|jobFile
argument_list|,
name|url
argument_list|,
name|name
argument_list|,
name|JobConf
operator|.
name|DEFAULT_QUEUE_NAME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Construct a {@link JobProfile} the userid, jobid,     * job config-file, job-details url and job name.     *     * @param user userid of the person who submitted the job.    * @param jobid id of the job.    * @param jobFile job configuration file.     * @param url link to the web-ui for details of the job.    * @param name user-specified job name.    * @param queueName name of the queue to which the job is submitted    */
DECL|method|JobProfile (String user, org.apache.hadoop.mapreduce.JobID jobid, String jobFile, String url, String name, String queueName)
specifier|public
name|JobProfile
parameter_list|(
name|String
name|user
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|jobid
parameter_list|,
name|String
name|jobFile
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|queueName
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|jobid
operator|=
name|JobID
operator|.
name|downgrade
argument_list|(
name|jobid
argument_list|)
expr_stmt|;
name|this
operator|.
name|jobFile
operator|=
name|jobFile
expr_stmt|;
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|queueName
operator|=
name|queueName
expr_stmt|;
block|}
comment|/**    * @deprecated use JobProfile(String, JobID, String, String, String) instead    */
annotation|@
name|Deprecated
DECL|method|JobProfile (String user, String jobid, String jobFile, String url, String name)
specifier|public
name|JobProfile
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|jobid
parameter_list|,
name|String
name|jobFile
parameter_list|,
name|String
name|url
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|user
argument_list|,
name|JobID
operator|.
name|forName
argument_list|(
name|jobid
argument_list|)
argument_list|,
name|jobFile
argument_list|,
name|url
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get the user id.    */
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
comment|/**    * Get the job id.    */
DECL|method|getJobID ()
specifier|public
name|JobID
name|getJobID
parameter_list|()
block|{
return|return
name|jobid
return|;
block|}
comment|/**    * @deprecated use getJobID() instead    */
annotation|@
name|Deprecated
DECL|method|getJobId ()
specifier|public
name|String
name|getJobId
parameter_list|()
block|{
return|return
name|jobid
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**    * Get the configuration file for the job.    */
DECL|method|getJobFile ()
specifier|public
name|String
name|getJobFile
parameter_list|()
block|{
return|return
name|jobFile
return|;
block|}
comment|/**    * Get the link to the web-ui for details of the job.    */
DECL|method|getURL ()
specifier|public
name|URL
name|getURL
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|URL
argument_list|(
name|url
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ie
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
comment|/**    * Get the user-specified job name.    */
DECL|method|getJobName ()
specifier|public
name|String
name|getJobName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**    * Get the name of the queue to which the job is submitted.    * @return name of the queue.    */
DECL|method|getQueueName ()
specifier|public
name|String
name|getQueueName
parameter_list|()
block|{
return|return
name|queueName
return|;
block|}
comment|///////////////////////////////////////
comment|// Writable
comment|///////////////////////////////////////
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|jobid
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|jobFile
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|queueName
argument_list|)
expr_stmt|;
block|}
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|jobid
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|jobFile
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|url
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|queueName
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

