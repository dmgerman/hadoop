begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|examples
operator|.
name|Sort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
operator|.
name|FileInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|jobcontrol
operator|.
name|ControlledJob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|jobcontrol
operator|.
name|JobControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
operator|.
name|KeyValueTextInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|TextOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
operator|.
name|StreamJob
import|;
end_import

begin_class
DECL|class|GridMixRunner
specifier|public
class|class
name|GridMixRunner
block|{
DECL|field|NUM_OF_LARGE_JOBS_PER_CLASS
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_LARGE_JOBS_PER_CLASS
init|=
literal|0
decl_stmt|;
DECL|field|NUM_OF_MEDIUM_JOBS_PER_CLASS
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_MEDIUM_JOBS_PER_CLASS
init|=
literal|0
decl_stmt|;
DECL|field|NUM_OF_SMALL_JOBS_PER_CLASS
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_SMALL_JOBS_PER_CLASS
init|=
literal|0
decl_stmt|;
DECL|field|NUM_OF_REDUCERS_FOR_SMALL_JOB
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_REDUCERS_FOR_SMALL_JOB
init|=
literal|15
decl_stmt|;
DECL|field|NUM_OF_REDUCERS_FOR_MEDIUM_JOB
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_REDUCERS_FOR_MEDIUM_JOB
init|=
literal|170
decl_stmt|;
DECL|field|NUM_OF_REDUCERS_FOR_LARGE_JOB
specifier|private
specifier|static
specifier|final
name|int
name|NUM_OF_REDUCERS_FOR_LARGE_JOB
init|=
literal|370
decl_stmt|;
DECL|field|GRID_MIX_DATA
specifier|private
specifier|static
specifier|final
name|String
name|GRID_MIX_DATA
init|=
literal|"/gridmix/data"
decl_stmt|;
DECL|field|VARCOMPSEQ
specifier|private
specifier|static
specifier|final
name|String
name|VARCOMPSEQ
init|=
name|GRID_MIX_DATA
operator|+
literal|"/WebSimulationBlockCompressed"
decl_stmt|;
DECL|field|FIXCOMPSEQ
specifier|private
specifier|static
specifier|final
name|String
name|FIXCOMPSEQ
init|=
name|GRID_MIX_DATA
operator|+
literal|"/MonsterQueryBlockCompressed"
decl_stmt|;
DECL|field|VARINFLTEXT
specifier|private
specifier|static
specifier|final
name|String
name|VARINFLTEXT
init|=
name|GRID_MIX_DATA
operator|+
literal|"/SortUncompressed"
decl_stmt|;
DECL|field|GRIDMIXCONFIG
specifier|private
specifier|static
specifier|final
name|String
name|GRIDMIXCONFIG
init|=
literal|"gridmix_config.xml"
decl_stmt|;
DECL|field|config
specifier|private
specifier|static
specifier|final
name|Configuration
name|config
init|=
name|initConfig
argument_list|()
decl_stmt|;
DECL|field|fs
specifier|private
specifier|static
specifier|final
name|FileSystem
name|fs
init|=
name|initFs
argument_list|()
decl_stmt|;
DECL|field|gridmix
specifier|private
specifier|final
name|JobControl
name|gridmix
decl_stmt|;
DECL|field|numOfJobs
specifier|private
name|int
name|numOfJobs
init|=
literal|0
decl_stmt|;
DECL|enum|Size
specifier|private
enum|enum
name|Size
block|{
DECL|enumConstant|SMALL
name|SMALL
argument_list|(
literal|"small"
argument_list|,
comment|// name
literal|"/{part-*-00000,part-*-00001,part-*-00002}"
argument_list|,
comment|// default input subset
name|NUM_OF_SMALL_JOBS_PER_CLASS
argument_list|,
comment|// defuault num jobs
name|NUM_OF_REDUCERS_FOR_SMALL_JOB
argument_list|)
block|,
comment|// default num reducers
DECL|enumConstant|MEDIUM
name|MEDIUM
argument_list|(
literal|"medium"
argument_list|,
comment|// name
literal|"/{part-*-000*0, part-*-000*1, part-*-000*2}"
argument_list|,
comment|// default input subset
name|NUM_OF_MEDIUM_JOBS_PER_CLASS
argument_list|,
comment|// defuault num jobs
name|NUM_OF_REDUCERS_FOR_MEDIUM_JOB
argument_list|)
block|,
comment|// default num reducers
DECL|enumConstant|LARGE
name|LARGE
argument_list|(
literal|"large"
argument_list|,
comment|// name
literal|""
argument_list|,
comment|// default input subset
name|NUM_OF_LARGE_JOBS_PER_CLASS
argument_list|,
comment|// defuault num jobs
name|NUM_OF_REDUCERS_FOR_LARGE_JOB
argument_list|)
block|;
comment|// default num reducers
DECL|field|str
specifier|private
specifier|final
name|String
name|str
decl_stmt|;
DECL|field|path
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
DECL|field|numJobs
specifier|private
specifier|final
name|int
name|numJobs
decl_stmt|;
DECL|field|numReducers
specifier|private
specifier|final
name|int
name|numReducers
decl_stmt|;
DECL|method|Size (String str, String path, int numJobs, int numReducers)
name|Size
parameter_list|(
name|String
name|str
parameter_list|,
name|String
name|path
parameter_list|,
name|int
name|numJobs
parameter_list|,
name|int
name|numReducers
parameter_list|)
block|{
name|this
operator|.
name|str
operator|=
name|str
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|numJobs
operator|=
name|numJobs
expr_stmt|;
name|this
operator|.
name|numReducers
operator|=
name|numReducers
expr_stmt|;
block|}
DECL|method|defaultPath (String base)
specifier|public
name|String
name|defaultPath
parameter_list|(
name|String
name|base
parameter_list|)
block|{
return|return
name|base
operator|+
name|path
return|;
block|}
DECL|method|defaultNumJobs ()
specifier|public
name|int
name|defaultNumJobs
parameter_list|()
block|{
return|return
name|numJobs
return|;
block|}
DECL|method|defaultNumReducers ()
specifier|public
name|int
name|defaultNumReducers
parameter_list|()
block|{
return|return
name|numReducers
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|str
return|;
block|}
block|}
DECL|enum|GridMixJob
specifier|private
enum|enum
name|GridMixJob
block|{
DECL|enumConstant|STREAMSORT
name|STREAMSORT
argument_list|(
literal|"streamSort"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"streamSort.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|VARINFLTEXT
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/stream-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-input "
argument_list|)
operator|.
name|append
argument_list|(
name|indir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-output "
argument_list|)
operator|.
name|append
argument_list|(
name|outdir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-mapper cat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-reducer cat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-numReduceTasks "
argument_list|)
operator|.
name|append
argument_list|(
name|numReducers
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
name|clearDir
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
name|StreamJob
operator|.
name|createJob
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|FileOutputFormat
operator|.
name|COMPRESS
argument_list|,
name|outputCompressed
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
name|mapoutputCompressed
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|conf
argument_list|,
literal|"GridmixStreamingSorter."
operator|+
name|size
argument_list|)
decl_stmt|;
name|ControlledJob
name|cjob
init|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|,
DECL|enumConstant|JAVASORT
name|JAVASORT
argument_list|(
literal|"javaSort"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"javaSort.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|VARINFLTEXT
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/sort-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|clearDir
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|FileOutputFormat
operator|.
name|COMPRESS
argument_list|,
name|outputCompressed
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
name|mapoutputCompressed
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJarByClass
argument_list|(
name|Sort
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"GridmixJavaSorter."
operator|+
name|size
argument_list|)
expr_stmt|;
name|job
operator|.
name|setMapperClass
argument_list|(
name|Mapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setReducerClass
argument_list|(
name|Reducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setNumReduceTasks
argument_list|(
name|numReducers
argument_list|)
expr_stmt|;
name|job
operator|.
name|setInputFormatClass
argument_list|(
name|KeyValueTextInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputFormatClass
argument_list|(
name|TextOutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputKeyClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputValueClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|FileInputFormat
operator|.
name|addInputPaths
argument_list|(
name|job
argument_list|,
name|indir
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|job
argument_list|,
operator|new
name|Path
argument_list|(
name|outdir
argument_list|)
argument_list|)
expr_stmt|;
name|ControlledJob
name|cjob
init|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|,
DECL|enumConstant|WEBDATASCAN
name|WEBDATASCAN
argument_list|(
literal|"webdataScan"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"webdataScan.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|VARCOMPSEQ
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/webdata-scan-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepmap 0.2 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepred 5 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-inFormat"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" org.apache.hadoop.mapreduce."
operator|+
literal|"lib.input.SequenceFileInputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outFormat"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" org.apache.hadoop.mapreduce."
operator|+
literal|"lib.output.SequenceFileOutputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outKey org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outValue org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-indir "
argument_list|)
operator|.
name|append
argument_list|(
name|indir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outdir "
argument_list|)
operator|.
name|append
argument_list|(
name|outdir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-r "
argument_list|)
operator|.
name|append
argument_list|(
name|numReducers
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
name|clearDir
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
try|try
block|{
name|Job
name|job
init|=
name|GenericMRLoadJobCreator
operator|.
name|createJob
argument_list|(
name|args
argument_list|,
name|mapoutputCompressed
argument_list|,
name|outputCompressed
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"GridmixWebdatascan."
operator|+
name|size
argument_list|)
expr_stmt|;
name|ControlledJob
name|cjob
init|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|,
DECL|enumConstant|COMBINER
name|COMBINER
argument_list|(
literal|"combiner"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"combiner.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|VARCOMPSEQ
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/combiner-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-r "
argument_list|)
operator|.
name|append
argument_list|(
name|numReducers
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-indir "
argument_list|)
operator|.
name|append
argument_list|(
name|indir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outdir "
argument_list|)
operator|.
name|append
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-mapoutputCompressed "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|mapoutputCompressed
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outputCompressed "
argument_list|)
operator|.
name|append
argument_list|(
name|outputCompressed
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
name|clearDir
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
try|try
block|{
name|Job
name|job
init|=
name|CombinerJobCreator
operator|.
name|createJob
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"GridmixCombinerJob."
operator|+
name|size
argument_list|)
expr_stmt|;
name|ControlledJob
name|cjob
init|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|,
DECL|enumConstant|MONSTERQUERY
name|MONSTERQUERY
argument_list|(
literal|"monsterQuery"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"monsterQuery.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|FIXCOMPSEQ
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/mq-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|int
name|iter
init|=
literal|3
decl_stmt|;
try|try
block|{
name|ControlledJob
name|pjob
init|=
literal|null
decl_stmt|;
name|ControlledJob
name|cjob
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iter
condition|;
name|i
operator|++
control|)
block|{
name|String
name|outdirfull
init|=
name|outdir
operator|+
literal|"."
operator|+
name|i
decl_stmt|;
name|String
name|indirfull
init|=
operator|(
literal|0
operator|==
name|i
operator|)
condition|?
name|indir
else|:
name|outdir
operator|+
literal|"."
operator|+
operator|(
name|i
operator|-
literal|1
operator|)
decl_stmt|;
name|Path
name|outfile
init|=
operator|new
name|Path
argument_list|(
name|outdirfull
argument_list|)
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepmap 10 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepred 40 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-inFormat"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" org.apache.hadoop.mapreduce."
operator|+
literal|"lib.input.SequenceFileInputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outFormat"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" org.apache.hadoop.mapreduce."
operator|+
literal|"lib.output.SequenceFileOutputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outKey org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outValue org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-indir "
argument_list|)
operator|.
name|append
argument_list|(
name|indirfull
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outdir "
argument_list|)
operator|.
name|append
argument_list|(
name|outdirfull
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-r "
argument_list|)
operator|.
name|append
argument_list|(
name|numReducers
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
try|try
block|{
name|fs
operator|.
name|delete
argument_list|(
name|outfile
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Job
name|job
init|=
name|GenericMRLoadJobCreator
operator|.
name|createJob
argument_list|(
name|args
argument_list|,
name|mapoutputCompressed
argument_list|,
name|outputCompressed
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"GridmixMonsterQuery."
operator|+
name|size
argument_list|)
expr_stmt|;
name|cjob
operator|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|pjob
operator|!=
literal|null
condition|)
block|{
name|cjob
operator|.
name|addDependingJob
argument_list|(
name|pjob
argument_list|)
expr_stmt|;
block|}
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
name|pjob
operator|=
name|cjob
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|,
DECL|enumConstant|WEBDATASORT
name|WEBDATASORT
argument_list|(
literal|"webdataSort"
argument_list|)
block|{
specifier|public
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapoutputCompressed
parameter_list|,
name|boolean
name|outputCompressed
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
block|{
specifier|final
name|String
name|prop
init|=
name|String
operator|.
name|format
argument_list|(
literal|"webdataSort.%sJobs.inputFiles"
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|final
name|String
name|indir
init|=
name|getInputDirsFor
argument_list|(
name|prop
argument_list|,
name|size
operator|.
name|defaultPath
argument_list|(
name|VARCOMPSEQ
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|outdir
init|=
name|addTSSuffix
argument_list|(
literal|"perf-out/webdata-sort-out-dir-"
operator|+
name|size
argument_list|)
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepmap 100 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-keepred 100 "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-inFormat org.apache.hadoop.mapreduce."
operator|+
literal|"lib.input.SequenceFileInputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outFormat org.apache.hadoop.mapreduce."
operator|+
literal|"lib.output.SequenceFileOutputFormat "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outKey org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outValue org.apache.hadoop.io.Text "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-indir "
argument_list|)
operator|.
name|append
argument_list|(
name|indir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-outdir "
argument_list|)
operator|.
name|append
argument_list|(
name|outdir
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"-r "
argument_list|)
operator|.
name|append
argument_list|(
name|numReducers
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
name|clearDir
argument_list|(
name|outdir
argument_list|)
expr_stmt|;
try|try
block|{
name|Job
name|job
init|=
name|GenericMRLoadJobCreator
operator|.
name|createJob
argument_list|(
name|args
argument_list|,
name|mapoutputCompressed
argument_list|,
name|outputCompressed
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"GridmixWebdataSort."
operator|+
name|size
argument_list|)
expr_stmt|;
name|ControlledJob
name|cjob
init|=
operator|new
name|ControlledJob
argument_list|(
name|job
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|gridmix
operator|.
name|addJob
argument_list|(
name|cjob
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|;
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|method|GridMixJob (String name)
name|GridMixJob
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|addJob (int numReducers, boolean mapComp, boolean outComp, Size size, JobControl gridmix)
specifier|public
specifier|abstract
name|void
name|addJob
parameter_list|(
name|int
name|numReducers
parameter_list|,
name|boolean
name|mapComp
parameter_list|,
name|boolean
name|outComp
parameter_list|,
name|Size
name|size
parameter_list|,
name|JobControl
name|gridmix
parameter_list|)
function_decl|;
block|}
DECL|method|GridMixRunner ()
specifier|public
name|GridMixRunner
parameter_list|()
throws|throws
name|IOException
block|{
name|gridmix
operator|=
operator|new
name|JobControl
argument_list|(
literal|"GridMix"
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|==
name|config
operator|||
literal|null
operator|==
name|fs
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Bad configuration. Cannot continue."
argument_list|)
throw|;
block|}
block|}
DECL|method|initFs ()
specifier|private
specifier|static
name|FileSystem
name|initFs
parameter_list|()
block|{
try|try
block|{
return|return
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"fs initation error: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|initConfig ()
specifier|private
specifier|static
name|Configuration
name|initConfig
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|String
name|configFile
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"GRIDMIXCONFIG"
argument_list|)
decl_stmt|;
if|if
condition|(
name|configFile
operator|==
literal|null
condition|)
block|{
name|String
name|configDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
decl_stmt|;
if|if
condition|(
name|configDir
operator|==
literal|null
condition|)
block|{
name|configDir
operator|=
literal|"."
expr_stmt|;
block|}
name|configFile
operator|=
name|configDir
operator|+
literal|"/"
operator|+
name|GRIDMIXCONFIG
expr_stmt|;
block|}
try|try
block|{
name|Path
name|fileResource
init|=
operator|new
name|Path
argument_list|(
name|configFile
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error reading config file "
operator|+
name|configFile
operator|+
literal|":"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|conf
return|;
block|}
DECL|method|getInts (Configuration conf, String name, int defaultV)
specifier|private
specifier|static
name|int
index|[]
name|getInts
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|defaultV
parameter_list|)
block|{
name|String
index|[]
name|vals
init|=
name|conf
operator|.
name|getStrings
argument_list|(
name|name
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|defaultV
argument_list|)
argument_list|)
decl_stmt|;
name|int
index|[]
name|results
init|=
operator|new
name|int
index|[
name|vals
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|vals
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|results
index|[
name|i
index|]
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|vals
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|results
return|;
block|}
DECL|method|getInputDirsFor (String jobType, String defaultIndir)
specifier|private
specifier|static
name|String
name|getInputDirsFor
parameter_list|(
name|String
name|jobType
parameter_list|,
name|String
name|defaultIndir
parameter_list|)
block|{
name|String
name|inputFile
index|[]
init|=
name|config
operator|.
name|getStrings
argument_list|(
name|jobType
argument_list|,
name|defaultIndir
argument_list|)
decl_stmt|;
name|StringBuffer
name|indirBuffer
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|inputFile
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|indirBuffer
operator|=
name|indirBuffer
operator|.
name|append
argument_list|(
name|inputFile
index|[
name|i
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
return|return
name|indirBuffer
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|indirBuffer
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
return|;
block|}
DECL|method|clearDir (String dir)
specifier|private
specifier|static
name|void
name|clearDir
parameter_list|(
name|String
name|dir
parameter_list|)
block|{
try|try
block|{
name|Path
name|outfile
init|=
operator|new
name|Path
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|outfile
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"delete file error:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|ex
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|select (int total, int selected, int index)
specifier|private
name|boolean
name|select
parameter_list|(
name|int
name|total
parameter_list|,
name|int
name|selected
parameter_list|,
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|selected
operator|<=
literal|0
operator|||
name|selected
operator|>=
name|total
condition|)
block|{
return|return
name|selected
operator|>
literal|0
return|;
block|}
name|int
name|step
init|=
name|total
operator|/
name|selected
decl_stmt|;
name|int
name|effectiveTotal
init|=
name|total
operator|-
name|total
operator|%
name|selected
decl_stmt|;
return|return
operator|(
name|index
operator|<=
name|effectiveTotal
operator|-
literal|1
operator|&&
operator|(
name|index
operator|%
name|step
operator|==
literal|0
operator|)
operator|)
return|;
block|}
DECL|method|addTSSuffix (String s)
specifier|private
specifier|static
name|String
name|addTSSuffix
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|Date
name|date
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|date
operator|.
name|getTime
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|s
operator|+
literal|"_"
operator|+
name|ts
return|;
block|}
DECL|method|addJobs (GridMixJob job, Size size)
specifier|private
name|void
name|addJobs
parameter_list|(
name|GridMixJob
name|job
parameter_list|,
name|Size
name|size
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|String
name|prefix
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s.%sJobs"
argument_list|,
name|job
operator|.
name|getName
argument_list|()
argument_list|,
name|size
argument_list|)
decl_stmt|;
name|int
index|[]
name|numJobs
init|=
name|getInts
argument_list|(
name|config
argument_list|,
name|prefix
operator|+
literal|".numOfJobs"
argument_list|,
name|size
operator|.
name|defaultNumJobs
argument_list|()
argument_list|)
decl_stmt|;
name|int
index|[]
name|numReduces
init|=
name|getInts
argument_list|(
name|config
argument_list|,
name|prefix
operator|+
literal|".numOfReduces"
argument_list|,
name|size
operator|.
name|defaultNumReducers
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|numJobs
operator|.
name|length
operator|!=
name|numReduces
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Configuration error: "
operator|+
name|prefix
operator|+
literal|".numOfJobs must match "
operator|+
name|prefix
operator|+
literal|".numOfReduces"
argument_list|)
throw|;
block|}
name|int
name|numMapoutputCompressed
init|=
name|config
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|".numOfMapoutputCompressed"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|int
name|numOutputCompressed
init|=
name|config
operator|.
name|getInt
argument_list|(
name|prefix
operator|+
literal|".numOfOutputCompressed"
argument_list|,
name|size
operator|.
name|defaultNumJobs
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|totalJobs
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|nJob
range|:
name|numJobs
control|)
block|{
name|totalJobs
operator|+=
name|nJob
expr_stmt|;
block|}
name|int
name|currentIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numJobs
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numJobs
index|[
name|i
index|]
condition|;
operator|++
name|j
control|)
block|{
name|boolean
name|mapoutputComp
init|=
name|select
argument_list|(
name|totalJobs
argument_list|,
name|numMapoutputCompressed
argument_list|,
name|currentIndex
argument_list|)
decl_stmt|;
name|boolean
name|outputComp
init|=
name|select
argument_list|(
name|totalJobs
argument_list|,
name|numOutputCompressed
argument_list|,
name|currentIndex
argument_list|)
decl_stmt|;
name|job
operator|.
name|addJob
argument_list|(
name|numReduces
index|[
name|i
index|]
argument_list|,
name|mapoutputComp
argument_list|,
name|outputComp
argument_list|,
name|size
argument_list|,
name|gridmix
argument_list|)
expr_stmt|;
operator|++
name|numOfJobs
expr_stmt|;
operator|++
name|currentIndex
expr_stmt|;
block|}
block|}
block|}
DECL|method|addAllJobs (GridMixJob job)
specifier|private
name|void
name|addAllJobs
parameter_list|(
name|GridMixJob
name|job
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|Size
name|size
range|:
name|EnumSet
operator|.
name|allOf
argument_list|(
name|Size
operator|.
name|class
argument_list|)
control|)
block|{
name|addJobs
argument_list|(
name|job
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addjobs ()
specifier|public
name|void
name|addjobs
parameter_list|()
throws|throws
name|IOException
block|{
for|for
control|(
name|GridMixJob
name|jobtype
range|:
name|EnumSet
operator|.
name|allOf
argument_list|(
name|GridMixJob
operator|.
name|class
argument_list|)
control|)
block|{
name|addAllJobs
argument_list|(
name|jobtype
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"total "
operator|+
name|gridmix
operator|.
name|getWaitingJobList
argument_list|()
operator|.
name|size
argument_list|()
operator|+
literal|" jobs"
argument_list|)
expr_stmt|;
block|}
DECL|class|SimpleStats
class|class
name|SimpleStats
block|{
DECL|field|minValue
name|long
name|minValue
decl_stmt|;
DECL|field|maxValue
name|long
name|maxValue
decl_stmt|;
DECL|field|averageValue
name|long
name|averageValue
decl_stmt|;
DECL|field|mediumValue
name|long
name|mediumValue
decl_stmt|;
DECL|field|n
name|int
name|n
decl_stmt|;
DECL|method|SimpleStats (long[] data)
name|SimpleStats
parameter_list|(
name|long
index|[]
name|data
parameter_list|)
block|{
name|Arrays
operator|.
name|sort
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|n
operator|=
name|data
operator|.
name|length
expr_stmt|;
name|minValue
operator|=
name|data
index|[
literal|0
index|]
expr_stmt|;
name|maxValue
operator|=
name|data
index|[
name|n
operator|-
literal|1
index|]
expr_stmt|;
name|mediumValue
operator|=
name|data
index|[
name|n
operator|/
literal|2
index|]
expr_stmt|;
name|long
name|total
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
name|total
operator|+=
name|data
index|[
name|i
index|]
expr_stmt|;
block|}
name|averageValue
operator|=
name|total
operator|/
name|n
expr_stmt|;
block|}
block|}
DECL|class|TaskExecutionStats
class|class
name|TaskExecutionStats
block|{
DECL|field|theStats
name|TreeMap
argument_list|<
name|String
argument_list|,
name|SimpleStats
argument_list|>
name|theStats
decl_stmt|;
DECL|method|computeStats (String name, long[] data)
name|void
name|computeStats
parameter_list|(
name|String
name|name
parameter_list|,
name|long
index|[]
name|data
parameter_list|)
block|{
name|SimpleStats
name|v
init|=
operator|new
name|SimpleStats
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|theStats
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|method|TaskExecutionStats ()
name|TaskExecutionStats
parameter_list|()
block|{
name|theStats
operator|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|SimpleStats
argument_list|>
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getStatForJob (ControlledJob cjob)
specifier|private
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getStatForJob
parameter_list|(
name|ControlledJob
name|cjob
parameter_list|)
block|{
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|retv
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|JobID
name|mapreduceID
init|=
name|cjob
operator|.
name|getMapredJobID
argument_list|()
decl_stmt|;
name|Job
name|job
init|=
name|cjob
operator|.
name|getJob
argument_list|()
decl_stmt|;
name|String
name|jobName
init|=
name|job
operator|.
name|getJobName
argument_list|()
decl_stmt|;
name|retv
operator|.
name|put
argument_list|(
literal|"JobId"
argument_list|,
name|mapreduceID
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
literal|"JobName"
argument_list|,
name|jobName
argument_list|)
expr_stmt|;
name|TaskExecutionStats
name|theTaskExecutionStats
init|=
operator|new
name|TaskExecutionStats
argument_list|()
decl_stmt|;
try|try
block|{
name|Counters
name|jobCounters
init|=
name|job
operator|.
name|getCounters
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|CounterGroup
argument_list|>
name|groups
init|=
name|jobCounters
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|groups
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|CounterGroup
name|g
init|=
name|groups
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|gn
init|=
name|g
operator|.
name|getName
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Counter
argument_list|>
name|cs
init|=
name|g
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|cs
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Counter
name|c
init|=
name|cs
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|n
init|=
name|c
operator|.
name|getName
argument_list|()
decl_stmt|;
name|long
name|v
init|=
name|c
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|gn
operator|+
literal|"."
operator|+
name|n
argument_list|,
literal|""
operator|+
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|JobClient
name|jc
init|=
operator|new
name|JobClient
argument_list|(
name|job
operator|.
name|getConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|TaskReport
index|[]
name|maps
init|=
name|jc
operator|.
name|getMapTaskReports
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobID
operator|)
name|mapreduceID
argument_list|)
decl_stmt|;
name|TaskReport
index|[]
name|reduces
init|=
name|jc
operator|.
name|getReduceTaskReports
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobID
operator|)
name|mapreduceID
argument_list|)
decl_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"numOfMapTasks"
argument_list|,
literal|""
operator|+
name|maps
operator|.
name|length
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"numOfReduceTasks"
argument_list|,
literal|""
operator|+
name|reduces
operator|.
name|length
argument_list|)
expr_stmt|;
name|long
index|[]
name|mapExecutionTimes
init|=
operator|new
name|long
index|[
name|maps
operator|.
name|length
index|]
decl_stmt|;
name|long
index|[]
name|reduceExecutionTimes
init|=
operator|new
name|long
index|[
name|reduces
operator|.
name|length
index|]
decl_stmt|;
name|Date
name|date
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|startTime
init|=
name|date
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|finishTime
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|maps
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
name|TaskReport
name|map
init|=
name|maps
index|[
name|j
index|]
decl_stmt|;
name|long
name|thisStartTime
init|=
name|map
operator|.
name|getStartTime
argument_list|()
decl_stmt|;
name|long
name|thisFinishTime
init|=
name|map
operator|.
name|getFinishTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|thisStartTime
operator|>
literal|0
operator|&&
name|thisFinishTime
operator|>
literal|0
condition|)
block|{
name|mapExecutionTimes
index|[
name|j
index|]
operator|=
name|thisFinishTime
operator|-
name|thisStartTime
expr_stmt|;
block|}
if|if
condition|(
name|startTime
operator|>
name|thisStartTime
condition|)
block|{
name|startTime
operator|=
name|thisStartTime
expr_stmt|;
block|}
if|if
condition|(
name|finishTime
operator|<
name|thisFinishTime
condition|)
block|{
name|finishTime
operator|=
name|thisFinishTime
expr_stmt|;
block|}
block|}
name|theTaskExecutionStats
operator|.
name|computeStats
argument_list|(
literal|"mapExecutionTimeStats"
argument_list|,
name|mapExecutionTimes
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"mapStartTime"
argument_list|,
literal|""
operator|+
name|startTime
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"mapEndTime"
argument_list|,
literal|""
operator|+
name|finishTime
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|reduces
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
name|TaskReport
name|reduce
init|=
name|reduces
index|[
name|j
index|]
decl_stmt|;
name|long
name|thisStartTime
init|=
name|reduce
operator|.
name|getStartTime
argument_list|()
decl_stmt|;
name|long
name|thisFinishTime
init|=
name|reduce
operator|.
name|getFinishTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|thisStartTime
operator|>
literal|0
operator|&&
name|thisFinishTime
operator|>
literal|0
condition|)
block|{
name|reduceExecutionTimes
index|[
name|j
index|]
operator|=
name|thisFinishTime
operator|-
name|thisStartTime
expr_stmt|;
block|}
if|if
condition|(
name|startTime
operator|>
name|thisStartTime
condition|)
block|{
name|startTime
operator|=
name|thisStartTime
expr_stmt|;
block|}
if|if
condition|(
name|finishTime
operator|<
name|thisFinishTime
condition|)
block|{
name|finishTime
operator|=
name|thisFinishTime
expr_stmt|;
block|}
block|}
name|theTaskExecutionStats
operator|.
name|computeStats
argument_list|(
literal|"reduceExecutionTimeStats"
argument_list|,
name|reduceExecutionTimes
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"reduceStartTime"
argument_list|,
literal|""
operator|+
name|startTime
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"reduceEndTime"
argument_list|,
literal|""
operator|+
name|finishTime
argument_list|)
expr_stmt|;
if|if
condition|(
name|cjob
operator|.
name|getJobState
argument_list|()
operator|==
name|ControlledJob
operator|.
name|State
operator|.
name|SUCCESS
condition|)
block|{
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
literal|"jobStatus"
argument_list|,
literal|"successful"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|cjob
operator|.
name|getJobState
argument_list|()
operator|==
name|ControlledJob
operator|.
name|State
operator|.
name|FAILED
condition|)
block|{
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"jobStatus"
argument_list|,
literal|"failed"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
literal|"jobStatus"
argument_list|,
literal|"unknown"
argument_list|)
expr_stmt|;
block|}
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|SimpleStats
argument_list|>
argument_list|>
name|entries
init|=
name|theTaskExecutionStats
operator|.
name|theStats
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|entries
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|SimpleStats
argument_list|>
name|e
init|=
name|entries
operator|.
name|next
argument_list|()
decl_stmt|;
name|SimpleStats
name|v
init|=
name|e
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"."
operator|+
literal|"min"
argument_list|,
literal|""
operator|+
name|v
operator|.
name|minValue
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"."
operator|+
literal|"max"
argument_list|,
literal|""
operator|+
name|v
operator|.
name|maxValue
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"."
operator|+
literal|"medium"
argument_list|,
literal|""
operator|+
name|v
operator|.
name|mediumValue
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"."
operator|+
literal|"avg"
argument_list|,
literal|""
operator|+
name|v
operator|.
name|averageValue
argument_list|)
expr_stmt|;
name|retv
operator|.
name|put
argument_list|(
name|mapreduceID
operator|+
literal|"."
operator|+
name|jobName
operator|+
literal|"."
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"."
operator|+
literal|"numOfItems"
argument_list|,
literal|""
operator|+
name|v
operator|.
name|n
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|retv
return|;
block|}
DECL|method|printJobStat (TreeMap<String, String> stat)
specifier|private
name|void
name|printJobStat
parameter_list|(
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|stat
parameter_list|)
block|{
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|entries
init|=
name|stat
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|entries
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|e
init|=
name|entries
operator|.
name|next
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|"\t"
operator|+
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|printStatsForJobs (List<ControlledJob> jobs)
specifier|private
name|void
name|printStatsForJobs
parameter_list|(
name|List
argument_list|<
name|ControlledJob
argument_list|>
name|jobs
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|jobs
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|printJobStat
argument_list|(
name|getStatForJob
argument_list|(
name|jobs
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|Thread
name|theGridmixRunner
init|=
operator|new
name|Thread
argument_list|(
name|gridmix
argument_list|)
decl_stmt|;
name|theGridmixRunner
operator|.
name|start
argument_list|()
expr_stmt|;
name|long
name|startTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
while|while
condition|(
operator|!
name|gridmix
operator|.
name|allFinished
argument_list|()
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Jobs in waiting state: "
operator|+
name|gridmix
operator|.
name|getWaitingJobList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Jobs in ready state: "
operator|+
name|gridmix
operator|.
name|getReadyJobsList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Jobs in running state: "
operator|+
name|gridmix
operator|.
name|getRunningJobList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Jobs in success state: "
operator|+
name|gridmix
operator|.
name|getSuccessfulJobList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Jobs in failed state: "
operator|+
name|gridmix
operator|.
name|getFailedJobList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|10
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{        }
block|}
name|long
name|endTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ControlledJob
argument_list|>
name|fail
init|=
name|gridmix
operator|.
name|getFailedJobList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ControlledJob
argument_list|>
name|succeed
init|=
name|gridmix
operator|.
name|getSuccessfulJobList
argument_list|()
decl_stmt|;
name|int
name|numOfSuccessfulJob
init|=
name|succeed
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|numOfSuccessfulJob
operator|>
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|numOfSuccessfulJob
operator|+
literal|" jobs succeeded"
argument_list|)
expr_stmt|;
name|printStatsForJobs
argument_list|(
name|succeed
argument_list|)
expr_stmt|;
block|}
name|int
name|numOfFailedjob
init|=
name|fail
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|numOfFailedjob
operator|>
literal|0
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------------------------- "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|numOfFailedjob
operator|+
literal|" jobs failed"
argument_list|)
expr_stmt|;
name|printStatsForJobs
argument_list|(
name|fail
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"GridMix results:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Total num of Jobs: "
operator|+
name|numOfJobs
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ExecutionTime: "
operator|+
operator|(
operator|(
name|endTime
operator|-
name|startTime
operator|)
operator|/
literal|1000
operator|)
argument_list|)
expr_stmt|;
name|gridmix
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|main (String argv[])
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|argv
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|GridMixRunner
name|gridmixRunner
init|=
operator|new
name|GridMixRunner
argument_list|()
decl_stmt|;
name|gridmixRunner
operator|.
name|addjobs
argument_list|()
expr_stmt|;
name|gridmixRunner
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

