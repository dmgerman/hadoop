begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.yarn.api.protocolrecords.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ProtoBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ApplicationReportPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ApplicationReportProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|GetApplicationReportResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|GetApplicationReportResponseProtoOrBuilder
import|;
end_import

begin_class
DECL|class|GetApplicationReportResponsePBImpl
specifier|public
class|class
name|GetApplicationReportResponsePBImpl
extends|extends
name|ProtoBase
argument_list|<
name|GetApplicationReportResponseProto
argument_list|>
implements|implements
name|GetApplicationReportResponse
block|{
DECL|field|proto
name|GetApplicationReportResponseProto
name|proto
init|=
name|GetApplicationReportResponseProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|GetApplicationReportResponseProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|applicationReport
specifier|private
name|ApplicationReport
name|applicationReport
init|=
literal|null
decl_stmt|;
DECL|method|GetApplicationReportResponsePBImpl ()
specifier|public
name|GetApplicationReportResponsePBImpl
parameter_list|()
block|{
name|builder
operator|=
name|GetApplicationReportResponseProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|GetApplicationReportResponsePBImpl (GetApplicationReportResponseProto proto)
specifier|public
name|GetApplicationReportResponsePBImpl
parameter_list|(
name|GetApplicationReportResponseProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|GetApplicationReportResponseProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|applicationReport
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setApplicationReport
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|applicationReport
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|GetApplicationReportResponseProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport ()
specifier|public
name|ApplicationReport
name|getApplicationReport
parameter_list|()
block|{
name|GetApplicationReportResponseProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|applicationReport
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|applicationReport
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasApplicationReport
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|applicationReport
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getApplicationReport
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|applicationReport
return|;
block|}
annotation|@
name|Override
DECL|method|setApplicationReport (ApplicationReport applicationMaster)
specifier|public
name|void
name|setApplicationReport
parameter_list|(
name|ApplicationReport
name|applicationMaster
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|applicationMaster
operator|==
literal|null
condition|)
name|builder
operator|.
name|clearApplicationReport
argument_list|()
expr_stmt|;
name|this
operator|.
name|applicationReport
operator|=
name|applicationMaster
expr_stmt|;
block|}
DECL|method|convertFromProtoFormat (ApplicationReportProto p)
specifier|private
name|ApplicationReportPBImpl
name|convertFromProtoFormat
parameter_list|(
name|ApplicationReportProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|ApplicationReportPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (ApplicationReport t)
specifier|private
name|ApplicationReportProto
name|convertToProtoFormat
parameter_list|(
name|ApplicationReport
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ApplicationReportPBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
block|}
end_class

end_unit

