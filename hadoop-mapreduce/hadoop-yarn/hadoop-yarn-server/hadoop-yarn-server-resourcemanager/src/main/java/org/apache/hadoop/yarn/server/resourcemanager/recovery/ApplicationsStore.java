begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.recovery
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_interface
DECL|interface|ApplicationsStore
specifier|public
interface|interface
name|ApplicationsStore
block|{
DECL|method|createApplicationStore (ApplicationId applicationId, ApplicationSubmissionContext context)
specifier|public
name|ApplicationStore
name|createApplicationStore
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|,
name|ApplicationSubmissionContext
name|context
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|removeApplication (ApplicationId application)
specifier|public
name|void
name|removeApplication
parameter_list|(
name|ApplicationId
name|application
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|interface|ApplicationStore
specifier|public
interface|interface
name|ApplicationStore
block|{
DECL|method|storeContainer (Container container)
specifier|public
name|void
name|storeContainer
parameter_list|(
name|Container
name|container
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|removeContainer (Container container)
specifier|public
name|void
name|removeContainer
parameter_list|(
name|Container
name|container
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|storeMasterContainer (Container container)
specifier|public
name|void
name|storeMasterContainer
parameter_list|(
name|Container
name|container
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|updateApplicationState (ApplicationMaster master)
specifier|public
name|void
name|updateApplicationState
parameter_list|(
name|ApplicationMaster
name|master
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|isLoggable ()
specifier|public
name|boolean
name|isLoggable
parameter_list|()
function_decl|;
block|}
block|}
end_interface

end_unit

