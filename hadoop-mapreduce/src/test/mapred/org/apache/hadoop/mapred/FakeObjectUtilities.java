begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskStatus
operator|.
name|Phase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Cluster
operator|.
name|JobTrackerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|jobhistory
operator|.
name|HistoryEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|jobhistory
operator|.
name|JobHistory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|split
operator|.
name|JobSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|split
operator|.
name|JobSplit
operator|.
name|TaskSplitMetaInfo
import|;
end_import

begin_comment
comment|/**   * Utilities used in unit test.  *    */
end_comment

begin_class
DECL|class|FakeObjectUtilities
specifier|public
class|class
name|FakeObjectUtilities
block|{
DECL|field|LOG
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FakeObjectUtilities
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|jtIdentifier
specifier|private
specifier|static
name|String
name|jtIdentifier
init|=
literal|"test"
decl_stmt|;
DECL|field|jobCounter
specifier|private
specifier|static
name|int
name|jobCounter
decl_stmt|;
comment|/**    * A Fake JobTracker class for use in Unit Tests    */
DECL|class|FakeJobTracker
specifier|static
class|class
name|FakeJobTracker
extends|extends
name|JobTracker
block|{
DECL|field|totalSlots
name|int
name|totalSlots
decl_stmt|;
DECL|field|trackers
specifier|private
name|String
index|[]
name|trackers
decl_stmt|;
DECL|method|FakeJobTracker (JobConf conf, Clock clock, String[] tts)
name|FakeJobTracker
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|Clock
name|clock
parameter_list|,
name|String
index|[]
name|tts
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|LoginException
block|{
name|super
argument_list|(
name|conf
argument_list|,
name|clock
argument_list|)
expr_stmt|;
name|this
operator|.
name|trackers
operator|=
name|tts
expr_stmt|;
comment|//initialize max{Map/Reduce} task capacities to twice the clustersize
name|totalSlots
operator|=
name|trackers
operator|.
name|length
operator|*
literal|4
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getClusterStatus (boolean detailed)
specifier|public
name|ClusterStatus
name|getClusterStatus
parameter_list|(
name|boolean
name|detailed
parameter_list|)
block|{
return|return
operator|new
name|ClusterStatus
argument_list|(
name|taskTrackers
argument_list|()
operator|.
name|size
argument_list|()
operator|-
name|getBlacklistedTrackerCount
argument_list|()
argument_list|,
name|getBlacklistedTrackerCount
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|totalSlots
operator|/
literal|2
argument_list|,
name|totalSlots
operator|/
literal|2
argument_list|,
name|JobTrackerStatus
operator|.
name|RUNNING
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|method|setNumSlots (int totalSlots)
specifier|public
name|void
name|setNumSlots
parameter_list|(
name|int
name|totalSlots
parameter_list|)
block|{
name|this
operator|.
name|totalSlots
operator|=
name|totalSlots
expr_stmt|;
block|}
block|}
DECL|class|FakeJobInProgress
specifier|static
class|class
name|FakeJobInProgress
extends|extends
name|JobInProgress
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|FakeJobInProgress (JobConf jobConf, JobTracker tracker)
name|FakeJobInProgress
parameter_list|(
name|JobConf
name|jobConf
parameter_list|,
name|JobTracker
name|tracker
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
operator|new
name|JobID
argument_list|(
name|jtIdentifier
argument_list|,
operator|++
name|jobCounter
argument_list|)
argument_list|,
name|jobConf
argument_list|,
name|tracker
argument_list|)
expr_stmt|;
name|Path
name|jobFile
init|=
operator|new
name|Path
argument_list|(
literal|"Dummy"
argument_list|)
decl_stmt|;
name|this
operator|.
name|profile
operator|=
operator|new
name|JobProfile
argument_list|(
name|jobConf
operator|.
name|getUser
argument_list|()
argument_list|,
name|getJobID
argument_list|()
argument_list|,
name|jobFile
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
name|jobConf
operator|.
name|getJobName
argument_list|()
argument_list|,
name|jobConf
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|jobHistory
operator|=
operator|new
name|FakeJobHistory
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initTasks ()
specifier|public
specifier|synchronized
name|void
name|initTasks
parameter_list|()
throws|throws
name|IOException
block|{
name|TaskSplitMetaInfo
index|[]
name|taskSplitMetaInfo
init|=
name|createSplits
argument_list|(
name|jobId
argument_list|)
decl_stmt|;
name|numMapTasks
operator|=
name|taskSplitMetaInfo
operator|.
name|length
expr_stmt|;
name|createMapTasks
argument_list|(
literal|null
argument_list|,
name|taskSplitMetaInfo
argument_list|)
expr_stmt|;
name|nonRunningMapCache
operator|=
name|createCache
argument_list|(
name|taskSplitMetaInfo
argument_list|,
name|maxLevel
argument_list|)
expr_stmt|;
name|createReduceTasks
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|tasksInited
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|status
operator|.
name|setRunState
argument_list|(
name|JobStatus
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createSplits (org.apache.hadoop.mapreduce.JobID jobId)
name|TaskSplitMetaInfo
index|[]
name|createSplits
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|jobId
parameter_list|)
block|{
name|TaskSplitMetaInfo
index|[]
name|splits
init|=
operator|new
name|TaskSplitMetaInfo
index|[
name|numMapTasks
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numMapTasks
condition|;
name|i
operator|++
control|)
block|{
name|splits
index|[
name|i
index|]
operator|=
name|JobSplit
operator|.
name|EMPTY_TASK_SPLIT
expr_stmt|;
block|}
return|return
name|splits
return|;
block|}
annotation|@
name|Override
DECL|method|createMapTasks (String ignored, TaskSplitMetaInfo[] splits)
specifier|protected
name|void
name|createMapTasks
parameter_list|(
name|String
name|ignored
parameter_list|,
name|TaskSplitMetaInfo
index|[]
name|splits
parameter_list|)
block|{
name|maps
operator|=
operator|new
name|TaskInProgress
index|[
name|numMapTasks
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numMapTasks
condition|;
name|i
operator|++
control|)
block|{
name|maps
index|[
name|i
index|]
operator|=
operator|new
name|TaskInProgress
argument_list|(
name|getJobID
argument_list|()
argument_list|,
literal|"test"
argument_list|,
name|splits
index|[
name|i
index|]
argument_list|,
name|jobtracker
argument_list|,
name|getJobConf
argument_list|()
argument_list|,
name|this
argument_list|,
name|i
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createReduceTasks (String ignored)
specifier|protected
name|void
name|createReduceTasks
parameter_list|(
name|String
name|ignored
parameter_list|)
block|{
name|reduces
operator|=
operator|new
name|TaskInProgress
index|[
name|numReduceTasks
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numReduceTasks
condition|;
name|i
operator|++
control|)
block|{
name|reduces
index|[
name|i
index|]
operator|=
operator|new
name|TaskInProgress
argument_list|(
name|getJobID
argument_list|()
argument_list|,
literal|"test"
argument_list|,
name|numMapTasks
argument_list|,
name|i
argument_list|,
name|jobtracker
argument_list|,
name|getJobConf
argument_list|()
argument_list|,
name|this
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|nonRunningReduces
operator|.
name|add
argument_list|(
name|reduces
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|findTask (String trackerName, String trackerHost, Collection<TaskInProgress> nonRunningTasks, Collection<TaskInProgress> runningTasks, TaskType taskType)
specifier|private
name|TaskAttemptID
name|findTask
parameter_list|(
name|String
name|trackerName
parameter_list|,
name|String
name|trackerHost
parameter_list|,
name|Collection
argument_list|<
name|TaskInProgress
argument_list|>
name|nonRunningTasks
parameter_list|,
name|Collection
argument_list|<
name|TaskInProgress
argument_list|>
name|runningTasks
parameter_list|,
name|TaskType
name|taskType
parameter_list|)
throws|throws
name|IOException
block|{
name|TaskInProgress
name|tip
init|=
literal|null
decl_stmt|;
name|Iterator
argument_list|<
name|TaskInProgress
argument_list|>
name|iter
init|=
name|nonRunningTasks
operator|.
name|iterator
argument_list|()
decl_stmt|;
comment|//look for a non-running task first
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|TaskInProgress
name|t
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|isRunnable
argument_list|()
operator|&&
operator|!
name|t
operator|.
name|isRunning
argument_list|()
condition|)
block|{
name|runningTasks
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|iter
operator|.
name|remove
argument_list|()
expr_stmt|;
name|tip
operator|=
name|t
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|tip
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|getJobConf
argument_list|()
operator|.
name|getSpeculativeExecution
argument_list|()
condition|)
block|{
name|tip
operator|=
name|findSpeculativeTask
argument_list|(
name|runningTasks
argument_list|,
name|trackerName
argument_list|,
name|trackerHost
argument_list|,
name|taskType
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|tip
operator|!=
literal|null
condition|)
block|{
name|TaskAttemptID
name|tId
init|=
name|tip
operator|.
name|getTaskToRun
argument_list|(
name|trackerName
argument_list|)
operator|.
name|getTaskID
argument_list|()
decl_stmt|;
if|if
condition|(
name|tip
operator|.
name|isMapTask
argument_list|()
condition|)
block|{
name|scheduleMap
argument_list|(
name|tip
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|scheduleReduce
argument_list|(
name|tip
argument_list|)
expr_stmt|;
block|}
comment|//Set it to RUNNING
name|makeRunning
argument_list|(
name|tId
argument_list|,
name|tip
argument_list|,
name|trackerName
argument_list|)
expr_stmt|;
return|return
name|tId
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|findMapTask (String trackerName)
specifier|public
name|TaskAttemptID
name|findMapTask
parameter_list|(
name|String
name|trackerName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|findTask
argument_list|(
name|trackerName
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|trackerName
argument_list|)
argument_list|,
name|nonLocalMaps
argument_list|,
name|nonLocalRunningMaps
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
return|;
block|}
DECL|method|findReduceTask (String trackerName)
specifier|public
name|TaskAttemptID
name|findReduceTask
parameter_list|(
name|String
name|trackerName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|findTask
argument_list|(
name|trackerName
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|trackerName
argument_list|)
argument_list|,
name|nonRunningReduces
argument_list|,
name|runningReduces
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|)
return|;
block|}
DECL|method|finishTask (TaskAttemptID taskId)
specifier|public
name|void
name|finishTask
parameter_list|(
name|TaskAttemptID
name|taskId
parameter_list|)
block|{
name|TaskInProgress
name|tip
init|=
name|jobtracker
operator|.
name|taskidToTIPMap
operator|.
name|get
argument_list|(
name|taskId
argument_list|)
decl_stmt|;
name|TaskStatus
name|status
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
name|tip
operator|.
name|isMapTask
argument_list|()
argument_list|,
name|taskId
argument_list|,
literal|1.0f
argument_list|,
literal|1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|SUCCEEDED
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|tip
operator|.
name|machineWhereTaskRan
argument_list|(
name|taskId
argument_list|)
argument_list|,
name|tip
operator|.
name|isMapTask
argument_list|()
condition|?
name|Phase
operator|.
name|MAP
else|:
name|Phase
operator|.
name|REDUCE
argument_list|,
operator|new
name|Counters
argument_list|()
argument_list|)
decl_stmt|;
name|updateTaskStatus
argument_list|(
name|tip
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|makeRunning (TaskAttemptID taskId, TaskInProgress tip, String taskTracker)
specifier|private
name|void
name|makeRunning
parameter_list|(
name|TaskAttemptID
name|taskId
parameter_list|,
name|TaskInProgress
name|tip
parameter_list|,
name|String
name|taskTracker
parameter_list|)
block|{
name|addRunningTaskToTIP
argument_list|(
name|tip
argument_list|,
name|taskId
argument_list|,
operator|new
name|TaskTrackerStatus
argument_list|(
name|taskTracker
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|taskTracker
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TaskStatus
name|status
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
name|tip
operator|.
name|isMapTask
argument_list|()
argument_list|,
name|taskId
argument_list|,
literal|0.0f
argument_list|,
literal|1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|taskTracker
argument_list|,
name|tip
operator|.
name|isMapTask
argument_list|()
condition|?
name|Phase
operator|.
name|MAP
else|:
name|Phase
operator|.
name|REDUCE
argument_list|,
operator|new
name|Counters
argument_list|()
argument_list|)
decl_stmt|;
name|updateTaskStatus
argument_list|(
name|tip
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|progressMade (TaskAttemptID taskId, float progress)
specifier|public
name|void
name|progressMade
parameter_list|(
name|TaskAttemptID
name|taskId
parameter_list|,
name|float
name|progress
parameter_list|)
block|{
name|TaskInProgress
name|tip
init|=
name|jobtracker
operator|.
name|taskidToTIPMap
operator|.
name|get
argument_list|(
name|taskId
argument_list|)
decl_stmt|;
name|TaskStatus
name|status
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
name|tip
operator|.
name|isMapTask
argument_list|()
argument_list|,
name|taskId
argument_list|,
name|progress
argument_list|,
literal|1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|RUNNING
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|tip
operator|.
name|machineWhereTaskRan
argument_list|(
name|taskId
argument_list|)
argument_list|,
name|tip
operator|.
name|isMapTask
argument_list|()
condition|?
name|Phase
operator|.
name|MAP
else|:
name|Phase
operator|.
name|REDUCE
argument_list|,
operator|new
name|Counters
argument_list|()
argument_list|)
decl_stmt|;
name|updateTaskStatus
argument_list|(
name|tip
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|failTask (TaskAttemptID taskId)
specifier|public
name|void
name|failTask
parameter_list|(
name|TaskAttemptID
name|taskId
parameter_list|)
block|{
name|TaskInProgress
name|tip
init|=
name|jobtracker
operator|.
name|taskidToTIPMap
operator|.
name|get
argument_list|(
name|taskId
argument_list|)
decl_stmt|;
name|TaskStatus
name|status
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
name|tip
operator|.
name|isMapTask
argument_list|()
argument_list|,
name|taskId
argument_list|,
literal|1.0f
argument_list|,
literal|1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|FAILED
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|tip
operator|.
name|machineWhereTaskRan
argument_list|(
name|taskId
argument_list|)
argument_list|,
name|tip
operator|.
name|isMapTask
argument_list|()
condition|?
name|Phase
operator|.
name|MAP
else|:
name|Phase
operator|.
name|REDUCE
argument_list|,
operator|new
name|Counters
argument_list|()
argument_list|)
decl_stmt|;
name|updateTaskStatus
argument_list|(
name|tip
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|killTask (TaskAttemptID taskId)
specifier|public
name|void
name|killTask
parameter_list|(
name|TaskAttemptID
name|taskId
parameter_list|)
block|{
name|TaskInProgress
name|tip
init|=
name|jobtracker
operator|.
name|taskidToTIPMap
operator|.
name|get
argument_list|(
name|taskId
argument_list|)
decl_stmt|;
name|TaskStatus
name|status
init|=
name|TaskStatus
operator|.
name|createTaskStatus
argument_list|(
name|tip
operator|.
name|isMapTask
argument_list|()
argument_list|,
name|taskId
argument_list|,
literal|1.0f
argument_list|,
literal|1
argument_list|,
name|TaskStatus
operator|.
name|State
operator|.
name|KILLED
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|tip
operator|.
name|machineWhereTaskRan
argument_list|(
name|taskId
argument_list|)
argument_list|,
name|tip
operator|.
name|isMapTask
argument_list|()
condition|?
name|Phase
operator|.
name|MAP
else|:
name|Phase
operator|.
name|REDUCE
argument_list|,
operator|new
name|Counters
argument_list|()
argument_list|)
decl_stmt|;
name|updateTaskStatus
argument_list|(
name|tip
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
DECL|method|cleanUpMetrics ()
specifier|public
name|void
name|cleanUpMetrics
parameter_list|()
block|{     }
DECL|method|setClusterSize (int clusterSize)
specifier|public
name|void
name|setClusterSize
parameter_list|(
name|int
name|clusterSize
parameter_list|)
block|{
name|super
operator|.
name|setClusterSize
argument_list|(
name|clusterSize
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|sendHeartBeat (JobTracker jt, TaskTrackerStatus status, boolean initialContact, boolean acceptNewTasks, String tracker, short responseId)
specifier|static
name|short
name|sendHeartBeat
parameter_list|(
name|JobTracker
name|jt
parameter_list|,
name|TaskTrackerStatus
name|status
parameter_list|,
name|boolean
name|initialContact
parameter_list|,
name|boolean
name|acceptNewTasks
parameter_list|,
name|String
name|tracker
parameter_list|,
name|short
name|responseId
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|status
operator|==
literal|null
condition|)
block|{
name|status
operator|=
operator|new
name|TaskTrackerStatus
argument_list|(
name|tracker
argument_list|,
name|JobInProgress
operator|.
name|convertTrackerNameToHostName
argument_list|(
name|tracker
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|jt
operator|.
name|heartbeat
argument_list|(
name|status
argument_list|,
literal|false
argument_list|,
name|initialContact
argument_list|,
name|acceptNewTasks
argument_list|,
name|responseId
argument_list|)
expr_stmt|;
return|return
operator|++
name|responseId
return|;
block|}
DECL|method|establishFirstContact (JobTracker jt, String tracker)
specifier|static
name|void
name|establishFirstContact
parameter_list|(
name|JobTracker
name|jt
parameter_list|,
name|String
name|tracker
parameter_list|)
throws|throws
name|IOException
block|{
name|sendHeartBeat
argument_list|(
name|jt
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|tracker
argument_list|,
operator|(
name|short
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|class|FakeTaskInProgress
specifier|static
class|class
name|FakeTaskInProgress
extends|extends
name|TaskInProgress
block|{
DECL|method|FakeTaskInProgress (JobID jobId, String jobFile, int numMaps, int partition, JobTracker jobTracker, JobConf conf, JobInProgress job, int numSlotsRequired)
specifier|public
name|FakeTaskInProgress
parameter_list|(
name|JobID
name|jobId
parameter_list|,
name|String
name|jobFile
parameter_list|,
name|int
name|numMaps
parameter_list|,
name|int
name|partition
parameter_list|,
name|JobTracker
name|jobTracker
parameter_list|,
name|JobConf
name|conf
parameter_list|,
name|JobInProgress
name|job
parameter_list|,
name|int
name|numSlotsRequired
parameter_list|)
block|{
name|super
argument_list|(
name|jobId
argument_list|,
name|jobFile
argument_list|,
name|numMaps
argument_list|,
name|partition
argument_list|,
name|jobTracker
argument_list|,
name|conf
argument_list|,
name|job
argument_list|,
name|numSlotsRequired
argument_list|)
expr_stmt|;
block|}
DECL|method|FakeTaskInProgress (JobID jobId, String jobFile, TaskSplitMetaInfo emptySplit, JobTracker jobTracker, JobConf jobConf, JobInProgress job, int partition, int numSlotsRequired)
specifier|public
name|FakeTaskInProgress
parameter_list|(
name|JobID
name|jobId
parameter_list|,
name|String
name|jobFile
parameter_list|,
name|TaskSplitMetaInfo
name|emptySplit
parameter_list|,
name|JobTracker
name|jobTracker
parameter_list|,
name|JobConf
name|jobConf
parameter_list|,
name|JobInProgress
name|job
parameter_list|,
name|int
name|partition
parameter_list|,
name|int
name|numSlotsRequired
parameter_list|)
block|{
name|super
argument_list|(
name|jobId
argument_list|,
name|jobFile
argument_list|,
name|emptySplit
argument_list|,
name|jobTracker
argument_list|,
name|jobConf
argument_list|,
name|job
argument_list|,
name|partition
argument_list|,
name|numSlotsRequired
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|updateStatus (TaskStatus status)
specifier|synchronized
name|boolean
name|updateStatus
parameter_list|(
name|TaskStatus
name|status
parameter_list|)
block|{
name|TaskAttemptID
name|taskid
init|=
name|status
operator|.
name|getTaskID
argument_list|()
decl_stmt|;
name|taskStatuses
operator|.
name|put
argument_list|(
name|taskid
argument_list|,
name|status
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
DECL|class|FakeJobHistory
specifier|static
class|class
name|FakeJobHistory
extends|extends
name|JobHistory
block|{
annotation|@
name|Override
DECL|method|init (JobTracker jt, JobConf conf, String hostname, long jobTrackerStartTime)
specifier|public
name|void
name|init
parameter_list|(
name|JobTracker
name|jt
parameter_list|,
name|JobConf
name|conf
parameter_list|,
name|String
name|hostname
parameter_list|,
name|long
name|jobTrackerStartTime
parameter_list|)
throws|throws
name|IOException
block|{ }
annotation|@
name|Override
DECL|method|initDone (JobConf conf, FileSystem fs)
specifier|public
name|void
name|initDone
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|FileSystem
name|fs
parameter_list|)
throws|throws
name|IOException
block|{ }
annotation|@
name|Override
DECL|method|markCompleted (org.apache.hadoop.mapreduce.JobID id)
specifier|public
name|void
name|markCompleted
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|id
parameter_list|)
throws|throws
name|IOException
block|{ }
annotation|@
name|Override
DECL|method|shutDown ()
specifier|public
name|void
name|shutDown
parameter_list|()
block|{ }
annotation|@
name|Override
specifier|public
name|void
DECL|method|logEvent (HistoryEvent event, org.apache.hadoop.mapreduce.JobID id)
name|logEvent
parameter_list|(
name|HistoryEvent
name|event
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|id
parameter_list|)
block|{ }
annotation|@
name|Override
DECL|method|closeWriter (org.apache.hadoop.mapreduce.JobID id)
specifier|public
name|void
name|closeWriter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|id
parameter_list|)
block|{ }
block|}
DECL|class|FakeJobTrackerMetricsInst
specifier|static
class|class
name|FakeJobTrackerMetricsInst
extends|extends
name|JobTrackerInstrumentation
block|{
DECL|method|FakeJobTrackerMetricsInst (JobTracker tracker, JobConf conf)
specifier|public
name|FakeJobTrackerMetricsInst
parameter_list|(
name|JobTracker
name|tracker
parameter_list|,
name|JobConf
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|tracker
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|field|numMapTasksLaunched
name|int
name|numMapTasksLaunched
init|=
literal|0
decl_stmt|;
DECL|field|numMapTasksCompleted
name|int
name|numMapTasksCompleted
init|=
literal|0
decl_stmt|;
DECL|field|numMapTasksFailed
name|int
name|numMapTasksFailed
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksLaunched
name|int
name|numReduceTasksLaunched
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksCompleted
name|int
name|numReduceTasksCompleted
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksFailed
name|int
name|numReduceTasksFailed
init|=
literal|0
decl_stmt|;
DECL|field|numJobsSubmitted
name|int
name|numJobsSubmitted
init|=
literal|0
decl_stmt|;
DECL|field|numJobsCompleted
name|int
name|numJobsCompleted
init|=
literal|0
decl_stmt|;
DECL|field|numWaitingMaps
name|int
name|numWaitingMaps
init|=
literal|0
decl_stmt|;
DECL|field|numWaitingReduces
name|int
name|numWaitingReduces
init|=
literal|0
decl_stmt|;
DECL|field|numSpeculativeMaps
name|int
name|numSpeculativeMaps
init|=
literal|0
decl_stmt|;
DECL|field|numSpeculativeReduces
name|int
name|numSpeculativeReduces
init|=
literal|0
decl_stmt|;
DECL|field|numDataLocalMaps
name|int
name|numDataLocalMaps
init|=
literal|0
decl_stmt|;
DECL|field|numRackLocalMaps
name|int
name|numRackLocalMaps
init|=
literal|0
decl_stmt|;
comment|//Cluster status fields.
DECL|field|numMapSlots
specifier|volatile
name|int
name|numMapSlots
init|=
literal|0
decl_stmt|;
DECL|field|numReduceSlots
specifier|volatile
name|int
name|numReduceSlots
init|=
literal|0
decl_stmt|;
DECL|field|numBlackListedMapSlots
name|int
name|numBlackListedMapSlots
init|=
literal|0
decl_stmt|;
DECL|field|numBlackListedReduceSlots
name|int
name|numBlackListedReduceSlots
init|=
literal|0
decl_stmt|;
DECL|field|numReservedMapSlots
name|int
name|numReservedMapSlots
init|=
literal|0
decl_stmt|;
DECL|field|numReservedReduceSlots
name|int
name|numReservedReduceSlots
init|=
literal|0
decl_stmt|;
DECL|field|numOccupiedMapSlots
name|int
name|numOccupiedMapSlots
init|=
literal|0
decl_stmt|;
DECL|field|numOccupiedReduceSlots
name|int
name|numOccupiedReduceSlots
init|=
literal|0
decl_stmt|;
DECL|field|numJobsFailed
name|int
name|numJobsFailed
init|=
literal|0
decl_stmt|;
DECL|field|numJobsKilled
name|int
name|numJobsKilled
init|=
literal|0
decl_stmt|;
DECL|field|numJobsPreparing
name|int
name|numJobsPreparing
init|=
literal|0
decl_stmt|;
DECL|field|numJobsRunning
name|int
name|numJobsRunning
init|=
literal|0
decl_stmt|;
DECL|field|numRunningMaps
name|int
name|numRunningMaps
init|=
literal|0
decl_stmt|;
DECL|field|numRunningReduces
name|int
name|numRunningReduces
init|=
literal|0
decl_stmt|;
DECL|field|numMapTasksKilled
name|int
name|numMapTasksKilled
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksKilled
name|int
name|numReduceTasksKilled
init|=
literal|0
decl_stmt|;
DECL|field|numTrackers
name|int
name|numTrackers
init|=
literal|0
decl_stmt|;
DECL|field|numTrackersBlackListed
name|int
name|numTrackersBlackListed
init|=
literal|0
decl_stmt|;
DECL|field|numTrackersDecommissioned
name|int
name|numTrackersDecommissioned
init|=
literal|0
decl_stmt|;
DECL|field|numHeartbeats
name|long
name|numHeartbeats
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
DECL|method|launchMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numMapTasksLaunched
expr_stmt|;
name|decWaitingMaps
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|completeMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|completeMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numMapTasksCompleted
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|failedMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|failedMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numMapTasksFailed
expr_stmt|;
name|addWaitingMaps
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|launchReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numReduceTasksLaunched
expr_stmt|;
name|decWaitingReduces
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|completeReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|completeReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numReduceTasksCompleted
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|failedReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|failedReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numReduceTasksFailed
expr_stmt|;
name|addWaitingReduces
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|submitJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|submitJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
operator|++
name|numJobsSubmitted
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|completeJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|completeJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
operator|++
name|numJobsCompleted
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addWaitingMaps (JobID id, int task)
specifier|public
specifier|synchronized
name|void
name|addWaitingMaps
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingMaps
operator|+=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decWaitingMaps (JobID id, int task)
specifier|public
specifier|synchronized
name|void
name|decWaitingMaps
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingMaps
operator|-=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addWaitingReduces (JobID id, int task)
specifier|public
specifier|synchronized
name|void
name|addWaitingReduces
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingReduces
operator|+=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decWaitingReduces (JobID id, int task)
specifier|public
specifier|synchronized
name|void
name|decWaitingReduces
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingReduces
operator|-=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setMapSlots (int slots)
specifier|public
name|void
name|setMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numMapSlots
operator|=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setReduceSlots (int slots)
specifier|public
name|void
name|setReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numReduceSlots
operator|=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addBlackListedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addBlackListedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numBlackListedMapSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decBlackListedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decBlackListedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numBlackListedMapSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addBlackListedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addBlackListedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numBlackListedReduceSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decBlackListedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decBlackListedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numBlackListedReduceSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addReservedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addReservedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numReservedMapSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decReservedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decReservedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numReservedMapSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addReservedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addReservedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numReservedReduceSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decReservedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decReservedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numReservedReduceSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addOccupiedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addOccupiedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numOccupiedMapSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decOccupiedMapSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decOccupiedMapSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numOccupiedMapSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addOccupiedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|addOccupiedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numOccupiedReduceSlots
operator|+=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decOccupiedReduceSlots (int slots)
specifier|public
specifier|synchronized
name|void
name|decOccupiedReduceSlots
parameter_list|(
name|int
name|slots
parameter_list|)
block|{
name|numOccupiedReduceSlots
operator|-=
name|slots
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|failedJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|failedJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsFailed
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|killedJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|killedJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsKilled
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addPrepJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|addPrepJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsPreparing
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decPrepJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|decPrepJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsPreparing
operator|--
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addRunningJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|addRunningJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsRunning
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decRunningJob (JobConf conf, JobID id)
specifier|public
specifier|synchronized
name|void
name|decRunningJob
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|JobID
name|id
parameter_list|)
block|{
name|numJobsRunning
operator|--
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addRunningMaps (int task)
specifier|public
specifier|synchronized
name|void
name|addRunningMaps
parameter_list|(
name|int
name|task
parameter_list|)
block|{
name|numRunningMaps
operator|+=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decRunningMaps (int task)
specifier|public
specifier|synchronized
name|void
name|decRunningMaps
parameter_list|(
name|int
name|task
parameter_list|)
block|{
name|numRunningMaps
operator|-=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addRunningReduces (int task)
specifier|public
specifier|synchronized
name|void
name|addRunningReduces
parameter_list|(
name|int
name|task
parameter_list|)
block|{
name|numRunningReduces
operator|+=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decRunningReduces (int task)
specifier|public
specifier|synchronized
name|void
name|decRunningReduces
parameter_list|(
name|int
name|task
parameter_list|)
block|{
name|numRunningReduces
operator|-=
name|task
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|killedMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|killedMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
name|numMapTasksKilled
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|killedReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|killedReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
name|numReduceTasksKilled
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addTrackers (int trackers)
specifier|public
specifier|synchronized
name|void
name|addTrackers
parameter_list|(
name|int
name|trackers
parameter_list|)
block|{
name|numTrackers
operator|+=
name|trackers
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decTrackers (int trackers)
specifier|public
specifier|synchronized
name|void
name|decTrackers
parameter_list|(
name|int
name|trackers
parameter_list|)
block|{
name|numTrackers
operator|-=
name|trackers
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addBlackListedTrackers (int trackers)
specifier|public
specifier|synchronized
name|void
name|addBlackListedTrackers
parameter_list|(
name|int
name|trackers
parameter_list|)
block|{
name|numTrackersBlackListed
operator|+=
name|trackers
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|decBlackListedTrackers (int trackers)
specifier|public
specifier|synchronized
name|void
name|decBlackListedTrackers
parameter_list|(
name|int
name|trackers
parameter_list|)
block|{
name|numTrackersBlackListed
operator|-=
name|trackers
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setDecommissionedTrackers (int trackers)
specifier|public
specifier|synchronized
name|void
name|setDecommissionedTrackers
parameter_list|(
name|int
name|trackers
parameter_list|)
block|{
name|numTrackersDecommissioned
operator|=
name|trackers
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|heartbeat ()
specifier|public
specifier|synchronized
name|void
name|heartbeat
parameter_list|()
block|{
operator|++
name|numHeartbeats
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|speculateReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|speculateReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numSpeculativeReduces
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|speculateMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|speculateMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numSpeculativeMaps
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|launchDataLocalMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchDataLocalMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numDataLocalMaps
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|launchRackLocalMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchRackLocalMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numRackLocalMaps
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

