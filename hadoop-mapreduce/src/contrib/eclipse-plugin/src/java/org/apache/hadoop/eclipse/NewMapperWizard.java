begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.eclipse
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|resources
operator|.
name|IFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|CoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|FileLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|IProgressMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|IStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|core
operator|.
name|runtime
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|core
operator|.
name|IJavaElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|core
operator|.
name|IType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|internal
operator|.
name|ui
operator|.
name|wizards
operator|.
name|NewElementWizard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jdt
operator|.
name|ui
operator|.
name|wizards
operator|.
name|NewTypeWizardPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|operation
operator|.
name|IRunnableWithProgress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|resource
operator|.
name|ImageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|viewers
operator|.
name|IStructuredSelection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|SWT
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|layout
operator|.
name|GridLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|swt
operator|.
name|widgets
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|ui
operator|.
name|INewWizard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|ui
operator|.
name|IWorkbench
import|;
end_import

begin_comment
comment|/**  * Wizard for creating a new Mapper class (a class that runs the Map portion  * of a MapReduce job). The class is pre-filled with a template.  *   */
end_comment

begin_class
DECL|class|NewMapperWizard
specifier|public
class|class
name|NewMapperWizard
extends|extends
name|NewElementWizard
implements|implements
name|INewWizard
implements|,
name|IRunnableWithProgress
block|{
DECL|field|page
specifier|private
name|Page
name|page
decl_stmt|;
DECL|method|NewMapperWizard ()
specifier|public
name|NewMapperWizard
parameter_list|()
block|{
name|setWindowTitle
argument_list|(
literal|"New Mapper"
argument_list|)
expr_stmt|;
block|}
DECL|method|run (IProgressMonitor monitor)
specifier|public
name|void
name|run
parameter_list|(
name|IProgressMonitor
name|monitor
parameter_list|)
block|{
try|try
block|{
name|page
operator|.
name|createType
argument_list|(
name|monitor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CoreException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|init (IWorkbench workbench, IStructuredSelection selection)
specifier|public
name|void
name|init
parameter_list|(
name|IWorkbench
name|workbench
parameter_list|,
name|IStructuredSelection
name|selection
parameter_list|)
block|{
name|super
operator|.
name|init
argument_list|(
name|workbench
argument_list|,
name|selection
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|Page
argument_list|()
expr_stmt|;
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|page
operator|.
name|setSelection
argument_list|(
name|selection
argument_list|)
expr_stmt|;
block|}
DECL|class|Page
specifier|public
specifier|static
class|class
name|Page
extends|extends
name|NewTypeWizardPage
block|{
DECL|field|isCreateMapMethod
specifier|private
name|Button
name|isCreateMapMethod
decl_stmt|;
DECL|method|Page ()
specifier|public
name|Page
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|"Mapper"
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
literal|"Mapper"
argument_list|)
expr_stmt|;
name|setDescription
argument_list|(
literal|"Create a new Mapper implementation."
argument_list|)
expr_stmt|;
name|setImageDescriptor
argument_list|(
name|ImageLibrary
operator|.
name|get
argument_list|(
literal|"wizard.mapper.new"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setSelection (IStructuredSelection selection)
specifier|public
name|void
name|setSelection
parameter_list|(
name|IStructuredSelection
name|selection
parameter_list|)
block|{
name|initContainerPage
argument_list|(
name|getInitialJavaElement
argument_list|(
name|selection
argument_list|)
argument_list|)
expr_stmt|;
name|initTypePage
argument_list|(
name|getInitialJavaElement
argument_list|(
name|selection
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createType (IProgressMonitor monitor)
specifier|public
name|void
name|createType
parameter_list|(
name|IProgressMonitor
name|monitor
parameter_list|)
throws|throws
name|CoreException
throws|,
name|InterruptedException
block|{
name|super
operator|.
name|createType
argument_list|(
name|monitor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createTypeMembers (IType newType, ImportsManager imports, IProgressMonitor monitor)
specifier|protected
name|void
name|createTypeMembers
parameter_list|(
name|IType
name|newType
parameter_list|,
name|ImportsManager
name|imports
parameter_list|,
name|IProgressMonitor
name|monitor
parameter_list|)
throws|throws
name|CoreException
block|{
name|super
operator|.
name|createTypeMembers
argument_list|(
name|newType
argument_list|,
name|imports
argument_list|,
name|monitor
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"java.io.IOException"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.io.WritableComparable"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.io.Writable"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.OutputCollector"
argument_list|)
expr_stmt|;
name|imports
operator|.
name|addImport
argument_list|(
literal|"org.apache.hadoop.mapred.Reporter"
argument_list|)
expr_stmt|;
name|newType
operator|.
name|createMethod
argument_list|(
literal|"public void map(WritableComparable key, Writable values, OutputCollector output, Reporter reporter) throws IOException \n{\n}\n"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|monitor
argument_list|)
expr_stmt|;
block|}
DECL|method|createControl (Composite parent)
specifier|public
name|void
name|createControl
parameter_list|(
name|Composite
name|parent
parameter_list|)
block|{
comment|// super.createControl(parent);
name|initializeDialogUnits
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|Composite
name|composite
init|=
operator|new
name|Composite
argument_list|(
name|parent
argument_list|,
name|SWT
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|GridLayout
name|layout
init|=
operator|new
name|GridLayout
argument_list|()
decl_stmt|;
name|layout
operator|.
name|numColumns
operator|=
literal|4
expr_stmt|;
name|composite
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|createContainerControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createPackageControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSeparator
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createTypeNameControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSuperClassControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|createSuperInterfacesControls
argument_list|(
name|composite
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// createSeparator(composite, 4);
name|setControl
argument_list|(
name|composite
argument_list|)
expr_stmt|;
name|setSuperClass
argument_list|(
literal|"org.apache.hadoop.mapred.MapReduceBase"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setSuperInterfaces
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"org.apache.hadoop.mapred.Mapper"
block|}
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setFocus
argument_list|()
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handleFieldChanged (String fieldName)
specifier|protected
name|void
name|handleFieldChanged
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
name|super
operator|.
name|handleFieldChanged
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
block|}
DECL|method|validate ()
specifier|private
name|void
name|validate
parameter_list|()
block|{
name|updateStatus
argument_list|(
operator|new
name|IStatus
index|[]
block|{
name|fContainerStatus
block|,
name|fPackageStatus
block|,
name|fTypeNameStatus
block|,
name|fSuperClassStatus
block|,
name|fSuperInterfacesStatus
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|performFinish ()
specifier|public
name|boolean
name|performFinish
parameter_list|()
block|{
if|if
condition|(
name|super
operator|.
name|performFinish
argument_list|()
condition|)
block|{
if|if
condition|(
name|getCreatedElement
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|openResource
argument_list|(
operator|(
name|IFile
operator|)
name|page
operator|.
name|getModifiedResource
argument_list|()
argument_list|)
expr_stmt|;
name|selectAndReveal
argument_list|(
name|page
operator|.
name|getModifiedResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|finishPage (IProgressMonitor monitor)
specifier|protected
name|void
name|finishPage
parameter_list|(
name|IProgressMonitor
name|monitor
parameter_list|)
throws|throws
name|InterruptedException
throws|,
name|CoreException
block|{
name|this
operator|.
name|run
argument_list|(
name|monitor
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCreatedElement ()
specifier|public
name|IJavaElement
name|getCreatedElement
parameter_list|()
block|{
return|return
name|page
operator|.
name|getCreatedType
argument_list|()
operator|.
name|getPrimaryElement
argument_list|()
return|;
block|}
block|}
end_class

end_unit

