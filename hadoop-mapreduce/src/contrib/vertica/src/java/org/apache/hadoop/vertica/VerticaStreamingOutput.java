begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.vertica
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vertica
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_class
DECL|class|VerticaStreamingOutput
specifier|public
class|class
name|VerticaStreamingOutput
extends|extends
name|OutputFormat
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|VerticaStreamingOutput
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|delimiter
name|String
name|delimiter
init|=
name|VerticaConfiguration
operator|.
name|DELIMITER
decl_stmt|;
DECL|field|terminator
name|String
name|terminator
init|=
name|VerticaConfiguration
operator|.
name|RECORD_TERMINATER
decl_stmt|;
DECL|method|checkOutputSpecs (JobContext context)
specifier|public
name|void
name|checkOutputSpecs
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|VerticaUtil
operator|.
name|checkOutputSpecs
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|VerticaConfiguration
name|vtconfig
init|=
operator|new
name|VerticaConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|delimiter
operator|=
name|vtconfig
operator|.
name|getOutputDelimiter
argument_list|()
expr_stmt|;
name|terminator
operator|=
name|vtconfig
operator|.
name|getOutputRecordTerminator
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Vertica output using delimiter '"
operator|+
name|delimiter
operator|+
literal|"' and terminator '"
operator|+
name|terminator
operator|+
literal|"'"
argument_list|)
expr_stmt|;
block|}
DECL|method|getRecordWriter (TaskAttemptContext context)
specifier|public
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
name|getRecordWriter
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|VerticaConfiguration
name|vtconfig
init|=
operator|new
name|VerticaConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|context
operator|.
name|getJobName
argument_list|()
decl_stmt|;
name|delimiter
operator|=
name|vtconfig
operator|.
name|getOutputDelimiter
argument_list|()
expr_stmt|;
name|terminator
operator|=
name|vtconfig
operator|.
name|getOutputRecordTerminator
argument_list|()
expr_stmt|;
comment|// TODO: use explicit date formats
name|String
name|table
init|=
name|vtconfig
operator|.
name|getOutputTableName
argument_list|()
decl_stmt|;
name|String
name|copyStmt
init|=
literal|"COPY "
operator|+
name|table
operator|+
literal|" FROM STDIN"
operator|+
literal|" DELIMITER '"
operator|+
name|delimiter
operator|+
literal|"' RECORD TERMINATOR '"
operator|+
name|terminator
operator|+
literal|"' STREAM NAME '"
operator|+
name|name
operator|+
literal|"' DIRECT"
decl_stmt|;
try|try
block|{
name|Connection
name|conn
init|=
name|vtconfig
operator|.
name|getConnection
argument_list|(
literal|true
argument_list|)
decl_stmt|;
return|return
operator|new
name|VerticaStreamingRecordWriter
argument_list|(
name|conn
argument_list|,
name|copyStmt
argument_list|,
name|table
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getOutputCommitter (TaskAttemptContext context)
specifier|public
name|OutputCommitter
name|getOutputCommitter
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
operator|new
name|FileOutputCommitter
argument_list|(
name|FileOutputFormat
operator|.
name|getOutputPath
argument_list|(
name|context
argument_list|)
argument_list|,
name|context
argument_list|)
return|;
block|}
block|}
end_class

end_unit

