begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|MRConstants
import|;
end_import

begin_interface
DECL|interface|AMConstants
specifier|public
interface|interface
name|AMConstants
block|{
DECL|field|CONTAINERLAUNCHER_THREADPOOL_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|CONTAINERLAUNCHER_THREADPOOL_SIZE
init|=
literal|"yarn.mapreduce.containerlauncher.threadpool-size"
decl_stmt|;
DECL|field|AM_RM_SCHEDULE_INTERVAL
specifier|public
specifier|static
specifier|final
name|String
name|AM_RM_SCHEDULE_INTERVAL
init|=
literal|"yarn.appMaster.scheduler.interval"
decl_stmt|;
DECL|field|DEFAULT_AM_RM_SCHEDULE_INTERVAL
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_AM_RM_SCHEDULE_INTERVAL
init|=
literal|2000
decl_stmt|;
DECL|field|AM_TASK_LISTENER_THREADS
specifier|public
specifier|static
specifier|final
name|String
name|AM_TASK_LISTENER_THREADS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"task.listener.threads"
decl_stmt|;
DECL|field|DEFAULT_AM_TASK_LISTENER_THREADS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_AM_TASK_LISTENER_THREADS
init|=
literal|10
decl_stmt|;
DECL|field|AM_JOB_CLIENT_THREADS
specifier|public
specifier|static
specifier|final
name|String
name|AM_JOB_CLIENT_THREADS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"job.client.threads"
decl_stmt|;
DECL|field|DEFAULT_AM_JOB_CLIENT_THREADS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_AM_JOB_CLIENT_THREADS
init|=
literal|1
decl_stmt|;
DECL|field|SPECULATOR_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|SPECULATOR_CLASS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"speculator.class"
decl_stmt|;
DECL|field|TASK_RUNTIME_ESTIMATOR_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|TASK_RUNTIME_ESTIMATOR_CLASS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"task.runtime.estimator.class"
decl_stmt|;
DECL|field|TASK_ATTEMPT_PROGRESS_RUNTIME_LINEARIZER_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|TASK_ATTEMPT_PROGRESS_RUNTIME_LINEARIZER_CLASS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"task.runtime.linearizer.class"
decl_stmt|;
DECL|field|EXPONENTIAL_SMOOTHING_LAMBDA_MILLISECONDS
specifier|public
specifier|static
specifier|final
name|String
name|EXPONENTIAL_SMOOTHING_LAMBDA_MILLISECONDS
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"task.runtime.estimator.exponential.smooth.lambda"
decl_stmt|;
DECL|field|EXPONENTIAL_SMOOTHING_SMOOTH_RATE
specifier|public
specifier|static
specifier|final
name|String
name|EXPONENTIAL_SMOOTHING_SMOOTH_RATE
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"task.runtime.estimator.exponential.smooth.smoothsrate"
decl_stmt|;
DECL|field|RECOVERY_ENABLE
specifier|public
specifier|static
specifier|final
name|String
name|RECOVERY_ENABLE
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"recovery.enable"
decl_stmt|;
DECL|field|DEFAULT_REDUCE_RAMP_UP_LIMIT
specifier|public
specifier|static
specifier|final
name|float
name|DEFAULT_REDUCE_RAMP_UP_LIMIT
init|=
literal|0.5f
decl_stmt|;
DECL|field|REDUCE_RAMPUP_UP_LIMIT
specifier|public
specifier|static
specifier|final
name|String
name|REDUCE_RAMPUP_UP_LIMIT
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"reduce.rampup.limit"
decl_stmt|;
DECL|field|DEFAULT_REDUCE_PREEMPTION_LIMIT
specifier|public
specifier|static
specifier|final
name|float
name|DEFAULT_REDUCE_PREEMPTION_LIMIT
init|=
literal|0.5f
decl_stmt|;
DECL|field|REDUCE_PREEMPTION_LIMIT
specifier|public
specifier|static
specifier|final
name|String
name|REDUCE_PREEMPTION_LIMIT
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"reduce.preemption.limit"
decl_stmt|;
DECL|field|NODE_BLACKLISTING_ENABLE
specifier|public
specifier|static
specifier|final
name|String
name|NODE_BLACKLISTING_ENABLE
init|=
name|MRConstants
operator|.
name|YARN_MR_PREFIX
operator|+
literal|"node.blacklisting.enable"
decl_stmt|;
block|}
end_interface

end_unit

