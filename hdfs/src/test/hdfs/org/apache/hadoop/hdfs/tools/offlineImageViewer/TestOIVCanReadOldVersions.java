begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.tools.offlineImageViewer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineImageViewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineImageViewer
operator|.
name|SpotCheckImageVisitor
operator|.
name|ImageInfo
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
DECL|class|TestOIVCanReadOldVersions
specifier|public
class|class
name|TestOIVCanReadOldVersions
extends|extends
name|TestCase
block|{
comment|// Location of fsimage files during testing.
DECL|field|TEST_CACHE_DATA_DIR
specifier|public
specifier|static
specifier|final
name|String
name|TEST_CACHE_DATA_DIR
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.cache.data"
argument_list|,
literal|"build/test/cache"
argument_list|)
decl_stmt|;
comment|// Verify that the image processor can correctly process prior Hadoop
comment|// layout versions.  These fsimages were previously generated and stored
comment|// with the test.  Test success indicates that no changes have been made
comment|// to the OIV that causes older fsimages to be incorrectly processed.
DECL|method|testOldFSImages ()
specifier|public
name|void
name|testOldFSImages
parameter_list|()
block|{
comment|// Define the expected values from the prior versions, as they were created
comment|// and verified at time of creation
name|Set
argument_list|<
name|String
argument_list|>
name|pathNames
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Collections
operator|.
name|addAll
argument_list|(
name|pathNames
argument_list|,
literal|""
argument_list|,
comment|/* root */
literal|"/bar"
argument_list|,
literal|"/bar/dir0"
argument_list|,
literal|"/bar/dir0/file0"
argument_list|,
literal|"/bar/dir0/file1"
argument_list|,
literal|"/bar/dir1"
argument_list|,
literal|"/bar/dir1/file0"
argument_list|,
literal|"/bar/dir1/file1"
argument_list|,
literal|"/bar/dir2"
argument_list|,
literal|"/bar/dir2/file0"
argument_list|,
literal|"/bar/dir2/file1"
argument_list|,
literal|"/foo"
argument_list|,
literal|"/foo/dir0"
argument_list|,
literal|"/foo/dir0/file0"
argument_list|,
literal|"/foo/dir0/file1"
argument_list|,
literal|"/foo/dir0/file2"
argument_list|,
literal|"/foo/dir0/file3"
argument_list|,
literal|"/foo/dir1"
argument_list|,
literal|"/foo/dir1/file0"
argument_list|,
literal|"/foo/dir1/file1"
argument_list|,
literal|"/foo/dir1/file2"
argument_list|,
literal|"/foo/dir1/file3"
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|INUCpaths
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Collections
operator|.
name|addAll
argument_list|(
name|INUCpaths
argument_list|,
literal|"/bar/dir0/file0"
argument_list|,
literal|"/bar/dir0/file1"
argument_list|,
literal|"/bar/dir1/file0"
argument_list|,
literal|"/bar/dir1/file1"
argument_list|,
literal|"/bar/dir2/file0"
argument_list|,
literal|"/bar/dir2/file1"
argument_list|)
expr_stmt|;
name|ImageInfo
name|v18Inodes
init|=
operator|new
name|ImageInfo
argument_list|()
decl_stmt|;
comment|// Hadoop version 18 inodes
name|v18Inodes
operator|.
name|totalNumBlocks
operator|=
literal|12
expr_stmt|;
name|v18Inodes
operator|.
name|totalFileSize
operator|=
literal|1069548540l
expr_stmt|;
name|v18Inodes
operator|.
name|pathNames
operator|=
name|pathNames
expr_stmt|;
name|v18Inodes
operator|.
name|totalReplications
operator|=
literal|14
expr_stmt|;
name|ImageInfo
name|v18INUCs
init|=
operator|new
name|ImageInfo
argument_list|()
decl_stmt|;
comment|// Hadoop version 18 inodes under construction
name|v18INUCs
operator|.
name|totalNumBlocks
operator|=
literal|0
expr_stmt|;
name|v18INUCs
operator|.
name|totalFileSize
operator|=
literal|0
expr_stmt|;
name|v18INUCs
operator|.
name|pathNames
operator|=
name|INUCpaths
expr_stmt|;
name|v18INUCs
operator|.
name|totalReplications
operator|=
literal|6
expr_stmt|;
name|ImageInfo
name|v19Inodes
init|=
operator|new
name|ImageInfo
argument_list|()
decl_stmt|;
comment|// Hadoop version 19 inodes
name|v19Inodes
operator|.
name|totalNumBlocks
operator|=
literal|12
expr_stmt|;
name|v19Inodes
operator|.
name|totalFileSize
operator|=
literal|1069548540l
expr_stmt|;
name|v19Inodes
operator|.
name|pathNames
operator|=
name|pathNames
expr_stmt|;
name|v19Inodes
operator|.
name|totalReplications
operator|=
literal|14
expr_stmt|;
name|ImageInfo
name|v19INUCs
init|=
operator|new
name|ImageInfo
argument_list|()
decl_stmt|;
comment|// Hadoop version 19 inodes under construction
name|v19INUCs
operator|.
name|totalNumBlocks
operator|=
literal|0
expr_stmt|;
name|v19INUCs
operator|.
name|totalFileSize
operator|=
literal|0
expr_stmt|;
name|v19INUCs
operator|.
name|pathNames
operator|=
name|INUCpaths
expr_stmt|;
name|v19INUCs
operator|.
name|totalReplications
operator|=
literal|6
expr_stmt|;
name|spotCheck
argument_list|(
literal|"18"
argument_list|,
name|TEST_CACHE_DATA_DIR
operator|+
literal|"/fsimageV18"
argument_list|,
name|v18Inodes
argument_list|,
name|v18INUCs
argument_list|)
expr_stmt|;
name|spotCheck
argument_list|(
literal|"19"
argument_list|,
name|TEST_CACHE_DATA_DIR
operator|+
literal|"/fsimageV19"
argument_list|,
name|v19Inodes
argument_list|,
name|v19INUCs
argument_list|)
expr_stmt|;
block|}
comment|// Check that running the processor now gives us the same values as before
DECL|method|spotCheck (String hadoopVersion, String input, ImageInfo inodes, ImageInfo INUCs)
specifier|private
name|void
name|spotCheck
parameter_list|(
name|String
name|hadoopVersion
parameter_list|,
name|String
name|input
parameter_list|,
name|ImageInfo
name|inodes
parameter_list|,
name|ImageInfo
name|INUCs
parameter_list|)
block|{
name|SpotCheckImageVisitor
name|v
init|=
operator|new
name|SpotCheckImageVisitor
argument_list|()
decl_stmt|;
name|OfflineImageViewer
name|oiv
init|=
operator|new
name|OfflineImageViewer
argument_list|(
name|input
argument_list|,
name|v
argument_list|,
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|oiv
operator|.
name|go
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Error processing file: "
operator|+
name|input
argument_list|)
expr_stmt|;
block|}
name|compareSpotCheck
argument_list|(
name|hadoopVersion
argument_list|,
name|v
operator|.
name|getINodesInfo
argument_list|()
argument_list|,
name|inodes
argument_list|)
expr_stmt|;
name|compareSpotCheck
argument_list|(
name|hadoopVersion
argument_list|,
name|v
operator|.
name|getINUCsInfo
argument_list|()
argument_list|,
name|INUCs
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Successfully processed fsimage file from Hadoop version "
operator|+
name|hadoopVersion
argument_list|)
expr_stmt|;
block|}
comment|// Compare the spot check results of what we generated from the image
comment|// processor and what we expected to receive
DECL|method|compareSpotCheck (String hadoopVersion, ImageInfo generated, ImageInfo expected)
specifier|private
name|void
name|compareSpotCheck
parameter_list|(
name|String
name|hadoopVersion
parameter_list|,
name|ImageInfo
name|generated
parameter_list|,
name|ImageInfo
name|expected
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"Version "
operator|+
name|hadoopVersion
operator|+
literal|": Same number of total blocks"
argument_list|,
name|expected
operator|.
name|totalNumBlocks
argument_list|,
name|generated
operator|.
name|totalNumBlocks
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Version "
operator|+
name|hadoopVersion
operator|+
literal|": Same total file size"
argument_list|,
name|expected
operator|.
name|totalFileSize
argument_list|,
name|generated
operator|.
name|totalFileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Version "
operator|+
name|hadoopVersion
operator|+
literal|": Same total replication factor"
argument_list|,
name|expected
operator|.
name|totalReplications
argument_list|,
name|generated
operator|.
name|totalReplications
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Version "
operator|+
name|hadoopVersion
operator|+
literal|": One-to-one matching of path names"
argument_list|,
name|expected
operator|.
name|pathNames
argument_list|,
name|generated
operator|.
name|pathNames
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

