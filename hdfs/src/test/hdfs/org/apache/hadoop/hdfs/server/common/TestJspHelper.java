begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNodeHttpServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|AbstractDelegationTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestJspHelper
specifier|public
class|class
name|TestJspHelper
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
init|=
operator|new
name|HdfsConfiguration
argument_list|()
decl_stmt|;
DECL|class|DummySecretManager
specifier|public
specifier|static
class|class
name|DummySecretManager
extends|extends
name|AbstractDelegationTokenSecretManager
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
block|{
DECL|method|DummySecretManager (long delegationKeyUpdateInterval, long delegationTokenMaxLifetime, long delegationTokenRenewInterval, long delegationTokenRemoverScanInterval)
specifier|public
name|DummySecretManager
parameter_list|(
name|long
name|delegationKeyUpdateInterval
parameter_list|,
name|long
name|delegationTokenMaxLifetime
parameter_list|,
name|long
name|delegationTokenRenewInterval
parameter_list|,
name|long
name|delegationTokenRemoverScanInterval
parameter_list|)
block|{
name|super
argument_list|(
name|delegationKeyUpdateInterval
argument_list|,
name|delegationTokenMaxLifetime
argument_list|,
name|delegationTokenRenewInterval
argument_list|,
name|delegationTokenRemoverScanInterval
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createIdentifier ()
specifier|public
name|DelegationTokenIdentifier
name|createIdentifier
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createPassword (DelegationTokenIdentifier dtId)
specifier|public
name|byte
index|[]
name|createPassword
parameter_list|(
name|DelegationTokenIdentifier
name|dtId
parameter_list|)
block|{
return|return
operator|new
name|byte
index|[
literal|1
index|]
return|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetUgi ()
specifier|public
name|void
name|testGetUgi
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|.
name|set
argument_list|(
name|DFSConfigKeys
operator|.
name|FS_DEFAULT_NAME_KEY
argument_list|,
literal|"hdfs://localhost:4321/"
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|ServletContext
name|context
init|=
name|mock
argument_list|(
name|ServletContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|user
init|=
literal|"TheDoctor"
decl_stmt|;
name|Text
name|userText
init|=
operator|new
name|Text
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|DelegationTokenIdentifier
name|dtId
init|=
operator|new
name|DelegationTokenIdentifier
argument_list|(
name|userText
argument_list|,
name|userText
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
argument_list|(
name|dtId
argument_list|,
operator|new
name|DummySecretManager
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tokenString
init|=
name|token
operator|.
name|encodeToUrlString
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tokenString
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|request
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|user
argument_list|)
expr_stmt|;
comment|//Test attribute in the url to be used as service in the token.
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"1.1.1.1:1111"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|DFSConfigKeys
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|,
literal|"kerberos"
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|verifyServiceInToken
argument_list|(
name|context
argument_list|,
name|request
argument_list|,
literal|"1.1.1.1:1111"
argument_list|)
expr_stmt|;
comment|//Test attribute name.node.address
comment|//Set the nnaddr url parameter to null.
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|InetSocketAddress
name|addr
init|=
operator|new
name|InetSocketAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|2222
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|context
operator|.
name|getAttribute
argument_list|(
name|NameNodeHttpServer
operator|.
name|NAMENODE_ADDRESS_ATTRIBUTE_KEY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|verifyServiceInToken
argument_list|(
name|context
argument_list|,
name|request
argument_list|,
name|addr
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
operator|+
literal|":2222"
argument_list|)
expr_stmt|;
comment|//Test service already set in the token
name|token
operator|.
name|setService
argument_list|(
operator|new
name|Text
argument_list|(
literal|"3.3.3.3:3333"
argument_list|)
argument_list|)
expr_stmt|;
name|tokenString
operator|=
name|token
operator|.
name|encodeToUrlString
argument_list|()
expr_stmt|;
comment|//Set the name.node.address attribute in Servlet context to null
name|when
argument_list|(
name|context
operator|.
name|getAttribute
argument_list|(
name|NameNodeHttpServer
operator|.
name|NAMENODE_ADDRESS_ATTRIBUTE_KEY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tokenString
argument_list|)
expr_stmt|;
name|verifyServiceInToken
argument_list|(
name|context
argument_list|,
name|request
argument_list|,
literal|"3.3.3.3:3333"
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyServiceInToken (ServletContext context, HttpServletRequest request, String expected)
specifier|private
name|void
name|verifyServiceInToken
parameter_list|(
name|ServletContext
name|context
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|expected
parameter_list|)
throws|throws
name|IOException
block|{
name|UserGroupInformation
name|ugi
init|=
name|JspHelper
operator|.
name|getUGI
argument_list|(
name|context
argument_list|,
name|request
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|tokenInUgi
init|=
name|ugi
operator|.
name|getTokens
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|tokenInUgi
operator|.
name|getService
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDelegationTokenUrlParam ()
specifier|public
name|void
name|testDelegationTokenUrlParam
parameter_list|()
block|{
name|conf
operator|.
name|set
argument_list|(
name|DFSConfigKeys
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|,
literal|"kerberos"
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|tokenString
init|=
literal|"xyzabc"
decl_stmt|;
name|String
name|delegationTokenParam
init|=
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
decl_stmt|;
comment|//Security is enabled
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JspHelper
operator|.
name|SET_DELEGATION
operator|+
literal|"xyzabc"
argument_list|,
name|delegationTokenParam
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|DFSConfigKeys
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|delegationTokenParam
operator|=
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
expr_stmt|;
comment|//Empty string must be returned because security is disabled.
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|delegationTokenParam
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

