begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|DataNodeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|DataTransferTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|DatanodeMarkingAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|IoeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|OomAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|DataTransferTestUtil
operator|.
name|SleepAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|FiTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|FiTestUtil
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|FiTestUtil
operator|.
name|ConstraintSatisfactionAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fi
operator|.
name|FiTestUtil
operator|.
name|MarkerConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/** Test DataTransferProtocol with fault injection. */
end_comment

begin_class
DECL|class|TestFiPipelineClose
specifier|public
class|class
name|TestFiPipelineClose
block|{
DECL|method|runPipelineCloseTest (String methodName, Action<DatanodeID, IOException> a)
specifier|private
specifier|static
name|void
name|runPipelineCloseTest
parameter_list|(
name|String
name|methodName
parameter_list|,
name|Action
argument_list|<
name|DatanodeID
argument_list|,
name|IOException
argument_list|>
name|a
parameter_list|)
throws|throws
name|IOException
block|{
name|FiTestUtil
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"Running "
operator|+
name|methodName
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
specifier|final
name|DataTransferTest
name|t
init|=
operator|(
name|DataTransferTest
operator|)
name|DataTransferTestUtil
operator|.
name|initTest
argument_list|()
decl_stmt|;
name|t
operator|.
name|fiPipelineClose
operator|.
name|set
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|TestFiDataTransferProtocol
operator|.
name|write1byte
argument_list|(
name|methodName
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN0 never responses after received close request from client.    * Client gets an IOException and determine DN0 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_36 ()
specifier|public
name|void
name|pipeline_Fi_36
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|SleepAction
argument_list|(
name|methodName
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN1 never responses after received close request from client.    * Client gets an IOException and determine DN1 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_37 ()
specifier|public
name|void
name|pipeline_Fi_37
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|SleepAction
argument_list|(
name|methodName
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN2 never responses after received close request from client.    * Client gets an IOException and determine DN2 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_38 ()
specifier|public
name|void
name|pipeline_Fi_38
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|SleepAction
argument_list|(
name|methodName
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|run41_43 (String name, int i)
specifier|private
specifier|static
name|void
name|run41_43
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
name|runPipelineCloseTest
argument_list|(
name|name
argument_list|,
operator|new
name|SleepAction
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
literal|3000
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|runPipelineCloseAck (String name, int i, DataNodeAction a )
specifier|private
specifier|static
name|void
name|runPipelineCloseAck
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|i
parameter_list|,
name|DataNodeAction
name|a
parameter_list|)
throws|throws
name|IOException
block|{
name|FiTestUtil
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"Running "
operator|+
name|name
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
specifier|final
name|DataTransferTest
name|t
init|=
operator|(
name|DataTransferTest
operator|)
name|DataTransferTestUtil
operator|.
name|initTest
argument_list|()
decl_stmt|;
specifier|final
name|MarkerConstraint
name|marker
init|=
operator|new
name|MarkerConstraint
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|t
operator|.
name|fiPipelineClose
operator|.
name|set
argument_list|(
operator|new
name|DatanodeMarkingAction
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
name|marker
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|fiPipelineAck
operator|.
name|set
argument_list|(
operator|new
name|ConstraintSatisfactionAction
argument_list|<
name|DatanodeID
argument_list|,
name|IOException
argument_list|>
argument_list|(
name|a
argument_list|,
name|marker
argument_list|)
argument_list|)
expr_stmt|;
name|TestFiDataTransferProtocol
operator|.
name|write1byte
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|run39_40 (String name, int i)
specifier|private
specifier|static
name|void
name|run39_40
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
name|runPipelineCloseAck
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
operator|new
name|SleepAction
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN1 never responses after received close ack DN2.    * Client gets an IOException and determine DN1 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_39 ()
specifier|public
name|void
name|pipeline_Fi_39
parameter_list|()
throws|throws
name|IOException
block|{
name|run39_40
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN0 never responses after received close ack DN1.    * Client gets an IOException and determine DN0 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_40 ()
specifier|public
name|void
name|pipeline_Fi_40
parameter_list|()
throws|throws
name|IOException
block|{
name|run39_40
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close with DN0 very slow but it won't lead to timeout.    * Client finishes close successfully.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_41 ()
specifier|public
name|void
name|pipeline_Fi_41
parameter_list|()
throws|throws
name|IOException
block|{
name|run41_43
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close with DN1 very slow but it won't lead to timeout.    * Client finishes close successfully.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_42 ()
specifier|public
name|void
name|pipeline_Fi_42
parameter_list|()
throws|throws
name|IOException
block|{
name|run41_43
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close with DN2 very slow but it won't lead to timeout.    * Client finishes close successfully.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_43 ()
specifier|public
name|void
name|pipeline_Fi_43
parameter_list|()
throws|throws
name|IOException
block|{
name|run41_43
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN0 throws an OutOfMemoryException    * right after it received a close request from client.    * Client gets an IOException and determine DN0 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_44 ()
specifier|public
name|void
name|pipeline_Fi_44
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|OomAction
argument_list|(
name|methodName
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN1 throws an OutOfMemoryException    * right after it received a close request from client.    * Client gets an IOException and determine DN1 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_45 ()
specifier|public
name|void
name|pipeline_Fi_45
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|OomAction
argument_list|(
name|methodName
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN2 throws an OutOfMemoryException    * right after it received a close request from client.    * Client gets an IOException and determine DN2 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_46 ()
specifier|public
name|void
name|pipeline_Fi_46
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|methodName
init|=
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|runPipelineCloseTest
argument_list|(
name|methodName
argument_list|,
operator|new
name|OomAction
argument_list|(
name|methodName
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|run47_48 (String name, int i)
specifier|private
specifier|static
name|void
name|run47_48
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
name|runPipelineCloseAck
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
operator|new
name|OomAction
argument_list|(
name|name
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN1 throws an OutOfMemoryException right after    * it received a close ack from DN2.    * Client gets an IOException and determine DN1 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_47 ()
specifier|public
name|void
name|pipeline_Fi_47
parameter_list|()
throws|throws
name|IOException
block|{
name|run47_48
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN0 throws an OutOfMemoryException right after    * it received a close ack from DN1.    * Client gets an IOException and determine DN0 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_48 ()
specifier|public
name|void
name|pipeline_Fi_48
parameter_list|()
throws|throws
name|IOException
block|{
name|run47_48
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|runBlockFileCloseTest (String methodName, Action<DatanodeID, IOException> a)
specifier|private
specifier|static
name|void
name|runBlockFileCloseTest
parameter_list|(
name|String
name|methodName
parameter_list|,
name|Action
argument_list|<
name|DatanodeID
argument_list|,
name|IOException
argument_list|>
name|a
parameter_list|)
throws|throws
name|IOException
block|{
name|FiTestUtil
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"Running "
operator|+
name|methodName
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
specifier|final
name|DataTransferTest
name|t
init|=
operator|(
name|DataTransferTest
operator|)
name|DataTransferTestUtil
operator|.
name|initTest
argument_list|()
decl_stmt|;
name|t
operator|.
name|fiBlockFileClose
operator|.
name|set
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|TestFiDataTransferProtocol
operator|.
name|write1byte
argument_list|(
name|methodName
argument_list|)
expr_stmt|;
block|}
DECL|method|run49_51 (String name, int i)
specifier|private
specifier|static
name|void
name|run49_51
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|i
parameter_list|)
throws|throws
name|IOException
block|{
name|runBlockFileCloseTest
argument_list|(
name|name
argument_list|,
operator|new
name|IoeAction
argument_list|(
name|name
argument_list|,
name|i
argument_list|,
literal|"DISK ERROR"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN0 throws a disk error exception when it is closing the block file.    * Client gets an IOException and determine DN0 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_49 ()
specifier|public
name|void
name|pipeline_Fi_49
parameter_list|()
throws|throws
name|IOException
block|{
name|run49_51
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN1 throws a disk error exception when it is closing the block file.    * Client gets an IOException and determine DN1 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_50 ()
specifier|public
name|void
name|pipeline_Fi_50
parameter_list|()
throws|throws
name|IOException
block|{
name|run49_51
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Pipeline close:    * DN2 throws a disk error exception when it is closing the block file.    * Client gets an IOException and determine DN2 bad.    */
annotation|@
name|Test
DECL|method|pipeline_Fi_51 ()
specifier|public
name|void
name|pipeline_Fi_51
parameter_list|()
throws|throws
name|IOException
block|{
name|run49_51
argument_list|(
name|FiTestUtil
operator|.
name|getMethodName
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

