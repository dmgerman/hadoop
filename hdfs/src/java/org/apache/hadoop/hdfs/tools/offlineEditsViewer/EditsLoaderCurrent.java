begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.tools.offlineEditsViewer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LayoutVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LayoutVersion
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSEditLogOpCodes
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
operator|.
name|Tokenizer
operator|.
name|ByteToken
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
operator|.
name|Tokenizer
operator|.
name|IntToken
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
operator|.
name|Tokenizer
operator|.
name|VIntToken
import|;
end_import

begin_comment
comment|/**  * EditsLoaderCurrent processes Hadoop EditLogs files and walks over  * them using a provided EditsVisitor, calling the visitor at each element  * enumerated below.  *  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|EditsLoaderCurrent
class|class
name|EditsLoaderCurrent
implements|implements
name|EditsLoader
block|{
DECL|field|supportedVersions
specifier|private
specifier|static
name|int
index|[]
name|supportedVersions
init|=
block|{
operator|-
literal|18
block|,
operator|-
literal|19
block|,
operator|-
literal|20
block|,
operator|-
literal|21
block|,
operator|-
literal|22
block|,
operator|-
literal|23
block|,
operator|-
literal|24
block|,
operator|-
literal|25
block|,
operator|-
literal|26
block|,
operator|-
literal|27
block|,
operator|-
literal|28
block|,
operator|-
literal|30
block|,
operator|-
literal|31
block|,
operator|-
literal|32
block|,
operator|-
literal|33
block|,
operator|-
literal|34
block|,
operator|-
literal|35
block|,
operator|-
literal|36
block|}
decl_stmt|;
DECL|field|v
specifier|private
name|EditsVisitor
name|v
decl_stmt|;
DECL|field|editsVersion
specifier|private
name|int
name|editsVersion
init|=
literal|0
decl_stmt|;
comment|/**    * Constructor    */
DECL|method|EditsLoaderCurrent (EditsVisitor visitor)
specifier|public
name|EditsLoaderCurrent
parameter_list|(
name|EditsVisitor
name|visitor
parameter_list|)
block|{
name|v
operator|=
name|visitor
expr_stmt|;
block|}
comment|/**    * Checks if this EditsLoader can load given version of edits    *    * @param version version to load    * @return true if this EditsLoader can load given version of edits    */
annotation|@
name|Override
DECL|method|canLoadVersion (int version)
specifier|public
name|boolean
name|canLoadVersion
parameter_list|(
name|int
name|version
parameter_list|)
block|{
for|for
control|(
name|int
name|v
range|:
name|supportedVersions
control|)
block|{
if|if
condition|(
name|v
operator|==
name|version
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
comment|/**    * Visit OP_INVALID    */
DECL|method|visit_OP_INVALID ()
specifier|private
name|void
name|visit_OP_INVALID
parameter_list|()
throws|throws
name|IOException
block|{
empty_stmt|;
comment|// nothing to do, this op code has no data
block|}
comment|/**    * Visit OP_ADD    */
DECL|method|visit_OP_ADD ()
specifier|private
name|void
name|visit_OP_ADD
parameter_list|()
throws|throws
name|IOException
block|{
name|visit_OP_ADD_or_OP_CLOSE
argument_list|(
name|FSEditLogOpCodes
operator|.
name|OP_ADD
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_CLOSE    */
DECL|method|visit_OP_CLOSE ()
specifier|private
name|void
name|visit_OP_CLOSE
parameter_list|()
throws|throws
name|IOException
block|{
name|visit_OP_ADD_or_OP_CLOSE
argument_list|(
name|FSEditLogOpCodes
operator|.
name|OP_CLOSE
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_ADD and OP_CLOSE, they are almost the same    *    * @param editsOpCode op code to visit    */
DECL|method|visit_OP_ADD_or_OP_CLOSE (FSEditLogOpCodes editsOpCode)
specifier|private
name|void
name|visit_OP_ADD_or_OP_CLOSE
parameter_list|(
name|FSEditLogOpCodes
name|editsOpCode
parameter_list|)
throws|throws
name|IOException
block|{
name|IntToken
name|opAddLength
init|=
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
decl_stmt|;
comment|// this happens if the edits is not properly ended (-1 op code),
comment|// it is padded at the end with all zeros, OP_ADD is zero so
comment|// without this check we would treat all zeros as empty OP_ADD)
if|if
condition|(
name|opAddLength
operator|.
name|value
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"OpCode "
operator|+
name|editsOpCode
operator|+
literal|" has zero length (corrupted edits)"
argument_list|)
throw|;
block|}
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|REPLICATION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|MTIME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|ATIME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|BLOCKSIZE
argument_list|)
expr_stmt|;
comment|// now read blocks
name|IntToken
name|numBlocksToken
init|=
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|NUMBLOCKS
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numBlocksToken
operator|.
name|value
condition|;
name|i
operator|++
control|)
block|{
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|BLOCK
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|BLOCK_ID
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|BLOCK_NUM_BYTES
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|BLOCK_GENERATION_STAMP
argument_list|)
expr_stmt|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
block|}
comment|// PERMISSION_STATUS
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|PERMISSION_STATUS
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|USERNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|GROUPNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitShort
argument_list|(
name|EditsElement
operator|.
name|FS_PERMISSIONS
argument_list|)
expr_stmt|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
if|if
condition|(
name|editsOpCode
operator|==
name|FSEditLogOpCodes
operator|.
name|OP_ADD
condition|)
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CLIENT_NAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CLIENT_MACHINE
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Visit OP_RENAME_OLD    */
DECL|method|visit_OP_RENAME_OLD ()
specifier|private
name|void
name|visit_OP_RENAME_OLD
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|SOURCE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|DESTINATION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|TIMESTAMP
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_DELETE    */
DECL|method|visit_OP_DELETE ()
specifier|private
name|void
name|visit_OP_DELETE
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|TIMESTAMP
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_MKDIR    */
DECL|method|visit_OP_MKDIR ()
specifier|private
name|void
name|visit_OP_MKDIR
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|TIMESTAMP
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|ATIME
argument_list|)
expr_stmt|;
comment|// PERMISSION_STATUS
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|PERMISSION_STATUS
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|USERNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|GROUPNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitShort
argument_list|(
name|EditsElement
operator|.
name|FS_PERMISSIONS
argument_list|)
expr_stmt|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
block|}
comment|/**    * Visit OP_SET_REPLICATION    */
DECL|method|visit_OP_SET_REPLICATION ()
specifier|private
name|void
name|visit_OP_SET_REPLICATION
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|REPLICATION
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_SET_PERMISSIONS    */
DECL|method|visit_OP_SET_PERMISSIONS ()
specifier|private
name|void
name|visit_OP_SET_PERMISSIONS
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitShort
argument_list|(
name|EditsElement
operator|.
name|FS_PERMISSIONS
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_SET_OWNER    */
DECL|method|visit_OP_SET_OWNER ()
specifier|private
name|void
name|visit_OP_SET_OWNER
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|USERNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|GROUPNAME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_SET_GENSTAMP    */
DECL|method|visit_OP_SET_GENSTAMP ()
specifier|private
name|void
name|visit_OP_SET_GENSTAMP
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|GENERATION_STAMP
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_TIMES    */
DECL|method|visit_OP_TIMES ()
specifier|private
name|void
name|visit_OP_TIMES
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|MTIME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|ATIME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_SET_QUOTA    */
DECL|method|visit_OP_SET_QUOTA ()
specifier|private
name|void
name|visit_OP_SET_QUOTA
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|NS_QUOTA
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitLong
argument_list|(
name|EditsElement
operator|.
name|DS_QUOTA
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_RENAME    */
DECL|method|visit_OP_RENAME ()
specifier|private
name|void
name|visit_OP_RENAME
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|SOURCE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|DESTINATION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|TIMESTAMP
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitBytesWritable
argument_list|(
name|EditsElement
operator|.
name|RENAME_OPTIONS
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_CONCAT_DELETE    */
DECL|method|visit_OP_CONCAT_DELETE ()
specifier|private
name|void
name|visit_OP_CONCAT_DELETE
parameter_list|()
throws|throws
name|IOException
block|{
name|IntToken
name|lengthToken
init|=
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
decl_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CONCAT_TARGET
argument_list|)
expr_stmt|;
comment|// all except of CONCAT_TARGET and TIMESTAMP
name|int
name|sourceCount
init|=
name|lengthToken
operator|.
name|value
operator|-
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sourceCount
condition|;
name|i
operator|++
control|)
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CONCAT_SOURCE
argument_list|)
expr_stmt|;
block|}
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|TIMESTAMP
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_SYMLINK    */
DECL|method|visit_OP_SYMLINK ()
specifier|private
name|void
name|visit_OP_SYMLINK
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|LENGTH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|SOURCE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|DESTINATION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|MTIME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|ATIME
argument_list|)
expr_stmt|;
comment|// PERMISSION_STATUS
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|PERMISSION_STATUS
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|USERNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|GROUPNAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitShort
argument_list|(
name|EditsElement
operator|.
name|FS_PERMISSIONS
argument_list|)
expr_stmt|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
block|}
comment|/**    * Visit OP_GET_DELEGATION_TOKEN    */
DECL|method|visit_OP_GET_DELEGATION_TOKEN ()
specifier|private
name|void
name|visit_OP_GET_DELEGATION_TOKEN
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitByte
argument_list|(
name|EditsElement
operator|.
name|T_VERSION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_OWNER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_RENEWER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_REAL_USER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_ISSUE_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_MAX_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_SEQUENCE_NUMBER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_MASTER_KEY_ID
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|T_EXPIRY_TIME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_RENEW_DELEGATION_TOKEN    */
DECL|method|visit_OP_RENEW_DELEGATION_TOKEN ()
specifier|private
name|void
name|visit_OP_RENEW_DELEGATION_TOKEN
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitByte
argument_list|(
name|EditsElement
operator|.
name|T_VERSION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_OWNER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_RENEWER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_REAL_USER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_ISSUE_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_MAX_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_SEQUENCE_NUMBER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_MASTER_KEY_ID
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|T_EXPIRY_TIME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_CANCEL_DELEGATION_TOKEN    */
DECL|method|visit_OP_CANCEL_DELEGATION_TOKEN ()
specifier|private
name|void
name|visit_OP_CANCEL_DELEGATION_TOKEN
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitByte
argument_list|(
name|EditsElement
operator|.
name|T_VERSION
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_OWNER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_RENEWER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringText
argument_list|(
name|EditsElement
operator|.
name|T_REAL_USER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_ISSUE_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|T_MAX_DATE
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_SEQUENCE_NUMBER
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|T_MASTER_KEY_ID
argument_list|)
expr_stmt|;
block|}
comment|/**    * Visit OP_UPDATE_MASTER_KEY    */
DECL|method|visit_OP_UPDATE_MASTER_KEY ()
specifier|private
name|void
name|visit_OP_UPDATE_MASTER_KEY
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|KEY_ID
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitVLong
argument_list|(
name|EditsElement
operator|.
name|KEY_EXPIRY_DATE
argument_list|)
expr_stmt|;
name|VIntToken
name|blobLengthToken
init|=
name|v
operator|.
name|visitVInt
argument_list|(
name|EditsElement
operator|.
name|KEY_LENGTH
argument_list|)
decl_stmt|;
name|v
operator|.
name|visitBlob
argument_list|(
name|EditsElement
operator|.
name|KEY_BLOB
argument_list|,
name|blobLengthToken
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|visit_OP_REASSIGN_LEASE ()
specifier|private
name|void
name|visit_OP_REASSIGN_LEASE
parameter_list|()
throws|throws
name|IOException
block|{
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CLIENT_NAME
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|PATH
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitStringUTF8
argument_list|(
name|EditsElement
operator|.
name|CLIENT_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|visitOpCode (FSEditLogOpCodes editsOpCode)
specifier|private
name|void
name|visitOpCode
parameter_list|(
name|FSEditLogOpCodes
name|editsOpCode
parameter_list|)
throws|throws
name|IOException
block|{
switch|switch
condition|(
name|editsOpCode
condition|)
block|{
case|case
name|OP_INVALID
case|:
comment|// -1
name|visit_OP_INVALID
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_ADD
case|:
comment|// 0
name|visit_OP_ADD
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_CLOSE
case|:
comment|// 9
name|visit_OP_CLOSE
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_RENAME_OLD
case|:
comment|// 1
name|visit_OP_RENAME_OLD
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_DELETE
case|:
comment|// 2
name|visit_OP_DELETE
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_MKDIR
case|:
comment|// 3
name|visit_OP_MKDIR
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SET_REPLICATION
case|:
comment|// 4
name|visit_OP_SET_REPLICATION
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SET_PERMISSIONS
case|:
comment|// 7
name|visit_OP_SET_PERMISSIONS
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SET_OWNER
case|:
comment|// 8
name|visit_OP_SET_OWNER
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SET_GENSTAMP
case|:
comment|// 10
name|visit_OP_SET_GENSTAMP
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_TIMES
case|:
comment|// 13
name|visit_OP_TIMES
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SET_QUOTA
case|:
comment|// 14
name|visit_OP_SET_QUOTA
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_RENAME
case|:
comment|// 15
name|visit_OP_RENAME
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_CONCAT_DELETE
case|:
comment|// 16
name|visit_OP_CONCAT_DELETE
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_SYMLINK
case|:
comment|// 17
name|visit_OP_SYMLINK
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_GET_DELEGATION_TOKEN
case|:
comment|// 18
name|visit_OP_GET_DELEGATION_TOKEN
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_RENEW_DELEGATION_TOKEN
case|:
comment|// 19
name|visit_OP_RENEW_DELEGATION_TOKEN
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_CANCEL_DELEGATION_TOKEN
case|:
comment|// 20
name|visit_OP_CANCEL_DELEGATION_TOKEN
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_UPDATE_MASTER_KEY
case|:
comment|// 21
name|visit_OP_UPDATE_MASTER_KEY
argument_list|()
expr_stmt|;
break|break;
case|case
name|OP_REASSIGN_LEASE
case|:
comment|// 22
name|visit_OP_REASSIGN_LEASE
argument_list|()
expr_stmt|;
break|break;
default|default:
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unknown op code "
operator|+
name|editsOpCode
argument_list|)
throw|;
block|}
block|}
block|}
comment|/**    * Loads edits file, uses visitor to process all elements    */
annotation|@
name|Override
DECL|method|loadEdits ()
specifier|public
name|void
name|loadEdits
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|v
operator|.
name|start
argument_list|()
expr_stmt|;
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|EDITS
argument_list|)
expr_stmt|;
name|IntToken
name|editsVersionToken
init|=
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|EDITS_VERSION
argument_list|)
decl_stmt|;
name|editsVersion
operator|=
name|editsVersionToken
operator|.
name|value
expr_stmt|;
if|if
condition|(
operator|!
name|canLoadVersion
argument_list|(
name|editsVersion
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Cannot process editLog version "
operator|+
name|editsVersionToken
operator|.
name|value
argument_list|)
throw|;
block|}
name|FSEditLogOpCodes
name|editsOpCode
decl_stmt|;
do|do
block|{
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|RECORD
argument_list|)
expr_stmt|;
name|ByteToken
name|opCodeToken
init|=
name|v
operator|.
name|visitByte
argument_list|(
name|EditsElement
operator|.
name|OPCODE
argument_list|)
decl_stmt|;
name|editsOpCode
operator|=
name|FSEditLogOpCodes
operator|.
name|fromByte
argument_list|(
name|opCodeToken
operator|.
name|value
argument_list|)
expr_stmt|;
name|v
operator|.
name|visitEnclosingElement
argument_list|(
name|EditsElement
operator|.
name|DATA
argument_list|)
expr_stmt|;
name|visitOpCode
argument_list|(
name|editsOpCode
argument_list|)
expr_stmt|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
comment|// DATA
if|if
condition|(
name|editsOpCode
operator|!=
name|FSEditLogOpCodes
operator|.
name|OP_INVALID
operator|&&
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITS_CHESKUM
argument_list|,
name|editsVersion
argument_list|)
condition|)
block|{
name|v
operator|.
name|visitInt
argument_list|(
name|EditsElement
operator|.
name|CHECKSUM
argument_list|)
expr_stmt|;
block|}
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
comment|// RECORD
block|}
do|while
condition|(
name|editsOpCode
operator|!=
name|FSEditLogOpCodes
operator|.
name|OP_INVALID
condition|)
do|;
name|v
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
comment|// EDITS
name|v
operator|.
name|finish
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Tell the visitor to clean up, then re-throw the exception
name|v
operator|.
name|finishAbnormally
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

