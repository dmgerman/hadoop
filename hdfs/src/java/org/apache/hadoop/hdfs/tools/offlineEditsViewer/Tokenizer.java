begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.tools.offlineEditsViewer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DeprecatedUTF8
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineEditsViewer
operator|.
name|EditsElement
import|;
end_import

begin_comment
comment|/**  * Tokenizer that hides the details of different input formats  *  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|interface|Tokenizer
interface|interface
name|Tokenizer
block|{
comment|/**    * Abstract class Token, derive Tokens of needed types from    * this class    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|Token
specifier|abstract
specifier|public
class|class
name|Token
block|{
DECL|field|e
name|EditsElement
name|e
decl_stmt|;
comment|/**      * Constructor      */
DECL|method|Token (EditsElement e)
specifier|public
name|Token
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|this
operator|.
name|e
operator|=
name|e
expr_stmt|;
block|}
comment|/**      * EditsElement accessor      *      * @return EditsElement of this Token      */
DECL|method|getEditsElement ()
specifier|public
name|EditsElement
name|getEditsElement
parameter_list|()
block|{
return|return
name|e
return|;
block|}
comment|/**      * Creates token from a string      *      * @param string a string to set the value of token      */
DECL|method|fromString (String s)
specifier|abstract
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**      * Creates token from binary stream      *      * @param in input stream to read token value from      */
DECL|method|fromBinary (DataInputStream in)
specifier|abstract
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**      * Converts token to string      */
DECL|method|toString ()
specifier|abstract
specifier|public
name|String
name|toString
parameter_list|()
function_decl|;
comment|/**      * Writes token value in binary format to out      *      * @param out output stream to write value to      */
DECL|method|toBinary (DataOutputStream out)
specifier|abstract
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|ByteToken
specifier|public
class|class
name|ByteToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|byte
name|value
decl_stmt|;
DECL|method|ByteToken (EditsElement e)
specifier|public
name|ByteToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Byte
operator|.
name|valueOf
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|in
operator|.
name|readByte
argument_list|()
expr_stmt|;
block|}
DECL|method|fromByte (byte b)
specifier|public
name|void
name|fromByte
parameter_list|(
name|byte
name|b
parameter_list|)
block|{
name|value
operator|=
name|b
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Byte
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeByte
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|ShortToken
specifier|public
class|class
name|ShortToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|short
name|value
decl_stmt|;
DECL|method|ShortToken (EditsElement e)
specifier|public
name|ShortToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Short
operator|.
name|parseShort
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|in
operator|.
name|readShort
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Short
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeShort
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|IntToken
specifier|public
class|class
name|IntToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|int
name|value
decl_stmt|;
DECL|method|IntToken (EditsElement e)
specifier|public
name|IntToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeInt
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|VIntToken
specifier|public
class|class
name|VIntToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|int
name|value
decl_stmt|;
DECL|method|VIntToken (EditsElement e)
specifier|public
name|VIntToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|WritableUtils
operator|.
name|readVInt
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|out
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|LongToken
specifier|public
class|class
name|LongToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|long
name|value
decl_stmt|;
DECL|method|LongToken (EditsElement e)
specifier|public
name|LongToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Long
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeLong
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|VLongToken
specifier|public
class|class
name|VLongToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|long
name|value
decl_stmt|;
DECL|method|VLongToken (EditsElement e)
specifier|public
name|VLongToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|WritableUtils
operator|.
name|readVLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Long
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|WritableUtils
operator|.
name|writeVLong
argument_list|(
name|out
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|StringUTF8Token
specifier|public
class|class
name|StringUTF8Token
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|String
name|value
decl_stmt|;
DECL|method|StringUTF8Token (EditsElement e)
specifier|public
name|StringUTF8Token
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|s
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|DeprecatedUTF8
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|DeprecatedUTF8
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|StringTextToken
specifier|public
class|class
name|StringTextToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|String
name|value
decl_stmt|;
DECL|method|StringTextToken (EditsElement e)
specifier|public
name|StringTextToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|s
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|BlobToken
specifier|public
class|class
name|BlobToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|byte
index|[]
name|value
init|=
literal|null
decl_stmt|;
DECL|method|BlobToken (EditsElement e, int length)
specifier|public
name|BlobToken
parameter_list|(
name|EditsElement
name|e
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|value
operator|=
operator|(
name|length
operator|==
operator|-
literal|1
operator|)
condition|?
literal|null
else|:
operator|new
name|byte
index|[
name|length
index|]
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
name|Base64
operator|.
name|decodeBase64
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|in
operator|.
name|readFully
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Base64
operator|.
name|encodeBase64URLSafeString
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|write
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|BytesWritableToken
specifier|public
class|class
name|BytesWritableToken
extends|extends
name|Token
block|{
DECL|field|value
specifier|public
name|BytesWritable
name|value
init|=
operator|new
name|BytesWritable
argument_list|()
decl_stmt|;
DECL|method|BytesWritableToken (EditsElement e)
specifier|public
name|BytesWritableToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|=
operator|new
name|BytesWritable
argument_list|(
name|Base64
operator|.
name|decodeBase64
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|Base64
operator|.
name|encodeBase64URLSafeString
argument_list|(
name|value
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|EmptyToken
specifier|public
class|class
name|EmptyToken
extends|extends
name|Token
block|{
DECL|method|EmptyToken (EditsElement e)
specifier|public
name|EmptyToken
parameter_list|(
name|EditsElement
name|e
parameter_list|)
block|{
name|super
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fromString (String s)
specifier|public
name|void
name|fromString
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{}
annotation|@
name|Override
DECL|method|fromBinary (DataInputStream in)
specifier|public
name|void
name|fromBinary
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
annotation|@
name|Override
DECL|method|toBinary (DataOutputStream out)
specifier|public
name|void
name|toBinary
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{}
block|}
comment|/**    * Read a Token, note that there is no write function    * because writing is handled by Visitor and individual    * toString/toBinary functions for given Token implementations.    *    * Note that it works on the token it gets as a parameter    * and returns the same token, this is done so that it can be    * called in pipe-like pattern token = f1(f2(f3())), where f3    * creates an instance of Token.    *    * @param t token to read    * @return token that was just read    */
DECL|method|read (Token t)
specifier|public
name|Token
name|read
parameter_list|(
name|Token
name|t
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

