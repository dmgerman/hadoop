begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_comment
comment|/************************************  * Some handy constants  *  ************************************/
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|interface|FSConstants
specifier|public
interface|interface
name|FSConstants
block|{
DECL|field|MIN_BLOCKS_FOR_WRITE
specifier|public
specifier|static
name|int
name|MIN_BLOCKS_FOR_WRITE
init|=
literal|5
decl_stmt|;
comment|// Long that indicates "leave current quota unchanged"
DECL|field|QUOTA_DONT_SET
specifier|public
specifier|static
specifier|final
name|long
name|QUOTA_DONT_SET
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
DECL|field|QUOTA_RESET
specifier|public
specifier|static
specifier|final
name|long
name|QUOTA_RESET
init|=
operator|-
literal|1L
decl_stmt|;
comment|//
comment|// Timeouts, constants
comment|//
DECL|field|HEARTBEAT_INTERVAL
specifier|public
specifier|static
name|long
name|HEARTBEAT_INTERVAL
init|=
literal|3
decl_stmt|;
DECL|field|BLOCKREPORT_INTERVAL
specifier|public
specifier|static
name|long
name|BLOCKREPORT_INTERVAL
init|=
literal|60
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|BLOCKREPORT_INITIAL_DELAY
specifier|public
specifier|static
name|long
name|BLOCKREPORT_INITIAL_DELAY
init|=
literal|0
decl_stmt|;
DECL|field|LEASE_SOFTLIMIT_PERIOD
specifier|public
specifier|static
specifier|final
name|long
name|LEASE_SOFTLIMIT_PERIOD
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|LEASE_HARDLIMIT_PERIOD
specifier|public
specifier|static
specifier|final
name|long
name|LEASE_HARDLIMIT_PERIOD
init|=
literal|60
operator|*
name|LEASE_SOFTLIMIT_PERIOD
decl_stmt|;
DECL|field|LEASE_RECOVER_PERIOD
specifier|public
specifier|static
specifier|final
name|long
name|LEASE_RECOVER_PERIOD
init|=
literal|10
operator|*
literal|1000
decl_stmt|;
comment|//in ms
comment|// We need to limit the length and depth of a path in the filesystem.  HADOOP-438
comment|// Currently we set the maximum length to 8k characters and the maximum depth to 1k.
DECL|field|MAX_PATH_LENGTH
specifier|public
specifier|static
name|int
name|MAX_PATH_LENGTH
init|=
literal|8000
decl_stmt|;
DECL|field|MAX_PATH_DEPTH
specifier|public
specifier|static
name|int
name|MAX_PATH_DEPTH
init|=
literal|1000
decl_stmt|;
DECL|field|BUFFER_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|BUFFER_SIZE
init|=
operator|new
name|HdfsConfiguration
argument_list|()
operator|.
name|getInt
argument_list|(
literal|"io.file.buffer.size"
argument_list|,
literal|4096
argument_list|)
decl_stmt|;
comment|//Used for writing header etc.
DECL|field|SMALL_BUFFER_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|SMALL_BUFFER_SIZE
init|=
name|Math
operator|.
name|min
argument_list|(
name|BUFFER_SIZE
operator|/
literal|2
argument_list|,
literal|512
argument_list|)
decl_stmt|;
comment|//TODO mb@media-style.com: should be conf injected?
DECL|field|DEFAULT_BLOCK_SIZE
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_BLOCK_SIZE
init|=
literal|64
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DEFAULT_BYTES_PER_CHECKSUM
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_BYTES_PER_CHECKSUM
init|=
literal|512
decl_stmt|;
DECL|field|DEFAULT_WRITE_PACKET_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_WRITE_PACKET_SIZE
init|=
literal|64
operator|*
literal|1024
decl_stmt|;
DECL|field|DEFAULT_REPLICATION_FACTOR
specifier|public
specifier|static
specifier|final
name|short
name|DEFAULT_REPLICATION_FACTOR
init|=
literal|3
decl_stmt|;
DECL|field|DEFAULT_FILE_BUFFER_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_FILE_BUFFER_SIZE
init|=
literal|4096
decl_stmt|;
DECL|field|DEFAULT_DATA_SOCKET_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_DATA_SOCKET_SIZE
init|=
literal|128
operator|*
literal|1024
decl_stmt|;
DECL|field|SIZE_OF_INTEGER
specifier|public
specifier|static
specifier|final
name|int
name|SIZE_OF_INTEGER
init|=
name|Integer
operator|.
name|SIZE
operator|/
name|Byte
operator|.
name|SIZE
decl_stmt|;
comment|// SafeMode actions
DECL|enum|SafeModeAction
DECL|enumConstant|SAFEMODE_LEAVE
DECL|enumConstant|SAFEMODE_ENTER
DECL|enumConstant|SAFEMODE_GET
specifier|public
enum|enum
name|SafeModeAction
block|{
name|SAFEMODE_LEAVE
block|,
name|SAFEMODE_ENTER
block|,
name|SAFEMODE_GET
block|; }
comment|// type of the datanode report
DECL|enum|DatanodeReportType
DECL|enumConstant|ALL
DECL|enumConstant|LIVE
DECL|enumConstant|DEAD
specifier|public
specifier|static
enum|enum
name|DatanodeReportType
block|{
name|ALL
block|,
name|LIVE
block|,
name|DEAD
block|}
comment|/**    * Distributed upgrade actions:    *     * 1. Get upgrade status.    * 2. Get detailed upgrade status.    * 3. Proceed with the upgrade if it is stuck, no matter what the status is.    */
DECL|enum|UpgradeAction
specifier|public
specifier|static
enum|enum
name|UpgradeAction
block|{
DECL|enumConstant|GET_STATUS
name|GET_STATUS
block|,
DECL|enumConstant|DETAILED_STATUS
name|DETAILED_STATUS
block|,
DECL|enumConstant|FORCE_PROCEED
name|FORCE_PROCEED
block|;   }
comment|/**    * URI Scheme for hdfs://namenode/ URIs.    */
DECL|field|HDFS_URI_SCHEME
specifier|public
specifier|static
specifier|final
name|String
name|HDFS_URI_SCHEME
init|=
literal|"hdfs"
decl_stmt|;
comment|/**    * Please see {@link LayoutVersion} on adding new layout version.    */
DECL|field|LAYOUT_VERSION
specifier|public
specifier|static
specifier|final
name|int
name|LAYOUT_VERSION
init|=
name|LayoutVersion
operator|.
name|getCurrentLayoutVersion
argument_list|()
decl_stmt|;
block|}
end_interface

end_unit

