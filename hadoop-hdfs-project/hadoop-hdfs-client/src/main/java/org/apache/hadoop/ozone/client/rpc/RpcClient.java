begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.client.rpc
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rpc
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|StorageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtobufRpcEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|BucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneBucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneVolume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|VolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|ChunkGroupInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|ChunkGroupOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|LengthInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|helpers
operator|.
name|KsmBucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|helpers
operator|.
name|KsmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|helpers
operator|.
name|KsmKeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|helpers
operator|.
name|KsmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|helpers
operator|.
name|KsmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|protocolPB
operator|.
name|KeySpaceManagerProtocolClientSideTranslatorPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|protocolPB
operator|.
name|KeySpaceManagerProtocolPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneAcl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|KSMConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
operator|.
name|KSMPBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|ScmConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|XceiverClientManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|protocolPB
operator|.
name|StorageContainerLocationProtocolClientSideTranslatorPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|protocolPB
operator|.
name|StorageContainerLocationProtocolPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * Ozone RPC Client Implementation, it connects to KSM, SCM and DataNode  * to execute client calls. This uses RPC protocol for communication  * with the servers.  */
end_comment

begin_class
DECL|class|RpcClient
specifier|public
class|class
name|RpcClient
implements|implements
name|ClientProtocol
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RpcClient
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|StorageContainerLocationProtocolClientSideTranslatorPB
DECL|field|storageContainerLocationClient
name|storageContainerLocationClient
decl_stmt|;
specifier|private
specifier|final
name|KeySpaceManagerProtocolClientSideTranslatorPB
DECL|field|keySpaceManagerClient
name|keySpaceManagerClient
decl_stmt|;
DECL|field|xceiverClientManager
specifier|private
specifier|final
name|XceiverClientManager
name|xceiverClientManager
decl_stmt|;
DECL|field|chunkSize
specifier|private
specifier|final
name|int
name|chunkSize
decl_stmt|;
DECL|field|ugi
specifier|private
specifier|final
name|UserGroupInformation
name|ugi
decl_stmt|;
DECL|field|userRights
specifier|private
specifier|final
name|OzoneAcl
operator|.
name|OzoneACLRights
name|userRights
decl_stmt|;
DECL|field|groupRights
specifier|private
specifier|final
name|OzoneAcl
operator|.
name|OzoneACLRights
name|groupRights
decl_stmt|;
comment|/**     * Creates RpcClient instance with the given configuration.     * @param conf     * @throws IOException     */
DECL|method|RpcClient (Configuration conf)
specifier|public
name|RpcClient
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|ugi
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
expr_stmt|;
name|this
operator|.
name|userRights
operator|=
name|conf
operator|.
name|getEnum
argument_list|(
name|KSMConfigKeys
operator|.
name|OZONE_KSM_USER_RIGHTS
argument_list|,
name|KSMConfigKeys
operator|.
name|OZONE_KSM_USER_RIGHTS_DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|groupRights
operator|=
name|conf
operator|.
name|getEnum
argument_list|(
name|KSMConfigKeys
operator|.
name|OZONE_KSM_GROUP_RIGHTS
argument_list|,
name|KSMConfigKeys
operator|.
name|OZONE_KSM_GROUP_RIGHTS_DEFAULT
argument_list|)
expr_stmt|;
name|long
name|ksmVersion
init|=
name|RPC
operator|.
name|getProtocolVersion
argument_list|(
name|KeySpaceManagerProtocolPB
operator|.
name|class
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|ksmAddress
init|=
name|OzoneClientUtils
operator|.
name|getKsmAddressForClients
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|RPC
operator|.
name|setProtocolEngine
argument_list|(
name|conf
argument_list|,
name|KeySpaceManagerProtocolPB
operator|.
name|class
argument_list|,
name|ProtobufRpcEngine
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|keySpaceManagerClient
operator|=
operator|new
name|KeySpaceManagerProtocolClientSideTranslatorPB
argument_list|(
name|RPC
operator|.
name|getProxy
argument_list|(
name|KeySpaceManagerProtocolPB
operator|.
name|class
argument_list|,
name|ksmVersion
argument_list|,
name|ksmAddress
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
name|conf
argument_list|,
name|NetUtils
operator|.
name|getDefaultSocketFactory
argument_list|(
name|conf
argument_list|)
argument_list|,
name|Client
operator|.
name|getRpcTimeout
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|scmVersion
init|=
name|RPC
operator|.
name|getProtocolVersion
argument_list|(
name|StorageContainerLocationProtocolPB
operator|.
name|class
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|scmAddress
init|=
name|OzoneClientUtils
operator|.
name|getScmAddressForClients
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|RPC
operator|.
name|setProtocolEngine
argument_list|(
name|conf
argument_list|,
name|StorageContainerLocationProtocolPB
operator|.
name|class
argument_list|,
name|ProtobufRpcEngine
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|storageContainerLocationClient
operator|=
operator|new
name|StorageContainerLocationProtocolClientSideTranslatorPB
argument_list|(
name|RPC
operator|.
name|getProxy
argument_list|(
name|StorageContainerLocationProtocolPB
operator|.
name|class
argument_list|,
name|scmVersion
argument_list|,
name|scmAddress
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
name|conf
argument_list|,
name|NetUtils
operator|.
name|getDefaultSocketFactory
argument_list|(
name|conf
argument_list|)
argument_list|,
name|Client
operator|.
name|getRpcTimeout
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|xceiverClientManager
operator|=
operator|new
name|XceiverClientManager
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|int
name|configuredChunkSize
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_SIZE_KEY
argument_list|,
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_SIZE_DEFAULT
argument_list|)
decl_stmt|;
if|if
condition|(
name|configuredChunkSize
operator|>
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"The chunk size ({}) is not allowed to be more than"
operator|+
literal|" the maximum size ({}),"
operator|+
literal|" resetting to the maximum size."
argument_list|,
name|configuredChunkSize
argument_list|,
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
argument_list|)
expr_stmt|;
name|chunkSize
operator|=
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
expr_stmt|;
block|}
else|else
block|{
name|chunkSize
operator|=
name|configuredChunkSize
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createVolume (String volumeName)
specifier|public
name|void
name|createVolume
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createVolume (String volumeName, VolumeArgs volArgs)
specifier|public
name|void
name|createVolume
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|VolumeArgs
name|volArgs
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volArgs
argument_list|)
expr_stmt|;
name|String
name|admin
init|=
name|volArgs
operator|.
name|getAdmin
argument_list|()
operator|==
literal|null
condition|?
name|ugi
operator|.
name|getUserName
argument_list|()
else|:
name|volArgs
operator|.
name|getAdmin
argument_list|()
decl_stmt|;
name|String
name|owner
init|=
name|volArgs
operator|.
name|getOwner
argument_list|()
operator|==
literal|null
condition|?
name|ugi
operator|.
name|getUserName
argument_list|()
else|:
name|volArgs
operator|.
name|getOwner
argument_list|()
decl_stmt|;
name|long
name|quota
init|=
name|volArgs
operator|.
name|getQuota
argument_list|()
operator|==
literal|null
condition|?
name|OzoneConsts
operator|.
name|MAX_QUOTA_IN_BYTES
else|:
name|OzoneQuota
operator|.
name|parseQuota
argument_list|(
name|volArgs
operator|.
name|getQuota
argument_list|()
argument_list|)
operator|.
name|sizeInBytes
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|listOfAcls
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|//User ACL
name|listOfAcls
operator|.
name|add
argument_list|(
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|USER
argument_list|,
name|owner
argument_list|,
name|userRights
argument_list|)
argument_list|)
expr_stmt|;
comment|//Group ACLs of the User
name|List
argument_list|<
name|String
argument_list|>
name|userGroups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|owner
argument_list|)
operator|.
name|getGroupNames
argument_list|()
argument_list|)
decl_stmt|;
name|userGroups
operator|.
name|stream
argument_list|()
operator|.
name|forEach
argument_list|(
parameter_list|(
name|group
parameter_list|)
lambda|->
name|listOfAcls
operator|.
name|add
argument_list|(
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|GROUP
argument_list|,
name|group
argument_list|,
name|groupRights
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//ACLs from VolumeArgs
if|if
condition|(
name|volArgs
operator|.
name|getAcls
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|listOfAcls
operator|.
name|addAll
argument_list|(
name|volArgs
operator|.
name|getAcls
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|KsmVolumeArgs
operator|.
name|Builder
name|builder
init|=
name|KsmVolumeArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolume
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setAdminName
argument_list|(
name|admin
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setOwnerName
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setQuotaInBytes
argument_list|(
name|quota
argument_list|)
expr_stmt|;
comment|//Remove duplicates and add ACLs
for|for
control|(
name|OzoneAcl
name|ozoneAcl
range|:
name|listOfAcls
operator|.
name|stream
argument_list|()
operator|.
name|distinct
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
control|)
block|{
name|builder
operator|.
name|addOzoneAcls
argument_list|(
name|KSMPBHelper
operator|.
name|convertOzoneAcl
argument_list|(
name|ozoneAcl
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Creating Volume: {}, with {} as owner and quota set to {} bytes."
argument_list|,
name|volumeName
argument_list|,
name|owner
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|createVolume
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setVolumeOwner (String volumeName, String owner)
specifier|public
name|void
name|setVolumeOwner
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|owner
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|setOwner
argument_list|(
name|volumeName
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setVolumeQuota (String volumeName, OzoneQuota quota)
specifier|public
name|void
name|setVolumeQuota
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneQuota
name|quota
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|quota
argument_list|)
expr_stmt|;
name|long
name|quotaInBytes
init|=
name|quota
operator|.
name|sizeInBytes
argument_list|()
decl_stmt|;
name|keySpaceManagerClient
operator|.
name|setQuota
argument_list|(
name|volumeName
argument_list|,
name|quotaInBytes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getVolumeDetails (String volumeName)
specifier|public
name|OzoneVolume
name|getVolumeDetails
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|KsmVolumeArgs
name|volume
init|=
name|keySpaceManagerClient
operator|.
name|getVolumeInfo
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
return|return
operator|new
name|OzoneVolume
argument_list|(
name|volume
operator|.
name|getVolume
argument_list|()
argument_list|,
name|volume
operator|.
name|getAdminName
argument_list|()
argument_list|,
name|volume
operator|.
name|getOwnerName
argument_list|()
argument_list|,
name|volume
operator|.
name|getQuotaInBytes
argument_list|()
argument_list|,
name|volume
operator|.
name|getAclMap
argument_list|()
operator|.
name|ozoneAclGetProtobuf
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|KSMPBHelper
operator|::
name|convertOzoneAcl
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|checkVolumeAccess (String volumeName, OzoneAcl acl)
specifier|public
name|boolean
name|checkVolumeAccess
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneAcl
name|acl
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVolume (String volumeName)
specifier|public
name|void
name|deleteVolume
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|deleteVolume
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|listVolumes (String volumePrefix)
specifier|public
name|Iterator
argument_list|<
name|OzoneVolume
argument_list|>
name|listVolumes
parameter_list|(
name|String
name|volumePrefix
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|listVolumes (String volumePrefix, String user)
specifier|public
name|Iterator
argument_list|<
name|OzoneVolume
argument_list|>
name|listVolumes
parameter_list|(
name|String
name|volumePrefix
parameter_list|,
name|String
name|user
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createBucket (String volumeName, String bucketName)
specifier|public
name|void
name|createBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
name|createBucket
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|BucketArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createBucket ( String volumeName, String bucketName, BucketArgs bucketArgs)
specifier|public
name|void
name|createBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|BucketArgs
name|bucketArgs
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketArgs
argument_list|)
expr_stmt|;
name|Boolean
name|isVersionEnabled
init|=
name|bucketArgs
operator|.
name|isVersionEnabled
argument_list|()
operator|==
literal|null
condition|?
name|Boolean
operator|.
name|FALSE
else|:
name|bucketArgs
operator|.
name|isVersionEnabled
argument_list|()
decl_stmt|;
name|StorageType
name|storageType
init|=
name|bucketArgs
operator|.
name|getStorageType
argument_list|()
operator|==
literal|null
condition|?
name|StorageType
operator|.
name|DEFAULT
else|:
name|bucketArgs
operator|.
name|getStorageType
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|listOfAcls
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|//User ACL
name|listOfAcls
operator|.
name|add
argument_list|(
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|USER
argument_list|,
name|ugi
operator|.
name|getUserName
argument_list|()
argument_list|,
name|userRights
argument_list|)
argument_list|)
expr_stmt|;
comment|//Group ACLs of the User
name|List
argument_list|<
name|String
argument_list|>
name|userGroups
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|ugi
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|getGroupNames
argument_list|()
argument_list|)
decl_stmt|;
name|userGroups
operator|.
name|stream
argument_list|()
operator|.
name|forEach
argument_list|(
parameter_list|(
name|group
parameter_list|)
lambda|->
name|listOfAcls
operator|.
name|add
argument_list|(
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|GROUP
argument_list|,
name|group
argument_list|,
name|groupRights
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//ACLs from BucketArgs
if|if
condition|(
name|bucketArgs
operator|.
name|getAcls
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|listOfAcls
operator|.
name|addAll
argument_list|(
name|bucketArgs
operator|.
name|getAcls
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|KsmBucketInfo
operator|.
name|Builder
name|builder
init|=
name|KsmBucketInfo
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setIsVersionEnabled
argument_list|(
name|isVersionEnabled
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|storageType
argument_list|)
operator|.
name|setAcls
argument_list|(
name|listOfAcls
operator|.
name|stream
argument_list|()
operator|.
name|distinct
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Creating Bucket: {}/{}, with Versioning {} and "
operator|+
literal|"Storage Type set to {}"
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|isVersionEnabled
argument_list|,
name|storageType
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|createBucket
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addBucketAcls ( String volumeName, String bucketName, List<OzoneAcl> addAcls)
specifier|public
name|void
name|addBucketAcls
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|addAcls
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|addAcls
argument_list|)
expr_stmt|;
name|KsmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|KsmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setAddAcls
argument_list|(
name|addAcls
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeBucketAcls ( String volumeName, String bucketName, List<OzoneAcl> removeAcls)
specifier|public
name|void
name|removeBucketAcls
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|removeAcls
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|removeAcls
argument_list|)
expr_stmt|;
name|KsmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|KsmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setRemoveAcls
argument_list|(
name|removeAcls
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setBucketVersioning ( String volumeName, String bucketName, Boolean versioning)
specifier|public
name|void
name|setBucketVersioning
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|Boolean
name|versioning
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|versioning
argument_list|)
expr_stmt|;
name|KsmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|KsmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setIsVersionEnabled
argument_list|(
name|versioning
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setBucketStorageType ( String volumeName, String bucketName, StorageType storageType)
specifier|public
name|void
name|setBucketStorageType
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|StorageType
name|storageType
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|storageType
argument_list|)
expr_stmt|;
name|KsmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|KsmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|storageType
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deleteBucket ( String volumeName, String bucketName)
specifier|public
name|void
name|deleteBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|keySpaceManagerClient
operator|.
name|deleteBucket
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|checkBucketAccess ( String volumeName, String bucketName)
specifier|public
name|void
name|checkBucketAccess
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{    }
annotation|@
name|Override
DECL|method|getBucketDetails ( String volumeName, String bucketName)
specifier|public
name|OzoneBucket
name|getBucketDetails
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|KsmBucketInfo
name|bucketArgs
init|=
name|keySpaceManagerClient
operator|.
name|getBucketInfo
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
decl_stmt|;
return|return
operator|new
name|OzoneBucket
argument_list|(
name|bucketArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|bucketArgs
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|bucketArgs
operator|.
name|getAcls
argument_list|()
argument_list|,
name|bucketArgs
operator|.
name|getStorageType
argument_list|()
argument_list|,
name|bucketArgs
operator|.
name|getIsVersionEnabled
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|listBuckets ( String volumeName, String bucketPrefix)
specifier|public
name|Iterator
argument_list|<
name|OzoneBucket
argument_list|>
name|listBuckets
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketPrefix
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|createKey ( String volumeName, String bucketName, String keyName, long size)
specifier|public
name|OzoneOutputStream
name|createKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|long
name|size
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|requestId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|KsmKeyArgs
name|keyArgs
init|=
operator|new
name|KsmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|size
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|KsmKeyInfo
name|keyInfo
init|=
name|keySpaceManagerClient
operator|.
name|allocateKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
name|ChunkGroupOutputStream
name|groupOutputStream
init|=
name|ChunkGroupOutputStream
operator|.
name|getFromKsmKeyInfo
argument_list|(
name|keyInfo
argument_list|,
name|xceiverClientManager
argument_list|,
name|storageContainerLocationClient
argument_list|,
name|chunkSize
argument_list|,
name|requestId
argument_list|)
decl_stmt|;
return|return
operator|new
name|OzoneOutputStream
argument_list|(
name|groupOutputStream
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getKey ( String volumeName, String bucketName, String keyName)
specifier|public
name|OzoneInputStream
name|getKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|String
name|requestId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|KsmKeyArgs
name|keyArgs
init|=
operator|new
name|KsmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|KsmKeyInfo
name|keyInfo
init|=
name|keySpaceManagerClient
operator|.
name|lookupKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
name|LengthInputStream
name|lengthInputStream
init|=
name|ChunkGroupInputStream
operator|.
name|getFromKsmKeyInfo
argument_list|(
name|keyInfo
argument_list|,
name|xceiverClientManager
argument_list|,
name|storageContainerLocationClient
argument_list|,
name|requestId
argument_list|)
decl_stmt|;
return|return
operator|new
name|OzoneInputStream
argument_list|(
operator|(
name|ChunkGroupInputStream
operator|)
name|lengthInputStream
operator|.
name|getWrappedStream
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteKey ( String volumeName, String bucketName, String keyName)
specifier|public
name|void
name|deleteKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|KsmKeyArgs
name|keyArgs
init|=
operator|new
name|KsmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|keySpaceManagerClient
operator|.
name|deleteKey
argument_list|(
name|keyArgs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|listKeys ( String volumeName, String bucketName, String keyPrefix)
specifier|public
name|Iterator
argument_list|<
name|OzoneKey
argument_list|>
name|listKeys
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyPrefix
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getKeyDetails ( String volumeName, String bucketName, String keyName)
specifier|public
name|OzoneKey
name|getKeyDetails
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|KsmKeyArgs
name|keyArgs
init|=
operator|new
name|KsmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|KsmKeyInfo
name|keyInfo
init|=
name|keySpaceManagerClient
operator|.
name|lookupKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
return|return
operator|new
name|OzoneKey
argument_list|(
name|keyInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|keyInfo
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|keyInfo
operator|.
name|getKeyName
argument_list|()
argument_list|,
name|keyInfo
operator|.
name|getDataSize
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|storageContainerLocationClient
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|keySpaceManagerClient
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|xceiverClientManager
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

