begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Value denotes the possible states of an ErasureCodingPolicy.  */
end_comment

begin_enum
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|enum|ErasureCodingPolicyState
specifier|public
enum|enum
name|ErasureCodingPolicyState
block|{
comment|/** Policy is disabled. It's policy default state. */
DECL|enumConstant|DISABLED
name|DISABLED
argument_list|(
literal|1
argument_list|)
block|,
comment|/** Policy is enabled. It can be applied to directory and file. */
DECL|enumConstant|ENABLED
name|ENABLED
argument_list|(
literal|2
argument_list|)
block|,
comment|/**    * Policy is removed from the system. Due to there are potential files    * use this policy, it cannot be deleted from system immediately. A removed    * policy can be re-enabled later.*/
DECL|enumConstant|REMOVED
name|REMOVED
argument_list|(
literal|3
argument_list|)
block|;
DECL|field|CACHED_VALUES
specifier|private
specifier|static
specifier|final
name|ErasureCodingPolicyState
index|[]
name|CACHED_VALUES
init|=
name|ErasureCodingPolicyState
operator|.
name|values
argument_list|()
decl_stmt|;
DECL|field|value
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
DECL|method|ErasureCodingPolicyState (int v)
name|ErasureCodingPolicyState
parameter_list|(
name|int
name|v
parameter_list|)
block|{
name|value
operator|=
name|v
expr_stmt|;
block|}
DECL|method|getValue ()
specifier|public
name|int
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
DECL|method|fromValue (int v)
specifier|public
specifier|static
name|ErasureCodingPolicyState
name|fromValue
parameter_list|(
name|int
name|v
parameter_list|)
block|{
if|if
condition|(
name|v
operator|>
literal|0
operator|&&
name|v
operator|<=
name|CACHED_VALUES
operator|.
name|length
condition|)
block|{
return|return
name|CACHED_VALUES
index|[
name|v
operator|-
literal|1
index|]
return|;
block|}
return|return
literal|null
return|;
block|}
comment|/** Read from in. */
DECL|method|read (DataInput in)
specifier|public
specifier|static
name|ErasureCodingPolicyState
name|read
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|fromValue
argument_list|(
name|in
operator|.
name|readByte
argument_list|()
argument_list|)
return|;
block|}
comment|/** Write to out. */
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeByte
argument_list|(
name|ordinal
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_enum

end_unit

