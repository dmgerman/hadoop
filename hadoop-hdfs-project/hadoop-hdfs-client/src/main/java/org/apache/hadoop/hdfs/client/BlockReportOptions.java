begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Options that can be specified when manually triggering a block report.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|BlockReportOptions
specifier|public
specifier|final
class|class
name|BlockReportOptions
block|{
DECL|field|incremental
specifier|private
specifier|final
name|boolean
name|incremental
decl_stmt|;
DECL|method|BlockReportOptions (boolean incremental)
specifier|private
name|BlockReportOptions
parameter_list|(
name|boolean
name|incremental
parameter_list|)
block|{
name|this
operator|.
name|incremental
operator|=
name|incremental
expr_stmt|;
block|}
DECL|method|isIncremental ()
specifier|public
name|boolean
name|isIncremental
parameter_list|()
block|{
return|return
name|incremental
return|;
block|}
DECL|class|Factory
specifier|public
specifier|static
class|class
name|Factory
block|{
DECL|field|incremental
specifier|private
name|boolean
name|incremental
init|=
literal|false
decl_stmt|;
DECL|method|Factory ()
specifier|public
name|Factory
parameter_list|()
block|{     }
DECL|method|setIncremental (boolean incremental)
specifier|public
name|Factory
name|setIncremental
parameter_list|(
name|boolean
name|incremental
parameter_list|)
block|{
name|this
operator|.
name|incremental
operator|=
name|incremental
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|BlockReportOptions
name|build
parameter_list|()
block|{
return|return
operator|new
name|BlockReportOptions
argument_list|(
name|incremental
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"BlockReportOptions{incremental="
operator|+
name|incremental
operator|+
literal|"}"
return|;
block|}
block|}
end_class

end_unit

