begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ksm.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ksm
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|KeySpaceManagerProtocolProtos
operator|.
name|KeyLocation
import|;
end_import

begin_comment
comment|/**  * One key can be too huge to fit in one container. In which case it gets split  * into a number of subkeys. This class represents one such subkey instance.  */
end_comment

begin_class
DECL|class|KsmKeyLocationInfo
specifier|public
specifier|final
class|class
name|KsmKeyLocationInfo
block|{
DECL|field|containerName
specifier|private
specifier|final
name|String
name|containerName
decl_stmt|;
comment|// name of the block id SCM assigned for the key
DECL|field|blockID
specifier|private
specifier|final
name|String
name|blockID
decl_stmt|;
DECL|field|shouldCreateContainer
specifier|private
specifier|final
name|boolean
name|shouldCreateContainer
decl_stmt|;
comment|// the id of this subkey in all the subkeys.
DECL|field|index
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
DECL|field|length
specifier|private
specifier|final
name|long
name|length
decl_stmt|;
DECL|field|offset
specifier|private
specifier|final
name|long
name|offset
decl_stmt|;
DECL|method|KsmKeyLocationInfo (String containerName, String blockID, boolean shouldCreateContainer, int index, long length, long offset)
specifier|private
name|KsmKeyLocationInfo
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|blockID
parameter_list|,
name|boolean
name|shouldCreateContainer
parameter_list|,
name|int
name|index
parameter_list|,
name|long
name|length
parameter_list|,
name|long
name|offset
parameter_list|)
block|{
name|this
operator|.
name|containerName
operator|=
name|containerName
expr_stmt|;
name|this
operator|.
name|blockID
operator|=
name|blockID
expr_stmt|;
name|this
operator|.
name|shouldCreateContainer
operator|=
name|shouldCreateContainer
expr_stmt|;
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
block|}
DECL|method|getContainerName ()
specifier|public
name|String
name|getContainerName
parameter_list|()
block|{
return|return
name|containerName
return|;
block|}
DECL|method|getBlockID ()
specifier|public
name|String
name|getBlockID
parameter_list|()
block|{
return|return
name|blockID
return|;
block|}
DECL|method|getShouldCreateContainer ()
specifier|public
name|boolean
name|getShouldCreateContainer
parameter_list|()
block|{
return|return
name|shouldCreateContainer
return|;
block|}
DECL|method|getIndex ()
specifier|public
name|int
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
DECL|method|getLength ()
specifier|public
name|long
name|getLength
parameter_list|()
block|{
return|return
name|length
return|;
block|}
DECL|method|getOffset ()
specifier|public
name|long
name|getOffset
parameter_list|()
block|{
return|return
name|offset
return|;
block|}
comment|/**    * Builder of KsmKeyLocationInfo.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|containerName
specifier|private
name|String
name|containerName
decl_stmt|;
DECL|field|blockID
specifier|private
name|String
name|blockID
decl_stmt|;
DECL|field|shouldCreateContainer
specifier|private
name|boolean
name|shouldCreateContainer
decl_stmt|;
comment|// the id of this subkey in all the subkeys.
DECL|field|index
specifier|private
name|int
name|index
decl_stmt|;
DECL|field|length
specifier|private
name|long
name|length
decl_stmt|;
DECL|field|offset
specifier|private
name|long
name|offset
decl_stmt|;
DECL|method|setContainerName (String container)
specifier|public
name|Builder
name|setContainerName
parameter_list|(
name|String
name|container
parameter_list|)
block|{
name|this
operator|.
name|containerName
operator|=
name|container
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setBlockID (String block)
specifier|public
name|Builder
name|setBlockID
parameter_list|(
name|String
name|block
parameter_list|)
block|{
name|this
operator|.
name|blockID
operator|=
name|block
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setShouldCreateContainer (boolean create)
specifier|public
name|Builder
name|setShouldCreateContainer
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
name|this
operator|.
name|shouldCreateContainer
operator|=
name|create
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIndex (int id)
specifier|public
name|Builder
name|setIndex
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|id
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLength (long len)
specifier|public
name|Builder
name|setLength
parameter_list|(
name|long
name|len
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|len
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setOffset (long off)
specifier|public
name|Builder
name|setOffset
parameter_list|(
name|long
name|off
parameter_list|)
block|{
name|this
operator|.
name|offset
operator|=
name|off
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|KsmKeyLocationInfo
name|build
parameter_list|()
block|{
return|return
operator|new
name|KsmKeyLocationInfo
argument_list|(
name|containerName
argument_list|,
name|blockID
argument_list|,
name|shouldCreateContainer
argument_list|,
name|index
argument_list|,
name|length
argument_list|,
name|offset
argument_list|)
return|;
block|}
block|}
DECL|method|getProtobuf ()
specifier|public
name|KeyLocation
name|getProtobuf
parameter_list|()
block|{
return|return
name|KeyLocation
operator|.
name|newBuilder
argument_list|()
operator|.
name|setContainerName
argument_list|(
name|containerName
argument_list|)
operator|.
name|setBlockID
argument_list|(
name|blockID
argument_list|)
operator|.
name|setShouldCreateContainer
argument_list|(
name|shouldCreateContainer
argument_list|)
operator|.
name|setIndex
argument_list|(
name|index
argument_list|)
operator|.
name|setLength
argument_list|(
name|length
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getFromProtobuf (KeyLocation keyLocation)
specifier|public
specifier|static
name|KsmKeyLocationInfo
name|getFromProtobuf
parameter_list|(
name|KeyLocation
name|keyLocation
parameter_list|)
block|{
return|return
operator|new
name|KsmKeyLocationInfo
argument_list|(
name|keyLocation
operator|.
name|getContainerName
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getBlockID
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getShouldCreateContainer
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getIndex
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getLength
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getOffset
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

