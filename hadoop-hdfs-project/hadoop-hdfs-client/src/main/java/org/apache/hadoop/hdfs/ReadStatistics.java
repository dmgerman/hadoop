begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_comment
comment|/**  * A utility class that maintains statistics for reading.  */
end_comment

begin_class
DECL|class|ReadStatistics
specifier|public
class|class
name|ReadStatistics
block|{
DECL|field|totalBytesRead
specifier|private
name|long
name|totalBytesRead
decl_stmt|;
DECL|field|totalLocalBytesRead
specifier|private
name|long
name|totalLocalBytesRead
decl_stmt|;
DECL|field|totalShortCircuitBytesRead
specifier|private
name|long
name|totalShortCircuitBytesRead
decl_stmt|;
DECL|field|totalZeroCopyBytesRead
specifier|private
name|long
name|totalZeroCopyBytesRead
decl_stmt|;
DECL|method|ReadStatistics ()
specifier|public
name|ReadStatistics
parameter_list|()
block|{
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|ReadStatistics (ReadStatistics rhs)
specifier|public
name|ReadStatistics
parameter_list|(
name|ReadStatistics
name|rhs
parameter_list|)
block|{
name|this
operator|.
name|totalBytesRead
operator|=
name|rhs
operator|.
name|getTotalBytesRead
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalLocalBytesRead
operator|=
name|rhs
operator|.
name|getTotalLocalBytesRead
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalShortCircuitBytesRead
operator|=
name|rhs
operator|.
name|getTotalShortCircuitBytesRead
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalZeroCopyBytesRead
operator|=
name|rhs
operator|.
name|getTotalZeroCopyBytesRead
argument_list|()
expr_stmt|;
block|}
comment|/**    * @return The total bytes read.  This will always be at least as    * high as the other numbers, since it includes all of them.    */
DECL|method|getTotalBytesRead ()
specifier|public
specifier|synchronized
name|long
name|getTotalBytesRead
parameter_list|()
block|{
return|return
name|totalBytesRead
return|;
block|}
comment|/**    * @return The total local bytes read.  This will always be at least    * as high as totalShortCircuitBytesRead, since all short-circuit    * reads are also local.    */
DECL|method|getTotalLocalBytesRead ()
specifier|public
specifier|synchronized
name|long
name|getTotalLocalBytesRead
parameter_list|()
block|{
return|return
name|totalLocalBytesRead
return|;
block|}
comment|/**    * @return The total short-circuit local bytes read.    */
DECL|method|getTotalShortCircuitBytesRead ()
specifier|public
specifier|synchronized
name|long
name|getTotalShortCircuitBytesRead
parameter_list|()
block|{
return|return
name|totalShortCircuitBytesRead
return|;
block|}
comment|/**    * @return The total number of zero-copy bytes read.    */
DECL|method|getTotalZeroCopyBytesRead ()
specifier|public
specifier|synchronized
name|long
name|getTotalZeroCopyBytesRead
parameter_list|()
block|{
return|return
name|totalZeroCopyBytesRead
return|;
block|}
comment|/**    * @return The total number of bytes read which were not local.    */
DECL|method|getRemoteBytesRead ()
specifier|public
specifier|synchronized
name|long
name|getRemoteBytesRead
parameter_list|()
block|{
return|return
name|totalBytesRead
operator|-
name|totalLocalBytesRead
return|;
block|}
DECL|method|addRemoteBytes (long amt)
specifier|public
specifier|synchronized
name|void
name|addRemoteBytes
parameter_list|(
name|long
name|amt
parameter_list|)
block|{
name|this
operator|.
name|totalBytesRead
operator|+=
name|amt
expr_stmt|;
block|}
DECL|method|addLocalBytes (long amt)
specifier|public
specifier|synchronized
name|void
name|addLocalBytes
parameter_list|(
name|long
name|amt
parameter_list|)
block|{
name|this
operator|.
name|totalBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalLocalBytesRead
operator|+=
name|amt
expr_stmt|;
block|}
DECL|method|addShortCircuitBytes (long amt)
specifier|public
specifier|synchronized
name|void
name|addShortCircuitBytes
parameter_list|(
name|long
name|amt
parameter_list|)
block|{
name|this
operator|.
name|totalBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalLocalBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalShortCircuitBytesRead
operator|+=
name|amt
expr_stmt|;
block|}
DECL|method|addZeroCopyBytes (long amt)
specifier|public
specifier|synchronized
name|void
name|addZeroCopyBytes
parameter_list|(
name|long
name|amt
parameter_list|)
block|{
name|this
operator|.
name|totalBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalLocalBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalShortCircuitBytesRead
operator|+=
name|amt
expr_stmt|;
name|this
operator|.
name|totalZeroCopyBytesRead
operator|+=
name|amt
expr_stmt|;
block|}
DECL|method|clear ()
specifier|public
specifier|synchronized
name|void
name|clear
parameter_list|()
block|{
name|this
operator|.
name|totalBytesRead
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|totalLocalBytesRead
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|totalShortCircuitBytesRead
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|totalZeroCopyBytesRead
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_class

end_unit

