begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|block
operator|.
name|BlockTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * Striped block info that can be sent elsewhere to do block group level things,  * like checksum, and etc.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|StripedBlockInfo
specifier|public
class|class
name|StripedBlockInfo
block|{
DECL|field|block
specifier|private
specifier|final
name|ExtendedBlock
name|block
decl_stmt|;
DECL|field|datanodes
specifier|private
specifier|final
name|DatanodeInfo
index|[]
name|datanodes
decl_stmt|;
DECL|field|blockTokens
specifier|private
specifier|final
name|Token
argument_list|<
name|BlockTokenIdentifier
argument_list|>
index|[]
name|blockTokens
decl_stmt|;
DECL|field|ecPolicy
specifier|private
specifier|final
name|ErasureCodingPolicy
name|ecPolicy
decl_stmt|;
DECL|method|StripedBlockInfo (ExtendedBlock block, DatanodeInfo[] datanodes, Token<BlockTokenIdentifier>[] blockTokens, ErasureCodingPolicy ecPolicy)
specifier|public
name|StripedBlockInfo
parameter_list|(
name|ExtendedBlock
name|block
parameter_list|,
name|DatanodeInfo
index|[]
name|datanodes
parameter_list|,
name|Token
argument_list|<
name|BlockTokenIdentifier
argument_list|>
index|[]
name|blockTokens
parameter_list|,
name|ErasureCodingPolicy
name|ecPolicy
parameter_list|)
block|{
name|this
operator|.
name|block
operator|=
name|block
expr_stmt|;
name|this
operator|.
name|datanodes
operator|=
name|datanodes
expr_stmt|;
name|this
operator|.
name|blockTokens
operator|=
name|blockTokens
expr_stmt|;
name|this
operator|.
name|ecPolicy
operator|=
name|ecPolicy
expr_stmt|;
block|}
DECL|method|getBlock ()
specifier|public
name|ExtendedBlock
name|getBlock
parameter_list|()
block|{
return|return
name|block
return|;
block|}
DECL|method|getDatanodes ()
specifier|public
name|DatanodeInfo
index|[]
name|getDatanodes
parameter_list|()
block|{
return|return
name|datanodes
return|;
block|}
DECL|method|getBlockTokens ()
specifier|public
name|Token
argument_list|<
name|BlockTokenIdentifier
argument_list|>
index|[]
name|getBlockTokens
parameter_list|()
block|{
return|return
name|blockTokens
return|;
block|}
DECL|method|getErasureCodingPolicy ()
specifier|public
name|ErasureCodingPolicy
name|getErasureCodingPolicy
parameter_list|()
block|{
return|return
name|ecPolicy
return|;
block|}
block|}
end_class

end_unit

