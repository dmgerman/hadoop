begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|ReconfigurationTaskStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|ReconfigurationUtil
operator|.
name|PropertyChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ReconfigurationProtocolProtos
operator|.
name|GetReconfigurationStatusConfigChangeProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ReconfigurationProtocolProtos
operator|.
name|GetReconfigurationStatusResponseProto
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_comment
comment|/**  * This is a client side utility class that handles  * common logic to to parameter reconfiguration.  */
end_comment

begin_class
DECL|class|ReconfigurationProtocolUtils
specifier|public
specifier|final
class|class
name|ReconfigurationProtocolUtils
block|{
DECL|method|ReconfigurationProtocolUtils ()
specifier|private
name|ReconfigurationProtocolUtils
parameter_list|()
block|{   }
DECL|method|getReconfigurationStatus ( GetReconfigurationStatusResponseProto response)
specifier|public
specifier|static
name|ReconfigurationTaskStatus
name|getReconfigurationStatus
parameter_list|(
name|GetReconfigurationStatusResponseProto
name|response
parameter_list|)
block|{
name|Map
argument_list|<
name|PropertyChange
argument_list|,
name|Optional
argument_list|<
name|String
argument_list|>
argument_list|>
name|statusMap
init|=
literal|null
decl_stmt|;
name|long
name|startTime
decl_stmt|;
name|long
name|endTime
init|=
literal|0
decl_stmt|;
name|startTime
operator|=
name|response
operator|.
name|getStartTime
argument_list|()
expr_stmt|;
if|if
condition|(
name|response
operator|.
name|hasEndTime
argument_list|()
condition|)
block|{
name|endTime
operator|=
name|response
operator|.
name|getEndTime
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|response
operator|.
name|getChangesCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|statusMap
operator|=
name|Maps
operator|.
name|newHashMap
argument_list|()
expr_stmt|;
for|for
control|(
name|GetReconfigurationStatusConfigChangeProto
name|change
range|:
name|response
operator|.
name|getChangesList
argument_list|()
control|)
block|{
name|PropertyChange
name|pc
init|=
operator|new
name|PropertyChange
argument_list|(
name|change
operator|.
name|getName
argument_list|()
argument_list|,
name|change
operator|.
name|getNewValue
argument_list|()
argument_list|,
name|change
operator|.
name|getOldValue
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|errorMessage
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|change
operator|.
name|hasErrorMessage
argument_list|()
condition|)
block|{
name|errorMessage
operator|=
name|change
operator|.
name|getErrorMessage
argument_list|()
expr_stmt|;
block|}
name|statusMap
operator|.
name|put
argument_list|(
name|pc
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|errorMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|ReconfigurationTaskStatus
argument_list|(
name|startTime
argument_list|,
name|endTime
argument_list|,
name|statusMap
argument_list|)
return|;
block|}
block|}
end_class

end_unit

