begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Get statistics pertaining to blocks of type {@link BlockType#STRIPED}  * in the filesystem.  *<p>  * @see ClientProtocol#getECBlockGroupsStats()  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|ECBlockGroupStats
specifier|public
specifier|final
class|class
name|ECBlockGroupStats
block|{
DECL|field|lowRedundancyBlockGroupsStat
specifier|private
specifier|final
name|long
name|lowRedundancyBlockGroupsStat
decl_stmt|;
DECL|field|corruptBlockGroupsStat
specifier|private
specifier|final
name|long
name|corruptBlockGroupsStat
decl_stmt|;
DECL|field|missingBlockGroupsStat
specifier|private
specifier|final
name|long
name|missingBlockGroupsStat
decl_stmt|;
DECL|field|bytesInFutureBlockGroupsStat
specifier|private
specifier|final
name|long
name|bytesInFutureBlockGroupsStat
decl_stmt|;
DECL|field|pendingDeletionBlockGroupsStat
specifier|private
specifier|final
name|long
name|pendingDeletionBlockGroupsStat
decl_stmt|;
DECL|method|ECBlockGroupStats (long lowRedundancyBlockGroupsStat, long corruptBlockGroupsStat, long missingBlockGroupsStat, long bytesInFutureBlockGroupsStat, long pendingDeletionBlockGroupsStat)
specifier|public
name|ECBlockGroupStats
parameter_list|(
name|long
name|lowRedundancyBlockGroupsStat
parameter_list|,
name|long
name|corruptBlockGroupsStat
parameter_list|,
name|long
name|missingBlockGroupsStat
parameter_list|,
name|long
name|bytesInFutureBlockGroupsStat
parameter_list|,
name|long
name|pendingDeletionBlockGroupsStat
parameter_list|)
block|{
name|this
operator|.
name|lowRedundancyBlockGroupsStat
operator|=
name|lowRedundancyBlockGroupsStat
expr_stmt|;
name|this
operator|.
name|corruptBlockGroupsStat
operator|=
name|corruptBlockGroupsStat
expr_stmt|;
name|this
operator|.
name|missingBlockGroupsStat
operator|=
name|missingBlockGroupsStat
expr_stmt|;
name|this
operator|.
name|bytesInFutureBlockGroupsStat
operator|=
name|bytesInFutureBlockGroupsStat
expr_stmt|;
name|this
operator|.
name|pendingDeletionBlockGroupsStat
operator|=
name|pendingDeletionBlockGroupsStat
expr_stmt|;
block|}
DECL|method|getBytesInFutureBlockGroupsStat ()
specifier|public
name|long
name|getBytesInFutureBlockGroupsStat
parameter_list|()
block|{
return|return
name|bytesInFutureBlockGroupsStat
return|;
block|}
DECL|method|getCorruptBlockGroupsStat ()
specifier|public
name|long
name|getCorruptBlockGroupsStat
parameter_list|()
block|{
return|return
name|corruptBlockGroupsStat
return|;
block|}
DECL|method|getLowRedundancyBlockGroupsStat ()
specifier|public
name|long
name|getLowRedundancyBlockGroupsStat
parameter_list|()
block|{
return|return
name|lowRedundancyBlockGroupsStat
return|;
block|}
DECL|method|getMissingBlockGroupsStat ()
specifier|public
name|long
name|getMissingBlockGroupsStat
parameter_list|()
block|{
return|return
name|missingBlockGroupsStat
return|;
block|}
DECL|method|getPendingDeletionBlockGroupsStat ()
specifier|public
name|long
name|getPendingDeletionBlockGroupsStat
parameter_list|()
block|{
return|return
name|pendingDeletionBlockGroupsStat
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|statsBuilder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|statsBuilder
operator|.
name|append
argument_list|(
literal|"ECBlockGroupStats=["
argument_list|)
operator|.
name|append
argument_list|(
literal|"LowRedundancyBlockGroups="
argument_list|)
operator|.
name|append
argument_list|(
name|getLowRedundancyBlockGroupsStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", CorruptBlockGroups="
argument_list|)
operator|.
name|append
argument_list|(
name|getCorruptBlockGroupsStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", MissingBlockGroups="
argument_list|)
operator|.
name|append
argument_list|(
name|getMissingBlockGroupsStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", BytesInFutureBlockGroups="
argument_list|)
operator|.
name|append
argument_list|(
name|getBytesInFutureBlockGroupsStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", PendingDeletionBlockGroups="
argument_list|)
operator|.
name|append
argument_list|(
name|getPendingDeletionBlockGroupsStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|statsBuilder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

