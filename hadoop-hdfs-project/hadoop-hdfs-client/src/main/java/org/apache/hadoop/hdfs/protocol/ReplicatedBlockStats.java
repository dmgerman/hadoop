begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Get statistics pertaining to blocks of type {@link BlockType#CONTIGUOUS}  * in the filesystem.  *<p>  * @see ClientProtocol#getBlocksStats()  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|ReplicatedBlockStats
specifier|public
specifier|final
class|class
name|ReplicatedBlockStats
block|{
DECL|field|lowRedundancyBlocksStat
specifier|private
specifier|final
name|long
name|lowRedundancyBlocksStat
decl_stmt|;
DECL|field|corruptBlocksStat
specifier|private
specifier|final
name|long
name|corruptBlocksStat
decl_stmt|;
DECL|field|missingBlocksStat
specifier|private
specifier|final
name|long
name|missingBlocksStat
decl_stmt|;
DECL|field|missingReplicationOneBlocksStat
specifier|private
specifier|final
name|long
name|missingReplicationOneBlocksStat
decl_stmt|;
DECL|field|bytesInFutureBlocksStat
specifier|private
specifier|final
name|long
name|bytesInFutureBlocksStat
decl_stmt|;
DECL|field|pendingDeletionBlocksStat
specifier|private
specifier|final
name|long
name|pendingDeletionBlocksStat
decl_stmt|;
DECL|method|ReplicatedBlockStats (long lowRedundancyBlocksStat, long corruptBlocksStat, long missingBlocksStat, long missingReplicationOneBlocksStat, long bytesInFutureBlocksStat, long pendingDeletionBlocksStat)
specifier|public
name|ReplicatedBlockStats
parameter_list|(
name|long
name|lowRedundancyBlocksStat
parameter_list|,
name|long
name|corruptBlocksStat
parameter_list|,
name|long
name|missingBlocksStat
parameter_list|,
name|long
name|missingReplicationOneBlocksStat
parameter_list|,
name|long
name|bytesInFutureBlocksStat
parameter_list|,
name|long
name|pendingDeletionBlocksStat
parameter_list|)
block|{
name|this
operator|.
name|lowRedundancyBlocksStat
operator|=
name|lowRedundancyBlocksStat
expr_stmt|;
name|this
operator|.
name|corruptBlocksStat
operator|=
name|corruptBlocksStat
expr_stmt|;
name|this
operator|.
name|missingBlocksStat
operator|=
name|missingBlocksStat
expr_stmt|;
name|this
operator|.
name|missingReplicationOneBlocksStat
operator|=
name|missingReplicationOneBlocksStat
expr_stmt|;
name|this
operator|.
name|bytesInFutureBlocksStat
operator|=
name|bytesInFutureBlocksStat
expr_stmt|;
name|this
operator|.
name|pendingDeletionBlocksStat
operator|=
name|pendingDeletionBlocksStat
expr_stmt|;
block|}
DECL|method|getLowRedundancyBlocksStat ()
specifier|public
name|long
name|getLowRedundancyBlocksStat
parameter_list|()
block|{
return|return
name|lowRedundancyBlocksStat
return|;
block|}
DECL|method|getCorruptBlocksStat ()
specifier|public
name|long
name|getCorruptBlocksStat
parameter_list|()
block|{
return|return
name|corruptBlocksStat
return|;
block|}
DECL|method|getMissingReplicaBlocksStat ()
specifier|public
name|long
name|getMissingReplicaBlocksStat
parameter_list|()
block|{
return|return
name|missingBlocksStat
return|;
block|}
DECL|method|getMissingReplicationOneBlocksStat ()
specifier|public
name|long
name|getMissingReplicationOneBlocksStat
parameter_list|()
block|{
return|return
name|missingReplicationOneBlocksStat
return|;
block|}
DECL|method|getBytesInFutureBlocksStat ()
specifier|public
name|long
name|getBytesInFutureBlocksStat
parameter_list|()
block|{
return|return
name|bytesInFutureBlocksStat
return|;
block|}
DECL|method|getPendingDeletionBlocksStat ()
specifier|public
name|long
name|getPendingDeletionBlocksStat
parameter_list|()
block|{
return|return
name|pendingDeletionBlocksStat
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|statsBuilder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|statsBuilder
operator|.
name|append
argument_list|(
literal|"ReplicatedBlocksStats=["
argument_list|)
operator|.
name|append
argument_list|(
literal|"LowRedundancyBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getLowRedundancyBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", CorruptBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getCorruptBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", MissingReplicaBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getMissingReplicaBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", MissingReplicationOneBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getMissingReplicationOneBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", BytesInFutureBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getBytesInFutureBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", PendingDeletionBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getPendingDeletionBlocksStat
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|statsBuilder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

