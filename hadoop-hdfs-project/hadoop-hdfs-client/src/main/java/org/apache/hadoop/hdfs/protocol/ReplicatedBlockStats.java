begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Get statistics pertaining to blocks of type {@link BlockType#CONTIGUOUS}  * in the filesystem.  *<p>  * @see ClientProtocol#getReplicatedBlockStats()  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|ReplicatedBlockStats
specifier|public
specifier|final
class|class
name|ReplicatedBlockStats
block|{
DECL|field|lowRedundancyBlocks
specifier|private
specifier|final
name|long
name|lowRedundancyBlocks
decl_stmt|;
DECL|field|corruptBlocks
specifier|private
specifier|final
name|long
name|corruptBlocks
decl_stmt|;
DECL|field|missingBlocks
specifier|private
specifier|final
name|long
name|missingBlocks
decl_stmt|;
DECL|field|missingReplicationOneBlocks
specifier|private
specifier|final
name|long
name|missingReplicationOneBlocks
decl_stmt|;
DECL|field|bytesInFutureBlocks
specifier|private
specifier|final
name|long
name|bytesInFutureBlocks
decl_stmt|;
DECL|field|pendingDeletionBlocks
specifier|private
specifier|final
name|long
name|pendingDeletionBlocks
decl_stmt|;
DECL|method|ReplicatedBlockStats (long lowRedundancyBlocks, long corruptBlocks, long missingBlocks, long missingReplicationOneBlocks, long bytesInFutureBlocks, long pendingDeletionBlocks)
specifier|public
name|ReplicatedBlockStats
parameter_list|(
name|long
name|lowRedundancyBlocks
parameter_list|,
name|long
name|corruptBlocks
parameter_list|,
name|long
name|missingBlocks
parameter_list|,
name|long
name|missingReplicationOneBlocks
parameter_list|,
name|long
name|bytesInFutureBlocks
parameter_list|,
name|long
name|pendingDeletionBlocks
parameter_list|)
block|{
name|this
operator|.
name|lowRedundancyBlocks
operator|=
name|lowRedundancyBlocks
expr_stmt|;
name|this
operator|.
name|corruptBlocks
operator|=
name|corruptBlocks
expr_stmt|;
name|this
operator|.
name|missingBlocks
operator|=
name|missingBlocks
expr_stmt|;
name|this
operator|.
name|missingReplicationOneBlocks
operator|=
name|missingReplicationOneBlocks
expr_stmt|;
name|this
operator|.
name|bytesInFutureBlocks
operator|=
name|bytesInFutureBlocks
expr_stmt|;
name|this
operator|.
name|pendingDeletionBlocks
operator|=
name|pendingDeletionBlocks
expr_stmt|;
block|}
DECL|method|getLowRedundancyBlocks ()
specifier|public
name|long
name|getLowRedundancyBlocks
parameter_list|()
block|{
return|return
name|lowRedundancyBlocks
return|;
block|}
DECL|method|getCorruptBlocks ()
specifier|public
name|long
name|getCorruptBlocks
parameter_list|()
block|{
return|return
name|corruptBlocks
return|;
block|}
DECL|method|getMissingReplicaBlocks ()
specifier|public
name|long
name|getMissingReplicaBlocks
parameter_list|()
block|{
return|return
name|missingBlocks
return|;
block|}
DECL|method|getMissingReplicationOneBlocks ()
specifier|public
name|long
name|getMissingReplicationOneBlocks
parameter_list|()
block|{
return|return
name|missingReplicationOneBlocks
return|;
block|}
DECL|method|getBytesInFutureBlocks ()
specifier|public
name|long
name|getBytesInFutureBlocks
parameter_list|()
block|{
return|return
name|bytesInFutureBlocks
return|;
block|}
DECL|method|getPendingDeletionBlocks ()
specifier|public
name|long
name|getPendingDeletionBlocks
parameter_list|()
block|{
return|return
name|pendingDeletionBlocks
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|statsBuilder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|statsBuilder
operator|.
name|append
argument_list|(
literal|"ReplicatedBlockStats=["
argument_list|)
operator|.
name|append
argument_list|(
literal|"LowRedundancyBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getLowRedundancyBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", CorruptBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getCorruptBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", MissingReplicaBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getMissingReplicaBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", MissingReplicationOneBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getMissingReplicationOneBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", BytesInFutureBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getBytesInFutureBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", PendingDeletionBlocks="
argument_list|)
operator|.
name|append
argument_list|(
name|getPendingDeletionBlocks
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|statsBuilder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

