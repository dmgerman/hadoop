begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|HdfsClientConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/** Test NameNode port defaulting code. */
end_comment

begin_class
DECL|class|TestDefaultNameNodePort
specifier|public
class|class
name|TestDefaultNameNodePort
block|{
annotation|@
name|Test
DECL|method|testGetAddressFromString ()
specifier|public
name|void
name|testGetAddressFromString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_RPC_PORT_DEFAULT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
literal|"hdfs://foo/"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_RPC_PORT_DEFAULT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
literal|"hdfs://foo:555"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
literal|555
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
literal|"foo:555"
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
literal|555
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAddressFromConf ()
specifier|public
name|void
name|testGetAddressFromConf
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|HdfsConfiguration
argument_list|()
decl_stmt|;
name|FileSystem
operator|.
name|setDefaultUri
argument_list|(
name|conf
argument_list|,
literal|"hdfs://foo/"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
name|conf
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_RPC_PORT_DEFAULT
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|setDefaultUri
argument_list|(
name|conf
argument_list|,
literal|"hdfs://foo:555/"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
name|conf
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
literal|555
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|setDefaultUri
argument_list|(
name|conf
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
name|conf
argument_list|)
operator|.
name|getPort
argument_list|()
argument_list|,
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_RPC_PORT_DEFAULT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetUri ()
specifier|public
name|void
name|testGetUri
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNUri
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
literal|"foo"
argument_list|,
literal|555
argument_list|)
argument_list|)
argument_list|,
name|URI
operator|.
name|create
argument_list|(
literal|"hdfs://foo:555"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DFSUtilClient
operator|.
name|getNNUri
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
literal|"foo"
argument_list|,
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_RPC_PORT_DEFAULT
argument_list|)
argument_list|)
argument_list|,
name|URI
operator|.
name|create
argument_list|(
literal|"hdfs://foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

