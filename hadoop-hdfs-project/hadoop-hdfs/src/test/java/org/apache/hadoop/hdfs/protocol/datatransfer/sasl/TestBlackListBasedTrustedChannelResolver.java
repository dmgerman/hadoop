begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocol.datatransfer.sasl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|datatransfer
operator|.
name|sasl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|datatransfer
operator|.
name|BlackListBasedTrustedChannelResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test class for  {@link BlackListBasedTrustedChannelResolver}.  */
end_comment

begin_class
DECL|class|TestBlackListBasedTrustedChannelResolver
specifier|public
class|class
name|TestBlackListBasedTrustedChannelResolver
block|{
DECL|field|FILE_NAME
specifier|private
specifier|final
specifier|static
name|String
name|FILE_NAME
init|=
literal|"blacklistfile.txt"
decl_stmt|;
DECL|field|blacklistFile
specifier|private
name|File
name|blacklistFile
decl_stmt|;
DECL|field|BLACK_LISTED
specifier|private
specifier|final
specifier|static
name|String
name|BLACK_LISTED
init|=
literal|"127.0.0.1\n216.58.216.174\n"
decl_stmt|;
DECL|field|resolver
specifier|private
name|BlackListBasedTrustedChannelResolver
name|resolver
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|blacklistFile
operator|=
operator|new
name|File
argument_list|(
name|GenericTestUtils
operator|.
name|getTestDir
argument_list|()
argument_list|,
name|FILE_NAME
argument_list|)
expr_stmt|;
name|resolver
operator|=
operator|new
name|BlackListBasedTrustedChannelResolver
argument_list|()
expr_stmt|;
try|try
block|{
name|FileUtils
operator|.
name|write
argument_list|(
name|blacklistFile
argument_list|,
name|BLACK_LISTED
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Setup for TestBlackListBasedTrustedChannelResolver failed."
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
DECL|method|cleanUp ()
specifier|public
name|void
name|cleanUp
parameter_list|()
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|blacklistFile
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBlackListIpClient ()
specifier|public
name|void
name|testBlackListIpClient
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|write
argument_list|(
name|blacklistFile
argument_list|,
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getHostAddress
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|BlackListBasedTrustedChannelResolver
operator|.
name|DFS_DATATRANSFER_CLIENT_FIXED_BLACK_LIST_FILE
argument_list|,
name|blacklistFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|resolver
operator|.
name|isTrusted
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBlackListIpServer ()
specifier|public
name|void
name|testBlackListIpServer
parameter_list|()
throws|throws
name|UnknownHostException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|BlackListBasedTrustedChannelResolver
operator|.
name|DFS_DATATRANSFER_SERVER_FIXED_BLACK_LIST_FILE
argument_list|,
name|blacklistFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|resolver
operator|.
name|isTrusted
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|resolver
operator|.
name|isTrusted
argument_list|(
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"216.58.216.174"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

