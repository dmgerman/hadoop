begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one   * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
operator|.
name|DatanodeRegistration
import|;
end_import

begin_comment
comment|/**  * Utility class for accessing package-private DataNode information during tests.  *  */
end_comment

begin_class
DECL|class|DataNodeTestUtils
specifier|public
class|class
name|DataNodeTestUtils
block|{
specifier|public
specifier|static
name|DatanodeRegistration
DECL|method|getDNRegistrationByMachineName (DataNode dn, String mName)
name|getDNRegistrationByMachineName
parameter_list|(
name|DataNode
name|dn
parameter_list|,
name|String
name|mName
parameter_list|)
block|{
return|return
name|dn
operator|.
name|getDNRegistrationByMachineName
argument_list|(
name|mName
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|DatanodeRegistration
DECL|method|getDNRegistrationForBP (DataNode dn, String bpid)
name|getDNRegistrationForBP
parameter_list|(
name|DataNode
name|dn
parameter_list|,
name|String
name|bpid
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|dn
operator|.
name|getDNRegistrationForBP
argument_list|(
name|bpid
argument_list|)
return|;
block|}
DECL|method|getFile (DataNode dn, String bpid, long bid)
specifier|public
specifier|static
name|File
name|getFile
parameter_list|(
name|DataNode
name|dn
parameter_list|,
name|String
name|bpid
parameter_list|,
name|long
name|bid
parameter_list|)
block|{
return|return
operator|(
operator|(
name|FSDataset
operator|)
name|dn
operator|.
name|getFSDataset
argument_list|()
operator|)
operator|.
name|getFile
argument_list|(
name|bpid
argument_list|,
name|bid
argument_list|)
return|;
block|}
DECL|method|getBlockFile (DataNode dn, String bpid, Block b )
specifier|public
specifier|static
name|File
name|getBlockFile
parameter_list|(
name|DataNode
name|dn
parameter_list|,
name|String
name|bpid
parameter_list|,
name|Block
name|b
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|(
operator|(
name|FSDataset
operator|)
name|dn
operator|.
name|getFSDataset
argument_list|()
operator|)
operator|.
name|getBlockFile
argument_list|(
name|bpid
argument_list|,
name|b
argument_list|)
return|;
block|}
DECL|method|unlinkBlock (DataNode dn, ExtendedBlock block, int numLinks )
specifier|public
specifier|static
name|boolean
name|unlinkBlock
parameter_list|(
name|DataNode
name|dn
parameter_list|,
name|ExtendedBlock
name|block
parameter_list|,
name|int
name|numLinks
parameter_list|)
throws|throws
name|IOException
block|{
name|ReplicaInfo
name|info
init|=
operator|(
operator|(
name|FSDataset
operator|)
name|dn
operator|.
name|getFSDataset
argument_list|()
operator|)
operator|.
name|getReplicaInfo
argument_list|(
name|block
argument_list|)
decl_stmt|;
return|return
name|info
operator|.
name|unlinkBlock
argument_list|(
name|numLinks
argument_list|)
return|;
block|}
block|}
end_class

end_unit

