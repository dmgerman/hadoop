begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.qjournal
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSEditLogOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNodeAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataOutputBuffer
import|;
end_import

begin_class
DECL|class|QJMTestUtil
specifier|public
specifier|abstract
class|class
name|QJMTestUtil
block|{
DECL|method|createTxnData (int startTxn, int numTxns)
specifier|public
specifier|static
name|byte
index|[]
name|createTxnData
parameter_list|(
name|int
name|startTxn
parameter_list|,
name|int
name|numTxns
parameter_list|)
throws|throws
name|Exception
block|{
name|DataOutputBuffer
name|buf
init|=
operator|new
name|DataOutputBuffer
argument_list|()
decl_stmt|;
name|FSEditLogOp
operator|.
name|Writer
name|writer
init|=
operator|new
name|FSEditLogOp
operator|.
name|Writer
argument_list|(
name|buf
argument_list|)
decl_stmt|;
for|for
control|(
name|long
name|txid
init|=
name|startTxn
init|;
name|txid
operator|<
name|startTxn
operator|+
name|numTxns
condition|;
name|txid
operator|++
control|)
block|{
name|FSEditLogOp
name|op
init|=
name|NameNodeAdapter
operator|.
name|createMkdirOp
argument_list|(
literal|"tx "
operator|+
name|txid
argument_list|)
decl_stmt|;
name|op
operator|.
name|setTransactionId
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|writer
operator|.
name|writeOp
argument_list|(
name|op
argument_list|)
expr_stmt|;
block|}
return|return
name|Arrays
operator|.
name|copyOf
argument_list|(
name|buf
operator|.
name|getData
argument_list|()
argument_list|,
name|buf
operator|.
name|getLength
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

