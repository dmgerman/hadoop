begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|CipherSuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|CryptoProtocolVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|BatchedRemoteIterator
operator|.
name|BatchedListEntries
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|PermissionStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|EncryptionZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSDirectory
operator|.
name|DirOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test class for EncryptionZoneManager methods. Added tests for  * listEncryptionZones method, for cases where inode can and cannot have a  * parent inode.  */
end_comment

begin_class
DECL|class|TestEncryptionZoneManager
specifier|public
class|class
name|TestEncryptionZoneManager
block|{
DECL|field|mockedDir
specifier|private
name|FSDirectory
name|mockedDir
decl_stmt|;
DECL|field|mockedINodesInPath
specifier|private
name|INodesInPath
name|mockedINodesInPath
decl_stmt|;
DECL|field|firstINode
specifier|private
name|INodeDirectory
name|firstINode
decl_stmt|;
DECL|field|secondINode
specifier|private
name|INodeDirectory
name|secondINode
decl_stmt|;
DECL|field|rootINode
specifier|private
name|INodeDirectory
name|rootINode
decl_stmt|;
DECL|field|defaultPermission
specifier|private
name|PermissionStatus
name|defaultPermission
decl_stmt|;
DECL|field|ezManager
specifier|private
name|EncryptionZoneManager
name|ezManager
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|this
operator|.
name|mockedDir
operator|=
name|mock
argument_list|(
name|FSDirectory
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockedINodesInPath
operator|=
name|mock
argument_list|(
name|INodesInPath
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|defaultPermission
operator|=
operator|new
name|PermissionStatus
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|755
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|rootINode
operator|=
operator|new
name|INodeDirectory
argument_list|(
literal|0L
argument_list|,
literal|""
operator|.
name|getBytes
argument_list|()
argument_list|,
name|defaultPermission
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|firstINode
operator|=
operator|new
name|INodeDirectory
argument_list|(
literal|1L
argument_list|,
literal|"first"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|defaultPermission
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|secondINode
operator|=
operator|new
name|INodeDirectory
argument_list|(
literal|2L
argument_list|,
literal|"second"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|defaultPermission
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|hasReadLock
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|hasWriteLock
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|getInode
argument_list|(
literal|0L
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|getInode
argument_list|(
literal|1L
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|firstINode
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|getInode
argument_list|(
literal|2L
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|secondINode
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListEncryptionZonesOneValidOnly ()
specifier|public
name|void
name|testListEncryptionZonesOneValidOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|ezManager
operator|=
operator|new
name|EncryptionZoneManager
argument_list|(
name|mockedDir
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|1L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|2L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
comment|// sets root as proper parent for firstINode only
name|this
operator|.
name|firstINode
operator|.
name|setParent
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDir
operator|.
name|getINodesInPath
argument_list|(
literal|"/first"
argument_list|,
name|DirOp
operator|.
name|READ_LINK
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockedINodesInPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedINodesInPath
operator|.
name|getLastINode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|firstINode
argument_list|)
expr_stmt|;
name|BatchedListEntries
argument_list|<
name|EncryptionZone
argument_list|>
name|result
init|=
name|ezManager
operator|.
name|listEncryptionZones
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/first"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListEncryptionZonesTwoValids ()
specifier|public
name|void
name|testListEncryptionZonesTwoValids
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|ezManager
operator|=
operator|new
name|EncryptionZoneManager
argument_list|(
name|mockedDir
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|1L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|2L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
comment|// sets root as proper parent for both inodes
name|this
operator|.
name|firstINode
operator|.
name|setParent
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|this
operator|.
name|secondINode
operator|.
name|setParent
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDir
operator|.
name|getINodesInPath
argument_list|(
literal|"/first"
argument_list|,
name|DirOp
operator|.
name|READ_LINK
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockedINodesInPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedINodesInPath
operator|.
name|getLastINode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|firstINode
argument_list|)
expr_stmt|;
name|INodesInPath
name|mockedINodesInPathForSecond
init|=
name|mock
argument_list|(
name|INodesInPath
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockedDir
operator|.
name|getINodesInPath
argument_list|(
literal|"/second"
argument_list|,
name|DirOp
operator|.
name|READ_LINK
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockedINodesInPathForSecond
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedINodesInPathForSecond
operator|.
name|getLastINode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|secondINode
argument_list|)
expr_stmt|;
name|BatchedListEntries
argument_list|<
name|EncryptionZone
argument_list|>
name|result
init|=
name|ezManager
operator|.
name|listEncryptionZones
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/first"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/second"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListEncryptionZonesForRoot ()
specifier|public
name|void
name|testListEncryptionZonesForRoot
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|ezManager
operator|=
operator|new
name|EncryptionZoneManager
argument_list|(
name|mockedDir
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|0L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
comment|// sets root as proper parent for firstINode only
name|when
argument_list|(
name|mockedDir
operator|.
name|getINodesInPath
argument_list|(
literal|"/"
argument_list|,
name|DirOp
operator|.
name|READ_LINK
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockedINodesInPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedINodesInPath
operator|.
name|getLastINode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|BatchedListEntries
argument_list|<
name|EncryptionZone
argument_list|>
name|result
init|=
name|ezManager
operator|.
name|listEncryptionZones
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListEncryptionZonesSubDirInvalid ()
specifier|public
name|void
name|testListEncryptionZonesSubDirInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|INodeDirectory
name|thirdINode
init|=
operator|new
name|INodeDirectory
argument_list|(
literal|3L
argument_list|,
literal|"third"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|defaultPermission
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|this
operator|.
name|mockedDir
operator|.
name|getInode
argument_list|(
literal|3L
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|thirdINode
argument_list|)
expr_stmt|;
comment|//sets "second" as parent
name|thirdINode
operator|.
name|setParent
argument_list|(
name|this
operator|.
name|secondINode
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|=
operator|new
name|EncryptionZoneManager
argument_list|(
name|mockedDir
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|1L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
name|this
operator|.
name|ezManager
operator|.
name|addEncryptionZone
argument_list|(
literal|3L
argument_list|,
name|CipherSuite
operator|.
name|AES_CTR_NOPADDING
argument_list|,
name|CryptoProtocolVersion
operator|.
name|ENCRYPTION_ZONES
argument_list|,
literal|"test_key"
argument_list|)
expr_stmt|;
comment|// sets root as proper parent for firstINode only,
comment|// leave secondINode with no parent
name|this
operator|.
name|firstINode
operator|.
name|setParent
argument_list|(
name|rootINode
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedDir
operator|.
name|getINodesInPath
argument_list|(
literal|"/first"
argument_list|,
name|DirOp
operator|.
name|READ_LINK
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockedINodesInPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedINodesInPath
operator|.
name|getLastINode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|firstINode
argument_list|)
expr_stmt|;
name|BatchedListEntries
argument_list|<
name|EncryptionZone
argument_list|>
name|result
init|=
name|ezManager
operator|.
name|listEncryptionZones
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/first"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

