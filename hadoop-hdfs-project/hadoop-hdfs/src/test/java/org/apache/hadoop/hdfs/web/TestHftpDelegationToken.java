begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.web
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyBoolean
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|SecurityUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|internal
operator|.
name|util
operator|.
name|reflection
operator|.
name|Whitebox
import|;
end_import

begin_class
DECL|class|TestHftpDelegationToken
specifier|public
class|class
name|TestHftpDelegationToken
block|{
comment|/**    * Test whether HftpFileSystem maintain wire-compatibility for 0.20.203 when    * obtaining delegation token. See HDFS-5440 for more details.    */
annotation|@
name|Test
DECL|method|testTokenCompatibilityFor203 ()
specifier|public
name|void
name|testTokenCompatibilityFor203
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|AuthenticationException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|HftpFileSystem
name|fs
init|=
operator|new
name|HftpFileSystem
argument_list|()
decl_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|TokenIdentifier
argument_list|>
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
name|DelegationTokenIdentifier
operator|.
name|HDFS_DELEGATION_KIND
argument_list|,
operator|new
name|Text
argument_list|(
literal|"127.0.0.1:8020"
argument_list|)
argument_list|)
decl_stmt|;
name|Credentials
name|cred
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
name|cred
operator|.
name|addToken
argument_list|(
name|HftpFileSystem
operator|.
name|TOKEN_KIND
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|os
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|cred
operator|.
name|write
argument_list|(
operator|new
name|DataOutputStream
argument_list|(
name|os
argument_list|)
argument_list|)
expr_stmt|;
name|HttpURLConnection
name|conn
init|=
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|os
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|conn
argument_list|)
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_OK
argument_list|)
operator|.
name|when
argument_list|(
name|conn
argument_list|)
operator|.
name|getResponseCode
argument_list|()
expr_stmt|;
name|URLConnectionFactory
name|factory
init|=
name|mock
argument_list|(
name|URLConnectionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|conn
argument_list|)
operator|.
name|when
argument_list|(
name|factory
argument_list|)
operator|.
name|openConnection
argument_list|(
name|Mockito
operator|.
expr|<
name|URL
operator|>
name|any
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"hftp://127.0.0.1:8020"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|initialize
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|fs
operator|.
name|connectionFactory
operator|=
name|factory
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"bar"
block|}
argument_list|)
decl_stmt|;
name|TokenAspect
argument_list|<
name|HftpFileSystem
argument_list|>
name|tokenAspect
init|=
operator|new
name|TokenAspect
argument_list|<
name|HftpFileSystem
argument_list|>
argument_list|(
name|fs
argument_list|,
name|SecurityUtil
operator|.
name|buildTokenService
argument_list|(
name|uri
argument_list|)
argument_list|,
name|HftpFileSystem
operator|.
name|TOKEN_KIND
argument_list|)
decl_stmt|;
name|tokenAspect
operator|.
name|initDelegationToken
argument_list|(
name|ugi
argument_list|)
expr_stmt|;
name|tokenAspect
operator|.
name|ensureTokenInitialized
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertSame
argument_list|(
name|HftpFileSystem
operator|.
name|TOKEN_KIND
argument_list|,
name|fs
operator|.
name|getRenewToken
argument_list|()
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|tok
init|=
operator|(
name|Token
argument_list|<
name|?
argument_list|>
operator|)
name|Whitebox
operator|.
name|getInternalState
argument_list|(
name|fs
argument_list|,
literal|"delegationToken"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotSame
argument_list|(
literal|"Not making a copy of the remote token"
argument_list|,
name|token
argument_list|,
name|tok
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|token
operator|.
name|getKind
argument_list|()
argument_list|,
name|tok
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

