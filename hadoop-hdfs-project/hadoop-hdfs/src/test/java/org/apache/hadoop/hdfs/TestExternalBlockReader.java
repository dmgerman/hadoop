begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|Ints
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSInputStream
operator|.
name|ReadStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|HdfsClientConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|HdfsDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|BufferOverflowException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_class
DECL|class|TestExternalBlockReader
specifier|public
class|class
name|TestExternalBlockReader
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestExternalBlockReader
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|SEED
specifier|private
specifier|static
name|long
name|SEED
init|=
literal|1234
decl_stmt|;
annotation|@
name|Test
DECL|method|testMisconfiguredExternalBlockReader ()
specifier|public
name|void
name|testMisconfiguredExternalBlockReader
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HdfsClientConfigKeys
operator|.
name|REPLICA_ACCESSOR_BUILDER_CLASSES_KEY
argument_list|,
literal|"org.apache.hadoop.hdfs.NonExistentReplicaAccessorBuilderClass"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|HdfsClientConfigKeys
operator|.
name|DFS_BLOCK_SIZE_KEY
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_NAMENODE_MIN_BLOCK_SIZE_KEY
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|MiniDFSCluster
name|cluster
init|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|int
name|TEST_LENGTH
init|=
literal|2048
decl_stmt|;
name|DistributedFileSystem
name|dfs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
try|try
block|{
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|dfs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
argument_list|,
name|TEST_LENGTH
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
name|SEED
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|stream
init|=
name|dfs
operator|.
name|open
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
argument_list|)
decl_stmt|;
name|byte
name|buf
index|[]
init|=
operator|new
name|byte
index|[
name|TEST_LENGTH
index|]
decl_stmt|;
name|IOUtils
operator|.
name|readFully
argument_list|(
name|stream
argument_list|,
name|buf
argument_list|,
literal|0
argument_list|,
name|TEST_LENGTH
argument_list|)
expr_stmt|;
name|byte
name|expected
index|[]
init|=
name|DFSTestUtil
operator|.
name|calculateFileContentsFromSeed
argument_list|(
name|SEED
argument_list|,
name|TEST_LENGTH
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|buf
argument_list|)
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
DECL|field|SYNTHETIC_BLOCK_READER_TEST_UUID_KEY
specifier|private
specifier|static
specifier|final
name|String
name|SYNTHETIC_BLOCK_READER_TEST_UUID_KEY
init|=
literal|"synthetic.block.reader.test.uuid.key"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HashMap
argument_list|<
name|String
argument_list|,
name|LinkedList
argument_list|<
name|SyntheticReplicaAccessor
argument_list|>
argument_list|>
DECL|field|accessors
name|accessors
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|LinkedList
argument_list|<
name|SyntheticReplicaAccessor
argument_list|>
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
DECL|class|SyntheticReplicaAccessorBuilder
specifier|public
specifier|static
class|class
name|SyntheticReplicaAccessorBuilder
extends|extends
name|ReplicaAccessorBuilder
block|{
DECL|field|fileName
name|String
name|fileName
decl_stmt|;
DECL|field|blockId
name|long
name|blockId
decl_stmt|;
DECL|field|blockPoolId
name|String
name|blockPoolId
decl_stmt|;
DECL|field|genstamp
name|long
name|genstamp
decl_stmt|;
DECL|field|verifyChecksum
name|boolean
name|verifyChecksum
decl_stmt|;
DECL|field|clientName
name|String
name|clientName
decl_stmt|;
DECL|field|allowShortCircuit
name|boolean
name|allowShortCircuit
decl_stmt|;
DECL|field|visibleLength
name|long
name|visibleLength
decl_stmt|;
DECL|field|conf
name|Configuration
name|conf
decl_stmt|;
annotation|@
name|Override
DECL|method|setFileName (String fileName)
specifier|public
name|ReplicaAccessorBuilder
name|setFileName
parameter_list|(
name|String
name|fileName
parameter_list|)
block|{
name|this
operator|.
name|fileName
operator|=
name|fileName
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setBlock (long blockId, String blockPoolId)
specifier|public
name|ReplicaAccessorBuilder
name|setBlock
parameter_list|(
name|long
name|blockId
parameter_list|,
name|String
name|blockPoolId
parameter_list|)
block|{
name|this
operator|.
name|blockId
operator|=
name|blockId
expr_stmt|;
name|this
operator|.
name|blockPoolId
operator|=
name|blockPoolId
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setGenerationStamp (long genstamp)
specifier|public
name|ReplicaAccessorBuilder
name|setGenerationStamp
parameter_list|(
name|long
name|genstamp
parameter_list|)
block|{
name|this
operator|.
name|genstamp
operator|=
name|genstamp
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setVerifyChecksum (boolean verifyChecksum)
specifier|public
name|ReplicaAccessorBuilder
name|setVerifyChecksum
parameter_list|(
name|boolean
name|verifyChecksum
parameter_list|)
block|{
name|this
operator|.
name|verifyChecksum
operator|=
name|verifyChecksum
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setClientName (String clientName)
specifier|public
name|ReplicaAccessorBuilder
name|setClientName
parameter_list|(
name|String
name|clientName
parameter_list|)
block|{
name|this
operator|.
name|clientName
operator|=
name|clientName
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setAllowShortCircuitReads (boolean allowShortCircuit)
specifier|public
name|ReplicaAccessorBuilder
name|setAllowShortCircuitReads
parameter_list|(
name|boolean
name|allowShortCircuit
parameter_list|)
block|{
name|this
operator|.
name|allowShortCircuit
operator|=
name|allowShortCircuit
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setVisibleLength (long visibleLength)
specifier|public
name|ReplicaAccessorBuilder
name|setVisibleLength
parameter_list|(
name|long
name|visibleLength
parameter_list|)
block|{
name|this
operator|.
name|visibleLength
operator|=
name|visibleLength
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setConfiguration (Configuration conf)
specifier|public
name|ReplicaAccessorBuilder
name|setConfiguration
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setBlockAccessToken (byte[] token)
specifier|public
name|ReplicaAccessorBuilder
name|setBlockAccessToken
parameter_list|(
name|byte
index|[]
name|token
parameter_list|)
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|build ()
specifier|public
name|ReplicaAccessor
name|build
parameter_list|()
block|{
if|if
condition|(
name|visibleLength
operator|<
literal|1024
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"SyntheticReplicaAccessorFactory returning null for a "
operator|+
literal|"smaller replica with size "
operator|+
name|visibleLength
argument_list|)
expr_stmt|;
comment|//trace
return|return
literal|null
return|;
block|}
return|return
operator|new
name|SyntheticReplicaAccessor
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
DECL|class|SyntheticReplicaAccessor
specifier|public
specifier|static
class|class
name|SyntheticReplicaAccessor
extends|extends
name|ReplicaAccessor
block|{
DECL|field|length
specifier|final
name|long
name|length
decl_stmt|;
DECL|field|contents
specifier|final
name|byte
name|contents
index|[]
decl_stmt|;
DECL|field|builder
specifier|final
name|SyntheticReplicaAccessorBuilder
name|builder
decl_stmt|;
DECL|field|totalRead
name|long
name|totalRead
init|=
literal|0
decl_stmt|;
DECL|field|numCloses
name|int
name|numCloses
init|=
literal|0
decl_stmt|;
DECL|field|error
name|String
name|error
init|=
literal|""
decl_stmt|;
DECL|field|prefix
name|String
name|prefix
init|=
literal|""
decl_stmt|;
DECL|field|genstamp
specifier|final
name|long
name|genstamp
decl_stmt|;
DECL|method|SyntheticReplicaAccessor (SyntheticReplicaAccessorBuilder builder)
name|SyntheticReplicaAccessor
parameter_list|(
name|SyntheticReplicaAccessorBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|builder
operator|.
name|visibleLength
expr_stmt|;
name|this
operator|.
name|contents
operator|=
name|DFSTestUtil
operator|.
name|calculateFileContentsFromSeed
argument_list|(
name|SEED
argument_list|,
name|Ints
operator|.
name|checkedCast
argument_list|(
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
name|this
operator|.
name|genstamp
operator|=
name|builder
operator|.
name|genstamp
expr_stmt|;
name|String
name|uuid
init|=
name|this
operator|.
name|builder
operator|.
name|conf
operator|.
name|get
argument_list|(
name|SYNTHETIC_BLOCK_READER_TEST_UUID_KEY
argument_list|)
decl_stmt|;
name|LinkedList
argument_list|<
name|SyntheticReplicaAccessor
argument_list|>
name|accessorsList
init|=
name|accessors
operator|.
name|get
argument_list|(
name|uuid
argument_list|)
decl_stmt|;
if|if
condition|(
name|accessorsList
operator|==
literal|null
condition|)
block|{
name|accessorsList
operator|=
operator|new
name|LinkedList
argument_list|<
name|SyntheticReplicaAccessor
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|accessorsList
operator|.
name|add
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|accessors
operator|.
name|put
argument_list|(
name|uuid
argument_list|,
name|accessorsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|read (long pos, byte[] buf, int off, int len)
specifier|public
specifier|synchronized
name|int
name|read
parameter_list|(
name|long
name|pos
parameter_list|,
name|byte
index|[]
name|buf
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|pos
operator|>
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|pos
operator|<
literal|0
condition|)
block|{
name|addError
argument_list|(
literal|"Attempted to read from a location that was less "
operator|+
literal|"than 0 at "
operator|+
name|pos
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
name|int
name|i
init|=
literal|0
decl_stmt|,
name|nread
init|=
literal|0
decl_stmt|,
name|ipos
decl_stmt|;
for|for
control|(
name|ipos
operator|=
operator|(
name|int
operator|)
name|pos
init|;
operator|(
name|ipos
operator|<
name|contents
operator|.
name|length
operator|)
operator|&&
operator|(
name|nread
operator|<
name|len
operator|)
condition|;
name|ipos
operator|++
control|)
block|{
name|buf
index|[
name|i
operator|++
index|]
operator|=
name|contents
index|[
name|ipos
index|]
expr_stmt|;
name|nread
operator|++
expr_stmt|;
name|totalRead
operator|++
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"ipos = "
operator|+
name|ipos
operator|+
literal|", contents.length = "
operator|+
name|contents
operator|.
name|length
operator|+
literal|", nread = "
operator|+
name|nread
operator|+
literal|", len = "
operator|+
name|len
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|nread
operator|==
literal|0
operator|)
operator|&&
operator|(
name|ipos
operator|>=
name|contents
operator|.
name|length
operator|)
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
return|return
name|nread
return|;
block|}
annotation|@
name|Override
DECL|method|read (long pos, ByteBuffer buf)
specifier|public
specifier|synchronized
name|int
name|read
parameter_list|(
name|long
name|pos
parameter_list|,
name|ByteBuffer
name|buf
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|pos
operator|>
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|pos
operator|<
literal|0
condition|)
block|{
name|addError
argument_list|(
literal|"Attempted to read from a location that was less "
operator|+
literal|"than 0 at "
operator|+
name|pos
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
name|int
name|i
init|=
literal|0
decl_stmt|,
name|nread
init|=
literal|0
decl_stmt|,
name|ipos
decl_stmt|;
for|for
control|(
name|ipos
operator|=
operator|(
name|int
operator|)
name|pos
init|;
name|ipos
operator|<
name|contents
operator|.
name|length
condition|;
name|ipos
operator|++
control|)
block|{
try|try
block|{
name|buf
operator|.
name|put
argument_list|(
name|contents
index|[
name|ipos
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BufferOverflowException
name|bos
parameter_list|)
block|{
break|break;
block|}
name|nread
operator|++
expr_stmt|;
name|totalRead
operator|++
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|nread
operator|==
literal|0
operator|)
operator|&&
operator|(
name|ipos
operator|>=
name|contents
operator|.
name|length
operator|)
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
return|return
name|nread
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
specifier|synchronized
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|numCloses
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isLocal ()
specifier|public
name|boolean
name|isLocal
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|isShortCircuit ()
specifier|public
name|boolean
name|isShortCircuit
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|getError ()
specifier|synchronized
name|String
name|getError
parameter_list|()
block|{
return|return
name|error
return|;
block|}
DECL|method|getGenerationStamp ()
name|long
name|getGenerationStamp
parameter_list|()
block|{
return|return
name|genstamp
return|;
block|}
DECL|method|addError (String text)
specifier|synchronized
name|void
name|addError
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"SyntheticReplicaAccessor error: "
operator|+
name|text
argument_list|)
expr_stmt|;
name|error
operator|=
name|error
operator|+
name|prefix
operator|+
name|text
expr_stmt|;
name|prefix
operator|=
literal|"; "
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testExternalBlockReader ()
specifier|public
name|void
name|testExternalBlockReader
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HdfsClientConfigKeys
operator|.
name|REPLICA_ACCESSOR_BUILDER_CLASSES_KEY
argument_list|,
name|SyntheticReplicaAccessorBuilder
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|HdfsClientConfigKeys
operator|.
name|DFS_BLOCK_SIZE_KEY
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_NAMENODE_MIN_BLOCK_SIZE_KEY
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|String
name|uuid
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|SYNTHETIC_BLOCK_READER_TEST_UUID_KEY
argument_list|,
name|uuid
argument_list|)
expr_stmt|;
name|MiniDFSCluster
name|cluster
init|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|int
name|TEST_LENGTH
init|=
literal|2047
decl_stmt|;
name|DistributedFileSystem
name|dfs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
try|try
block|{
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|dfs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
argument_list|,
name|TEST_LENGTH
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
name|SEED
argument_list|)
expr_stmt|;
name|HdfsDataInputStream
name|stream
init|=
operator|(
name|HdfsDataInputStream
operator|)
name|dfs
operator|.
name|open
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
argument_list|)
decl_stmt|;
name|byte
name|buf
index|[]
init|=
operator|new
name|byte
index|[
name|TEST_LENGTH
index|]
decl_stmt|;
name|IOUtils
operator|.
name|readFully
argument_list|(
name|stream
argument_list|,
name|buf
argument_list|,
literal|0
argument_list|,
name|TEST_LENGTH
argument_list|)
expr_stmt|;
name|byte
name|expected
index|[]
init|=
name|DFSTestUtil
operator|.
name|calculateFileContentsFromSeed
argument_list|(
name|SEED
argument_list|,
name|TEST_LENGTH
argument_list|)
decl_stmt|;
name|ReadStatistics
name|stats
init|=
name|stream
operator|.
name|getReadStatistics
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1024
argument_list|,
name|stats
operator|.
name|getTotalShortCircuitBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2047
argument_list|,
name|stats
operator|.
name|getTotalLocalBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2047
argument_list|,
name|stats
operator|.
name|getTotalBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|buf
argument_list|)
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
name|ExtendedBlock
name|block
init|=
name|DFSTestUtil
operator|.
name|getFirstBlock
argument_list|(
name|dfs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|LinkedList
argument_list|<
name|SyntheticReplicaAccessor
argument_list|>
name|accessorList
init|=
name|accessors
operator|.
name|get
argument_list|(
name|uuid
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|accessorList
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|accessorList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SyntheticReplicaAccessor
name|accessor
init|=
name|accessorList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|accessor
operator|.
name|builder
operator|.
name|allowShortCircuit
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|block
operator|.
name|getBlockPoolId
argument_list|()
argument_list|,
name|accessor
operator|.
name|builder
operator|.
name|blockPoolId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|block
operator|.
name|getBlockId
argument_list|()
argument_list|,
name|accessor
operator|.
name|builder
operator|.
name|blockId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|dfs
operator|.
name|getClient
argument_list|()
operator|.
name|clientName
argument_list|,
name|accessor
operator|.
name|builder
operator|.
name|clientName
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/a"
argument_list|,
name|accessor
operator|.
name|builder
operator|.
name|fileName
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|block
operator|.
name|getGenerationStamp
argument_list|()
argument_list|,
name|accessor
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|accessor
operator|.
name|builder
operator|.
name|verifyChecksum
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|accessor
operator|.
name|builder
operator|.
name|visibleLength
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|accessor
operator|.
name|totalRead
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|accessor
operator|.
name|getError
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|accessor
operator|.
name|numCloses
argument_list|)
expr_stmt|;
name|byte
index|[]
name|tempBuf
init|=
operator|new
name|byte
index|[
literal|5
index|]
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|accessor
operator|.
name|read
argument_list|(
name|TEST_LENGTH
argument_list|,
name|tempBuf
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|accessor
operator|.
name|read
argument_list|(
name|TEST_LENGTH
argument_list|,
name|tempBuf
argument_list|,
literal|0
argument_list|,
name|tempBuf
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|accessors
operator|.
name|remove
argument_list|(
name|uuid
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

