begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|ACCESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|DEFAULT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|GROUP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|MASK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|OTHER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|USER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|ALL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|EXECUTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|NONE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ_EXECUTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ_WRITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|WRITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|WRITE_EXECUTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|AclTestHelpers
operator|.
name|aclEntry
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doAnswer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|PermissionStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
operator|.
name|Snapshot
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_comment
comment|/**  * Unit tests covering FSPermissionChecker.  All tests in this suite have been  * cross-validated against Linux setfacl/getfacl to check for consistency of the  * HDFS implementation.  */
end_comment

begin_class
DECL|class|TestFSPermissionChecker
specifier|public
class|class
name|TestFSPermissionChecker
block|{
DECL|field|PREFERRED_BLOCK_SIZE
specifier|private
specifier|static
specifier|final
name|long
name|PREFERRED_BLOCK_SIZE
init|=
literal|128
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|REPLICATION
specifier|private
specifier|static
specifier|final
name|short
name|REPLICATION
init|=
literal|3
decl_stmt|;
DECL|field|SUPERGROUP
specifier|private
specifier|static
specifier|final
name|String
name|SUPERGROUP
init|=
literal|"supergroup"
decl_stmt|;
DECL|field|SUPERUSER
specifier|private
specifier|static
specifier|final
name|String
name|SUPERUSER
init|=
literal|"superuser"
decl_stmt|;
DECL|field|BRUCE
specifier|private
specifier|static
specifier|final
name|UserGroupInformation
name|BRUCE
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
literal|"bruce"
argument_list|,
operator|new
name|String
index|[]
block|{ }
argument_list|)
decl_stmt|;
DECL|field|DIANA
specifier|private
specifier|static
specifier|final
name|UserGroupInformation
name|DIANA
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
literal|"diana"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"sales"
block|}
argument_list|)
decl_stmt|;
DECL|field|CLARK
specifier|private
specifier|static
specifier|final
name|UserGroupInformation
name|CLARK
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
literal|"clark"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"execs"
block|}
argument_list|)
decl_stmt|;
DECL|field|dir
specifier|private
name|FSDirectory
name|dir
decl_stmt|;
DECL|field|inodeRoot
specifier|private
name|INodeDirectory
name|inodeRoot
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FSNamesystem
name|fsn
init|=
name|mock
argument_list|(
name|FSNamesystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|Object
index|[]
name|args
init|=
name|invocation
operator|.
name|getArguments
argument_list|()
decl_stmt|;
name|FsPermission
name|perm
init|=
operator|(
name|FsPermission
operator|)
name|args
index|[
literal|0
index|]
decl_stmt|;
return|return
operator|new
name|PermissionStatus
argument_list|(
name|SUPERUSER
argument_list|,
name|SUPERGROUP
argument_list|,
name|perm
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|fsn
argument_list|)
operator|.
name|createFsOwnerPermissions
argument_list|(
name|any
argument_list|(
name|FsPermission
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|dir
operator|=
operator|new
name|FSDirectory
argument_list|(
name|fsn
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|inodeRoot
operator|=
name|dir
operator|.
name|getRoot
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclOwner ()
specifier|public
name|void
name|testAclOwner
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0640
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedUser ()
specifier|public
name|void
name|testAclNamedUser
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0640
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedUserDeny ()
specifier|public
name|void
name|testAclNamedUserDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedUserTraverseDeny ()
specifier|public
name|void
name|testAclNamedUserTraverseDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeDirectory
name|inodeDir
init|=
name|createINodeDirectory
argument_list|(
name|inodeRoot
argument_list|,
literal|"dir1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0755
argument_list|)
decl_stmt|;
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeDir
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeDir
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedUserMask ()
specifier|public
name|void
name|testAclNamedUserMask
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0620
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclGroup ()
specifier|public
name|void
name|testAclGroup
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0640
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclGroupDeny ()
specifier|public
name|void
name|testAclGroupDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"sales"
argument_list|,
operator|(
name|short
operator|)
literal|0604
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclGroupTraverseDeny ()
specifier|public
name|void
name|testAclGroupTraverseDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeDirectory
name|inodeDir
init|=
name|createINodeDirectory
argument_list|(
name|inodeRoot
argument_list|,
literal|"dir1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0755
argument_list|)
decl_stmt|;
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeDir
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeDir
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclGroupTraverseDenyOnlyDefaultEntries ()
specifier|public
name|void
name|testAclGroupTraverseDenyOnlyDefaultEntries
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeDirectory
name|inodeDir
init|=
name|createINodeDirectory
argument_list|(
name|inodeRoot
argument_list|,
literal|"dir1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0755
argument_list|)
decl_stmt|;
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeDir
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeDir
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclGroupMask ()
specifier|public
name|void
name|testAclGroupMask
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedGroup ()
specifier|public
name|void
name|testAclNamedGroup
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0640
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedGroupDeny ()
specifier|public
name|void
name|testAclNamedGroupDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"sales"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"execs"
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedGroupTraverseDeny ()
specifier|public
name|void
name|testAclNamedGroupTraverseDeny
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeDirectory
name|inodeDir
init|=
name|createINodeDirectory
argument_list|(
name|inodeRoot
argument_list|,
literal|"dir1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0755
argument_list|)
decl_stmt|;
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeDir
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeDir
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/dir1/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclNamedGroupMask ()
specifier|public
name|void
name|testAclNamedGroupMask
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"execs"
argument_list|,
operator|(
name|short
operator|)
literal|0644
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAclOther ()
specifier|public
name|void
name|testAclOther
parameter_list|()
throws|throws
name|IOException
block|{
name|INodeFile
name|inodeFile
init|=
name|createINodeFile
argument_list|(
name|inodeRoot
argument_list|,
literal|"file1"
argument_list|,
literal|"bruce"
argument_list|,
literal|"sales"
argument_list|,
operator|(
name|short
operator|)
literal|0774
argument_list|)
decl_stmt|;
name|addAcl
argument_list|(
name|inodeFile
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|BRUCE
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|DIANA
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertPermissionGranted
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_WRITE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|READ_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|WRITE_EXECUTE
argument_list|)
expr_stmt|;
name|assertPermissionDenied
argument_list|(
name|CLARK
argument_list|,
literal|"/file1"
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
block|}
DECL|method|addAcl (INodeWithAdditionalFields inode, AclEntry... acl)
specifier|private
name|void
name|addAcl
parameter_list|(
name|INodeWithAdditionalFields
name|inode
parameter_list|,
name|AclEntry
modifier|...
name|acl
parameter_list|)
throws|throws
name|IOException
block|{
name|AclStorage
operator|.
name|updateINodeAcl
argument_list|(
name|inode
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|acl
argument_list|)
argument_list|,
name|Snapshot
operator|.
name|CURRENT_STATE_ID
argument_list|)
expr_stmt|;
block|}
DECL|method|assertPermissionGranted (UserGroupInformation user, String path, FsAction access)
specifier|private
name|void
name|assertPermissionGranted
parameter_list|(
name|UserGroupInformation
name|user
parameter_list|,
name|String
name|path
parameter_list|,
name|FsAction
name|access
parameter_list|)
throws|throws
name|IOException
block|{
name|INodesInPath
name|iip
init|=
name|dir
operator|.
name|getINodesInPath
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|dir
operator|.
name|getPermissionChecker
argument_list|(
name|SUPERUSER
argument_list|,
name|SUPERGROUP
argument_list|,
name|user
argument_list|)
operator|.
name|checkPermission
argument_list|(
name|iip
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|access
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|assertPermissionDenied (UserGroupInformation user, String path, FsAction access)
specifier|private
name|void
name|assertPermissionDenied
parameter_list|(
name|UserGroupInformation
name|user
parameter_list|,
name|String
name|path
parameter_list|,
name|FsAction
name|access
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|INodesInPath
name|iip
init|=
name|dir
operator|.
name|getINodesInPath
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|dir
operator|.
name|getPermissionChecker
argument_list|(
name|SUPERUSER
argument_list|,
name|SUPERGROUP
argument_list|,
name|user
argument_list|)
operator|.
name|checkPermission
argument_list|(
name|iip
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|access
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expected AccessControlException for user + "
operator|+
name|user
operator|+
literal|", path = "
operator|+
name|path
operator|+
literal|", access = "
operator|+
name|access
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AccessControlException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"Permission denied messages must carry the username"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|user
operator|.
name|getUserName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Permission denied messages must carry the path parent"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|Path
argument_list|(
name|path
argument_list|)
operator|.
name|getParent
argument_list|()
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createINodeDirectory (INodeDirectory parent, String name, String owner, String group, short perm)
specifier|private
specifier|static
name|INodeDirectory
name|createINodeDirectory
parameter_list|(
name|INodeDirectory
name|parent
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|short
name|perm
parameter_list|)
throws|throws
name|IOException
block|{
name|PermissionStatus
name|permStatus
init|=
name|PermissionStatus
operator|.
name|createImmutable
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
name|perm
argument_list|)
argument_list|)
decl_stmt|;
name|INodeDirectory
name|inodeDirectory
init|=
operator|new
name|INodeDirectory
argument_list|(
name|INodeId
operator|.
name|GRANDFATHER_INODE_ID
argument_list|,
name|name
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|,
name|permStatus
argument_list|,
literal|0L
argument_list|)
decl_stmt|;
name|parent
operator|.
name|addChild
argument_list|(
name|inodeDirectory
argument_list|)
expr_stmt|;
return|return
name|inodeDirectory
return|;
block|}
DECL|method|createINodeFile (INodeDirectory parent, String name, String owner, String group, short perm)
specifier|private
specifier|static
name|INodeFile
name|createINodeFile
parameter_list|(
name|INodeDirectory
name|parent
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|short
name|perm
parameter_list|)
throws|throws
name|IOException
block|{
name|PermissionStatus
name|permStatus
init|=
name|PermissionStatus
operator|.
name|createImmutable
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
name|perm
argument_list|)
argument_list|)
decl_stmt|;
name|INodeFile
name|inodeFile
init|=
operator|new
name|INodeFile
argument_list|(
name|INodeId
operator|.
name|GRANDFATHER_INODE_ID
argument_list|,
name|name
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|,
name|permStatus
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|null
argument_list|,
name|REPLICATION
argument_list|,
name|PREFERRED_BLOCK_SIZE
argument_list|)
decl_stmt|;
name|parent
operator|.
name|addChild
argument_list|(
name|inodeFile
argument_list|)
expr_stmt|;
return|return
name|inodeFile
return|;
block|}
block|}
end_class

end_unit

