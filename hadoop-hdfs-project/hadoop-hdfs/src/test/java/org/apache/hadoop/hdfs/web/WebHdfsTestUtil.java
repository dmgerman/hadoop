begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.web
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|HttpOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|Param
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_class
DECL|class|WebHdfsTestUtil
specifier|public
class|class
name|WebHdfsTestUtil
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|WebHdfsTestUtil
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|getWebHdfsFileSystem (final Configuration conf )
specifier|public
specifier|static
name|WebHdfsFileSystem
name|getWebHdfsFileSystem
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|String
name|uri
init|=
name|WebHdfsFileSystem
operator|.
name|SCHEME
operator|+
literal|"://"
operator|+
name|conf
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_NAMENODE_HTTP_ADDRESS_KEY
argument_list|)
decl_stmt|;
return|return
operator|(
name|WebHdfsFileSystem
operator|)
name|FileSystem
operator|.
name|get
argument_list|(
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
argument_list|,
name|conf
argument_list|)
return|;
block|}
DECL|method|getWebHdfsFileSystemAs ( final UserGroupInformation ugi, final Configuration conf )
specifier|public
specifier|static
name|WebHdfsFileSystem
name|getWebHdfsFileSystemAs
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|WebHdfsFileSystem
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|WebHdfsFileSystem
name|run
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|getWebHdfsFileSystem
argument_list|(
name|conf
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|toUrl (final WebHdfsFileSystem webhdfs, final HttpOpParam.Op op, final Path fspath, final Param<?,?>... parameters)
specifier|public
specifier|static
name|URL
name|toUrl
parameter_list|(
specifier|final
name|WebHdfsFileSystem
name|webhdfs
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|,
specifier|final
name|Path
name|fspath
parameter_list|,
specifier|final
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
modifier|...
name|parameters
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|URL
name|url
init|=
name|webhdfs
operator|.
name|toUrl
argument_list|(
name|op
argument_list|,
name|fspath
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|WebHdfsTestUtil
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"url="
operator|+
name|url
argument_list|)
expr_stmt|;
return|return
name|url
return|;
block|}
DECL|method|connectAndGetJson (final HttpURLConnection conn, final int expectedResponseCode)
specifier|public
specifier|static
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|connectAndGetJson
parameter_list|(
specifier|final
name|HttpURLConnection
name|conn
parameter_list|,
specifier|final
name|int
name|expectedResponseCode
parameter_list|)
throws|throws
name|IOException
block|{
name|conn
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedResponseCode
argument_list|,
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|WebHdfsFileSystem
operator|.
name|jsonParse
argument_list|(
name|conn
argument_list|,
literal|false
argument_list|)
return|;
block|}
DECL|method|twoStepWrite (HttpURLConnection conn, final HttpOpParam.Op op)
specifier|public
specifier|static
name|HttpURLConnection
name|twoStepWrite
parameter_list|(
name|HttpURLConnection
name|conn
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|)
throws|throws
name|IOException
block|{
name|conn
operator|.
name|setRequestMethod
argument_list|(
name|op
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|conn
operator|=
name|WebHdfsFileSystem
operator|.
name|twoStepWrite
argument_list|(
name|conn
argument_list|,
name|op
argument_list|)
expr_stmt|;
name|conn
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|conn
operator|.
name|connect
argument_list|()
expr_stmt|;
return|return
name|conn
return|;
block|}
DECL|method|write (final WebHdfsFileSystem webhdfs, final HttpOpParam.Op op, final HttpURLConnection conn, final int bufferSize)
specifier|public
specifier|static
name|FSDataOutputStream
name|write
parameter_list|(
specifier|final
name|WebHdfsFileSystem
name|webhdfs
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|,
specifier|final
name|HttpURLConnection
name|conn
parameter_list|,
specifier|final
name|int
name|bufferSize
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|webhdfs
operator|.
name|write
argument_list|(
name|op
argument_list|,
name|conn
argument_list|,
name|bufferSize
argument_list|)
return|;
block|}
block|}
end_class

end_unit

