begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_comment
comment|/**  * Constructs a router configuration with individual features enabled/disabled.  */
end_comment

begin_class
DECL|class|RouterConfigBuilder
specifier|public
class|class
name|RouterConfigBuilder
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|enableRpcServer
specifier|private
name|boolean
name|enableRpcServer
init|=
literal|false
decl_stmt|;
DECL|field|enableAdminServer
specifier|private
name|boolean
name|enableAdminServer
init|=
literal|false
decl_stmt|;
DECL|field|enableHttpServer
specifier|private
name|boolean
name|enableHttpServer
init|=
literal|false
decl_stmt|;
DECL|field|enableHeartbeat
specifier|private
name|boolean
name|enableHeartbeat
init|=
literal|false
decl_stmt|;
DECL|field|enableLocalHeartbeat
specifier|private
name|boolean
name|enableLocalHeartbeat
init|=
literal|false
decl_stmt|;
DECL|field|enableStateStore
specifier|private
name|boolean
name|enableStateStore
init|=
literal|false
decl_stmt|;
DECL|field|enableMetrics
specifier|private
name|boolean
name|enableMetrics
init|=
literal|false
decl_stmt|;
DECL|field|enableQuota
specifier|private
name|boolean
name|enableQuota
init|=
literal|false
decl_stmt|;
DECL|method|RouterConfigBuilder (Configuration configuration)
specifier|public
name|RouterConfigBuilder
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|configuration
expr_stmt|;
block|}
DECL|method|RouterConfigBuilder ()
specifier|public
name|RouterConfigBuilder
parameter_list|()
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|all ()
specifier|public
name|RouterConfigBuilder
name|all
parameter_list|()
block|{
name|this
operator|.
name|enableRpcServer
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableAdminServer
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableHttpServer
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableHeartbeat
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableLocalHeartbeat
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableStateStore
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|enableMetrics
operator|=
literal|true
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|enableLocalHeartbeat (boolean enable)
specifier|public
name|RouterConfigBuilder
name|enableLocalHeartbeat
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableLocalHeartbeat
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|rpc (boolean enable)
specifier|public
name|RouterConfigBuilder
name|rpc
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableRpcServer
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|admin (boolean enable)
specifier|public
name|RouterConfigBuilder
name|admin
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableAdminServer
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|http (boolean enable)
specifier|public
name|RouterConfigBuilder
name|http
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableHttpServer
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|heartbeat (boolean enable)
specifier|public
name|RouterConfigBuilder
name|heartbeat
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableHeartbeat
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|stateStore (boolean enable)
specifier|public
name|RouterConfigBuilder
name|stateStore
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableStateStore
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|metrics (boolean enable)
specifier|public
name|RouterConfigBuilder
name|metrics
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableMetrics
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|quota (boolean enable)
specifier|public
name|RouterConfigBuilder
name|quota
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
name|this
operator|.
name|enableQuota
operator|=
name|enable
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|rpc ()
specifier|public
name|RouterConfigBuilder
name|rpc
parameter_list|()
block|{
return|return
name|this
operator|.
name|rpc
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|admin ()
specifier|public
name|RouterConfigBuilder
name|admin
parameter_list|()
block|{
return|return
name|this
operator|.
name|admin
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|http ()
specifier|public
name|RouterConfigBuilder
name|http
parameter_list|()
block|{
return|return
name|this
operator|.
name|http
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|heartbeat ()
specifier|public
name|RouterConfigBuilder
name|heartbeat
parameter_list|()
block|{
return|return
name|this
operator|.
name|heartbeat
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|stateStore ()
specifier|public
name|RouterConfigBuilder
name|stateStore
parameter_list|()
block|{
return|return
name|this
operator|.
name|stateStore
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|metrics ()
specifier|public
name|RouterConfigBuilder
name|metrics
parameter_list|()
block|{
return|return
name|this
operator|.
name|metrics
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|quota ()
specifier|public
name|RouterConfigBuilder
name|quota
parameter_list|()
block|{
return|return
name|this
operator|.
name|quota
argument_list|(
literal|true
argument_list|)
return|;
block|}
DECL|method|build ()
specifier|public
name|Configuration
name|build
parameter_list|()
block|{
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_STORE_ENABLE
argument_list|,
name|this
operator|.
name|enableStateStore
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_RPC_ENABLE
argument_list|,
name|this
operator|.
name|enableRpcServer
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_ADMIN_ENABLE
argument_list|,
name|this
operator|.
name|enableAdminServer
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_HTTP_ENABLE
argument_list|,
name|this
operator|.
name|enableHttpServer
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_HEARTBEAT_ENABLE
argument_list|,
name|this
operator|.
name|enableHeartbeat
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_MONITOR_LOCAL_NAMENODE
argument_list|,
name|this
operator|.
name|enableLocalHeartbeat
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_METRICS_ENABLE
argument_list|,
name|this
operator|.
name|enableMetrics
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_ROUTER_QUOTA_ENABLE
argument_list|,
name|this
operator|.
name|enableQuota
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

