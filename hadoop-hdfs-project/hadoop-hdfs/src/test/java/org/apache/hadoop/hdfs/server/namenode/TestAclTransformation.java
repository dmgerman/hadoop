begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|AclTransformation
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AclException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|AclTransformation
import|;
end_import

begin_comment
comment|/**  * Tests operations that modify ACLs.  All tests in this suite have been  * cross-validated against Linux setfacl/getfacl to check for consistency of the  * HDFS implementation.  */
end_comment

begin_class
DECL|class|TestAclTransformation
specifier|public
class|class
name|TestAclTransformation
block|{
DECL|field|ACL_SPEC_TOO_LARGE
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|AclEntry
argument_list|>
name|ACL_SPEC_TOO_LARGE
decl_stmt|;
static|static
block|{
name|ACL_SPEC_TOO_LARGE
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
literal|33
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|33
condition|;
operator|++
name|i
control|)
block|{
name|ACL_SPEC_TOO_LARGE
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"user"
operator|+
name|i
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpec ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpec
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"execs"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"execs"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecUnchanged ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecUnchanged
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"clark"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"execs"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecAccessMaskCalculated ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecAccessMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecDefaultMaskCalculated ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecDefaultMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecDefaultMaskPreserved ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecDefaultMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecAccessMaskPreserved ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecAccessMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecAutomaticDefaultUser ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecAutomaticDefaultUser
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecAutomaticDefaultGroup ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecAutomaticDefaultGroup
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecAutomaticDefaultOther ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecAutomaticDefaultOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterAclEntriesByAclSpecEmptyAclSpec ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecEmptyAclSpec
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
expr|<
name|AclEntry
operator|>
name|newArrayList
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testFilterAclEntriesByAclSpecRemoveAccessMaskRequired ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecRemoveAccessMaskRequired
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|)
argument_list|)
decl_stmt|;
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testFilterAclEntriesByAclSpecRemoveDefaultMaskRequired ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecRemoveDefaultMaskRequired
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|)
argument_list|)
decl_stmt|;
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testFilterAclEntriesByAclSpecInputTooLarge ()
specifier|public
name|void
name|testFilterAclEntriesByAclSpecInputTooLarge
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|filterAclEntriesByAclSpec
argument_list|(
name|existing
argument_list|,
name|ACL_SPEC_TOO_LARGE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterDefaultAclEntries ()
specifier|public
name|void
name|testFilterDefaultAclEntries
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|filterDefaultAclEntries
argument_list|(
name|existing
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilterDefaultAclEntriesUnchanged ()
specifier|public
name|void
name|testFilterDefaultAclEntriesUnchanged
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|filterDefaultAclEntries
argument_list|(
name|existing
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntries ()
specifier|public
name|void
name|testMergeAclEntries
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesUnchanged ()
specifier|public
name|void
name|testMergeAclEntriesUnchanged
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesMultipleNewBeforeExisting ()
specifier|public
name|void
name|testMergeAclEntriesMultipleNewBeforeExisting
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"clark"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"clark"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesAccessMaskCalculated ()
specifier|public
name|void
name|testMergeAclEntriesAccessMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesDefaultMaskCalculated ()
specifier|public
name|void
name|testMergeAclEntriesDefaultMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesDefaultMaskPreserved ()
specifier|public
name|void
name|testMergeAclEntriesDefaultMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|FsAction
operator|.
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesAccessMaskPreserved ()
specifier|public
name|void
name|testMergeAclEntriesAccessMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesAutomaticDefaultUser ()
specifier|public
name|void
name|testMergeAclEntriesAutomaticDefaultUser
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesAutomaticDefaultGroup ()
specifier|public
name|void
name|testMergeAclEntriesAutomaticDefaultGroup
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesAutomaticDefaultOther ()
specifier|public
name|void
name|testMergeAclEntriesAutomaticDefaultOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesProvidedAccessMask ()
specifier|public
name|void
name|testMergeAclEntriesProvidedAccessMask
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesProvidedDefaultMask ()
specifier|public
name|void
name|testMergeAclEntriesProvidedDefaultMask
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMergeAclEntriesEmptyAclSpec ()
specifier|public
name|void
name|testMergeAclEntriesEmptyAclSpec
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
expr|<
name|AclEntry
operator|>
name|newArrayList
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testMergeAclEntriesInputTooLarge ()
specifier|public
name|void
name|testMergeAclEntriesInputTooLarge
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|ACL_SPEC_TOO_LARGE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testMergeAclEntriesResultTooLarge ()
specifier|public
name|void
name|testMergeAclEntriesResultTooLarge
parameter_list|()
throws|throws
name|AclException
block|{
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
name|aclBuilder
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|28
condition|;
operator|++
name|i
control|)
block|{
name|aclBuilder
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"user"
operator|+
name|i
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|aclBuilder
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
name|aclBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testMergeAclEntriesDuplicateEntries ()
specifier|public
name|void
name|testMergeAclEntriesDuplicateEntries
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"clark"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testMergeAclEntriesNamedMask ()
specifier|public
name|void
name|testMergeAclEntriesNamedMask
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testMergeAclEntriesNamedOther ()
specifier|public
name|void
name|testMergeAclEntriesNamedOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|mergeAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntries ()
specifier|public
name|void
name|testReplaceAclEntries
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesUnchanged ()
specifier|public
name|void
name|testReplaceAclEntriesUnchanged
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|existing
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesAccessMaskCalculated ()
specifier|public
name|void
name|testReplaceAclEntriesAccessMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesDefaultMaskCalculated ()
specifier|public
name|void
name|testReplaceAclEntriesDefaultMaskCalculated
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesDefaultMaskPreserved ()
specifier|public
name|void
name|testReplaceAclEntriesDefaultMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesAccessMaskPreserved ()
specifier|public
name|void
name|testReplaceAclEntriesAccessMaskPreserved
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesAutomaticDefaultUser ()
specifier|public
name|void
name|testReplaceAclEntriesAutomaticDefaultUser
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesAutomaticDefaultGroup ()
specifier|public
name|void
name|testReplaceAclEntriesAutomaticDefaultGroup
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesAutomaticDefaultOther ()
specifier|public
name|void
name|testReplaceAclEntriesAutomaticDefaultOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceAclEntriesOnlyDefaults ()
specifier|public
name|void
name|testReplaceAclEntriesOnlyDefaults
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|expected
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesInputTooLarge ()
specifier|public
name|void
name|testReplaceAclEntriesInputTooLarge
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|ACL_SPEC_TOO_LARGE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesResultTooLarge ()
specifier|public
name|void
name|testReplaceAclEntriesResultTooLarge
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
literal|32
argument_list|)
decl_stmt|;
name|aclSpec
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|29
condition|;
operator|++
name|i
control|)
block|{
name|aclSpec
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"user"
operator|+
name|i
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|aclSpec
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|aclSpec
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
comment|// The ACL spec now has 32 entries.  Automatic mask calculation will push it
comment|// over the limit to 33.
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesDuplicateEntries ()
specifier|public
name|void
name|testReplaceAclEntriesDuplicateEntries
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"diana"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"clark"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesNamedMask ()
specifier|public
name|void
name|testReplaceAclEntriesNamedMask
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesNamedOther ()
specifier|public
name|void
name|testReplaceAclEntriesNamedOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesMissingUser ()
specifier|public
name|void
name|testReplaceAclEntriesMissingUser
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesMissingGroup ()
specifier|public
name|void
name|testReplaceAclEntriesMissingGroup
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AclException
operator|.
name|class
argument_list|)
DECL|method|testReplaceAclEntriesMissingOther ()
specifier|public
name|void
name|testReplaceAclEntriesMissingOther
parameter_list|()
throws|throws
name|AclException
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|existing
init|=
operator|new
name|ImmutableList
operator|.
name|Builder
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bruce"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"sales"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|replaceAclEntries
argument_list|(
name|existing
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
DECL|method|aclEntry (AclEntryScope scope, AclEntryType type, FsAction permission)
specifier|private
specifier|static
name|AclEntry
name|aclEntry
parameter_list|(
name|AclEntryScope
name|scope
parameter_list|,
name|AclEntryType
name|type
parameter_list|,
name|FsAction
name|permission
parameter_list|)
block|{
return|return
operator|new
name|AclEntry
operator|.
name|Builder
argument_list|()
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setPermission
argument_list|(
name|permission
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|aclEntry (AclEntryScope scope, AclEntryType type, String name, FsAction permission)
specifier|private
specifier|static
name|AclEntry
name|aclEntry
parameter_list|(
name|AclEntryScope
name|scope
parameter_list|,
name|AclEntryType
name|type
parameter_list|,
name|String
name|name
parameter_list|,
name|FsAction
name|permission
parameter_list|)
block|{
return|return
operator|new
name|AclEntry
operator|.
name|Builder
argument_list|()
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setName
argument_list|(
name|name
argument_list|)
operator|.
name|setPermission
argument_list|(
name|permission
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|aclEntry (AclEntryScope scope, AclEntryType type, String name)
specifier|private
specifier|static
name|AclEntry
name|aclEntry
parameter_list|(
name|AclEntryScope
name|scope
parameter_list|,
name|AclEntryType
name|type
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|AclEntry
operator|.
name|Builder
argument_list|()
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setName
argument_list|(
name|name
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|aclEntry (AclEntryScope scope, AclEntryType type)
specifier|private
specifier|static
name|AclEntry
name|aclEntry
parameter_list|(
name|AclEntryScope
name|scope
parameter_list|,
name|AclEntryType
name|type
parameter_list|)
block|{
return|return
operator|new
name|AclEntry
operator|.
name|Builder
argument_list|()
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

