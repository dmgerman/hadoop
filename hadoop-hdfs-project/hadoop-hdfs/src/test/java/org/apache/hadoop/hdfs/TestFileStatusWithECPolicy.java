begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|ErasureCodingPolicyManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ErasureCodingPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestFileStatusWithECPolicy
specifier|public
class|class
name|TestFileStatusWithECPolicy
block|{
DECL|field|cluster
specifier|private
name|MiniDFSCluster
name|cluster
decl_stmt|;
DECL|field|fs
specifier|private
name|DistributedFileSystem
name|fs
decl_stmt|;
DECL|field|client
specifier|private
name|DFSClient
name|client
decl_stmt|;
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|IOException
block|{
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitActive
argument_list|()
expr_stmt|;
name|fs
operator|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
expr_stmt|;
name|client
operator|=
name|fs
operator|.
name|getClient
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after ()
specifier|public
name|void
name|after
parameter_list|()
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testFileStatusWithECPolicy ()
specifier|public
name|void
name|testFileStatusWithECPolicy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test directory not in EC zone
specifier|final
name|Path
name|dir
init|=
operator|new
name|Path
argument_list|(
literal|"/foo"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|mkdir
argument_list|(
name|dir
argument_list|,
name|FsPermission
operator|.
name|getDirDefault
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|client
operator|.
name|getFileInfo
argument_list|(
name|dir
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|getErasureCodingPolicy
argument_list|()
argument_list|)
expr_stmt|;
comment|// test file not in EC zone
specifier|final
name|Path
name|file
init|=
operator|new
name|Path
argument_list|(
name|dir
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|file
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|client
operator|.
name|getFileInfo
argument_list|(
name|file
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|getErasureCodingPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|file
argument_list|,
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|ErasureCodingPolicy
name|ecPolicy1
init|=
name|ErasureCodingPolicyManager
operator|.
name|getSystemDefaultPolicy
argument_list|()
decl_stmt|;
comment|// create EC zone on dir
name|fs
operator|.
name|createErasureCodingZone
argument_list|(
name|dir
argument_list|,
name|ecPolicy1
argument_list|)
expr_stmt|;
specifier|final
name|ErasureCodingPolicy
name|ecPolicy2
init|=
name|client
operator|.
name|getFileInfo
argument_list|(
name|dir
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|getErasureCodingPolicy
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ecPolicy2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ecPolicy1
operator|.
name|equals
argument_list|(
name|ecPolicy2
argument_list|)
argument_list|)
expr_stmt|;
comment|// test file in EC zone
name|fs
operator|.
name|create
argument_list|(
name|file
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|ErasureCodingPolicy
name|ecPolicy3
init|=
name|fs
operator|.
name|getClient
argument_list|()
operator|.
name|getFileInfo
argument_list|(
name|file
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|getErasureCodingPolicy
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ecPolicy3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ecPolicy1
operator|.
name|equals
argument_list|(
name|ecPolicy3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

