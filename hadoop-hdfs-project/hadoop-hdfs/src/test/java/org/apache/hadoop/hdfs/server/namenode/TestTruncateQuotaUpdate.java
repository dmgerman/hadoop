begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|PermissionStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockInfoContiguous
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
operator|.
name|FileDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
operator|.
name|FileDiffList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
operator|.
name|FileWithSnapshotFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|internal
operator|.
name|util
operator|.
name|reflection
operator|.
name|Whitebox
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Make sure we correctly update the quota usage for truncate.  * We need to cover the following cases:  * 1. No snapshot, truncate to 0  * 2. No snapshot, truncate at block boundary  * 3. No snapshot, not on block boundary  * 4~6. With snapshot, all the current blocks are included in latest  *      snapshots, repeat 1~3  * 7~9. With snapshot, blocks in the latest snapshot and blocks in the current  *      file diverged, repeat 1~3  */
end_comment

begin_class
DECL|class|TestTruncateQuotaUpdate
specifier|public
class|class
name|TestTruncateQuotaUpdate
block|{
DECL|field|BLOCKSIZE
specifier|private
specifier|static
specifier|final
name|int
name|BLOCKSIZE
init|=
literal|1024
decl_stmt|;
DECL|field|REPLICATION
specifier|private
specifier|static
specifier|final
name|short
name|REPLICATION
init|=
literal|4
decl_stmt|;
DECL|field|nextMockBlockId
specifier|private
name|long
name|nextMockBlockId
decl_stmt|;
DECL|field|nextMockGenstamp
specifier|private
name|long
name|nextMockGenstamp
decl_stmt|;
DECL|field|nextMockINodeId
specifier|private
name|long
name|nextMockINodeId
decl_stmt|;
annotation|@
name|Test
DECL|method|testTruncateWithoutSnapshot ()
specifier|public
name|void
name|testTruncateWithoutSnapshot
parameter_list|()
block|{
name|INodeFile
name|file
init|=
name|createMockFile
argument_list|(
name|BLOCKSIZE
operator|*
literal|2
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
name|REPLICATION
argument_list|)
decl_stmt|;
comment|// case 1: first truncate to 1.5 blocks
comment|// we truncate 1 blocks, but not on the boundary, thus the diff should
comment|// be -block + (block - 0.5 block) = -0.5 block
name|QuotaCounts
name|count
init|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
name|BLOCKSIZE
operator|/
literal|2
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 2: truncate to 1 block
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
operator|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
operator|)
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 3: truncate to 0
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
operator|(
name|BLOCKSIZE
operator|*
literal|2
operator|+
name|BLOCKSIZE
operator|/
literal|2
operator|)
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTruncateWithSnapshotNoDivergence ()
specifier|public
name|void
name|testTruncateWithSnapshotNoDivergence
parameter_list|()
block|{
name|INodeFile
name|file
init|=
name|createMockFile
argument_list|(
name|BLOCKSIZE
operator|*
literal|2
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
name|REPLICATION
argument_list|)
decl_stmt|;
name|addSnapshotFeature
argument_list|(
name|file
argument_list|,
name|file
operator|.
name|getBlocks
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 4: truncate to 1.5 blocks
comment|// all the blocks are in snapshot. truncate need to allocate a new block
comment|// diff should be +BLOCKSIZE
name|QuotaCounts
name|count
init|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BLOCKSIZE
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 2: truncate to 1 block
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 3: truncate to 0
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTruncateWithSnapshotAndDivergence ()
specifier|public
name|void
name|testTruncateWithSnapshotAndDivergence
parameter_list|()
block|{
name|INodeFile
name|file
init|=
name|createMockFile
argument_list|(
name|BLOCKSIZE
operator|*
literal|2
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
name|REPLICATION
argument_list|)
decl_stmt|;
name|BlockInfo
index|[]
name|blocks
init|=
operator|new
name|BlockInfo
index|[
name|file
operator|.
name|getBlocks
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|file
operator|.
name|getBlocks
argument_list|()
argument_list|,
literal|0
argument_list|,
name|blocks
argument_list|,
literal|0
argument_list|,
name|blocks
operator|.
name|length
argument_list|)
expr_stmt|;
name|addSnapshotFeature
argument_list|(
name|file
argument_list|,
name|blocks
argument_list|)
expr_stmt|;
comment|// Update the last two blocks in the current inode
name|file
operator|.
name|getBlocks
argument_list|()
index|[
literal|1
index|]
operator|=
name|newBlock
argument_list|(
name|BLOCKSIZE
argument_list|,
name|REPLICATION
argument_list|)
expr_stmt|;
name|file
operator|.
name|getBlocks
argument_list|()
index|[
literal|2
index|]
operator|=
name|newBlock
argument_list|(
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
name|REPLICATION
argument_list|)
expr_stmt|;
comment|// case 7: truncate to 1.5 block
comment|// the block for truncation is not in snapshot, diff should be the same
comment|// as case 1
name|QuotaCounts
name|count
init|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
name|BLOCKSIZE
operator|/
literal|2
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 8: truncate to 2 blocks
comment|// the original 2.5 blocks are in snapshot. the block truncated is not
comment|// in snapshot. diff should be -0.5 block
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
name|BLOCKSIZE
operator|/
literal|2
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
comment|// case 9: truncate to 0
name|count
operator|=
operator|new
name|QuotaCounts
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|file
operator|.
name|computeQuotaDeltaForTruncate
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
operator|(
name|BLOCKSIZE
operator|+
name|BLOCKSIZE
operator|/
literal|2
operator|)
operator|*
name|REPLICATION
argument_list|,
name|count
operator|.
name|getStorageSpace
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createMockFile (long size, short replication)
specifier|private
name|INodeFile
name|createMockFile
parameter_list|(
name|long
name|size
parameter_list|,
name|short
name|replication
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|BlockInfo
argument_list|>
name|blocks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|long
name|createdSize
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|createdSize
operator|<
name|size
condition|)
block|{
name|long
name|blockSize
init|=
name|Math
operator|.
name|min
argument_list|(
name|BLOCKSIZE
argument_list|,
name|size
operator|-
name|createdSize
argument_list|)
decl_stmt|;
name|BlockInfo
name|bi
init|=
name|newBlock
argument_list|(
name|blockSize
argument_list|,
name|replication
argument_list|)
decl_stmt|;
name|blocks
operator|.
name|add
argument_list|(
name|bi
argument_list|)
expr_stmt|;
name|createdSize
operator|+=
name|BLOCKSIZE
expr_stmt|;
block|}
name|PermissionStatus
name|perm
init|=
operator|new
name|PermissionStatus
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|0x1ff
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|INodeFile
argument_list|(
operator|++
name|nextMockINodeId
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
name|perm
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|blocks
operator|.
name|toArray
argument_list|(
operator|new
name|BlockInfo
index|[
name|blocks
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|,
name|replication
argument_list|,
name|BLOCKSIZE
argument_list|)
return|;
block|}
DECL|method|newBlock (long size, short replication)
specifier|private
name|BlockInfo
name|newBlock
parameter_list|(
name|long
name|size
parameter_list|,
name|short
name|replication
parameter_list|)
block|{
name|Block
name|b
init|=
operator|new
name|Block
argument_list|(
operator|++
name|nextMockBlockId
argument_list|,
name|size
argument_list|,
operator|++
name|nextMockGenstamp
argument_list|)
decl_stmt|;
return|return
operator|new
name|BlockInfoContiguous
argument_list|(
name|b
argument_list|,
name|replication
argument_list|)
return|;
block|}
DECL|method|addSnapshotFeature (INodeFile file, BlockInfo[] blocks)
specifier|private
specifier|static
name|void
name|addSnapshotFeature
parameter_list|(
name|INodeFile
name|file
parameter_list|,
name|BlockInfo
index|[]
name|blocks
parameter_list|)
block|{
name|FileDiff
name|diff
init|=
name|mock
argument_list|(
name|FileDiff
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|diff
operator|.
name|getBlocks
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|blocks
argument_list|)
expr_stmt|;
name|FileDiffList
name|diffList
init|=
operator|new
name|FileDiffList
argument_list|()
decl_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|diffList
argument_list|,
literal|"diffs"
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|FileDiff
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|ArrayList
argument_list|<
name|FileDiff
argument_list|>
name|diffs
init|=
operator|(
operator|(
name|ArrayList
argument_list|<
name|FileDiff
argument_list|>
operator|)
name|Whitebox
operator|.
name|getInternalState
argument_list|(
name|diffList
argument_list|,
literal|"diffs"
argument_list|)
operator|)
decl_stmt|;
name|diffs
operator|.
name|add
argument_list|(
name|diff
argument_list|)
expr_stmt|;
name|FileWithSnapshotFeature
name|sf
init|=
operator|new
name|FileWithSnapshotFeature
argument_list|(
name|diffList
argument_list|)
decl_stmt|;
name|file
operator|.
name|addFeature
argument_list|(
name|sf
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

