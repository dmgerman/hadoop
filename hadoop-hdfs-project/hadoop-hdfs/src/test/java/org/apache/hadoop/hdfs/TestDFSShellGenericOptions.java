begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsShell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ToolRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestDFSShellGenericOptions
specifier|public
class|class
name|TestDFSShellGenericOptions
block|{
annotation|@
name|Test
DECL|method|testDFSCommand ()
specifier|public
name|void
name|testDFSCommand
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|namenode
init|=
literal|null
decl_stmt|;
name|MiniDFSCluster
name|cluster
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|HdfsConfiguration
argument_list|()
decl_stmt|;
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|namenode
operator|=
name|FileSystem
operator|.
name|getDefaultUri
argument_list|(
name|conf
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[
literal|4
index|]
decl_stmt|;
name|args
index|[
literal|2
index|]
operator|=
literal|"-mkdir"
expr_stmt|;
name|args
index|[
literal|3
index|]
operator|=
literal|"/data"
expr_stmt|;
name|testFsOption
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
name|testConfOption
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
name|testPropertyOption
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|method|testFsOption (String [] args, String namenode)
specifier|private
name|void
name|testFsOption
parameter_list|(
name|String
index|[]
name|args
parameter_list|,
name|String
name|namenode
parameter_list|)
block|{
comment|// prepare arguments to create a directory /data
name|args
index|[
literal|0
index|]
operator|=
literal|"-fs"
expr_stmt|;
name|args
index|[
literal|1
index|]
operator|=
name|namenode
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
block|}
DECL|method|testConfOption (String[] args, String namenode)
specifier|private
name|void
name|testConfOption
parameter_list|(
name|String
index|[]
name|args
parameter_list|,
name|String
name|namenode
parameter_list|)
block|{
comment|// prepare configuration hdfs-site.xml
name|File
name|configDir
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
literal|"build"
argument_list|,
literal|"test"
argument_list|)
argument_list|,
literal|"minidfs"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|configDir
operator|.
name|mkdirs
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|siteFile
init|=
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"hdfs-site.xml"
argument_list|)
decl_stmt|;
name|PrintWriter
name|pw
decl_stmt|;
try|try
block|{
name|pw
operator|=
operator|new
name|PrintWriter
argument_list|(
name|siteFile
argument_list|)
expr_stmt|;
name|pw
operator|.
name|print
argument_list|(
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n"
operator|+
literal|"<configuration>\n"
operator|+
literal|"<property>\n"
operator|+
literal|"<name>fs.defaultFS</name>\n"
operator|+
literal|"<value>"
operator|+
name|namenode
operator|+
literal|"</value>\n"
operator|+
literal|"</property>\n"
operator|+
literal|"</configuration>\n"
argument_list|)
expr_stmt|;
name|pw
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// prepare arguments to create a directory /data
name|args
index|[
literal|0
index|]
operator|=
literal|"-conf"
expr_stmt|;
name|args
index|[
literal|1
index|]
operator|=
name|siteFile
operator|.
name|getPath
argument_list|()
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|siteFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|configDir
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testPropertyOption (String[] args, String namenode)
specifier|private
name|void
name|testPropertyOption
parameter_list|(
name|String
index|[]
name|args
parameter_list|,
name|String
name|namenode
parameter_list|)
block|{
comment|// prepare arguments to create a directory /data
name|args
index|[
literal|0
index|]
operator|=
literal|"-D"
expr_stmt|;
name|args
index|[
literal|1
index|]
operator|=
literal|"fs.defaultFS="
operator|+
name|namenode
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
name|namenode
argument_list|)
expr_stmt|;
block|}
DECL|method|execute (String [] args, String namenode)
specifier|private
name|void
name|execute
parameter_list|(
name|String
index|[]
name|args
parameter_list|,
name|String
name|namenode
parameter_list|)
block|{
name|FsShell
name|shell
init|=
operator|new
name|FsShell
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ToolRunner
operator|.
name|run
argument_list|(
name|shell
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|DFSUtilClient
operator|.
name|getNNUri
argument_list|(
name|DFSUtilClient
operator|.
name|getNNAddress
argument_list|(
name|namenode
argument_list|)
argument_list|)
argument_list|,
name|shell
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Directory does not get created"
argument_list|,
name|fs
operator|.
name|isDirectory
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/data"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/data"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|fs
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{         }
block|}
block|}
block|}
block|}
end_class

end_unit

