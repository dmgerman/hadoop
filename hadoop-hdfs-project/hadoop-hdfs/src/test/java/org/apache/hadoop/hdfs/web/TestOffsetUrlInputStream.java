begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.web
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|TestByteRangeInputStream
operator|.
name|MockHttpURLConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsFileSystem
operator|.
name|OffsetUrlInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsFileSystem
operator|.
name|OffsetUrlOpener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestOffsetUrlInputStream
specifier|public
class|class
name|TestOffsetUrlInputStream
block|{
annotation|@
name|Test
DECL|method|testRemoveOffset ()
specifier|public
name|void
name|testRemoveOffset
parameter_list|()
throws|throws
name|IOException
block|{
block|{
comment|//no offset
name|String
name|s
init|=
literal|"http://test/Abc?Length=99"
decl_stmt|;
name|assertEquals
argument_list|(
name|s
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//no parameters
name|String
name|s
init|=
literal|"http://test/Abc"
decl_stmt|;
name|assertEquals
argument_list|(
name|s
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//offset as first parameter
name|String
name|s
init|=
literal|"http://test/Abc?offset=10&Length=99"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://test/Abc?Length=99"
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//offset as second parameter
name|String
name|s
init|=
literal|"http://test/Abc?op=read&OFFset=10&Length=99"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://test/Abc?op=read&Length=99"
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//offset as last parameter
name|String
name|s
init|=
literal|"http://test/Abc?Length=99&offset=10"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://test/Abc?Length=99"
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//offset as the only parameter
name|String
name|s
init|=
literal|"http://test/Abc?offset=10"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"http://test/Abc"
argument_list|,
name|WebHdfsFileSystem
operator|.
name|removeOffsetParam
argument_list|(
operator|new
name|URL
argument_list|(
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testByteRange ()
specifier|public
name|void
name|testByteRange
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|String
name|uri
init|=
name|WebHdfsFileSystem
operator|.
name|SCHEME
operator|+
literal|"://localhost:50070/"
decl_stmt|;
specifier|final
name|WebHdfsFileSystem
name|webhdfs
init|=
operator|(
name|WebHdfsFileSystem
operator|)
name|FileSystem
operator|.
name|get
argument_list|(
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|OffsetUrlOpener
name|ospy
init|=
name|spy
argument_list|(
name|webhdfs
operator|.
expr|new
name|OffsetUrlOpener
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://test/"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
operator|new
name|MockHttpURLConnection
argument_list|(
name|ospy
operator|.
name|getURL
argument_list|()
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|ospy
argument_list|)
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|OffsetUrlOpener
name|rspy
init|=
name|spy
argument_list|(
name|webhdfs
operator|.
expr|new
name|OffsetUrlOpener
argument_list|(
operator|(
name|URL
operator|)
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
operator|new
name|MockHttpURLConnection
argument_list|(
name|rspy
operator|.
name|getURL
argument_list|()
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|rspy
argument_list|)
operator|.
name|openConnection
argument_list|()
expr_stmt|;
specifier|final
name|OffsetUrlInputStream
name|is
init|=
operator|new
name|OffsetUrlInputStream
argument_list|(
name|ospy
argument_list|,
name|rspy
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getPos wrong"
argument_list|,
literal|0
argument_list|,
name|is
operator|.
name|getPos
argument_list|()
argument_list|)
expr_stmt|;
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
literal|"Initial call made incorrectly (Range Check)"
argument_list|,
name|ospy
operator|.
name|openConnection
argument_list|()
operator|.
name|getRequestProperty
argument_list|(
literal|"Range"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getPos should be 1 after reading one byte"
argument_list|,
literal|1
argument_list|,
name|is
operator|.
name|getPos
argument_list|()
argument_list|)
expr_stmt|;
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getPos should be 2 after reading two bytes"
argument_list|,
literal|2
argument_list|,
name|is
operator|.
name|getPos
argument_list|()
argument_list|)
expr_stmt|;
comment|// No additional connections should have been made (no seek)
name|rspy
operator|.
name|setURL
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://resolvedurl/"
argument_list|)
argument_list|)
expr_stmt|;
name|is
operator|.
name|seek
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"getPos should be 101 after reading one byte"
argument_list|,
literal|101
argument_list|,
name|is
operator|.
name|getPos
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|rspy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|is
operator|.
name|seek
argument_list|(
literal|101
argument_list|)
expr_stmt|;
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|rspy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|openConnection
argument_list|()
expr_stmt|;
comment|// Seek to 101 should not result in another request"
name|is
operator|.
name|seek
argument_list|(
literal|2500
argument_list|)
expr_stmt|;
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
operator|(
operator|(
name|MockHttpURLConnection
operator|)
name|rspy
operator|.
name|openConnection
argument_list|()
operator|)
operator|.
name|setResponseCode
argument_list|(
literal|206
argument_list|)
expr_stmt|;
name|is
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
try|try
block|{
name|is
operator|.
name|read
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Exception should be thrown when 206 response is given "
operator|+
literal|"but 200 is expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|WebHdfsFileSystem
operator|.
name|LOG
operator|.
name|info
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

