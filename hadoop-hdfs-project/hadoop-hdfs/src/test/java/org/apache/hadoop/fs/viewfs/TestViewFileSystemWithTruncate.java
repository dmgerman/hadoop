begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSNNTopology
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Verify truncate through ViewFileSystem functionality.  *  */
end_comment

begin_class
DECL|class|TestViewFileSystemWithTruncate
specifier|public
class|class
name|TestViewFileSystemWithTruncate
block|{
DECL|field|cluster
specifier|private
specifier|static
name|MiniDFSCluster
name|cluster
decl_stmt|;
DECL|field|clusterConf
specifier|private
specifier|static
name|Configuration
name|clusterConf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|fHdfs
specifier|private
specifier|static
name|FileSystem
name|fHdfs
decl_stmt|;
DECL|field|fsView
specifier|private
name|FileSystem
name|fsView
decl_stmt|;
DECL|field|fsViewConf
specifier|private
name|Configuration
name|fsViewConf
decl_stmt|;
DECL|field|fsTarget
specifier|private
name|FileSystem
name|fsTarget
decl_stmt|;
DECL|field|targetTestRoot
DECL|field|mountOnNn1
specifier|private
name|Path
name|targetTestRoot
decl_stmt|,
name|mountOnNn1
decl_stmt|;
DECL|field|fileSystemTestHelper
specifier|private
name|FileSystemTestHelper
name|fileSystemTestHelper
init|=
operator|new
name|FileSystemTestHelper
argument_list|(
literal|"/tmp/TestViewFileSystemWithXAttrs"
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|clusterSetupAtBeginning ()
specifier|public
specifier|static
name|void
name|clusterSetupAtBeginning
parameter_list|()
throws|throws
name|IOException
block|{
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|clusterConf
argument_list|)
operator|.
name|nnTopology
argument_list|(
name|MiniDFSNNTopology
operator|.
name|simpleFederatedTopology
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|2
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitClusterUp
argument_list|()
expr_stmt|;
name|fHdfs
operator|=
name|cluster
operator|.
name|getFileSystem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|clusterShutdownAtEnd ()
specifier|public
specifier|static
name|void
name|clusterShutdownAtEnd
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fsTarget
operator|=
name|fHdfs
expr_stmt|;
name|targetTestRoot
operator|=
name|fileSystemTestHelper
operator|.
name|getAbsoluteTestRootPath
argument_list|(
name|fsTarget
argument_list|)
expr_stmt|;
name|fsTarget
operator|.
name|delete
argument_list|(
name|targetTestRoot
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fsTarget
operator|.
name|mkdirs
argument_list|(
name|targetTestRoot
argument_list|)
expr_stmt|;
name|fsViewConf
operator|=
name|ViewFileSystemTestSetup
operator|.
name|createConfig
argument_list|()
expr_stmt|;
name|setupMountPoints
argument_list|()
expr_stmt|;
name|fsView
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|fsViewConf
argument_list|)
expr_stmt|;
block|}
DECL|method|setupMountPoints ()
specifier|private
name|void
name|setupMountPoints
parameter_list|()
block|{
name|mountOnNn1
operator|=
operator|new
name|Path
argument_list|(
literal|"/mountOnNn1"
argument_list|)
expr_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|fsViewConf
argument_list|,
name|mountOnNn1
operator|.
name|toString
argument_list|()
argument_list|,
name|targetTestRoot
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|fsTarget
operator|.
name|delete
argument_list|(
name|fileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsTarget
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testTruncateWithViewFileSystem ()
specifier|public
name|void
name|testTruncateWithViewFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|mountOnNn1
operator|+
literal|"/ttest"
argument_list|)
decl_stmt|;
name|Path
name|hdfFilepath
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/TestViewFileSystemWithXAttrs/ttest"
argument_list|)
decl_stmt|;
name|FSDataOutputStream
name|out
init|=
name|fsView
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|out
operator|.
name|writeBytes
argument_list|(
literal|"drtatedasfdasfgdfas"
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|int
name|newLength
init|=
literal|10
decl_stmt|;
name|boolean
name|isReady
init|=
name|fsView
operator|.
name|truncate
argument_list|(
name|filePath
argument_list|,
name|newLength
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|isReady
condition|)
block|{
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
try|try
block|{
return|return
name|cluster
operator|.
name|getFileSystem
argument_list|(
literal|0
argument_list|)
operator|.
name|isFileClosed
argument_list|(
name|hdfFilepath
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
block|}
argument_list|,
literal|100
argument_list|,
literal|60
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
comment|// file length should be 10 after truncate
name|assertEquals
argument_list|(
name|newLength
argument_list|,
name|fsView
operator|.
name|getFileStatus
argument_list|(
name|filePath
argument_list|)
operator|.
name|getLen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

