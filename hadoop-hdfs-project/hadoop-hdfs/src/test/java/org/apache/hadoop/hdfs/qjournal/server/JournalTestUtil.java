begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.qjournal.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
operator|.
name|server
package|;
end_package

begin_comment
comment|/**  * Utilities for testing {@link Journal} instances.  */
end_comment

begin_class
DECL|class|JournalTestUtil
specifier|public
class|class
name|JournalTestUtil
block|{
comment|/**    * Corrupt the cache of a {@link Journal} to simulate some corrupt entries    * being present.    *    * @param txid The transaction ID whose containing buffer in the cache    *             should be corrupted.    * @param journal The journal whose cache should be corrupted.    */
DECL|method|corruptJournaledEditsCache (long txid, Journal journal)
specifier|public
specifier|static
name|void
name|corruptJournaledEditsCache
parameter_list|(
name|long
name|txid
parameter_list|,
name|Journal
name|journal
parameter_list|)
block|{
name|JournaledEditsCache
name|cache
init|=
name|journal
operator|.
name|getJournaledEditsCache
argument_list|()
decl_stmt|;
name|byte
index|[]
name|buf
init|=
name|cache
operator|.
name|getRawDataForTests
argument_list|(
name|txid
argument_list|)
decl_stmt|;
comment|// Change a few arbitrary bytes in the buffer
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|buf
operator|.
name|length
condition|;
name|i
operator|+=
literal|9
control|)
block|{
name|buf
index|[
name|i
index|]
operator|=
literal|0
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|3
init|;
name|i
operator|<
name|buf
operator|.
name|length
condition|;
name|i
operator|+=
literal|9
control|)
block|{
name|buf
index|[
name|i
index|]
operator|+=
literal|10
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|6
init|;
name|i
operator|<
name|buf
operator|.
name|length
condition|;
name|i
operator|+=
literal|9
control|)
block|{
name|buf
index|[
name|i
index|]
operator|-=
literal|10
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

