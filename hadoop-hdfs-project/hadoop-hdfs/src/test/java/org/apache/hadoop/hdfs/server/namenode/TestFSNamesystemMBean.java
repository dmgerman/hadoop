begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|util
operator|.
name|ajax
operator|.
name|JSON
import|;
end_import

begin_comment
comment|/**  * Class for testing {@link NameNodeMXBean} implementation  */
end_comment

begin_class
DECL|class|TestFSNamesystemMBean
specifier|public
class|class
name|TestFSNamesystemMBean
block|{
comment|/**    * MBeanClient tries to access FSNamesystem/FSNamesystemState/NameNodeInfo    * JMX properties. If it can access all the properties, the test is    * considered successful.    */
DECL|class|MBeanClient
specifier|private
specifier|static
class|class
name|MBeanClient
extends|extends
name|Thread
block|{
DECL|field|succeeded
specifier|private
name|boolean
name|succeeded
init|=
literal|false
decl_stmt|;
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|MBeanServer
name|mbs
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
comment|// Metrics that belong to "FSNamesystem", these are metrics that
comment|// come from hadoop metrics framework for the class FSNamesystem.
name|ObjectName
name|mxbeanNamefsn
init|=
operator|new
name|ObjectName
argument_list|(
literal|"Hadoop:service=NameNode,name=FSNamesystem"
argument_list|)
decl_stmt|;
name|Integer
name|blockCapacity
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNamefsn
argument_list|,
literal|"BlockCapacity"
argument_list|)
argument_list|)
decl_stmt|;
comment|// Metrics that belong to "FSNamesystemState".
comment|// These are metrics that FSNamesystem registers directly with MBeanServer.
name|ObjectName
name|mxbeanNameFsns
init|=
operator|new
name|ObjectName
argument_list|(
literal|"Hadoop:service=NameNode,name=FSNamesystemState"
argument_list|)
decl_stmt|;
name|String
name|FSState
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"FSState"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|blocksTotal
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"BlocksTotal"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|capacityTotal
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"CapacityTotal"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|capacityRemaining
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"CapacityRemaining"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|capacityUsed
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"CapacityUsed"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|filesTotal
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"FilesTotal"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|pendingReplicationBlocks
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"PendingReplicationBlocks"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|underReplicatedBlocks
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"UnderReplicatedBlocks"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|scheduledReplicationBlocks
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"ScheduledReplicationBlocks"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|totalLoad
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"TotalLoad"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numLiveDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumLiveDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numDeadDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumDeadDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numStaleDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumStaleDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numDecomLiveDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumDecomLiveDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numDecomDeadDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumDecomDeadDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numDecommissioningDataNodes
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumDecommissioningDataNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|snapshotStats
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"SnapshotStats"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|MaxObjects
init|=
call|(
name|Long
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"MaxObjects"
argument_list|)
argument_list|)
decl_stmt|;
name|Integer
name|numStaleStorages
init|=
call|(
name|Integer
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"NumStaleStorages"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|topUsers
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameFsns
argument_list|,
literal|"TopUserOpCounts"
argument_list|)
argument_list|)
decl_stmt|;
comment|// Metrics that belong to "NameNodeInfo".
comment|// These are metrics that FSNamesystem registers directly with MBeanServer.
name|ObjectName
name|mxbeanNameNni
init|=
operator|new
name|ObjectName
argument_list|(
literal|"Hadoop:service=NameNode,name=NameNodeInfo"
argument_list|)
decl_stmt|;
name|String
name|safemode
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameNni
argument_list|,
literal|"Safemode"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|liveNodes
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameNni
argument_list|,
literal|"LiveNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|deadNodes
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameNni
argument_list|,
literal|"DeadNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|decomNodes
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameNni
argument_list|,
literal|"DecomNodes"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|corruptFiles
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanNameNni
argument_list|,
literal|"CorruptFiles"
argument_list|)
argument_list|)
decl_stmt|;
name|succeeded
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{       }
block|}
block|}
annotation|@
name|Test
DECL|method|test ()
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|MiniDFSCluster
name|cluster
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitActive
argument_list|()
expr_stmt|;
name|FSNamesystem
name|fsn
init|=
name|cluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|namesystem
decl_stmt|;
name|MBeanServer
name|mbs
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|ObjectName
name|mxbeanName
init|=
operator|new
name|ObjectName
argument_list|(
literal|"Hadoop:service=NameNode,name=FSNamesystemState"
argument_list|)
decl_stmt|;
name|String
name|snapshotStats
init|=
call|(
name|String
call|)
argument_list|(
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanName
argument_list|,
literal|"SnapshotStats"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|stat
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|JSON
operator|.
name|parse
argument_list|(
name|snapshotStats
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|stat
operator|.
name|containsKey
argument_list|(
literal|"SnapshottableDirectories"
argument_list|)
operator|&&
operator|(
name|Long
operator|)
name|stat
operator|.
name|get
argument_list|(
literal|"SnapshottableDirectories"
argument_list|)
operator|==
name|fsn
operator|.
name|getNumSnapshottableDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|stat
operator|.
name|containsKey
argument_list|(
literal|"Snapshots"
argument_list|)
operator|&&
operator|(
name|Long
operator|)
name|stat
operator|.
name|get
argument_list|(
literal|"Snapshots"
argument_list|)
operator|==
name|fsn
operator|.
name|getNumSnapshots
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|pendingDeletionBlocks
init|=
name|mbs
operator|.
name|getAttribute
argument_list|(
name|mxbeanName
argument_list|,
literal|"PendingDeletionBlocks"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|pendingDeletionBlocks
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pendingDeletionBlocks
operator|instanceof
name|Long
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|// The test makes sure JMX request can be processed even if namesystem's
comment|// writeLock is owned by another thread.
annotation|@
name|Test
DECL|method|testWithFSNamesystemWriteLock ()
specifier|public
name|void
name|testWithFSNamesystemWriteLock
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|MiniDFSCluster
name|cluster
init|=
literal|null
decl_stmt|;
name|FSNamesystem
name|fsn
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitActive
argument_list|()
expr_stmt|;
name|fsn
operator|=
name|cluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|namesystem
expr_stmt|;
name|fsn
operator|.
name|writeLock
argument_list|()
expr_stmt|;
name|MBeanClient
name|client
init|=
operator|new
name|MBeanClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|client
operator|.
name|join
argument_list|(
literal|20000
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"JMX calls are blocked when FSNamesystem's writerlock"
operator|+
literal|"is owned by another thread"
argument_list|,
name|client
operator|.
name|succeeded
argument_list|)
expr_stmt|;
name|client
operator|.
name|interrupt
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|fsn
operator|!=
literal|null
operator|&&
name|fsn
operator|.
name|hasWriteLock
argument_list|()
condition|)
block|{
name|fsn
operator|.
name|writeUnlock
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

