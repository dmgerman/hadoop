begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.fsdataset.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|DF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|StorageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_DU_RESERVED_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
operator|.
name|ReservedSpaceCalculator
operator|.
name|ReservedSpaceCalculatorAbsolute
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
operator|.
name|ReservedSpaceCalculator
operator|.
name|ReservedSpaceCalculatorAggressive
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
operator|.
name|ReservedSpaceCalculator
operator|.
name|ReservedSpaceCalculatorConservative
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
operator|.
name|ReservedSpaceCalculator
operator|.
name|ReservedSpaceCalculatorPercentage
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Unit testing for different types of ReservedSpace calculators.  */
end_comment

begin_class
DECL|class|TestReservedSpaceCalculator
specifier|public
class|class
name|TestReservedSpaceCalculator
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|usage
specifier|private
name|DF
name|usage
decl_stmt|;
DECL|field|reserved
specifier|private
name|ReservedSpaceCalculator
name|reserved
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|usage
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|DF
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpaceAbsolute ()
specifier|public
name|void
name|testReservedSpaceAbsolute
parameter_list|()
block|{
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorAbsolute
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test both using global configuration
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
argument_list|,
literal|900
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|10000
argument_list|,
literal|900
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|SSD
argument_list|,
literal|10000
argument_list|,
literal|900
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|ARCHIVE
argument_list|,
literal|10000
argument_list|,
literal|900
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpaceAbsolutePerStorageType ()
specifier|public
name|void
name|testReservedSpaceAbsolutePerStorageType
parameter_list|()
block|{
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorAbsolute
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test DISK
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".disk"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|2300
argument_list|,
literal|500
argument_list|)
expr_stmt|;
comment|// Test SSD
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".ssd"
argument_list|,
literal|750
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|SSD
argument_list|,
literal|1550
argument_list|,
literal|750
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpacePercentage ()
specifier|public
name|void
name|testReservedSpacePercentage
parameter_list|()
block|{
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorPercentage
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test both using global configuration
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|10000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|SSD
argument_list|,
literal|10000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|ARCHIVE
argument_list|,
literal|10000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|4000
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|SSD
argument_list|,
literal|4000
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|ARCHIVE
argument_list|,
literal|4000
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpacePercentagePerStorageType ()
specifier|public
name|void
name|testReservedSpacePercentagePerStorageType
parameter_list|()
block|{
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorPercentage
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test DISK
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".disk"
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|1600
argument_list|,
literal|320
argument_list|)
expr_stmt|;
comment|// Test SSD
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".ssd"
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|SSD
argument_list|,
literal|8001
argument_list|,
literal|4000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpaceConservativePerStorageType ()
specifier|public
name|void
name|testReservedSpaceConservativePerStorageType
parameter_list|()
block|{
comment|// This policy should take the maximum of the two
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorConservative
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test DISK + taking the reserved bytes over percentage,
comment|// as that gives more reserved space
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".disk"
argument_list|,
literal|800
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".disk"
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|,
literal|1600
argument_list|,
literal|800
argument_list|)
expr_stmt|;
comment|// Test ARCHIVE + taking reserved space based on the percentage,
comment|// as that gives more reserved space
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".archive"
argument_list|,
literal|1300
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".archive"
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|ARCHIVE
argument_list|,
literal|6200
argument_list|,
literal|3100
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservedSpaceAggresivePerStorageType ()
specifier|public
name|void
name|testReservedSpaceAggresivePerStorageType
parameter_list|()
block|{
comment|// This policy should take the maximum of the two
name|conf
operator|.
name|setClass
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
name|ReservedSpaceCalculatorAggressive
operator|.
name|class
argument_list|,
name|ReservedSpaceCalculator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Test RAM_DISK + taking the reserved bytes over percentage,
comment|// as that gives less reserved space
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".ram_disk"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".ram_disk"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|RAM_DISK
argument_list|,
literal|1600
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// Test ARCHIVE + taking reserved space based on the percentage,
comment|// as that gives less reserved space
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_KEY
operator|+
literal|".archive"
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_DATANODE_DU_RESERVED_PERCENTAGE_KEY
operator|+
literal|".archive"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|checkReserved
argument_list|(
name|StorageType
operator|.
name|ARCHIVE
argument_list|,
literal|100000
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalStateException
operator|.
name|class
argument_list|)
DECL|method|testInvalidCalculator ()
specifier|public
name|void
name|testInvalidCalculator
parameter_list|()
block|{
name|conf
operator|.
name|set
argument_list|(
name|DFS_DATANODE_DU_RESERVED_CALCULATOR_KEY
argument_list|,
literal|"INVALIDTYPE"
argument_list|)
expr_stmt|;
name|reserved
operator|=
operator|new
name|ReservedSpaceCalculator
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|setUsage
argument_list|(
name|usage
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|StorageType
operator|.
name|DISK
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
DECL|method|checkReserved (StorageType storageType, long totalCapacity, long reservedExpected)
specifier|private
name|void
name|checkReserved
parameter_list|(
name|StorageType
name|storageType
parameter_list|,
name|long
name|totalCapacity
parameter_list|,
name|long
name|reservedExpected
parameter_list|)
block|{
name|when
argument_list|(
name|usage
operator|.
name|getCapacity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|totalCapacity
argument_list|)
expr_stmt|;
name|reserved
operator|=
operator|new
name|ReservedSpaceCalculator
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|setUsage
argument_list|(
name|usage
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|storageType
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|reservedExpected
argument_list|,
name|reserved
operator|.
name|getReserved
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

