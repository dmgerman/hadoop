begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.snapshot
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DistributedFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSNamesystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
operator|.
name|INodeDirectorySnapshottable
operator|.
name|SnapshotDiffReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests snapshot deletion.  */
end_comment

begin_class
DECL|class|TestSnapshotDiffReport
specifier|public
class|class
name|TestSnapshotDiffReport
block|{
DECL|field|seed
specifier|protected
specifier|static
specifier|final
name|long
name|seed
init|=
literal|0
decl_stmt|;
DECL|field|REPLICATION
specifier|protected
specifier|static
specifier|final
name|short
name|REPLICATION
init|=
literal|3
decl_stmt|;
DECL|field|BLOCKSIZE
specifier|protected
specifier|static
specifier|final
name|long
name|BLOCKSIZE
init|=
literal|1024
decl_stmt|;
DECL|field|SNAPSHOTNUMBER
specifier|public
specifier|static
specifier|final
name|int
name|SNAPSHOTNUMBER
init|=
literal|10
decl_stmt|;
DECL|field|dir
specifier|private
specifier|final
name|Path
name|dir
init|=
operator|new
name|Path
argument_list|(
literal|"/TestSnapshot"
argument_list|)
decl_stmt|;
DECL|field|sub1
specifier|private
specifier|final
name|Path
name|sub1
init|=
operator|new
name|Path
argument_list|(
name|dir
argument_list|,
literal|"sub1"
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|protected
name|Configuration
name|conf
decl_stmt|;
DECL|field|cluster
specifier|protected
name|MiniDFSCluster
name|cluster
decl_stmt|;
DECL|field|fsn
specifier|protected
name|FSNamesystem
name|fsn
decl_stmt|;
DECL|field|hdfs
specifier|protected
name|DistributedFileSystem
name|hdfs
decl_stmt|;
DECL|field|snapshotNum
specifier|private
name|int
name|snapshotNum
init|=
literal|0
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
name|REPLICATION
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitActive
argument_list|()
expr_stmt|;
name|fsn
operator|=
name|cluster
operator|.
name|getNamesystem
argument_list|()
expr_stmt|;
name|hdfs
operator|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**     * Create/modify/delete files and create snapshots under a given directory.     */
DECL|method|modifyAndCreateSnapshot (Path modifyDir, Path snapshotDir)
specifier|private
name|void
name|modifyAndCreateSnapshot
parameter_list|(
name|Path
name|modifyDir
parameter_list|,
name|Path
name|snapshotDir
parameter_list|)
throws|throws
name|Exception
block|{
name|Path
name|file10
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file10"
argument_list|)
decl_stmt|;
name|Path
name|file11
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file11"
argument_list|)
decl_stmt|;
name|Path
name|file12
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file12"
argument_list|)
decl_stmt|;
name|Path
name|file13
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file13"
argument_list|)
decl_stmt|;
name|Path
name|file14
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file14"
argument_list|)
decl_stmt|;
name|Path
name|file15
init|=
operator|new
name|Path
argument_list|(
name|modifyDir
argument_list|,
literal|"file15"
argument_list|)
decl_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file10
argument_list|,
name|BLOCKSIZE
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|,
name|seed
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file11
argument_list|,
name|BLOCKSIZE
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|,
name|seed
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file12
argument_list|,
name|BLOCKSIZE
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|,
name|seed
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file13
argument_list|,
name|BLOCKSIZE
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|,
name|seed
argument_list|)
expr_stmt|;
comment|// create snapshot s1
name|hdfs
operator|.
name|allowSnapshot
argument_list|(
name|snapshotDir
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|hdfs
operator|.
name|createSnapshot
argument_list|(
name|snapshotDir
argument_list|,
literal|"s"
operator|+
name|snapshotNum
operator|++
argument_list|)
expr_stmt|;
comment|// delete file11
name|hdfs
operator|.
name|delete
argument_list|(
name|file11
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// modify file12
name|hdfs
operator|.
name|setReplication
argument_list|(
name|file12
argument_list|,
name|REPLICATION
argument_list|)
expr_stmt|;
comment|// modify file13
name|hdfs
operator|.
name|setReplication
argument_list|(
name|file13
argument_list|,
name|REPLICATION
argument_list|)
expr_stmt|;
comment|// create file14
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file14
argument_list|,
name|BLOCKSIZE
argument_list|,
name|REPLICATION
argument_list|,
name|seed
argument_list|)
expr_stmt|;
comment|// create file15
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file15
argument_list|,
name|BLOCKSIZE
argument_list|,
name|REPLICATION
argument_list|,
name|seed
argument_list|)
expr_stmt|;
comment|// create snapshot s2
name|hdfs
operator|.
name|createSnapshot
argument_list|(
name|snapshotDir
argument_list|,
literal|"s"
operator|+
name|snapshotNum
operator|++
argument_list|)
expr_stmt|;
comment|// create file11 again
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|hdfs
argument_list|,
name|file11
argument_list|,
name|BLOCKSIZE
argument_list|,
name|REPLICATION
argument_list|,
name|seed
argument_list|)
expr_stmt|;
comment|// delete file12
name|hdfs
operator|.
name|delete
argument_list|(
name|file12
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// modify file13
name|hdfs
operator|.
name|setReplication
argument_list|(
name|file13
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// delete file14
name|hdfs
operator|.
name|delete
argument_list|(
name|file14
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// modify file15
name|hdfs
operator|.
name|setReplication
argument_list|(
name|file15
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// create snapshot s3 for dir
name|hdfs
operator|.
name|createSnapshot
argument_list|(
name|snapshotDir
argument_list|,
literal|"s"
operator|+
name|snapshotNum
operator|++
argument_list|)
expr_stmt|;
comment|// modify file10
name|hdfs
operator|.
name|setReplication
argument_list|(
name|file10
argument_list|,
call|(
name|short
call|)
argument_list|(
name|REPLICATION
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the functionality of    * {@link FSNamesystem#getSnapshotDiffReport(String, String, String)}.    * TODO: without the definision of a DiffReport class, this test temporarily     * check the output string of {@link SnapshotDiffReport#dump()}     */
annotation|@
name|Test
DECL|method|testDiff ()
specifier|public
name|void
name|testDiff
parameter_list|()
throws|throws
name|Exception
block|{
name|modifyAndCreateSnapshot
argument_list|(
name|sub1
argument_list|,
name|sub1
argument_list|)
expr_stmt|;
name|modifyAndCreateSnapshot
argument_list|(
operator|new
name|Path
argument_list|(
name|sub1
argument_list|,
literal|"subsub1/subsubsub1"
argument_list|)
argument_list|,
name|sub1
argument_list|)
expr_stmt|;
name|SnapshotDiffReport
name|diffs
init|=
name|fsn
operator|.
name|getSnapshotDiffReport
argument_list|(
name|sub1
operator|.
name|toString
argument_list|()
argument_list|,
literal|"s0"
argument_list|,
literal|"s2"
argument_list|)
decl_stmt|;
name|String
name|diffStr
init|=
name|diffs
operator|.
name|dump
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|diffStr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/file15"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"-\t/TestSnapshot/sub1/file12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file13"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"file14"
argument_list|)
argument_list|)
expr_stmt|;
name|diffs
operator|=
name|fsn
operator|.
name|getSnapshotDiffReport
argument_list|(
name|sub1
operator|.
name|toString
argument_list|()
argument_list|,
literal|"s0"
argument_list|,
literal|"s5"
argument_list|)
expr_stmt|;
name|diffStr
operator|=
name|diffs
operator|.
name|dump
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|diffStr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/file15"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/subsub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"-\t/TestSnapshot/sub1/file12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file13"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"file14"
argument_list|)
argument_list|)
expr_stmt|;
name|diffs
operator|=
name|fsn
operator|.
name|getSnapshotDiffReport
argument_list|(
name|sub1
operator|.
name|toString
argument_list|()
argument_list|,
literal|"s0"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|diffStr
operator|=
name|diffs
operator|.
name|dump
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|diffStr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/file15"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/subsub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"-\t/TestSnapshot/sub1/file12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file13"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"file14"
argument_list|)
argument_list|)
expr_stmt|;
name|diffs
operator|=
name|fsn
operator|.
name|getSnapshotDiffReport
argument_list|(
name|sub1
operator|.
name|toString
argument_list|()
argument_list|,
literal|"s2"
argument_list|,
literal|"s5"
argument_list|)
expr_stmt|;
name|diffStr
operator|=
name|diffs
operator|.
name|dump
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|diffStr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/subsub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/file10"
argument_list|)
argument_list|)
expr_stmt|;
name|diffs
operator|=
name|fsn
operator|.
name|getSnapshotDiffReport
argument_list|(
name|sub1
operator|.
name|toString
argument_list|()
argument_list|,
literal|"s3"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|diffStr
operator|=
name|diffs
operator|.
name|dump
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|diffStr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/subsub1/subsubsub1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"+\t/TestSnapshot/sub1/subsub1/subsubsub1/file15"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"-\t/TestSnapshot/sub1/subsub1/subsubsub1/file12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/subsub1/subsubsub1/file10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/subsub1/subsubsub1/file11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|diffStr
operator|.
name|contains
argument_list|(
literal|"M\t/TestSnapshot/sub1/subsub1/subsubsub1/file13"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

