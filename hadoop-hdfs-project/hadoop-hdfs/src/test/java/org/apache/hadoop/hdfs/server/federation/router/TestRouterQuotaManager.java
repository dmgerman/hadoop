begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for class {@link RouterQuotaManager}.  */
end_comment

begin_class
DECL|class|TestRouterQuotaManager
specifier|public
class|class
name|TestRouterQuotaManager
block|{
DECL|field|manager
specifier|private
specifier|static
name|RouterQuotaManager
name|manager
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|manager
operator|=
operator|new
name|RouterQuotaManager
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|manager
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetChildrenPaths ()
specifier|public
name|void
name|testGetChildrenPaths
parameter_list|()
block|{
name|RouterQuotaUsage
name|quotaUsage
init|=
operator|new
name|RouterQuotaUsage
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/path1"
argument_list|,
name|quotaUsage
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/path2"
argument_list|,
name|quotaUsage
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/path1/subdir"
argument_list|,
name|quotaUsage
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/path1/subdir/subdir"
argument_list|,
name|quotaUsage
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|childrenPaths
init|=
name|manager
operator|.
name|getPaths
argument_list|(
literal|"/path1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|childrenPaths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|childrenPaths
operator|.
name|contains
argument_list|(
literal|"/path1/subdir"
argument_list|)
operator|&&
name|childrenPaths
operator|.
name|contains
argument_list|(
literal|"/path1/subdir/subdir"
argument_list|)
operator|&&
name|childrenPaths
operator|.
name|contains
argument_list|(
literal|"/path1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetQuotaUsage ()
specifier|public
name|void
name|testGetQuotaUsage
parameter_list|()
block|{
name|RouterQuotaUsage
name|quotaGet
decl_stmt|;
comment|// test case1: get quota with an non-exist path
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/non-exist-path"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|quotaGet
argument_list|)
expr_stmt|;
comment|// test case2: get quota from an no-quota set path
name|RouterQuotaUsage
operator|.
name|Builder
name|quota
init|=
operator|new
name|RouterQuotaUsage
operator|.
name|Builder
argument_list|()
operator|.
name|quota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
operator|.
name|spaceQuota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
decl_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/noQuotaSet"
argument_list|,
name|quota
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/noQuotaSet"
argument_list|)
expr_stmt|;
comment|// it should return null
name|assertNull
argument_list|(
name|quotaGet
argument_list|)
expr_stmt|;
comment|// test case3: get quota from an quota-set path
name|quota
operator|.
name|quota
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|quota
operator|.
name|spaceQuota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/hasQuotaSet"
argument_list|,
name|quota
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/hasQuotaSet"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|quotaGet
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|,
name|quotaGet
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// test case4: get quota with an non-exist child path
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/hasQuotaSet/file"
argument_list|)
expr_stmt|;
comment|// it will return the nearest ancestor which quota was set
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|quotaGet
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|,
name|quotaGet
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// test case5: get quota with an child path which its parent
comment|// wasn't quota set
name|quota
operator|.
name|quota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
expr_stmt|;
name|quota
operator|.
name|spaceQuota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/hasQuotaSet/noQuotaSet"
argument_list|,
name|quota
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// here should returns the quota of path /hasQuotaSet
comment|// (the nearest ancestor which quota was set)
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/hasQuotaSet/noQuotaSet/file"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|quotaGet
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|,
name|quotaGet
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// test case6: get quota with an child path which its parent was quota set
name|quota
operator|.
name|quota
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|quota
operator|.
name|spaceQuota
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|)
expr_stmt|;
name|manager
operator|.
name|put
argument_list|(
literal|"/hasQuotaSet/hasQuotaSet"
argument_list|,
name|quota
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// here should return the quota of path /hasQuotaSet/hasQuotaSet
name|quotaGet
operator|=
name|manager
operator|.
name|getQuotaUsage
argument_list|(
literal|"/hasQuotaSet/hasQuotaSet/file"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|quotaGet
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_DONT_SET
argument_list|,
name|quotaGet
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

