begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.qjournal.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
operator|.
name|server
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|EditLogFileOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNodeLayoutVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
operator|.
name|LogCapturer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|PathUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
operator|.
name|QJMTestUtil
operator|.
name|createGabageTxns
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
operator|.
name|QJMTestUtil
operator|.
name|createTxnData
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Test the {@link JournaledEditsCache} used for caching edits in-memory on the  * {@link Journal}.  */
end_comment

begin_class
DECL|class|TestJournaledEditsCache
specifier|public
class|class
name|TestJournaledEditsCache
block|{
DECL|field|EDITS_CAPACITY
specifier|private
specifier|static
specifier|final
name|int
name|EDITS_CAPACITY
init|=
literal|100
decl_stmt|;
DECL|field|TEST_DIR
specifier|private
specifier|static
specifier|final
name|File
name|TEST_DIR
init|=
name|PathUtils
operator|.
name|getTestDir
argument_list|(
name|TestJournaledEditsCache
operator|.
name|class
argument_list|,
literal|false
argument_list|)
decl_stmt|;
DECL|field|cache
specifier|private
name|JournaledEditsCache
name|cache
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_JOURNALNODE_EDIT_CACHE_SIZE_KEY
argument_list|,
name|createTxnData
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|length
operator|*
name|EDITS_CAPACITY
argument_list|)
expr_stmt|;
name|cache
operator|=
operator|new
name|JournaledEditsCache
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TEST_DIR
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|Exception
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|TEST_DIR
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheSingleSegment ()
specifier|public
name|void
name|testCacheSingleSegment
parameter_list|()
throws|throws
name|Exception
block|{
name|storeEdits
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Leading part of the segment
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// All of the segment
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Past the segment
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|40
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Trailing part of the segment
name|assertTxnCountAndContents
argument_list|(
literal|10
argument_list|,
literal|11
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Trailing part of the segment, past the end
name|assertTxnCountAndContents
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheBelowCapacityRequestOnBoundary ()
specifier|public
name|void
name|testCacheBelowCapacityRequestOnBoundary
parameter_list|()
throws|throws
name|Exception
block|{
name|storeEdits
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|6
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|21
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// First segment only
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Second segment only
name|assertTxnCountAndContents
argument_list|(
literal|6
argument_list|,
literal|10
argument_list|,
literal|15
argument_list|)
expr_stmt|;
comment|// First and second segment
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|,
literal|7
argument_list|)
expr_stmt|;
comment|// All three segments
name|assertTxnCountAndContents
argument_list|(
literal|1
argument_list|,
literal|25
argument_list|,
literal|25
argument_list|)
expr_stmt|;
comment|// Second and third segment
name|assertTxnCountAndContents
argument_list|(
literal|6
argument_list|,
literal|20
argument_list|,
literal|25
argument_list|)
expr_stmt|;
comment|// Second and third segment; request past the end
name|assertTxnCountAndContents
argument_list|(
literal|6
argument_list|,
literal|50
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// Third segment only; request past the end
name|assertTxnCountAndContents
argument_list|(
literal|21
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheBelowCapacityRequestOffBoundary ()
specifier|public
name|void
name|testCacheBelowCapacityRequestOffBoundary
parameter_list|()
throws|throws
name|Exception
block|{
name|storeEdits
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|6
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|21
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// First segment only
name|assertTxnCountAndContents
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// First and second segment
name|assertTxnCountAndContents
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// Second and third segment
name|assertTxnCountAndContents
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|24
argument_list|)
expr_stmt|;
comment|// Second and third segment; request past the end
name|assertTxnCountAndContents
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|// Start read past the end
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|buffers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|31
argument_list|,
literal|10
argument_list|,
name|buffers
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|buffers
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheAboveCapacity ()
specifier|public
name|void
name|testCacheAboveCapacity
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|thirdCapacity
init|=
name|EDITS_CAPACITY
operator|/
literal|3
decl_stmt|;
name|storeEdits
argument_list|(
literal|1
argument_list|,
name|thirdCapacity
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
name|thirdCapacity
operator|+
literal|1
argument_list|,
name|thirdCapacity
operator|*
literal|2
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
name|thirdCapacity
operator|*
literal|2
operator|+
literal|1
argument_list|,
name|EDITS_CAPACITY
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
name|EDITS_CAPACITY
operator|+
literal|1
argument_list|,
name|thirdCapacity
operator|*
literal|4
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
name|thirdCapacity
operator|*
literal|4
operator|+
literal|1
argument_list|,
name|thirdCapacity
operator|*
literal|5
argument_list|)
expr_stmt|;
try|try
block|{
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|// expected
block|}
name|assertTxnCountAndContents
argument_list|(
name|EDITS_CAPACITY
operator|+
literal|1
argument_list|,
name|EDITS_CAPACITY
argument_list|,
name|thirdCapacity
operator|*
literal|5
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheSingleAdditionAboveCapacity ()
specifier|public
name|void
name|testCacheSingleAdditionAboveCapacity
parameter_list|()
throws|throws
name|Exception
block|{
name|LogCapturer
name|logs
init|=
name|LogCapturer
operator|.
name|captureLogs
argument_list|(
name|Journal
operator|.
name|LOG
argument_list|)
decl_stmt|;
name|storeEdits
argument_list|(
literal|1
argument_list|,
name|EDITS_CAPACITY
operator|*
literal|2
argument_list|)
expr_stmt|;
name|logs
operator|.
name|stopCapturing
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|logs
operator|.
name|getOutput
argument_list|()
operator|.
name|contains
argument_list|(
literal|"batch of edits was too large"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|// expected
block|}
name|storeEdits
argument_list|(
name|EDITS_CAPACITY
operator|*
literal|2
operator|+
literal|1
argument_list|,
name|EDITS_CAPACITY
operator|*
literal|2
operator|+
literal|5
argument_list|)
expr_stmt|;
name|assertTxnCountAndContents
argument_list|(
name|EDITS_CAPACITY
operator|*
literal|2
operator|+
literal|1
argument_list|,
literal|5
argument_list|,
name|EDITS_CAPACITY
operator|*
literal|2
operator|+
literal|5
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheWithFutureLayoutVersion ()
specifier|public
name|void
name|testCacheWithFutureLayoutVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|firstHalf
init|=
name|createGabageTxns
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|byte
index|[]
name|secondHalf
init|=
name|createGabageTxns
argument_list|(
literal|6
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|int
name|futureVersion
init|=
name|NameNodeLayoutVersion
operator|.
name|CURRENT_LAYOUT_VERSION
operator|-
literal|1
decl_stmt|;
name|cache
operator|.
name|storeEdits
argument_list|(
name|Bytes
operator|.
name|concat
argument_list|(
name|firstHalf
argument_list|,
name|secondHalf
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
name|futureVersion
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|buffers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|6
argument_list|,
literal|5
argument_list|,
name|buffers
argument_list|)
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|getHeaderForLayoutVersion
argument_list|(
name|futureVersion
argument_list|)
argument_list|,
name|buffers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|array
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|retBytes
init|=
operator|new
name|byte
index|[
name|buffers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|remaining
argument_list|()
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|buffers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|array
argument_list|()
argument_list|,
name|buffers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|position
argument_list|()
argument_list|,
name|retBytes
argument_list|,
literal|0
argument_list|,
name|buffers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|remaining
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|secondHalf
argument_list|,
name|retBytes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheWithMultipleLayoutVersions ()
specifier|public
name|void
name|testCacheWithMultipleLayoutVersions
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|oldLayout
init|=
name|NameNodeLayoutVersion
operator|.
name|CURRENT_LAYOUT_VERSION
operator|+
literal|1
decl_stmt|;
name|cache
operator|.
name|storeEdits
argument_list|(
name|createTxnData
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
name|oldLayout
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|6
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Ensure the cache will only return edits from a single
comment|// layout version at a time
try|try
block|{
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|1
argument_list|,
literal|50
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected a cache miss"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JournaledEditsCache
operator|.
name|CacheMissException
name|cme
parameter_list|)
block|{
comment|// expected
block|}
name|assertTxnCountAndContents
argument_list|(
literal|6
argument_list|,
literal|50
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheEditsWithGaps ()
specifier|public
name|void
name|testCacheEditsWithGaps
parameter_list|()
throws|throws
name|Exception
block|{
name|storeEdits
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|storeEdits
argument_list|(
literal|10
argument_list|,
literal|15
argument_list|)
expr_stmt|;
try|try
block|{
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JournaledEditsCache
operator|.
name|CacheMissException
name|cme
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|cme
operator|.
name|getCacheMissAmount
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTxnCountAndContents
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|15
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|JournaledEditsCache
operator|.
name|CacheMissException
operator|.
name|class
argument_list|)
DECL|method|testReadUninitializedCache ()
specifier|public
name|void
name|testReadUninitializedCache
parameter_list|()
throws|throws
name|Exception
block|{
name|cache
operator|.
name|retrieveEdits
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|JournaledEditsCache
operator|.
name|CacheMissException
operator|.
name|class
argument_list|)
DECL|method|testCacheMalformedInput ()
specifier|public
name|void
name|testCacheMalformedInput
parameter_list|()
throws|throws
name|Exception
block|{
name|storeEdits
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cache
operator|.
name|retrieveEdits
argument_list|(
operator|-
literal|1
argument_list|,
literal|10
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|storeEdits (int startTxn, int endTxn)
specifier|private
name|void
name|storeEdits
parameter_list|(
name|int
name|startTxn
parameter_list|,
name|int
name|endTxn
parameter_list|)
throws|throws
name|Exception
block|{
name|cache
operator|.
name|storeEdits
argument_list|(
name|createTxnData
argument_list|(
name|startTxn
argument_list|,
name|endTxn
operator|-
name|startTxn
operator|+
literal|1
argument_list|)
argument_list|,
name|startTxn
argument_list|,
name|endTxn
argument_list|,
name|NameNodeLayoutVersion
operator|.
name|CURRENT_LAYOUT_VERSION
argument_list|)
expr_stmt|;
block|}
DECL|method|assertTxnCountAndContents (int startTxn, int requestedMaxTxns, int expectedEndTxn)
specifier|private
name|void
name|assertTxnCountAndContents
parameter_list|(
name|int
name|startTxn
parameter_list|,
name|int
name|requestedMaxTxns
parameter_list|,
name|int
name|expectedEndTxn
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|buffers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|int
name|expectedTxnCount
init|=
name|expectedEndTxn
operator|-
name|startTxn
operator|+
literal|1
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedTxnCount
argument_list|,
name|cache
operator|.
name|retrieveEdits
argument_list|(
name|startTxn
argument_list|,
name|requestedMaxTxns
argument_list|,
name|buffers
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|expectedBytes
init|=
name|Bytes
operator|.
name|concat
argument_list|(
name|getHeaderForLayoutVersion
argument_list|(
name|NameNodeLayoutVersion
operator|.
name|CURRENT_LAYOUT_VERSION
argument_list|)
argument_list|,
name|createTxnData
argument_list|(
name|startTxn
argument_list|,
name|expectedTxnCount
argument_list|)
argument_list|)
decl_stmt|;
name|byte
index|[]
name|actualBytes
init|=
operator|new
name|byte
index|[
name|buffers
operator|.
name|stream
argument_list|()
operator|.
name|mapToInt
argument_list|(
name|ByteBuffer
operator|::
name|remaining
argument_list|)
operator|.
name|sum
argument_list|()
index|]
decl_stmt|;
name|int
name|pos
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ByteBuffer
name|buf
range|:
name|buffers
control|)
block|{
name|System
operator|.
name|arraycopy
argument_list|(
name|buf
operator|.
name|array
argument_list|()
argument_list|,
name|buf
operator|.
name|position
argument_list|()
argument_list|,
name|actualBytes
argument_list|,
name|pos
argument_list|,
name|buf
operator|.
name|remaining
argument_list|()
argument_list|)
expr_stmt|;
name|pos
operator|+=
name|buf
operator|.
name|remaining
argument_list|()
expr_stmt|;
block|}
name|assertArrayEquals
argument_list|(
name|expectedBytes
argument_list|,
name|actualBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|getHeaderForLayoutVersion (int version)
specifier|private
specifier|static
name|byte
index|[]
name|getHeaderForLayoutVersion
parameter_list|(
name|int
name|version
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|EditLogFileOutputStream
operator|.
name|writeHeader
argument_list|(
name|version
argument_list|,
operator|new
name|DataOutputStream
argument_list|(
name|baos
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|baos
operator|.
name|toByteArray
argument_list|()
return|;
block|}
block|}
end_class

end_unit

