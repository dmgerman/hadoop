begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|cblock
operator|.
name|CBlockConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|OzonePropertyTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|TestConfigurationFieldsBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
operator|.
name|KSMConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|ScmConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Tests if configuration constants documented in ozone-defaults.xml.  */
end_comment

begin_class
DECL|class|TestOzoneConfigurationFields
specifier|public
class|class
name|TestOzoneConfigurationFields
extends|extends
name|TestConfigurationFieldsBase
block|{
annotation|@
name|Override
DECL|method|initializeMemberVariables ()
specifier|public
name|void
name|initializeMemberVariables
parameter_list|()
block|{
name|xmlFilename
operator|=
operator|new
name|String
argument_list|(
literal|"ozone-default.xml"
argument_list|)
expr_stmt|;
name|configurationClasses
operator|=
operator|new
name|Class
index|[]
block|{
name|OzoneConfigKeys
operator|.
name|class
block|,
name|ScmConfigKeys
operator|.
name|class
block|,
name|KSMConfigKeys
operator|.
name|class
block|,
name|CBlockConfigKeys
operator|.
name|class
block|}
expr_stmt|;
name|errorIfMissingConfigProps
operator|=
literal|true
expr_stmt|;
name|errorIfMissingXmlProps
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOzoneTags ()
specifier|public
name|void
name|testOzoneTags
parameter_list|()
block|{
name|Configuration
name|config
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|reloadConfiguration
argument_list|()
expr_stmt|;
comment|// To load default resources
name|config
operator|.
name|get
argument_list|(
literal|"ozone.enabled"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|87
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|OZONE
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|KSM
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|SCM
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|MANAGEMENT
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|SECURITY
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|PERFORMANCE
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|DEBUG
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|REQUIRED
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|config
operator|.
name|getAllPropertiesByTag
argument_list|(
name|OzonePropertyTag
operator|.
name|RATIS
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

