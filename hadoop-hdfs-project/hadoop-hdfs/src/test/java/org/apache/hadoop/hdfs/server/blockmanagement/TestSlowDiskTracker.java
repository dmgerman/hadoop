begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.blockmanagement
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|type
operator|.
name|TypeReference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_FILEIO_PROFILING_SAMPLING_FRACTION_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_OUTLIERS_REPORT_INTERVAL_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
operator|.
name|DFS_HEARTBEAT_INTERVAL_KEY
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
operator|.
name|SlowDiskReports
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
operator|.
name|SlowDiskReports
operator|.
name|DiskOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|SlowDiskTracker
operator|.
name|DiskLatency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|FakeTimer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * Tests for {@link SlowDiskTracker}.  */
end_comment

begin_class
DECL|class|TestSlowDiskTracker
specifier|public
class|class
name|TestSlowDiskTracker
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestSlowDiskTracker
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Set a timeout for every test case.    */
annotation|@
name|Rule
DECL|field|testTimeout
specifier|public
name|Timeout
name|testTimeout
init|=
operator|new
name|Timeout
argument_list|(
literal|300_000
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
DECL|field|tracker
specifier|private
name|SlowDiskTracker
name|tracker
decl_stmt|;
DECL|field|timer
specifier|private
name|FakeTimer
name|timer
decl_stmt|;
DECL|field|reportValidityMs
specifier|private
name|long
name|reportValidityMs
decl_stmt|;
DECL|field|OUTLIERS_REPORT_INTERVAL
specifier|private
specifier|static
specifier|final
name|long
name|OUTLIERS_REPORT_INTERVAL
init|=
literal|1000
decl_stmt|;
static|static
block|{
name|conf
operator|=
operator|new
name|HdfsConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DFS_HEARTBEAT_INTERVAL_KEY
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setDouble
argument_list|(
name|DFS_DATANODE_FILEIO_PROFILING_SAMPLING_FRACTION_KEY
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setTimeDuration
argument_list|(
name|DFS_DATANODE_OUTLIERS_REPORT_INTERVAL_KEY
argument_list|,
name|OUTLIERS_REPORT_INTERVAL
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|timer
operator|=
operator|new
name|FakeTimer
argument_list|()
expr_stmt|;
name|tracker
operator|=
operator|new
name|SlowDiskTracker
argument_list|(
name|conf
argument_list|,
name|timer
argument_list|)
expr_stmt|;
name|reportValidityMs
operator|=
name|tracker
operator|.
name|getReportValidityMs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDataNodeHeartbeatSlowDiskReport ()
specifier|public
name|void
name|testDataNodeHeartbeatSlowDiskReport
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniDFSCluster
name|cluster
init|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|2
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|DataNode
name|dn1
init|=
name|cluster
operator|.
name|getDataNodes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|DataNode
name|dn2
init|=
name|cluster
operator|.
name|getDataNodes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|NameNode
name|nn
init|=
name|cluster
operator|.
name|getNameNode
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|DatanodeManager
name|datanodeManager
init|=
name|nn
operator|.
name|getNamesystem
argument_list|()
operator|.
name|getBlockManager
argument_list|()
operator|.
name|getDatanodeManager
argument_list|()
decl_stmt|;
name|SlowDiskTracker
name|slowDiskTracker
init|=
name|datanodeManager
operator|.
name|getSlowDiskTracker
argument_list|()
decl_stmt|;
name|slowDiskTracker
operator|.
name|setReportValidityMs
argument_list|(
name|OUTLIERS_REPORT_INTERVAL
operator|*
literal|100
argument_list|)
expr_stmt|;
name|dn1
operator|.
name|getDiskMetrics
argument_list|()
operator|.
name|addSlowDiskForTesting
argument_list|(
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|dn1
operator|.
name|getDiskMetrics
argument_list|()
operator|.
name|addSlowDiskForTesting
argument_list|(
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.6
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|dn2
operator|.
name|getDiskMetrics
argument_list|()
operator|.
name|addSlowDiskForTesting
argument_list|(
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|dn2
operator|.
name|getDiskMetrics
argument_list|()
operator|.
name|addSlowDiskForTesting
argument_list|(
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|dn1ID
init|=
name|dn1
operator|.
name|getDatanodeId
argument_list|()
operator|.
name|getIpcAddr
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|String
name|dn2ID
init|=
name|dn2
operator|.
name|getDatanodeId
argument_list|()
operator|.
name|getIpcAddr
argument_list|(
literal|false
argument_list|)
decl_stmt|;
comment|// Advance the timer and wait for NN to receive reports from DataNodes.
name|Thread
operator|.
name|sleep
argument_list|(
name|OUTLIERS_REPORT_INTERVAL
argument_list|)
expr_stmt|;
comment|// Wait for NN to receive reports from all DNs
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
operator|(
name|slowDiskTracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|4
operator|)
return|;
block|}
block|}
argument_list|,
literal|1000
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|slowDisksReport
init|=
name|getSlowDisksReportForTesting
argument_list|(
name|slowDiskTracker
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|slowDisksReport
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|slowDisksReport
operator|.
name|get
argument_list|(
name|dn1ID
operator|+
literal|":disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|)
operator|-
literal|1.3
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|slowDisksReport
operator|.
name|get
argument_list|(
name|dn1ID
operator|+
literal|":disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.6
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|slowDisksReport
operator|.
name|get
argument_list|(
name|dn1ID
operator|+
literal|":disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|slowDisksReport
operator|.
name|get
argument_list|(
name|dn2ID
operator|+
literal|":disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|)
operator|-
literal|0.8
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|slowDisksReport
operator|.
name|get
argument_list|(
name|dn2ID
operator|+
literal|":disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|)
operator|-
literal|1.3
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
comment|// Test the slow disk report JSON string
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
name|jsonReport
init|=
name|getAndDeserializeJson
argument_list|(
name|slowDiskTracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|jsonReport
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
name|dn1ID
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
name|dn1ID
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.6
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
name|dn1ID
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
name|dn2ID
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
name|dn2ID
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Edge case, there are no reports to retrieve.    */
annotation|@
name|Test
DECL|method|testEmptyReports ()
specifier|public
name|void
name|testEmptyReports
parameter_list|()
block|{
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportsAreRetrieved ()
specifier|public
name|void
name|testReportsAreRetrieved
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
operator|!
name|tracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|reports
init|=
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.8
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.3
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn2:disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test that when all reports are expired, we get back nothing.    */
annotation|@
name|Test
DECL|method|testAllReportsAreExpired ()
specifier|public
name|void
name|testAllReportsAreExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
comment|// No reports should expire after 1ms.
name|timer
operator|.
name|advance
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
operator|!
name|tracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|reports
init|=
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.8
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.3
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn2:disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
comment|// All reports should expire after REPORT_VALIDITY_MS.
name|timer
operator|.
name|advance
argument_list|(
name|reportValidityMs
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
name|tracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|3000
argument_list|)
expr_stmt|;
name|reports
operator|=
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the case when a subset of reports has expired.    * Ensure that we only get back non-expired reports.    */
annotation|@
name|Test
DECL|method|testSomeReportsAreExpired ()
specifier|public
name|void
name|testSomeReportsAreExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|.
name|advance
argument_list|(
name|reportValidityMs
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
operator|!
name|tracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|reports
init|=
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn2:disk2"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|)
operator|-
literal|1.1
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the case when an expired report is replaced by a valid one.    */
annotation|@
name|Test
DECL|method|testReplacement ()
specifier|public
name|void
name|testReplacement
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|.
name|advance
argument_list|(
name|reportValidityMs
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.4
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
operator|!
name|tracker
operator|.
name|getSlowDisksReport
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|reports
init|=
name|getSlowDisksReportForTesting
argument_list|(
name|tracker
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|"dn1:disk1"
argument_list|)
operator|.
name|getLatency
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|)
operator|-
literal|1.4
argument_list|)
operator|<
literal|0.0000001
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetJson ()
specifier|public
name|void
name|testGetJson
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn3"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
name|tracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
name|jsonReport
init|=
name|getAndDeserializeJson
argument_list|(
name|tracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
argument_list|)
decl_stmt|;
comment|// And ensure its contents are what we expect.
name|assertThat
argument_list|(
name|jsonReport
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|METADATA
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.8
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn3"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetJsonSizeIsLimited ()
specifier|public
name|void
name|testGetJsonSizeIsLimited
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.2
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk3"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.4
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.5
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn3"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.6
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn3"
argument_list|,
literal|"disk2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.7
argument_list|)
argument_list|)
expr_stmt|;
name|addSlowDiskForTesting
argument_list|(
literal|"dn3"
argument_list|,
literal|"disk3"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.2
argument_list|)
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
name|tracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
name|jsonReport
init|=
name|getAndDeserializeJson
argument_list|(
name|tracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
argument_list|)
decl_stmt|;
comment|// Ensure that only the top 5 highest latencies are in the report.
name|assertThat
argument_list|(
name|jsonReport
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn3"
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.7
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn3"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|WRITE
argument_list|,
literal|1.6
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn2"
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn2"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.4
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk3"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Remaining nodes should be in the list.
name|assertFalse
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn1"
argument_list|,
literal|"disk2"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|isDiskInReports
argument_list|(
name|jsonReport
argument_list|,
literal|"dn3"
argument_list|,
literal|"disk3"
argument_list|,
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyReport ()
specifier|public
name|void
name|testEmptyReport
parameter_list|()
throws|throws
name|Exception
block|{
name|addSlowDiskForTesting
argument_list|(
literal|"dn1"
argument_list|,
literal|"disk1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|DiskOp
operator|.
name|READ
argument_list|,
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|.
name|advance
argument_list|(
name|reportValidityMs
argument_list|)
expr_stmt|;
name|tracker
operator|.
name|updateSlowDiskReportAsync
argument_list|(
name|timer
operator|.
name|monotonicNow
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|OUTLIERS_REPORT_INTERVAL
operator|*
literal|2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tracker
operator|.
name|getSlowDiskReportAsJsonString
argument_list|()
operator|==
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|isDiskInReports (ArrayList<DiskLatency> reports, String dataNodeID, String disk, DiskOp diskOp, double latency)
specifier|private
name|boolean
name|isDiskInReports
parameter_list|(
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
name|reports
parameter_list|,
name|String
name|dataNodeID
parameter_list|,
name|String
name|disk
parameter_list|,
name|DiskOp
name|diskOp
parameter_list|,
name|double
name|latency
parameter_list|)
block|{
name|String
name|diskID
init|=
name|SlowDiskTracker
operator|.
name|getSlowDiskIDForReport
argument_list|(
name|dataNodeID
argument_list|,
name|disk
argument_list|)
decl_stmt|;
for|for
control|(
name|DiskLatency
name|diskLatency
range|:
name|reports
control|)
block|{
if|if
condition|(
name|diskLatency
operator|.
name|getSlowDiskID
argument_list|()
operator|.
name|equals
argument_list|(
name|diskID
argument_list|)
condition|)
block|{
if|if
condition|(
name|diskLatency
operator|.
name|getLatency
argument_list|(
name|diskOp
argument_list|)
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|Math
operator|.
name|abs
argument_list|(
name|diskLatency
operator|.
name|getLatency
argument_list|(
name|diskOp
argument_list|)
operator|-
name|latency
argument_list|)
operator|<
literal|0.0000001
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
DECL|method|getAndDeserializeJson ( final String json)
specifier|private
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
name|getAndDeserializeJson
parameter_list|(
specifier|final
name|String
name|json
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|(
operator|new
name|ObjectMapper
argument_list|()
operator|)
operator|.
name|readValue
argument_list|(
name|json
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|ArrayList
argument_list|<
name|DiskLatency
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
DECL|method|addSlowDiskForTesting (String dnID, String disk, Map<DiskOp, Double> latencies)
specifier|private
name|void
name|addSlowDiskForTesting
parameter_list|(
name|String
name|dnID
parameter_list|,
name|String
name|disk
parameter_list|,
name|Map
argument_list|<
name|DiskOp
argument_list|,
name|Double
argument_list|>
name|latencies
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|DiskOp
argument_list|,
name|Double
argument_list|>
argument_list|>
name|slowDisk
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|slowDisk
operator|.
name|put
argument_list|(
name|disk
argument_list|,
name|latencies
argument_list|)
expr_stmt|;
name|SlowDiskReports
name|slowDiskReport
init|=
name|SlowDiskReports
operator|.
name|create
argument_list|(
name|slowDisk
argument_list|)
decl_stmt|;
name|tracker
operator|.
name|addSlowDiskReport
argument_list|(
name|dnID
argument_list|,
name|slowDiskReport
argument_list|)
expr_stmt|;
block|}
DECL|method|getSlowDisksReportForTesting ( SlowDiskTracker slowDiskTracker)
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|getSlowDisksReportForTesting
parameter_list|(
name|SlowDiskTracker
name|slowDiskTracker
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|DiskLatency
argument_list|>
name|slowDisksMap
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|DiskLatency
name|diskLatency
range|:
name|slowDiskTracker
operator|.
name|getSlowDisksReport
argument_list|()
control|)
block|{
name|slowDisksMap
operator|.
name|put
argument_list|(
name|diskLatency
operator|.
name|getSlowDiskID
argument_list|()
argument_list|,
name|diskLatency
argument_list|)
expr_stmt|;
block|}
return|return
name|slowDisksMap
return|;
block|}
block|}
end_class

end_unit

