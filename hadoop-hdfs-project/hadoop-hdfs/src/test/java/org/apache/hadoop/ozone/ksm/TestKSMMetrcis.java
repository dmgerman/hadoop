begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.ksm
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|ksm
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|assertCounter
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|getMetrics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|MiniOzoneCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|internal
operator|.
name|util
operator|.
name|reflection
operator|.
name|Whitebox
import|;
end_import

begin_comment
comment|/**  * Test for KSM metrics.  */
end_comment

begin_class
DECL|class|TestKSMMetrcis
specifier|public
class|class
name|TestKSMMetrcis
block|{
DECL|field|cluster
specifier|private
name|MiniOzoneCluster
name|cluster
decl_stmt|;
DECL|field|ksmManager
specifier|private
name|KeySpaceManager
name|ksmManager
decl_stmt|;
comment|/**    * The exception used for testing failure metrics.    */
DECL|field|exception
specifier|private
name|IOException
name|exception
init|=
operator|new
name|IOException
argument_list|()
decl_stmt|;
comment|/**    * Create a MiniDFSCluster for testing.    *    * @throws IOException    */
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|OzoneConfiguration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_HANDLER_TYPE_KEY
argument_list|,
name|OzoneConsts
operator|.
name|OZONE_HANDLER_DISTRIBUTED
argument_list|)
expr_stmt|;
name|cluster
operator|=
operator|new
name|MiniOzoneCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|setHandlerType
argument_list|(
name|OzoneConsts
operator|.
name|OZONE_HANDLER_DISTRIBUTED
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|ksmManager
operator|=
name|cluster
operator|.
name|getKeySpaceManager
argument_list|()
expr_stmt|;
block|}
comment|/**    * Shutdown MiniDFSCluster.    */
annotation|@
name|After
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testVolumeOps ()
specifier|public
name|void
name|testVolumeOps
parameter_list|()
throws|throws
name|IOException
block|{
name|VolumeManager
name|volumeManager
init|=
operator|(
name|VolumeManager
operator|)
name|Whitebox
operator|.
name|getInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"volumeManager"
argument_list|)
decl_stmt|;
name|VolumeManager
name|mockVm
init|=
name|Mockito
operator|.
name|spy
argument_list|(
name|volumeManager
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|createVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|deleteVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|getVolumeInfo
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|true
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|checkVolumeAccess
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|setOwner
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|listVolumes
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"volumeManager"
argument_list|,
name|mockVm
argument_list|)
expr_stmt|;
name|doVolumeOps
argument_list|()
expr_stmt|;
name|MetricsRecordBuilder
name|ksmMetrics
init|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
decl_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeOps"
argument_list|,
literal|6L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCreates"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeUpdates"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeInfos"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCheckAccesses"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeDeletes"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeLists"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
comment|// inject exception to test for Failure Metrics
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|createVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|deleteVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|getVolumeInfo
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|checkVolumeAccess
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|setOwner
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockVm
argument_list|)
operator|.
name|listVolumes
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"volumeManager"
argument_list|,
name|mockVm
argument_list|)
expr_stmt|;
name|doVolumeOps
argument_list|()
expr_stmt|;
name|ksmMetrics
operator|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeOps"
argument_list|,
literal|12L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCreates"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeUpdates"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeInfos"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCheckAccesses"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeDeletes"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeLists"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCreateFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeUpdateFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeInfoFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeCheckAccessFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeDeleteFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumVolumeListFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBucketOps ()
specifier|public
name|void
name|testBucketOps
parameter_list|()
throws|throws
name|IOException
block|{
name|BucketManager
name|bucketManager
init|=
operator|(
name|BucketManager
operator|)
name|Whitebox
operator|.
name|getInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"bucketManager"
argument_list|)
decl_stmt|;
name|BucketManager
name|mockBm
init|=
name|Mockito
operator|.
name|spy
argument_list|(
name|bucketManager
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|createBucket
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|deleteBucket
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|getBucketInfo
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|setBucketProperty
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"bucketManager"
argument_list|,
name|mockBm
argument_list|)
expr_stmt|;
name|doBucketOps
argument_list|()
expr_stmt|;
name|MetricsRecordBuilder
name|ksmMetrics
init|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
decl_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketOps"
argument_list|,
literal|5L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketCreates"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketUpdates"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketInfos"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketDeletes"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketLists"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
comment|// inject exception to test for Failure Metrics
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|createBucket
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|deleteBucket
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|getBucketInfo
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|setBucketProperty
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockBm
argument_list|)
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"bucketManager"
argument_list|,
name|mockBm
argument_list|)
expr_stmt|;
name|doBucketOps
argument_list|()
expr_stmt|;
name|ksmMetrics
operator|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketOps"
argument_list|,
literal|10L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketCreates"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketUpdates"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketInfos"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketDeletes"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketLists"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketCreateFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketUpdateFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketInfoFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketDeleteFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumBucketListFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testKeyOps ()
specifier|public
name|void
name|testKeyOps
parameter_list|()
throws|throws
name|IOException
block|{
name|KeyManager
name|bucketManager
init|=
operator|(
name|KeyManager
operator|)
name|Whitebox
operator|.
name|getInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"keyManager"
argument_list|)
decl_stmt|;
name|KeyManager
name|mockKm
init|=
name|Mockito
operator|.
name|spy
argument_list|(
name|bucketManager
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|allocateKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|deleteKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|lookupKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|listKeys
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"keyManager"
argument_list|,
name|mockKm
argument_list|)
expr_stmt|;
name|doKeyOps
argument_list|()
expr_stmt|;
name|MetricsRecordBuilder
name|ksmMetrics
init|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
decl_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyOps"
argument_list|,
literal|4L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyAllocate"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyLookup"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyDeletes"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyLists"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
comment|// inject exception to test for Failure Metrics
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|allocateKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|deleteKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|lookupKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockKm
argument_list|)
operator|.
name|listKeys
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|ksmManager
argument_list|,
literal|"keyManager"
argument_list|,
name|mockKm
argument_list|)
expr_stmt|;
name|doKeyOps
argument_list|()
expr_stmt|;
name|ksmMetrics
operator|=
name|getMetrics
argument_list|(
literal|"KSMMetrics"
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyOps"
argument_list|,
literal|8L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyAllocate"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyLookup"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyDeletes"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyLists"
argument_list|,
literal|2L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyAllocateFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyLookupFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyDeleteFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"NumKeyListFails"
argument_list|,
literal|1L
argument_list|,
name|ksmMetrics
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test volume operations with ignoring thrown exception.    */
DECL|method|doVolumeOps ()
specifier|private
name|void
name|doVolumeOps
parameter_list|()
block|{
try|try
block|{
name|ksmManager
operator|.
name|createVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|deleteVolume
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|getVolumeInfo
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|checkVolumeAccess
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|setOwner
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|listAllVolumes
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
block|}
comment|/**    * Test bucket operations with ignoring thrown exception.    */
DECL|method|doBucketOps ()
specifier|private
name|void
name|doBucketOps
parameter_list|()
block|{
try|try
block|{
name|ksmManager
operator|.
name|createBucket
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|deleteBucket
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|getBucketInfo
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|setBucketProperty
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
block|}
comment|/**    * Test key operations with ignoring thrown exception.    */
DECL|method|doKeyOps ()
specifier|private
name|void
name|doKeyOps
parameter_list|()
block|{
try|try
block|{
name|ksmManager
operator|.
name|allocateKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|deleteKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|lookupKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
try|try
block|{
name|ksmManager
operator|.
name|listKeys
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{     }
block|}
block|}
end_class

end_unit

