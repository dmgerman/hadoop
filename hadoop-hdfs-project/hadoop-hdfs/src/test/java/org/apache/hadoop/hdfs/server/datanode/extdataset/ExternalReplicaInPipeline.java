begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.extdataset
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|extdataset
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
operator|.
name|HdfsServerConstants
operator|.
name|ReplicaState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|ChunkChecksum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|ReplicaInPipeline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|ReplicaInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|ReplicaOutputStreams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|DataChecksum
import|;
end_import

begin_class
DECL|class|ExternalReplicaInPipeline
specifier|public
class|class
name|ExternalReplicaInPipeline
implements|implements
name|ReplicaInPipeline
block|{
annotation|@
name|Override
DECL|method|setNumBytes (long bytesReceived)
specifier|public
name|void
name|setNumBytes
parameter_list|(
name|long
name|bytesReceived
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|getBytesAcked ()
specifier|public
name|long
name|getBytesAcked
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|setBytesAcked (long bytesAcked)
specifier|public
name|void
name|setBytesAcked
parameter_list|(
name|long
name|bytesAcked
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|releaseAllBytesReserved ()
specifier|public
name|void
name|releaseAllBytesReserved
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|setLastChecksumAndDataLen (long dataLength, byte[] lastChecksum)
specifier|public
name|void
name|setLastChecksumAndDataLen
parameter_list|(
name|long
name|dataLength
parameter_list|,
name|byte
index|[]
name|lastChecksum
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|getLastChecksumAndDataLen ()
specifier|public
name|ChunkChecksum
name|getLastChecksumAndDataLen
parameter_list|()
block|{
return|return
operator|new
name|ChunkChecksum
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createStreams (boolean isCreate, DataChecksum requestedChecksum)
specifier|public
name|ReplicaOutputStreams
name|createStreams
parameter_list|(
name|boolean
name|isCreate
parameter_list|,
name|DataChecksum
name|requestedChecksum
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|ReplicaOutputStreams
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|requestedChecksum
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createRestartMetaStream ()
specifier|public
name|OutputStream
name|createRestartMetaStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getBlockId ()
specifier|public
name|long
name|getBlockId
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getGenerationStamp ()
specifier|public
name|long
name|getGenerationStamp
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getState ()
specifier|public
name|ReplicaState
name|getState
parameter_list|()
block|{
return|return
name|ReplicaState
operator|.
name|FINALIZED
return|;
block|}
annotation|@
name|Override
DECL|method|getNumBytes ()
specifier|public
name|long
name|getNumBytes
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getBytesOnDisk ()
specifier|public
name|long
name|getBytesOnDisk
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getVisibleLength ()
specifier|public
name|long
name|getVisibleLength
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getStorageUuid ()
specifier|public
name|String
name|getStorageUuid
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|isOnTransientStorage ()
specifier|public
name|boolean
name|isOnTransientStorage
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|getReplicaInfo ()
specifier|public
name|ReplicaInfo
name|getReplicaInfo
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|setWriter (Thread writer)
specifier|public
name|void
name|setWriter
parameter_list|(
name|Thread
name|writer
parameter_list|)
block|{   }
DECL|method|stopWriter (long xceiverStopTimeout)
specifier|public
name|void
name|stopWriter
parameter_list|(
name|long
name|xceiverStopTimeout
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|attemptToSetWriter (Thread prevWriter, Thread newWriter)
specifier|public
name|boolean
name|attemptToSetWriter
parameter_list|(
name|Thread
name|prevWriter
parameter_list|,
name|Thread
name|newWriter
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|interruptThread ()
specifier|public
name|void
name|interruptThread
parameter_list|()
block|{   }
block|}
end_class

end_unit

