begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyByte
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyInt
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anySet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyNoMoreInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|AddBlockFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSDirWriteFileOp
operator|.
name|ValidateAddBlockResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_class
DECL|class|TestFSDirWriteFileOp
specifier|public
class|class
name|TestFSDirWriteFileOp
block|{
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testIgnoreClientLocality ()
specifier|public
name|void
name|testIgnoreClientLocality
parameter_list|()
throws|throws
name|IOException
block|{
name|ValidateAddBlockResult
name|addBlockResult
init|=
operator|new
name|ValidateAddBlockResult
argument_list|(
literal|1024L
argument_list|,
literal|3
argument_list|,
operator|(
name|byte
operator|)
literal|0x01
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|AddBlockFlag
argument_list|>
name|addBlockFlags
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|AddBlockFlag
operator|.
name|IGNORE_CLIENT_LOCALITY
argument_list|)
decl_stmt|;
name|BlockManager
name|bmMock
init|=
name|mock
argument_list|(
name|BlockManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ArgumentCaptor
argument_list|<
name|Node
argument_list|>
name|nodeCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|Node
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|bmMock
operator|.
name|chooseTarget4NewBlock
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|anySet
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|,
name|anyList
argument_list|()
argument_list|,
name|anyByte
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|FSDirWriteFileOp
operator|.
name|chooseTargetForNewBlock
argument_list|(
name|bmMock
argument_list|,
literal|"localhost"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|addBlockFlags
argument_list|,
name|addBlockResult
argument_list|)
expr_stmt|;
comment|// There should be no other interactions with the block manager when the
comment|// IGNORE_CLIENT_LOCALITY is passed in because there is no need to discover
comment|// the local node requesting the new block
name|verify
argument_list|(
name|bmMock
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|chooseTarget4NewBlock
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|,
name|nodeCaptor
operator|.
name|capture
argument_list|()
argument_list|,
name|anySet
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|,
name|anyList
argument_list|()
argument_list|,
name|anyByte
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|bmMock
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Source node was assigned a value. Expected 'null' value because "
operator|+
literal|"chooseTarget was flagged to ignore source node locality"
argument_list|,
name|nodeCaptor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

