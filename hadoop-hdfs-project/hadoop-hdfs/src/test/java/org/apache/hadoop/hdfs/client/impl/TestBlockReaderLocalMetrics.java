begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.client.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|HdfsClientConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|impl
operator|.
name|metrics
operator|.
name|BlockReaderIoProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|impl
operator|.
name|metrics
operator|.
name|BlockReaderLocalMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableRollingAverages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|getDoubleGauge
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|getMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|FakeTimer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_comment
comment|/**  * Tests {@link BlockReaderLocalMetrics}'s statistics.  */
end_comment

begin_class
DECL|class|TestBlockReaderLocalMetrics
specifier|public
class|class
name|TestBlockReaderLocalMetrics
block|{
DECL|field|ROLLING_AVERAGES_WINDOW_LENGTH_MS
specifier|private
specifier|static
specifier|final
name|long
name|ROLLING_AVERAGES_WINDOW_LENGTH_MS
init|=
literal|1000
decl_stmt|;
DECL|field|ROLLING_AVERAGE_NUM_WINDOWS
specifier|private
specifier|static
specifier|final
name|int
name|ROLLING_AVERAGE_NUM_WINDOWS
init|=
literal|5
decl_stmt|;
DECL|field|SLOW_READ_DELAY
specifier|private
specifier|static
specifier|final
name|long
name|SLOW_READ_DELAY
init|=
literal|2000
decl_stmt|;
DECL|field|SHORT_CIRCUIT_READ_METRIC_REGISTERED_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SHORT_CIRCUIT_READ_METRIC_REGISTERED_NAME
init|=
literal|"HdfsShortCircuitReads"
decl_stmt|;
DECL|field|SHORT_CIRCUIT_LOCAL_READS_METRIC_VALUE_FULL_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SHORT_CIRCUIT_LOCAL_READS_METRIC_VALUE_FULL_NAME
init|=
literal|"[ShortCircuitLocalReads]RollingAvgLatencyMs"
decl_stmt|;
DECL|field|TIMER
specifier|private
specifier|static
specifier|final
name|FakeTimer
name|TIMER
init|=
operator|new
name|FakeTimer
argument_list|()
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|HdfsConfiguration
name|conf
init|=
operator|new
name|HdfsConfiguration
argument_list|()
decl_stmt|;
DECL|field|clientConf
specifier|private
specifier|static
name|DfsClientConf
name|clientConf
decl_stmt|;
static|static
block|{
name|conf
operator|=
operator|new
name|HdfsConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|METRICS_SAMPLING_PERCENTAGE_KEY
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|clientConf
operator|=
operator|new
name|DfsClientConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|300_000
argument_list|)
DECL|method|testSlowShortCircuitReadsStatsRecorded ()
specifier|public
name|void
name|testSlowShortCircuitReadsStatsRecorded
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|TimeoutException
block|{
name|BlockReaderLocalMetrics
name|metrics
init|=
name|BlockReaderLocalMetrics
operator|.
name|create
argument_list|()
decl_stmt|;
name|MutableRollingAverages
name|shortCircuitReadRollingAverages
init|=
name|metrics
operator|.
name|getShortCircuitReadRollingAverages
argument_list|()
decl_stmt|;
name|MetricsTestHelper
operator|.
name|replaceRollingAveragesScheduler
argument_list|(
name|shortCircuitReadRollingAverages
argument_list|,
name|ROLLING_AVERAGE_NUM_WINDOWS
argument_list|,
name|ROLLING_AVERAGES_WINDOW_LENGTH_MS
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|FileChannel
name|dataIn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileChannel
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dataIn
operator|.
name|read
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|TIMER
operator|.
name|advance
argument_list|(
name|SLOW_READ_DELAY
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|BlockReaderIoProvider
name|blockReaderIoProvider
init|=
operator|new
name|BlockReaderIoProvider
argument_list|(
name|clientConf
operator|.
name|getShortCircuitConf
argument_list|()
argument_list|,
name|metrics
argument_list|,
name|TIMER
argument_list|)
decl_stmt|;
name|blockReaderIoProvider
operator|.
name|read
argument_list|(
name|dataIn
argument_list|,
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|blockReaderIoProvider
operator|.
name|read
argument_list|(
name|dataIn
argument_list|,
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
name|metrics
operator|.
name|collectThreadLocalStates
argument_list|()
expr_stmt|;
return|return
name|shortCircuitReadRollingAverages
operator|.
name|getStats
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
operator|>
literal|0
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|rb
init|=
name|getMetrics
argument_list|(
name|SHORT_CIRCUIT_READ_METRIC_REGISTERED_NAME
argument_list|)
decl_stmt|;
name|double
name|averageLatency
init|=
name|getDoubleGauge
argument_list|(
name|SHORT_CIRCUIT_LOCAL_READS_METRIC_VALUE_FULL_NAME
argument_list|,
name|rb
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Average Latency of Short Circuit Reads lower than expected"
argument_list|,
name|averageLatency
operator|>=
name|SLOW_READ_DELAY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|300_000
argument_list|)
DECL|method|testMutlipleBlockReaderIoProviderStats ()
specifier|public
name|void
name|testMutlipleBlockReaderIoProviderStats
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|TimeoutException
block|{
name|BlockReaderLocalMetrics
name|metrics
init|=
name|BlockReaderLocalMetrics
operator|.
name|create
argument_list|()
decl_stmt|;
name|MutableRollingAverages
name|shortCircuitReadRollingAverages
init|=
name|metrics
operator|.
name|getShortCircuitReadRollingAverages
argument_list|()
decl_stmt|;
name|MetricsTestHelper
operator|.
name|replaceRollingAveragesScheduler
argument_list|(
name|shortCircuitReadRollingAverages
argument_list|,
name|ROLLING_AVERAGE_NUM_WINDOWS
argument_list|,
name|ROLLING_AVERAGES_WINDOW_LENGTH_MS
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|FileChannel
name|dataIn1
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileChannel
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileChannel
name|dataIn2
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileChannel
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dataIn1
operator|.
name|read
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|TIMER
operator|.
name|advance
argument_list|(
name|SLOW_READ_DELAY
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dataIn2
operator|.
name|read
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|TIMER
operator|.
name|advance
argument_list|(
name|SLOW_READ_DELAY
operator|*
literal|3
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|BlockReaderIoProvider
name|blockReaderIoProvider1
init|=
operator|new
name|BlockReaderIoProvider
argument_list|(
name|clientConf
operator|.
name|getShortCircuitConf
argument_list|()
argument_list|,
name|metrics
argument_list|,
name|TIMER
argument_list|)
decl_stmt|;
name|BlockReaderIoProvider
name|blockReaderIoProvider2
init|=
operator|new
name|BlockReaderIoProvider
argument_list|(
name|clientConf
operator|.
name|getShortCircuitConf
argument_list|()
argument_list|,
name|metrics
argument_list|,
name|TIMER
argument_list|)
decl_stmt|;
name|blockReaderIoProvider1
operator|.
name|read
argument_list|(
name|dataIn1
argument_list|,
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|blockReaderIoProvider2
operator|.
name|read
argument_list|(
name|dataIn2
argument_list|,
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
name|metrics
operator|.
name|collectThreadLocalStates
argument_list|()
expr_stmt|;
return|return
name|shortCircuitReadRollingAverages
operator|.
name|getStats
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
operator|>
literal|0
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|rb
init|=
name|getMetrics
argument_list|(
name|SHORT_CIRCUIT_READ_METRIC_REGISTERED_NAME
argument_list|)
decl_stmt|;
name|double
name|averageLatency
init|=
name|getDoubleGauge
argument_list|(
name|SHORT_CIRCUIT_LOCAL_READS_METRIC_VALUE_FULL_NAME
argument_list|,
name|rb
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Average Latency of Short Circuit Reads lower than expected"
argument_list|,
name|averageLatency
operator|>=
name|SLOW_READ_DELAY
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|300_000
argument_list|)
DECL|method|testSlowShortCircuitReadsAverageLatencyValue ()
specifier|public
name|void
name|testSlowShortCircuitReadsAverageLatencyValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|TimeoutException
block|{
name|BlockReaderLocalMetrics
name|metrics
init|=
name|BlockReaderLocalMetrics
operator|.
name|create
argument_list|()
decl_stmt|;
specifier|final
name|MutableRollingAverages
name|shortCircuitReadRollingAverages
init|=
name|metrics
operator|.
name|getShortCircuitReadRollingAverages
argument_list|()
decl_stmt|;
name|MetricsTestHelper
operator|.
name|replaceRollingAveragesScheduler
argument_list|(
name|shortCircuitReadRollingAverages
argument_list|,
name|ROLLING_AVERAGE_NUM_WINDOWS
argument_list|,
name|ROLLING_AVERAGES_WINDOW_LENGTH_MS
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|FileChannel
index|[]
name|dataIns
init|=
operator|new
name|FileChannel
index|[
literal|5
index|]
decl_stmt|;
name|long
name|totalDelay
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|dataIns
index|[
name|i
index|]
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileChannel
operator|.
name|class
argument_list|)
expr_stmt|;
name|long
name|delay
init|=
name|SLOW_READ_DELAY
operator|*
name|random
operator|.
name|nextInt
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dataIns
index|[
name|i
index|]
operator|.
name|read
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|TIMER
operator|.
name|advance
argument_list|(
name|delay
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|totalDelay
operator|+=
name|delay
expr_stmt|;
block|}
name|long
name|expectedAvgLatency
init|=
name|totalDelay
operator|/
literal|5
decl_stmt|;
name|BlockReaderIoProvider
name|blockReaderIoProvider
init|=
operator|new
name|BlockReaderIoProvider
argument_list|(
name|clientConf
operator|.
name|getShortCircuitConf
argument_list|()
argument_list|,
name|metrics
argument_list|,
name|TIMER
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|blockReaderIoProvider
operator|.
name|read
argument_list|(
name|dataIns
index|[
name|i
index|]
argument_list|,
name|any
argument_list|()
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
name|metrics
operator|.
name|collectThreadLocalStates
argument_list|()
expr_stmt|;
return|return
name|shortCircuitReadRollingAverages
operator|.
name|getStats
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
operator|>
literal|0
return|;
block|}
block|}
argument_list|,
literal|500
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|rb
init|=
name|getMetrics
argument_list|(
name|SHORT_CIRCUIT_READ_METRIC_REGISTERED_NAME
argument_list|)
decl_stmt|;
name|double
name|averageLatency
init|=
name|getDoubleGauge
argument_list|(
name|SHORT_CIRCUIT_LOCAL_READS_METRIC_VALUE_FULL_NAME
argument_list|,
name|rb
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Average Latency of Short Circuit Reads lower than expected"
argument_list|,
name|averageLatency
operator|>=
name|expectedAvgLatency
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

