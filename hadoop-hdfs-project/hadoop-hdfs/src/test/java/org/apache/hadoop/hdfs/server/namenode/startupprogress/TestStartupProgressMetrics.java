begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.startupprogress
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|startupprogress
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|startupprogress
operator|.
name|Phase
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|startupprogress
operator|.
name|StartupProgressTestHelper
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|startupprogress
operator|.
name|StepType
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestStartupProgressMetrics
specifier|public
class|class
name|TestStartupProgressMetrics
block|{
DECL|field|startupProgress
specifier|private
name|StartupProgress
name|startupProgress
decl_stmt|;
DECL|field|metrics
specifier|private
name|StartupProgressMetrics
name|metrics
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|mockMetricsSystem
argument_list|()
expr_stmt|;
name|startupProgress
operator|=
operator|new
name|StartupProgress
argument_list|()
expr_stmt|;
name|metrics
operator|=
operator|new
name|StartupProgressMetrics
argument_list|(
name|startupProgress
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInitialState ()
specifier|public
name|void
name|testInitialState
parameter_list|()
block|{
name|MetricsRecordBuilder
name|builder
init|=
name|getMetrics
argument_list|(
name|metrics
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertCounter
argument_list|(
literal|"ElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"PercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingFsImagePercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingEditsPercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SavingCheckpointPercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SafeModePercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRunningState ()
specifier|public
name|void
name|testRunningState
parameter_list|()
block|{
name|setStartupProgressForRunningState
argument_list|(
name|startupProgress
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|builder
init|=
name|getMetrics
argument_list|(
name|metrics
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"ElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"PercentComplete"
argument_list|,
literal|0.375f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageCount"
argument_list|,
literal|100L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"LoadingFsImageElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageTotal"
argument_list|,
literal|100L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingFsImagePercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsCount"
argument_list|,
literal|100L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"LoadingEditsElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsTotal"
argument_list|,
literal|200L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingEditsPercentComplete"
argument_list|,
literal|0.5f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SavingCheckpointPercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeCount"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeElapsedTime"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeTotal"
argument_list|,
literal|0L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SafeModePercentComplete"
argument_list|,
literal|0.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFinalState ()
specifier|public
name|void
name|testFinalState
parameter_list|()
block|{
name|setStartupProgressForFinalState
argument_list|(
name|startupProgress
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|builder
init|=
name|getMetrics
argument_list|(
name|metrics
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"ElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"PercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageCount"
argument_list|,
literal|100L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"LoadingFsImageElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingFsImageTotal"
argument_list|,
literal|100L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingFsImagePercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsCount"
argument_list|,
literal|200L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"LoadingEditsElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"LoadingEditsTotal"
argument_list|,
literal|200L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"LoadingEditsPercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointCount"
argument_list|,
literal|300L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"SavingCheckpointElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SavingCheckpointTotal"
argument_list|,
literal|300L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SavingCheckpointPercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeCount"
argument_list|,
literal|400L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getLongCounter
argument_list|(
literal|"SafeModeElapsedTime"
argument_list|,
name|builder
argument_list|)
operator|>=
literal|0L
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"SafeModeTotal"
argument_list|,
literal|400L
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"SafeModePercentComplete"
argument_list|,
literal|1.0f
argument_list|,
name|builder
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

