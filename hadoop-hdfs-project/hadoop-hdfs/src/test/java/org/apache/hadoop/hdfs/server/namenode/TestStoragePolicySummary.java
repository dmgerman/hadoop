begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|StorageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|BlockStoragePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockStoragePolicySuite
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|StoragePolicySummary
operator|.
name|StorageTypeAllocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestStoragePolicySummary
specifier|public
class|class
name|TestStoragePolicySummary
block|{
DECL|method|convertToStringMap (StoragePolicySummary sts)
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|convertToStringMap
parameter_list|(
name|StoragePolicySummary
name|sts
parameter_list|)
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|StorageTypeAllocation
argument_list|,
name|Long
argument_list|>
name|entry
range|:
name|StoragePolicySummary
operator|.
name|sortByComparator
argument_list|(
name|sts
operator|.
name|storageComboCounts
argument_list|)
control|)
block|{
name|actualOutput
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|actualOutput
return|;
block|}
annotation|@
name|Test
DECL|method|testMultipleHots ()
specifier|public
name|void
name|testMultipleHots
parameter_list|()
block|{
name|BlockStoragePolicySuite
name|bsps
init|=
name|BlockStoragePolicySuite
operator|.
name|createDefaultSuite
argument_list|()
decl_stmt|;
name|StoragePolicySummary
name|sts
init|=
operator|new
name|StoragePolicySummary
argument_list|(
name|bsps
operator|.
name|getAllPolicies
argument_list|()
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|hot
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"HOT"
argument_list|)
decl_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
name|convertToStringMap
argument_list|(
name|sts
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|actualOutput
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedOutput
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:1(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:2(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:3(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:4(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutput
argument_list|,
name|actualOutput
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleHotsWithDifferentCounts ()
specifier|public
name|void
name|testMultipleHotsWithDifferentCounts
parameter_list|()
block|{
name|BlockStoragePolicySuite
name|bsps
init|=
name|BlockStoragePolicySuite
operator|.
name|createDefaultSuite
argument_list|()
decl_stmt|;
name|StoragePolicySummary
name|sts
init|=
operator|new
name|StoragePolicySummary
argument_list|(
name|bsps
operator|.
name|getAllPolicies
argument_list|()
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|hot
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"HOT"
argument_list|)
decl_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
name|convertToStringMap
argument_list|(
name|sts
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|actualOutput
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedOutput
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:1(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:2(HOT)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:3(HOT)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:4(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutput
argument_list|,
name|actualOutput
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleWarmsInDifferentOrder ()
specifier|public
name|void
name|testMultipleWarmsInDifferentOrder
parameter_list|()
block|{
name|BlockStoragePolicySuite
name|bsps
init|=
name|BlockStoragePolicySuite
operator|.
name|createDefaultSuite
argument_list|()
decl_stmt|;
name|StoragePolicySummary
name|sts
init|=
operator|new
name|StoragePolicySummary
argument_list|(
name|bsps
operator|.
name|getAllPolicies
argument_list|()
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|warm
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"WARM"
argument_list|)
decl_stmt|;
comment|//DISK:1,ARCHIVE:1
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
comment|//DISK:2,ARCHIVE:1
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
comment|//DISK:1,ARCHIVE:2
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
comment|//DISK:2,ARCHIVE:2
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
name|convertToStringMap
argument_list|(
name|sts
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|actualOutput
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedOutput
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:1,ARCHIVE:1(WARM)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:2,ARCHIVE:1"
argument_list|,
literal|3l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:1,ARCHIVE:2(WARM)"
argument_list|,
literal|3l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:2,ARCHIVE:2"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutput
argument_list|,
name|actualOutput
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDifferentSpecifiedPolicies ()
specifier|public
name|void
name|testDifferentSpecifiedPolicies
parameter_list|()
block|{
name|BlockStoragePolicySuite
name|bsps
init|=
name|BlockStoragePolicySuite
operator|.
name|createDefaultSuite
argument_list|()
decl_stmt|;
name|StoragePolicySummary
name|sts
init|=
operator|new
name|StoragePolicySummary
argument_list|(
name|bsps
operator|.
name|getAllPolicies
argument_list|()
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|hot
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"HOT"
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|warm
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"WARM"
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|cold
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"COLD"
argument_list|)
decl_stmt|;
comment|//DISK:3
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
comment|//DISK:1,ARCHIVE:2
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
comment|//ARCHIVE:3
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
name|convertToStringMap
argument_list|(
name|sts
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|actualOutput
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedOutput
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:3(HOT)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"COLD|DISK:1,ARCHIVE:2(WARM)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|ARCHIVE:3(COLD)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:3(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"COLD|DISK:3(HOT)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|ARCHIVE:3(COLD)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:1,ARCHIVE:2(WARM)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"COLD|ARCHIVE:3(COLD)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:1,ARCHIVE:2(WARM)"
argument_list|,
literal|1l
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutput
argument_list|,
name|actualOutput
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSortInDescendingOrder ()
specifier|public
name|void
name|testSortInDescendingOrder
parameter_list|()
block|{
name|BlockStoragePolicySuite
name|bsps
init|=
name|BlockStoragePolicySuite
operator|.
name|createDefaultSuite
argument_list|()
decl_stmt|;
name|StoragePolicySummary
name|sts
init|=
operator|new
name|StoragePolicySummary
argument_list|(
name|bsps
operator|.
name|getAllPolicies
argument_list|()
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|hot
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"HOT"
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|warm
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"WARM"
argument_list|)
decl_stmt|;
name|BlockStoragePolicy
name|cold
init|=
name|bsps
operator|.
name|getPolicy
argument_list|(
literal|"COLD"
argument_list|)
decl_stmt|;
comment|//DISK:3
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|hot
argument_list|)
expr_stmt|;
comment|//DISK:1,ARCHIVE:2
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|DISK
block|}
argument_list|,
name|warm
argument_list|)
expr_stmt|;
comment|//ARCHIVE:3
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|sts
operator|.
name|add
argument_list|(
operator|new
name|StorageType
index|[]
block|{
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|,
name|StorageType
operator|.
name|ARCHIVE
block|}
argument_list|,
name|cold
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|actualOutput
init|=
name|convertToStringMap
argument_list|(
name|sts
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|actualOutput
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedOutput
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"COLD|ARCHIVE:3(COLD)"
argument_list|,
literal|4l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"WARM|DISK:1,ARCHIVE:2(WARM)"
argument_list|,
literal|3l
argument_list|)
expr_stmt|;
name|expectedOutput
operator|.
name|put
argument_list|(
literal|"HOT|DISK:3(HOT)"
argument_list|,
literal|2l
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutput
operator|.
name|toString
argument_list|()
argument_list|,
name|actualOutput
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

