begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NNStorage
operator|.
name|getFinalizedEditsFileName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NNStorage
operator|.
name|getImageFileName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NNStorage
operator|.
name|getInProgressEditsFileName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
operator|.
name|Storage
operator|.
name|StorageDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSImageStorageInspector
operator|.
name|FSImageFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NNStorage
operator|.
name|NameNodeDirType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestFSImageStorageInspector
specifier|public
class|class
name|TestFSImageStorageInspector
block|{
comment|/**    * Simple test with image, edits, and inprogress edits    */
annotation|@
name|Test
DECL|method|testCurrentStorageInspector ()
specifier|public
name|void
name|testCurrentStorageInspector
parameter_list|()
throws|throws
name|IOException
block|{
name|FSImageTransactionalStorageInspector
name|inspector
init|=
operator|new
name|FSImageTransactionalStorageInspector
argument_list|()
decl_stmt|;
name|StorageDirectory
name|mockDir
init|=
name|FSImageTestUtil
operator|.
name|mockStorageDirectory
argument_list|(
name|NameNodeDirType
operator|.
name|IMAGE_AND_EDITS
argument_list|,
literal|false
argument_list|,
literal|"/foo/current/"
operator|+
name|getImageFileName
argument_list|(
literal|123
argument_list|)
argument_list|,
literal|"/foo/current/"
operator|+
name|getFinalizedEditsFileName
argument_list|(
literal|123
argument_list|,
literal|456
argument_list|)
argument_list|,
literal|"/foo/current/"
operator|+
name|getImageFileName
argument_list|(
literal|456
argument_list|)
argument_list|,
literal|"/foo/current/"
operator|+
name|getInProgressEditsFileName
argument_list|(
literal|457
argument_list|)
argument_list|)
decl_stmt|;
name|inspector
operator|.
name|inspectDirectory
argument_list|(
name|mockDir
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|inspector
operator|.
name|foundImages
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FSImageFile
name|latestImage
init|=
name|inspector
operator|.
name|getLatestImages
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|456
argument_list|,
name|latestImage
operator|.
name|txId
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|mockDir
argument_list|,
name|latestImage
operator|.
name|sd
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|inspector
operator|.
name|isUpgradeFinalized
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
literal|"/foo/current/"
operator|+
name|getImageFileName
argument_list|(
literal|456
argument_list|)
argument_list|)
argument_list|,
name|latestImage
operator|.
name|getFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

