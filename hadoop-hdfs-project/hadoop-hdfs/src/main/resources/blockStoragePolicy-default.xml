<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- Do not modify this file directly.  Instead, copy entries that you wish -->
<!-- to modify from this file into blockStoragePolicy-site.xml and change   -->
<!-- there.  If blockStoragePolicy-site.xml does not exist, create it.      -->

<configuration>
<property>
  <name>dfs.block.storage.policies</name>
  <value>HOT:12, WARM:8, COLD:4</value>
  <description>
    A list of block storage policy names and IDs.  The syntax is

      NAME_1:ID_1, NAME_2:ID_2, ..., NAME_n:ID_n

    where ID is an integer in the range [1,15] and NAME is case insensitive.
  </description>
</property>

<!-- Block Storage Policy HOT:12 -->
<property>
  <name>dfs.block.storage.policy.12</name>
  <value>DISK</value>
  <description>
    A list of storage types for storing the block replicas such as

      STORAGE_TYPE_1, STORAGE_TYPE_2, ..., STORAGE_TYPE_n
  
    When creating a block, the i-th replica is stored using i-th storage type
    for i less than or equal to n, and
    the j-th replica is stored using n-th storage type for j greater than n.

    The value cannot specified as an empty list.

    Examples:
    DISK          : all replicas stored using DISK.
    DISK, ARCHIVE : the first replica is stored using DISK and all the
                    remaining are stored using ARCHIVE.
  </description>
</property>

<property>
  <name>dfs.block.storage.policy.creation-fallback.12</name>
  <value></value>
  <description>
    A list of storage types for creation fallback storage.

      STORAGE_TYPE_1, STORAGE_TYPE_2, ..., STORAGE_TYPE_n
  
    When creating a block, if a particular storage type specified in the policy
    is unavailable, the fallback STORAGE_TYPE_1 is used.  Further, if
    STORAGE_TYPE_i is also unavailable, the fallback STORAGE_TYPE_(i+1) is used.
    In case that all fallback storages are unavailabe, the block will be created
    with number of replicas less than the specified replication factor.

    An empty list indicates that there is no fallback storage.
  </description>
</property>

<property>
  <name>dfs.block.storage.policy.replication-fallback.12</name>
  <value>ARCHIVE</value>
  <description>
    Similar to dfs.block.storage.policy.creation-fallback.x but for replication.
  </description>
</property>

<!-- Block Storage Policy WARM:8 -->
<property>
  <name>dfs.block.storage.policy.8</name>
  <value>DISK, ARCHIVE</value>
</property>

<property>
  <name>dfs.block.storage.policy.creation-fallback.8</name>
  <value>DISK, ARCHIVE</value>
</property>

<property>
  <name>dfs.block.storage.policy.replication-fallback.8</name>
  <value>DISK, ARCHIVE</value>
</property>

<!-- Block Storage Policy COLD:4 -->
<property>
  <name>dfs.block.storage.policy.4</name>
  <value>ARCHIVE</value>
</property>

<property>
  <name>dfs.block.storage.policy.creation-fallback.4</name>
  <value></value>
</property>

<property>
  <name>dfs.block.storage.policy.replication-fallback.4</name>
  <value></value>
</property>
</configuration>
