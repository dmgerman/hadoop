begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.exceptions
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|exceptions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonAutoDetect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Class the represents various errors returned by the  * Ozone Layer.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|OzoneException
specifier|public
class|class
name|OzoneException
extends|extends
name|Exception
block|{
annotation|@
name|JsonProperty
argument_list|(
literal|"httpCode"
argument_list|)
DECL|field|httpCode
specifier|private
name|long
name|httpCode
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"shortMessage"
argument_list|)
DECL|field|shortMessage
specifier|private
name|String
name|shortMessage
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"resource"
argument_list|)
DECL|field|resource
specifier|private
name|String
name|resource
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"message"
argument_list|)
DECL|field|message
specifier|private
name|String
name|message
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"requestID"
argument_list|)
DECL|field|requestId
specifier|private
name|String
name|requestId
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"hostName"
argument_list|)
DECL|field|hostID
specifier|private
name|String
name|hostID
decl_stmt|;
comment|/**    * Constructs a new exception with {@code null} as its detail message. The    * cause is not initialized, and may subsequently be initialized by a call    * to {@link #initCause}.    *    * This constructor is needed by Json Serializer.    */
DECL|method|OzoneException ()
specifier|public
name|OzoneException
parameter_list|()
block|{   }
comment|/**    * Constructor that allows a shortMessage and exception.    *    * @param httpCode Error Code    * @param shortMessage Short Message    * @param ex Exception    */
DECL|method|OzoneException (long httpCode, String shortMessage, Exception ex)
specifier|public
name|OzoneException
parameter_list|(
name|long
name|httpCode
parameter_list|,
name|String
name|shortMessage
parameter_list|,
name|Exception
name|ex
parameter_list|)
block|{
name|super
argument_list|(
name|ex
argument_list|)
expr_stmt|;
name|this
operator|.
name|message
operator|=
name|ex
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|this
operator|.
name|shortMessage
operator|=
name|shortMessage
expr_stmt|;
name|this
operator|.
name|httpCode
operator|=
name|httpCode
expr_stmt|;
block|}
comment|/**    * Constructor that allows a shortMessage.    *    * @param httpCode Error Code    * @param shortMessage Short Message    */
DECL|method|OzoneException (long httpCode, String shortMessage)
specifier|public
name|OzoneException
parameter_list|(
name|long
name|httpCode
parameter_list|,
name|String
name|shortMessage
parameter_list|)
block|{
name|this
operator|.
name|shortMessage
operator|=
name|shortMessage
expr_stmt|;
name|this
operator|.
name|httpCode
operator|=
name|httpCode
expr_stmt|;
block|}
comment|/**    * Constructor that allows a shortMessage and long message.    *    * @param httpCode Error Code    * @param shortMessage Short Message    * @param message long error message    */
DECL|method|OzoneException (long httpCode, String shortMessage, String message)
specifier|public
name|OzoneException
parameter_list|(
name|long
name|httpCode
parameter_list|,
name|String
name|shortMessage
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|shortMessage
operator|=
name|shortMessage
expr_stmt|;
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
name|this
operator|.
name|httpCode
operator|=
name|httpCode
expr_stmt|;
block|}
comment|/**    * Returns the Resource that was involved in the exception.    *    * @return String    */
DECL|method|getResource ()
specifier|public
name|String
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
comment|/**    * Sets Resource.    *    * @param resourceName - Name of the Resource    */
DECL|method|setResource (String resourceName)
specifier|public
name|void
name|setResource
parameter_list|(
name|String
name|resourceName
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resourceName
expr_stmt|;
block|}
comment|/**    * Gets a detailed message for the error.    *    * @return String    */
DECL|method|getMessage ()
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|message
return|;
block|}
comment|/**    * Sets the error message.    *    * @param longMessage - Long message    */
DECL|method|setMessage (String longMessage)
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|longMessage
parameter_list|)
block|{
name|this
operator|.
name|message
operator|=
name|longMessage
expr_stmt|;
block|}
comment|/**    * Returns request Id.    *    * @return String    */
DECL|method|getRequestId ()
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|requestId
return|;
block|}
comment|/**    * Sets request ID.    *    * @param ozoneRequestId Request ID generated by the Server    */
DECL|method|setRequestId (String ozoneRequestId)
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|ozoneRequestId
parameter_list|)
block|{
name|this
operator|.
name|requestId
operator|=
name|ozoneRequestId
expr_stmt|;
block|}
comment|/**    * Returns short error string.    *    * @return String    */
DECL|method|getShortMessage ()
specifier|public
name|String
name|getShortMessage
parameter_list|()
block|{
return|return
name|shortMessage
return|;
block|}
comment|/**    * Sets short error string.    *    * @param shortError Short Error Code    */
DECL|method|setShortMessage (String shortError)
specifier|public
name|void
name|setShortMessage
parameter_list|(
name|String
name|shortError
parameter_list|)
block|{
name|this
operator|.
name|shortMessage
operator|=
name|shortError
expr_stmt|;
block|}
comment|/**    * Returns hostID.    *    * @return String    */
DECL|method|getHostID ()
specifier|public
name|String
name|getHostID
parameter_list|()
block|{
return|return
name|hostID
return|;
block|}
comment|/**    * Sets host ID.    *    * @param hostName host Name    */
DECL|method|setHostID (String hostName)
specifier|public
name|void
name|setHostID
parameter_list|(
name|String
name|hostName
parameter_list|)
block|{
name|this
operator|.
name|hostID
operator|=
name|hostName
expr_stmt|;
block|}
comment|/**    * Returns http error code.    *    * @return long    */
DECL|method|getHttpCode ()
specifier|public
name|long
name|getHttpCode
parameter_list|()
block|{
return|return
name|httpCode
return|;
block|}
comment|/**    * Sets http status.    *    * @param httpStatus http error code.    */
DECL|method|setHttpCode (long httpStatus)
specifier|public
name|void
name|setHttpCode
parameter_list|(
name|long
name|httpStatus
parameter_list|)
block|{
name|this
operator|.
name|httpCode
operator|=
name|httpStatus
expr_stmt|;
block|}
comment|/**    * Returns a Json String.    *    * @return JSON representation of the Error    */
DECL|method|toJsonString ()
specifier|public
name|String
name|toJsonString
parameter_list|()
block|{
try|try
block|{
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|setVisibilityChecker
argument_list|(
name|mapper
operator|.
name|getSerializationConfig
argument_list|()
operator|.
name|getDefaultVisibilityChecker
argument_list|()
operator|.
name|withCreatorVisibility
argument_list|(
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|NONE
argument_list|)
operator|.
name|withFieldVisibility
argument_list|(
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|NONE
argument_list|)
operator|.
name|withGetterVisibility
argument_list|(
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|NONE
argument_list|)
operator|.
name|withIsGetterVisibility
argument_list|(
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|NONE
argument_list|)
operator|.
name|withSetterVisibility
argument_list|(
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|this
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// TODO : Log this error on server side.
block|}
comment|// TODO : Replace this with a JSON Object -- That represents this error.
return|return
literal|"500 Internal Server Error"
return|;
block|}
comment|/**    * Parses an Exception record.    *    * @param jsonString - Exception in Json format.    *    * @return OzoneException Object    *    * @throws IOException    */
DECL|method|parse (String jsonString)
specifier|public
specifier|static
name|OzoneException
name|parse
parameter_list|(
name|String
name|jsonString
parameter_list|)
throws|throws
name|IOException
block|{
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
return|return
name|mapper
operator|.
name|readValue
argument_list|(
name|jsonString
argument_list|,
name|OzoneException
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

