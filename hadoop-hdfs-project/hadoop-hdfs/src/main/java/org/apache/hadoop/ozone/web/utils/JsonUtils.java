begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectWriter
import|;
end_import

begin_comment
comment|/**  * JSON Utility functions used in ozone.  */
end_comment

begin_class
DECL|class|JsonUtils
specifier|public
specifier|final
class|class
name|JsonUtils
block|{
comment|// Reuse ObjectMapper instance for improving performance.
comment|// ObjectMapper is thread safe as long as we always configure instance
comment|// before use.
DECL|field|MAPPER
specifier|private
specifier|static
specifier|final
name|ObjectMapper
name|MAPPER
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
DECL|field|READER
specifier|private
specifier|static
specifier|final
name|ObjectReader
name|READER
init|=
name|MAPPER
operator|.
name|readerFor
argument_list|(
name|Object
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|WRITTER
specifier|private
specifier|static
specifier|final
name|ObjectWriter
name|WRITTER
init|=
name|MAPPER
operator|.
name|writerWithDefaultPrettyPrinter
argument_list|()
decl_stmt|;
DECL|method|JsonUtils ()
specifier|private
name|JsonUtils
parameter_list|()
block|{
comment|// Never constructed
block|}
DECL|method|toJsonStringWithDefaultPrettyPrinter (String jsonString)
specifier|public
specifier|static
name|String
name|toJsonStringWithDefaultPrettyPrinter
parameter_list|(
name|String
name|jsonString
parameter_list|)
throws|throws
name|IOException
block|{
name|Object
name|json
init|=
name|READER
operator|.
name|readValue
argument_list|(
name|jsonString
argument_list|)
decl_stmt|;
return|return
name|WRITTER
operator|.
name|writeValueAsString
argument_list|(
name|json
argument_list|)
return|;
block|}
DECL|method|toJsonString (Object obj)
specifier|public
specifier|static
name|String
name|toJsonString
parameter_list|(
name|Object
name|obj
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|MAPPER
operator|.
name|writeValueAsString
argument_list|(
name|obj
argument_list|)
return|;
block|}
block|}
end_class

end_unit

