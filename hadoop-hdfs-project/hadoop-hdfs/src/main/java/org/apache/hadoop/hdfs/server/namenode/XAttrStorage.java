begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|XAttr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|QuotaExceededException
import|;
end_import

begin_comment
comment|/**  * XAttrStorage is used to read and set xattrs for an inode.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|XAttrStorage
specifier|public
class|class
name|XAttrStorage
block|{
comment|/**    * Reads the extended attribute of an inode by name with prefix.    *<p>    *    * @param inode INode to read    * @param snapshotId the snapshotId of the requested path    * @param prefixedName xAttr name with prefix    * @return the xAttr    */
DECL|method|readINodeXAttrByPrefixedName (INode inode, int snapshotId, String prefixedName)
specifier|public
specifier|static
name|XAttr
name|readINodeXAttrByPrefixedName
parameter_list|(
name|INode
name|inode
parameter_list|,
name|int
name|snapshotId
parameter_list|,
name|String
name|prefixedName
parameter_list|)
block|{
name|XAttrFeature
name|f
init|=
name|inode
operator|.
name|getXAttrFeature
argument_list|(
name|snapshotId
argument_list|)
decl_stmt|;
return|return
name|f
operator|==
literal|null
condition|?
literal|null
else|:
name|f
operator|.
name|getXAttr
argument_list|(
name|prefixedName
argument_list|)
return|;
block|}
comment|/**    * Reads the existing extended attributes of an inode.    *<p>    * Must be called while holding the FSDirectory read lock.    *    * @param inodeAttr INodeAttributes to read.    * @return {@code XAttr} list.    */
DECL|method|readINodeXAttrs (INodeAttributes inodeAttr)
specifier|public
specifier|static
name|List
argument_list|<
name|XAttr
argument_list|>
name|readINodeXAttrs
parameter_list|(
name|INodeAttributes
name|inodeAttr
parameter_list|)
block|{
name|XAttrFeature
name|f
init|=
name|inodeAttr
operator|.
name|getXAttrFeature
argument_list|()
decl_stmt|;
return|return
name|f
operator|==
literal|null
condition|?
operator|new
name|ArrayList
argument_list|<
name|XAttr
argument_list|>
argument_list|(
literal|0
argument_list|)
else|:
name|f
operator|.
name|getXAttrs
argument_list|()
return|;
block|}
comment|/**    * Update xattrs of inode.    *<p>    * Must be called while holding the FSDirectory write lock.    *     * @param inode INode to update    * @param xAttrs to update xAttrs.    * @param snapshotId id of the latest snapshot of the inode    */
DECL|method|updateINodeXAttrs (INode inode, List<XAttr> xAttrs, int snapshotId)
specifier|public
specifier|static
name|void
name|updateINodeXAttrs
parameter_list|(
name|INode
name|inode
parameter_list|,
name|List
argument_list|<
name|XAttr
argument_list|>
name|xAttrs
parameter_list|,
name|int
name|snapshotId
parameter_list|)
throws|throws
name|QuotaExceededException
block|{
if|if
condition|(
name|inode
operator|.
name|getXAttrFeature
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|inode
operator|.
name|removeXAttrFeature
argument_list|(
name|snapshotId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xAttrs
operator|==
literal|null
operator|||
name|xAttrs
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return;
block|}
name|inode
operator|.
name|addXAttrFeature
argument_list|(
operator|new
name|XAttrFeature
argument_list|(
name|xAttrs
argument_list|)
argument_list|,
name|snapshotId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

