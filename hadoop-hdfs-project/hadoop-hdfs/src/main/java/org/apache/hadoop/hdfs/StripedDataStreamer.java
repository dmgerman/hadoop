begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedStripedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|CachingStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|util
operator|.
name|ByteArrayManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|util
operator|.
name|StripedBlockUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|DataChecksum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progressable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_comment
comment|/****************************************************************************  * The StripedDataStreamer class is used by {@link DFSStripedOutputStream}.  * There are two kinds of StripedDataStreamer, leading streamer and ordinary  * stream. Leading streamer requests a block group from NameNode, unwraps  * it to located blocks and transfers each located block to its corresponding  * ordinary streamer via a blocking queue.  *  ****************************************************************************/
end_comment

begin_class
DECL|class|StripedDataStreamer
specifier|public
class|class
name|StripedDataStreamer
extends|extends
name|DataStreamer
block|{
DECL|field|index
specifier|private
specifier|final
name|short
name|index
decl_stmt|;
DECL|field|stripedBlocks
specifier|private
specifier|final
name|List
argument_list|<
name|BlockingQueue
argument_list|<
name|LocatedBlock
argument_list|>
argument_list|>
name|stripedBlocks
decl_stmt|;
DECL|field|blockGroupSize
specifier|private
specifier|static
name|short
name|blockGroupSize
init|=
name|HdfsConstants
operator|.
name|NUM_DATA_BLOCKS
operator|+
name|HdfsConstants
operator|.
name|NUM_PARITY_BLOCKS
decl_stmt|;
DECL|field|hasCommittedBlock
specifier|private
name|boolean
name|hasCommittedBlock
init|=
literal|false
decl_stmt|;
DECL|method|StripedDataStreamer (HdfsFileStatus stat, ExtendedBlock block, DFSClient dfsClient, String src, Progressable progress, DataChecksum checksum, AtomicReference<CachingStrategy> cachingStrategy, ByteArrayManager byteArrayManage, short index, List<BlockingQueue<LocatedBlock>> stripedBlocks)
name|StripedDataStreamer
parameter_list|(
name|HdfsFileStatus
name|stat
parameter_list|,
name|ExtendedBlock
name|block
parameter_list|,
name|DFSClient
name|dfsClient
parameter_list|,
name|String
name|src
parameter_list|,
name|Progressable
name|progress
parameter_list|,
name|DataChecksum
name|checksum
parameter_list|,
name|AtomicReference
argument_list|<
name|CachingStrategy
argument_list|>
name|cachingStrategy
parameter_list|,
name|ByteArrayManager
name|byteArrayManage
parameter_list|,
name|short
name|index
parameter_list|,
name|List
argument_list|<
name|BlockingQueue
argument_list|<
name|LocatedBlock
argument_list|>
argument_list|>
name|stripedBlocks
parameter_list|)
block|{
name|super
argument_list|(
name|stat
argument_list|,
name|block
argument_list|,
name|dfsClient
argument_list|,
name|src
argument_list|,
name|progress
argument_list|,
name|checksum
argument_list|,
name|cachingStrategy
argument_list|,
name|byteArrayManage
argument_list|)
expr_stmt|;
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|stripedBlocks
operator|=
name|stripedBlocks
expr_stmt|;
block|}
comment|/**    * Construct a data streamer for appending to the last partial block    * @param lastBlock last block of the file to be appended    * @param stat status of the file to be appended    * @throws IOException if error occurs    */
DECL|method|StripedDataStreamer (LocatedBlock lastBlock, HdfsFileStatus stat, DFSClient dfsClient, String src, Progressable progress, DataChecksum checksum, AtomicReference<CachingStrategy> cachingStrategy, ByteArrayManager byteArrayManage, short index, List<BlockingQueue<LocatedBlock>> stripedBlocks)
name|StripedDataStreamer
parameter_list|(
name|LocatedBlock
name|lastBlock
parameter_list|,
name|HdfsFileStatus
name|stat
parameter_list|,
name|DFSClient
name|dfsClient
parameter_list|,
name|String
name|src
parameter_list|,
name|Progressable
name|progress
parameter_list|,
name|DataChecksum
name|checksum
parameter_list|,
name|AtomicReference
argument_list|<
name|CachingStrategy
argument_list|>
name|cachingStrategy
parameter_list|,
name|ByteArrayManager
name|byteArrayManage
parameter_list|,
name|short
name|index
parameter_list|,
name|List
argument_list|<
name|BlockingQueue
argument_list|<
name|LocatedBlock
argument_list|>
argument_list|>
name|stripedBlocks
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|lastBlock
argument_list|,
name|stat
argument_list|,
name|dfsClient
argument_list|,
name|src
argument_list|,
name|progress
argument_list|,
name|checksum
argument_list|,
name|cachingStrategy
argument_list|,
name|byteArrayManage
argument_list|)
expr_stmt|;
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|stripedBlocks
operator|=
name|stripedBlocks
expr_stmt|;
block|}
DECL|method|isLeadingStreamer ()
specifier|public
name|boolean
name|isLeadingStreamer
parameter_list|()
block|{
return|return
name|index
operator|==
literal|0
return|;
block|}
DECL|method|isParityStreamer ()
specifier|private
name|boolean
name|isParityStreamer
parameter_list|()
block|{
return|return
name|index
operator|>=
name|HdfsConstants
operator|.
name|NUM_DATA_BLOCKS
return|;
block|}
annotation|@
name|Override
DECL|method|endBlock ()
specifier|protected
name|void
name|endBlock
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isLeadingStreamer
argument_list|()
operator|&&
operator|!
name|isParityStreamer
argument_list|()
condition|)
block|{
comment|//before retrieving a new block, transfer the finished block to
comment|//leading streamer
name|LocatedBlock
name|finishedBlock
init|=
operator|new
name|LocatedBlock
argument_list|(
operator|new
name|ExtendedBlock
argument_list|(
name|block
operator|.
name|getBlockPoolId
argument_list|()
argument_list|,
name|block
operator|.
name|getBlockId
argument_list|()
argument_list|,
name|block
operator|.
name|getNumBytes
argument_list|()
argument_list|,
name|block
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
name|boolean
name|offSuccess
init|=
name|stripedBlocks
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|offer
argument_list|(
name|finishedBlock
argument_list|,
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
comment|//TODO: Handle InterruptedException (HDFS-7786)
block|}
block|}
name|super
operator|.
name|endBlock
argument_list|()
expr_stmt|;
block|}
comment|/**    * This function is called after the streamer is closed.    */
DECL|method|countTailingBlockGroupBytes ()
name|void
name|countTailingBlockGroupBytes
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|isLeadingStreamer
argument_list|()
condition|)
block|{
comment|//when committing a block group, leading streamer has to adjust
comment|// {@link block} including the size of block group
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|HdfsConstants
operator|.
name|NUM_DATA_BLOCKS
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|LocatedBlock
name|finishedLocatedBlock
init|=
name|stripedBlocks
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|poll
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
name|finishedLocatedBlock
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Fail to get finished LocatedBlock "
operator|+
literal|"from streamer, i="
operator|+
name|i
argument_list|)
throw|;
block|}
name|ExtendedBlock
name|finishedBlock
init|=
name|finishedLocatedBlock
operator|.
name|getBlock
argument_list|()
decl_stmt|;
name|long
name|bytes
init|=
name|finishedBlock
operator|==
literal|null
condition|?
literal|0
else|:
name|finishedBlock
operator|.
name|getNumBytes
argument_list|()
decl_stmt|;
if|if
condition|(
name|block
operator|!=
literal|null
condition|)
block|{
name|block
operator|.
name|setNumBytes
argument_list|(
name|block
operator|.
name|getNumBytes
argument_list|()
operator|+
name|bytes
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"InterruptedException received when "
operator|+
literal|"putting a block to stripeBlocks, ie = "
operator|+
name|ie
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|locateFollowingBlock (DatanodeInfo[] excludedNodes)
specifier|protected
name|LocatedBlock
name|locateFollowingBlock
parameter_list|(
name|DatanodeInfo
index|[]
name|excludedNodes
parameter_list|)
throws|throws
name|IOException
block|{
name|LocatedBlock
name|lb
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|isLeadingStreamer
argument_list|()
condition|)
block|{
if|if
condition|(
name|hasCommittedBlock
condition|)
block|{
comment|/**          * when committing a block group, leading streamer has to adjust          * {@link block} to include the size of block group          */
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|HdfsConstants
operator|.
name|NUM_DATA_BLOCKS
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|LocatedBlock
name|finishedLocatedBlock
init|=
name|stripedBlocks
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|poll
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
name|finishedLocatedBlock
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Fail to get finished LocatedBlock "
operator|+
literal|"from streamer, i="
operator|+
name|i
argument_list|)
throw|;
block|}
name|ExtendedBlock
name|finishedBlock
init|=
name|finishedLocatedBlock
operator|.
name|getBlock
argument_list|()
decl_stmt|;
name|long
name|bytes
init|=
name|finishedBlock
operator|==
literal|null
condition|?
literal|0
else|:
name|finishedBlock
operator|.
name|getNumBytes
argument_list|()
decl_stmt|;
if|if
condition|(
name|block
operator|!=
literal|null
condition|)
block|{
name|block
operator|.
name|setNumBytes
argument_list|(
name|block
operator|.
name|getNumBytes
argument_list|()
operator|+
name|bytes
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"InterruptedException received when putting"
operator|+
literal|" a block to stripeBlocks, ie = "
operator|+
name|ie
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|lb
operator|=
name|super
operator|.
name|locateFollowingBlock
argument_list|(
name|excludedNodes
argument_list|)
expr_stmt|;
name|hasCommittedBlock
operator|=
literal|true
expr_stmt|;
assert|assert
name|lb
operator|instanceof
name|LocatedStripedBlock
assert|;
name|DFSClient
operator|.
name|LOG
operator|.
name|debug
argument_list|(
literal|"Leading streamer obtained bg "
operator|+
name|lb
argument_list|)
expr_stmt|;
name|LocatedBlock
index|[]
name|blocks
init|=
name|StripedBlockUtil
operator|.
name|parseStripedBlockGroup
argument_list|(
operator|(
name|LocatedStripedBlock
operator|)
name|lb
argument_list|,
name|HdfsConstants
operator|.
name|BLOCK_STRIPED_CELL_SIZE
argument_list|,
name|HdfsConstants
operator|.
name|NUM_DATA_BLOCKS
argument_list|,
name|HdfsConstants
operator|.
name|NUM_PARITY_BLOCKS
argument_list|)
decl_stmt|;
assert|assert
name|blocks
operator|.
name|length
operator|==
name|blockGroupSize
operator|:
literal|"Fail to get block group from namenode: blockGroupSize: "
operator|+
name|blockGroupSize
operator|+
literal|", blocks.length: "
operator|+
name|blocks
operator|.
name|length
assert|;
name|lb
operator|=
name|blocks
index|[
literal|0
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|blocks
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|boolean
name|offSuccess
init|=
name|stripedBlocks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|offer
argument_list|(
name|blocks
index|[
name|i
index|]
argument_list|,
literal|90
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|offSuccess
condition|)
block|{
name|String
name|msg
init|=
literal|"Fail to put block to stripeBlocks. i = "
operator|+
name|i
decl_stmt|;
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
name|msg
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
else|else
block|{
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"Allocate a new block to a streamer. i = "
operator|+
name|i
operator|+
literal|", block: "
operator|+
name|blocks
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"InterruptedException received when putting"
operator|+
literal|" a block to stripeBlocks, ie = "
operator|+
name|ie
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
try|try
block|{
comment|//wait 90 seconds to get a block from the queue
name|lb
operator|=
name|stripedBlocks
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|poll
argument_list|(
literal|90
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
name|DFSClient
operator|.
name|LOG
operator|.
name|info
argument_list|(
literal|"InterruptedException received when retrieving "
operator|+
literal|"a block from stripeBlocks, ie = "
operator|+
name|ie
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|lb
return|;
block|}
block|}
end_class

end_unit

