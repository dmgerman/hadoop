begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.resolver
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|AddMountTableEntryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|AddMountTableEntryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|GetMountTableEntriesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|GetMountTableEntriesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|RemoveMountTableEntryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|RemoveMountTableEntryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|UpdateMountTableEntryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|UpdateMountTableEntryResponse
import|;
end_import

begin_comment
comment|/**  * Manage a mount table.  */
end_comment

begin_interface
DECL|interface|MountTableManager
specifier|public
interface|interface
name|MountTableManager
block|{
comment|/**    * Add an entry to the mount table.    *    * @param request Fully populated request object.    * @return True if the mount table entry was successfully committed to the    *         data store.    * @throws IOException Throws exception if the data store is not initialized.    */
DECL|method|addMountTableEntry ( AddMountTableEntryRequest request)
name|AddMountTableEntryResponse
name|addMountTableEntry
parameter_list|(
name|AddMountTableEntryRequest
name|request
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Updates an existing entry in the mount table.    *    * @param request Fully populated request object.    * @return True if the mount table entry was successfully committed to the    *         data store.    * @throws IOException Throws exception if the data store is not initialized.    */
DECL|method|updateMountTableEntry ( UpdateMountTableEntryRequest request)
name|UpdateMountTableEntryResponse
name|updateMountTableEntry
parameter_list|(
name|UpdateMountTableEntryRequest
name|request
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Remove an entry from the mount table.    *    * @param request Fully populated request object.    * @return True the mount table entry was removed from the data store.    * @throws IOException Throws exception if the data store is not initialized.    */
DECL|method|removeMountTableEntry ( RemoveMountTableEntryRequest request)
name|RemoveMountTableEntryResponse
name|removeMountTableEntry
parameter_list|(
name|RemoveMountTableEntryRequest
name|request
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * List all mount table entries present at or below the path. Fetches from the    * state store.    *    * @param request Fully populated request object.    *    * @return List of all mount table entries under the path. Zero-length list if    *         none are found.    * @throws IOException Throws exception if the data store cannot be queried.    */
DECL|method|getMountTableEntries ( GetMountTableEntriesRequest request)
name|GetMountTableEntriesResponse
name|getMountTableEntries
parameter_list|(
name|GetMountTableEntriesRequest
name|request
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

