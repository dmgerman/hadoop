begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolR23Compatible
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolR23Compatible
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**   * Interface that represents the over the wire information  * including block locations for a file.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|HdfsLocatedFileStatusWritable
specifier|public
class|class
name|HdfsLocatedFileStatusWritable
extends|extends
name|HdfsFileStatusWritable
block|{
DECL|field|locations
specifier|private
name|LocatedBlocksWritable
name|locations
decl_stmt|;
comment|/**    * Default constructor    */
DECL|method|HdfsLocatedFileStatusWritable ()
specifier|public
name|HdfsLocatedFileStatusWritable
parameter_list|()
block|{   }
comment|/**    * Constructor    *     * @param length size    * @param isdir if this is directory    * @param block_replication the file's replication factor    * @param blocksize the file's block size    * @param modification_time most recent modification time    * @param access_time most recent access time    * @param permission permission    * @param owner owner    * @param group group    * @param symlink symbolic link    * @param path local path name in java UTF8 format     * @param locations block locations    */
DECL|method|HdfsLocatedFileStatusWritable (long length, boolean isdir, int block_replication, long blocksize, long modification_time, long access_time, FsPermissionWritable permission, String owner, String group, byte[] symlink, byte[] path, LocatedBlocksWritable locations)
specifier|public
name|HdfsLocatedFileStatusWritable
parameter_list|(
name|long
name|length
parameter_list|,
name|boolean
name|isdir
parameter_list|,
name|int
name|block_replication
parameter_list|,
name|long
name|blocksize
parameter_list|,
name|long
name|modification_time
parameter_list|,
name|long
name|access_time
parameter_list|,
name|FsPermissionWritable
name|permission
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|byte
index|[]
name|symlink
parameter_list|,
name|byte
index|[]
name|path
parameter_list|,
name|LocatedBlocksWritable
name|locations
parameter_list|)
block|{
name|super
argument_list|(
name|length
argument_list|,
name|isdir
argument_list|,
name|block_replication
argument_list|,
name|blocksize
argument_list|,
name|modification_time
argument_list|,
name|access_time
argument_list|,
name|permission
argument_list|,
name|owner
argument_list|,
name|group
argument_list|,
name|symlink
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|this
operator|.
name|locations
operator|=
name|locations
expr_stmt|;
block|}
specifier|static
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsLocatedFileStatus
DECL|method|convertLocatedHdfsFileStatus (HdfsLocatedFileStatusWritable fs)
name|convertLocatedHdfsFileStatus
parameter_list|(
name|HdfsLocatedFileStatusWritable
name|fs
parameter_list|)
block|{
if|if
condition|(
name|fs
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsLocatedFileStatus
argument_list|(
name|fs
operator|.
name|getLen
argument_list|()
argument_list|,
name|fs
operator|.
name|isDir
argument_list|()
argument_list|,
name|fs
operator|.
name|getReplication
argument_list|()
argument_list|,
name|fs
operator|.
name|getBlockSize
argument_list|()
argument_list|,
name|fs
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|fs
operator|.
name|getAccessTime
argument_list|()
argument_list|,
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|fs
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|,
name|fs
operator|.
name|getOwner
argument_list|()
argument_list|,
name|fs
operator|.
name|getGroup
argument_list|()
argument_list|,
name|fs
operator|.
name|getSymlinkInBytes
argument_list|()
argument_list|,
name|fs
operator|.
name|getLocalNameInBytes
argument_list|()
argument_list|,
name|LocatedBlocksWritable
operator|.
name|convertLocatedBlocks
argument_list|(
name|fs
operator|.
name|getBlockLocations
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|convertLocatedHdfsFileStatus ( org.apache.hadoop.hdfs.protocol.HdfsLocatedFileStatus fs)
specifier|static
specifier|public
name|HdfsLocatedFileStatusWritable
name|convertLocatedHdfsFileStatus
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsLocatedFileStatus
name|fs
parameter_list|)
block|{
if|if
condition|(
name|fs
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|HdfsLocatedFileStatusWritable
argument_list|(
name|fs
operator|.
name|getLen
argument_list|()
argument_list|,
name|fs
operator|.
name|isDir
argument_list|()
argument_list|,
name|fs
operator|.
name|getReplication
argument_list|()
argument_list|,
name|fs
operator|.
name|getBlockSize
argument_list|()
argument_list|,
name|fs
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|fs
operator|.
name|getAccessTime
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolR23Compatible
operator|.
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|fs
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|,
name|fs
operator|.
name|getOwner
argument_list|()
argument_list|,
name|fs
operator|.
name|getGroup
argument_list|()
argument_list|,
name|fs
operator|.
name|getSymlinkInBytes
argument_list|()
argument_list|,
name|fs
operator|.
name|getLocalNameInBytes
argument_list|()
argument_list|,
name|LocatedBlocksWritable
operator|.
name|convertLocatedBlocks
argument_list|(
name|fs
operator|.
name|getBlockLocations
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getBlockLocations ()
specifier|public
name|LocatedBlocksWritable
name|getBlockLocations
parameter_list|()
block|{
return|return
name|locations
return|;
block|}
comment|//////////////////////////////////////////////////
comment|// Writable
comment|//////////////////////////////////////////////////
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isDir
argument_list|()
operator|&&
operator|!
name|isSymlink
argument_list|()
condition|)
block|{
name|locations
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isDir
argument_list|()
operator|&&
operator|!
name|isSymlink
argument_list|()
condition|)
block|{
name|locations
operator|=
operator|new
name|LocatedBlocksWritable
argument_list|()
expr_stmt|;
name|locations
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

