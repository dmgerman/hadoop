begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.ha
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|ha
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ha
operator|.
name|ServiceFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNode
operator|.
name|OperationCategory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|UnsupportedActionException
import|;
end_import

begin_comment
comment|/**  * Active state of the namenode. In this state, namenode provides the namenode  * service and handles operations of type {@link OperationCategory#WRITE} and  * {@link OperationCategory#READ}.  */
end_comment

begin_class
DECL|class|ActiveState
specifier|public
class|class
name|ActiveState
extends|extends
name|HAState
block|{
DECL|method|ActiveState ()
specifier|public
name|ActiveState
parameter_list|()
block|{
name|super
argument_list|(
literal|"active"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|checkOperation (NameNode nn, OperationCategory op)
specifier|public
name|void
name|checkOperation
parameter_list|(
name|NameNode
name|nn
parameter_list|,
name|OperationCategory
name|op
parameter_list|)
throws|throws
name|UnsupportedActionException
block|{
return|return;
comment|// Other than journal all operations are allowed in active state
block|}
annotation|@
name|Override
DECL|method|setState (NameNode nn, HAState s)
specifier|public
name|void
name|setState
parameter_list|(
name|NameNode
name|nn
parameter_list|,
name|HAState
name|s
parameter_list|)
throws|throws
name|ServiceFailedException
block|{
if|if
condition|(
name|s
operator|==
name|NameNode
operator|.
name|STANDBY_STATE
condition|)
block|{
name|setStateInternal
argument_list|(
name|nn
argument_list|,
name|s
argument_list|)
expr_stmt|;
return|return;
block|}
name|super
operator|.
name|setState
argument_list|(
name|nn
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|enterState (NameNode nn)
specifier|protected
name|void
name|enterState
parameter_list|(
name|NameNode
name|nn
parameter_list|)
throws|throws
name|ServiceFailedException
block|{
comment|// TODO:HA
block|}
annotation|@
name|Override
DECL|method|exitState (NameNode nn)
specifier|protected
name|void
name|exitState
parameter_list|(
name|NameNode
name|nn
parameter_list|)
throws|throws
name|ServiceFailedException
block|{
comment|// TODO:HA
block|}
block|}
end_class

end_unit

