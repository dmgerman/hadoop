begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.web.dtp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|web
operator|.
name|dtp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|io
operator|.
name|netty
operator|.
name|handler
operator|.
name|codec
operator|.
name|http2
operator|.
name|Http2ConnectionHandler
import|;
end_import

begin_comment
comment|/**  * The HTTP/2 handler.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|DtpHttp2Handler
specifier|public
class|class
name|DtpHttp2Handler
extends|extends
name|Http2ConnectionHandler
block|{
DECL|method|DtpHttp2Handler ()
specifier|public
name|DtpHttp2Handler
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|,
operator|new
name|DtpHttp2FrameListener
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DtpHttp2FrameListener
operator|)
name|decoder
argument_list|()
operator|.
name|listener
argument_list|()
operator|)
operator|.
name|encoder
argument_list|(
name|encoder
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

