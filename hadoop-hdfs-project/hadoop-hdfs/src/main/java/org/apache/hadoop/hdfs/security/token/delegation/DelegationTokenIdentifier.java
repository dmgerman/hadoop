begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.security.token.delegation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|SWebHdfsFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|AbstractDelegationTokenIdentifier
import|;
end_import

begin_comment
comment|/**  * A delegation token identifier that is specific to HDFS.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|DelegationTokenIdentifier
specifier|public
class|class
name|DelegationTokenIdentifier
extends|extends
name|AbstractDelegationTokenIdentifier
block|{
DECL|field|HDFS_DELEGATION_KIND
specifier|public
specifier|static
specifier|final
name|Text
name|HDFS_DELEGATION_KIND
init|=
operator|new
name|Text
argument_list|(
literal|"HDFS_DELEGATION_TOKEN"
argument_list|)
decl_stmt|;
comment|/**    * Create an empty delegation token identifier for reading into.    */
DECL|method|DelegationTokenIdentifier ()
specifier|public
name|DelegationTokenIdentifier
parameter_list|()
block|{   }
comment|/**    * Create a new delegation token identifier    * @param owner the effective username of the token owner    * @param renewer the username of the renewer    * @param realUser the real username of the token owner    */
DECL|method|DelegationTokenIdentifier (Text owner, Text renewer, Text realUser)
specifier|public
name|DelegationTokenIdentifier
parameter_list|(
name|Text
name|owner
parameter_list|,
name|Text
name|renewer
parameter_list|,
name|Text
name|realUser
parameter_list|)
block|{
name|super
argument_list|(
name|owner
argument_list|,
name|renewer
argument_list|,
name|realUser
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getKind ()
specifier|public
name|Text
name|getKind
parameter_list|()
block|{
return|return
name|HDFS_DELEGATION_KIND
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getKind
argument_list|()
operator|+
literal|" token "
operator|+
name|getSequenceNumber
argument_list|()
operator|+
literal|" for "
operator|+
name|getUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
return|;
block|}
comment|/** @return a string representation of the token */
DECL|method|stringifyToken (final Token<?> token)
specifier|public
specifier|static
name|String
name|stringifyToken
parameter_list|(
specifier|final
name|Token
argument_list|<
name|?
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|DelegationTokenIdentifier
name|ident
init|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
decl_stmt|;
name|ByteArrayInputStream
name|buf
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|token
operator|.
name|getIdentifier
argument_list|()
argument_list|)
decl_stmt|;
name|DataInputStream
name|in
init|=
operator|new
name|DataInputStream
argument_list|(
name|buf
argument_list|)
decl_stmt|;
name|ident
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|token
operator|.
name|getService
argument_list|()
operator|.
name|getLength
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|ident
operator|+
literal|" on "
operator|+
name|token
operator|.
name|getService
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|ident
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|WebHdfsDelegationTokenIdentifier
specifier|public
specifier|static
class|class
name|WebHdfsDelegationTokenIdentifier
extends|extends
name|DelegationTokenIdentifier
block|{
DECL|method|WebHdfsDelegationTokenIdentifier ()
specifier|public
name|WebHdfsDelegationTokenIdentifier
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getKind ()
specifier|public
name|Text
name|getKind
parameter_list|()
block|{
return|return
name|WebHdfsFileSystem
operator|.
name|TOKEN_KIND
return|;
block|}
block|}
DECL|class|SWebHdfsDelegationTokenIdentifier
specifier|public
specifier|static
class|class
name|SWebHdfsDelegationTokenIdentifier
extends|extends
name|WebHdfsDelegationTokenIdentifier
block|{
DECL|method|SWebHdfsDelegationTokenIdentifier ()
specifier|public
name|SWebHdfsDelegationTokenIdentifier
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getKind ()
specifier|public
name|Text
name|getKind
parameter_list|()
block|{
return|return
name|SWebHdfsFileSystem
operator|.
name|TOKEN_KIND
return|;
block|}
block|}
block|}
end_class

end_unit

