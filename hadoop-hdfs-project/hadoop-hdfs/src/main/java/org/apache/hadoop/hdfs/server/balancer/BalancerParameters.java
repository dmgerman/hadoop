begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.balancer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|balancer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|BalancerParameters
specifier|final
class|class
name|BalancerParameters
block|{
DECL|field|policy
specifier|private
specifier|final
name|BalancingPolicy
name|policy
decl_stmt|;
DECL|field|threshold
specifier|private
specifier|final
name|double
name|threshold
decl_stmt|;
DECL|field|maxIdleIteration
specifier|private
specifier|final
name|int
name|maxIdleIteration
decl_stmt|;
comment|/** Exclude the nodes in this set. */
DECL|field|excludedNodes
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|excludedNodes
decl_stmt|;
comment|/** If empty, include any node; otherwise, include only these nodes. */
DECL|field|includedNodes
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|includedNodes
decl_stmt|;
comment|/**    * If empty, any node can be a source; otherwise, use only these nodes as    * source nodes.    */
DECL|field|sourceNodes
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|sourceNodes
decl_stmt|;
comment|/**    * A set of block pools to run the balancer on.    */
DECL|field|blockpools
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|blockpools
decl_stmt|;
comment|/**    * Whether to run the balancer during upgrade.    */
DECL|field|runDuringUpgrade
specifier|private
specifier|final
name|boolean
name|runDuringUpgrade
decl_stmt|;
DECL|field|DEFAULT
specifier|static
specifier|final
name|BalancerParameters
name|DEFAULT
init|=
operator|new
name|BalancerParameters
argument_list|()
decl_stmt|;
DECL|method|BalancerParameters ()
specifier|private
name|BalancerParameters
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|Builder
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|BalancerParameters (Builder builder)
specifier|private
name|BalancerParameters
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|policy
operator|=
name|builder
operator|.
name|policy
expr_stmt|;
name|this
operator|.
name|threshold
operator|=
name|builder
operator|.
name|threshold
expr_stmt|;
name|this
operator|.
name|maxIdleIteration
operator|=
name|builder
operator|.
name|maxIdleIteration
expr_stmt|;
name|this
operator|.
name|excludedNodes
operator|=
name|builder
operator|.
name|excludedNodes
expr_stmt|;
name|this
operator|.
name|includedNodes
operator|=
name|builder
operator|.
name|includedNodes
expr_stmt|;
name|this
operator|.
name|sourceNodes
operator|=
name|builder
operator|.
name|sourceNodes
expr_stmt|;
name|this
operator|.
name|blockpools
operator|=
name|builder
operator|.
name|blockpools
expr_stmt|;
name|this
operator|.
name|runDuringUpgrade
operator|=
name|builder
operator|.
name|runDuringUpgrade
expr_stmt|;
block|}
DECL|method|getBalancingPolicy ()
name|BalancingPolicy
name|getBalancingPolicy
parameter_list|()
block|{
return|return
name|this
operator|.
name|policy
return|;
block|}
DECL|method|getThreshold ()
name|double
name|getThreshold
parameter_list|()
block|{
return|return
name|this
operator|.
name|threshold
return|;
block|}
DECL|method|getMaxIdleIteration ()
name|int
name|getMaxIdleIteration
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxIdleIteration
return|;
block|}
DECL|method|getExcludedNodes ()
name|Set
argument_list|<
name|String
argument_list|>
name|getExcludedNodes
parameter_list|()
block|{
return|return
name|this
operator|.
name|excludedNodes
return|;
block|}
DECL|method|getIncludedNodes ()
name|Set
argument_list|<
name|String
argument_list|>
name|getIncludedNodes
parameter_list|()
block|{
return|return
name|this
operator|.
name|includedNodes
return|;
block|}
DECL|method|getSourceNodes ()
name|Set
argument_list|<
name|String
argument_list|>
name|getSourceNodes
parameter_list|()
block|{
return|return
name|this
operator|.
name|sourceNodes
return|;
block|}
DECL|method|getBlockPools ()
name|Set
argument_list|<
name|String
argument_list|>
name|getBlockPools
parameter_list|()
block|{
return|return
name|this
operator|.
name|blockpools
return|;
block|}
DECL|method|getRunDuringUpgrade ()
name|boolean
name|getRunDuringUpgrade
parameter_list|()
block|{
return|return
name|this
operator|.
name|runDuringUpgrade
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%s.%s [%s,"
operator|+
literal|" threshold = %s,"
operator|+
literal|" max idle iteration = %s,"
operator|+
literal|" #excluded nodes = %s,"
operator|+
literal|" #included nodes = %s,"
operator|+
literal|" #source nodes = %s,"
operator|+
literal|" #blockpools = %s,"
operator|+
literal|" run during upgrade = %s]"
argument_list|,
name|Balancer
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|policy
argument_list|,
name|threshold
argument_list|,
name|maxIdleIteration
argument_list|,
name|excludedNodes
operator|.
name|size
argument_list|()
argument_list|,
name|includedNodes
operator|.
name|size
argument_list|()
argument_list|,
name|sourceNodes
operator|.
name|size
argument_list|()
argument_list|,
name|blockpools
operator|.
name|size
argument_list|()
argument_list|,
name|runDuringUpgrade
argument_list|)
return|;
block|}
DECL|class|Builder
specifier|static
class|class
name|Builder
block|{
comment|// Defaults
DECL|field|policy
specifier|private
name|BalancingPolicy
name|policy
init|=
name|BalancingPolicy
operator|.
name|Node
operator|.
name|INSTANCE
decl_stmt|;
DECL|field|threshold
specifier|private
name|double
name|threshold
init|=
literal|10.0
decl_stmt|;
DECL|field|maxIdleIteration
specifier|private
name|int
name|maxIdleIteration
init|=
name|NameNodeConnector
operator|.
name|DEFAULT_MAX_IDLE_ITERATIONS
decl_stmt|;
DECL|field|excludedNodes
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|excludedNodes
init|=
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|includedNodes
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|includedNodes
init|=
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|sourceNodes
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|sourceNodes
init|=
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|blockpools
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|blockpools
init|=
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|runDuringUpgrade
specifier|private
name|boolean
name|runDuringUpgrade
init|=
literal|false
decl_stmt|;
DECL|method|Builder ()
name|Builder
parameter_list|()
block|{     }
DECL|method|setBalancingPolicy (BalancingPolicy p)
name|Builder
name|setBalancingPolicy
parameter_list|(
name|BalancingPolicy
name|p
parameter_list|)
block|{
name|this
operator|.
name|policy
operator|=
name|p
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setThreshold (double t)
name|Builder
name|setThreshold
parameter_list|(
name|double
name|t
parameter_list|)
block|{
name|this
operator|.
name|threshold
operator|=
name|t
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMaxIdleIteration (int m)
name|Builder
name|setMaxIdleIteration
parameter_list|(
name|int
name|m
parameter_list|)
block|{
name|this
operator|.
name|maxIdleIteration
operator|=
name|m
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setExcludedNodes (Set<String> nodes)
name|Builder
name|setExcludedNodes
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|excludedNodes
operator|=
name|nodes
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIncludedNodes (Set<String> nodes)
name|Builder
name|setIncludedNodes
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|includedNodes
operator|=
name|nodes
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setSourceNodes (Set<String> nodes)
name|Builder
name|setSourceNodes
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|sourceNodes
operator|=
name|nodes
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setBlockpools (Set<String> pools)
name|Builder
name|setBlockpools
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|pools
parameter_list|)
block|{
name|this
operator|.
name|blockpools
operator|=
name|pools
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setRunDuringUpgrade (boolean run)
name|Builder
name|setRunDuringUpgrade
parameter_list|(
name|boolean
name|run
parameter_list|)
block|{
name|this
operator|.
name|runDuringUpgrade
operator|=
name|run
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
name|BalancerParameters
name|build
parameter_list|()
block|{
return|return
operator|new
name|BalancerParameters
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

