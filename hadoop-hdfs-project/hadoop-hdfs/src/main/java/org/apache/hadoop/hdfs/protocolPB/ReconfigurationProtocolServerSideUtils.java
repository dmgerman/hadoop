begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|ReconfigurationTaskStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|ReconfigurationUtil
operator|.
name|PropertyChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ReconfigurationProtocolProtos
operator|.
name|GetReconfigurationStatusConfigChangeProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ReconfigurationProtocolProtos
operator|.
name|GetReconfigurationStatusResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ReconfigurationProtocolProtos
operator|.
name|ListReconfigurablePropertiesResponseProto
import|;
end_import

begin_comment
comment|/**  * This is a server side utility class that handles  * common logic to to parameter reconfiguration.  */
end_comment

begin_class
DECL|class|ReconfigurationProtocolServerSideUtils
specifier|public
specifier|final
class|class
name|ReconfigurationProtocolServerSideUtils
block|{
DECL|method|ReconfigurationProtocolServerSideUtils ()
specifier|private
name|ReconfigurationProtocolServerSideUtils
parameter_list|()
block|{   }
specifier|public
specifier|static
name|ListReconfigurablePropertiesResponseProto
DECL|method|listReconfigurableProperties ( List<String> reconfigurableProperties)
name|listReconfigurableProperties
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|reconfigurableProperties
parameter_list|)
block|{
name|ListReconfigurablePropertiesResponseProto
operator|.
name|Builder
name|builder
init|=
name|ListReconfigurablePropertiesResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addAllName
argument_list|(
name|reconfigurableProperties
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getReconfigurationStatus ( ReconfigurationTaskStatus status)
specifier|public
specifier|static
name|GetReconfigurationStatusResponseProto
name|getReconfigurationStatus
parameter_list|(
name|ReconfigurationTaskStatus
name|status
parameter_list|)
block|{
name|GetReconfigurationStatusResponseProto
operator|.
name|Builder
name|builder
init|=
name|GetReconfigurationStatusResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setStartTime
argument_list|(
name|status
operator|.
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|status
operator|.
name|stopped
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setEndTime
argument_list|(
name|status
operator|.
name|getEndTime
argument_list|()
argument_list|)
expr_stmt|;
assert|assert
name|status
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
assert|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|PropertyChange
argument_list|,
name|Optional
argument_list|<
name|String
argument_list|>
argument_list|>
name|result
range|:
name|status
operator|.
name|getStatus
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|GetReconfigurationStatusConfigChangeProto
operator|.
name|Builder
name|changeBuilder
init|=
name|GetReconfigurationStatusConfigChangeProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|PropertyChange
name|change
init|=
name|result
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|changeBuilder
operator|.
name|setName
argument_list|(
name|change
operator|.
name|prop
argument_list|)
expr_stmt|;
name|changeBuilder
operator|.
name|setOldValue
argument_list|(
name|change
operator|.
name|oldVal
operator|!=
literal|null
condition|?
name|change
operator|.
name|oldVal
else|:
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|change
operator|.
name|newVal
operator|!=
literal|null
condition|)
block|{
name|changeBuilder
operator|.
name|setNewValue
argument_list|(
name|change
operator|.
name|newVal
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|getValue
argument_list|()
operator|.
name|isPresent
argument_list|()
condition|)
block|{
comment|// Get full stack trace.
name|changeBuilder
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|addChanges
argument_list|(
name|changeBuilder
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

