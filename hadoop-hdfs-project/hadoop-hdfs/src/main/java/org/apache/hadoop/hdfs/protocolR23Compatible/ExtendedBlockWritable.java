begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolR23Compatible
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolR23Compatible
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DeprecatedUTF8
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactory
import|;
end_import

begin_comment
comment|/**  * Identifies a Block uniquely across the block pools  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|ExtendedBlockWritable
specifier|public
class|class
name|ExtendedBlockWritable
implements|implements
name|Writable
block|{
DECL|field|poolId
specifier|private
name|String
name|poolId
decl_stmt|;
DECL|field|blockId
specifier|private
name|long
name|blockId
decl_stmt|;
DECL|field|numBytes
specifier|private
name|long
name|numBytes
decl_stmt|;
DECL|field|generationStamp
specifier|private
name|long
name|generationStamp
decl_stmt|;
static|static
block|{
comment|// register a ctor
name|WritableFactories
operator|.
name|setFactory
argument_list|(
name|ExtendedBlockWritable
operator|.
name|class
argument_list|,
operator|new
name|WritableFactory
argument_list|()
block|{
specifier|public
name|Writable
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|ExtendedBlockWritable
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|convertExtendedBlock (ExtendedBlockWritable eb)
specifier|static
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
name|convertExtendedBlock
parameter_list|(
name|ExtendedBlockWritable
name|eb
parameter_list|)
block|{
if|if
condition|(
name|eb
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
argument_list|(
name|eb
operator|.
name|getBlockPoolId
argument_list|()
argument_list|,
name|eb
operator|.
name|getBlockId
argument_list|()
argument_list|,
name|eb
operator|.
name|getNumBytes
argument_list|()
argument_list|,
name|eb
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
return|;
block|}
DECL|method|convertExtendedBlock (final org.apache.hadoop.hdfs.protocol.ExtendedBlock b)
specifier|public
specifier|static
name|ExtendedBlockWritable
name|convertExtendedBlock
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
name|b
parameter_list|)
block|{
if|if
condition|(
name|b
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|ExtendedBlockWritable
argument_list|(
name|b
operator|.
name|getBlockPoolId
argument_list|()
argument_list|,
name|b
operator|.
name|getBlockId
argument_list|()
argument_list|,
name|b
operator|.
name|getNumBytes
argument_list|()
argument_list|,
name|b
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
return|;
block|}
DECL|method|ExtendedBlockWritable ()
specifier|public
name|ExtendedBlockWritable
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtendedBlockWritable (final ExtendedBlockWritable b)
specifier|public
name|ExtendedBlockWritable
parameter_list|(
specifier|final
name|ExtendedBlockWritable
name|b
parameter_list|)
block|{
name|this
argument_list|(
name|b
operator|.
name|poolId
argument_list|,
name|b
operator|.
name|blockId
argument_list|,
name|b
operator|.
name|numBytes
argument_list|,
name|b
operator|.
name|generationStamp
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtendedBlockWritable (final String poolId, final long blockId)
specifier|public
name|ExtendedBlockWritable
parameter_list|(
specifier|final
name|String
name|poolId
parameter_list|,
specifier|final
name|long
name|blockId
parameter_list|)
block|{
name|this
argument_list|(
name|poolId
argument_list|,
name|blockId
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|ExtendedBlockWritable (final String poolId, final long blkid, final long len, final long genstamp)
specifier|public
name|ExtendedBlockWritable
parameter_list|(
specifier|final
name|String
name|poolId
parameter_list|,
specifier|final
name|long
name|blkid
parameter_list|,
specifier|final
name|long
name|len
parameter_list|,
specifier|final
name|long
name|genstamp
parameter_list|)
block|{
name|this
operator|.
name|poolId
operator|=
name|poolId
expr_stmt|;
name|this
operator|.
name|blockId
operator|=
name|blkid
expr_stmt|;
name|this
operator|.
name|numBytes
operator|=
name|len
expr_stmt|;
name|this
operator|.
name|generationStamp
operator|=
name|genstamp
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|DeprecatedUTF8
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|poolId
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|blockId
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|numBytes
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|generationStamp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|poolId
operator|=
name|DeprecatedUTF8
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|blockId
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|numBytes
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|generationStamp
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
if|if
condition|(
name|numBytes
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unexpected block size: "
operator|+
name|numBytes
argument_list|)
throw|;
block|}
block|}
DECL|method|getBlockPoolId ()
specifier|public
name|String
name|getBlockPoolId
parameter_list|()
block|{
return|return
name|poolId
return|;
block|}
DECL|method|getNumBytes ()
specifier|public
name|long
name|getNumBytes
parameter_list|()
block|{
return|return
name|numBytes
return|;
block|}
DECL|method|getBlockId ()
specifier|public
name|long
name|getBlockId
parameter_list|()
block|{
return|return
name|blockId
return|;
block|}
DECL|method|getGenerationStamp ()
specifier|public
name|long
name|getGenerationStamp
parameter_list|()
block|{
return|return
name|generationStamp
return|;
block|}
annotation|@
name|Override
comment|// Object
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|poolId
operator|+
literal|":"
operator|+
operator|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|Block
argument_list|(
name|blockId
argument_list|,
name|numBytes
argument_list|,
name|generationStamp
argument_list|)
operator|)
return|;
block|}
block|}
end_class

end_unit

