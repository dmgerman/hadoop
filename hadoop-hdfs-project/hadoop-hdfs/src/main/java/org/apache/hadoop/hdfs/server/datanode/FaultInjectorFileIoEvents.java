begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|FsVolumeSpi
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * Injects faults in the metadata and data related operations on datanode  * volumes.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|FaultInjectorFileIoEvents
specifier|public
class|class
name|FaultInjectorFileIoEvents
block|{
DECL|field|isEnabled
specifier|private
specifier|final
name|boolean
name|isEnabled
decl_stmt|;
DECL|method|FaultInjectorFileIoEvents (@ullable Configuration conf)
specifier|public
name|FaultInjectorFileIoEvents
parameter_list|(
annotation|@
name|Nullable
name|Configuration
name|conf
parameter_list|)
block|{
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
block|{
name|isEnabled
operator|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_ENABLE_FILEIO_FAULT_INJECTION_KEY
argument_list|,
name|DFSConfigKeys
operator|.
name|DFS_DATANODE_ENABLE_FILEIO_FAULT_INJECTION_DEFAULT
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|isEnabled
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|beforeMetadataOp ( @ullable FsVolumeSpi volume, FileIoProvider.OPERATION op)
specifier|public
name|void
name|beforeMetadataOp
parameter_list|(
annotation|@
name|Nullable
name|FsVolumeSpi
name|volume
parameter_list|,
name|FileIoProvider
operator|.
name|OPERATION
name|op
parameter_list|)
block|{   }
DECL|method|beforeFileIo ( @ullable FsVolumeSpi volume, FileIoProvider.OPERATION op, long len)
specifier|public
name|void
name|beforeFileIo
parameter_list|(
annotation|@
name|Nullable
name|FsVolumeSpi
name|volume
parameter_list|,
name|FileIoProvider
operator|.
name|OPERATION
name|op
parameter_list|,
name|long
name|len
parameter_list|)
block|{   }
block|}
end_class

end_unit

