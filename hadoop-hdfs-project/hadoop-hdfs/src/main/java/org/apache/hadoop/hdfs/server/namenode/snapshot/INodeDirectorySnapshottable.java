begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.snapshot
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeDirectoryWithQuota
import|;
end_import

begin_comment
comment|/** Directories where taking snapshots is allowed. */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|INodeDirectorySnapshottable
specifier|public
class|class
name|INodeDirectorySnapshottable
extends|extends
name|INodeDirectoryWithQuota
block|{
DECL|method|newInstance (final INodeDirectory dir)
specifier|static
specifier|public
name|INodeDirectorySnapshottable
name|newInstance
parameter_list|(
specifier|final
name|INodeDirectory
name|dir
parameter_list|)
block|{
name|long
name|nsq
init|=
operator|-
literal|1L
decl_stmt|;
name|long
name|dsq
init|=
operator|-
literal|1L
decl_stmt|;
if|if
condition|(
name|dir
operator|instanceof
name|INodeDirectoryWithQuota
condition|)
block|{
specifier|final
name|INodeDirectoryWithQuota
name|q
init|=
operator|(
name|INodeDirectoryWithQuota
operator|)
name|dir
decl_stmt|;
name|nsq
operator|=
name|q
operator|.
name|getNsQuota
argument_list|()
expr_stmt|;
name|dsq
operator|=
name|q
operator|.
name|getDsQuota
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|INodeDirectorySnapshottable
argument_list|(
name|nsq
argument_list|,
name|dsq
argument_list|,
name|dir
argument_list|)
return|;
block|}
DECL|method|INodeDirectorySnapshottable (long nsQuota, long dsQuota, INodeDirectory dir)
specifier|private
name|INodeDirectorySnapshottable
parameter_list|(
name|long
name|nsQuota
parameter_list|,
name|long
name|dsQuota
parameter_list|,
name|INodeDirectory
name|dir
parameter_list|)
block|{
name|super
argument_list|(
name|nsQuota
argument_list|,
name|dsQuota
argument_list|,
name|dir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isSnapshottable ()
specifier|public
name|boolean
name|isSnapshottable
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

