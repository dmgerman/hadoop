begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|FsVolumeReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * This class includes a replica being actively written and the reference to  * the fs volume where this replica is located.  */
end_comment

begin_class
DECL|class|ReplicaHandler
specifier|public
class|class
name|ReplicaHandler
implements|implements
name|Closeable
block|{
DECL|field|replica
specifier|private
specifier|final
name|ReplicaInPipeline
name|replica
decl_stmt|;
DECL|field|volumeReference
specifier|private
specifier|final
name|FsVolumeReference
name|volumeReference
decl_stmt|;
DECL|method|ReplicaHandler ( ReplicaInPipeline replica, FsVolumeReference reference)
specifier|public
name|ReplicaHandler
parameter_list|(
name|ReplicaInPipeline
name|replica
parameter_list|,
name|FsVolumeReference
name|reference
parameter_list|)
block|{
name|this
operator|.
name|replica
operator|=
name|replica
expr_stmt|;
name|this
operator|.
name|volumeReference
operator|=
name|reference
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|volumeReference
operator|!=
literal|null
condition|)
block|{
name|volumeReference
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getReplica ()
specifier|public
name|ReplicaInPipeline
name|getReplica
parameter_list|()
block|{
return|return
name|replica
return|;
block|}
block|}
end_class

end_unit

