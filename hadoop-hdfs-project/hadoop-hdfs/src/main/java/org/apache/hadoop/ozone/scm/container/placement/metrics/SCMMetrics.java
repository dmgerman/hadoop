begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.scm.container.placement.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|scm
operator|.
name|container
operator|.
name|placement
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeLong
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining StorageContainerManager statistics.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"Storage Container Manager Metrics"
argument_list|,
name|context
operator|=
literal|"dfs"
argument_list|)
DECL|class|SCMMetrics
specifier|public
class|class
name|SCMMetrics
block|{
DECL|field|SOURCE_NAME
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_NAME
init|=
name|SCMMetrics
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
decl_stmt|;
comment|/**    * Container stat metrics, the meaning of following metrics    * can be found in {@link ContainerStat}.    */
DECL|field|lastContainerReportSize
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportSize
decl_stmt|;
DECL|field|lastContainerReportUsed
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportUsed
decl_stmt|;
DECL|field|lastContainerReportKeyCount
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportKeyCount
decl_stmt|;
DECL|field|lastContainerReportReadBytes
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportReadBytes
decl_stmt|;
DECL|field|lastContainerReportWriteBytes
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportWriteBytes
decl_stmt|;
DECL|field|lastContainerReportReadCount
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportReadCount
decl_stmt|;
DECL|field|lastContainerReportWriteCount
annotation|@
name|Metric
specifier|private
name|MutableGaugeLong
name|lastContainerReportWriteCount
decl_stmt|;
DECL|field|containerReportSize
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportSize
decl_stmt|;
DECL|field|containerReportUsed
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportUsed
decl_stmt|;
DECL|field|containerReportKeyCount
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportKeyCount
decl_stmt|;
DECL|field|containerReportReadBytes
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportReadBytes
decl_stmt|;
DECL|field|containerReportWriteBytes
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportWriteBytes
decl_stmt|;
DECL|field|containerReportReadCount
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportReadCount
decl_stmt|;
DECL|field|containerReportWriteCount
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|containerReportWriteCount
decl_stmt|;
DECL|method|SCMMetrics ()
specifier|public
name|SCMMetrics
parameter_list|()
block|{   }
DECL|method|create ()
specifier|public
specifier|static
name|SCMMetrics
name|create
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|SOURCE_NAME
argument_list|,
literal|"Storage Container Manager Metrics"
argument_list|,
operator|new
name|SCMMetrics
argument_list|()
argument_list|)
return|;
block|}
DECL|method|setLastContainerReportSize (long size)
specifier|public
name|void
name|setLastContainerReportSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportSize
operator|.
name|set
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportUsed (long used)
specifier|public
name|void
name|setLastContainerReportUsed
parameter_list|(
name|long
name|used
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportUsed
operator|.
name|set
argument_list|(
name|used
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportKeyCount (long keyCount)
specifier|public
name|void
name|setLastContainerReportKeyCount
parameter_list|(
name|long
name|keyCount
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportKeyCount
operator|.
name|set
argument_list|(
name|keyCount
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportReadBytes (long readBytes)
specifier|public
name|void
name|setLastContainerReportReadBytes
parameter_list|(
name|long
name|readBytes
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportReadBytes
operator|.
name|set
argument_list|(
name|readBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportWriteBytes (long writeBytes)
specifier|public
name|void
name|setLastContainerReportWriteBytes
parameter_list|(
name|long
name|writeBytes
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportWriteBytes
operator|.
name|set
argument_list|(
name|writeBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportReadCount (long readCount)
specifier|public
name|void
name|setLastContainerReportReadCount
parameter_list|(
name|long
name|readCount
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportReadCount
operator|.
name|set
argument_list|(
name|readCount
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerReportWriteCount (long writeCount)
specifier|public
name|void
name|setLastContainerReportWriteCount
parameter_list|(
name|long
name|writeCount
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportWriteCount
operator|.
name|set
argument_list|(
name|writeCount
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportSize (long size)
specifier|public
name|void
name|incrContainerReportSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|containerReportSize
operator|.
name|incr
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportUsed (long used)
specifier|public
name|void
name|incrContainerReportUsed
parameter_list|(
name|long
name|used
parameter_list|)
block|{
name|this
operator|.
name|containerReportUsed
operator|.
name|incr
argument_list|(
name|used
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportKeyCount (long keyCount)
specifier|public
name|void
name|incrContainerReportKeyCount
parameter_list|(
name|long
name|keyCount
parameter_list|)
block|{
name|this
operator|.
name|containerReportKeyCount
operator|.
name|incr
argument_list|(
name|keyCount
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportReadBytes (long readBytes)
specifier|public
name|void
name|incrContainerReportReadBytes
parameter_list|(
name|long
name|readBytes
parameter_list|)
block|{
name|this
operator|.
name|containerReportReadBytes
operator|.
name|incr
argument_list|(
name|readBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportWriteBytes (long writeBytes)
specifier|public
name|void
name|incrContainerReportWriteBytes
parameter_list|(
name|long
name|writeBytes
parameter_list|)
block|{
name|this
operator|.
name|containerReportWriteBytes
operator|.
name|incr
argument_list|(
name|writeBytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportReadCount (long readCount)
specifier|public
name|void
name|incrContainerReportReadCount
parameter_list|(
name|long
name|readCount
parameter_list|)
block|{
name|this
operator|.
name|containerReportReadCount
operator|.
name|incr
argument_list|(
name|readCount
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerReportWriteCount (long writeCount)
specifier|public
name|void
name|incrContainerReportWriteCount
parameter_list|(
name|long
name|writeCount
parameter_list|)
block|{
name|this
operator|.
name|containerReportWriteCount
operator|.
name|incr
argument_list|(
name|writeCount
argument_list|)
expr_stmt|;
block|}
DECL|method|setLastContainerStat (ContainerStat newStat)
specifier|public
name|void
name|setLastContainerStat
parameter_list|(
name|ContainerStat
name|newStat
parameter_list|)
block|{
name|this
operator|.
name|lastContainerReportSize
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getSize
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportUsed
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getUsed
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportKeyCount
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getKeyCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportReadBytes
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getReadBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportWriteBytes
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getWriteBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportReadCount
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getReadCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastContainerReportWriteCount
operator|.
name|set
argument_list|(
name|newStat
operator|.
name|getWriteCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|incrContainerStat (ContainerStat deltaStat)
specifier|public
name|void
name|incrContainerStat
parameter_list|(
name|ContainerStat
name|deltaStat
parameter_list|)
block|{
name|this
operator|.
name|containerReportSize
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getSize
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportUsed
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getUsed
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportKeyCount
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getKeyCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportReadBytes
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getReadBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportWriteBytes
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getWriteBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportReadCount
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getReadCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportWriteCount
operator|.
name|incr
argument_list|(
name|deltaStat
operator|.
name|getWriteCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|decrContainerStat (ContainerStat deltaStat)
specifier|public
name|void
name|decrContainerStat
parameter_list|(
name|ContainerStat
name|deltaStat
parameter_list|)
block|{
name|this
operator|.
name|containerReportSize
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getSize
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportUsed
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getUsed
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportKeyCount
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getKeyCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportReadBytes
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getReadBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportWriteBytes
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getWriteBytes
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportReadCount
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getReadCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerReportWriteCount
operator|.
name|incr
argument_list|(
operator|-
literal|1
operator|*
name|deltaStat
operator|.
name|getWriteCount
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|unRegister ()
specifier|public
name|void
name|unRegister
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|ms
operator|.
name|unregisterSource
argument_list|(
name|SOURCE_NAME
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

