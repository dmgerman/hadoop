begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
operator|.
name|HdfsClientConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockPlacementPolicyDefault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockPlacementPolicyRackFaultTolerant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
operator|.
name|RamDiskReplicaLruTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|HttpConfig
import|;
end_import

begin_comment
comment|/**   * This class contains constants for configuration keys and default values  * used in hdfs.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|DFSConfigKeys
specifier|public
class|class
name|DFSConfigKeys
extends|extends
name|CommonConfigurationKeys
block|{
DECL|field|DFS_BLOCK_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_SIZE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_BLOCK_SIZE_KEY
decl_stmt|;
DECL|field|DFS_BLOCK_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCK_SIZE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_BLOCK_SIZE_DEFAULT
decl_stmt|;
DECL|field|DFS_REPLICATION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_REPLICATION_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_REPLICATION_KEY
decl_stmt|;
DECL|field|DFS_REPLICATION_DEFAULT
specifier|public
specifier|static
specifier|final
name|short
name|DFS_REPLICATION_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_REPLICATION_DEFAULT
decl_stmt|;
DECL|field|DFS_STREAM_BUFFER_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_STREAM_BUFFER_SIZE_KEY
init|=
literal|"dfs.stream-buffer-size"
decl_stmt|;
DECL|field|DFS_STREAM_BUFFER_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_STREAM_BUFFER_SIZE_DEFAULT
init|=
literal|4096
decl_stmt|;
DECL|field|DFS_BYTES_PER_CHECKSUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BYTES_PER_CHECKSUM_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_BYTES_PER_CHECKSUM_KEY
decl_stmt|;
DECL|field|DFS_BYTES_PER_CHECKSUM_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BYTES_PER_CHECKSUM_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_BYTES_PER_CHECKSUM_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_USER_HOME_DIR_PREFIX_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_USER_HOME_DIR_PREFIX_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_USER_HOME_DIR_PREFIX_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_USER_HOME_DIR_PREFIX_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_USER_HOME_DIR_PREFIX_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_USER_HOME_DIR_PREFIX_DEFAULT
decl_stmt|;
DECL|field|DFS_CHECKSUM_TYPE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CHECKSUM_TYPE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CHECKSUM_TYPE_KEY
decl_stmt|;
DECL|field|DFS_CHECKSUM_TYPE_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CHECKSUM_TYPE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CHECKSUM_TYPE_DEFAULT
decl_stmt|;
DECL|field|DFS_HDFS_BLOCKS_METADATA_ENABLED
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HDFS_BLOCKS_METADATA_ENABLED
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_HDFS_BLOCKS_METADATA_ENABLED
decl_stmt|;
DECL|field|DFS_HDFS_BLOCKS_METADATA_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_HDFS_BLOCKS_METADATA_ENABLED_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_HDFS_BLOCKS_METADATA_ENABLED_DEFAULT
decl_stmt|;
DECL|field|DFS_WEBHDFS_ACL_PERMISSION_PATTERN_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_ACL_PERMISSION_PATTERN_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_WEBHDFS_ACL_PERMISSION_PATTERN_DEFAULT
decl_stmt|;
DECL|field|DFS_WEBHDFS_NETTY_LOW_WATERMARK
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_NETTY_LOW_WATERMARK
init|=
literal|"dfs.webhdfs.netty.low.watermark"
decl_stmt|;
DECL|field|DFS_WEBHDFS_NETTY_LOW_WATERMARK_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_WEBHDFS_NETTY_LOW_WATERMARK_DEFAULT
init|=
literal|32768
decl_stmt|;
DECL|field|DFS_WEBHDFS_NETTY_HIGH_WATERMARK
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_NETTY_HIGH_WATERMARK
init|=
literal|"dfs.webhdfs.netty.high.watermark"
decl_stmt|;
DECL|field|DFS_WEBHDFS_NETTY_HIGH_WATERMARK_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_WEBHDFS_NETTY_HIGH_WATERMARK_DEFAULT
init|=
literal|65535
decl_stmt|;
DECL|field|DFS_WEBHDFS_UGI_EXPIRE_AFTER_ACCESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_UGI_EXPIRE_AFTER_ACCESS_KEY
init|=
literal|"dfs.webhdfs.ugi.expire.after.access"
decl_stmt|;
DECL|field|DFS_WEBHDFS_UGI_EXPIRE_AFTER_ACCESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_WEBHDFS_UGI_EXPIRE_AFTER_ACCESS_DEFAULT
init|=
literal|10
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
comment|//10 minutes
comment|// HA related configuration
DECL|field|DFS_DATANODE_RESTART_REPLICA_EXPIRY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_RESTART_REPLICA_EXPIRY_KEY
init|=
literal|"dfs.datanode.restart.replica.expiration"
decl_stmt|;
DECL|field|DFS_DATANODE_RESTART_REPLICA_EXPIRY_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_RESTART_REPLICA_EXPIRY_DEFAULT
init|=
literal|50
decl_stmt|;
DECL|field|DFS_NAMENODE_BACKUP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BACKUP_ADDRESS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_BACKUP_ADDRESS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_BACKUP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BACKUP_ADDRESS_DEFAULT
init|=
literal|"localhost:50100"
decl_stmt|;
DECL|field|DFS_NAMENODE_BACKUP_HTTP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BACKUP_HTTP_ADDRESS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_BACKUP_HTTP_ADDRESS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_BACKUP_HTTP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BACKUP_HTTP_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:50105"
decl_stmt|;
DECL|field|DFS_NAMENODE_BACKUP_SERVICE_RPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BACKUP_SERVICE_RPC_ADDRESS_KEY
init|=
literal|"dfs.namenode.backup.dnrpc-address"
decl_stmt|;
DECL|field|DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY
decl_stmt|;
DECL|field|DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_DEFAULT
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY
init|=
literal|"dfs.datanode.balance.max.concurrent.moves"
decl_stmt|;
DECL|field|DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_DEFAULT
init|=
literal|5
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATANODE_READAHEAD_BYTES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_READAHEAD_BYTES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATANODE_READAHEAD_BYTES_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATANODE_READAHEAD_BYTES_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_READAHEAD_BYTES_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATANODE_READAHEAD_BYTES_DEFAULT
decl_stmt|;
DECL|field|DFS_DATANODE_DROP_CACHE_BEHIND_WRITES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DROP_CACHE_BEHIND_WRITES_KEY
init|=
literal|"dfs.datanode.drop.cache.behind.writes"
decl_stmt|;
DECL|field|DFS_DATANODE_DROP_CACHE_BEHIND_WRITES_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_DROP_CACHE_BEHIND_WRITES_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_SYNC_BEHIND_WRITES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SYNC_BEHIND_WRITES_KEY
init|=
literal|"dfs.datanode.sync.behind.writes"
decl_stmt|;
DECL|field|DFS_DATANODE_SYNC_BEHIND_WRITES_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_SYNC_BEHIND_WRITES_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_SYNC_BEHIND_WRITES_IN_BACKGROUND_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SYNC_BEHIND_WRITES_IN_BACKGROUND_KEY
init|=
literal|"dfs.datanode.sync.behind.writes.in.background"
decl_stmt|;
DECL|field|DFS_DATANODE_SYNC_BEHIND_WRITES_IN_BACKGROUND_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_SYNC_BEHIND_WRITES_IN_BACKGROUND_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_DROP_CACHE_BEHIND_READS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DROP_CACHE_BEHIND_READS_KEY
init|=
literal|"dfs.datanode.drop.cache.behind.reads"
decl_stmt|;
DECL|field|DFS_DATANODE_DROP_CACHE_BEHIND_READS_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_DROP_CACHE_BEHIND_READS_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_USE_DN_HOSTNAME
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_USE_DN_HOSTNAME
init|=
literal|"dfs.datanode.use.datanode.hostname"
decl_stmt|;
DECL|field|DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_MAX_LOCKED_MEMORY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_MAX_LOCKED_MEMORY_KEY
init|=
literal|"dfs.datanode.max.locked.memory"
decl_stmt|;
DECL|field|DFS_DATANODE_MAX_LOCKED_MEMORY_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_MAX_LOCKED_MEMORY_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_KEY
init|=
literal|"dfs.datanode.fsdatasetcache.max.threads.per.volume"
decl_stmt|;
DECL|field|DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_DEFAULT
init|=
literal|4
decl_stmt|;
DECL|field|DFS_DATANODE_LAZY_WRITER_INTERVAL_SEC
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_LAZY_WRITER_INTERVAL_SEC
init|=
literal|"dfs.datanode.lazywriter.interval.sec"
decl_stmt|;
DECL|field|DFS_DATANODE_LAZY_WRITER_INTERVAL_DEFAULT_SEC
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_LAZY_WRITER_INTERVAL_DEFAULT_SEC
init|=
literal|60
decl_stmt|;
DECL|field|DFS_DATANODE_RAM_DISK_REPLICA_TRACKER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_RAM_DISK_REPLICA_TRACKER_KEY
init|=
literal|"dfs.datanode.ram.disk.replica.tracker"
decl_stmt|;
DECL|field|DFS_DATANODE_RAM_DISK_REPLICA_TRACKER_DEFAULT
specifier|public
specifier|static
specifier|final
name|Class
argument_list|<
name|RamDiskReplicaLruTracker
argument_list|>
name|DFS_DATANODE_RAM_DISK_REPLICA_TRACKER_DEFAULT
init|=
name|RamDiskReplicaLruTracker
operator|.
name|class
decl_stmt|;
DECL|field|DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_KEY
init|=
literal|"dfs.datanode.network.counts.cache.max.size"
decl_stmt|;
DECL|field|DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_DEFAULT
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
DECL|field|DFS_DATANODE_NON_LOCAL_LAZY_PERSIST
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_NON_LOCAL_LAZY_PERSIST
init|=
literal|"dfs.datanode.non.local.lazy.persist"
decl_stmt|;
DECL|field|DFS_DATANODE_NON_LOCAL_LAZY_PERSIST_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_NON_LOCAL_LAZY_PERSIST_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// This setting is for testing/internal use only.
DECL|field|DFS_DATANODE_DUPLICATE_REPLICA_DELETION
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DUPLICATE_REPLICA_DELETION
init|=
literal|"dfs.datanode.duplicate.replica.deletion"
decl_stmt|;
DECL|field|DFS_DATANODE_DUPLICATE_REPLICA_DELETION_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_DUPLICATE_REPLICA_DELETION_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_DN_CACHED_DFSUSED_CHECK_INTERVAL_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DN_CACHED_DFSUSED_CHECK_INTERVAL_MS
init|=
literal|"dfs.datanode.cached-dfsused.check.interval.ms"
decl_stmt|;
DECL|field|DFS_DN_CACHED_DFSUSED_CHECK_INTERVAL_DEFAULT_MS
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DN_CACHED_DFSUSED_CHECK_INTERVAL_DEFAULT_MS
init|=
literal|600000
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT
init|=
literal|"dfs.namenode.path.based.cache.block.map.allocation.percent"
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT_DEFAULT
init|=
literal|0.25f
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTP_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_HTTP_PORT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_HTTP_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTP_ADDRESS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_HTTP_ADDRESS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTP_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_NAMENODE_HTTP_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTP_BIND_HOST_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTP_BIND_HOST_KEY
init|=
literal|"dfs.namenode.http-bind-host"
decl_stmt|;
DECL|field|DFS_NAMENODE_RPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_RPC_ADDRESS_KEY
init|=
literal|"dfs.namenode.rpc-address"
decl_stmt|;
DECL|field|DFS_NAMENODE_RPC_BIND_HOST_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_RPC_BIND_HOST_KEY
init|=
literal|"dfs.namenode.rpc-bind-host"
decl_stmt|;
DECL|field|DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY
init|=
literal|"dfs.namenode.servicerpc-address"
decl_stmt|;
DECL|field|DFS_NAMENODE_SERVICE_RPC_BIND_HOST_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SERVICE_RPC_BIND_HOST_KEY
init|=
literal|"dfs.namenode.servicerpc-bind-host"
decl_stmt|;
DECL|field|DFS_NAMENODE_LIFELINE_RPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIFELINE_RPC_ADDRESS_KEY
init|=
literal|"dfs.namenode.lifeline.rpc-address"
decl_stmt|;
DECL|field|DFS_NAMENODE_LIFELINE_RPC_BIND_HOST_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIFELINE_RPC_BIND_HOST_KEY
init|=
literal|"dfs.namenode.lifeline.rpc-bind-host"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_OBJECTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_OBJECTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_MAX_OBJECTS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_OBJECTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_MAX_OBJECTS_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_EXTENSION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SAFEMODE_EXTENSION_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_SAFEMODE_EXTENSION_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_EXTENSION_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_SAFEMODE_EXTENSION_DEFAULT
init|=
literal|30000
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_DEFAULT
init|=
literal|0.999f
decl_stmt|;
comment|// set this to a slightly smaller value than
comment|// DFS_NAMENODE_SAFEMODE_THRESHOLD_PCT_DEFAULT to populate
comment|// needed replication queues before exiting safe mode
DECL|field|DFS_NAMENODE_REPL_QUEUE_THRESHOLD_PCT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPL_QUEUE_THRESHOLD_PCT_KEY
init|=
literal|"dfs.namenode.replqueue.threshold-pct"
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_MIN_DATANODES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SAFEMODE_MIN_DATANODES_KEY
init|=
literal|"dfs.namenode.safemode.min.datanodes"
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_MIN_DATANODES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_SAFEMODE_MIN_DATANODES_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:50090"
decl_stmt|;
DECL|field|DFS_NAMENODE_SECONDARY_HTTPS_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SECONDARY_HTTPS_ADDRESS_KEY
init|=
literal|"dfs.namenode.secondary.https-address"
decl_stmt|;
DECL|field|DFS_NAMENODE_SECONDARY_HTTPS_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SECONDARY_HTTPS_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:50091"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_QUIET_MULTIPLIER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_QUIET_MULTIPLIER_KEY
init|=
literal|"dfs.namenode.checkpoint.check.quiet-multiplier"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_QUIET_MULTIPLIER_DEFAULT
specifier|public
specifier|static
specifier|final
name|double
name|DFS_NAMENODE_CHECKPOINT_QUIET_MULTIPLIER_DEFAULT
init|=
literal|1.5
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_KEY
init|=
literal|"dfs.namenode.checkpoint.check.period"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_DEFAULT
init|=
literal|60
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_PERIOD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_PERIOD_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_CHECKPOINT_PERIOD_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_PERIOD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_CHECKPOINT_PERIOD_DEFAULT
init|=
literal|3600
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_TXNS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_TXNS_KEY
init|=
literal|"dfs.namenode.checkpoint.txns"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_TXNS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_CHECKPOINT_TXNS_DEFAULT
init|=
literal|1000000
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_MAX_RETRIES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_MAX_RETRIES_KEY
init|=
literal|"dfs.namenode.checkpoint.max-retries"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_MAX_RETRIES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_CHECKPOINT_MAX_RETRIES_DEFAULT
init|=
literal|3
decl_stmt|;
DECL|field|DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDOWN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDOWN_KEY
init|=
literal|"dfs.namenode.missing.checkpoint.periods.before.shutdown"
decl_stmt|;
DECL|field|DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDOWN_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDOWN_DEFAULT
init|=
literal|3
decl_stmt|;
DECL|field|DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT
init|=
literal|5
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY
init|=
literal|"dfs.namenode.tolerate.heartbeat.multiplier"
decl_stmt|;
DECL|field|DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT
init|=
literal|4
decl_stmt|;
DECL|field|DFS_NAMENODE_ACCESSTIME_PRECISION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_ACCESSTIME_PRECISION_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_ACCESSTIME_PRECISION_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_ACCESSTIME_PRECISION_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_ACCESSTIME_PRECISION_DEFAULT
init|=
literal|3600000
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR
init|=
literal|"dfs.namenode.replication.considerLoad.factor"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|double
DECL|field|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT
name|DFS_NAMENODE_REPLICATION_CONSIDERLOAD_FACTOR_DEFAULT
init|=
literal|2.0
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_INTERVAL_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_REPLICATION_INTERVAL_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_INTERVAL_DEFAULT
init|=
literal|3
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_MIN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_MIN_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_REPLICATION_MIN_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_MIN_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_MIN_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_NAMENODE_FILE_CLOSE_NUM_COMMITTED_ALLOWED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_FILE_CLOSE_NUM_COMMITTED_ALLOWED_KEY
init|=
literal|"dfs.namenode.file.close.num-committed-allowed"
decl_stmt|;
DECL|field|DFS_NAMENODE_FILE_CLOSE_NUM_COMMITTED_ALLOWED_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_FILE_CLOSE_NUM_COMMITTED_ALLOWED_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_NAMENODE_STRIPE_MIN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STRIPE_MIN_KEY
init|=
literal|"dfs.namenode.stripe.min"
decl_stmt|;
DECL|field|DFS_NAMENODE_STRIPE_MIN_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_STRIPE_MIN_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_NAMENODE_SAFEMODE_REPLICATION_MIN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SAFEMODE_REPLICATION_MIN_KEY
init|=
literal|"dfs.namenode.safemode.replication.min"
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_DEFAULT
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_MAX_STREAMS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_MAX_STREAMS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_REPLICATION_MAX_STREAMS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_MAX_STREAMS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_MAX_STREAMS_DEFAULT
init|=
literal|2
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_STREAMS_HARD_LIMIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_STREAMS_HARD_LIMIT_KEY
init|=
literal|"dfs.namenode.replication.max-streams-hard-limit"
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_STREAMS_HARD_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_STREAMS_HARD_LIMIT_DEFAULT
init|=
literal|4
decl_stmt|;
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_INTERVAL_MS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_INTERVAL_MS_KEY
init|=
literal|"dfs.namenode.storageinfo.defragment.interval.ms"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_INTERVAL_MS_DEFAULT
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_INTERVAL_MS_DEFAULT
init|=
literal|10
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_TIMEOUT_MS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_TIMEOUT_MS_KEY
init|=
literal|"dfs.namenode.storageinfo.defragment.timeout.ms"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_TIMEOUT_MS_DEFAULT
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_TIMEOUT_MS_DEFAULT
init|=
literal|4
decl_stmt|;
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_RATIO_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_RATIO_KEY
init|=
literal|"dfs.namenode.storageinfo.defragment.ratio"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|double
DECL|field|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_RATIO_DEFAULT
name|DFS_NAMENODE_STORAGEINFO_DEFRAGMENT_RATIO_DEFAULT
init|=
literal|0.75
decl_stmt|;
DECL|field|DFS_WEBHDFS_AUTHENTICATION_FILTER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_AUTHENTICATION_FILTER_KEY
init|=
literal|"dfs.web.authentication.filter"
decl_stmt|;
comment|/* Phrased as below to avoid javac inlining as a constant, to match the behavior when      this was AuthFilter.class.getName(). Note that if you change the import for AuthFilter, you      need to update the literal here as well as TestDFSConfigKeys.    */
DECL|field|DFS_WEBHDFS_AUTHENTICATION_FILTER_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_AUTHENTICATION_FILTER_DEFAULT
init|=
literal|"org.apache.hadoop.hdfs.web.AuthFilter"
operator|.
name|toString
argument_list|()
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_WEBHDFS_USER_PATTERN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_USER_PATTERN_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_WEBHDFS_USER_PATTERN_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_WEBHDFS_USER_PATTERN_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEBHDFS_USER_PATTERN_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_WEBHDFS_USER_PATTERN_DEFAULT
decl_stmt|;
DECL|field|DFS_PERMISSIONS_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_PERMISSIONS_ENABLED_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_PERMISSIONS_ENABLED_KEY
decl_stmt|;
DECL|field|DFS_PERMISSIONS_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_PERMISSIONS_ENABLED_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_PERMISSIONS_SUPERUSERGROUP_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_PERMISSIONS_SUPERUSERGROUP_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_PERMISSIONS_SUPERUSERGROUP_KEY
decl_stmt|;
DECL|field|DFS_PERMISSIONS_SUPERUSERGROUP_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_PERMISSIONS_SUPERUSERGROUP_DEFAULT
init|=
literal|"supergroup"
decl_stmt|;
DECL|field|DFS_NAMENODE_ACLS_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_ACLS_ENABLED_KEY
init|=
literal|"dfs.namenode.acls.enabled"
decl_stmt|;
DECL|field|DFS_NAMENODE_ACLS_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_ACLS_ENABLED_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_NAMENODE_XATTRS_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_XATTRS_ENABLED_KEY
init|=
literal|"dfs.namenode.xattrs.enabled"
decl_stmt|;
DECL|field|DFS_NAMENODE_XATTRS_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_XATTRS_ENABLED_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_ADMIN
specifier|public
specifier|static
specifier|final
name|String
name|DFS_ADMIN
init|=
literal|"dfs.cluster.administrators"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_KEY
init|=
literal|"dfs.https.server.keystore.resource"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_DEFAULT
init|=
literal|"ssl-server.xml"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_KEYPASSWORD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_KEYPASSWORD_KEY
init|=
literal|"ssl.server.keystore.keypassword"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_KEYSTORE_PASSWORD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_KEYSTORE_PASSWORD_KEY
init|=
literal|"ssl.server.keystore.password"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_KEYSTORE_LOCATION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_KEYSTORE_LOCATION_KEY
init|=
literal|"ssl.server.keystore.location"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_TRUSTSTORE_LOCATION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_TRUSTSTORE_LOCATION_KEY
init|=
literal|"ssl.server.truststore.location"
decl_stmt|;
DECL|field|DFS_SERVER_HTTPS_TRUSTSTORE_PASSWORD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SERVER_HTTPS_TRUSTSTORE_PASSWORD_KEY
init|=
literal|"ssl.server.truststore.password"
decl_stmt|;
DECL|field|DFS_NAMENODE_NAME_DIR_RESTORE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_NAME_DIR_RESTORE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_NAME_DIR_RESTORE_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_NAME_DIR_RESTORE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_NAME_DIR_RESTORE_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_NAMENODE_SUPPORT_ALLOW_FORMAT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SUPPORT_ALLOW_FORMAT_KEY
init|=
literal|"dfs.namenode.support.allow.format"
decl_stmt|;
DECL|field|DFS_NAMENODE_SUPPORT_ALLOW_FORMAT_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_SUPPORT_ALLOW_FORMAT_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_KEY
init|=
literal|"dfs.namenode.num.checkpoints.retained"
decl_stmt|;
DECL|field|DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_DEFAULT
init|=
literal|2
decl_stmt|;
DECL|field|DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_KEY
init|=
literal|"dfs.namenode.num.extra.edits.retained"
decl_stmt|;
DECL|field|DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_DEFAULT
init|=
literal|1000000
decl_stmt|;
comment|//1M
DECL|field|DFS_NAMENODE_MAX_EXTRA_EDITS_SEGMENTS_RETAINED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_EXTRA_EDITS_SEGMENTS_RETAINED_KEY
init|=
literal|"dfs.namenode.max.extra.edits.segments.retained"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_EXTRA_EDITS_SEGMENTS_RETAINED_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_EXTRA_EDITS_SEGMENTS_RETAINED_DEFAULT
init|=
literal|10000
decl_stmt|;
comment|// 10k
DECL|field|DFS_NAMENODE_MIN_SUPPORTED_DATANODE_VERSION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MIN_SUPPORTED_DATANODE_VERSION_KEY
init|=
literal|"dfs.namenode.min.supported.datanode.version"
decl_stmt|;
DECL|field|DFS_NAMENODE_MIN_SUPPORTED_DATANODE_VERSION_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MIN_SUPPORTED_DATANODE_VERSION_DEFAULT
init|=
literal|"3.0.0-SNAPSHOT"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_DIR_MINIMUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_DIR_MINIMUM_KEY
init|=
literal|"dfs.namenode.edits.dir.minimum"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_DIR_MINIMUM_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_EDITS_DIR_MINIMUM_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_NAMENODE_QUOTA_INIT_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_QUOTA_INIT_THREADS_KEY
init|=
literal|"dfs.namenode.quota.init-threads"
decl_stmt|;
DECL|field|DFS_NAMENODE_QUOTA_INIT_THREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_QUOTA_INIT_THREADS_DEFAULT
init|=
literal|4
decl_stmt|;
DECL|field|DFS_NAMENODE_EDIT_LOG_AUTOROLL_MULTIPLIER_THRESHOLD
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDIT_LOG_AUTOROLL_MULTIPLIER_THRESHOLD
init|=
literal|"dfs.namenode.edit.log.autoroll.multiplier.threshold"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDIT_LOG_AUTOROLL_MULTIPLIER_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_EDIT_LOG_AUTOROLL_MULTIPLIER_THRESHOLD_DEFAULT
init|=
literal|2.0f
decl_stmt|;
DECL|field|DFS_NAMENODE_EDIT_LOG_AUTOROLL_CHECK_INTERVAL_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDIT_LOG_AUTOROLL_CHECK_INTERVAL_MS
init|=
literal|"dfs.namenode.edit.log.autoroll.check.interval.ms"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDIT_LOG_AUTOROLL_CHECK_INTERVAL_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_EDIT_LOG_AUTOROLL_CHECK_INTERVAL_MS_DEFAULT
init|=
literal|5
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC
init|=
literal|"dfs.namenode.lazypersist.file.scrub.interval.sec"
decl_stmt|;
DECL|field|DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC_DEFAULT
init|=
literal|5
operator|*
literal|60
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_NOEDITLOGCHANNELFLUSH
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_NOEDITLOGCHANNELFLUSH
init|=
literal|"dfs.namenode.edits.noeditlogchannelflush"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_NOEDITLOGCHANNELFLUSH_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_EDITS_NOEDITLOGCHANNELFLUSH_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_LIST_LIMIT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_LIST_LIMIT
init|=
literal|"dfs.ls.limit"
decl_stmt|;
DECL|field|DFS_LIST_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_LIST_LIMIT_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|DFS_CONTENT_SUMMARY_LIMIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CONTENT_SUMMARY_LIMIT_KEY
init|=
literal|"dfs.content-summary.limit"
decl_stmt|;
DECL|field|DFS_CONTENT_SUMMARY_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CONTENT_SUMMARY_LIMIT_DEFAULT
init|=
literal|5000
decl_stmt|;
DECL|field|DFS_CONTENT_SUMMARY_SLEEP_MICROSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CONTENT_SUMMARY_SLEEP_MICROSEC_KEY
init|=
literal|"dfs.content-summary.sleep-microsec"
decl_stmt|;
DECL|field|DFS_CONTENT_SUMMARY_SLEEP_MICROSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CONTENT_SUMMARY_SLEEP_MICROSEC_DEFAULT
init|=
literal|500
decl_stmt|;
DECL|field|DFS_DATANODE_FAILED_VOLUMES_TOLERATED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_FAILED_VOLUMES_TOLERATED_KEY
init|=
literal|"dfs.datanode.failed.volumes.tolerated"
decl_stmt|;
DECL|field|DFS_DATANODE_FAILED_VOLUMES_TOLERATED_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_FAILED_VOLUMES_TOLERATED_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_DATANODE_SYNCONCLOSE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SYNCONCLOSE_KEY
init|=
literal|"dfs.datanode.synconclose"
decl_stmt|;
DECL|field|DFS_DATANODE_SYNCONCLOSE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_SYNCONCLOSE_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_DATANODE_SOCKET_REUSE_KEEPALIVE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SOCKET_REUSE_KEEPALIVE_KEY
init|=
literal|"dfs.datanode.socket.reuse.keepalive"
decl_stmt|;
DECL|field|DFS_DATANODE_SOCKET_REUSE_KEEPALIVE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_SOCKET_REUSE_KEEPALIVE_DEFAULT
init|=
literal|4000
decl_stmt|;
DECL|field|DFS_DATANODE_OOB_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_OOB_TIMEOUT_KEY
init|=
literal|"dfs.datanode.oob.timeout-ms"
decl_stmt|;
DECL|field|DFS_DATANODE_OOB_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_OOB_TIMEOUT_DEFAULT
init|=
literal|"1500,0,0,0"
decl_stmt|;
comment|// OOB_TYPE1, OOB_TYPE2, OOB_TYPE3, OOB_TYPE4
DECL|field|DFS_DATANODE_CACHE_REVOCATION_TIMEOUT_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_CACHE_REVOCATION_TIMEOUT_MS
init|=
literal|"dfs.datanode.cache.revocation.timeout.ms"
decl_stmt|;
DECL|field|DFS_DATANODE_CACHE_REVOCATION_TIMEOUT_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_CACHE_REVOCATION_TIMEOUT_MS_DEFAULT
init|=
literal|900000L
decl_stmt|;
DECL|field|DFS_DATANODE_CACHE_REVOCATION_POLLING_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_CACHE_REVOCATION_POLLING_MS
init|=
literal|"dfs.datanode.cache.revocation.polling.ms"
decl_stmt|;
DECL|field|DFS_DATANODE_CACHE_REVOCATION_POLLING_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_CACHE_REVOCATION_POLLING_MS_DEFAULT
init|=
literal|500L
decl_stmt|;
DECL|field|DFS_NAMENODE_DATANODE_REGISTRATION_IP_HOSTNAME_CHECK_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DATANODE_REGISTRATION_IP_HOSTNAME_CHECK_KEY
init|=
literal|"dfs.namenode.datanode.registration.ip-hostname-check"
decl_stmt|;
DECL|field|DFS_NAMENODE_DATANODE_REGISTRATION_IP_HOSTNAME_CHECK_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_DATANODE_REGISTRATION_IP_HOSTNAME_CHECK_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES
init|=
literal|"dfs.namenode.list.cache.pools.num.responses"
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES_DEFAULT
init|=
literal|100
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES
init|=
literal|"dfs.namenode.list.cache.directives.num.responses"
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES_DEFAULT
init|=
literal|100
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS
init|=
literal|"dfs.namenode.path.based.cache.refresh.interval.ms"
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS_DEFAULT
init|=
literal|30000L
decl_stmt|;
comment|/** Pending period of block deletion since NameNode startup */
DECL|field|DFS_NAMENODE_STARTUP_DELAY_BLOCK_DELETION_SEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STARTUP_DELAY_BLOCK_DELETION_SEC_KEY
init|=
literal|"dfs.namenode.startup.delay.block.deletion.sec"
decl_stmt|;
DECL|field|DFS_NAMENODE_STARTUP_DELAY_BLOCK_DELETION_SEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_STARTUP_DELAY_BLOCK_DELETION_SEC_DEFAULT
init|=
literal|0L
decl_stmt|;
comment|// Whether to enable datanode's stale state detection and usage for reads
DECL|field|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_READ_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_READ_KEY
init|=
literal|"dfs.namenode.avoid.read.stale.datanode"
decl_stmt|;
DECL|field|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_READ_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_READ_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// Whether to enable datanode's stale state detection and usage for writes
DECL|field|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_WRITE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_WRITE_KEY
init|=
literal|"dfs.namenode.avoid.write.stale.datanode"
decl_stmt|;
DECL|field|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_WRITE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_WRITE_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// The default value of the time interval for marking datanodes as stale
DECL|field|DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STALE_DATANODE_INTERVAL_KEY
init|=
literal|"dfs.namenode.stale.datanode.interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT
init|=
literal|30
operator|*
literal|1000
decl_stmt|;
comment|// 30s
comment|// The stale interval cannot be too small since otherwise this may cause too frequent churn on stale states.
comment|// This value uses the times of heartbeat interval to define the minimum value for stale interval.
DECL|field|DFS_NAMENODE_STALE_DATANODE_MINIMUM_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STALE_DATANODE_MINIMUM_INTERVAL_KEY
init|=
literal|"dfs.namenode.stale.datanode.minimum.interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_STALE_DATANODE_MINIMUM_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_STALE_DATANODE_MINIMUM_INTERVAL_DEFAULT
init|=
literal|3
decl_stmt|;
comment|// i.e. min_interval is 3 * heartbeat_interval = 9s
comment|// When the percentage of stale datanodes reaches this ratio,
comment|// allow writing to stale nodes to prevent hotspots.
DECL|field|DFS_NAMENODE_USE_STALE_DATANODE_FOR_WRITE_RATIO_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_USE_STALE_DATANODE_FOR_WRITE_RATIO_KEY
init|=
literal|"dfs.namenode.write.stale.datanode.ratio"
decl_stmt|;
DECL|field|DFS_NAMENODE_USE_STALE_DATANODE_FOR_WRITE_RATIO_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_USE_STALE_DATANODE_FOR_WRITE_RATIO_DEFAULT
init|=
literal|0.5f
decl_stmt|;
comment|// Number of blocks to rescan for each iteration of postponedMisreplicatedBlocks.
DECL|field|DFS_NAMENODE_BLOCKS_PER_POSTPONEDBLOCKS_RESCAN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BLOCKS_PER_POSTPONEDBLOCKS_RESCAN_KEY
init|=
literal|"dfs.namenode.blocks.per.postponedblocks.rescan"
decl_stmt|;
DECL|field|DFS_NAMENODE_BLOCKS_PER_POSTPONEDBLOCKS_RESCAN_KEY_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_BLOCKS_PER_POSTPONEDBLOCKS_RESCAN_KEY_DEFAULT
init|=
literal|10000
decl_stmt|;
comment|// Replication monitoring related keys
DECL|field|DFS_NAMENODE_INVALIDATE_WORK_PCT_PER_ITERATION
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_INVALIDATE_WORK_PCT_PER_ITERATION
init|=
literal|"dfs.namenode.invalidate.work.pct.per.iteration"
decl_stmt|;
DECL|field|DFS_NAMENODE_INVALIDATE_WORK_PCT_PER_ITERATION_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_INVALIDATE_WORK_PCT_PER_ITERATION_DEFAULT
init|=
literal|0.32f
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_WORK_MULTIPLIER_PER_ITERATION
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_REPLICATION_WORK_MULTIPLIER_PER_ITERATION
init|=
literal|"dfs.namenode.replication.work.multiplier.per.iteration"
decl_stmt|;
DECL|field|DFS_NAMENODE_REPLICATION_WORK_MULTIPLIER_PER_ITERATION_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_REPLICATION_WORK_MULTIPLIER_PER_ITERATION_DEFAULT
init|=
literal|2
decl_stmt|;
comment|//Delegation token related keys
DECL|field|DFS_NAMENODE_DELEGATION_KEY_UPDATE_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DELEGATION_KEY_UPDATE_INTERVAL_KEY
init|=
literal|"dfs.namenode.delegation.key.update-interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT
init|=
literal|24
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
comment|// 1 day
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_RENEW_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DELEGATION_TOKEN_RENEW_INTERVAL_KEY
init|=
literal|"dfs.namenode.delegation.token.renew-interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT
init|=
literal|24
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
comment|// 1 day
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_MAX_LIFETIME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DELEGATION_TOKEN_MAX_LIFETIME_KEY
init|=
literal|"dfs.namenode.delegation.token.max-lifetime"
decl_stmt|;
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT
init|=
literal|7
operator|*
literal|24
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
comment|// 7 days
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY
init|=
literal|"dfs.namenode.delegation.token.always-use"
decl_stmt|;
comment|// for tests
DECL|field|DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_DEFAULT
init|=
literal|false
decl_stmt|;
comment|//Filesystem limit keys
DECL|field|DFS_NAMENODE_MAX_COMPONENT_LENGTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_COMPONENT_LENGTH_KEY
init|=
literal|"dfs.namenode.fs-limits.max-component-length"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_COMPONENT_LENGTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_COMPONENT_LENGTH_DEFAULT
init|=
literal|255
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_DIRECTORY_ITEMS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_DIRECTORY_ITEMS_KEY
init|=
literal|"dfs.namenode.fs-limits.max-directory-items"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_DIRECTORY_ITEMS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_DIRECTORY_ITEMS_DEFAULT
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_NAMENODE_MIN_BLOCK_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MIN_BLOCK_SIZE_KEY
init|=
literal|"dfs.namenode.fs-limits.min-block-size"
decl_stmt|;
DECL|field|DFS_NAMENODE_MIN_BLOCK_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_MIN_BLOCK_SIZE_DEFAULT
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_BLOCKS_PER_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_BLOCKS_PER_FILE_KEY
init|=
literal|"dfs.namenode.fs-limits.max-blocks-per-file"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_BLOCKS_PER_FILE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_MAX_BLOCKS_PER_FILE_DEFAULT
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_XATTRS_PER_INODE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_XATTRS_PER_INODE_KEY
init|=
literal|"dfs.namenode.fs-limits.max-xattrs-per-inode"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_XATTRS_PER_INODE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_XATTRS_PER_INODE_DEFAULT
init|=
literal|32
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_XATTR_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_XATTR_SIZE_KEY
init|=
literal|"dfs.namenode.fs-limits.max-xattr-size"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_XATTR_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_XATTR_SIZE_DEFAULT
init|=
literal|16384
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_XATTR_SIZE_HARD_LIMIT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_XATTR_SIZE_HARD_LIMIT
init|=
literal|32768
decl_stmt|;
DECL|field|DFS_UPGRADE_DOMAIN_FACTOR
specifier|public
specifier|static
specifier|final
name|String
name|DFS_UPGRADE_DOMAIN_FACTOR
init|=
literal|"dfs.namenode.upgrade.domain.factor"
decl_stmt|;
DECL|field|DFS_UPGRADE_DOMAIN_FACTOR_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_UPGRADE_DOMAIN_FACTOR_DEFAULT
init|=
name|DFS_REPLICATION_DEFAULT
decl_stmt|;
comment|//Following keys have no defaults
DECL|field|DFS_DATANODE_DATA_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DATA_DIR_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_DATANODE_DATA_DIR_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTPS_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_HTTPS_PORT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_HTTPS_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTPS_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTPS_ADDRESS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_HTTPS_ADDRESS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTPS_BIND_HOST_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTPS_BIND_HOST_KEY
init|=
literal|"dfs.namenode.https-bind-host"
decl_stmt|;
DECL|field|DFS_NAMENODE_HTTPS_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HTTPS_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_NAMENODE_HTTPS_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_NAMENODE_NAME_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_NAME_DIR_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_NAME_DIR_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_DIR_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_EDITS_DIR_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_SHARED_EDITS_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SHARED_EDITS_DIR_KEY
init|=
literal|"dfs.namenode.shared.edits.dir"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_PLUGIN_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_PLUGIN_PREFIX
init|=
literal|"dfs.namenode.edits.journal-plugin"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY
init|=
literal|"dfs.namenode.edits.dir.required"
decl_stmt|;
DECL|field|DFS_NAMENODE_EDITS_DIR_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_EDITS_DIR_DEFAULT
init|=
literal|"file:///tmp/hadoop/dfs/name"
decl_stmt|;
DECL|field|DFS_METRICS_SESSION_ID_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_METRICS_SESSION_ID_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_METRICS_SESSION_ID_KEY
decl_stmt|;
DECL|field|DFS_METRICS_PERCENTILES_INTERVALS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_METRICS_PERCENTILES_INTERVALS_KEY
init|=
literal|"dfs.metrics.percentiles.intervals"
decl_stmt|;
DECL|field|DFS_DATANODE_HOST_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HOST_NAME_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_DATANODE_HOST_NAME_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_HOSTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HOSTS_KEY
init|=
literal|"dfs.namenode.hosts"
decl_stmt|;
DECL|field|DFS_NAMENODE_HOSTS_EXCLUDE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HOSTS_EXCLUDE_KEY
init|=
literal|"dfs.namenode.hosts.exclude"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_DIR_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_CHECKPOINT_DIR_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY
decl_stmt|;
DECL|field|DFS_HOSTS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HOSTS
init|=
literal|"dfs.hosts"
decl_stmt|;
DECL|field|DFS_HOSTS_EXCLUDE
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HOSTS_EXCLUDE
init|=
literal|"dfs.hosts.exclude"
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOGGERS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AUDIT_LOGGERS_KEY
init|=
literal|"dfs.namenode.audit.loggers"
decl_stmt|;
DECL|field|DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME
init|=
literal|"default"
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOG_TOKEN_TRACKING_ID_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AUDIT_LOG_TOKEN_TRACKING_ID_KEY
init|=
literal|"dfs.namenode.audit.log.token.tracking.id"
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOG_TOKEN_TRACKING_ID_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_AUDIT_LOG_TOKEN_TRACKING_ID_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOG_ASYNC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AUDIT_LOG_ASYNC_KEY
init|=
literal|"dfs.namenode.audit.log.async"
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOG_ASYNC_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_AUDIT_LOG_ASYNC_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_NAMENODE_AUDIT_LOG_DEBUG_CMDLIST
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AUDIT_LOG_DEBUG_CMDLIST
init|=
literal|"dfs.namenode.audit.log.debug.cmdlist"
decl_stmt|;
DECL|field|DFS_NAMENODE_METRICS_LOGGER_PERIOD_SECONDS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_METRICS_LOGGER_PERIOD_SECONDS_KEY
init|=
literal|"dfs.namenode.metrics.logger.period.seconds"
decl_stmt|;
DECL|field|DFS_NAMENODE_METRICS_LOGGER_PERIOD_SECONDS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_METRICS_LOGGER_PERIOD_SECONDS_DEFAULT
init|=
literal|600
decl_stmt|;
DECL|field|DFS_DATANODE_METRICS_LOGGER_PERIOD_SECONDS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_METRICS_LOGGER_PERIOD_SECONDS_KEY
init|=
literal|"dfs.datanode.metrics.logger.period.seconds"
decl_stmt|;
DECL|field|DFS_DATANODE_METRICS_LOGGER_PERIOD_SECONDS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_METRICS_LOGGER_PERIOD_SECONDS_DEFAULT
init|=
literal|600
decl_stmt|;
DECL|field|DFS_BALANCER_MOVEDWINWIDTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_MOVEDWINWIDTH_KEY
init|=
literal|"dfs.balancer.movedWinWidth"
decl_stmt|;
DECL|field|DFS_BALANCER_MOVEDWINWIDTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BALANCER_MOVEDWINWIDTH_DEFAULT
init|=
literal|5400
operator|*
literal|1000L
decl_stmt|;
DECL|field|DFS_BALANCER_MOVERTHREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_MOVERTHREADS_KEY
init|=
literal|"dfs.balancer.moverThreads"
decl_stmt|;
DECL|field|DFS_BALANCER_MOVERTHREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BALANCER_MOVERTHREADS_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|DFS_BALANCER_DISPATCHERTHREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_DISPATCHERTHREADS_KEY
init|=
literal|"dfs.balancer.dispatcherThreads"
decl_stmt|;
DECL|field|DFS_BALANCER_DISPATCHERTHREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BALANCER_DISPATCHERTHREADS_DEFAULT
init|=
literal|200
decl_stmt|;
DECL|field|DFS_BALANCER_MAX_SIZE_TO_MOVE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_MAX_SIZE_TO_MOVE_KEY
init|=
literal|"dfs.balancer.max-size-to-move"
decl_stmt|;
DECL|field|DFS_BALANCER_MAX_SIZE_TO_MOVE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BALANCER_MAX_SIZE_TO_MOVE_DEFAULT
init|=
literal|10L
operator|*
literal|1024
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_BALANCER_GETBLOCKS_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_GETBLOCKS_SIZE_KEY
init|=
literal|"dfs.balancer.getBlocks.size"
decl_stmt|;
DECL|field|DFS_BALANCER_GETBLOCKS_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BALANCER_GETBLOCKS_SIZE_DEFAULT
init|=
literal|2L
operator|*
literal|1024
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
comment|// 2GB
DECL|field|DFS_BALANCER_GETBLOCKS_MIN_BLOCK_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_GETBLOCKS_MIN_BLOCK_SIZE_KEY
init|=
literal|"dfs.balancer.getBlocks.min-block-size"
decl_stmt|;
DECL|field|DFS_BALANCER_GETBLOCKS_MIN_BLOCK_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BALANCER_GETBLOCKS_MIN_BLOCK_SIZE_DEFAULT
init|=
literal|10L
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
comment|// 10MB
DECL|field|DFS_BALANCER_KEYTAB_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_KEYTAB_ENABLED_KEY
init|=
literal|"dfs.balancer.keytab.enabled"
decl_stmt|;
DECL|field|DFS_BALANCER_KEYTAB_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_BALANCER_KEYTAB_ENABLED_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_BALANCER_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_ADDRESS_KEY
init|=
literal|"dfs.balancer.address"
decl_stmt|;
DECL|field|DFS_BALANCER_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:0"
decl_stmt|;
DECL|field|DFS_BALANCER_KEYTAB_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_KEYTAB_FILE_KEY
init|=
literal|"dfs.balancer.keytab.file"
decl_stmt|;
DECL|field|DFS_BALANCER_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BALANCER_KERBEROS_PRINCIPAL_KEY
init|=
literal|"dfs.balancer.kerberos.principal"
decl_stmt|;
DECL|field|DFS_MOVER_MOVEDWINWIDTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_MOVER_MOVEDWINWIDTH_KEY
init|=
literal|"dfs.mover.movedWinWidth"
decl_stmt|;
DECL|field|DFS_MOVER_MOVEDWINWIDTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_MOVER_MOVEDWINWIDTH_DEFAULT
init|=
literal|5400
operator|*
literal|1000L
decl_stmt|;
DECL|field|DFS_MOVER_MOVERTHREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_MOVER_MOVERTHREADS_KEY
init|=
literal|"dfs.mover.moverThreads"
decl_stmt|;
DECL|field|DFS_MOVER_MOVERTHREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_MOVER_MOVERTHREADS_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|DFS_MOVER_RETRY_MAX_ATTEMPTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_MOVER_RETRY_MAX_ATTEMPTS_KEY
init|=
literal|"dfs.mover.retry.max.attempts"
decl_stmt|;
DECL|field|DFS_MOVER_RETRY_MAX_ATTEMPTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_MOVER_RETRY_MAX_ATTEMPTS_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|DFS_DATANODE_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_ADDRESS_KEY
init|=
literal|"dfs.datanode.address"
decl_stmt|;
DECL|field|DFS_DATANODE_DEFAULT_PORT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_DEFAULT_PORT
init|=
literal|50010
decl_stmt|;
DECL|field|DFS_DATANODE_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_DATANODE_DEFAULT_PORT
decl_stmt|;
DECL|field|DFS_DATANODE_DATA_DIR_PERMISSION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DATA_DIR_PERMISSION_KEY
init|=
literal|"dfs.datanode.data.dir.perm"
decl_stmt|;
DECL|field|DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT
init|=
literal|"700"
decl_stmt|;
DECL|field|DFS_DATANODE_DIRECTORYSCAN_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DIRECTORYSCAN_INTERVAL_KEY
init|=
literal|"dfs.datanode.directoryscan.interval"
decl_stmt|;
DECL|field|DFS_DATANODE_DIRECTORYSCAN_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_DIRECTORYSCAN_INTERVAL_DEFAULT
init|=
literal|21600
decl_stmt|;
DECL|field|DFS_DATANODE_DIRECTORYSCAN_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DIRECTORYSCAN_THREADS_KEY
init|=
literal|"dfs.datanode.directoryscan.threads"
decl_stmt|;
DECL|field|DFS_DATANODE_DIRECTORYSCAN_THREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_DIRECTORYSCAN_THREADS_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_THREADS_KEY
init|=
literal|"dfs.datanode.ec.reconstruction.stripedread.threads"
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_THREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_THREADS_DEFAULT
init|=
literal|20
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_BUFFER_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_BUFFER_SIZE_KEY
init|=
literal|"dfs.datanode.ec.reconstruction.stripedread.buffer.size"
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_BUFFER_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_BUFFER_SIZE_DEFAULT
init|=
literal|64
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_TIMEOUT_MILLIS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_TIMEOUT_MILLIS_KEY
init|=
literal|"dfs.datanode.ec.reconstruction.stripedread.timeout.millis"
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_TIMEOUT_MILLIS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_TIMEOUT_MILLIS_DEFAULT
init|=
literal|5000
decl_stmt|;
comment|//5s
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_BLK_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_BLK_THREADS_KEY
init|=
literal|"dfs.datanode.ec.reconstruction.stripedblock.threads.size"
decl_stmt|;
DECL|field|DFS_DN_EC_RECONSTRUCTION_STRIPED_BLK_THREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DN_EC_RECONSTRUCTION_STRIPED_BLK_THREADS_DEFAULT
init|=
literal|8
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_DATANODE_DIRECTORYSCAN_THROTTLE_LIMIT_MS_PER_SEC_KEY
name|DFS_DATANODE_DIRECTORYSCAN_THROTTLE_LIMIT_MS_PER_SEC_KEY
init|=
literal|"dfs.datanode.directoryscan.throttle.limit.ms.per.sec"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_DATANODE_DIRECTORYSCAN_THROTTLE_LIMIT_MS_PER_SEC_DEFAULT
name|DFS_DATANODE_DIRECTORYSCAN_THROTTLE_LIMIT_MS_PER_SEC_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|DFS_DATANODE_DNS_INTERFACE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DNS_INTERFACE_KEY
init|=
literal|"dfs.datanode.dns.interface"
decl_stmt|;
DECL|field|DFS_DATANODE_DNS_INTERFACE_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DNS_INTERFACE_DEFAULT
init|=
literal|"default"
decl_stmt|;
DECL|field|DFS_DATANODE_DNS_NAMESERVER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DNS_NAMESERVER_KEY
init|=
literal|"dfs.datanode.dns.nameserver"
decl_stmt|;
DECL|field|DFS_DATANODE_DNS_NAMESERVER_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DNS_NAMESERVER_DEFAULT
init|=
literal|"default"
decl_stmt|;
DECL|field|DFS_DATANODE_DU_RESERVED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_DU_RESERVED_KEY
init|=
literal|"dfs.datanode.du.reserved"
decl_stmt|;
DECL|field|DFS_DATANODE_DU_RESERVED_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_DU_RESERVED_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_DATANODE_HANDLER_COUNT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HANDLER_COUNT_KEY
init|=
literal|"dfs.datanode.handler.count"
decl_stmt|;
DECL|field|DFS_DATANODE_HANDLER_COUNT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_HANDLER_COUNT_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|DFS_DATANODE_HTTP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HTTP_ADDRESS_KEY
init|=
literal|"dfs.datanode.http.address"
decl_stmt|;
DECL|field|DFS_DATANODE_HTTP_DEFAULT_PORT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_HTTP_DEFAULT_PORT
init|=
literal|50075
decl_stmt|;
DECL|field|DFS_DATANODE_HTTP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HTTP_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_DATANODE_HTTP_DEFAULT_PORT
decl_stmt|;
DECL|field|DFS_DATANODE_MAX_RECEIVER_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_MAX_RECEIVER_THREADS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_DATANODE_MAX_RECEIVER_THREADS_KEY
decl_stmt|;
DECL|field|DFS_DATANODE_MAX_RECEIVER_THREADS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_MAX_RECEIVER_THREADS_DEFAULT
init|=
literal|4096
decl_stmt|;
DECL|field|DFS_DATANODE_SCAN_PERIOD_HOURS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SCAN_PERIOD_HOURS_KEY
init|=
literal|"dfs.datanode.scan.period.hours"
decl_stmt|;
DECL|field|DFS_DATANODE_SCAN_PERIOD_HOURS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_SCAN_PERIOD_HOURS_DEFAULT
init|=
literal|21
operator|*
literal|24
decl_stmt|;
comment|// 3 weeks.
DECL|field|DFS_BLOCK_SCANNER_VOLUME_BYTES_PER_SECOND
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_SCANNER_VOLUME_BYTES_PER_SECOND
init|=
literal|"dfs.block.scanner.volume.bytes.per.second"
decl_stmt|;
DECL|field|DFS_BLOCK_SCANNER_VOLUME_BYTES_PER_SECOND_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCK_SCANNER_VOLUME_BYTES_PER_SECOND_DEFAULT
init|=
literal|1048576L
decl_stmt|;
DECL|field|DFS_DATANODE_TRANSFERTO_ALLOWED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_TRANSFERTO_ALLOWED_KEY
init|=
literal|"dfs.datanode.transferTo.allowed"
decl_stmt|;
DECL|field|DFS_DATANODE_TRANSFERTO_ALLOWED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_TRANSFERTO_ALLOWED_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_HEARTBEAT_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HEARTBEAT_INTERVAL_KEY
init|=
literal|"dfs.heartbeat.interval"
decl_stmt|;
DECL|field|DFS_HEARTBEAT_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_HEARTBEAT_INTERVAL_DEFAULT
init|=
literal|3
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_RETRY_INTERVAL_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_PATH_BASED_CACHE_RETRY_INTERVAL_MS
init|=
literal|"dfs.namenode.path.based.cache.retry.interval.ms"
decl_stmt|;
DECL|field|DFS_NAMENODE_PATH_BASED_CACHE_RETRY_INTERVAL_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_PATH_BASED_CACHE_RETRY_INTERVAL_MS_DEFAULT
init|=
literal|30000L
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DECOMMISSION_INTERVAL_KEY
init|=
literal|"dfs.namenode.decommission.interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_DECOMMISSION_INTERVAL_DEFAULT
init|=
literal|30
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_BLOCKS_PER_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DECOMMISSION_BLOCKS_PER_INTERVAL_KEY
init|=
literal|"dfs.namenode.decommission.blocks.per.interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_BLOCKS_PER_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_DECOMMISSION_BLOCKS_PER_INTERVAL_DEFAULT
init|=
literal|500000
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_MAX_CONCURRENT_TRACKED_NODES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DECOMMISSION_MAX_CONCURRENT_TRACKED_NODES
init|=
literal|"dfs.namenode.decommission.max.concurrent.tracked.nodes"
decl_stmt|;
DECL|field|DFS_NAMENODE_DECOMMISSION_MAX_CONCURRENT_TRACKED_NODES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_DECOMMISSION_MAX_CONCURRENT_TRACKED_NODES_DEFAULT
init|=
literal|100
decl_stmt|;
DECL|field|DFS_NAMENODE_HANDLER_COUNT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_HANDLER_COUNT_KEY
init|=
literal|"dfs.namenode.handler.count"
decl_stmt|;
DECL|field|DFS_NAMENODE_HANDLER_COUNT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_HANDLER_COUNT_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|DFS_NAMENODE_LIFELINE_HANDLER_COUNT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_LIFELINE_HANDLER_COUNT_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_NAMENODE_LIFELINE_HANDLER_COUNT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIFELINE_HANDLER_COUNT_KEY
init|=
literal|"dfs.namenode.lifeline.handler.count"
decl_stmt|;
DECL|field|DFS_NAMENODE_SERVICE_HANDLER_COUNT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_SERVICE_HANDLER_COUNT_KEY
init|=
literal|"dfs.namenode.service.handler.count"
decl_stmt|;
DECL|field|DFS_NAMENODE_SERVICE_HANDLER_COUNT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_SERVICE_HANDLER_COUNT_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|DFS_HTTP_POLICY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_POLICY_KEY
init|=
literal|"dfs.http.policy"
decl_stmt|;
DECL|field|DFS_HTTP_POLICY_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_POLICY_DEFAULT
init|=
name|HttpConfig
operator|.
name|Policy
operator|.
name|HTTP_ONLY
operator|.
name|name
argument_list|()
decl_stmt|;
DECL|field|DFS_DEFAULT_CHUNK_VIEW_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DEFAULT_CHUNK_VIEW_SIZE_KEY
init|=
literal|"dfs.default.chunk.view.size"
decl_stmt|;
DECL|field|DFS_DEFAULT_CHUNK_VIEW_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DEFAULT_CHUNK_VIEW_SIZE_DEFAULT
init|=
literal|32
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_DATANODE_HTTPS_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HTTPS_ADDRESS_KEY
init|=
literal|"dfs.datanode.https.address"
decl_stmt|;
DECL|field|DFS_DATANODE_HTTPS_PORT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HTTPS_PORT_KEY
init|=
literal|"datanode.https.port"
decl_stmt|;
DECL|field|DFS_DATANODE_HTTPS_DEFAULT_PORT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_HTTPS_DEFAULT_PORT
init|=
literal|50475
decl_stmt|;
DECL|field|DFS_DATANODE_HTTPS_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_HTTPS_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_DATANODE_HTTPS_DEFAULT_PORT
decl_stmt|;
DECL|field|DFS_DATANODE_IPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_IPC_ADDRESS_KEY
init|=
literal|"dfs.datanode.ipc.address"
decl_stmt|;
DECL|field|DFS_DATANODE_IPC_DEFAULT_PORT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_IPC_DEFAULT_PORT
init|=
literal|50020
decl_stmt|;
DECL|field|DFS_DATANODE_IPC_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_IPC_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_DATANODE_IPC_DEFAULT_PORT
decl_stmt|;
DECL|field|DFS_DATANODE_MIN_SUPPORTED_NAMENODE_VERSION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_MIN_SUPPORTED_NAMENODE_VERSION_KEY
init|=
literal|"dfs.datanode.min.supported.namenode.version"
decl_stmt|;
DECL|field|DFS_DATANODE_MIN_SUPPORTED_NAMENODE_VERSION_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_MIN_SUPPORTED_NAMENODE_VERSION_DEFAULT
init|=
literal|"3.0.0-SNAPSHOT"
decl_stmt|;
DECL|field|DFS_NAMENODE_INODE_ATTRIBUTES_PROVIDER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_INODE_ATTRIBUTES_PROVIDER_KEY
init|=
literal|"dfs.namenode.inode.attributes.provider.class"
decl_stmt|;
DECL|field|DFS_DATANODE_BP_READY_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_BP_READY_TIMEOUT_KEY
init|=
literal|"dfs.datanode.bp-ready.timeout"
decl_stmt|;
DECL|field|DFS_DATANODE_BP_READY_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_BP_READY_TIMEOUT_DEFAULT
init|=
literal|20
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_TOKEN_ENABLE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_ACCESS_TOKEN_ENABLE_KEY
init|=
literal|"dfs.block.access.token.enable"
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_TOKEN_ENABLE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_BLOCK_ACCESS_TOKEN_ENABLE_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_KEY_UPDATE_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_ACCESS_KEY_UPDATE_INTERVAL_KEY
init|=
literal|"dfs.block.access.key.update.interval"
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_KEY_UPDATE_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCK_ACCESS_KEY_UPDATE_INTERVAL_DEFAULT
init|=
literal|600L
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_TOKEN_LIFETIME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_ACCESS_TOKEN_LIFETIME_KEY
init|=
literal|"dfs.block.access.token.lifetime"
decl_stmt|;
DECL|field|DFS_BLOCK_ACCESS_TOKEN_LIFETIME_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCK_ACCESS_TOKEN_LIFETIME_DEFAULT
init|=
literal|600L
decl_stmt|;
DECL|field|DFS_BLOCK_REPLICATOR_CLASSNAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_REPLICATOR_CLASSNAME_KEY
init|=
literal|"dfs.block.replicator.classname"
decl_stmt|;
DECL|field|DFS_BLOCK_REPLICATOR_CLASSNAME_DEFAULT
specifier|public
specifier|static
specifier|final
name|Class
argument_list|<
name|BlockPlacementPolicyDefault
argument_list|>
name|DFS_BLOCK_REPLICATOR_CLASSNAME_DEFAULT
init|=
name|BlockPlacementPolicyDefault
operator|.
name|class
decl_stmt|;
DECL|field|DFS_REPLICATION_MAX_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_REPLICATION_MAX_KEY
init|=
literal|"dfs.replication.max"
decl_stmt|;
DECL|field|DFS_REPLICATION_MAX_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_REPLICATION_MAX_DEFAULT
init|=
literal|512
decl_stmt|;
DECL|field|DFS_BLOCK_PLACEMENT_EC_CLASSNAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_PLACEMENT_EC_CLASSNAME_KEY
init|=
literal|"dfs.block.placement.ec.classname"
decl_stmt|;
DECL|field|DFS_BLOCK_PLACEMENT_EC_CLASSNAME_DEFAULT
specifier|public
specifier|static
specifier|final
name|Class
argument_list|<
name|BlockPlacementPolicyRackFaultTolerant
argument_list|>
name|DFS_BLOCK_PLACEMENT_EC_CLASSNAME_DEFAULT
init|=
name|BlockPlacementPolicyRackFaultTolerant
operator|.
name|class
decl_stmt|;
DECL|field|DFS_DF_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DF_INTERVAL_KEY
init|=
literal|"dfs.df.interval"
decl_stmt|;
DECL|field|DFS_DF_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DF_INTERVAL_DEFAULT
init|=
literal|60000
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INCREMENTAL_INTERVAL_MSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCKREPORT_INCREMENTAL_INTERVAL_MSEC_KEY
init|=
literal|"dfs.blockreport.incremental.intervalMsec"
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INCREMENTAL_INTERVAL_MSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCKREPORT_INCREMENTAL_INTERVAL_MSEC_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INTERVAL_MSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCKREPORT_INTERVAL_MSEC_KEY
init|=
literal|"dfs.blockreport.intervalMsec"
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INTERVAL_MSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCKREPORT_INTERVAL_MSEC_DEFAULT
init|=
literal|6
operator|*
literal|60
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INITIAL_DELAY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCKREPORT_INITIAL_DELAY_KEY
init|=
literal|"dfs.blockreport.initialDelay"
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_INITIAL_DELAY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BLOCKREPORT_INITIAL_DELAY_DEFAULT
init|=
literal|0
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_SPLIT_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCKREPORT_SPLIT_THRESHOLD_KEY
init|=
literal|"dfs.blockreport.split.threshold"
decl_stmt|;
DECL|field|DFS_BLOCKREPORT_SPLIT_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_BLOCKREPORT_SPLIT_THRESHOLD_DEFAULT
init|=
literal|1000
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_FULL_BLOCK_REPORT_LEASES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_FULL_BLOCK_REPORT_LEASES
init|=
literal|"dfs.namenode.max.full.block.report.leases"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_FULL_BLOCK_REPORT_LEASES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_FULL_BLOCK_REPORT_LEASES_DEFAULT
init|=
literal|6
decl_stmt|;
DECL|field|DFS_NAMENODE_FULL_BLOCK_REPORT_LEASE_LENGTH_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_FULL_BLOCK_REPORT_LEASE_LENGTH_MS
init|=
literal|"dfs.namenode.full.block.report.lease.length.ms"
decl_stmt|;
DECL|field|DFS_NAMENODE_FULL_BLOCK_REPORT_LEASE_LENGTH_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_FULL_BLOCK_REPORT_LEASE_LENGTH_MS_DEFAULT
init|=
literal|5L
operator|*
literal|60L
operator|*
literal|1000L
decl_stmt|;
DECL|field|DFS_CACHEREPORT_INTERVAL_MSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CACHEREPORT_INTERVAL_MSEC_KEY
init|=
literal|"dfs.cachereport.intervalMsec"
decl_stmt|;
DECL|field|DFS_CACHEREPORT_INTERVAL_MSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CACHEREPORT_INTERVAL_MSEC_DEFAULT
init|=
literal|10
operator|*
literal|1000
decl_stmt|;
DECL|field|DFS_BLOCK_INVALIDATE_LIMIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_INVALIDATE_LIMIT_KEY
init|=
literal|"dfs.block.invalidate.limit"
decl_stmt|;
DECL|field|DFS_BLOCK_INVALIDATE_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BLOCK_INVALIDATE_LIMIT_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|DFS_DEFAULT_MAX_CORRUPT_FILES_RETURNED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DEFAULT_MAX_CORRUPT_FILES_RETURNED_KEY
init|=
literal|"dfs.corruptfilesreturned.max"
decl_stmt|;
DECL|field|DFS_DEFAULT_MAX_CORRUPT_FILES_RETURNED
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DEFAULT_MAX_CORRUPT_FILES_RETURNED
init|=
literal|500
decl_stmt|;
comment|/* Maximum number of blocks to process for initializing replication queues */
DECL|field|DFS_BLOCK_MISREPLICATION_PROCESSING_LIMIT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_MISREPLICATION_PROCESSING_LIMIT
init|=
literal|"dfs.block.misreplication.processing.limit"
decl_stmt|;
DECL|field|DFS_BLOCK_MISREPLICATION_PROCESSING_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_BLOCK_MISREPLICATION_PROCESSING_LIMIT_DEFAULT
init|=
literal|10000
decl_stmt|;
comment|// property for fsimage compression
DECL|field|DFS_IMAGE_COMPRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_COMPRESS_KEY
init|=
literal|"dfs.image.compress"
decl_stmt|;
DECL|field|DFS_IMAGE_COMPRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_IMAGE_COMPRESS_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_IMAGE_COMPRESSION_CODEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_COMPRESSION_CODEC_KEY
init|=
literal|"dfs.image.compression.codec"
decl_stmt|;
DECL|field|DFS_IMAGE_COMPRESSION_CODEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_COMPRESSION_CODEC_DEFAULT
init|=
literal|"org.apache.hadoop.io.compress.DefaultCodec"
decl_stmt|;
DECL|field|DFS_IMAGE_TRANSFER_RATE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_TRANSFER_RATE_KEY
init|=
literal|"dfs.image.transfer.bandwidthPerSec"
decl_stmt|;
DECL|field|DFS_IMAGE_TRANSFER_RATE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_IMAGE_TRANSFER_RATE_DEFAULT
init|=
literal|0
decl_stmt|;
comment|//no throttling
DECL|field|DFS_IMAGE_TRANSFER_BOOTSTRAP_STANDBY_RATE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_TRANSFER_BOOTSTRAP_STANDBY_RATE_KEY
init|=
literal|"dfs.image.transfer-bootstrap-standby.bandwidthPerSec"
decl_stmt|;
DECL|field|DFS_IMAGE_TRANSFER_BOOTSTRAP_STANDBY_RATE_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_IMAGE_TRANSFER_BOOTSTRAP_STANDBY_RATE_DEFAULT
init|=
literal|0
decl_stmt|;
comment|//no throttling
comment|// Image transfer timeout
DECL|field|DFS_IMAGE_TRANSFER_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_TRANSFER_TIMEOUT_KEY
init|=
literal|"dfs.image.transfer.timeout"
decl_stmt|;
DECL|field|DFS_IMAGE_TRANSFER_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_IMAGE_TRANSFER_TIMEOUT_DEFAULT
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
comment|// Image transfer chunksize
DECL|field|DFS_IMAGE_TRANSFER_CHUNKSIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_IMAGE_TRANSFER_CHUNKSIZE_KEY
init|=
literal|"dfs.image.transfer.chunksize"
decl_stmt|;
DECL|field|DFS_IMAGE_TRANSFER_CHUNKSIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_IMAGE_TRANSFER_CHUNKSIZE_DEFAULT
init|=
literal|64
operator|*
literal|1024
decl_stmt|;
comment|//Keys with no defaults
DECL|field|DFS_DATANODE_PLUGINS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_PLUGINS_KEY
init|=
literal|"dfs.datanode.plugins"
decl_stmt|;
DECL|field|DFS_DATANODE_FSDATASET_FACTORY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_FSDATASET_FACTORY_KEY
init|=
literal|"dfs.datanode.fsdataset.factory"
decl_stmt|;
DECL|field|DFS_DATANODE_FSDATASET_VOLUME_CHOOSING_POLICY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_FSDATASET_VOLUME_CHOOSING_POLICY_KEY
init|=
literal|"dfs.datanode.fsdataset.volume.choosing.policy"
decl_stmt|;
DECL|field|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_THRESHOLD_KEY
init|=
literal|"dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold"
decl_stmt|;
DECL|field|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_THRESHOLD_DEFAULT
init|=
literal|1024L
operator|*
literal|1024L
operator|*
literal|1024L
operator|*
literal|10L
decl_stmt|;
comment|// 10 GB
DECL|field|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY
init|=
literal|"dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction"
decl_stmt|;
DECL|field|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_DATANODE_AVAILABLE_SPACE_VOLUME_CHOOSING_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT
init|=
literal|0.75f
decl_stmt|;
DECL|field|DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY
decl_stmt|;
DECL|field|DFS_DATANODE_STARTUP_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_STARTUP_KEY
init|=
literal|"dfs.datanode.startup"
decl_stmt|;
DECL|field|DFS_NAMENODE_PLUGINS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_PLUGINS_KEY
init|=
literal|"dfs.namenode.plugins"
decl_stmt|;
DECL|field|DFS_WEB_UGI_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEB_UGI_KEY
init|=
literal|"dfs.web.ugi"
decl_stmt|;
DECL|field|DFS_NAMENODE_STARTUP_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_STARTUP_KEY
init|=
literal|"dfs.namenode.startup"
decl_stmt|;
DECL|field|DFS_DATANODE_KEYTAB_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_KEYTAB_FILE_KEY
init|=
literal|"dfs.datanode.keytab.file"
decl_stmt|;
DECL|field|DFS_DATANODE_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_KERBEROS_PRINCIPAL_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATANODE_KERBEROS_PRINCIPAL_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATANODE_USER_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_USER_NAME_KEY
init|=
name|DFS_DATANODE_KERBEROS_PRINCIPAL_KEY
decl_stmt|;
DECL|field|DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATHS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATHS
init|=
literal|"dfs.datanode.shared.file.descriptor.paths"
decl_stmt|;
DECL|field|DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATHS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATHS_DEFAULT
init|=
literal|"/dev/shm,/tmp"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS
name|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS_DEFAULT
name|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS_DEFAULT
decl_stmt|;
DECL|field|DFS_NAMENODE_KEYTAB_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_KEYTAB_FILE_KEY
init|=
literal|"dfs.namenode.keytab.file"
decl_stmt|;
DECL|field|DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_NAMENODE_USER_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_USER_NAME_KEY
init|=
name|DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
init|=
literal|"dfs.namenode.kerberos.internal.spnego.principal"
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY
init|=
name|DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
decl_stmt|;
DECL|field|DFS_SECONDARY_NAMENODE_KEYTAB_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SECONDARY_NAMENODE_KEYTAB_FILE_KEY
init|=
literal|"dfs.secondary.namenode.keytab.file"
decl_stmt|;
DECL|field|DFS_SECONDARY_NAMENODE_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SECONDARY_NAMENODE_KERBEROS_PRINCIPAL_KEY
init|=
literal|"dfs.secondary.namenode.kerberos.principal"
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_SECONDARY_NAMENODE_USER_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SECONDARY_NAMENODE_USER_NAME_KEY
init|=
name|DFS_SECONDARY_NAMENODE_KERBEROS_PRINCIPAL_KEY
decl_stmt|;
DECL|field|DFS_SECONDARY_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SECONDARY_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
init|=
literal|"dfs.secondary.namenode.kerberos.internal.spnego.principal"
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_SECONDARY_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_SECONDARY_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY
init|=
name|DFS_SECONDARY_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_NAME_CACHE_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_NAME_CACHE_THRESHOLD_KEY
init|=
literal|"dfs.namenode.name.cache.threshold"
decl_stmt|;
DECL|field|DFS_NAMENODE_NAME_CACHE_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_NAME_CACHE_THRESHOLD_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|DFS_NAMENODE_LEGACY_OIV_IMAGE_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LEGACY_OIV_IMAGE_DIR_KEY
init|=
literal|"dfs.namenode.legacy-oiv-image.dir"
decl_stmt|;
DECL|field|DFS_NAMESERVICES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMESERVICES
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_NAMESERVICES
decl_stmt|;
DECL|field|DFS_NAMESERVICE_ID
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMESERVICE_ID
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_NAMESERVICE_ID
decl_stmt|;
DECL|field|DFS_INTERNAL_NAMESERVICES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_INTERNAL_NAMESERVICES_KEY
init|=
literal|"dfs.internal.nameservices"
decl_stmt|;
DECL|field|DFS_NAMENODE_RESOURCE_CHECK_INTERVAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_RESOURCE_CHECK_INTERVAL_KEY
init|=
literal|"dfs.namenode.resource.check.interval"
decl_stmt|;
DECL|field|DFS_NAMENODE_RESOURCE_CHECK_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_RESOURCE_CHECK_INTERVAL_DEFAULT
init|=
literal|5000
decl_stmt|;
DECL|field|DFS_NAMENODE_DU_RESERVED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_DU_RESERVED_KEY
init|=
literal|"dfs.namenode.resource.du.reserved"
decl_stmt|;
DECL|field|DFS_NAMENODE_DU_RESERVED_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_DU_RESERVED_DEFAULT
init|=
literal|1024
operator|*
literal|1024
operator|*
literal|100
decl_stmt|;
comment|// 100 MB
DECL|field|DFS_NAMENODE_CHECKED_VOLUMES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKED_VOLUMES_KEY
init|=
literal|"dfs.namenode.resource.checked.volumes"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_KEY
init|=
literal|"dfs.namenode.resource.checked.volumes.minimum"
decl_stmt|;
DECL|field|DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_DEFAULT
init|=
literal|1
decl_stmt|;
DECL|field|DFS_WEB_AUTHENTICATION_SIMPLE_ANONYMOUS_ALLOWED
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEB_AUTHENTICATION_SIMPLE_ANONYMOUS_ALLOWED
init|=
literal|"dfs.web.authentication.simple.anonymous.allowed"
decl_stmt|;
DECL|field|DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY
init|=
literal|"dfs.web.authentication.kerberos.principal"
decl_stmt|;
DECL|field|DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY
init|=
literal|"dfs.web.authentication.kerberos.keytab"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_OP_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_MAX_OP_SIZE_KEY
init|=
literal|"dfs.namenode.max.op.size"
decl_stmt|;
DECL|field|DFS_NAMENODE_MAX_OP_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_MAX_OP_SIZE_DEFAULT
init|=
literal|50
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY
init|=
literal|"dfs.namenode.available-space-block-placement-policy.balanced-space-preference-fraction"
decl_stmt|;
DECL|field|DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT
init|=
literal|0.6f
decl_stmt|;
DECL|field|DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_KEY
init|=
literal|"dfs.namenode.block-placement-policy.default.prefer-local-node"
decl_stmt|;
DECL|field|DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_BLOCKPLACEMENTPOLICY_DEFAULT_PREFER_LOCAL_NODE_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY
init|=
literal|"dfs.block.local-path-access.user"
decl_stmt|;
DECL|field|DFS_DOMAIN_SOCKET_PATH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DOMAIN_SOCKET_PATH_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DOMAIN_SOCKET_PATH_KEY
decl_stmt|;
DECL|field|DFS_DOMAIN_SOCKET_PATH_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DOMAIN_SOCKET_PATH_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DOMAIN_SOCKET_PATH_DEFAULT
decl_stmt|;
DECL|field|DFS_STORAGE_POLICY_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_STORAGE_POLICY_ENABLED_KEY
init|=
literal|"dfs.storage.policy.enabled"
decl_stmt|;
DECL|field|DFS_STORAGE_POLICY_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_STORAGE_POLICY_ENABLED_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_QUOTA_BY_STORAGETYPE_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QUOTA_BY_STORAGETYPE_ENABLED_KEY
init|=
literal|"dfs.quota.by.storage.type.enabled"
decl_stmt|;
DECL|field|DFS_QUOTA_BY_STORAGETYPE_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_QUOTA_BY_STORAGETYPE_ENABLED_DEFAULT
init|=
literal|true
decl_stmt|;
comment|// HA related configuration
DECL|field|DFS_HA_NAMENODES_KEY_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_NAMENODES_KEY_PREFIX
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_HA_NAMENODES_KEY_PREFIX
decl_stmt|;
DECL|field|DFS_HA_NAMENODE_ID_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_NAMENODE_ID_KEY
init|=
literal|"dfs.ha.namenode.id"
decl_stmt|;
DECL|field|DFS_HA_STANDBY_CHECKPOINTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_STANDBY_CHECKPOINTS_KEY
init|=
literal|"dfs.ha.standby.checkpoints"
decl_stmt|;
DECL|field|DFS_HA_STANDBY_CHECKPOINTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_HA_STANDBY_CHECKPOINTS_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_HA_LOGROLL_PERIOD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_LOGROLL_PERIOD_KEY
init|=
literal|"dfs.ha.log-roll.period"
decl_stmt|;
DECL|field|DFS_HA_LOGROLL_PERIOD_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_LOGROLL_PERIOD_DEFAULT
init|=
literal|2
operator|*
literal|60
decl_stmt|;
comment|// 2m
DECL|field|DFS_HA_TAILEDITS_PERIOD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_TAILEDITS_PERIOD_KEY
init|=
literal|"dfs.ha.tail-edits.period"
decl_stmt|;
DECL|field|DFS_HA_TAILEDITS_PERIOD_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_TAILEDITS_PERIOD_DEFAULT
init|=
literal|60
decl_stmt|;
comment|// 1m
DECL|field|DFS_HA_TAILEDITS_ALL_NAMESNODES_RETRY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_TAILEDITS_ALL_NAMESNODES_RETRY_KEY
init|=
literal|"dfs.ha.tail-edits.namenode-retries"
decl_stmt|;
DECL|field|DFS_HA_TAILEDITS_ALL_NAMESNODES_RETRY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_TAILEDITS_ALL_NAMESNODES_RETRY_DEFAULT
init|=
literal|3
decl_stmt|;
DECL|field|DFS_HA_LOGROLL_RPC_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_LOGROLL_RPC_TIMEOUT_KEY
init|=
literal|"dfs.ha.log-roll.rpc.timeout"
decl_stmt|;
DECL|field|DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT
init|=
literal|20000
decl_stmt|;
comment|// 20s
DECL|field|DFS_HA_FENCE_METHODS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_FENCE_METHODS_KEY
init|=
literal|"dfs.ha.fencing.methods"
decl_stmt|;
DECL|field|DFS_HA_AUTO_FAILOVER_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_AUTO_FAILOVER_ENABLED_KEY
init|=
literal|"dfs.ha.automatic-failover.enabled"
decl_stmt|;
DECL|field|DFS_HA_AUTO_FAILOVER_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_HA_AUTO_FAILOVER_ENABLED_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|DFS_HA_ZKFC_PORT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_ZKFC_PORT_KEY
init|=
literal|"dfs.ha.zkfc.port"
decl_stmt|;
DECL|field|DFS_HA_ZKFC_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_ZKFC_PORT_DEFAULT
init|=
literal|8019
decl_stmt|;
DECL|field|DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY
init|=
literal|"dfs.ha.zkfc.nn.http.timeout.ms"
decl_stmt|;
DECL|field|DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY_DEFAULT
init|=
literal|20000
decl_stmt|;
comment|// Security-related configs
DECL|field|DFS_ENCRYPT_DATA_TRANSFER_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_ENCRYPT_DATA_TRANSFER_KEY
init|=
literal|"dfs.encrypt.data.transfer"
decl_stmt|;
DECL|field|DFS_ENCRYPT_DATA_TRANSFER_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_ENCRYPT_DATA_TRANSFER_DEFAULT
init|=
literal|false
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_KEY_BITLENGTH_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY
decl_stmt|;
DECL|field|DFS_DATA_ENCRYPTION_ALGORITHM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATA_ENCRYPTION_ALGORITHM_KEY
init|=
literal|"dfs.encrypt.data.transfer.algorithm"
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_TRUSTEDCHANNEL_RESOLVER_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_TRUSTEDCHANNEL_RESOLVER_CLASS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_TRUSTEDCHANNEL_RESOLVER_CLASS
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATA_TRANSFER_PROTECTION_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATA_TRANSFER_PROTECTION_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATA_TRANSFER_PROTECTION_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATA_TRANSFER_PROTECTION_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATA_TRANSFER_PROTECTION_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATA_TRANSFER_PROTECTION_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES_DEFAULT
init|=
literal|100
decl_stmt|;
DECL|field|DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES
init|=
literal|"dfs.namenode.list.encryption.zones.num.responses"
decl_stmt|;
DECL|field|DFS_ENCRYPTION_KEY_PROVIDER_URI
specifier|public
specifier|static
specifier|final
name|String
name|DFS_ENCRYPTION_KEY_PROVIDER_URI
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_ENCRYPTION_KEY_PROVIDER_URI
decl_stmt|;
comment|// Journal-node related configs. These are read on the JN side.
DECL|field|DFS_JOURNALNODE_EDITS_DIR_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_EDITS_DIR_KEY
init|=
literal|"dfs.journalnode.edits.dir"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_EDITS_DIR_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_EDITS_DIR_DEFAULT
init|=
literal|"/tmp/hadoop/dfs/journalnode/"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_RPC_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_RPC_ADDRESS_KEY
init|=
literal|"dfs.journalnode.rpc-address"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_RPC_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_JOURNALNODE_RPC_PORT_DEFAULT
init|=
literal|8485
decl_stmt|;
DECL|field|DFS_JOURNALNODE_RPC_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_RPC_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_JOURNALNODE_RPC_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTP_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_HTTP_ADDRESS_KEY
init|=
literal|"dfs.journalnode.http-address"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTP_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_JOURNALNODE_HTTP_PORT_DEFAULT
init|=
literal|8480
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTP_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_HTTP_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_JOURNALNODE_HTTP_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTPS_ADDRESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_HTTPS_ADDRESS_KEY
init|=
literal|"dfs.journalnode.https-address"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTPS_PORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_JOURNALNODE_HTTPS_PORT_DEFAULT
init|=
literal|8481
decl_stmt|;
DECL|field|DFS_JOURNALNODE_HTTPS_ADDRESS_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_HTTPS_ADDRESS_DEFAULT
init|=
literal|"0.0.0.0:"
operator|+
name|DFS_JOURNALNODE_HTTPS_PORT_DEFAULT
decl_stmt|;
DECL|field|DFS_JOURNALNODE_KEYTAB_FILE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_KEYTAB_FILE_KEY
init|=
literal|"dfs.journalnode.keytab.file"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_KERBEROS_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_KERBEROS_PRINCIPAL_KEY
init|=
literal|"dfs.journalnode.kerberos.principal"
decl_stmt|;
DECL|field|DFS_JOURNALNODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_JOURNALNODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY
init|=
literal|"dfs.journalnode.kerberos.internal.spnego.principal"
decl_stmt|;
comment|// Journal-node related configs for the client side.
DECL|field|DFS_QJOURNAL_QUEUE_SIZE_LIMIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_QUEUE_SIZE_LIMIT_KEY
init|=
literal|"dfs.qjournal.queued-edits.limit.mb"
decl_stmt|;
DECL|field|DFS_QJOURNAL_QUEUE_SIZE_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_QUEUE_SIZE_LIMIT_DEFAULT
init|=
literal|10
decl_stmt|;
comment|// Quorum-journal timeouts for various operations. Unlikely to need
comment|// to be tweaked, but configurable just in case.
DECL|field|DFS_QJOURNAL_START_SEGMENT_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_START_SEGMENT_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.start-segment.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.prepare-recovery.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.accept-recovery.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.finalize-segment.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.select-input-streams.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.get-journal-state.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.new-epoch.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_WRITE_TXNS_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_QJOURNAL_WRITE_TXNS_TIMEOUT_KEY
init|=
literal|"dfs.qjournal.write-txns.timeout.ms"
decl_stmt|;
DECL|field|DFS_QJOURNAL_START_SEGMENT_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_START_SEGMENT_TIMEOUT_DEFAULT
init|=
literal|20000
decl_stmt|;
DECL|field|DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_PREPARE_RECOVERY_TIMEOUT_DEFAULT
init|=
literal|120000
decl_stmt|;
DECL|field|DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_ACCEPT_RECOVERY_TIMEOUT_DEFAULT
init|=
literal|120000
decl_stmt|;
DECL|field|DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_FINALIZE_SEGMENT_TIMEOUT_DEFAULT
init|=
literal|120000
decl_stmt|;
DECL|field|DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_SELECT_INPUT_STREAMS_TIMEOUT_DEFAULT
init|=
literal|20000
decl_stmt|;
DECL|field|DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_GET_JOURNAL_STATE_TIMEOUT_DEFAULT
init|=
literal|120000
decl_stmt|;
DECL|field|DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_NEW_EPOCH_TIMEOUT_DEFAULT
init|=
literal|120000
decl_stmt|;
DECL|field|DFS_QJOURNAL_WRITE_TXNS_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_QJOURNAL_WRITE_TXNS_TIMEOUT_DEFAULT
init|=
literal|20000
decl_stmt|;
DECL|field|DFS_MAX_NUM_BLOCKS_TO_LOG_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_MAX_NUM_BLOCKS_TO_LOG_KEY
init|=
literal|"dfs.namenode.max-num-blocks-to-log"
decl_stmt|;
DECL|field|DFS_MAX_NUM_BLOCKS_TO_LOG_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_MAX_NUM_BLOCKS_TO_LOG_DEFAULT
init|=
literal|1000l
decl_stmt|;
DECL|field|DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY
init|=
literal|"dfs.namenode.enable.retrycache"
decl_stmt|;
DECL|field|DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY
init|=
literal|"dfs.namenode.retrycache.expirytime.millis"
decl_stmt|;
DECL|field|DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT
init|=
literal|600000
decl_stmt|;
comment|// 10 minutes
DECL|field|DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY
init|=
literal|"dfs.namenode.retrycache.heap.percent"
decl_stmt|;
DECL|field|DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT
specifier|public
specifier|static
specifier|final
name|float
name|DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT
init|=
literal|0.03f
decl_stmt|;
comment|// Hidden configuration undocumented in hdfs-site. xml
comment|// Timeout to wait for block receiver and responder thread to stop
DECL|field|DFS_DATANODE_XCEIVER_STOP_TIMEOUT_MILLIS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_XCEIVER_STOP_TIMEOUT_MILLIS_KEY
init|=
literal|"dfs.datanode.xceiver.stop.timeout.millis"
decl_stmt|;
DECL|field|DFS_DATANODE_XCEIVER_STOP_TIMEOUT_MILLIS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_XCEIVER_STOP_TIMEOUT_MILLIS_DEFAULT
init|=
literal|60000
decl_stmt|;
comment|// WebHDFS retry policy
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_POLICY_ENABLED_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_POLICY_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_HTTP_CLIENT_RETRY_POLICY_ENABLED_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_POLICY_ENABLED_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_POLICY_SPEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_RETRY_POLICY_SPEC_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_POLICY_SPEC_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_POLICY_SPEC_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_MAX_ATTEMPTS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HTTP_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_MAX_ATTEMPTS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_MAX_ATTEMPTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_RETRY_MAX_ATTEMPTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_MAX_ATTEMPTS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_RETRY_MAX_ATTEMPTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HTTP_CLIENT_RETRY_MAX_ATTEMPTS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|RETRY_MAX_ATTEMPTS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_BASE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_BASE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_SLEEPTIME_BASE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_BASE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_BASE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_SLEEPTIME_BASE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_MAX_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_MAX_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_SLEEPTIME_MAX_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_MAX_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_HTTP_CLIENT_FAILOVER_SLEEPTIME_MAX_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|HttpClient
operator|.
name|FAILOVER_SLEEPTIME_MAX_DEFAULT
decl_stmt|;
comment|// Handling unresolved DN topology mapping
DECL|field|DFS_REJECT_UNRESOLVED_DN_TOPOLOGY_MAPPING_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_REJECT_UNRESOLVED_DN_TOPOLOGY_MAPPING_KEY
init|=
literal|"dfs.namenode.reject-unresolved-dn-topology-mapping"
decl_stmt|;
DECL|field|DFS_REJECT_UNRESOLVED_DN_TOPOLOGY_MAPPING_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_REJECT_UNRESOLVED_DN_TOPOLOGY_MAPPING_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// Slow io warning log threshold settings for dfsclient and datanode.
DECL|field|DFS_DATANODE_SLOW_IO_WARNING_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_SLOW_IO_WARNING_THRESHOLD_KEY
init|=
literal|"dfs.datanode.slow.io.warning.threshold.ms"
decl_stmt|;
DECL|field|DFS_DATANODE_SLOW_IO_WARNING_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_DATANODE_SLOW_IO_WARNING_THRESHOLD_DEFAULT
init|=
literal|300
decl_stmt|;
comment|// Number of parallel threads to load multiple datanode volumes
DECL|field|DFS_DATANODE_PARALLEL_VOLUME_LOAD_THREADS_NUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_PARALLEL_VOLUME_LOAD_THREADS_NUM_KEY
init|=
literal|"dfs.datanode.parallel.volumes.load.threads.num"
decl_stmt|;
DECL|field|DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS_KEY
init|=
literal|"dfs.datanode.block.id.layout.upgrade.threads"
decl_stmt|;
DECL|field|DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS
specifier|public
specifier|static
specifier|final
name|int
name|DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS
init|=
literal|12
decl_stmt|;
DECL|field|DFS_NAMENODE_INOTIFY_MAX_EVENTS_PER_RPC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_NAMENODE_INOTIFY_MAX_EVENTS_PER_RPC_KEY
init|=
literal|"dfs.namenode.inotify.max.events.per.rpc"
decl_stmt|;
DECL|field|DFS_NAMENODE_INOTIFY_MAX_EVENTS_PER_RPC_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_NAMENODE_INOTIFY_MAX_EVENTS_PER_RPC_DEFAULT
init|=
literal|1000
decl_stmt|;
DECL|field|IGNORE_SECURE_PORTS_FOR_TESTING_KEY
specifier|public
specifier|static
specifier|final
name|String
name|IGNORE_SECURE_PORTS_FOR_TESTING_KEY
init|=
literal|"ignore.secure.ports.for.testing"
decl_stmt|;
DECL|field|IGNORE_SECURE_PORTS_FOR_TESTING_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|IGNORE_SECURE_PORTS_FOR_TESTING_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// nntop Configurations
DECL|field|NNTOP_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NNTOP_ENABLED_KEY
init|=
literal|"dfs.namenode.top.enabled"
decl_stmt|;
DECL|field|NNTOP_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|NNTOP_ENABLED_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|NNTOP_BUCKETS_PER_WINDOW_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NNTOP_BUCKETS_PER_WINDOW_KEY
init|=
literal|"dfs.namenode.top.window.num.buckets"
decl_stmt|;
DECL|field|NNTOP_BUCKETS_PER_WINDOW_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|NNTOP_BUCKETS_PER_WINDOW_DEFAULT
init|=
literal|10
decl_stmt|;
DECL|field|NNTOP_NUM_USERS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NNTOP_NUM_USERS_KEY
init|=
literal|"dfs.namenode.top.num.users"
decl_stmt|;
DECL|field|NNTOP_NUM_USERS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|NNTOP_NUM_USERS_DEFAULT
init|=
literal|10
decl_stmt|;
comment|// comma separated list of nntop reporting periods in minutes
DECL|field|NNTOP_WINDOWS_MINUTES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NNTOP_WINDOWS_MINUTES_KEY
init|=
literal|"dfs.namenode.top.windows.minutes"
decl_stmt|;
DECL|field|NNTOP_WINDOWS_MINUTES_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|NNTOP_WINDOWS_MINUTES_DEFAULT
init|=
block|{
literal|"1"
block|,
literal|"5"
block|,
literal|"25"
block|}
decl_stmt|;
DECL|field|DFS_PIPELINE_ECN_ENABLED
specifier|public
specifier|static
specifier|final
name|String
name|DFS_PIPELINE_ECN_ENABLED
init|=
literal|"dfs.pipeline.ecn"
decl_stmt|;
DECL|field|DFS_PIPELINE_ECN_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_PIPELINE_ECN_ENABLED_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// Key Provider Cache Expiry
DECL|field|DFS_DATANODE_BLOCK_PINNING_ENABLED
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DATANODE_BLOCK_PINNING_ENABLED
init|=
literal|"dfs.datanode.block-pinning.enabled"
decl_stmt|;
DECL|field|DFS_DATANODE_BLOCK_PINNING_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_DATANODE_BLOCK_PINNING_ENABLED_DEFAULT
init|=
literal|false
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_DATANODE_TRANSFER_SOCKET_SEND_BUFFER_SIZE_KEY
name|DFS_DATANODE_TRANSFER_SOCKET_SEND_BUFFER_SIZE_KEY
init|=
literal|"dfs.datanode.transfer.socket.send.buffer.size"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_DATANODE_TRANSFER_SOCKET_SEND_BUFFER_SIZE_DEFAULT
name|DFS_DATANODE_TRANSFER_SOCKET_SEND_BUFFER_SIZE_DEFAULT
init|=
name|HdfsConstants
operator|.
name|DEFAULT_DATA_SOCKET_SIZE
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_KEY
name|DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_KEY
init|=
literal|"dfs.datanode.transfer.socket.recv.buffer.size"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_DEFAULT
name|DFS_DATANODE_TRANSFER_SOCKET_RECV_BUFFER_SIZE_DEFAULT
init|=
name|HdfsConstants
operator|.
name|DEFAULT_DATA_SOCKET_SIZE
decl_stmt|;
comment|// dfs.client.retry confs are moved to HdfsClientConfigKeys.Retry
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_POLICY_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_POLICY_ENABLED_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|POLICY_ENABLED_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_POLICY_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_RETRY_POLICY_ENABLED_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|POLICY_ENABLED_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_POLICY_SPEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_POLICY_SPEC_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|POLICY_SPEC_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_POLICY_SPEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_POLICY_SPEC_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|POLICY_SPEC_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_TIMES_GET_LAST_BLOCK_LENGTH
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_TIMES_GET_LAST_BLOCK_LENGTH
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|TIMES_GET_LAST_BLOCK_LENGTH_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_TIMES_GET_LAST_BLOCK_LENGTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_RETRY_TIMES_GET_LAST_BLOCK_LENGTH_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|TIMES_GET_LAST_BLOCK_LENGTH_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_INTERVAL_GET_LAST_BLOCK_LENGTH
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_INTERVAL_GET_LAST_BLOCK_LENGTH
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|INTERVAL_GET_LAST_BLOCK_LENGTH_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_INTERVAL_GET_LAST_BLOCK_LENGTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_RETRY_INTERVAL_GET_LAST_BLOCK_LENGTH_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|INTERVAL_GET_LAST_BLOCK_LENGTH_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_MAX_ATTEMPTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_MAX_ATTEMPTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|MAX_ATTEMPTS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_MAX_ATTEMPTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_RETRY_MAX_ATTEMPTS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|MAX_ATTEMPTS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_WINDOW_BASE
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_RETRY_WINDOW_BASE
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|WINDOW_BASE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_RETRY_WINDOW_BASE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_RETRY_WINDOW_BASE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Retry
operator|.
name|WINDOW_BASE_DEFAULT
decl_stmt|;
comment|// dfs.client.failover confs are moved to HdfsClientConfigKeys.Failover
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_PROXY_PROVIDER_KEY_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_PROXY_PROVIDER_KEY_PREFIX
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|PROXY_PROVIDER_KEY_PREFIX
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|MAX_ATTEMPTS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|MAX_ATTEMPTS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_SLEEPTIME_BASE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_SLEEPTIME_BASE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|SLEEPTIME_BASE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_SLEEPTIME_BASE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_FAILOVER_SLEEPTIME_BASE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|SLEEPTIME_BASE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_SLEEPTIME_MAX_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_SLEEPTIME_MAX_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|SLEEPTIME_MAX_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_SLEEPTIME_MAX_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_FAILOVER_SLEEPTIME_MAX_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|SLEEPTIME_MAX_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|CONNECTION_RETRIES_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|CONNECTION_RETRIES_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_FAILOVER_CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Failover
operator|.
name|CONNECTION_RETRIES_ON_SOCKET_TIMEOUTS_DEFAULT
decl_stmt|;
comment|// dfs.client.write confs are moved to HdfsClientConfigKeys.Write
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_MAX_PACKETS_IN_FLIGHT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_MAX_PACKETS_IN_FLIGHT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|MAX_PACKETS_IN_FLIGHT_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_MAX_PACKETS_IN_FLIGHT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_WRITE_MAX_PACKETS_IN_FLIGHT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|MAX_PACKETS_IN_FLIGHT_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_WRITE_EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|EXCLUDE_NODES_CACHE_EXPIRY_INTERVAL_DEFAULT
decl_stmt|;
comment|// 10 minutes, in ms
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_ENABLED_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_ENABLED_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|ENABLED_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_ENABLED_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|ENABLED_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_THRESHOLD_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_THRESHOLD_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_THRESHOLD_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_THRESHOLD_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_LIMIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_LIMIT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_LIMIT_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_LIMIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_LIMIT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_LIMIT_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_RESET_TIME_PERIOD_MS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_RESET_TIME_PERIOD_MS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_RESET_TIME_PERIOD_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_RESET_TIME_PERIOD_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_WRITE_BYTE_ARRAY_MANAGER_COUNT_RESET_TIME_PERIOD_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Write
operator|.
name|ByteArrayManager
operator|.
name|COUNT_RESET_TIME_PERIOD_MS_DEFAULT
decl_stmt|;
comment|// dfs.client.block.write confs are moved to HdfsClientConfigKeys.BlockWrite
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_RETRIES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_BLOCK_WRITE_RETRIES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|RETRIES_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_RETRIES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_BLOCK_WRITE_RETRIES_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|RETRIES_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_RETRIES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_RETRIES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|LOCATEFOLLOWINGBLOCK_RETRIES_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_RETRIES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_RETRIES_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|LOCATEFOLLOWINGBLOCK_RETRIES_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|LOCATEFOLLOWINGBLOCK_INITIAL_DELAY_MS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_ENABLE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_ENABLE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|ENABLE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_ENABLE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_ENABLE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|ENABLE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_POLICY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_POLICY_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|POLICY_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_POLICY_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_POLICY_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|POLICY_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_BEST_EFFORT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_BEST_EFFORT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|BEST_EFFORT_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_BEST_EFFORT_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_WRITE_REPLACE_DATANODE_ON_FAILURE_BEST_EFFORT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|BlockWrite
operator|.
name|ReplaceDatanodeOnFailure
operator|.
name|BEST_EFFORT_DEFAULT
decl_stmt|;
comment|// dfs.client.read confs are moved to HdfsClientConfigKeys.Read
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_PREFETCH_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_PREFETCH_SIZE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|PREFETCH_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_SHORTCIRCUIT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|SKIP_CHECKSUM_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|SKIP_CHECKSUM_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_BUFFER_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_SHORTCIRCUIT_BUFFER_SIZE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|BUFFER_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_BUFFER_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_READ_SHORTCIRCUIT_BUFFER_SIZE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|BUFFER_SIZE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_SIZE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|STREAMS_CACHE_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_SIZE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|STREAMS_CACHE_SIZE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_EXPIRY_MS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_EXPIRY_MS_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|STREAMS_CACHE_EXPIRY_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_EXPIRY_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_READ_SHORTCIRCUIT_STREAMS_CACHE_EXPIRY_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Read
operator|.
name|ShortCircuit
operator|.
name|STREAMS_CACHE_EXPIRY_MS_DEFAULT
decl_stmt|;
comment|// dfs.client.mmap confs are moved to HdfsClientConfigKeys.Mmap
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_ENABLED
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_MMAP_ENABLED
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|ENABLED_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_ENABLED_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_MMAP_ENABLED_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|ENABLED_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_CACHE_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_MMAP_CACHE_SIZE
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|CACHE_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_CACHE_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_MMAP_CACHE_SIZE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|CACHE_SIZE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_CACHE_TIMEOUT_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_MMAP_CACHE_TIMEOUT_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|CACHE_TIMEOUT_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_CACHE_TIMEOUT_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_MMAP_CACHE_TIMEOUT_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|CACHE_TIMEOUT_MS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_RETRY_TIMEOUT_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_MMAP_RETRY_TIMEOUT_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|RETRY_TIMEOUT_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MMAP_RETRY_TIMEOUT_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_MMAP_RETRY_TIMEOUT_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|Mmap
operator|.
name|RETRY_TIMEOUT_MS_DEFAULT
decl_stmt|;
comment|// dfs.client.short.circuit confs are moved to HdfsClientConfigKeys.ShortCircuit
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SHORT_CIRCUIT_REPLICA_STALE_THRESHOLD_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_SHORT_CIRCUIT_REPLICA_STALE_THRESHOLD_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|ShortCircuit
operator|.
name|REPLICA_STALE_THRESHOLD_MS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SHORT_CIRCUIT_REPLICA_STALE_THRESHOLD_MS_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_SHORT_CIRCUIT_REPLICA_STALE_THRESHOLD_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|ShortCircuit
operator|.
name|REPLICA_STALE_THRESHOLD_MS_DEFAULT
decl_stmt|;
comment|// dfs.client.hedged.read confs are moved to HdfsClientConfigKeys.HedgedRead
annotation|@
name|Deprecated
DECL|field|DFS_DFSCLIENT_HEDGED_READ_THRESHOLD_MILLIS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DFSCLIENT_HEDGED_READ_THRESHOLD_MILLIS
init|=
name|HdfsClientConfigKeys
operator|.
name|HedgedRead
operator|.
name|THRESHOLD_MILLIS_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DEFAULT_DFSCLIENT_HEDGED_READ_THRESHOLD_MILLIS
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_DFSCLIENT_HEDGED_READ_THRESHOLD_MILLIS
init|=
name|HdfsClientConfigKeys
operator|.
name|HedgedRead
operator|.
name|THRESHOLD_MILLIS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_DFSCLIENT_HEDGED_READ_THREADPOOL_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|DFS_DFSCLIENT_HEDGED_READ_THREADPOOL_SIZE
init|=
name|HdfsClientConfigKeys
operator|.
name|HedgedRead
operator|.
name|THREADPOOL_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DEFAULT_DFSCLIENT_HEDGED_READ_THREADPOOL_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_DFSCLIENT_HEDGED_READ_THREADPOOL_SIZE
init|=
name|HdfsClientConfigKeys
operator|.
name|HedgedRead
operator|.
name|THREADPOOL_SIZE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_PACKET_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_WRITE_PACKET_SIZE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_WRITE_PACKET_SIZE_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SOCKET_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_SOCKET_TIMEOUT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SOCKET_TIMEOUT_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SOCKET_CACHE_CAPACITY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_SOCKET_CACHE_CAPACITY_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SOCKET_CACHE_CAPACITY_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SOCKET_CACHE_CAPACITY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_SOCKET_CACHE_CAPACITY_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SOCKET_CACHE_CAPACITY_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_DN_HOSTNAME
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_USE_DN_HOSTNAME
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_DN_HOSTNAME
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_DN_HOSTNAME_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_USE_DN_HOSTNAME_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_DN_HOSTNAME_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CACHE_DROP_BEHIND_WRITES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CACHE_DROP_BEHIND_WRITES
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CACHE_DROP_BEHIND_WRITES
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CACHE_DROP_BEHIND_READS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CACHE_DROP_BEHIND_READS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CACHE_DROP_BEHIND_READS
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CACHE_READAHEAD
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CACHE_READAHEAD
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CACHE_READAHEAD
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CACHED_CONN_RETRY_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CACHED_CONN_RETRY_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CACHED_CONN_RETRY_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CACHED_CONN_RETRY_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_CACHED_CONN_RETRY_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CACHED_CONN_RETRY_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CONTEXT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CONTEXT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CONTEXT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_CONTEXT_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_CONTEXT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_CONTEXT_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS_DEFAULT
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_NUM_THREADS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|String
DECL|field|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|int
DECL|field|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS_DEFAULT
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_FILE_BLOCK_STORAGE_LOCATIONS_TIMEOUT_MS_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_DATANODE_RESTART_TIMEOUT_DEFAULT
decl_stmt|;
DECL|field|DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_KEY
decl_stmt|;
DECL|field|DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_HTTPS_KEYSTORE_RESOURCE_DEFAULT
init|=
literal|"ssl-client.xml"
decl_stmt|;
DECL|field|DFS_CLIENT_HTTPS_NEED_AUTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_HTTPS_NEED_AUTH_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DeprecatedKeys
operator|.
name|DFS_CLIENT_HTTPS_NEED_AUTH_KEY
decl_stmt|;
DECL|field|DFS_CLIENT_HTTPS_NEED_AUTH_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_HTTPS_NEED_AUTH_DEFAULT
init|=
literal|false
decl_stmt|;
comment|// Much code in hdfs is not yet updated to use these keys.
comment|// the initial delay (unit is ms) for locateFollowingBlock, the delay time will increase exponentially(double) for each retry.
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_LEGACY_BLOCKREADER
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_USE_LEGACY_BLOCKREADER
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_LEGACY_BLOCKREADER
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_LEGACY_BLOCKREADER_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_USE_LEGACY_BLOCKREADER_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_LEGACY_BLOCKREADER_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_LOCAL_INTERFACES
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_LOCAL_INTERFACES
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_LOCAL_INTERFACES
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_TEST_DROP_NAMENODE_RESPONSE_NUM_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_KEY
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_KEY
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_KEY
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_SLOW_IO_WARNING_THRESHOLD_DEFAULT
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_MS
specifier|public
specifier|static
specifier|final
name|String
name|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_MS
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_MS
decl_stmt|;
annotation|@
name|Deprecated
DECL|field|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_DEFAULT
specifier|public
specifier|static
specifier|final
name|long
name|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_DEFAULT
init|=
name|HdfsClientConfigKeys
operator|.
name|DFS_CLIENT_KEY_PROVIDER_CACHE_EXPIRY_DEFAULT
decl_stmt|;
block|}
end_class

end_unit

