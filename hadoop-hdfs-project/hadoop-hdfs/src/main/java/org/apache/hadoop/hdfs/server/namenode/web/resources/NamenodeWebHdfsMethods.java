begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.web.resources
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|web
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|StreamingOutput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ContentSummary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DirectoryListing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|DatanodeDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
operator|.
name|JspHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NameNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
operator|.
name|NamenodeProtocols
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|JsonUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|ParamFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|AccessTimeParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|BlockSizeParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|BufferSizeParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|CreateParentParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|DelegationParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|DeleteOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|DestinationParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|DoAsParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|GetOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|GroupParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|HttpOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|LengthParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|ModificationTimeParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|NamenodeRpcAddressParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|OffsetParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|OverwriteParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|OwnerParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|Param
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|PermissionParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|PostOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|PutOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|RecursiveParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|RenameOptionSetParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|RenewerParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|ReplicationParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|TokenArgumentParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|UriFsPathParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|UserParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NodeBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|SecurityUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|spi
operator|.
name|container
operator|.
name|ResourceFilters
import|;
end_import

begin_comment
comment|/** Web-hdfs NameNode implementation. */
end_comment

begin_class
annotation|@
name|Path
argument_list|(
literal|""
argument_list|)
annotation|@
name|ResourceFilters
argument_list|(
name|ParamFilter
operator|.
name|class
argument_list|)
DECL|class|NamenodeWebHdfsMethods
specifier|public
class|class
name|NamenodeWebHdfsMethods
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|NamenodeWebHdfsMethods
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|ROOT
specifier|private
specifier|static
specifier|final
name|UriFsPathParam
name|ROOT
init|=
operator|new
name|UriFsPathParam
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|REMOTE_ADDRESS
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|String
argument_list|>
name|REMOTE_ADDRESS
init|=
operator|new
name|ThreadLocal
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|/** @return the remote client address. */
DECL|method|getRemoteAddress ()
specifier|public
specifier|static
name|String
name|getRemoteAddress
parameter_list|()
block|{
return|return
name|REMOTE_ADDRESS
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|getRemoteIp ()
specifier|public
specifier|static
name|InetAddress
name|getRemoteIp
parameter_list|()
block|{
try|try
block|{
return|return
name|InetAddress
operator|.
name|getByName
argument_list|(
name|getRemoteAddress
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
comment|/**    * Returns true if a WebHdfs request is in progress.  Akin to    * {@link Server#isRpcInvocation()}.    */
DECL|method|isWebHdfsInvocation ()
specifier|public
specifier|static
name|boolean
name|isWebHdfsInvocation
parameter_list|()
block|{
return|return
name|getRemoteAddress
argument_list|()
operator|!=
literal|null
return|;
block|}
DECL|field|context
specifier|private
annotation|@
name|Context
name|ServletContext
name|context
decl_stmt|;
DECL|field|request
specifier|private
annotation|@
name|Context
name|HttpServletRequest
name|request
decl_stmt|;
DECL|field|response
specifier|private
annotation|@
name|Context
name|HttpServletResponse
name|response
decl_stmt|;
DECL|method|init (final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final UriFsPathParam path, final HttpOpParam<?> op, final Param<?, ?>... parameters)
specifier|private
name|void
name|init
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|UriFsPathParam
name|path
parameter_list|,
specifier|final
name|HttpOpParam
argument_list|<
name|?
argument_list|>
name|op
parameter_list|,
specifier|final
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
modifier|...
name|parameters
parameter_list|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isTraceEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"HTTP "
operator|+
name|op
operator|.
name|getValue
argument_list|()
operator|.
name|getType
argument_list|()
operator|+
literal|": "
operator|+
name|op
operator|+
literal|", "
operator|+
name|path
operator|+
literal|", ugi="
operator|+
name|ugi
operator|+
literal|", "
operator|+
name|username
operator|+
literal|", "
operator|+
name|doAsUser
operator|+
name|Param
operator|.
name|toSortedString
argument_list|(
literal|", "
argument_list|,
name|parameters
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//clear content type
name|response
operator|.
name|setContentType
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|chooseDatanode (final NameNode namenode, final String path, final HttpOpParam.Op op, final long openOffset, final long blocksize, Configuration conf)
specifier|static
name|DatanodeInfo
name|chooseDatanode
parameter_list|(
specifier|final
name|NameNode
name|namenode
parameter_list|,
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|,
specifier|final
name|long
name|openOffset
parameter_list|,
specifier|final
name|long
name|blocksize
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|BlockManager
name|bm
init|=
name|namenode
operator|.
name|getNamesystem
argument_list|()
operator|.
name|getBlockManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|op
operator|==
name|PutOpParam
operator|.
name|Op
operator|.
name|CREATE
condition|)
block|{
comment|//choose a datanode near to client
specifier|final
name|DatanodeDescriptor
name|clientNode
init|=
name|bm
operator|.
name|getDatanodeManager
argument_list|(           )
operator|.
name|getDatanodeByHost
argument_list|(
name|getRemoteAddress
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|clientNode
operator|!=
literal|null
condition|)
block|{
specifier|final
name|DatanodeDescriptor
index|[]
name|datanodes
init|=
name|bm
operator|.
name|getBlockPlacementPolicy
argument_list|()
operator|.
name|chooseTarget
argument_list|(
name|path
argument_list|,
literal|1
argument_list|,
name|clientNode
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|DatanodeDescriptor
argument_list|>
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|blocksize
argument_list|)
decl_stmt|;
if|if
condition|(
name|datanodes
operator|.
name|length
operator|>
literal|0
condition|)
block|{
return|return
name|datanodes
index|[
literal|0
index|]
return|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|op
operator|==
name|GetOpParam
operator|.
name|Op
operator|.
name|OPEN
operator|||
name|op
operator|==
name|GetOpParam
operator|.
name|Op
operator|.
name|GETFILECHECKSUM
operator|||
name|op
operator|==
name|PostOpParam
operator|.
name|Op
operator|.
name|APPEND
condition|)
block|{
comment|//choose a datanode containing a replica
specifier|final
name|NamenodeProtocols
name|np
init|=
name|namenode
operator|.
name|getRpcServer
argument_list|()
decl_stmt|;
specifier|final
name|HdfsFileStatus
name|status
init|=
name|np
operator|.
name|getFileInfo
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|status
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
literal|"File "
operator|+
name|path
operator|+
literal|" not found."
argument_list|)
throw|;
block|}
specifier|final
name|long
name|len
init|=
name|status
operator|.
name|getLen
argument_list|()
decl_stmt|;
if|if
condition|(
name|op
operator|==
name|GetOpParam
operator|.
name|Op
operator|.
name|OPEN
condition|)
block|{
if|if
condition|(
name|openOffset
operator|<
literal|0L
operator|||
operator|(
name|openOffset
operator|>=
name|len
operator|&&
name|len
operator|>
literal|0
operator|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Offset="
operator|+
name|openOffset
operator|+
literal|" out of the range [0, "
operator|+
name|len
operator|+
literal|"); "
operator|+
name|op
operator|+
literal|", path="
operator|+
name|path
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|len
operator|>
literal|0
condition|)
block|{
specifier|final
name|long
name|offset
init|=
name|op
operator|==
name|GetOpParam
operator|.
name|Op
operator|.
name|OPEN
condition|?
name|openOffset
else|:
name|len
operator|-
literal|1
decl_stmt|;
specifier|final
name|LocatedBlocks
name|locations
init|=
name|np
operator|.
name|getBlockLocations
argument_list|(
name|path
argument_list|,
name|offset
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|int
name|count
init|=
name|locations
operator|.
name|locatedBlockCount
argument_list|()
decl_stmt|;
if|if
condition|(
name|count
operator|>
literal|0
condition|)
block|{
return|return
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|locations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLocations
argument_list|()
argument_list|,
literal|false
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
block|}
return|return
operator|(
name|DatanodeDescriptor
operator|)
name|bm
operator|.
name|getDatanodeManager
argument_list|()
operator|.
name|getNetworkTopology
argument_list|(         )
operator|.
name|chooseRandom
argument_list|(
name|NodeBase
operator|.
name|ROOT
argument_list|)
return|;
block|}
DECL|method|generateDelegationToken ( final NameNode namenode, final UserGroupInformation ugi, final String renewer)
specifier|private
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|generateDelegationToken
parameter_list|(
specifier|final
name|NameNode
name|namenode
parameter_list|,
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|String
name|renewer
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|Credentials
name|c
init|=
name|DelegationTokenSecretManager
operator|.
name|createCredentials
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|renewer
operator|!=
literal|null
condition|?
name|renewer
else|:
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|t
init|=
name|c
operator|.
name|getAllTokens
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|t
operator|.
name|setKind
argument_list|(
name|WebHdfsFileSystem
operator|.
name|TOKEN_KIND
argument_list|)
expr_stmt|;
name|SecurityUtil
operator|.
name|setTokenService
argument_list|(
name|t
argument_list|,
name|namenode
operator|.
name|getHttpAddress
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|t
return|;
block|}
DECL|method|redirectURI (final NameNode namenode, final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final String path, final HttpOpParam.Op op, final long openOffset, final long blocksize, final Param<?, ?>... parameters)
specifier|private
name|URI
name|redirectURI
parameter_list|(
specifier|final
name|NameNode
name|namenode
parameter_list|,
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|,
specifier|final
name|long
name|openOffset
parameter_list|,
specifier|final
name|long
name|blocksize
parameter_list|,
specifier|final
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
modifier|...
name|parameters
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|(
name|Configuration
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
name|JspHelper
operator|.
name|CURRENT_CONF
argument_list|)
decl_stmt|;
specifier|final
name|DatanodeInfo
name|dn
init|=
name|chooseDatanode
argument_list|(
name|namenode
argument_list|,
name|path
argument_list|,
name|op
argument_list|,
name|openOffset
argument_list|,
name|blocksize
argument_list|,
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|String
name|delegationQuery
decl_stmt|;
if|if
condition|(
operator|!
name|UserGroupInformation
operator|.
name|isSecurityEnabled
argument_list|()
condition|)
block|{
comment|//security disabled
name|delegationQuery
operator|=
name|Param
operator|.
name|toSortedString
argument_list|(
literal|"&"
argument_list|,
name|doAsUser
argument_list|,
name|username
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|delegation
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
comment|//client has provided a token
name|delegationQuery
operator|=
literal|"&"
operator|+
name|delegation
expr_stmt|;
block|}
else|else
block|{
comment|//generate a token
specifier|final
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|t
init|=
name|generateDelegationToken
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|request
operator|.
name|getUserPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|delegationQuery
operator|=
literal|"&"
operator|+
operator|new
name|DelegationParam
argument_list|(
name|t
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|query
init|=
name|op
operator|.
name|toQueryString
argument_list|()
operator|+
name|delegationQuery
operator|+
literal|"&"
operator|+
operator|new
name|NamenodeRpcAddressParam
argument_list|(
name|namenode
argument_list|)
operator|+
name|Param
operator|.
name|toSortedString
argument_list|(
literal|"&"
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
specifier|final
name|String
name|uripath
init|=
name|WebHdfsFileSystem
operator|.
name|PATH_PREFIX
operator|+
name|path
decl_stmt|;
specifier|final
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"http"
argument_list|,
literal|null
argument_list|,
name|dn
operator|.
name|getHostName
argument_list|()
argument_list|,
name|dn
operator|.
name|getInfoPort
argument_list|()
argument_list|,
name|uripath
argument_list|,
name|query
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isTraceEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"redirectURI="
operator|+
name|uri
argument_list|)
expr_stmt|;
block|}
return|return
name|uri
return|;
block|}
comment|/** Handle HTTP PUT request for the root. */
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"*/*"
block|}
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|putRoot ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @QueryParam(PutOpParam.NAME) @DefaultValue(PutOpParam.DEFAULT) final PutOpParam op, @QueryParam(DestinationParam.NAME) @DefaultValue(DestinationParam.DEFAULT) final DestinationParam destination, @QueryParam(OwnerParam.NAME) @DefaultValue(OwnerParam.DEFAULT) final OwnerParam owner, @QueryParam(GroupParam.NAME) @DefaultValue(GroupParam.DEFAULT) final GroupParam group, @QueryParam(PermissionParam.NAME) @DefaultValue(PermissionParam.DEFAULT) final PermissionParam permission, @QueryParam(OverwriteParam.NAME) @DefaultValue(OverwriteParam.DEFAULT) final OverwriteParam overwrite, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize, @QueryParam(ReplicationParam.NAME) @DefaultValue(ReplicationParam.DEFAULT) final ReplicationParam replication, @QueryParam(BlockSizeParam.NAME) @DefaultValue(BlockSizeParam.DEFAULT) final BlockSizeParam blockSize, @QueryParam(ModificationTimeParam.NAME) @DefaultValue(ModificationTimeParam.DEFAULT) final ModificationTimeParam modificationTime, @QueryParam(AccessTimeParam.NAME) @DefaultValue(AccessTimeParam.DEFAULT) final AccessTimeParam accessTime, @QueryParam(RenameOptionSetParam.NAME) @DefaultValue(RenameOptionSetParam.DEFAULT) final RenameOptionSetParam renameOptions, @QueryParam(CreateParentParam.NAME) @DefaultValue(CreateParentParam.DEFAULT) final CreateParentParam createParent, @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT) final TokenArgumentParam delegationTokenArgument )
specifier|public
name|Response
name|putRoot
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PutOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PutOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PutOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DestinationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DestinationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DestinationParam
name|destination
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OwnerParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OwnerParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OwnerParam
name|owner
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|GroupParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|GroupParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|GroupParam
name|group
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PermissionParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PermissionParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PermissionParam
name|permission
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OverwriteParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OverwriteParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OverwriteParam
name|overwrite
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|ReplicationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|ReplicationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|ReplicationParam
name|replication
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BlockSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BlockSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BlockSizeParam
name|blockSize
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|ModificationTimeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|ModificationTimeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|ModificationTimeParam
name|modificationTime
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|AccessTimeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|AccessTimeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|AccessTimeParam
name|accessTime
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RenameOptionSetParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RenameOptionSetParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RenameOptionSetParam
name|renameOptions
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|CreateParentParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|CreateParentParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|CreateParentParam
name|createParent
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|TokenArgumentParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|TokenArgumentParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|TokenArgumentParam
name|delegationTokenArgument
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|put
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|ROOT
argument_list|,
name|op
argument_list|,
name|destination
argument_list|,
name|owner
argument_list|,
name|group
argument_list|,
name|permission
argument_list|,
name|overwrite
argument_list|,
name|bufferSize
argument_list|,
name|replication
argument_list|,
name|blockSize
argument_list|,
name|modificationTime
argument_list|,
name|accessTime
argument_list|,
name|renameOptions
argument_list|,
name|createParent
argument_list|,
name|delegationTokenArgument
argument_list|)
return|;
block|}
comment|/** Handle HTTP PUT request. */
annotation|@
name|PUT
annotation|@
name|Path
argument_list|(
literal|"{"
operator|+
name|UriFsPathParam
operator|.
name|NAME
operator|+
literal|":.*}"
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"*/*"
block|}
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|put ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @PathParam(UriFsPathParam.NAME) final UriFsPathParam path, @QueryParam(PutOpParam.NAME) @DefaultValue(PutOpParam.DEFAULT) final PutOpParam op, @QueryParam(DestinationParam.NAME) @DefaultValue(DestinationParam.DEFAULT) final DestinationParam destination, @QueryParam(OwnerParam.NAME) @DefaultValue(OwnerParam.DEFAULT) final OwnerParam owner, @QueryParam(GroupParam.NAME) @DefaultValue(GroupParam.DEFAULT) final GroupParam group, @QueryParam(PermissionParam.NAME) @DefaultValue(PermissionParam.DEFAULT) final PermissionParam permission, @QueryParam(OverwriteParam.NAME) @DefaultValue(OverwriteParam.DEFAULT) final OverwriteParam overwrite, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize, @QueryParam(ReplicationParam.NAME) @DefaultValue(ReplicationParam.DEFAULT) final ReplicationParam replication, @QueryParam(BlockSizeParam.NAME) @DefaultValue(BlockSizeParam.DEFAULT) final BlockSizeParam blockSize, @QueryParam(ModificationTimeParam.NAME) @DefaultValue(ModificationTimeParam.DEFAULT) final ModificationTimeParam modificationTime, @QueryParam(AccessTimeParam.NAME) @DefaultValue(AccessTimeParam.DEFAULT) final AccessTimeParam accessTime, @QueryParam(RenameOptionSetParam.NAME) @DefaultValue(RenameOptionSetParam.DEFAULT) final RenameOptionSetParam renameOptions, @QueryParam(CreateParentParam.NAME) @DefaultValue(CreateParentParam.DEFAULT) final CreateParentParam createParent, @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT) final TokenArgumentParam delegationTokenArgument )
specifier|public
name|Response
name|put
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|PathParam
argument_list|(
name|UriFsPathParam
operator|.
name|NAME
argument_list|)
specifier|final
name|UriFsPathParam
name|path
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PutOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PutOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PutOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DestinationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DestinationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DestinationParam
name|destination
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OwnerParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OwnerParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OwnerParam
name|owner
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|GroupParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|GroupParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|GroupParam
name|group
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PermissionParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PermissionParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PermissionParam
name|permission
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OverwriteParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OverwriteParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OverwriteParam
name|overwrite
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|ReplicationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|ReplicationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|ReplicationParam
name|replication
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BlockSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BlockSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BlockSizeParam
name|blockSize
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|ModificationTimeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|ModificationTimeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|ModificationTimeParam
name|modificationTime
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|AccessTimeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|AccessTimeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|AccessTimeParam
name|accessTime
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RenameOptionSetParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RenameOptionSetParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RenameOptionSetParam
name|renameOptions
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|CreateParentParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|CreateParentParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|CreateParentParam
name|createParent
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|TokenArgumentParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|TokenArgumentParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|TokenArgumentParam
name|delegationTokenArgument
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|init
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
argument_list|,
name|op
argument_list|,
name|destination
argument_list|,
name|owner
argument_list|,
name|group
argument_list|,
name|permission
argument_list|,
name|overwrite
argument_list|,
name|bufferSize
argument_list|,
name|replication
argument_list|,
name|blockSize
argument_list|,
name|modificationTime
argument_list|,
name|accessTime
argument_list|,
name|renameOptions
argument_list|,
name|delegationTokenArgument
argument_list|)
expr_stmt|;
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Response
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Response
name|run
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|put
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|op
argument_list|,
name|destination
argument_list|,
name|owner
argument_list|,
name|group
argument_list|,
name|permission
argument_list|,
name|overwrite
argument_list|,
name|bufferSize
argument_list|,
name|replication
argument_list|,
name|blockSize
argument_list|,
name|modificationTime
argument_list|,
name|accessTime
argument_list|,
name|renameOptions
argument_list|,
name|createParent
argument_list|,
name|delegationTokenArgument
argument_list|)
return|;
block|}
finally|finally
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|put ( final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final String fullpath, final PutOpParam op, final DestinationParam destination, final OwnerParam owner, final GroupParam group, final PermissionParam permission, final OverwriteParam overwrite, final BufferSizeParam bufferSize, final ReplicationParam replication, final BlockSizeParam blockSize, final ModificationTimeParam modificationTime, final AccessTimeParam accessTime, final RenameOptionSetParam renameOptions, final CreateParentParam createParent, final TokenArgumentParam delegationTokenArgument )
specifier|private
name|Response
name|put
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|String
name|fullpath
parameter_list|,
specifier|final
name|PutOpParam
name|op
parameter_list|,
specifier|final
name|DestinationParam
name|destination
parameter_list|,
specifier|final
name|OwnerParam
name|owner
parameter_list|,
specifier|final
name|GroupParam
name|group
parameter_list|,
specifier|final
name|PermissionParam
name|permission
parameter_list|,
specifier|final
name|OverwriteParam
name|overwrite
parameter_list|,
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|,
specifier|final
name|ReplicationParam
name|replication
parameter_list|,
specifier|final
name|BlockSizeParam
name|blockSize
parameter_list|,
specifier|final
name|ModificationTimeParam
name|modificationTime
parameter_list|,
specifier|final
name|AccessTimeParam
name|accessTime
parameter_list|,
specifier|final
name|RenameOptionSetParam
name|renameOptions
parameter_list|,
specifier|final
name|CreateParentParam
name|createParent
parameter_list|,
specifier|final
name|TokenArgumentParam
name|delegationTokenArgument
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|(
name|Configuration
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
name|JspHelper
operator|.
name|CURRENT_CONF
argument_list|)
decl_stmt|;
specifier|final
name|NameNode
name|namenode
init|=
operator|(
name|NameNode
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"name.node"
argument_list|)
decl_stmt|;
specifier|final
name|NamenodeProtocols
name|np
init|=
name|namenode
operator|.
name|getRpcServer
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|op
operator|.
name|getValue
argument_list|()
condition|)
block|{
case|case
name|CREATE
case|:
block|{
specifier|final
name|URI
name|uri
init|=
name|redirectURI
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|fullpath
argument_list|,
name|op
operator|.
name|getValue
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|,
name|blockSize
operator|.
name|getValue
argument_list|(
name|conf
argument_list|)
argument_list|,
name|permission
argument_list|,
name|overwrite
argument_list|,
name|bufferSize
argument_list|,
name|replication
argument_list|,
name|blockSize
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|uri
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|MKDIRS
case|:
block|{
specifier|final
name|boolean
name|b
init|=
name|np
operator|.
name|mkdirs
argument_list|(
name|fullpath
argument_list|,
name|permission
operator|.
name|getFsPermission
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
literal|"boolean"
argument_list|,
name|b
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|CREATESYMLINK
case|:
block|{
name|np
operator|.
name|createSymlink
argument_list|(
name|destination
operator|.
name|getValue
argument_list|()
argument_list|,
name|fullpath
argument_list|,
name|PermissionParam
operator|.
name|getDefaultFsPermission
argument_list|()
argument_list|,
name|createParent
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|RENAME
case|:
block|{
specifier|final
name|EnumSet
argument_list|<
name|Options
operator|.
name|Rename
argument_list|>
name|s
init|=
name|renameOptions
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
specifier|final
name|boolean
name|b
init|=
name|np
operator|.
name|rename
argument_list|(
name|fullpath
argument_list|,
name|destination
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
literal|"boolean"
argument_list|,
name|b
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
name|np
operator|.
name|rename2
argument_list|(
name|fullpath
argument_list|,
name|destination
operator|.
name|getValue
argument_list|()
argument_list|,
name|s
operator|.
name|toArray
argument_list|(
operator|new
name|Options
operator|.
name|Rename
index|[
name|s
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
case|case
name|SETREPLICATION
case|:
block|{
specifier|final
name|boolean
name|b
init|=
name|np
operator|.
name|setReplication
argument_list|(
name|fullpath
argument_list|,
name|replication
operator|.
name|getValue
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
literal|"boolean"
argument_list|,
name|b
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|SETOWNER
case|:
block|{
if|if
condition|(
name|owner
operator|.
name|getValue
argument_list|()
operator|==
literal|null
operator|&&
name|group
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Both owner and group are empty."
argument_list|)
throw|;
block|}
name|np
operator|.
name|setOwner
argument_list|(
name|fullpath
argument_list|,
name|owner
operator|.
name|getValue
argument_list|()
argument_list|,
name|group
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|SETPERMISSION
case|:
block|{
name|np
operator|.
name|setPermission
argument_list|(
name|fullpath
argument_list|,
name|permission
operator|.
name|getFsPermission
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|SETTIMES
case|:
block|{
name|np
operator|.
name|setTimes
argument_list|(
name|fullpath
argument_list|,
name|modificationTime
operator|.
name|getValue
argument_list|()
argument_list|,
name|accessTime
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|RENEWDELEGATIONTOKEN
case|:
block|{
specifier|final
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
argument_list|()
decl_stmt|;
name|token
operator|.
name|decodeFromUrlString
argument_list|(
name|delegationTokenArgument
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|long
name|expiryTime
init|=
name|np
operator|.
name|renewDelegationToken
argument_list|(
name|token
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
literal|"long"
argument_list|,
name|expiryTime
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|CANCELDELEGATIONTOKEN
case|:
block|{
specifier|final
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
argument_list|()
decl_stmt|;
name|token
operator|.
name|decodeFromUrlString
argument_list|(
name|delegationTokenArgument
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|np
operator|.
name|cancelDelegationToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|op
operator|+
literal|" is not supported"
argument_list|)
throw|;
block|}
block|}
comment|/** Handle HTTP POST request for the root. */
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"*/*"
block|}
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|postRoot ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @QueryParam(PostOpParam.NAME) @DefaultValue(PostOpParam.DEFAULT) final PostOpParam op, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize )
specifier|public
name|Response
name|postRoot
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PostOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PostOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PostOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|post
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|ROOT
argument_list|,
name|op
argument_list|,
name|bufferSize
argument_list|)
return|;
block|}
comment|/** Handle HTTP POST request. */
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"{"
operator|+
name|UriFsPathParam
operator|.
name|NAME
operator|+
literal|":.*}"
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
literal|"*/*"
block|}
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|post ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @PathParam(UriFsPathParam.NAME) final UriFsPathParam path, @QueryParam(PostOpParam.NAME) @DefaultValue(PostOpParam.DEFAULT) final PostOpParam op, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize )
specifier|public
name|Response
name|post
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|PathParam
argument_list|(
name|UriFsPathParam
operator|.
name|NAME
argument_list|)
specifier|final
name|UriFsPathParam
name|path
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|PostOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|PostOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|PostOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|init
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
argument_list|,
name|op
argument_list|,
name|bufferSize
argument_list|)
expr_stmt|;
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Response
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Response
name|run
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|post
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|op
argument_list|,
name|bufferSize
argument_list|)
return|;
block|}
finally|finally
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|post ( final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final String fullpath, final PostOpParam op, final BufferSizeParam bufferSize )
specifier|private
name|Response
name|post
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|String
name|fullpath
parameter_list|,
specifier|final
name|PostOpParam
name|op
parameter_list|,
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|NameNode
name|namenode
init|=
operator|(
name|NameNode
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"name.node"
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|op
operator|.
name|getValue
argument_list|()
condition|)
block|{
case|case
name|APPEND
case|:
block|{
specifier|final
name|URI
name|uri
init|=
name|redirectURI
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|fullpath
argument_list|,
name|op
operator|.
name|getValue
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|,
name|bufferSize
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|uri
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|op
operator|+
literal|" is not supported"
argument_list|)
throw|;
block|}
block|}
comment|/** Handle HTTP GET request for the root. */
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|getRoot ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @QueryParam(GetOpParam.NAME) @DefaultValue(GetOpParam.DEFAULT) final GetOpParam op, @QueryParam(OffsetParam.NAME) @DefaultValue(OffsetParam.DEFAULT) final OffsetParam offset, @QueryParam(LengthParam.NAME) @DefaultValue(LengthParam.DEFAULT) final LengthParam length, @QueryParam(RenewerParam.NAME) @DefaultValue(RenewerParam.DEFAULT) final RenewerParam renewer, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize )
specifier|public
name|Response
name|getRoot
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|GetOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|GetOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|GetOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OffsetParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OffsetParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OffsetParam
name|offset
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|LengthParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|LengthParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|LengthParam
name|length
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RenewerParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RenewerParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RenewerParam
name|renewer
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|get
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|ROOT
argument_list|,
name|op
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|renewer
argument_list|,
name|bufferSize
argument_list|)
return|;
block|}
comment|/** Handle HTTP GET request. */
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"{"
operator|+
name|UriFsPathParam
operator|.
name|NAME
operator|+
literal|":.*}"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
block|,
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|get ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @PathParam(UriFsPathParam.NAME) final UriFsPathParam path, @QueryParam(GetOpParam.NAME) @DefaultValue(GetOpParam.DEFAULT) final GetOpParam op, @QueryParam(OffsetParam.NAME) @DefaultValue(OffsetParam.DEFAULT) final OffsetParam offset, @QueryParam(LengthParam.NAME) @DefaultValue(LengthParam.DEFAULT) final LengthParam length, @QueryParam(RenewerParam.NAME) @DefaultValue(RenewerParam.DEFAULT) final RenewerParam renewer, @QueryParam(BufferSizeParam.NAME) @DefaultValue(BufferSizeParam.DEFAULT) final BufferSizeParam bufferSize )
specifier|public
name|Response
name|get
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|PathParam
argument_list|(
name|UriFsPathParam
operator|.
name|NAME
argument_list|)
specifier|final
name|UriFsPathParam
name|path
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|GetOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|GetOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|GetOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|OffsetParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|OffsetParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|OffsetParam
name|offset
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|LengthParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|LengthParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|LengthParam
name|length
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RenewerParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RenewerParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RenewerParam
name|renewer
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|BufferSizeParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|BufferSizeParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|init
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
argument_list|,
name|op
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|renewer
argument_list|,
name|bufferSize
argument_list|)
expr_stmt|;
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Response
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Response
name|run
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|get
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|op
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|renewer
argument_list|,
name|bufferSize
argument_list|)
return|;
block|}
finally|finally
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|get ( final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final String fullpath, final GetOpParam op, final OffsetParam offset, final LengthParam length, final RenewerParam renewer, final BufferSizeParam bufferSize )
specifier|private
name|Response
name|get
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|String
name|fullpath
parameter_list|,
specifier|final
name|GetOpParam
name|op
parameter_list|,
specifier|final
name|OffsetParam
name|offset
parameter_list|,
specifier|final
name|LengthParam
name|length
parameter_list|,
specifier|final
name|RenewerParam
name|renewer
parameter_list|,
specifier|final
name|BufferSizeParam
name|bufferSize
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|NameNode
name|namenode
init|=
operator|(
name|NameNode
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"name.node"
argument_list|)
decl_stmt|;
specifier|final
name|NamenodeProtocols
name|np
init|=
name|namenode
operator|.
name|getRpcServer
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|op
operator|.
name|getValue
argument_list|()
condition|)
block|{
case|case
name|OPEN
case|:
block|{
specifier|final
name|URI
name|uri
init|=
name|redirectURI
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|fullpath
argument_list|,
name|op
operator|.
name|getValue
argument_list|()
argument_list|,
name|offset
operator|.
name|getValue
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|bufferSize
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|uri
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GET_BLOCK_LOCATIONS
case|:
block|{
specifier|final
name|long
name|offsetValue
init|=
name|offset
operator|.
name|getValue
argument_list|()
decl_stmt|;
specifier|final
name|Long
name|lengthValue
init|=
name|length
operator|.
name|getValue
argument_list|()
decl_stmt|;
specifier|final
name|LocatedBlocks
name|locatedblocks
init|=
name|np
operator|.
name|getBlockLocations
argument_list|(
name|fullpath
argument_list|,
name|offsetValue
argument_list|,
name|lengthValue
operator|!=
literal|null
condition|?
name|lengthValue
else|:
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|locatedblocks
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GETFILESTATUS
case|:
block|{
specifier|final
name|HdfsFileStatus
name|status
init|=
name|np
operator|.
name|getFileInfo
argument_list|(
name|fullpath
argument_list|)
decl_stmt|;
if|if
condition|(
name|status
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
literal|"File does not exist: "
operator|+
name|fullpath
argument_list|)
throw|;
block|}
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|status
argument_list|,
literal|true
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|LISTSTATUS
case|:
block|{
specifier|final
name|StreamingOutput
name|streaming
init|=
name|getListingStream
argument_list|(
name|np
argument_list|,
name|fullpath
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|streaming
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GETCONTENTSUMMARY
case|:
block|{
specifier|final
name|ContentSummary
name|contentsummary
init|=
name|np
operator|.
name|getContentSummary
argument_list|(
name|fullpath
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|contentsummary
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GETFILECHECKSUM
case|:
block|{
specifier|final
name|URI
name|uri
init|=
name|redirectURI
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|fullpath
argument_list|,
name|op
operator|.
name|getValue
argument_list|()
argument_list|,
operator|-
literal|1L
argument_list|,
operator|-
literal|1L
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|uri
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_OCTET_STREAM
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GETDELEGATIONTOKEN
case|:
block|{
if|if
condition|(
name|delegation
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|delegation
operator|.
name|getName
argument_list|()
operator|+
literal|" parameter is not null."
argument_list|)
throw|;
block|}
specifier|final
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|token
init|=
name|generateDelegationToken
argument_list|(
name|namenode
argument_list|,
name|ugi
argument_list|,
name|renewer
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|token
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
case|case
name|GETHOMEDIRECTORY
case|:
block|{
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|WebHdfsFileSystem
operator|.
name|getHomeDirectoryString
argument_list|(
name|ugi
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|op
operator|+
literal|" is not supported"
argument_list|)
throw|;
block|}
block|}
DECL|method|getDirectoryListing (final NamenodeProtocols np, final String p, byte[] startAfter)
specifier|private
specifier|static
name|DirectoryListing
name|getDirectoryListing
parameter_list|(
specifier|final
name|NamenodeProtocols
name|np
parameter_list|,
specifier|final
name|String
name|p
parameter_list|,
name|byte
index|[]
name|startAfter
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|DirectoryListing
name|listing
init|=
name|np
operator|.
name|getListing
argument_list|(
name|p
argument_list|,
name|startAfter
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|listing
operator|==
literal|null
condition|)
block|{
comment|// the directory does not exist
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
literal|"File "
operator|+
name|p
operator|+
literal|" does not exist."
argument_list|)
throw|;
block|}
return|return
name|listing
return|;
block|}
DECL|method|getListingStream (final NamenodeProtocols np, final String p)
specifier|private
specifier|static
name|StreamingOutput
name|getListingStream
parameter_list|(
specifier|final
name|NamenodeProtocols
name|np
parameter_list|,
specifier|final
name|String
name|p
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|DirectoryListing
name|first
init|=
name|getDirectoryListing
argument_list|(
name|np
argument_list|,
name|p
argument_list|,
name|HdfsFileStatus
operator|.
name|EMPTY_NAME
argument_list|)
decl_stmt|;
return|return
operator|new
name|StreamingOutput
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
specifier|final
name|OutputStream
name|outstream
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outstream
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"{\""
operator|+
name|FileStatus
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"es\":{\""
operator|+
name|FileStatus
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"\":["
argument_list|)
expr_stmt|;
specifier|final
name|HdfsFileStatus
index|[]
name|partial
init|=
name|first
operator|.
name|getPartialListing
argument_list|()
decl_stmt|;
if|if
condition|(
name|partial
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|partial
index|[
literal|0
index|]
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|partial
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|','
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|partial
index|[
name|i
index|]
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|DirectoryListing
name|curr
init|=
name|first
init|;
name|curr
operator|.
name|hasMore
argument_list|()
condition|;
control|)
block|{
name|curr
operator|=
name|getDirectoryListing
argument_list|(
name|np
argument_list|,
name|p
argument_list|,
name|curr
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|HdfsFileStatus
name|s
range|:
name|curr
operator|.
name|getPartialListing
argument_list|()
control|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|','
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
name|s
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"]}}"
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
comment|/** Handle HTTP DELETE request for the root. */
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|deleteRoot ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @QueryParam(DeleteOpParam.NAME) @DefaultValue(DeleteOpParam.DEFAULT) final DeleteOpParam op, @QueryParam(RecursiveParam.NAME) @DefaultValue(RecursiveParam.DEFAULT) final RecursiveParam recursive )
specifier|public
name|Response
name|deleteRoot
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DeleteOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DeleteOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DeleteOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RecursiveParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RecursiveParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RecursiveParam
name|recursive
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|delete
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|ROOT
argument_list|,
name|op
argument_list|,
name|recursive
argument_list|)
return|;
block|}
comment|/** Handle HTTP DELETE request. */
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
literal|"{"
operator|+
name|UriFsPathParam
operator|.
name|NAME
operator|+
literal|":.*}"
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|delete ( @ontext final UserGroupInformation ugi, @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT) final DelegationParam delegation, @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT) final UserParam username, @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) final DoAsParam doAsUser, @PathParam(UriFsPathParam.NAME) final UriFsPathParam path, @QueryParam(DeleteOpParam.NAME) @DefaultValue(DeleteOpParam.DEFAULT) final DeleteOpParam op, @QueryParam(RecursiveParam.NAME) @DefaultValue(RecursiveParam.DEFAULT) final RecursiveParam recursive )
specifier|public
name|Response
name|delete
parameter_list|(
annotation|@
name|Context
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DelegationParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DelegationParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|UserParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|UserParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|UserParam
name|username
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DoAsParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DoAsParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
annotation|@
name|PathParam
argument_list|(
name|UriFsPathParam
operator|.
name|NAME
argument_list|)
specifier|final
name|UriFsPathParam
name|path
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|DeleteOpParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|DeleteOpParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|DeleteOpParam
name|op
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|RecursiveParam
operator|.
name|NAME
argument_list|)
annotation|@
name|DefaultValue
argument_list|(
name|RecursiveParam
operator|.
name|DEFAULT
argument_list|)
specifier|final
name|RecursiveParam
name|recursive
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|init
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
argument_list|,
name|op
argument_list|,
name|recursive
argument_list|)
expr_stmt|;
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Response
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Response
name|run
parameter_list|()
throws|throws
name|IOException
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
name|request
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|delete
argument_list|(
name|ugi
argument_list|,
name|delegation
argument_list|,
name|username
argument_list|,
name|doAsUser
argument_list|,
name|path
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|op
argument_list|,
name|recursive
argument_list|)
return|;
block|}
finally|finally
block|{
name|REMOTE_ADDRESS
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|delete ( final UserGroupInformation ugi, final DelegationParam delegation, final UserParam username, final DoAsParam doAsUser, final String fullpath, final DeleteOpParam op, final RecursiveParam recursive )
specifier|private
name|Response
name|delete
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|DelegationParam
name|delegation
parameter_list|,
specifier|final
name|UserParam
name|username
parameter_list|,
specifier|final
name|DoAsParam
name|doAsUser
parameter_list|,
specifier|final
name|String
name|fullpath
parameter_list|,
specifier|final
name|DeleteOpParam
name|op
parameter_list|,
specifier|final
name|RecursiveParam
name|recursive
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|NameNode
name|namenode
init|=
operator|(
name|NameNode
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"name.node"
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|op
operator|.
name|getValue
argument_list|()
condition|)
block|{
case|case
name|DELETE
case|:
block|{
specifier|final
name|boolean
name|b
init|=
name|namenode
operator|.
name|getRpcServer
argument_list|()
operator|.
name|delete
argument_list|(
name|fullpath
argument_list|,
name|recursive
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|js
init|=
name|JsonUtil
operator|.
name|toJsonString
argument_list|(
literal|"boolean"
argument_list|,
name|b
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|(
name|js
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|op
operator|+
literal|" is not supported"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

