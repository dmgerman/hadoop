begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.handlers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|spi
operator|.
name|container
operator|.
name|ContainerRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|spi
operator|.
name|container
operator|.
name|ContainerRequestFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|ext
operator|.
name|Provider
import|;
end_import

begin_comment
comment|/**  * This class is used to intercept root URL requests and route it to  * Volume List functionality.  */
end_comment

begin_class
annotation|@
name|Provider
DECL|class|ServiceFilter
specifier|public
class|class
name|ServiceFilter
implements|implements
name|ContainerRequestFilter
block|{
comment|/**    * Filter the request.    *<p>    * An implementation may modify the state of the request or    * create a new instance.    *    * @param request the request.    *    * @return the request.    */
annotation|@
name|Override
DECL|method|filter (ContainerRequest request)
specifier|public
name|ContainerRequest
name|filter
parameter_list|(
name|ContainerRequest
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|getRequestUri
argument_list|()
operator|.
name|getPath
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|1
condition|)
block|{
return|return
name|request
return|;
block|}
comment|// Just re-route it to volume handler with some hypothetical volume name.
comment|// volume name is ignored.
name|request
operator|.
name|setUris
argument_list|(
name|request
operator|.
name|getBaseUri
argument_list|()
argument_list|,
name|UriBuilder
operator|.
name|fromUri
argument_list|(
name|request
operator|.
name|getRequestUri
argument_list|()
argument_list|)
operator|.
name|path
argument_list|(
literal|"/service"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"info"
argument_list|,
name|Header
operator|.
name|OZONE_LIST_QUERY_SERVICE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
end_class

end_unit

