begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|QuotaUsage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|NSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|DirectoryWithQuotaFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|Quota
import|;
end_import

begin_comment
comment|/**  * The subclass of {@link QuotaUsage} used in Router-based federation.  */
end_comment

begin_class
DECL|class|RouterQuotaUsage
specifier|public
specifier|final
class|class
name|RouterQuotaUsage
extends|extends
name|QuotaUsage
block|{
DECL|method|RouterQuotaUsage (Builder builder)
specifier|private
name|RouterQuotaUsage
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
comment|/** Build the instance based on the builder. */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
extends|extends
name|QuotaUsage
operator|.
name|Builder
block|{
DECL|method|build ()
specifier|public
name|RouterQuotaUsage
name|build
parameter_list|()
block|{
return|return
operator|new
name|RouterQuotaUsage
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|fileAndDirectoryCount (long count)
specifier|public
name|Builder
name|fileAndDirectoryCount
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|super
operator|.
name|fileAndDirectoryCount
argument_list|(
name|count
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|quota (long quota)
specifier|public
name|Builder
name|quota
parameter_list|(
name|long
name|quota
parameter_list|)
block|{
name|super
operator|.
name|quota
argument_list|(
name|quota
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|spaceConsumed (long spaceConsumed)
specifier|public
name|Builder
name|spaceConsumed
parameter_list|(
name|long
name|spaceConsumed
parameter_list|)
block|{
name|super
operator|.
name|spaceConsumed
argument_list|(
name|spaceConsumed
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|spaceQuota (long spaceQuota)
specifier|public
name|Builder
name|spaceQuota
parameter_list|(
name|long
name|spaceQuota
parameter_list|)
block|{
name|super
operator|.
name|spaceQuota
argument_list|(
name|spaceQuota
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
comment|/**    * Verify if namespace quota is violated once quota is set. Relevant    * method {@link DirectoryWithQuotaFeature#verifyNamespaceQuota}.    * @throws NSQuotaExceededException    */
DECL|method|verifyNamespaceQuota ()
specifier|public
name|void
name|verifyNamespaceQuota
parameter_list|()
throws|throws
name|NSQuotaExceededException
block|{
if|if
condition|(
name|Quota
operator|.
name|isViolated
argument_list|(
name|getQuota
argument_list|()
argument_list|,
name|getFileAndDirectoryCount
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|NSQuotaExceededException
argument_list|(
name|getQuota
argument_list|()
argument_list|,
name|getFileAndDirectoryCount
argument_list|()
argument_list|)
throw|;
block|}
block|}
comment|/**    * Verify if storage space quota is violated once quota is set. Relevant    * method {@link DirectoryWithQuotaFeature#verifyStoragespaceQuota}.    * @throws DSQuotaExceededException    */
DECL|method|verifyStoragespaceQuota ()
specifier|public
name|void
name|verifyStoragespaceQuota
parameter_list|()
throws|throws
name|DSQuotaExceededException
block|{
if|if
condition|(
name|Quota
operator|.
name|isViolated
argument_list|(
name|getSpaceQuota
argument_list|()
argument_list|,
name|getSpaceConsumed
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|DSQuotaExceededException
argument_list|(
name|getSpaceQuota
argument_list|()
argument_list|,
name|getSpaceConsumed
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

