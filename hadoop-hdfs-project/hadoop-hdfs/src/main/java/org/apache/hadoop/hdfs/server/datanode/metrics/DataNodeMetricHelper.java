begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|metrics
operator|.
name|FSDatasetMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|DataNodeMetricHelper
specifier|public
class|class
name|DataNodeMetricHelper
block|{
comment|/**    * Get metrics helper provides Helper function for    * metrics2 interface to act as a Metric source    *    * @param collector Metrics Collector that is passed in    * @param beanClass The Class that currently impliments the metric functions    * @param context A string that idenitifies the context    *    * @throws IOException    */
DECL|method|getMetrics (MetricsCollector collector, FSDatasetMBean beanClass, String context)
specifier|public
specifier|static
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|collector
parameter_list|,
name|FSDatasetMBean
name|beanClass
parameter_list|,
name|String
name|context
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|beanClass
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"beanClass cannot be null"
argument_list|)
throw|;
block|}
name|String
name|className
init|=
name|beanClass
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|collector
operator|.
name|addRecord
argument_list|(
name|className
argument_list|)
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"Capacity"
argument_list|,
literal|"Total storage capacity"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getCapacity
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DfsUsed"
argument_list|,
literal|"Total bytes used by dfs datanode"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getDfsUsed
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"Remaining"
argument_list|,
literal|"Total bytes of free storage"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getRemaining
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"StorageInfo"
argument_list|,
literal|"Storage ID"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getStorageInfo
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"NumFailedVolumes"
argument_list|,
literal|"Number of failed Volumes"
operator|+
literal|" in the data Node"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getNumFailedVolumes
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"LastVolumeFailureDate"
argument_list|,
literal|"Last Volume failure in"
operator|+
literal|" milliseconds from epoch"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getLastVolumeFailureDate
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"EstimatedCapacityLostTotal"
argument_list|,
literal|"Total capacity lost"
operator|+
literal|" due to volume failure"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getEstimatedCapacityLostTotal
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"CacheUsed"
argument_list|,
literal|"Datanode cache used in bytes"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getCacheUsed
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"CacheCapacity"
argument_list|,
literal|"Datanode cache capacity"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getCacheCapacity
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"NumBlocksCached"
argument_list|,
literal|"Datanode number"
operator|+
literal|" of blocks cached"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getNumBlocksCached
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"NumBlocksFailedToCache"
argument_list|,
literal|"Datanode number of "
operator|+
literal|"blocks failed to cache"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getNumBlocksFailedToCache
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"NumBlocksFailedToUnCache"
argument_list|,
literal|"Datanode number of"
operator|+
literal|" blocks failed in cache eviction"
argument_list|)
argument_list|,
name|beanClass
operator|.
name|getNumBlocksFailedToUncache
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

