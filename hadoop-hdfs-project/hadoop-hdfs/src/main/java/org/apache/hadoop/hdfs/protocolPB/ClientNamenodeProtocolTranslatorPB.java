begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|CryptoProtocolVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|BatchedRemoteIterator
operator|.
name|BatchedEntries
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CacheFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ContentSummary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CreateFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileAlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsServerDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Options
operator|.
name|Rename
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ParentNotDirectoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|StorageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|UnresolvedLinkException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|XAttr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|XAttrSetFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|inotify
operator|.
name|EventBatchList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AlreadyBeingCreatedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|BlockStoragePolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CacheDirectiveEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CacheDirectiveInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CachePoolEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CachePoolInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CorruptFileBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DirectoryListing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ECInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|EncryptionZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|DatanodeReportType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|RollingUpgradeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|SafeModeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LastBlockWithStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|NSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|RollingUpgradeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|SnapshotDiffReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|SnapshottableDirectoryStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|GetAclStatusRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|ModifyAclEntriesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|RemoveAclEntriesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|RemoveAclRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|RemoveDefaultAclRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|AclProtos
operator|.
name|SetAclRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AbandonBlockRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddBlockRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddCacheDirectiveRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AllowSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AppendRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AppendResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CachePoolEntryProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CheckAccessRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CompleteRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ConcatRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSymlinkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DisallowSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FinalizeUpgradeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FsyncRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetAdditionalDatanodeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetBlockLocationsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetBlockLocationsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetContentSummaryRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetCurrentEditLogTxidRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDataEncryptionKeyRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDataEncryptionKeyResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDatanodeReportRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDatanodeStorageReportRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetEditsFromTxidRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileInfoResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileLinkInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileLinkInfoResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFsStatusRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetLinkTargetRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetLinkTargetResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetListingRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetListingResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetPreferredBlockSizeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetServerDefaultsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshotDiffReportRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshotDiffReportResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshottableDirListingRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshottableDirListingResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetStoragePoliciesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetStoragePoliciesResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|IsFileClosedRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCacheDirectivesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCacheDirectivesResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCachePoolsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCachePoolsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCorruptFileBlocksRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MetaSaveRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MkdirsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ModifyCacheDirectiveRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ModifyCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RecoverLeaseRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RefreshNodesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemoveCacheDirectiveRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemoveCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|Rename2RequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenewLeaseRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ReportBadBlocksRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RestoreFailedStorageRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollEditsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollEditsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollingUpgradeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollingUpgradeResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SaveNamespaceRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetBalancerBandwidthRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetOwnerRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetPermissionRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetQuotaRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetReplicationRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetSafeModeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetTimesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|TruncateRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdateBlockForPipelineRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdatePipelineRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetStoragePolicyRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|EncryptionZonesProtos
operator|.
name|CreateEncryptionZoneRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|EncryptionZonesProtos
operator|.
name|GetEZForPathRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|EncryptionZonesProtos
operator|.
name|ListEncryptionZonesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|GetECSchemasRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|GetECSchemasResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|GetErasureCodingInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|GetErasureCodingInfoResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|CreateErasureCodingZoneRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ErasureCodingProtos
operator|.
name|ECSchemaProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|XAttrProtos
operator|.
name|GetXAttrsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|XAttrProtos
operator|.
name|ListXAttrsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|XAttrProtos
operator|.
name|RemoveXAttrRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|XAttrProtos
operator|.
name|SetXAttrRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|block
operator|.
name|DataEncryptionKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NotReplicatedYetException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|SafeModeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
operator|.
name|DatanodeStorageReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|EnumSetWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|ECSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtobufHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtocolMetaInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtocolTranslator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RpcClientUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|CancelDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|RenewDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|BatchedRemoteIterator
operator|.
name|BatchedListEntries
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|EncryptionZonesProtos
operator|.
name|EncryptionZoneProto
import|;
end_import

begin_comment
comment|/**  * This class forwards NN's ClientProtocol calls as RPC calls to the NN server  * while translating from the parameter types used in ClientProtocol to the  * new PB types.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|ClientNamenodeProtocolTranslatorPB
specifier|public
class|class
name|ClientNamenodeProtocolTranslatorPB
implements|implements
name|ProtocolMetaInterface
implements|,
name|ClientProtocol
implements|,
name|Closeable
implements|,
name|ProtocolTranslator
block|{
DECL|field|rpcProxy
specifier|final
specifier|private
name|ClientNamenodeProtocolPB
name|rpcProxy
decl_stmt|;
DECL|field|VOID_GET_SERVER_DEFAULT_REQUEST
specifier|static
specifier|final
name|GetServerDefaultsRequestProto
name|VOID_GET_SERVER_DEFAULT_REQUEST
init|=
name|GetServerDefaultsRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_GET_FSSTATUS_REQUEST
specifier|private
specifier|final
specifier|static
name|GetFsStatusRequestProto
name|VOID_GET_FSSTATUS_REQUEST
init|=
name|GetFsStatusRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SAVE_NAMESPACE_REQUEST
specifier|private
specifier|final
specifier|static
name|SaveNamespaceRequestProto
name|VOID_SAVE_NAMESPACE_REQUEST
init|=
name|SaveNamespaceRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_ROLLEDITS_REQUEST
specifier|private
specifier|final
specifier|static
name|RollEditsRequestProto
name|VOID_ROLLEDITS_REQUEST
init|=
name|RollEditsRequestProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|VOID_REFRESH_NODES_REQUEST
specifier|private
specifier|final
specifier|static
name|RefreshNodesRequestProto
name|VOID_REFRESH_NODES_REQUEST
init|=
name|RefreshNodesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|FinalizeUpgradeRequestProto
DECL|field|VOID_FINALIZE_UPGRADE_REQUEST
name|VOID_FINALIZE_UPGRADE_REQUEST
init|=
name|FinalizeUpgradeRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|GetDataEncryptionKeyRequestProto
DECL|field|VOID_GET_DATA_ENCRYPTIONKEY_REQUEST
name|VOID_GET_DATA_ENCRYPTIONKEY_REQUEST
init|=
name|GetDataEncryptionKeyRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|GetStoragePoliciesRequestProto
DECL|field|VOID_GET_STORAGE_POLICIES_REQUEST
name|VOID_GET_STORAGE_POLICIES_REQUEST
init|=
name|GetStoragePoliciesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|GetECSchemasRequestProto
DECL|field|VOID_GET_ECSCHEMAS_REQUEST
name|VOID_GET_ECSCHEMAS_REQUEST
init|=
name|GetECSchemasRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|method|ClientNamenodeProtocolTranslatorPB (ClientNamenodeProtocolPB proxy)
specifier|public
name|ClientNamenodeProtocolTranslatorPB
parameter_list|(
name|ClientNamenodeProtocolPB
name|proxy
parameter_list|)
block|{
name|rpcProxy
operator|=
name|proxy
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|RPC
operator|.
name|stopProxy
argument_list|(
name|rpcProxy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBlockLocations (String src, long offset, long length)
specifier|public
name|LocatedBlocks
name|getBlockLocations
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|offset
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetBlockLocationsRequestProto
name|req
init|=
name|GetBlockLocationsRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|setLength
argument_list|(
name|length
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetBlockLocationsResponseProto
name|resp
init|=
name|rpcProxy
operator|.
name|getBlockLocations
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|resp
operator|.
name|hasLocations
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|resp
operator|.
name|getLocations
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getServerDefaults ()
specifier|public
name|FsServerDefaults
name|getServerDefaults
parameter_list|()
throws|throws
name|IOException
block|{
name|GetServerDefaultsRequestProto
name|req
init|=
name|VOID_GET_SERVER_DEFAULT_REQUEST
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getServerDefaults
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getServerDefaults
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|create (String src, FsPermission masked, String clientName, EnumSetWritable<CreateFlag> flag, boolean createParent, short replication, long blockSize, CryptoProtocolVersion[] supportedVersions)
specifier|public
name|HdfsFileStatus
name|create
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermission
name|masked
parameter_list|,
name|String
name|clientName
parameter_list|,
name|EnumSetWritable
argument_list|<
name|CreateFlag
argument_list|>
name|flag
parameter_list|,
name|boolean
name|createParent
parameter_list|,
name|short
name|replication
parameter_list|,
name|long
name|blockSize
parameter_list|,
name|CryptoProtocolVersion
index|[]
name|supportedVersions
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|AlreadyBeingCreatedException
throws|,
name|DSQuotaExceededException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|CreateRequestProto
operator|.
name|Builder
name|builder
init|=
name|CreateRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setMasked
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|masked
argument_list|)
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|setCreateFlag
argument_list|(
name|PBHelper
operator|.
name|convertCreateFlag
argument_list|(
name|flag
argument_list|)
argument_list|)
operator|.
name|setCreateParent
argument_list|(
name|createParent
argument_list|)
operator|.
name|setReplication
argument_list|(
name|replication
argument_list|)
operator|.
name|setBlockSize
argument_list|(
name|blockSize
argument_list|)
decl_stmt|;
name|builder
operator|.
name|addAllCryptoProtocolVersion
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|supportedVersions
argument_list|)
argument_list|)
expr_stmt|;
name|CreateRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|CreateResponseProto
name|res
init|=
name|rpcProxy
operator|.
name|create
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|res
operator|.
name|hasFs
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|res
operator|.
name|getFs
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|truncate (String src, long newLength, String clientName)
specifier|public
name|boolean
name|truncate
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|newLength
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnresolvedLinkException
block|{
name|TruncateRequestProto
name|req
init|=
name|TruncateRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setNewLength
argument_list|(
name|newLength
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|truncate
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|append (String src, String clientName, EnumSetWritable<CreateFlag> flag)
specifier|public
name|LastBlockWithStatus
name|append
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|,
name|EnumSetWritable
argument_list|<
name|CreateFlag
argument_list|>
name|flag
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|AppendRequestProto
name|req
init|=
name|AppendRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|setFlag
argument_list|(
name|PBHelper
operator|.
name|convertCreateFlag
argument_list|(
name|flag
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|AppendResponseProto
name|res
init|=
name|rpcProxy
operator|.
name|append
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
name|LocatedBlock
name|lastBlock
init|=
name|res
operator|.
name|hasBlock
argument_list|()
condition|?
name|PBHelper
operator|.
name|convertLocatedBlockProto
argument_list|(
name|res
operator|.
name|getBlock
argument_list|()
argument_list|)
else|:
literal|null
decl_stmt|;
name|HdfsFileStatus
name|stat
init|=
operator|(
name|res
operator|.
name|hasStat
argument_list|()
operator|)
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|res
operator|.
name|getStat
argument_list|()
argument_list|)
else|:
literal|null
decl_stmt|;
return|return
operator|new
name|LastBlockWithStatus
argument_list|(
name|lastBlock
argument_list|,
name|stat
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setReplication (String src, short replication)
specifier|public
name|boolean
name|setReplication
parameter_list|(
name|String
name|src
parameter_list|,
name|short
name|replication
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|SetReplicationRequestProto
name|req
init|=
name|SetReplicationRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setReplication
argument_list|(
name|replication
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|setReplication
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setPermission (String src, FsPermission permission)
specifier|public
name|void
name|setPermission
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermission
name|permission
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|SetPermissionRequestProto
name|req
init|=
name|SetPermissionRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setPermission
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|permission
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setPermission
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setOwner (String src, String username, String groupname)
specifier|public
name|void
name|setOwner
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|groupname
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|SetOwnerRequestProto
operator|.
name|Builder
name|req
init|=
name|SetOwnerRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
decl_stmt|;
if|if
condition|(
name|username
operator|!=
literal|null
condition|)
name|req
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
if|if
condition|(
name|groupname
operator|!=
literal|null
condition|)
name|req
operator|.
name|setGroupname
argument_list|(
name|groupname
argument_list|)
expr_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setOwner
argument_list|(
literal|null
argument_list|,
name|req
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|abandonBlock (ExtendedBlock b, long fileId, String src, String holder)
specifier|public
name|void
name|abandonBlock
parameter_list|(
name|ExtendedBlock
name|b
parameter_list|,
name|long
name|fileId
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|holder
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|AbandonBlockRequestProto
name|req
init|=
name|AbandonBlockRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setB
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|b
argument_list|)
argument_list|)
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setHolder
argument_list|(
name|holder
argument_list|)
operator|.
name|setFileId
argument_list|(
name|fileId
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|abandonBlock
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addBlock (String src, String clientName, ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId, String[] favoredNodes)
specifier|public
name|LocatedBlock
name|addBlock
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|,
name|ExtendedBlock
name|previous
parameter_list|,
name|DatanodeInfo
index|[]
name|excludeNodes
parameter_list|,
name|long
name|fileId
parameter_list|,
name|String
index|[]
name|favoredNodes
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|NotReplicatedYetException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|AddBlockRequestProto
operator|.
name|Builder
name|req
init|=
name|AddBlockRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|setFileId
argument_list|(
name|fileId
argument_list|)
decl_stmt|;
if|if
condition|(
name|previous
operator|!=
literal|null
condition|)
name|req
operator|.
name|setPrevious
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|previous
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|excludeNodes
operator|!=
literal|null
condition|)
name|req
operator|.
name|addAllExcludeNodes
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|excludeNodes
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|favoredNodes
operator|!=
literal|null
condition|)
block|{
name|req
operator|.
name|addAllFavoredNodes
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|favoredNodes
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
return|return
name|PBHelper
operator|.
name|convertLocatedBlockProto
argument_list|(
name|rpcProxy
operator|.
name|addBlock
argument_list|(
literal|null
argument_list|,
name|req
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|getBlock
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getAdditionalDatanode (String src, long fileId, ExtendedBlock blk, DatanodeInfo[] existings, String[] existingStorageIDs, DatanodeInfo[] excludes, int numAdditionalNodes, String clientName)
specifier|public
name|LocatedBlock
name|getAdditionalDatanode
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|fileId
parameter_list|,
name|ExtendedBlock
name|blk
parameter_list|,
name|DatanodeInfo
index|[]
name|existings
parameter_list|,
name|String
index|[]
name|existingStorageIDs
parameter_list|,
name|DatanodeInfo
index|[]
name|excludes
parameter_list|,
name|int
name|numAdditionalNodes
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetAdditionalDatanodeRequestProto
name|req
init|=
name|GetAdditionalDatanodeRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setFileId
argument_list|(
name|fileId
argument_list|)
operator|.
name|setBlk
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|blk
argument_list|)
argument_list|)
operator|.
name|addAllExistings
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|existings
argument_list|)
argument_list|)
operator|.
name|addAllExistingStorageUuids
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|existingStorageIDs
argument_list|)
argument_list|)
operator|.
name|addAllExcludes
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|excludes
argument_list|)
argument_list|)
operator|.
name|setNumAdditionalNodes
argument_list|(
name|numAdditionalNodes
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convertLocatedBlockProto
argument_list|(
name|rpcProxy
operator|.
name|getAdditionalDatanode
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getBlock
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|complete (String src, String clientName, ExtendedBlock last, long fileId)
specifier|public
name|boolean
name|complete
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|,
name|ExtendedBlock
name|last
parameter_list|,
name|long
name|fileId
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|CompleteRequestProto
operator|.
name|Builder
name|req
init|=
name|CompleteRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|setFileId
argument_list|(
name|fileId
argument_list|)
decl_stmt|;
if|if
condition|(
name|last
operator|!=
literal|null
condition|)
name|req
operator|.
name|setLast
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|last
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|complete
argument_list|(
literal|null
argument_list|,
name|req
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|reportBadBlocks (LocatedBlock[] blocks)
specifier|public
name|void
name|reportBadBlocks
parameter_list|(
name|LocatedBlock
index|[]
name|blocks
parameter_list|)
throws|throws
name|IOException
block|{
name|ReportBadBlocksRequestProto
name|req
init|=
name|ReportBadBlocksRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|addAllBlocks
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|PBHelper
operator|.
name|convertLocatedBlocks
argument_list|(
name|blocks
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|reportBadBlocks
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rename (String src, String dst)
specifier|public
name|boolean
name|rename
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|)
throws|throws
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|RenameRequestProto
name|req
init|=
name|RenameRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setDst
argument_list|(
name|dst
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|rename
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rename2 (String src, String dst, Rename... options)
specifier|public
name|void
name|rename2
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|,
name|Rename
modifier|...
name|options
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|boolean
name|overwrite
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|options
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Rename
name|option
range|:
name|options
control|)
block|{
if|if
condition|(
name|option
operator|==
name|Rename
operator|.
name|OVERWRITE
condition|)
block|{
name|overwrite
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
name|Rename2RequestProto
name|req
init|=
name|Rename2RequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setDst
argument_list|(
name|dst
argument_list|)
operator|.
name|setOverwriteDest
argument_list|(
name|overwrite
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|rename2
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|concat (String trg, String[] srcs)
specifier|public
name|void
name|concat
parameter_list|(
name|String
name|trg
parameter_list|,
name|String
index|[]
name|srcs
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnresolvedLinkException
block|{
name|ConcatRequestProto
name|req
init|=
name|ConcatRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTrg
argument_list|(
name|trg
argument_list|)
operator|.
name|addAllSrcs
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|srcs
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|concat
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|delete (String src, boolean recursive)
specifier|public
name|boolean
name|delete
parameter_list|(
name|String
name|src
parameter_list|,
name|boolean
name|recursive
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|DeleteRequestProto
name|req
init|=
name|DeleteRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setRecursive
argument_list|(
name|recursive
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|delete
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|mkdirs (String src, FsPermission masked, boolean createParent)
specifier|public
name|boolean
name|mkdirs
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermission
name|masked
parameter_list|,
name|boolean
name|createParent
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|MkdirsRequestProto
name|req
init|=
name|MkdirsRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setMasked
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|masked
argument_list|)
argument_list|)
operator|.
name|setCreateParent
argument_list|(
name|createParent
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|mkdirs
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getListing (String src, byte[] startAfter, boolean needLocation)
specifier|public
name|DirectoryListing
name|getListing
parameter_list|(
name|String
name|src
parameter_list|,
name|byte
index|[]
name|startAfter
parameter_list|,
name|boolean
name|needLocation
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetListingRequestProto
name|req
init|=
name|GetListingRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setStartAfter
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|startAfter
argument_list|)
argument_list|)
operator|.
name|setNeedLocation
argument_list|(
name|needLocation
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetListingResponseProto
name|result
init|=
name|rpcProxy
operator|.
name|getListing
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|.
name|hasDirList
argument_list|()
condition|)
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
operator|.
name|getDirList
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renewLease (String clientName)
specifier|public
name|void
name|renewLease
parameter_list|(
name|String
name|clientName
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
name|RenewLeaseRequestProto
name|req
init|=
name|RenewLeaseRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|renewLease
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|recoverLease (String src, String clientName)
specifier|public
name|boolean
name|recoverLease
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|IOException
block|{
name|RecoverLeaseRequestProto
name|req
init|=
name|RecoverLeaseRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|recoverLease
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getStats ()
specifier|public
name|long
index|[]
name|getStats
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getFsStats
argument_list|(
literal|null
argument_list|,
name|VOID_GET_FSSTATUS_REQUEST
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDatanodeReport (DatanodeReportType type)
specifier|public
name|DatanodeInfo
index|[]
name|getDatanodeReport
parameter_list|(
name|DatanodeReportType
name|type
parameter_list|)
throws|throws
name|IOException
block|{
name|GetDatanodeReportRequestProto
name|req
init|=
name|GetDatanodeReportRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setType
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|type
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getDatanodeReport
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getDiList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDatanodeStorageReport (DatanodeReportType type)
specifier|public
name|DatanodeStorageReport
index|[]
name|getDatanodeStorageReport
parameter_list|(
name|DatanodeReportType
name|type
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|GetDatanodeStorageReportRequestProto
name|req
init|=
name|GetDatanodeStorageReportRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setType
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|type
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convertDatanodeStorageReports
argument_list|(
name|rpcProxy
operator|.
name|getDatanodeStorageReport
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getDatanodeStorageReportsList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getPreferredBlockSize (String filename)
specifier|public
name|long
name|getPreferredBlockSize
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnresolvedLinkException
block|{
name|GetPreferredBlockSizeRequestProto
name|req
init|=
name|GetPreferredBlockSizeRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFilename
argument_list|(
name|filename
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|getPreferredBlockSize
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getBsize
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setSafeMode (SafeModeAction action, boolean isChecked)
specifier|public
name|boolean
name|setSafeMode
parameter_list|(
name|SafeModeAction
name|action
parameter_list|,
name|boolean
name|isChecked
parameter_list|)
throws|throws
name|IOException
block|{
name|SetSafeModeRequestProto
name|req
init|=
name|SetSafeModeRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAction
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|action
argument_list|)
argument_list|)
operator|.
name|setChecked
argument_list|(
name|isChecked
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|setSafeMode
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|saveNamespace (long timeWindow, long txGap)
specifier|public
name|boolean
name|saveNamespace
parameter_list|(
name|long
name|timeWindow
parameter_list|,
name|long
name|txGap
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|SaveNamespaceRequestProto
name|req
init|=
name|SaveNamespaceRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimeWindow
argument_list|(
name|timeWindow
argument_list|)
operator|.
name|setTxGap
argument_list|(
name|txGap
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|rpcProxy
operator|.
name|saveNamespace
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getSaved
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rollEdits ()
specifier|public
name|long
name|rollEdits
parameter_list|()
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
try|try
block|{
name|RollEditsResponseProto
name|resp
init|=
name|rpcProxy
operator|.
name|rollEdits
argument_list|(
literal|null
argument_list|,
name|VOID_ROLLEDITS_REQUEST
argument_list|)
decl_stmt|;
return|return
name|resp
operator|.
name|getNewSegmentTxId
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|se
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|se
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|restoreFailedStorage (String arg)
specifier|public
name|boolean
name|restoreFailedStorage
parameter_list|(
name|String
name|arg
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
name|RestoreFailedStorageRequestProto
name|req
init|=
name|RestoreFailedStorageRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setArg
argument_list|(
name|arg
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|restoreFailedStorage
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|refreshNodes ()
specifier|public
name|void
name|refreshNodes
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|rpcProxy
operator|.
name|refreshNodes
argument_list|(
literal|null
argument_list|,
name|VOID_REFRESH_NODES_REQUEST
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|finalizeUpgrade ()
specifier|public
name|void
name|finalizeUpgrade
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|rpcProxy
operator|.
name|finalizeUpgrade
argument_list|(
literal|null
argument_list|,
name|VOID_FINALIZE_UPGRADE_REQUEST
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rollingUpgrade (RollingUpgradeAction action)
specifier|public
name|RollingUpgradeInfo
name|rollingUpgrade
parameter_list|(
name|RollingUpgradeAction
name|action
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|RollingUpgradeRequestProto
name|r
init|=
name|RollingUpgradeRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAction
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|action
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|RollingUpgradeResponseProto
name|proto
init|=
name|rpcProxy
operator|.
name|rollingUpgrade
argument_list|(
literal|null
argument_list|,
name|r
argument_list|)
decl_stmt|;
if|if
condition|(
name|proto
operator|.
name|hasRollingUpgradeInfo
argument_list|()
condition|)
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|proto
operator|.
name|getRollingUpgradeInfo
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listCorruptFileBlocks (String path, String cookie)
specifier|public
name|CorruptFileBlocks
name|listCorruptFileBlocks
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|cookie
parameter_list|)
throws|throws
name|IOException
block|{
name|ListCorruptFileBlocksRequestProto
operator|.
name|Builder
name|req
init|=
name|ListCorruptFileBlocksRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookie
operator|!=
literal|null
condition|)
name|req
operator|.
name|setCookie
argument_list|(
name|cookie
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|listCorruptFileBlocks
argument_list|(
literal|null
argument_list|,
name|req
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|getCorrupt
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|metaSave (String filename)
specifier|public
name|void
name|metaSave
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|MetaSaveRequestProto
name|req
init|=
name|MetaSaveRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFilename
argument_list|(
name|filename
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|metaSave
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getFileInfo (String src)
specifier|public
name|HdfsFileStatus
name|getFileInfo
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetFileInfoRequestProto
name|req
init|=
name|GetFileInfoRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetFileInfoResponseProto
name|res
init|=
name|rpcProxy
operator|.
name|getFileInfo
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|res
operator|.
name|hasFs
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|res
operator|.
name|getFs
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getFileLinkInfo (String src)
specifier|public
name|HdfsFileStatus
name|getFileLinkInfo
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetFileLinkInfoRequestProto
name|req
init|=
name|GetFileLinkInfoRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetFileLinkInfoResponseProto
name|result
init|=
name|rpcProxy
operator|.
name|getFileLinkInfo
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|result
operator|.
name|hasFs
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getFileLinkInfo
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getFs
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getContentSummary (String path)
specifier|public
name|ContentSummary
name|getContentSummary
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|GetContentSummaryRequestProto
name|req
init|=
name|GetContentSummaryRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getContentSummary
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getSummary
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setQuota (String path, long namespaceQuota, long storagespaceQuota, StorageType type)
specifier|public
name|void
name|setQuota
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|namespaceQuota
parameter_list|,
name|long
name|storagespaceQuota
parameter_list|,
name|StorageType
name|type
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
specifier|final
name|SetQuotaRequestProto
operator|.
name|Builder
name|builder
init|=
name|SetQuotaRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
operator|.
name|setNamespaceQuota
argument_list|(
name|namespaceQuota
argument_list|)
operator|.
name|setStoragespaceQuota
argument_list|(
name|storagespaceQuota
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setStorageType
argument_list|(
name|PBHelper
operator|.
name|convertStorageType
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|final
name|SetQuotaRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setQuota
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|fsync (String src, long fileId, String client, long lastBlockLength)
specifier|public
name|void
name|fsync
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|fileId
parameter_list|,
name|String
name|client
parameter_list|,
name|long
name|lastBlockLength
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|FsyncRequestProto
name|req
init|=
name|FsyncRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setClient
argument_list|(
name|client
argument_list|)
operator|.
name|setLastBlockLength
argument_list|(
name|lastBlockLength
argument_list|)
operator|.
name|setFileId
argument_list|(
name|fileId
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|fsync
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setTimes (String src, long mtime, long atime)
specifier|public
name|void
name|setTimes
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|mtime
parameter_list|,
name|long
name|atime
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|SetTimesRequestProto
name|req
init|=
name|SetTimesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setMtime
argument_list|(
name|mtime
argument_list|)
operator|.
name|setAtime
argument_list|(
name|atime
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setTimes
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createSymlink (String target, String link, FsPermission dirPerm, boolean createParent)
specifier|public
name|void
name|createSymlink
parameter_list|(
name|String
name|target
parameter_list|,
name|String
name|link
parameter_list|,
name|FsPermission
name|dirPerm
parameter_list|,
name|boolean
name|createParent
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|CreateSymlinkRequestProto
name|req
init|=
name|CreateSymlinkRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTarget
argument_list|(
name|target
argument_list|)
operator|.
name|setLink
argument_list|(
name|link
argument_list|)
operator|.
name|setDirPerm
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|dirPerm
argument_list|)
argument_list|)
operator|.
name|setCreateParent
argument_list|(
name|createParent
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|createSymlink
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getLinkTarget (String path)
specifier|public
name|String
name|getLinkTarget
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|IOException
block|{
name|GetLinkTargetRequestProto
name|req
init|=
name|GetLinkTargetRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetLinkTargetResponseProto
name|rsp
init|=
name|rpcProxy
operator|.
name|getLinkTarget
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|rsp
operator|.
name|hasTargetPath
argument_list|()
condition|?
name|rsp
operator|.
name|getTargetPath
argument_list|()
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|updateBlockForPipeline (ExtendedBlock block, String clientName)
specifier|public
name|LocatedBlock
name|updateBlockForPipeline
parameter_list|(
name|ExtendedBlock
name|block
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|IOException
block|{
name|UpdateBlockForPipelineRequestProto
name|req
init|=
name|UpdateBlockForPipelineRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|block
argument_list|)
argument_list|)
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convertLocatedBlockProto
argument_list|(
name|rpcProxy
operator|.
name|updateBlockForPipeline
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getBlock
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|updatePipeline (String clientName, ExtendedBlock oldBlock, ExtendedBlock newBlock, DatanodeID[] newNodes, String[] storageIDs)
specifier|public
name|void
name|updatePipeline
parameter_list|(
name|String
name|clientName
parameter_list|,
name|ExtendedBlock
name|oldBlock
parameter_list|,
name|ExtendedBlock
name|newBlock
parameter_list|,
name|DatanodeID
index|[]
name|newNodes
parameter_list|,
name|String
index|[]
name|storageIDs
parameter_list|)
throws|throws
name|IOException
block|{
name|UpdatePipelineRequestProto
name|req
init|=
name|UpdatePipelineRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientName
argument_list|(
name|clientName
argument_list|)
operator|.
name|setOldBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|oldBlock
argument_list|)
argument_list|)
operator|.
name|setNewBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|newBlock
argument_list|)
argument_list|)
operator|.
name|addAllNewNodes
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|newNodes
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addAllStorageIDs
argument_list|(
name|storageIDs
operator|==
literal|null
condition|?
literal|null
else|:
name|Arrays
operator|.
name|asList
argument_list|(
name|storageIDs
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|updatePipeline
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDelegationToken (Text renewer)
specifier|public
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|getDelegationToken
parameter_list|(
name|Text
name|renewer
parameter_list|)
throws|throws
name|IOException
block|{
name|GetDelegationTokenRequestProto
name|req
init|=
name|GetDelegationTokenRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setRenewer
argument_list|(
name|renewer
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetDelegationTokenResponseProto
name|resp
init|=
name|rpcProxy
operator|.
name|getDelegationToken
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|resp
operator|.
name|hasToken
argument_list|()
condition|?
name|PBHelper
operator|.
name|convertDelegationToken
argument_list|(
name|resp
operator|.
name|getToken
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renewDelegationToken (Token<DelegationTokenIdentifier> token)
specifier|public
name|long
name|renewDelegationToken
parameter_list|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|RenewDelegationTokenRequestProto
name|req
init|=
name|RenewDelegationTokenRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setToken
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|token
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|renewDelegationToken
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getNewExpiryTime
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|cancelDelegationToken (Token<DelegationTokenIdentifier> token)
specifier|public
name|void
name|cancelDelegationToken
parameter_list|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|CancelDelegationTokenRequestProto
name|req
init|=
name|CancelDelegationTokenRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setToken
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|token
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|cancelDelegationToken
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setBalancerBandwidth (long bandwidth)
specifier|public
name|void
name|setBalancerBandwidth
parameter_list|(
name|long
name|bandwidth
parameter_list|)
throws|throws
name|IOException
block|{
name|SetBalancerBandwidthRequestProto
name|req
init|=
name|SetBalancerBandwidthRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBandwidth
argument_list|(
name|bandwidth
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setBalancerBandwidth
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|isMethodSupported (String methodName)
specifier|public
name|boolean
name|isMethodSupported
parameter_list|(
name|String
name|methodName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|RpcClientUtil
operator|.
name|isMethodSupported
argument_list|(
name|rpcProxy
argument_list|,
name|ClientNamenodeProtocolPB
operator|.
name|class
argument_list|,
name|RPC
operator|.
name|RpcKind
operator|.
name|RPC_PROTOCOL_BUFFER
argument_list|,
name|RPC
operator|.
name|getProtocolVersion
argument_list|(
name|ClientNamenodeProtocolPB
operator|.
name|class
argument_list|)
argument_list|,
name|methodName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDataEncryptionKey ()
specifier|public
name|DataEncryptionKey
name|getDataEncryptionKey
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|GetDataEncryptionKeyResponseProto
name|rsp
init|=
name|rpcProxy
operator|.
name|getDataEncryptionKey
argument_list|(
literal|null
argument_list|,
name|VOID_GET_DATA_ENCRYPTIONKEY_REQUEST
argument_list|)
decl_stmt|;
return|return
name|rsp
operator|.
name|hasDataEncryptionKey
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|rsp
operator|.
name|getDataEncryptionKey
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|isFileClosed (String src)
specifier|public
name|boolean
name|isFileClosed
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|IsFileClosedRequestProto
name|req
init|=
name|IsFileClosedRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|isFileClosed
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getResult
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getUnderlyingProxyObject ()
specifier|public
name|Object
name|getUnderlyingProxyObject
parameter_list|()
block|{
return|return
name|rpcProxy
return|;
block|}
annotation|@
name|Override
DECL|method|createSnapshot (String snapshotRoot, String snapshotName)
specifier|public
name|String
name|createSnapshot
parameter_list|(
name|String
name|snapshotRoot
parameter_list|,
name|String
name|snapshotName
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|CreateSnapshotRequestProto
operator|.
name|Builder
name|builder
init|=
name|CreateSnapshotRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
decl_stmt|;
if|if
condition|(
name|snapshotName
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSnapshotName
argument_list|(
name|snapshotName
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CreateSnapshotRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|createSnapshot
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getSnapshotPath
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deleteSnapshot (String snapshotRoot, String snapshotName)
specifier|public
name|void
name|deleteSnapshot
parameter_list|(
name|String
name|snapshotRoot
parameter_list|,
name|String
name|snapshotName
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteSnapshotRequestProto
name|req
init|=
name|DeleteSnapshotRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
operator|.
name|setSnapshotName
argument_list|(
name|snapshotName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|deleteSnapshot
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|allowSnapshot (String snapshotRoot)
specifier|public
name|void
name|allowSnapshot
parameter_list|(
name|String
name|snapshotRoot
parameter_list|)
throws|throws
name|IOException
block|{
name|AllowSnapshotRequestProto
name|req
init|=
name|AllowSnapshotRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|allowSnapshot
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|disallowSnapshot (String snapshotRoot)
specifier|public
name|void
name|disallowSnapshot
parameter_list|(
name|String
name|snapshotRoot
parameter_list|)
throws|throws
name|IOException
block|{
name|DisallowSnapshotRequestProto
name|req
init|=
name|DisallowSnapshotRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|disallowSnapshot
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renameSnapshot (String snapshotRoot, String snapshotOldName, String snapshotNewName)
specifier|public
name|void
name|renameSnapshot
parameter_list|(
name|String
name|snapshotRoot
parameter_list|,
name|String
name|snapshotOldName
parameter_list|,
name|String
name|snapshotNewName
parameter_list|)
throws|throws
name|IOException
block|{
name|RenameSnapshotRequestProto
name|req
init|=
name|RenameSnapshotRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
operator|.
name|setSnapshotOldName
argument_list|(
name|snapshotOldName
argument_list|)
operator|.
name|setSnapshotNewName
argument_list|(
name|snapshotNewName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|renameSnapshot
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getSnapshottableDirListing ()
specifier|public
name|SnapshottableDirectoryStatus
index|[]
name|getSnapshottableDirListing
parameter_list|()
throws|throws
name|IOException
block|{
name|GetSnapshottableDirListingRequestProto
name|req
init|=
name|GetSnapshottableDirListingRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetSnapshottableDirListingResponseProto
name|result
init|=
name|rpcProxy
operator|.
name|getSnapshottableDirListing
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|.
name|hasSnapshottableDirList
argument_list|()
condition|)
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
operator|.
name|getSnapshottableDirList
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getSnapshotDiffReport (String snapshotRoot, String fromSnapshot, String toSnapshot)
specifier|public
name|SnapshotDiffReport
name|getSnapshotDiffReport
parameter_list|(
name|String
name|snapshotRoot
parameter_list|,
name|String
name|fromSnapshot
parameter_list|,
name|String
name|toSnapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|GetSnapshotDiffReportRequestProto
name|req
init|=
name|GetSnapshotDiffReportRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshotRoot
argument_list|(
name|snapshotRoot
argument_list|)
operator|.
name|setFromSnapshot
argument_list|(
name|fromSnapshot
argument_list|)
operator|.
name|setToSnapshot
argument_list|(
name|toSnapshot
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetSnapshotDiffReportResponseProto
name|result
init|=
name|rpcProxy
operator|.
name|getSnapshotDiffReport
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
operator|.
name|getDiffReport
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addCacheDirective (CacheDirectiveInfo directive, EnumSet<CacheFlag> flags)
specifier|public
name|long
name|addCacheDirective
parameter_list|(
name|CacheDirectiveInfo
name|directive
parameter_list|,
name|EnumSet
argument_list|<
name|CacheFlag
argument_list|>
name|flags
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|AddCacheDirectiveRequestProto
operator|.
name|Builder
name|builder
init|=
name|AddCacheDirectiveRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setInfo
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|directive
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|flags
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setCacheFlags
argument_list|(
name|PBHelper
operator|.
name|convertCacheFlags
argument_list|(
name|flags
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|rpcProxy
operator|.
name|addCacheDirective
argument_list|(
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|getId
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|modifyCacheDirective (CacheDirectiveInfo directive, EnumSet<CacheFlag> flags)
specifier|public
name|void
name|modifyCacheDirective
parameter_list|(
name|CacheDirectiveInfo
name|directive
parameter_list|,
name|EnumSet
argument_list|<
name|CacheFlag
argument_list|>
name|flags
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|ModifyCacheDirectiveRequestProto
operator|.
name|Builder
name|builder
init|=
name|ModifyCacheDirectiveRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setInfo
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|directive
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|flags
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setCacheFlags
argument_list|(
name|PBHelper
operator|.
name|convertCacheFlags
argument_list|(
name|flags
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rpcProxy
operator|.
name|modifyCacheDirective
argument_list|(
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeCacheDirective (long id)
specifier|public
name|void
name|removeCacheDirective
parameter_list|(
name|long
name|id
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|rpcProxy
operator|.
name|removeCacheDirective
argument_list|(
literal|null
argument_list|,
name|RemoveCacheDirectiveRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setId
argument_list|(
name|id
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|class|BatchedCacheEntries
specifier|private
specifier|static
class|class
name|BatchedCacheEntries
implements|implements
name|BatchedEntries
argument_list|<
name|CacheDirectiveEntry
argument_list|>
block|{
DECL|field|response
specifier|private
specifier|final
name|ListCacheDirectivesResponseProto
name|response
decl_stmt|;
DECL|method|BatchedCacheEntries ( ListCacheDirectivesResponseProto response)
name|BatchedCacheEntries
parameter_list|(
name|ListCacheDirectivesResponseProto
name|response
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get (int i)
specifier|public
name|CacheDirectiveEntry
name|get
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|response
operator|.
name|getElements
argument_list|(
name|i
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|size ()
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|response
operator|.
name|getElementsCount
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hasMore ()
specifier|public
name|boolean
name|hasMore
parameter_list|()
block|{
return|return
name|response
operator|.
name|getHasMore
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|BatchedEntries
argument_list|<
name|CacheDirectiveEntry
argument_list|>
DECL|method|listCacheDirectives (long prevId, CacheDirectiveInfo filter)
name|listCacheDirectives
parameter_list|(
name|long
name|prevId
parameter_list|,
name|CacheDirectiveInfo
name|filter
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|filter
operator|==
literal|null
condition|)
block|{
name|filter
operator|=
operator|new
name|CacheDirectiveInfo
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
try|try
block|{
return|return
operator|new
name|BatchedCacheEntries
argument_list|(
name|rpcProxy
operator|.
name|listCacheDirectives
argument_list|(
literal|null
argument_list|,
name|ListCacheDirectivesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPrevId
argument_list|(
name|prevId
argument_list|)
operator|.
name|setFilter
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|filter
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addCachePool (CachePoolInfo info)
specifier|public
name|void
name|addCachePool
parameter_list|(
name|CachePoolInfo
name|info
parameter_list|)
throws|throws
name|IOException
block|{
name|AddCachePoolRequestProto
operator|.
name|Builder
name|builder
init|=
name|AddCachePoolRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setInfo
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|addCachePool
argument_list|(
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|modifyCachePool (CachePoolInfo req)
specifier|public
name|void
name|modifyCachePool
parameter_list|(
name|CachePoolInfo
name|req
parameter_list|)
throws|throws
name|IOException
block|{
name|ModifyCachePoolRequestProto
operator|.
name|Builder
name|builder
init|=
name|ModifyCachePoolRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setInfo
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|modifyCachePool
argument_list|(
literal|null
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeCachePool (String cachePoolName)
specifier|public
name|void
name|removeCachePool
parameter_list|(
name|String
name|cachePoolName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|rpcProxy
operator|.
name|removeCachePool
argument_list|(
literal|null
argument_list|,
name|RemoveCachePoolRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPoolName
argument_list|(
name|cachePoolName
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|class|BatchedCachePoolEntries
specifier|private
specifier|static
class|class
name|BatchedCachePoolEntries
implements|implements
name|BatchedEntries
argument_list|<
name|CachePoolEntry
argument_list|>
block|{
DECL|field|proto
specifier|private
specifier|final
name|ListCachePoolsResponseProto
name|proto
decl_stmt|;
DECL|method|BatchedCachePoolEntries (ListCachePoolsResponseProto proto)
specifier|public
name|BatchedCachePoolEntries
parameter_list|(
name|ListCachePoolsResponseProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get (int i)
specifier|public
name|CachePoolEntry
name|get
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|CachePoolEntryProto
name|elem
init|=
name|proto
operator|.
name|getEntries
argument_list|(
name|i
argument_list|)
decl_stmt|;
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|elem
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|size ()
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|proto
operator|.
name|getEntriesCount
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hasMore ()
specifier|public
name|boolean
name|hasMore
parameter_list|()
block|{
return|return
name|proto
operator|.
name|getHasMore
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|listCachePools (String prevKey)
specifier|public
name|BatchedEntries
argument_list|<
name|CachePoolEntry
argument_list|>
name|listCachePools
parameter_list|(
name|String
name|prevKey
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
operator|new
name|BatchedCachePoolEntries
argument_list|(
name|rpcProxy
operator|.
name|listCachePools
argument_list|(
literal|null
argument_list|,
name|ListCachePoolsRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPrevPoolName
argument_list|(
name|prevKey
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|modifyAclEntries (String src, List<AclEntry> aclSpec)
specifier|public
name|void
name|modifyAclEntries
parameter_list|(
name|String
name|src
parameter_list|,
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
parameter_list|)
throws|throws
name|IOException
block|{
name|ModifyAclEntriesRequestProto
name|req
init|=
name|ModifyAclEntriesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|addAllAclSpec
argument_list|(
name|PBHelper
operator|.
name|convertAclEntryProto
argument_list|(
name|aclSpec
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|modifyAclEntries
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeAclEntries (String src, List<AclEntry> aclSpec)
specifier|public
name|void
name|removeAclEntries
parameter_list|(
name|String
name|src
parameter_list|,
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoveAclEntriesRequestProto
name|req
init|=
name|RemoveAclEntriesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|addAllAclSpec
argument_list|(
name|PBHelper
operator|.
name|convertAclEntryProto
argument_list|(
name|aclSpec
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|removeAclEntries
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeDefaultAcl (String src)
specifier|public
name|void
name|removeDefaultAcl
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoveDefaultAclRequestProto
name|req
init|=
name|RemoveDefaultAclRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|removeDefaultAcl
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeAcl (String src)
specifier|public
name|void
name|removeAcl
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoveAclRequestProto
name|req
init|=
name|RemoveAclRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|removeAcl
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setAcl (String src, List<AclEntry> aclSpec)
specifier|public
name|void
name|setAcl
parameter_list|(
name|String
name|src
parameter_list|,
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
parameter_list|)
throws|throws
name|IOException
block|{
name|SetAclRequestProto
name|req
init|=
name|SetAclRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|addAllAclSpec
argument_list|(
name|PBHelper
operator|.
name|convertAclEntryProto
argument_list|(
name|aclSpec
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setAcl
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getAclStatus (String src)
specifier|public
name|AclStatus
name|getAclStatus
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
name|GetAclStatusRequestProto
name|req
init|=
name|GetAclStatusRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getAclStatus
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createEncryptionZone (String src, String keyName)
specifier|public
name|void
name|createEncryptionZone
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|CreateEncryptionZoneRequestProto
operator|.
name|Builder
name|builder
init|=
name|CreateEncryptionZoneRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
expr_stmt|;
if|if
condition|(
name|keyName
operator|!=
literal|null
operator|&&
operator|!
name|keyName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
block|}
name|CreateEncryptionZoneRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|createEncryptionZone
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getEZForPath (String src)
specifier|public
name|EncryptionZone
name|getEZForPath
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|GetEZForPathRequestProto
operator|.
name|Builder
name|builder
init|=
name|GetEZForPathRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
expr_stmt|;
specifier|final
name|GetEZForPathRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|EncryptionZonesProtos
operator|.
name|GetEZForPathResponseProto
name|response
init|=
name|rpcProxy
operator|.
name|getEZForPath
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
if|if
condition|(
name|response
operator|.
name|hasZone
argument_list|()
condition|)
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|response
operator|.
name|getZone
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listEncryptionZones (long id)
specifier|public
name|BatchedEntries
argument_list|<
name|EncryptionZone
argument_list|>
name|listEncryptionZones
parameter_list|(
name|long
name|id
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|ListEncryptionZonesRequestProto
name|req
init|=
name|ListEncryptionZonesRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setId
argument_list|(
name|id
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|EncryptionZonesProtos
operator|.
name|ListEncryptionZonesResponseProto
name|response
init|=
name|rpcProxy
operator|.
name|listEncryptionZones
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|EncryptionZone
argument_list|>
name|elements
init|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|response
operator|.
name|getZonesCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EncryptionZoneProto
name|p
range|:
name|response
operator|.
name|getZonesList
argument_list|()
control|)
block|{
name|elements
operator|.
name|add
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|BatchedListEntries
argument_list|<
name|EncryptionZone
argument_list|>
argument_list|(
name|elements
argument_list|,
name|response
operator|.
name|getHasMore
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createErasureCodingZone (String src, ECSchema schema)
specifier|public
name|void
name|createErasureCodingZone
parameter_list|(
name|String
name|src
parameter_list|,
name|ECSchema
name|schema
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|CreateErasureCodingZoneRequestProto
operator|.
name|Builder
name|builder
init|=
name|CreateErasureCodingZoneRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
expr_stmt|;
if|if
condition|(
name|schema
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSchema
argument_list|(
name|PBHelper
operator|.
name|convertECSchema
argument_list|(
name|schema
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|CreateErasureCodingZoneRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|createErasureCodingZone
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setXAttr (String src, XAttr xAttr, EnumSet<XAttrSetFlag> flag)
specifier|public
name|void
name|setXAttr
parameter_list|(
name|String
name|src
parameter_list|,
name|XAttr
name|xAttr
parameter_list|,
name|EnumSet
argument_list|<
name|XAttrSetFlag
argument_list|>
name|flag
parameter_list|)
throws|throws
name|IOException
block|{
name|SetXAttrRequestProto
name|req
init|=
name|SetXAttrRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setXAttr
argument_list|(
name|PBHelper
operator|.
name|convertXAttrProto
argument_list|(
name|xAttr
argument_list|)
argument_list|)
operator|.
name|setFlag
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|flag
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setXAttr
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getXAttrs (String src, List<XAttr> xAttrs)
specifier|public
name|List
argument_list|<
name|XAttr
argument_list|>
name|getXAttrs
parameter_list|(
name|String
name|src
parameter_list|,
name|List
argument_list|<
name|XAttr
argument_list|>
name|xAttrs
parameter_list|)
throws|throws
name|IOException
block|{
name|GetXAttrsRequestProto
operator|.
name|Builder
name|builder
init|=
name|GetXAttrsRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
expr_stmt|;
if|if
condition|(
name|xAttrs
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|addAllXAttrs
argument_list|(
name|PBHelper
operator|.
name|convertXAttrProto
argument_list|(
name|xAttrs
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|GetXAttrsRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getXAttrs
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listXAttrs (String src)
specifier|public
name|List
argument_list|<
name|XAttr
argument_list|>
name|listXAttrs
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
name|ListXAttrsRequestProto
operator|.
name|Builder
name|builder
init|=
name|ListXAttrsRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|ListXAttrsRequestProto
name|req
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|listXAttrs
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeXAttr (String src, XAttr xAttr)
specifier|public
name|void
name|removeXAttr
parameter_list|(
name|String
name|src
parameter_list|,
name|XAttr
name|xAttr
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoveXAttrRequestProto
name|req
init|=
name|RemoveXAttrRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setXAttr
argument_list|(
name|PBHelper
operator|.
name|convertXAttrProto
argument_list|(
name|xAttr
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|removeXAttr
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|checkAccess (String path, FsAction mode)
specifier|public
name|void
name|checkAccess
parameter_list|(
name|String
name|path
parameter_list|,
name|FsAction
name|mode
parameter_list|)
throws|throws
name|IOException
block|{
name|CheckAccessRequestProto
name|req
init|=
name|CheckAccessRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
operator|.
name|setMode
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|mode
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|checkAccess
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setStoragePolicy (String src, String policyName)
specifier|public
name|void
name|setStoragePolicy
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|policyName
parameter_list|)
throws|throws
name|IOException
block|{
name|SetStoragePolicyRequestProto
name|req
init|=
name|SetStoragePolicyRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|setPolicyName
argument_list|(
name|policyName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|rpcProxy
operator|.
name|setStoragePolicy
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getStoragePolicies ()
specifier|public
name|BlockStoragePolicy
index|[]
name|getStoragePolicies
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|GetStoragePoliciesResponseProto
name|response
init|=
name|rpcProxy
operator|.
name|getStoragePolicies
argument_list|(
literal|null
argument_list|,
name|VOID_GET_STORAGE_POLICIES_REQUEST
argument_list|)
decl_stmt|;
return|return
name|PBHelper
operator|.
name|convertStoragePolicies
argument_list|(
name|response
operator|.
name|getPoliciesList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getCurrentEditLogTxid ()
specifier|public
name|long
name|getCurrentEditLogTxid
parameter_list|()
throws|throws
name|IOException
block|{
name|GetCurrentEditLogTxidRequestProto
name|req
init|=
name|GetCurrentEditLogTxidRequestProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|rpcProxy
operator|.
name|getCurrentEditLogTxid
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
operator|.
name|getTxid
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getEditsFromTxid (long txid)
specifier|public
name|EventBatchList
name|getEditsFromTxid
parameter_list|(
name|long
name|txid
parameter_list|)
throws|throws
name|IOException
block|{
name|GetEditsFromTxidRequestProto
name|req
init|=
name|GetEditsFromTxidRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTxid
argument_list|(
name|txid
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|rpcProxy
operator|.
name|getEditsFromTxid
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getErasureCodingInfo (String src)
specifier|public
name|ECInfo
name|getErasureCodingInfo
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|IOException
block|{
name|GetErasureCodingInfoRequestProto
name|req
init|=
name|GetErasureCodingInfoRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSrc
argument_list|(
name|src
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|GetErasureCodingInfoResponseProto
name|res
init|=
name|rpcProxy
operator|.
name|getErasureCodingInfo
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|hasECInfo
argument_list|()
condition|)
block|{
return|return
name|PBHelper
operator|.
name|convertECInfo
argument_list|(
name|res
operator|.
name|getECInfo
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getECSchemas ()
specifier|public
name|ECSchema
index|[]
name|getECSchemas
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|GetECSchemasResponseProto
name|response
init|=
name|rpcProxy
operator|.
name|getECSchemas
argument_list|(
literal|null
argument_list|,
name|VOID_GET_ECSCHEMAS_REQUEST
argument_list|)
decl_stmt|;
name|ECSchema
index|[]
name|schemas
init|=
operator|new
name|ECSchema
index|[
name|response
operator|.
name|getSchemasCount
argument_list|()
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ECSchemaProto
name|schemaProto
range|:
name|response
operator|.
name|getSchemasList
argument_list|()
control|)
block|{
name|schemas
index|[
name|i
operator|++
index|]
operator|=
name|PBHelper
operator|.
name|convertECSchema
argument_list|(
name|schemaProto
argument_list|)
expr_stmt|;
block|}
return|return
name|schemas
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

