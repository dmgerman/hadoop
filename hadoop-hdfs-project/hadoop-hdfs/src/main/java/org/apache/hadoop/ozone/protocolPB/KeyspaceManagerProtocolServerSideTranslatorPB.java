begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ksm
operator|.
name|protocol
operator|.
name|KeyspaceManagerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ksm
operator|.
name|protocolPB
operator|.
name|KeySpaceManagerProtocolPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|KeySpaceManagerProtocolProtos
import|;
end_import

begin_comment
comment|/**  * This class is the server-side translator that forwards requests received on  * {@link org.apache.hadoop.ksm.protocolPB.KeySpaceManagerProtocolPB} to the  * KeyspaceManagerService server implementation.  */
end_comment

begin_class
DECL|class|KeyspaceManagerProtocolServerSideTranslatorPB
specifier|public
class|class
name|KeyspaceManagerProtocolServerSideTranslatorPB
implements|implements
name|KeySpaceManagerProtocolPB
block|{
DECL|field|impl
specifier|private
specifier|final
name|KeyspaceManagerProtocol
name|impl
decl_stmt|;
comment|/**    * Constructs an instance of the server handler.    *    * @param impl KeySpaceManagerProtocolPB    */
DECL|method|KeyspaceManagerProtocolServerSideTranslatorPB ( KeyspaceManagerProtocol impl)
specifier|public
name|KeyspaceManagerProtocolServerSideTranslatorPB
parameter_list|(
name|KeyspaceManagerProtocol
name|impl
parameter_list|)
block|{
name|this
operator|.
name|impl
operator|=
name|impl
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createVolume ( RpcController controller, KeySpaceManagerProtocolProtos .CreateVolumeRequest request)
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|CreateVolumeResponse
name|createVolume
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|CreateVolumeRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|SetVolumePropertyResponse
DECL|method|setVolumeProperty (RpcController controller, KeySpaceManagerProtocolProtos .SetVolumePropertyRequest request)
name|setVolumeProperty
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|SetVolumePropertyRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|CheckVolumeAccessResponse
DECL|method|checkVolumeAccess (RpcController controller, KeySpaceManagerProtocolProtos .CheckVolumeAccessRequest request)
name|checkVolumeAccess
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|CheckVolumeAccessRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|infoVolume ( RpcController controller, KeySpaceManagerProtocolProtos.InfoVolumeRequest request)
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|InfoVolumeResponse
name|infoVolume
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|InfoVolumeRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|deleteVolume ( RpcController controller, KeySpaceManagerProtocolProtos .DeleteVolumeRequest request)
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|DeleteVolumeResponse
name|deleteVolume
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|DeleteVolumeRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|listVolumes ( RpcController controller, KeySpaceManagerProtocolProtos.ListVolumeRequest request)
specifier|public
name|KeySpaceManagerProtocolProtos
operator|.
name|ListVolumeResponse
name|listVolumes
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|KeySpaceManagerProtocolProtos
operator|.
name|ListVolumeRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

