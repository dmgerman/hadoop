begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.cblock.jscsiHelper
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|cblock
operator|.
name|jscsiHelper
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableRate
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining  the various Cblock Target statistics  * and publishing them through the metrics interfaces.  * This also registers the JMX MBean for RPC.  *  * This class maintains stats like cache hit and miss ratio  * as well as the latency time of read and write ops.  */
end_comment

begin_class
DECL|class|CBlockTargetMetrics
specifier|public
class|class
name|CBlockTargetMetrics
block|{
DECL|field|numReadOps
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|numReadOps
decl_stmt|;
DECL|field|numWriteOps
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|numWriteOps
decl_stmt|;
DECL|field|numReadCacheHits
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|numReadCacheHits
decl_stmt|;
DECL|field|numReadCacheMiss
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|numReadCacheMiss
decl_stmt|;
DECL|field|numReadLostBlocks
annotation|@
name|Metric
specifier|private
name|MutableCounterLong
name|numReadLostBlocks
decl_stmt|;
DECL|field|dbReadLatency
annotation|@
name|Metric
specifier|private
name|MutableRate
name|dbReadLatency
decl_stmt|;
DECL|field|containerReadLatency
annotation|@
name|Metric
specifier|private
name|MutableRate
name|containerReadLatency
decl_stmt|;
DECL|field|dbWriteLatency
annotation|@
name|Metric
specifier|private
name|MutableRate
name|dbWriteLatency
decl_stmt|;
DECL|field|containerWriteLatency
annotation|@
name|Metric
specifier|private
name|MutableRate
name|containerWriteLatency
decl_stmt|;
DECL|method|CBlockTargetMetrics ()
specifier|public
name|CBlockTargetMetrics
parameter_list|()
block|{   }
DECL|method|create ()
specifier|public
specifier|static
name|CBlockTargetMetrics
name|create
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
literal|"CBlockTargetMetrics"
argument_list|,
literal|"CBlock Target Metrics"
argument_list|,
operator|new
name|CBlockTargetMetrics
argument_list|()
argument_list|)
return|;
block|}
DECL|method|incNumReadOps ()
specifier|public
name|void
name|incNumReadOps
parameter_list|()
block|{
name|numReadOps
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumWriteOps ()
specifier|public
name|void
name|incNumWriteOps
parameter_list|()
block|{
name|numWriteOps
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumReadCacheHits ()
specifier|public
name|void
name|incNumReadCacheHits
parameter_list|()
block|{
name|numReadCacheHits
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumReadCacheMiss ()
specifier|public
name|void
name|incNumReadCacheMiss
parameter_list|()
block|{
name|numReadCacheMiss
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumReadLostBlocks ()
specifier|public
name|void
name|incNumReadLostBlocks
parameter_list|()
block|{
name|numReadLostBlocks
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|updateDBReadLatency (long latency)
specifier|public
name|void
name|updateDBReadLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|dbReadLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|updateContainerReadLatency (long latency)
specifier|public
name|void
name|updateContainerReadLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|containerReadLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|updateDBWriteLatency (long latency)
specifier|public
name|void
name|updateDBWriteLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|dbWriteLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|updateContainerWriteLatency (long latency)
specifier|public
name|void
name|updateContainerWriteLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|containerWriteLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumReadOps ()
specifier|public
name|long
name|getNumReadOps
parameter_list|()
block|{
return|return
name|numReadOps
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumWriteOps ()
specifier|public
name|long
name|getNumWriteOps
parameter_list|()
block|{
return|return
name|numWriteOps
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumReadCacheHits ()
specifier|public
name|long
name|getNumReadCacheHits
parameter_list|()
block|{
return|return
name|numReadCacheHits
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumReadCacheMiss ()
specifier|public
name|long
name|getNumReadCacheMiss
parameter_list|()
block|{
return|return
name|numReadCacheMiss
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumReadLostBlocks ()
specifier|public
name|long
name|getNumReadLostBlocks
parameter_list|()
block|{
return|return
name|numReadLostBlocks
operator|.
name|value
argument_list|()
return|;
block|}
block|}
end_class

end_unit

