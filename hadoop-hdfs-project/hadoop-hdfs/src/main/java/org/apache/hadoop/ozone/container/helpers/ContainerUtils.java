begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_comment
comment|/**  * A set of helper functions to create proper responses.  */
end_comment

begin_class
DECL|class|ContainerUtils
specifier|public
specifier|final
class|class
name|ContainerUtils
block|{
comment|/**    * Returns a CreateContainer Response. This call is used by create and delete    * containers which have null success responses.    *    * @param msg Request    * @return Response.    */
specifier|public
specifier|static
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
DECL|method|getContainerResponse (ContainerProtos.ContainerCommandRequestProto msg)
name|getContainerResponse
parameter_list|(
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
name|msg
parameter_list|)
block|{
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
operator|.
name|Builder
name|builder
init|=
name|getContainerResponse
argument_list|(
name|msg
argument_list|,
name|ContainerProtos
operator|.
name|Result
operator|.
name|SUCCESS
argument_list|,
literal|""
argument_list|)
decl_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Returns a ReadContainer Response.    *    * @param msg Request    * @return Response.    */
specifier|public
specifier|static
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
DECL|method|getReadContainerResponse (ContainerProtos.ContainerCommandRequestProto msg, ContainerData containerData)
name|getReadContainerResponse
parameter_list|(
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
name|msg
parameter_list|,
name|ContainerData
name|containerData
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|containerData
argument_list|)
expr_stmt|;
name|ContainerProtos
operator|.
name|ReadContainerResponseProto
operator|.
name|Builder
name|response
init|=
name|ContainerProtos
operator|.
name|ReadContainerResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|response
operator|.
name|setContainerData
argument_list|(
name|containerData
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
operator|.
name|Builder
name|builder
init|=
name|getContainerResponse
argument_list|(
name|msg
argument_list|,
name|ContainerProtos
operator|.
name|Result
operator|.
name|SUCCESS
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setReadContainer
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * We found a command type but no associated payload for the command. Hence    * return malformed Command as response.    *    * @param msg - Protobuf message.    * @return ContainerCommandResponseProto - MALFORMED_REQUEST.    */
specifier|public
specifier|static
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
operator|.
name|Builder
DECL|method|getContainerResponse (ContainerProtos.ContainerCommandRequestProto msg, ContainerProtos.Result result, String message)
name|getContainerResponse
parameter_list|(
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
name|msg
parameter_list|,
name|ContainerProtos
operator|.
name|Result
name|result
parameter_list|,
name|String
name|message
parameter_list|)
block|{
return|return
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|msg
operator|.
name|getCmdType
argument_list|()
argument_list|)
operator|.
name|setTraceID
argument_list|(
name|msg
operator|.
name|getTraceID
argument_list|()
argument_list|)
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
return|;
block|}
comment|/**    * We found a command type but no associated payload for the command. Hence    * return malformed Command as response.    *    * @param msg - Protobuf message.    * @return ContainerCommandResponseProto - MALFORMED_REQUEST.    */
specifier|public
specifier|static
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
DECL|method|malformedRequest (ContainerProtos.ContainerCommandRequestProto msg)
name|malformedRequest
parameter_list|(
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
name|msg
parameter_list|)
block|{
return|return
name|getContainerResponse
argument_list|(
name|msg
argument_list|,
name|ContainerProtos
operator|.
name|Result
operator|.
name|MALFORMED_REQUEST
argument_list|,
literal|"Cmd type does not match the payload."
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * We found a command type that is not supported yet.    *    * @param msg - Protobuf message.    * @return ContainerCommandResponseProto - MALFORMED_REQUEST.    */
specifier|public
specifier|static
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
DECL|method|unsupportedRequest (ContainerProtos.ContainerCommandRequestProto msg)
name|unsupportedRequest
parameter_list|(
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
name|msg
parameter_list|)
block|{
return|return
name|getContainerResponse
argument_list|(
name|msg
argument_list|,
name|ContainerProtos
operator|.
name|Result
operator|.
name|UNSUPPORTED_REQUEST
argument_list|,
literal|"Server does not support this command yet."
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|ContainerUtils ()
specifier|private
name|ContainerUtils
parameter_list|()
block|{
comment|//never constructed.
block|}
block|}
end_class

end_unit

