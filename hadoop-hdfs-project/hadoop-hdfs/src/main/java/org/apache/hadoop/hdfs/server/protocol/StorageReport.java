begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.protocol
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|protocol
package|;
end_package

begin_comment
comment|/**  * Utilization report for a Datanode storage  */
end_comment

begin_class
DECL|class|StorageReport
specifier|public
class|class
name|StorageReport
block|{
DECL|field|storage
specifier|private
specifier|final
name|DatanodeStorage
name|storage
decl_stmt|;
DECL|field|failed
specifier|private
specifier|final
name|boolean
name|failed
decl_stmt|;
DECL|field|capacity
specifier|private
specifier|final
name|long
name|capacity
decl_stmt|;
DECL|field|dfsUsed
specifier|private
specifier|final
name|long
name|dfsUsed
decl_stmt|;
DECL|field|remaining
specifier|private
specifier|final
name|long
name|remaining
decl_stmt|;
DECL|field|blockPoolUsed
specifier|private
specifier|final
name|long
name|blockPoolUsed
decl_stmt|;
DECL|field|EMPTY_ARRAY
specifier|public
specifier|static
specifier|final
name|StorageReport
index|[]
name|EMPTY_ARRAY
init|=
block|{}
decl_stmt|;
DECL|method|StorageReport (DatanodeStorage storage, boolean failed, long capacity, long dfsUsed, long remaining, long bpUsed)
specifier|public
name|StorageReport
parameter_list|(
name|DatanodeStorage
name|storage
parameter_list|,
name|boolean
name|failed
parameter_list|,
name|long
name|capacity
parameter_list|,
name|long
name|dfsUsed
parameter_list|,
name|long
name|remaining
parameter_list|,
name|long
name|bpUsed
parameter_list|)
block|{
name|this
operator|.
name|storage
operator|=
name|storage
expr_stmt|;
name|this
operator|.
name|failed
operator|=
name|failed
expr_stmt|;
name|this
operator|.
name|capacity
operator|=
name|capacity
expr_stmt|;
name|this
operator|.
name|dfsUsed
operator|=
name|dfsUsed
expr_stmt|;
name|this
operator|.
name|remaining
operator|=
name|remaining
expr_stmt|;
name|this
operator|.
name|blockPoolUsed
operator|=
name|bpUsed
expr_stmt|;
block|}
DECL|method|getStorage ()
specifier|public
name|DatanodeStorage
name|getStorage
parameter_list|()
block|{
return|return
name|storage
return|;
block|}
DECL|method|isFailed ()
specifier|public
name|boolean
name|isFailed
parameter_list|()
block|{
return|return
name|failed
return|;
block|}
DECL|method|getCapacity ()
specifier|public
name|long
name|getCapacity
parameter_list|()
block|{
return|return
name|capacity
return|;
block|}
DECL|method|getDfsUsed ()
specifier|public
name|long
name|getDfsUsed
parameter_list|()
block|{
return|return
name|dfsUsed
return|;
block|}
DECL|method|getRemaining ()
specifier|public
name|long
name|getRemaining
parameter_list|()
block|{
return|return
name|remaining
return|;
block|}
DECL|method|getBlockPoolUsed ()
specifier|public
name|long
name|getBlockPoolUsed
parameter_list|()
block|{
return|return
name|blockPoolUsed
return|;
block|}
block|}
end_class

end_unit

