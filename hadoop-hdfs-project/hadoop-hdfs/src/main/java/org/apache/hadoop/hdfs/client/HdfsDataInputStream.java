begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ExtendedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlock
import|;
end_import

begin_comment
comment|/**  * The Hdfs implementation of {@link FSDataInputStream}.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|HdfsDataInputStream
specifier|public
class|class
name|HdfsDataInputStream
extends|extends
name|FSDataInputStream
block|{
DECL|method|HdfsDataInputStream (DFSInputStream in)
specifier|public
name|HdfsDataInputStream
parameter_list|(
name|DFSInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get the datanode from which the stream is currently reading.    */
DECL|method|getCurrentDatanode ()
specifier|public
name|DatanodeInfo
name|getCurrentDatanode
parameter_list|()
block|{
return|return
operator|(
operator|(
name|DFSInputStream
operator|)
name|in
operator|)
operator|.
name|getCurrentDatanode
argument_list|()
return|;
block|}
comment|/**    * Get the block containing the target position.    */
DECL|method|getCurrentBlock ()
specifier|public
name|ExtendedBlock
name|getCurrentBlock
parameter_list|()
block|{
return|return
operator|(
operator|(
name|DFSInputStream
operator|)
name|in
operator|)
operator|.
name|getCurrentBlock
argument_list|()
return|;
block|}
comment|/**    * Get the collection of blocks that has already been located.    */
DECL|method|getAllBlocks ()
specifier|public
specifier|synchronized
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|getAllBlocks
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|(
operator|(
name|DFSInputStream
operator|)
name|in
operator|)
operator|.
name|getAllBlocks
argument_list|()
return|;
block|}
comment|/**    * Get the visible length of the file. It will include the length of the last    * block even if that is in UnderConstruction state.    *     * @return The visible length of the file.    */
DECL|method|getVisibleLength ()
specifier|public
name|long
name|getVisibleLength
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|(
operator|(
name|DFSInputStream
operator|)
name|in
operator|)
operator|.
name|getFileLength
argument_list|()
return|;
block|}
comment|/**    * Get statistics about the reads which this DFSInputStream has done.    * Note that because HdfsDataInputStream is buffered, these stats may    * be higher than you would expect just by adding up the number of    * bytes read through HdfsDataInputStream.    */
DECL|method|getReadStatistics ()
specifier|public
specifier|synchronized
name|DFSInputStream
operator|.
name|ReadStatistics
name|getReadStatistics
parameter_list|()
block|{
return|return
operator|(
operator|(
name|DFSInputStream
operator|)
name|in
operator|)
operator|.
name|getReadStatistics
argument_list|()
return|;
block|}
block|}
end_class

end_unit

