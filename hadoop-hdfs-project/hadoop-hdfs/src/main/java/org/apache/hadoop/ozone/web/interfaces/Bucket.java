begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.interfaces
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|interfaces
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|exceptions
operator|.
name|OzoneException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_comment
comment|/**  * Bucket Interface acts as the HTTP entry point for  * bucket related functionality.  */
end_comment

begin_interface
annotation|@
name|Path
argument_list|(
literal|"/{volume}/{bucket}"
argument_list|)
DECL|interface|Bucket
specifier|public
interface|interface
name|Bucket
block|{
comment|/**    * createBucket call handles the POST request for Creating a Bucket.    *    * @param volume - Volume name    * @param bucket - Bucket Name    * @param req - Http request    * @param info - Uri Info    * @param headers - Http headers    *    * @return Response    *    * @throws OzoneException    */
annotation|@
name|POST
DECL|method|createBucket (@athParamR) String volume, @PathParam(R) String bucket, @Context Request req, @Context UriInfo info, @Context HttpHeaders headers)
name|Response
name|createBucket
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucket
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|info
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * updateBucket call handles the PUT request for updating a Bucket.    *    * @param volume - Volume name    * @param bucket - Bucket name    * @param req - Http request    * @param info - Uri Info    * @param headers - Http headers    *    * @return Response    *    * @throws OzoneException    */
annotation|@
name|PUT
DECL|method|updateBucket (@athParamR) String volume, @PathParam(R) String bucket, @Context Request req, @Context UriInfo info, @Context HttpHeaders headers)
name|Response
name|updateBucket
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucket
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|info
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * Deletes an empty bucket.    *    * @param volume Volume name    * @param bucket Bucket Name    * @param req - Http request    * @param info - Uri Info    * @param headers - Http headers    *    * @return Response    *    * @throws OzoneException    */
annotation|@
name|DELETE
DECL|method|deleteBucket (@athParamR) String volume, @PathParam(R) String bucket, @Context Request req, @Context UriInfo info, @Context HttpHeaders headers)
name|Response
name|deleteBucket
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucket
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|info
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * List Buckets lists the contents of a bucket.    *    * @param volume - Storage Volume Name    * @param bucket - Bucket Name    * @param info - Information type needed    * @param prefix - Prefix for the keys to be fetched    * @param maxKeys - MaxNumber of Keys to Return    * @param startPage - Continuation Token    * @param req - Http request    * @param headers - Http headers    *    * @return - Json Body    *    * @throws OzoneException    */
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|listBucket (@athParamR) String volume, @PathParam(R) String bucket, @DefaultValue(Header.OZONE_LIST_QUERY_KEY) @QueryParam(R) String info, @QueryParam(R) String prefix, @DefaultValue(R) @QueryParam(R) int maxKeys, @QueryParam(R) String startPage, @Context Request req, @Context UriInfo uriInfo, @Context HttpHeaders headers)
name|Response
name|listBucket
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucket
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_KEY
argument_list|)
annotation|@
name|QueryParam
argument_list|(
literal|"info"
argument_list|)
name|String
name|info
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"prefix"
argument_list|)
name|String
name|prefix
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
literal|"1000"
argument_list|)
annotation|@
name|QueryParam
argument_list|(
literal|"max-keys"
argument_list|)
name|int
name|maxKeys
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"start-page"
argument_list|)
name|String
name|startPage
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
block|}
end_interface

end_unit

