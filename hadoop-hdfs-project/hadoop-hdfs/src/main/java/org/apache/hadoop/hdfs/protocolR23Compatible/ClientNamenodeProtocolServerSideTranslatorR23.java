begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolR23Compatible
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolR23Compatible
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CreateFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileAlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Options
operator|.
name|Rename
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ParentNotDirectoryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|UnresolvedLinkException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AlreadyBeingCreatedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|DatanodeReportType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|SafeModeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
operator|.
name|UpgradeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|NSQuotaExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|NotReplicatedYetException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|SafeModeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|EnumSetWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtocolSignature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * This class is used on the server side. Calls come across the wire for the  * protocol family of Release 23 onwards. This class translates the R23 data  * types to the native data types used inside the NN as specified in the generic  * ClientProtocol.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|ClientNamenodeProtocolServerSideTranslatorR23
specifier|public
class|class
name|ClientNamenodeProtocolServerSideTranslatorR23
implements|implements
name|ClientNamenodeWireProtocol
block|{
DECL|field|server
specifier|final
specifier|private
name|ClientProtocol
name|server
decl_stmt|;
comment|/**    * Constructor    *     * @param server - the NN server    * @throws IOException    */
DECL|method|ClientNamenodeProtocolServerSideTranslatorR23 (ClientProtocol server)
specifier|public
name|ClientNamenodeProtocolServerSideTranslatorR23
parameter_list|(
name|ClientProtocol
name|server
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|server
operator|=
name|server
expr_stmt|;
block|}
comment|/**    * The client side will redirect getProtocolSignature to    * getProtocolSignature2.    *     * However the RPC layer below on the Server side will call getProtocolVersion    * and possibly in the future getProtocolSignature. Hence we still implement    * it even though the end client's call will never reach here.    */
annotation|@
name|Override
DECL|method|getProtocolSignature (String protocol, long clientVersion, int clientMethodsHash)
specifier|public
name|ProtocolSignature
name|getProtocolSignature
parameter_list|(
name|String
name|protocol
parameter_list|,
name|long
name|clientVersion
parameter_list|,
name|int
name|clientMethodsHash
parameter_list|)
throws|throws
name|IOException
block|{
comment|/**      * Don't forward this to the server. The protocol version and signature is      * that of {@link ClientNamenodeProtocol}      *       */
if|if
condition|(
operator|!
name|protocol
operator|.
name|equals
argument_list|(
name|RPC
operator|.
name|getProtocolName
argument_list|(
name|ClientNamenodeWireProtocol
operator|.
name|class
argument_list|)
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Namenode Serverside implements "
operator|+
name|RPC
operator|.
name|getProtocolName
argument_list|(
name|ClientNamenodeWireProtocol
operator|.
name|class
argument_list|)
operator|+
literal|". The following requested protocol is unknown: "
operator|+
name|protocol
argument_list|)
throw|;
block|}
return|return
name|ProtocolSignature
operator|.
name|getProtocolSignature
argument_list|(
name|clientMethodsHash
argument_list|,
name|ClientNamenodeWireProtocol
operator|.
name|versionID
argument_list|,
name|ClientNamenodeWireProtocol
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProtocolSignatureWritable
DECL|method|getProtocolSignature2 ( String protocol, long clientVersion, int clientMethodsHash)
name|getProtocolSignature2
parameter_list|(
name|String
name|protocol
parameter_list|,
name|long
name|clientVersion
parameter_list|,
name|int
name|clientMethodsHash
parameter_list|)
throws|throws
name|IOException
block|{
comment|/**      * Don't forward this to the server. The protocol version and signature is      * that of {@link ClientNamenodeProtocol}      *       */
return|return
name|ProtocolSignatureWritable
operator|.
name|convert
argument_list|(
name|this
operator|.
name|getProtocolSignature
argument_list|(
name|protocol
argument_list|,
name|clientVersion
argument_list|,
name|clientMethodsHash
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getProtocolVersion (String protocol, long clientVersion)
specifier|public
name|long
name|getProtocolVersion
parameter_list|(
name|String
name|protocol
parameter_list|,
name|long
name|clientVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|protocol
operator|.
name|equals
argument_list|(
name|RPC
operator|.
name|getProtocolName
argument_list|(
name|ClientNamenodeWireProtocol
operator|.
name|class
argument_list|)
argument_list|)
condition|)
block|{
return|return
name|ClientNamenodeWireProtocol
operator|.
name|versionID
return|;
block|}
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Namenode Serverside implements "
operator|+
name|RPC
operator|.
name|getProtocolName
argument_list|(
name|ClientNamenodeWireProtocol
operator|.
name|class
argument_list|)
operator|+
literal|". The following requested protocol is unknown: "
operator|+
name|protocol
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getBlockLocations ( String src, long offset, long length)
specifier|public
name|LocatedBlocksWritable
name|getBlockLocations
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|offset
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|LocatedBlocksWritable
operator|.
name|convertLocatedBlocks
argument_list|(
name|server
operator|.
name|getBlockLocations
argument_list|(
name|src
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getServerDefaults ()
specifier|public
name|FsServerDefaultsWritable
name|getServerDefaults
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|FsServerDefaultsWritable
operator|.
name|convert
argument_list|(
name|server
operator|.
name|getServerDefaults
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|create (String src, FsPermissionWritable masked, String clientName, EnumSetWritable<CreateFlag> flag, boolean createParent, short replication, long blockSize)
specifier|public
name|void
name|create
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermissionWritable
name|masked
parameter_list|,
name|String
name|clientName
parameter_list|,
name|EnumSetWritable
argument_list|<
name|CreateFlag
argument_list|>
name|flag
parameter_list|,
name|boolean
name|createParent
parameter_list|,
name|short
name|replication
parameter_list|,
name|long
name|blockSize
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|AlreadyBeingCreatedException
throws|,
name|DSQuotaExceededException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|create
argument_list|(
name|src
argument_list|,
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|masked
argument_list|)
argument_list|,
name|clientName
argument_list|,
name|flag
argument_list|,
name|createParent
argument_list|,
name|replication
argument_list|,
name|blockSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|append (String src, String clientName)
specifier|public
name|LocatedBlockWritable
name|append
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|LocatedBlockWritable
operator|.
name|convertLocatedBlock
argument_list|(
name|server
operator|.
name|append
argument_list|(
name|src
argument_list|,
name|clientName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setReplication (String src, short replication)
specifier|public
name|boolean
name|setReplication
parameter_list|(
name|String
name|src
parameter_list|,
name|short
name|replication
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
name|replication
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setPermission (String src, FsPermissionWritable permission)
specifier|public
name|void
name|setPermission
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermissionWritable
name|permission
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|permission
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setOwner (String src, String username, String groupname)
specifier|public
name|void
name|setOwner
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|groupname
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
name|username
argument_list|,
name|groupname
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|abandonBlock (ExtendedBlockWritable b, String src, String holder)
specifier|public
name|void
name|abandonBlock
parameter_list|(
name|ExtendedBlockWritable
name|b
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|holder
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|abandonBlock
argument_list|(
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|b
argument_list|)
argument_list|,
name|src
argument_list|,
name|holder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addBlock (String src, String clientName, ExtendedBlockWritable previous, DatanodeInfoWritable[] excludeNodes)
specifier|public
name|LocatedBlockWritable
name|addBlock
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|,
name|ExtendedBlockWritable
name|previous
parameter_list|,
name|DatanodeInfoWritable
index|[]
name|excludeNodes
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|NotReplicatedYetException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|LocatedBlockWritable
operator|.
name|convertLocatedBlock
argument_list|(
name|server
operator|.
name|addBlock
argument_list|(
name|src
argument_list|,
name|clientName
argument_list|,
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|previous
argument_list|)
argument_list|,
name|DatanodeInfoWritable
operator|.
name|convertDatanodeInfo
argument_list|(
name|excludeNodes
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAdditionalDatanode (String src, ExtendedBlockWritable blk, DatanodeInfoWritable[] existings, DatanodeInfoWritable[] excludes, int numAdditionalNodes, String clientName)
specifier|public
name|LocatedBlockWritable
name|getAdditionalDatanode
parameter_list|(
name|String
name|src
parameter_list|,
name|ExtendedBlockWritable
name|blk
parameter_list|,
name|DatanodeInfoWritable
index|[]
name|existings
parameter_list|,
name|DatanodeInfoWritable
index|[]
name|excludes
parameter_list|,
name|int
name|numAdditionalNodes
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|LocatedBlockWritable
operator|.
name|convertLocatedBlock
argument_list|(
name|server
operator|.
name|getAdditionalDatanode
argument_list|(
name|src
argument_list|,
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|blk
argument_list|)
argument_list|,
name|DatanodeInfoWritable
operator|.
name|convertDatanodeInfo
argument_list|(
name|existings
argument_list|)
argument_list|,
name|DatanodeInfoWritable
operator|.
name|convertDatanodeInfo
argument_list|(
name|excludes
argument_list|)
argument_list|,
name|numAdditionalNodes
argument_list|,
name|clientName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|complete (String src, String clientName, ExtendedBlockWritable last)
specifier|public
name|boolean
name|complete
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|,
name|ExtendedBlockWritable
name|last
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|complete
argument_list|(
name|src
argument_list|,
name|clientName
argument_list|,
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|last
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|reportBadBlocks (LocatedBlockWritable[] blocks)
specifier|public
name|void
name|reportBadBlocks
parameter_list|(
name|LocatedBlockWritable
index|[]
name|blocks
parameter_list|)
throws|throws
name|IOException
block|{
name|server
operator|.
name|reportBadBlocks
argument_list|(
name|LocatedBlockWritable
operator|.
name|convertLocatedBlock
argument_list|(
name|blocks
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|rename (String src, String dst)
specifier|public
name|boolean
name|rename
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|)
throws|throws
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|rename
argument_list|(
name|src
argument_list|,
name|dst
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|concat (String trg, String[] srcs)
specifier|public
name|void
name|concat
parameter_list|(
name|String
name|trg
parameter_list|,
name|String
index|[]
name|srcs
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnresolvedLinkException
block|{
name|server
operator|.
name|concat
argument_list|(
name|trg
argument_list|,
name|srcs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|rename2 (String src, String dst, Rename... options)
specifier|public
name|void
name|rename2
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|,
name|Rename
modifier|...
name|options
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|DSQuotaExceededException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|rename2
argument_list|(
name|src
argument_list|,
name|dst
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|delete (String src, boolean recursive)
specifier|public
name|boolean
name|delete
parameter_list|(
name|String
name|src
parameter_list|,
name|boolean
name|recursive
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|delete
argument_list|(
name|src
argument_list|,
name|recursive
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|mkdirs (String src, FsPermissionWritable masked, boolean createParent)
specifier|public
name|boolean
name|mkdirs
parameter_list|(
name|String
name|src
parameter_list|,
name|FsPermissionWritable
name|masked
parameter_list|,
name|boolean
name|createParent
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|NSQuotaExceededException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|mkdirs
argument_list|(
name|src
argument_list|,
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|masked
argument_list|)
argument_list|,
name|createParent
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getListing (String src, byte[] startAfter, boolean needLocation)
specifier|public
name|DirectoryListingWritable
name|getListing
parameter_list|(
name|String
name|src
parameter_list|,
name|byte
index|[]
name|startAfter
parameter_list|,
name|boolean
name|needLocation
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|DirectoryListingWritable
operator|.
name|convertDirectoryListing
argument_list|(
name|server
operator|.
name|getListing
argument_list|(
name|src
argument_list|,
name|startAfter
argument_list|,
name|needLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|renewLease (String clientName)
specifier|public
name|void
name|renewLease
parameter_list|(
name|String
name|clientName
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
name|server
operator|.
name|renewLease
argument_list|(
name|clientName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|recoverLease (String src, String clientName)
specifier|public
name|boolean
name|recoverLease
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|server
operator|.
name|recoverLease
argument_list|(
name|src
argument_list|,
name|clientName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getStats ()
specifier|public
name|long
index|[]
name|getStats
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|server
operator|.
name|getStats
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getDatanodeReport (DatanodeReportType type)
specifier|public
name|DatanodeInfoWritable
index|[]
name|getDatanodeReport
parameter_list|(
name|DatanodeReportType
name|type
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|DatanodeInfoWritable
operator|.
name|convertDatanodeInfo
argument_list|(
name|server
operator|.
name|getDatanodeReport
argument_list|(
name|type
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPreferredBlockSize (String filename)
specifier|public
name|long
name|getPreferredBlockSize
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnresolvedLinkException
block|{
return|return
name|server
operator|.
name|getPreferredBlockSize
argument_list|(
name|filename
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setSafeMode (SafeModeAction action)
specifier|public
name|boolean
name|setSafeMode
parameter_list|(
name|SafeModeAction
name|action
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|server
operator|.
name|setSafeMode
argument_list|(
name|action
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|saveNamespace ()
specifier|public
name|void
name|saveNamespace
parameter_list|()
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
name|server
operator|.
name|saveNamespace
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|restoreFailedStorage (String arg)
specifier|public
name|boolean
name|restoreFailedStorage
parameter_list|(
name|String
name|arg
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|restoreFailedStorage
argument_list|(
name|arg
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|refreshNodes ()
specifier|public
name|void
name|refreshNodes
parameter_list|()
throws|throws
name|IOException
block|{
name|server
operator|.
name|refreshNodes
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|finalizeUpgrade ()
specifier|public
name|void
name|finalizeUpgrade
parameter_list|()
throws|throws
name|IOException
block|{
name|server
operator|.
name|finalizeUpgrade
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|distributedUpgradeProgress (UpgradeAction action)
specifier|public
name|UpgradeStatusReportWritable
name|distributedUpgradeProgress
parameter_list|(
name|UpgradeAction
name|action
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|UpgradeStatusReportWritable
operator|.
name|convert
argument_list|(
name|server
operator|.
name|distributedUpgradeProgress
argument_list|(
name|action
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|listCorruptFileBlocks (String path, String cookie)
specifier|public
name|CorruptFileBlocksWritable
name|listCorruptFileBlocks
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|cookie
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|CorruptFileBlocksWritable
operator|.
name|convertCorruptFilesBlocks
argument_list|(
name|server
operator|.
name|listCorruptFileBlocks
argument_list|(
name|path
argument_list|,
name|cookie
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|metaSave (String filename)
specifier|public
name|void
name|metaSave
parameter_list|(
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|server
operator|.
name|metaSave
argument_list|(
name|filename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFileInfo (String src)
specifier|public
name|HdfsFileStatusWritable
name|getFileInfo
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|HdfsFileStatusWritable
operator|.
name|convertHdfsFileStatus
argument_list|(
name|server
operator|.
name|getFileInfo
argument_list|(
name|src
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getFileLinkInfo (String src)
specifier|public
name|HdfsFileStatusWritable
name|getFileLinkInfo
parameter_list|(
name|String
name|src
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|HdfsFileStatusWritable
operator|.
name|convertHdfsFileStatus
argument_list|(
name|server
operator|.
name|getFileLinkInfo
argument_list|(
name|src
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContentSummary (String path)
specifier|public
name|ContentSummaryWritable
name|getContentSummary
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
return|return
name|ContentSummaryWritable
operator|.
name|convert
argument_list|(
name|server
operator|.
name|getContentSummary
argument_list|(
name|path
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setQuota (String path, long namespaceQuota, long diskspaceQuota)
specifier|public
name|void
name|setQuota
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|namespaceQuota
parameter_list|,
name|long
name|diskspaceQuota
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|setQuota
argument_list|(
name|path
argument_list|,
name|namespaceQuota
argument_list|,
name|diskspaceQuota
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fsync (String src, String client)
specifier|public
name|void
name|fsync
parameter_list|(
name|String
name|src
parameter_list|,
name|String
name|client
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|fsync
argument_list|(
name|src
argument_list|,
name|client
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setTimes (String src, long mtime, long atime)
specifier|public
name|void
name|setTimes
parameter_list|(
name|String
name|src
parameter_list|,
name|long
name|mtime
parameter_list|,
name|long
name|atime
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
name|mtime
argument_list|,
name|atime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createSymlink (String target, String link, FsPermissionWritable dirPerm, boolean createParent)
specifier|public
name|void
name|createSymlink
parameter_list|(
name|String
name|target
parameter_list|,
name|String
name|link
parameter_list|,
name|FsPermissionWritable
name|dirPerm
parameter_list|,
name|boolean
name|createParent
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileAlreadyExistsException
throws|,
name|FileNotFoundException
throws|,
name|ParentNotDirectoryException
throws|,
name|SafeModeException
throws|,
name|UnresolvedLinkException
throws|,
name|IOException
block|{
name|server
operator|.
name|createSymlink
argument_list|(
name|target
argument_list|,
name|link
argument_list|,
name|FsPermissionWritable
operator|.
name|convertPermission
argument_list|(
name|dirPerm
argument_list|)
argument_list|,
name|createParent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLinkTarget (String path)
specifier|public
name|String
name|getLinkTarget
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|AccessControlException
throws|,
name|FileNotFoundException
throws|,
name|IOException
block|{
return|return
name|server
operator|.
name|getLinkTarget
argument_list|(
name|path
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateBlockForPipeline (ExtendedBlockWritable block, String clientName)
specifier|public
name|LocatedBlockWritable
name|updateBlockForPipeline
parameter_list|(
name|ExtendedBlockWritable
name|block
parameter_list|,
name|String
name|clientName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|LocatedBlockWritable
operator|.
name|convertLocatedBlock
argument_list|(
name|server
operator|.
name|updateBlockForPipeline
argument_list|(
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|block
argument_list|)
argument_list|,
name|clientName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updatePipeline (String clientName, ExtendedBlockWritable oldBlock, ExtendedBlockWritable newBlock, DatanodeIDWritable[] newNodes)
specifier|public
name|void
name|updatePipeline
parameter_list|(
name|String
name|clientName
parameter_list|,
name|ExtendedBlockWritable
name|oldBlock
parameter_list|,
name|ExtendedBlockWritable
name|newBlock
parameter_list|,
name|DatanodeIDWritable
index|[]
name|newNodes
parameter_list|)
throws|throws
name|IOException
block|{
name|server
operator|.
name|updatePipeline
argument_list|(
name|clientName
argument_list|,
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|oldBlock
argument_list|)
argument_list|,
name|ExtendedBlockWritable
operator|.
name|convertExtendedBlock
argument_list|(
name|newBlock
argument_list|)
argument_list|,
name|DatanodeIDWritable
operator|.
name|convertDatanodeID
argument_list|(
name|newNodes
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDelegationToken (Text renewer)
specifier|public
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|getDelegationToken
parameter_list|(
name|Text
name|renewer
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|server
operator|.
name|getDelegationToken
argument_list|(
name|renewer
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|renewDelegationToken (Token<DelegationTokenIdentifier> token)
specifier|public
name|long
name|renewDelegationToken
parameter_list|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|server
operator|.
name|renewDelegationToken
argument_list|(
name|token
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|cancelDelegationToken (Token<DelegationTokenIdentifier> token)
specifier|public
name|void
name|cancelDelegationToken
parameter_list|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|server
operator|.
name|cancelDelegationToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setBalancerBandwidth (long bandwidth)
specifier|public
name|void
name|setBalancerBandwidth
parameter_list|(
name|long
name|bandwidth
parameter_list|)
throws|throws
name|IOException
block|{
name|server
operator|.
name|setBalancerBandwidth
argument_list|(
name|bandwidth
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

