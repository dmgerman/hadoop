begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|CallerContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_comment
comment|/**  * This class provides an interface for Namenode and Router to Audit events  * information. This class can be extended and can be used when no access logger  * is defined in the config file.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|DefaultAuditLogger
specifier|public
specifier|abstract
class|class
name|DefaultAuditLogger
extends|extends
name|HdfsAuditLogger
block|{
DECL|field|STRING_BUILDER
specifier|protected
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|StringBuilder
argument_list|>
name|STRING_BUILDER
init|=
operator|new
name|ThreadLocal
argument_list|<
name|StringBuilder
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|StringBuilder
name|initialValue
parameter_list|()
block|{
return|return
operator|new
name|StringBuilder
argument_list|()
return|;
block|}
block|}
decl_stmt|;
DECL|field|isCallerContextEnabled
specifier|protected
specifier|volatile
name|boolean
name|isCallerContextEnabled
decl_stmt|;
comment|/** The maximum bytes a caller context string can have. */
DECL|field|callerContextMaxLen
specifier|protected
name|int
name|callerContextMaxLen
decl_stmt|;
DECL|field|callerSignatureMaxLen
specifier|protected
name|int
name|callerSignatureMaxLen
decl_stmt|;
comment|/** adds a tracking ID for all audit log events. */
DECL|field|logTokenTrackingId
specifier|protected
name|boolean
name|logTokenTrackingId
decl_stmt|;
comment|/** List of commands to provide debug messages. */
DECL|field|debugCmdSet
specifier|protected
name|Set
argument_list|<
name|String
argument_list|>
name|debugCmdSet
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**    * Enable or disable CallerContext.    *    * @param value true, enable CallerContext, otherwise false to disable it.    */
DECL|method|setCallerContextEnabled (final boolean value)
name|void
name|setCallerContextEnabled
parameter_list|(
specifier|final
name|boolean
name|value
parameter_list|)
block|{
name|isCallerContextEnabled
operator|=
name|value
expr_stmt|;
block|}
comment|/**    * Get the value indicating if CallerContext is enabled.    *    * @return true, if CallerContext is enabled, otherwise false, if it's    *         disabled.    */
DECL|method|getCallerContextEnabled ()
name|boolean
name|getCallerContextEnabled
parameter_list|()
block|{
return|return
name|isCallerContextEnabled
return|;
block|}
DECL|method|initialize (Configuration conf)
specifier|public
specifier|abstract
name|void
name|initialize
parameter_list|(
name|Configuration
name|conf
parameter_list|)
function_decl|;
DECL|method|logAuditMessage (String message)
specifier|public
specifier|abstract
name|void
name|logAuditMessage
parameter_list|(
name|String
name|message
parameter_list|)
function_decl|;
DECL|method|logAuditEvent (boolean succeeded, String userName, InetAddress addr, String cmd, String src, String dst, FileStatus status, UserGroupInformation ugi, DelegationTokenSecretManager dtSecretManager)
specifier|public
specifier|abstract
name|void
name|logAuditEvent
parameter_list|(
name|boolean
name|succeeded
parameter_list|,
name|String
name|userName
parameter_list|,
name|InetAddress
name|addr
parameter_list|,
name|String
name|cmd
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|,
name|FileStatus
name|status
parameter_list|,
name|UserGroupInformation
name|ugi
parameter_list|,
name|DelegationTokenSecretManager
name|dtSecretManager
parameter_list|)
function_decl|;
DECL|method|logAuditEvent (boolean succeeded, String userName, InetAddress addr, String cmd, String src, String dst, FileStatus status, CallerContext callerContext, UserGroupInformation ugi, DelegationTokenSecretManager dtSecretManager)
specifier|public
specifier|abstract
name|void
name|logAuditEvent
parameter_list|(
name|boolean
name|succeeded
parameter_list|,
name|String
name|userName
parameter_list|,
name|InetAddress
name|addr
parameter_list|,
name|String
name|cmd
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|dst
parameter_list|,
name|FileStatus
name|status
parameter_list|,
name|CallerContext
name|callerContext
parameter_list|,
name|UserGroupInformation
name|ugi
parameter_list|,
name|DelegationTokenSecretManager
name|dtSecretManager
parameter_list|)
function_decl|;
block|}
end_class

end_unit

