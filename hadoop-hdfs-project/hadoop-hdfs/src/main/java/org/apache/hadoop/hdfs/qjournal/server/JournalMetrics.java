begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.qjournal.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|qjournal
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableQuantiles
import|;
end_import

begin_comment
comment|/**  * The server-side metrics for a journal from the JournalNode's  * perspective.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"Journal metrics"
argument_list|,
name|context
operator|=
literal|"dfs"
argument_list|)
DECL|class|JournalMetrics
class|class
name|JournalMetrics
block|{
DECL|field|registry
specifier|final
name|MetricsRegistry
name|registry
init|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"JournalNode"
argument_list|)
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Number of batches written since startup"
argument_list|)
DECL|field|batchesWritten
name|MutableCounterLong
name|batchesWritten
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Number of txns written since startup"
argument_list|)
DECL|field|txnsWritten
name|MutableCounterLong
name|txnsWritten
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Number of bytes written since startup"
argument_list|)
DECL|field|bytesWritten
name|MutableCounterLong
name|bytesWritten
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Number of batches written where this node was lagging"
argument_list|)
DECL|field|batchesWrittenWhileLagging
name|MutableCounterLong
name|batchesWrittenWhileLagging
decl_stmt|;
DECL|field|QUANTILE_INTERVALS
specifier|private
specifier|final
name|int
index|[]
name|QUANTILE_INTERVALS
init|=
operator|new
name|int
index|[]
block|{
literal|1
operator|*
literal|60
block|,
comment|// 1m
literal|5
operator|*
literal|60
block|,
comment|// 5m
literal|60
operator|*
literal|60
comment|// 1h
block|}
decl_stmt|;
DECL|field|syncsQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|syncsQuantiles
decl_stmt|;
DECL|field|journal
specifier|private
specifier|final
name|Journal
name|journal
decl_stmt|;
DECL|method|JournalMetrics (Journal journal)
name|JournalMetrics
parameter_list|(
name|Journal
name|journal
parameter_list|)
block|{
name|this
operator|.
name|journal
operator|=
name|journal
expr_stmt|;
name|syncsQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|QUANTILE_INTERVALS
operator|.
name|length
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|syncsQuantiles
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|int
name|interval
init|=
name|QUANTILE_INTERVALS
index|[
name|i
index|]
decl_stmt|;
name|syncsQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"syncs"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Journal sync time"
argument_list|,
literal|"ops"
argument_list|,
literal|"latencyMicros"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|create (Journal j)
specifier|public
specifier|static
name|JournalMetrics
name|create
parameter_list|(
name|Journal
name|j
parameter_list|)
block|{
name|JournalMetrics
name|m
init|=
operator|new
name|JournalMetrics
argument_list|(
name|j
argument_list|)
decl_stmt|;
return|return
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
operator|.
name|register
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|m
argument_list|)
return|;
block|}
DECL|method|getName ()
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"Journal-"
operator|+
name|journal
operator|.
name|getJournalId
argument_list|()
return|;
block|}
annotation|@
name|Metric
argument_list|(
literal|"Current writer's epoch"
argument_list|)
DECL|method|getLastWriterEpoch ()
specifier|public
name|long
name|getLastWriterEpoch
parameter_list|()
block|{
try|try
block|{
return|return
name|journal
operator|.
name|getLastWriterEpoch
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
operator|-
literal|1L
return|;
block|}
block|}
annotation|@
name|Metric
argument_list|(
literal|"Last accepted epoch"
argument_list|)
DECL|method|getLastPromisedEpoch ()
specifier|public
name|long
name|getLastPromisedEpoch
parameter_list|()
block|{
try|try
block|{
return|return
name|journal
operator|.
name|getLastPromisedEpoch
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
operator|-
literal|1L
return|;
block|}
block|}
annotation|@
name|Metric
argument_list|(
literal|"The highest txid stored on this JN"
argument_list|)
DECL|method|getLastWrittenTxId ()
specifier|public
name|long
name|getLastWrittenTxId
parameter_list|()
block|{
return|return
name|journal
operator|.
name|getHighestWrittenTxId
argument_list|()
return|;
block|}
annotation|@
name|Metric
argument_list|(
literal|"Number of transactions that this JN is lagging"
argument_list|)
DECL|method|getCurrentLagTxns ()
specifier|public
name|long
name|getCurrentLagTxns
parameter_list|()
block|{
try|try
block|{
return|return
name|journal
operator|.
name|getCurrentLagTxns
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
operator|-
literal|1L
return|;
block|}
block|}
DECL|method|addSync (long us)
name|void
name|addSync
parameter_list|(
name|long
name|us
parameter_list|)
block|{
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|syncsQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|us
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

