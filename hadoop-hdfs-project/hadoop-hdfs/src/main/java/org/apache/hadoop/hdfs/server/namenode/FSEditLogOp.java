begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|CheckedInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|Checksum
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ChecksumException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Options
operator|.
name|Rename
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|PermissionStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|Block
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LayoutVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LayoutVersion
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|DatanodeDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
operator|.
name|GenerationStamp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|PureJavaCrc32
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|FSEditLogOpCodes
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataOutputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|ArrayWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DeprecatedUTF8
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_comment
comment|/**  * Helper classes for reading the ops from an InputStream.  * All ops derive from FSEditLogOp and are only  * instantiated from Reader#readOp()  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|FSEditLogOp
specifier|public
specifier|abstract
class|class
name|FSEditLogOp
block|{
DECL|field|opCode
specifier|final
name|FSEditLogOpCodes
name|opCode
decl_stmt|;
DECL|field|txid
name|long
name|txid
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|field|opInstances
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|EnumMap
argument_list|<
name|FSEditLogOpCodes
argument_list|,
name|FSEditLogOp
argument_list|>
argument_list|>
name|opInstances
init|=
operator|new
name|ThreadLocal
argument_list|<
name|EnumMap
argument_list|<
name|FSEditLogOpCodes
argument_list|,
name|FSEditLogOp
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|EnumMap
argument_list|<
name|FSEditLogOpCodes
argument_list|,
name|FSEditLogOp
argument_list|>
name|initialValue
parameter_list|()
block|{
name|EnumMap
argument_list|<
name|FSEditLogOpCodes
argument_list|,
name|FSEditLogOp
argument_list|>
name|instances
init|=
operator|new
name|EnumMap
argument_list|<
name|FSEditLogOpCodes
argument_list|,
name|FSEditLogOp
argument_list|>
argument_list|(
name|FSEditLogOpCodes
operator|.
name|class
argument_list|)
decl_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_ADD
argument_list|,
operator|new
name|AddOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_CLOSE
argument_list|,
operator|new
name|CloseOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_REPLICATION
argument_list|,
operator|new
name|SetReplicationOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_CONCAT_DELETE
argument_list|,
operator|new
name|ConcatDeleteOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_RENAME_OLD
argument_list|,
operator|new
name|RenameOldOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_DELETE
argument_list|,
operator|new
name|DeleteOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_MKDIR
argument_list|,
operator|new
name|MkdirOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_GENSTAMP
argument_list|,
operator|new
name|SetGenstampOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_DATANODE_ADD
argument_list|,
operator|new
name|DatanodeAddOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_DATANODE_REMOVE
argument_list|,
operator|new
name|DatanodeRemoveOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_PERMISSIONS
argument_list|,
operator|new
name|SetPermissionsOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_OWNER
argument_list|,
operator|new
name|SetOwnerOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_NS_QUOTA
argument_list|,
operator|new
name|SetNSQuotaOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_CLEAR_NS_QUOTA
argument_list|,
operator|new
name|ClearNSQuotaOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SET_QUOTA
argument_list|,
operator|new
name|SetQuotaOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_TIMES
argument_list|,
operator|new
name|TimesOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_SYMLINK
argument_list|,
operator|new
name|SymlinkOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_RENAME
argument_list|,
operator|new
name|RenameOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_REASSIGN_LEASE
argument_list|,
operator|new
name|ReassignLeaseOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_GET_DELEGATION_TOKEN
argument_list|,
operator|new
name|GetDelegationTokenOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_RENEW_DELEGATION_TOKEN
argument_list|,
operator|new
name|RenewDelegationTokenOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_CANCEL_DELEGATION_TOKEN
argument_list|,
operator|new
name|CancelDelegationTokenOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_UPDATE_MASTER_KEY
argument_list|,
operator|new
name|UpdateMasterKeyOp
argument_list|()
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_START_LOG_SEGMENT
argument_list|,
operator|new
name|LogSegmentOp
argument_list|(
name|OP_START_LOG_SEGMENT
argument_list|)
argument_list|)
expr_stmt|;
name|instances
operator|.
name|put
argument_list|(
name|OP_END_LOG_SEGMENT
argument_list|,
operator|new
name|LogSegmentOp
argument_list|(
name|OP_END_LOG_SEGMENT
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|instances
return|;
block|}
block|}
decl_stmt|;
comment|/**    * Constructor for an EditLog Op. EditLog ops cannot be constructed    * directly, but only through Reader#readOp.    */
DECL|method|FSEditLogOp (FSEditLogOpCodes opCode)
specifier|private
name|FSEditLogOp
parameter_list|(
name|FSEditLogOpCodes
name|opCode
parameter_list|)
block|{
name|this
operator|.
name|opCode
operator|=
name|opCode
expr_stmt|;
name|this
operator|.
name|txid
operator|=
literal|0
expr_stmt|;
block|}
DECL|method|getTransactionId ()
specifier|public
name|long
name|getTransactionId
parameter_list|()
block|{
return|return
name|txid
return|;
block|}
DECL|method|setTransactionId (long txid)
specifier|public
name|void
name|setTransactionId
parameter_list|(
name|long
name|txid
parameter_list|)
block|{
name|this
operator|.
name|txid
operator|=
name|txid
expr_stmt|;
block|}
DECL|method|readFields (DataInputStream in, int logVersion)
specifier|abstract
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
function_decl|;
DECL|method|writeFields (DataOutputStream out)
specifier|abstract
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|class|AddCloseOp
specifier|static
specifier|abstract
class|class
name|AddCloseOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|replication
name|short
name|replication
decl_stmt|;
DECL|field|mtime
name|long
name|mtime
decl_stmt|;
DECL|field|atime
name|long
name|atime
decl_stmt|;
DECL|field|blockSize
name|long
name|blockSize
decl_stmt|;
DECL|field|blocks
name|Block
index|[]
name|blocks
decl_stmt|;
DECL|field|permissions
name|PermissionStatus
name|permissions
decl_stmt|;
DECL|field|clientName
name|String
name|clientName
decl_stmt|;
DECL|field|clientMachine
name|String
name|clientMachine
decl_stmt|;
comment|//final DatanodeDescriptor[] dataNodeDescriptors; UNUSED
DECL|method|AddCloseOp (FSEditLogOpCodes opCode)
specifier|private
name|AddCloseOp
parameter_list|(
name|FSEditLogOpCodes
name|opCode
parameter_list|)
block|{
name|super
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
assert|assert
operator|(
name|opCode
operator|==
name|OP_ADD
operator|||
name|opCode
operator|==
name|OP_CLOSE
operator|)
assert|;
block|}
DECL|method|setPath (String path)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setReplication (short replication)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setReplication
parameter_list|(
name|short
name|replication
parameter_list|)
block|{
name|this
operator|.
name|replication
operator|=
name|replication
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setModificationTime (long mtime)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setModificationTime
parameter_list|(
name|long
name|mtime
parameter_list|)
block|{
name|this
operator|.
name|mtime
operator|=
name|mtime
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setAccessTime (long atime)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setAccessTime
parameter_list|(
name|long
name|atime
parameter_list|)
block|{
name|this
operator|.
name|atime
operator|=
name|atime
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setBlockSize (long blockSize)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setBlockSize
parameter_list|(
name|long
name|blockSize
parameter_list|)
block|{
name|this
operator|.
name|blockSize
operator|=
name|blockSize
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setBlocks (Block[] blocks)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setBlocks
parameter_list|(
name|Block
index|[]
name|blocks
parameter_list|)
block|{
name|this
operator|.
name|blocks
operator|=
name|blocks
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setPermissionStatus (PermissionStatus permissions)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setPermissionStatus
parameter_list|(
name|PermissionStatus
name|permissions
parameter_list|)
block|{
name|this
operator|.
name|permissions
operator|=
name|permissions
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setClientName (String clientName)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setClientName
parameter_list|(
name|String
name|clientName
parameter_list|)
block|{
name|this
operator|.
name|clientName
operator|=
name|clientName
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
DECL|method|setClientMachine (String clientMachine)
parameter_list|<
name|T
extends|extends
name|AddCloseOp
parameter_list|>
name|T
name|setClientMachine
parameter_list|(
name|String
name|clientMachine
parameter_list|)
block|{
name|this
operator|.
name|clientMachine
operator|=
name|clientMachine
expr_stmt|;
return|return
operator|(
name|T
operator|)
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeShort
argument_list|(
name|replication
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|mtime
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|atime
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|blockSize
argument_list|,
name|out
argument_list|)
expr_stmt|;
operator|new
name|ArrayWritable
argument_list|(
name|Block
operator|.
name|class
argument_list|,
name|blocks
argument_list|)
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|permissions
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|opCode
operator|==
name|OP_ADD
condition|)
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|clientName
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|clientMachine
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
comment|// versions> 0 support per file replication
comment|// get name and replication
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|-
literal|7
operator|==
name|logVersion
operator|&&
name|length
operator|!=
literal|3
operator|||
operator|-
literal|17
operator|<
name|logVersion
operator|&&
name|logVersion
operator|<
operator|-
literal|7
operator|&&
name|length
operator|!=
literal|4
operator|||
operator|(
name|logVersion
operator|<=
operator|-
literal|17
operator|&&
name|length
operator|!=
literal|5
operator|&&
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format."
operator|+
literal|" logVersion is "
operator|+
name|logVersion
operator|+
literal|" but writables.length is "
operator|+
name|length
operator|+
literal|". "
argument_list|)
throw|;
block|}
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|replication
operator|=
name|FSImageSerialization
operator|.
name|readShort
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|mtime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|replication
operator|=
name|readShort
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|mtime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|FILE_ACCESS_TIME
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|atime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|atime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|this
operator|.
name|atime
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|logVersion
operator|<
operator|-
literal|7
condition|)
block|{
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|blockSize
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|blockSize
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|this
operator|.
name|blockSize
operator|=
literal|0
expr_stmt|;
block|}
comment|// get blocks
name|this
operator|.
name|blocks
operator|=
name|readBlocks
argument_list|(
name|in
argument_list|,
name|logVersion
argument_list|)
expr_stmt|;
if|if
condition|(
name|logVersion
operator|<=
operator|-
literal|11
condition|)
block|{
name|this
operator|.
name|permissions
operator|=
name|PermissionStatus
operator|.
name|read
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|permissions
operator|=
literal|null
expr_stmt|;
block|}
comment|// clientname, clientMachine and block locations of last block.
if|if
condition|(
name|this
operator|.
name|opCode
operator|==
name|OP_ADD
operator|&&
name|logVersion
operator|<=
operator|-
literal|12
condition|)
block|{
name|this
operator|.
name|clientName
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|clientMachine
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
operator|-
literal|13
operator|<=
name|logVersion
condition|)
block|{
name|readDatanodeDescriptorArray
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|this
operator|.
name|clientName
operator|=
literal|""
expr_stmt|;
name|this
operator|.
name|clientMachine
operator|=
literal|""
expr_stmt|;
block|}
block|}
comment|/** This method is defined for compatibility reason. */
DECL|method|readDatanodeDescriptorArray (DataInput in)
specifier|private
specifier|static
name|DatanodeDescriptor
index|[]
name|readDatanodeDescriptorArray
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|DatanodeDescriptor
index|[]
name|locations
init|=
operator|new
name|DatanodeDescriptor
index|[
name|in
operator|.
name|readInt
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|locations
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|locations
index|[
name|i
index|]
operator|=
operator|new
name|DatanodeDescriptor
argument_list|()
expr_stmt|;
name|locations
index|[
name|i
index|]
operator|.
name|readFieldsFromFSEditLog
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|return
name|locations
return|;
block|}
DECL|method|readBlocks ( DataInputStream in, int logVersion)
specifier|private
specifier|static
name|Block
index|[]
name|readBlocks
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|numBlocks
init|=
name|in
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|Block
index|[]
name|blocks
init|=
operator|new
name|Block
index|[
name|numBlocks
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numBlocks
condition|;
name|i
operator|++
control|)
block|{
name|Block
name|blk
init|=
operator|new
name|Block
argument_list|()
decl_stmt|;
if|if
condition|(
name|logVersion
operator|<=
operator|-
literal|14
condition|)
block|{
name|blk
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BlockTwo
name|oldblk
init|=
operator|new
name|BlockTwo
argument_list|()
decl_stmt|;
name|oldblk
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|blk
operator|.
name|set
argument_list|(
name|oldblk
operator|.
name|blkid
argument_list|,
name|oldblk
operator|.
name|len
argument_list|,
name|GenerationStamp
operator|.
name|GRANDFATHER_GENERATION_STAMP
argument_list|)
expr_stmt|;
block|}
name|blocks
index|[
name|i
index|]
operator|=
name|blk
expr_stmt|;
block|}
return|return
name|blocks
return|;
block|}
DECL|method|stringifyMembers ()
specifier|public
name|String
name|stringifyMembers
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"[length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", replication="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|replication
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", mtime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|mtime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", atime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|atime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", blockSize="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|blockSize
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", blocks="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|Arrays
operator|.
name|toString
argument_list|(
name|blocks
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", permissions="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|permissions
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", clientName="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|clientName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", clientMachine="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|clientMachine
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|AddOp
specifier|static
class|class
name|AddOp
extends|extends
name|AddCloseOp
block|{
DECL|method|AddOp ()
specifier|private
name|AddOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_ADD
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|AddOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|AddOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_ADD
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"AddOp "
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|stringifyMembers
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|CloseOp
specifier|static
class|class
name|CloseOp
extends|extends
name|AddCloseOp
block|{
DECL|method|CloseOp ()
specifier|private
name|CloseOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_CLOSE
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|CloseOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|CloseOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_CLOSE
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"CloseOp "
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|stringifyMembers
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetReplicationOp
specifier|static
class|class
name|SetReplicationOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|replication
name|short
name|replication
decl_stmt|;
DECL|method|SetReplicationOp ()
specifier|private
name|SetReplicationOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_REPLICATION
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetReplicationOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetReplicationOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_REPLICATION
argument_list|)
return|;
block|}
DECL|method|setPath (String path)
name|SetReplicationOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setReplication (short replication)
name|SetReplicationOp
name|setReplication
parameter_list|(
name|short
name|replication
parameter_list|)
block|{
name|this
operator|.
name|replication
operator|=
name|replication
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeShort
argument_list|(
name|replication
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|replication
operator|=
name|FSImageSerialization
operator|.
name|readShort
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|replication
operator|=
name|readShort
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetReplicationOp [path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", replication="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|replication
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|ConcatDeleteOp
specifier|static
class|class
name|ConcatDeleteOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|trg
name|String
name|trg
decl_stmt|;
DECL|field|srcs
name|String
index|[]
name|srcs
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|method|ConcatDeleteOp ()
specifier|private
name|ConcatDeleteOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_CONCAT_DELETE
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|ConcatDeleteOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|ConcatDeleteOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_CONCAT_DELETE
argument_list|)
return|;
block|}
DECL|method|setTarget (String trg)
name|ConcatDeleteOp
name|setTarget
parameter_list|(
name|String
name|trg
parameter_list|)
block|{
name|this
operator|.
name|trg
operator|=
name|trg
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setSources (String[] srcs)
name|ConcatDeleteOp
name|setSources
parameter_list|(
name|String
index|[]
name|srcs
parameter_list|)
block|{
name|this
operator|.
name|srcs
operator|=
name|srcs
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTimestamp (long timestamp)
name|ConcatDeleteOp
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|trg
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|DeprecatedUTF8
name|info
index|[]
init|=
operator|new
name|DeprecatedUTF8
index|[
name|srcs
operator|.
name|length
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|srcs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|info
index|[
name|idx
operator|++
index|]
operator|=
operator|new
name|DeprecatedUTF8
argument_list|(
name|srcs
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
operator|new
name|ArrayWritable
argument_list|(
name|DeprecatedUTF8
operator|.
name|class
argument_list|,
name|info
argument_list|)
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|length
operator|<
literal|3
condition|)
block|{
comment|// trg, srcs.., timestamp
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"Concat delete operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|trg
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|int
name|srcSize
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|srcSize
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|srcSize
operator|=
name|this
operator|.
name|length
operator|-
literal|1
operator|-
literal|1
expr_stmt|;
comment|// trg and timestamp
block|}
name|this
operator|.
name|srcs
operator|=
operator|new
name|String
index|[
name|srcSize
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|srcSize
condition|;
name|i
operator|++
control|)
block|{
name|srcs
index|[
name|i
index|]
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|timestamp
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"ConcatDeleteOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", trg="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|trg
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", srcs="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|Arrays
operator|.
name|toString
argument_list|(
name|srcs
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|RenameOldOp
specifier|static
class|class
name|RenameOldOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|dst
name|String
name|dst
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|method|RenameOldOp ()
specifier|private
name|RenameOldOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_RENAME_OLD
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|RenameOldOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|RenameOldOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_RENAME_OLD
argument_list|)
return|;
block|}
DECL|method|setSource (String src)
name|RenameOldOp
name|setSource
parameter_list|(
name|String
name|src
parameter_list|)
block|{
name|this
operator|.
name|src
operator|=
name|src
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDestination (String dst)
name|RenameOldOp
name|setDestination
parameter_list|(
name|String
name|dst
parameter_list|)
block|{
name|this
operator|.
name|dst
operator|=
name|dst
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTimestamp (long timestamp)
name|RenameOldOp
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|src
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|dst
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|length
operator|!=
literal|3
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"Old rename operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|dst
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|timestamp
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"RenameOldOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", dst="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|dst
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|DeleteOp
specifier|static
class|class
name|DeleteOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|method|DeleteOp ()
specifier|private
name|DeleteOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_DELETE
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|DeleteOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|DeleteOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_DELETE
argument_list|)
return|;
block|}
DECL|method|setPath (String path)
name|DeleteOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTimestamp (long timestamp)
name|DeleteOp
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|length
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"delete operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|timestamp
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"DeleteOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|MkdirOp
specifier|static
class|class
name|MkdirOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|field|permissions
name|PermissionStatus
name|permissions
decl_stmt|;
DECL|method|MkdirOp ()
specifier|private
name|MkdirOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_MKDIR
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|MkdirOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|MkdirOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_MKDIR
argument_list|)
return|;
block|}
DECL|method|setPath (String path)
name|MkdirOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTimestamp (long timestamp)
name|MkdirOp
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setPermissionStatus (PermissionStatus permissions)
name|MkdirOp
name|setPermissionStatus
parameter_list|(
name|PermissionStatus
name|permissions
parameter_list|)
block|{
name|this
operator|.
name|permissions
operator|=
name|permissions
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
comment|// mtime
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
comment|// atime, unused at this
name|permissions
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|-
literal|17
operator|<
name|logVersion
operator|&&
name|length
operator|!=
literal|2
operator|||
name|logVersion
operator|<=
operator|-
literal|17
operator|&&
name|length
operator|!=
literal|3
operator|&&
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"Mkdir operation."
argument_list|)
throw|;
block|}
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|timestamp
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|// The disk format stores atimes for directories as well.
comment|// However, currently this is not being updated/used because of
comment|// performance reasons.
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|FILE_ACCESS_TIME
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
comment|/* unused this.atime = */
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|logVersion
operator|<=
operator|-
literal|11
condition|)
block|{
name|this
operator|.
name|permissions
operator|=
name|PermissionStatus
operator|.
name|read
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|permissions
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"MkdirOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", permissions="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|permissions
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetGenstampOp
specifier|static
class|class
name|SetGenstampOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|genStamp
name|long
name|genStamp
decl_stmt|;
DECL|method|SetGenstampOp ()
specifier|private
name|SetGenstampOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_GENSTAMP
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetGenstampOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetGenstampOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_GENSTAMP
argument_list|)
return|;
block|}
DECL|method|setGenerationStamp (long genStamp)
name|SetGenstampOp
name|setGenerationStamp
parameter_list|(
name|long
name|genStamp
parameter_list|)
block|{
name|this
operator|.
name|genStamp
operator|=
name|genStamp
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|genStamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|genStamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetGenstampOp [genStamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|genStamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|DatanodeAddOp
specifier|static
class|class
name|DatanodeAddOp
extends|extends
name|FSEditLogOp
block|{
DECL|method|DatanodeAddOp ()
specifier|private
name|DatanodeAddOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_DATANODE_ADD
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|DatanodeAddOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|DatanodeAddOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_DATANODE_ADD
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Deprecated, should not write"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
comment|//Datanodes are not persistent any more.
name|FSImageSerialization
operator|.
name|DatanodeImage
operator|.
name|skipOne
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"DatanodeAddOp [opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|DatanodeRemoveOp
specifier|static
class|class
name|DatanodeRemoveOp
extends|extends
name|FSEditLogOp
block|{
DECL|method|DatanodeRemoveOp ()
specifier|private
name|DatanodeRemoveOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_DATANODE_REMOVE
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|DatanodeRemoveOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|DatanodeRemoveOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_DATANODE_REMOVE
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Deprecated, should not write"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|DatanodeID
name|nodeID
init|=
operator|new
name|DatanodeID
argument_list|()
decl_stmt|;
name|nodeID
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
comment|//Datanodes are not persistent any more.
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"DatanodeRemoveOp [opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetPermissionsOp
specifier|static
class|class
name|SetPermissionsOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|permissions
name|FsPermission
name|permissions
decl_stmt|;
DECL|method|SetPermissionsOp ()
specifier|private
name|SetPermissionsOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_PERMISSIONS
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetPermissionsOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetPermissionsOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_PERMISSIONS
argument_list|)
return|;
block|}
DECL|method|setSource (String src)
name|SetPermissionsOp
name|setSource
parameter_list|(
name|String
name|src
parameter_list|)
block|{
name|this
operator|.
name|src
operator|=
name|src
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setPermissions (FsPermission permissions)
name|SetPermissionsOp
name|setPermissions
parameter_list|(
name|FsPermission
name|permissions
parameter_list|)
block|{
name|this
operator|.
name|permissions
operator|=
name|permissions
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|src
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|permissions
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|permissions
operator|=
name|FsPermission
operator|.
name|read
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetPermissionsOp [src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", permissions="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|permissions
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetOwnerOp
specifier|static
class|class
name|SetOwnerOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|username
name|String
name|username
decl_stmt|;
DECL|field|groupname
name|String
name|groupname
decl_stmt|;
DECL|method|SetOwnerOp ()
specifier|private
name|SetOwnerOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_OWNER
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetOwnerOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetOwnerOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_OWNER
argument_list|)
return|;
block|}
DECL|method|setSource (String src)
name|SetOwnerOp
name|setSource
parameter_list|(
name|String
name|src
parameter_list|)
block|{
name|this
operator|.
name|src
operator|=
name|src
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setUser (String username)
name|SetOwnerOp
name|setUser
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setGroup (String groupname)
name|SetOwnerOp
name|setGroup
parameter_list|(
name|String
name|groupname
parameter_list|)
block|{
name|this
operator|.
name|groupname
operator|=
name|groupname
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|src
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|username
operator|==
literal|null
condition|?
literal|""
else|:
name|username
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|groupname
operator|==
literal|null
condition|?
literal|""
else|:
name|groupname
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|username
operator|=
name|FSImageSerialization
operator|.
name|readString_EmptyAsNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|groupname
operator|=
name|FSImageSerialization
operator|.
name|readString_EmptyAsNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetOwnerOp [src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", username="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", groupname="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|groupname
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetNSQuotaOp
specifier|static
class|class
name|SetNSQuotaOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|nsQuota
name|long
name|nsQuota
decl_stmt|;
DECL|method|SetNSQuotaOp ()
specifier|private
name|SetNSQuotaOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_NS_QUOTA
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetNSQuotaOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetNSQuotaOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_NS_QUOTA
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Deprecated"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|nsQuota
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetNSQuotaOp [src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", nsQuota="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|nsQuota
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|ClearNSQuotaOp
specifier|static
class|class
name|ClearNSQuotaOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|method|ClearNSQuotaOp ()
specifier|private
name|ClearNSQuotaOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_CLEAR_NS_QUOTA
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|ClearNSQuotaOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|ClearNSQuotaOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_CLEAR_NS_QUOTA
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Deprecated"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"ClearNSQuotaOp [src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SetQuotaOp
specifier|static
class|class
name|SetQuotaOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|nsQuota
name|long
name|nsQuota
decl_stmt|;
DECL|field|dsQuota
name|long
name|dsQuota
decl_stmt|;
DECL|method|SetQuotaOp ()
specifier|private
name|SetQuotaOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SET_QUOTA
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SetQuotaOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SetQuotaOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SET_QUOTA
argument_list|)
return|;
block|}
DECL|method|setSource (String src)
name|SetQuotaOp
name|setSource
parameter_list|(
name|String
name|src
parameter_list|)
block|{
name|this
operator|.
name|src
operator|=
name|src
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNSQuota (long nsQuota)
name|SetQuotaOp
name|setNSQuota
parameter_list|(
name|long
name|nsQuota
parameter_list|)
block|{
name|this
operator|.
name|nsQuota
operator|=
name|nsQuota
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDSQuota (long dsQuota)
name|SetQuotaOp
name|setDSQuota
parameter_list|(
name|long
name|dsQuota
parameter_list|)
block|{
name|this
operator|.
name|dsQuota
operator|=
name|dsQuota
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|src
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|nsQuota
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|dsQuota
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|nsQuota
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|dsQuota
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SetQuotaOp [src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", nsQuota="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|nsQuota
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", dsQuota="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|dsQuota
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|TimesOp
specifier|static
class|class
name|TimesOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|mtime
name|long
name|mtime
decl_stmt|;
DECL|field|atime
name|long
name|atime
decl_stmt|;
DECL|method|TimesOp ()
specifier|private
name|TimesOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_TIMES
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|TimesOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|TimesOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_TIMES
argument_list|)
return|;
block|}
DECL|method|setPath (String path)
name|TimesOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setModificationTime (long mtime)
name|TimesOp
name|setModificationTime
parameter_list|(
name|long
name|mtime
parameter_list|)
block|{
name|this
operator|.
name|mtime
operator|=
name|mtime
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setAccessTime (long atime)
name|TimesOp
name|setAccessTime
parameter_list|(
name|long
name|atime
parameter_list|)
block|{
name|this
operator|.
name|atime
operator|=
name|atime
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|mtime
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|atime
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|length
operator|!=
literal|3
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"times operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|mtime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|atime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|mtime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|atime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"TimesOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", mtime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|mtime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", atime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|atime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|SymlinkOp
specifier|static
class|class
name|SymlinkOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|value
name|String
name|value
decl_stmt|;
DECL|field|mtime
name|long
name|mtime
decl_stmt|;
DECL|field|atime
name|long
name|atime
decl_stmt|;
DECL|field|permissionStatus
name|PermissionStatus
name|permissionStatus
decl_stmt|;
DECL|method|SymlinkOp ()
specifier|private
name|SymlinkOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_SYMLINK
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|SymlinkOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|SymlinkOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_SYMLINK
argument_list|)
return|;
block|}
DECL|method|setPath (String path)
name|SymlinkOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setValue (String value)
name|SymlinkOp
name|setValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setModificationTime (long mtime)
name|SymlinkOp
name|setModificationTime
parameter_list|(
name|long
name|mtime
parameter_list|)
block|{
name|this
operator|.
name|mtime
operator|=
name|mtime
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setAccessTime (long atime)
name|SymlinkOp
name|setAccessTime
parameter_list|(
name|long
name|atime
parameter_list|)
block|{
name|this
operator|.
name|atime
operator|=
name|atime
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setPermissionStatus (PermissionStatus permissionStatus)
name|SymlinkOp
name|setPermissionStatus
parameter_list|(
name|PermissionStatus
name|permissionStatus
parameter_list|)
block|{
name|this
operator|.
name|permissionStatus
operator|=
name|permissionStatus
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|value
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|mtime
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|atime
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|permissionStatus
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|length
operator|!=
literal|4
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"symlink operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|mtime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|atime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|mtime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|atime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|permissionStatus
operator|=
name|PermissionStatus
operator|.
name|read
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"SymlinkOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", value="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", mtime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|mtime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", atime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|atime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", permissionStatus="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|permissionStatus
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|RenameOp
specifier|static
class|class
name|RenameOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|length
name|int
name|length
decl_stmt|;
DECL|field|src
name|String
name|src
decl_stmt|;
DECL|field|dst
name|String
name|dst
decl_stmt|;
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|field|options
name|Rename
index|[]
name|options
decl_stmt|;
DECL|method|RenameOp ()
specifier|private
name|RenameOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_RENAME
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|RenameOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|RenameOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_RENAME
argument_list|)
return|;
block|}
DECL|method|setSource (String src)
name|RenameOp
name|setSource
parameter_list|(
name|String
name|src
parameter_list|)
block|{
name|this
operator|.
name|src
operator|=
name|src
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDestination (String dst)
name|RenameOp
name|setDestination
parameter_list|(
name|String
name|dst
parameter_list|)
block|{
name|this
operator|.
name|dst
operator|=
name|dst
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTimestamp (long timestamp)
name|RenameOp
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setOptions (Rename[] options)
name|RenameOp
name|setOptions
parameter_list|(
name|Rename
index|[]
name|options
parameter_list|)
block|{
name|this
operator|.
name|options
operator|=
name|options
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|src
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|dst
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|timestamp
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|toBytesWritable
argument_list|(
name|options
argument_list|)
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|length
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|length
operator|!=
literal|3
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect data format. "
operator|+
literal|"Rename operation."
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|src
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|dst
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|timestamp
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|options
operator|=
name|readRenameOptions
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
DECL|method|readRenameOptions (DataInputStream in)
specifier|private
specifier|static
name|Rename
index|[]
name|readRenameOptions
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|BytesWritable
name|writable
init|=
operator|new
name|BytesWritable
argument_list|()
decl_stmt|;
name|writable
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|writable
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Rename
index|[]
name|options
init|=
operator|new
name|Rename
index|[
name|bytes
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bytes
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|options
index|[
name|i
index|]
operator|=
name|Rename
operator|.
name|valueOf
argument_list|(
name|bytes
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|options
return|;
block|}
DECL|method|toBytesWritable (Rename... options)
specifier|static
name|BytesWritable
name|toBytesWritable
parameter_list|(
name|Rename
modifier|...
name|options
parameter_list|)
block|{
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
name|options
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|options
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|bytes
index|[
name|i
index|]
operator|=
name|options
index|[
name|i
index|]
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|BytesWritable
argument_list|(
name|bytes
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"RenameOp [length="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|length
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", src="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", dst="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|dst
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", timestamp="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", options="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|Arrays
operator|.
name|toString
argument_list|(
name|options
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|ReassignLeaseOp
specifier|static
class|class
name|ReassignLeaseOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|leaseHolder
name|String
name|leaseHolder
decl_stmt|;
DECL|field|path
name|String
name|path
decl_stmt|;
DECL|field|newHolder
name|String
name|newHolder
decl_stmt|;
DECL|method|ReassignLeaseOp ()
specifier|private
name|ReassignLeaseOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_REASSIGN_LEASE
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|ReassignLeaseOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|ReassignLeaseOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_REASSIGN_LEASE
argument_list|)
return|;
block|}
DECL|method|setLeaseHolder (String leaseHolder)
name|ReassignLeaseOp
name|setLeaseHolder
parameter_list|(
name|String
name|leaseHolder
parameter_list|)
block|{
name|this
operator|.
name|leaseHolder
operator|=
name|leaseHolder
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setPath (String path)
name|ReassignLeaseOp
name|setPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNewHolder (String newHolder)
name|ReassignLeaseOp
name|setNewHolder
parameter_list|(
name|String
name|newHolder
parameter_list|)
block|{
name|this
operator|.
name|newHolder
operator|=
name|newHolder
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|leaseHolder
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|path
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeString
argument_list|(
name|newHolder
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|leaseHolder
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|this
operator|.
name|newHolder
operator|=
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"ReassignLeaseOp [leaseHolder="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|leaseHolder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", path="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", newHolder="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|newHolder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|GetDelegationTokenOp
specifier|static
class|class
name|GetDelegationTokenOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|token
name|DelegationTokenIdentifier
name|token
decl_stmt|;
DECL|field|expiryTime
name|long
name|expiryTime
decl_stmt|;
DECL|method|GetDelegationTokenOp ()
specifier|private
name|GetDelegationTokenOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_GET_DELEGATION_TOKEN
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|GetDelegationTokenOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|GetDelegationTokenOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_GET_DELEGATION_TOKEN
argument_list|)
return|;
block|}
DECL|method|setDelegationTokenIdentifier ( DelegationTokenIdentifier token)
name|GetDelegationTokenOp
name|setDelegationTokenIdentifier
parameter_list|(
name|DelegationTokenIdentifier
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setExpiryTime (long expiryTime)
name|GetDelegationTokenOp
name|setExpiryTime
parameter_list|(
name|long
name|expiryTime
parameter_list|)
block|{
name|this
operator|.
name|expiryTime
operator|=
name|expiryTime
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|token
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|expiryTime
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|token
operator|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
expr_stmt|;
name|this
operator|.
name|token
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|expiryTime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|expiryTime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"GetDelegationTokenOp [token="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", expiryTime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|expiryTime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|RenewDelegationTokenOp
specifier|static
class|class
name|RenewDelegationTokenOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|token
name|DelegationTokenIdentifier
name|token
decl_stmt|;
DECL|field|expiryTime
name|long
name|expiryTime
decl_stmt|;
DECL|method|RenewDelegationTokenOp ()
specifier|private
name|RenewDelegationTokenOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_RENEW_DELEGATION_TOKEN
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|RenewDelegationTokenOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|RenewDelegationTokenOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_RENEW_DELEGATION_TOKEN
argument_list|)
return|;
block|}
DECL|method|setDelegationTokenIdentifier ( DelegationTokenIdentifier token)
name|RenewDelegationTokenOp
name|setDelegationTokenIdentifier
parameter_list|(
name|DelegationTokenIdentifier
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setExpiryTime (long expiryTime)
name|RenewDelegationTokenOp
name|setExpiryTime
parameter_list|(
name|long
name|expiryTime
parameter_list|)
block|{
name|this
operator|.
name|expiryTime
operator|=
name|expiryTime
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|token
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|FSImageSerialization
operator|.
name|writeLong
argument_list|(
name|expiryTime
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|token
operator|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
expr_stmt|;
name|this
operator|.
name|token
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITLOG_OP_OPTIMIZATION
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|expiryTime
operator|=
name|FSImageSerialization
operator|.
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|expiryTime
operator|=
name|readLong
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"RenewDelegationTokenOp [token="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", expiryTime="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|expiryTime
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|CancelDelegationTokenOp
specifier|static
class|class
name|CancelDelegationTokenOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|token
name|DelegationTokenIdentifier
name|token
decl_stmt|;
DECL|method|CancelDelegationTokenOp ()
specifier|private
name|CancelDelegationTokenOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_CANCEL_DELEGATION_TOKEN
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|CancelDelegationTokenOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|CancelDelegationTokenOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_CANCEL_DELEGATION_TOKEN
argument_list|)
return|;
block|}
DECL|method|setDelegationTokenIdentifier ( DelegationTokenIdentifier token)
name|CancelDelegationTokenOp
name|setDelegationTokenIdentifier
parameter_list|(
name|DelegationTokenIdentifier
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|token
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|token
operator|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
expr_stmt|;
name|this
operator|.
name|token
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"CancelDelegationTokenOp [token="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|UpdateMasterKeyOp
specifier|static
class|class
name|UpdateMasterKeyOp
extends|extends
name|FSEditLogOp
block|{
DECL|field|key
name|DelegationKey
name|key
decl_stmt|;
DECL|method|UpdateMasterKeyOp ()
specifier|private
name|UpdateMasterKeyOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_UPDATE_MASTER_KEY
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|UpdateMasterKeyOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|UpdateMasterKeyOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_UPDATE_MASTER_KEY
argument_list|)
return|;
block|}
DECL|method|setDelegationKey (DelegationKey key)
name|UpdateMasterKeyOp
name|setDelegationKey
parameter_list|(
name|DelegationKey
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|key
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|key
operator|=
operator|new
name|DelegationKey
argument_list|()
expr_stmt|;
name|this
operator|.
name|key
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"UpdateMasterKeyOp [key="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|LogSegmentOp
specifier|static
class|class
name|LogSegmentOp
extends|extends
name|FSEditLogOp
block|{
DECL|method|LogSegmentOp (FSEditLogOpCodes code)
specifier|private
name|LogSegmentOp
parameter_list|(
name|FSEditLogOpCodes
name|code
parameter_list|)
block|{
name|super
argument_list|(
name|code
argument_list|)
expr_stmt|;
assert|assert
name|code
operator|==
name|OP_START_LOG_SEGMENT
operator|||
name|code
operator|==
name|OP_END_LOG_SEGMENT
operator|:
literal|"Bad op: "
operator|+
name|code
assert|;
block|}
DECL|method|getInstance (FSEditLogOpCodes code)
specifier|static
name|LogSegmentOp
name|getInstance
parameter_list|(
name|FSEditLogOpCodes
name|code
parameter_list|)
block|{
return|return
operator|(
name|LogSegmentOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|code
argument_list|)
return|;
block|}
DECL|method|readFields (DataInputStream in, int logVersion)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
comment|// no data stored in these ops yet
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
comment|// no data stored
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"LogSegmentOp [opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|InvalidOp
specifier|static
class|class
name|InvalidOp
extends|extends
name|FSEditLogOp
block|{
DECL|method|InvalidOp ()
specifier|private
name|InvalidOp
parameter_list|()
block|{
name|super
argument_list|(
name|OP_INVALID
argument_list|)
expr_stmt|;
block|}
DECL|method|getInstance ()
specifier|static
name|InvalidOp
name|getInstance
parameter_list|()
block|{
return|return
operator|(
name|InvalidOp
operator|)
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|OP_INVALID
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|writeFields (DataOutputStream out)
name|void
name|writeFields
parameter_list|(
name|DataOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{     }
annotation|@
name|Override
DECL|method|readFields (DataInputStream in, int logVersion)
name|void
name|readFields
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
throws|throws
name|IOException
block|{
comment|// nothing to read
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"InvalidOp [opCode="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|opCode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|", txid="
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|txid
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|method|readShort (DataInputStream in)
specifier|static
specifier|private
name|short
name|readShort
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Short
operator|.
name|parseShort
argument_list|(
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
argument_list|)
return|;
block|}
DECL|method|readLong (DataInputStream in)
specifier|static
specifier|private
name|long
name|readLong
parameter_list|(
name|DataInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Long
operator|.
name|parseLong
argument_list|(
name|FSImageSerialization
operator|.
name|readString
argument_list|(
name|in
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * A class to read in blocks stored in the old format. The only two    * fields in the block were blockid and length.    */
DECL|class|BlockTwo
specifier|static
class|class
name|BlockTwo
implements|implements
name|Writable
block|{
DECL|field|blkid
name|long
name|blkid
decl_stmt|;
DECL|field|len
name|long
name|len
decl_stmt|;
static|static
block|{
comment|// register a ctor
name|WritableFactories
operator|.
name|setFactory
argument_list|(
name|BlockTwo
operator|.
name|class
argument_list|,
operator|new
name|WritableFactory
argument_list|()
block|{
specifier|public
name|Writable
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|BlockTwo
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|BlockTwo ()
name|BlockTwo
parameter_list|()
block|{
name|blkid
operator|=
literal|0
expr_stmt|;
name|len
operator|=
literal|0
expr_stmt|;
block|}
comment|/////////////////////////////////////
comment|// Writable
comment|/////////////////////////////////////
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeLong
argument_list|(
name|blkid
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|len
argument_list|)
expr_stmt|;
block|}
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|blkid
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|this
operator|.
name|len
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Class for writing editlog ops    */
DECL|class|Writer
specifier|public
specifier|static
class|class
name|Writer
block|{
DECL|field|buf
specifier|private
specifier|final
name|DataOutputBuffer
name|buf
decl_stmt|;
DECL|field|checksum
specifier|private
specifier|final
name|Checksum
name|checksum
decl_stmt|;
DECL|method|Writer (DataOutputBuffer out)
specifier|public
name|Writer
parameter_list|(
name|DataOutputBuffer
name|out
parameter_list|)
block|{
name|this
operator|.
name|buf
operator|=
name|out
expr_stmt|;
name|this
operator|.
name|checksum
operator|=
operator|new
name|PureJavaCrc32
argument_list|()
expr_stmt|;
block|}
comment|/**      * Write an operation to the output stream      *       * @param op The operation to write      * @throws IOException if an error occurs during writing.      */
DECL|method|writeOp (FSEditLogOp op)
specifier|public
name|void
name|writeOp
parameter_list|(
name|FSEditLogOp
name|op
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|start
init|=
name|buf
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|buf
operator|.
name|writeByte
argument_list|(
name|op
operator|.
name|opCode
operator|.
name|getOpCode
argument_list|()
argument_list|)
expr_stmt|;
name|buf
operator|.
name|writeLong
argument_list|(
name|op
operator|.
name|txid
argument_list|)
expr_stmt|;
name|op
operator|.
name|writeFields
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|int
name|end
init|=
name|buf
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|checksum
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checksum
operator|.
name|update
argument_list|(
name|buf
operator|.
name|getData
argument_list|()
argument_list|,
name|start
argument_list|,
name|end
operator|-
name|start
argument_list|)
expr_stmt|;
name|int
name|sum
init|=
operator|(
name|int
operator|)
name|checksum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|buf
operator|.
name|writeInt
argument_list|(
name|sum
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for reading editlog ops from a stream    */
DECL|class|Reader
specifier|public
specifier|static
class|class
name|Reader
block|{
DECL|field|in
specifier|private
specifier|final
name|DataInputStream
name|in
decl_stmt|;
DECL|field|logVersion
specifier|private
specifier|final
name|int
name|logVersion
decl_stmt|;
DECL|field|checksum
specifier|private
specifier|final
name|Checksum
name|checksum
decl_stmt|;
comment|/**      * Construct the reader      * @param in The stream to read from.      * @param logVersion The version of the data coming from the stream.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|Reader (DataInputStream in, int logVersion)
specifier|public
name|Reader
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|int
name|logVersion
parameter_list|)
block|{
name|this
operator|.
name|logVersion
operator|=
name|logVersion
expr_stmt|;
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|EDITS_CHESKUM
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
name|this
operator|.
name|checksum
operator|=
operator|new
name|PureJavaCrc32
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|checksum
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|checksum
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|in
operator|=
operator|new
name|DataInputStream
argument_list|(
operator|new
name|CheckedInputStream
argument_list|(
name|in
argument_list|,
name|this
operator|.
name|checksum
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|in
operator|=
name|in
expr_stmt|;
block|}
block|}
comment|/**      * Read an operation from the input stream.      *       * Note that the objects returned from this method may be re-used by future      * calls to the same method.      *       * @return the operation read from the stream, or null at the end of the file      * @throws IOException on error.      */
DECL|method|readOp ()
specifier|public
name|FSEditLogOp
name|readOp
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|checksum
operator|!=
literal|null
condition|)
block|{
name|checksum
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
name|in
operator|.
name|mark
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|byte
name|opCodeByte
decl_stmt|;
try|try
block|{
name|opCodeByte
operator|=
name|in
operator|.
name|readByte
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|eof
parameter_list|)
block|{
comment|// EOF at an opcode boundary is expected.
return|return
literal|null
return|;
block|}
name|FSEditLogOpCodes
name|opCode
init|=
name|FSEditLogOpCodes
operator|.
name|fromByte
argument_list|(
name|opCodeByte
argument_list|)
decl_stmt|;
if|if
condition|(
name|opCode
operator|==
name|OP_INVALID
condition|)
block|{
name|in
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// reset back to end of file if somebody reads it again
return|return
literal|null
return|;
block|}
name|FSEditLogOp
name|op
init|=
name|opInstances
operator|.
name|get
argument_list|()
operator|.
name|get
argument_list|(
name|opCode
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Read invalid opcode "
operator|+
name|opCode
argument_list|)
throw|;
block|}
if|if
condition|(
name|LayoutVersion
operator|.
name|supports
argument_list|(
name|Feature
operator|.
name|STORED_TXIDS
argument_list|,
name|logVersion
argument_list|)
condition|)
block|{
comment|// Read the txid
name|op
operator|.
name|setTransactionId
argument_list|(
name|in
operator|.
name|readLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|op
operator|.
name|readFields
argument_list|(
name|in
argument_list|,
name|logVersion
argument_list|)
expr_stmt|;
name|validateChecksum
argument_list|(
name|in
argument_list|,
name|checksum
argument_list|,
name|op
operator|.
name|txid
argument_list|)
expr_stmt|;
return|return
name|op
return|;
block|}
comment|/**      * Validate a transaction's checksum      */
DECL|method|validateChecksum (DataInputStream in, Checksum checksum, long txid)
specifier|private
name|void
name|validateChecksum
parameter_list|(
name|DataInputStream
name|in
parameter_list|,
name|Checksum
name|checksum
parameter_list|,
name|long
name|txid
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|checksum
operator|!=
literal|null
condition|)
block|{
name|int
name|calculatedChecksum
init|=
operator|(
name|int
operator|)
name|checksum
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|int
name|readChecksum
init|=
name|in
operator|.
name|readInt
argument_list|()
decl_stmt|;
comment|// read in checksum
if|if
condition|(
name|readChecksum
operator|!=
name|calculatedChecksum
condition|)
block|{
throw|throw
operator|new
name|ChecksumException
argument_list|(
literal|"Transaction is corrupt. Calculated checksum is "
operator|+
name|calculatedChecksum
operator|+
literal|" but read checksum "
operator|+
name|readChecksum
argument_list|,
name|txid
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

