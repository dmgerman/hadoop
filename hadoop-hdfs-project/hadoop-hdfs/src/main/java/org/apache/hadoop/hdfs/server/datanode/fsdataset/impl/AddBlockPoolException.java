begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.fsdataset.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|fsdataset
operator|.
name|FsVolumeSpi
import|;
end_import

begin_comment
comment|/**  * This exception collects all IOExceptions thrown when adding block pools and  * scanning volumes. It keeps the information about which volume is associated  * with an exception.  *  */
end_comment

begin_class
DECL|class|AddBlockPoolException
specifier|public
class|class
name|AddBlockPoolException
extends|extends
name|RuntimeException
block|{
DECL|field|unhealthyDataDirs
specifier|private
name|Map
argument_list|<
name|FsVolumeSpi
argument_list|,
name|IOException
argument_list|>
name|unhealthyDataDirs
decl_stmt|;
DECL|method|AddBlockPoolException (Map<FsVolumeSpi, IOException> unhealthyDataDirs)
specifier|public
name|AddBlockPoolException
parameter_list|(
name|Map
argument_list|<
name|FsVolumeSpi
argument_list|,
name|IOException
argument_list|>
name|unhealthyDataDirs
parameter_list|)
block|{
name|this
operator|.
name|unhealthyDataDirs
operator|=
name|unhealthyDataDirs
expr_stmt|;
block|}
DECL|method|AddBlockPoolException ()
specifier|public
name|AddBlockPoolException
parameter_list|()
block|{
name|this
operator|.
name|unhealthyDataDirs
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|FsVolumeSpi
argument_list|,
name|IOException
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|mergeException (AddBlockPoolException e)
specifier|public
name|void
name|mergeException
parameter_list|(
name|AddBlockPoolException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|==
literal|null
condition|)
block|{
return|return;
block|}
for|for
control|(
name|FsVolumeSpi
name|v
range|:
name|e
operator|.
name|unhealthyDataDirs
operator|.
name|keySet
argument_list|()
control|)
block|{
comment|// If there is already an exception for this volume, keep the original
comment|// exception and discard the new one. It is likely the first
comment|// exception caused the second or they were both due to the disk issue
if|if
condition|(
operator|!
name|unhealthyDataDirs
operator|.
name|containsKey
argument_list|(
name|v
argument_list|)
condition|)
block|{
name|unhealthyDataDirs
operator|.
name|put
argument_list|(
name|v
argument_list|,
name|e
operator|.
name|unhealthyDataDirs
operator|.
name|get
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|hasExceptions ()
specifier|public
name|boolean
name|hasExceptions
parameter_list|()
block|{
return|return
operator|!
name|unhealthyDataDirs
operator|.
name|isEmpty
argument_list|()
return|;
block|}
DECL|method|getFailingVolumes ()
specifier|public
name|Map
argument_list|<
name|FsVolumeSpi
argument_list|,
name|IOException
argument_list|>
name|getFailingVolumes
parameter_list|()
block|{
return|return
name|unhealthyDataDirs
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": "
operator|+
name|unhealthyDataDirs
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

