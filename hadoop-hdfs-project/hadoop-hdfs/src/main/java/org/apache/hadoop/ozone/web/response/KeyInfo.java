begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.response
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|response
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|EqualsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|HashCodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonAutoDetect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ser
operator|.
name|FilterProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ser
operator|.
name|impl
operator|.
name|SimpleBeanPropertyFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ser
operator|.
name|impl
operator|.
name|SimpleFilterProvider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Represents an Ozone key Object.  */
end_comment

begin_class
DECL|class|KeyInfo
specifier|public
class|class
name|KeyInfo
implements|implements
name|Comparable
argument_list|<
name|KeyInfo
argument_list|>
block|{
DECL|field|OBJECT_INFO
specifier|static
specifier|final
name|String
name|OBJECT_INFO
init|=
literal|"OBJECT_INFO_FILTER"
decl_stmt|;
comment|/**    * This class allows us to create custom filters    * for the Json serialization.    */
annotation|@
name|JsonFilter
argument_list|(
name|OBJECT_INFO
argument_list|)
DECL|class|MixIn
class|class
name|MixIn
block|{    }
DECL|field|version
specifier|private
name|long
name|version
decl_stmt|;
DECL|field|md5hash
specifier|private
name|String
name|md5hash
decl_stmt|;
DECL|field|createdOn
specifier|private
name|String
name|createdOn
decl_stmt|;
DECL|field|size
specifier|private
name|long
name|size
decl_stmt|;
DECL|field|keyName
specifier|private
name|String
name|keyName
decl_stmt|;
DECL|field|dataFileName
specifier|private
name|String
name|dataFileName
decl_stmt|;
comment|/**    * When this key was created.    *    * @return Date String    */
DECL|method|getCreatedOn ()
specifier|public
name|String
name|getCreatedOn
parameter_list|()
block|{
return|return
name|createdOn
return|;
block|}
comment|/**    * When this key was created.    *    * @param createdOn - Date String    */
DECL|method|setCreatedOn (String createdOn)
specifier|public
name|void
name|setCreatedOn
parameter_list|(
name|String
name|createdOn
parameter_list|)
block|{
name|this
operator|.
name|createdOn
operator|=
name|createdOn
expr_stmt|;
block|}
comment|/**    * Full path to where the actual data for this key is stored.    *    * @return String    */
DECL|method|getDataFileName ()
specifier|public
name|String
name|getDataFileName
parameter_list|()
block|{
return|return
name|dataFileName
return|;
block|}
comment|/**    * Sets up where the file path is stored.    *    * @param dataFileName - Data File Name    */
DECL|method|setDataFileName (String dataFileName)
specifier|public
name|void
name|setDataFileName
parameter_list|(
name|String
name|dataFileName
parameter_list|)
block|{
name|this
operator|.
name|dataFileName
operator|=
name|dataFileName
expr_stmt|;
block|}
comment|/**    * Gets the Keyname of this object.    *    * @return String    */
DECL|method|getKeyName ()
specifier|public
name|String
name|getKeyName
parameter_list|()
block|{
return|return
name|keyName
return|;
block|}
comment|/**    * Sets the Key name of this object.    *    * @param keyName - String    */
DECL|method|setKeyName (String keyName)
specifier|public
name|void
name|setKeyName
parameter_list|(
name|String
name|keyName
parameter_list|)
block|{
name|this
operator|.
name|keyName
operator|=
name|keyName
expr_stmt|;
block|}
comment|/**    * Returns the MD5 Hash for the data of this key.    *    * @return String MD5    */
DECL|method|getMd5hash ()
specifier|public
name|String
name|getMd5hash
parameter_list|()
block|{
return|return
name|md5hash
return|;
block|}
comment|/**    * Sets the MD5 of this file.    *    * @param md5hash - Md5 of this file    */
DECL|method|setMd5hash (String md5hash)
specifier|public
name|void
name|setMd5hash
parameter_list|(
name|String
name|md5hash
parameter_list|)
block|{
name|this
operator|.
name|md5hash
operator|=
name|md5hash
expr_stmt|;
block|}
comment|/**    * Number of bytes stored in the data part of this key.    *    * @return long size of the data file    */
DECL|method|getSize ()
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
comment|/**    * Sets the size of the Data part of this key.    *    * @param size - Size in long    */
DECL|method|setSize (long size)
specifier|public
name|void
name|setSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
comment|/**    * Version of this key.    *    * @return - returns the version of this key.    */
DECL|method|getVersion ()
specifier|public
name|long
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
comment|/**    * Sets the version of this key.    *    * @param version - Version String    */
DECL|method|setVersion (long version)
specifier|public
name|void
name|setVersion
parameter_list|(
name|long
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
comment|/**    * Compares this object with the specified object for order.  Returns a    * negative integer, zero, or a positive integer as this object is less    * than, equal to, or greater than the specified object.    *    * @param o the object to be compared.    *    * @return a negative integer, zero, or a positive integer as this object    * is less than, equal to, or greater than the specified object.    *    * @throws NullPointerException if the specified object is null    * @throws ClassCastException if the specified object's type prevents it    * from being compared to this object.    */
annotation|@
name|Override
DECL|method|compareTo (KeyInfo o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|KeyInfo
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|keyName
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
name|this
operator|.
name|keyName
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getKeyName
argument_list|()
argument_list|)
return|;
block|}
if|if
condition|(
name|this
operator|.
name|getVersion
argument_list|()
operator|==
name|o
operator|.
name|getVersion
argument_list|()
condition|)
block|{
return|return
literal|0
return|;
block|}
if|if
condition|(
name|this
operator|.
name|getVersion
argument_list|()
operator|<
name|o
operator|.
name|getVersion
argument_list|()
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
return|return
literal|1
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|KeyInfo
name|keyInfo
init|=
operator|(
name|KeyInfo
operator|)
name|o
decl_stmt|;
return|return
operator|new
name|EqualsBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|version
argument_list|,
name|keyInfo
operator|.
name|version
argument_list|)
operator|.
name|append
argument_list|(
name|keyName
argument_list|,
name|keyInfo
operator|.
name|keyName
argument_list|)
operator|.
name|isEquals
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|new
name|HashCodeBuilder
argument_list|(
literal|17
argument_list|,
literal|37
argument_list|)
operator|.
name|append
argument_list|(
name|version
argument_list|)
operator|.
name|append
argument_list|(
name|keyName
argument_list|)
operator|.
name|toHashCode
argument_list|()
return|;
block|}
comment|/**     * Parse a string to retuen BucketInfo Object.    *    * @param jsonString - Json String    *    * @return - BucketInfo    *    * @throws IOException    */
DECL|method|parse (String jsonString)
specifier|public
specifier|static
name|KeyInfo
name|parse
parameter_list|(
name|String
name|jsonString
parameter_list|)
throws|throws
name|IOException
block|{
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
return|return
name|mapper
operator|.
name|readValue
argument_list|(
name|jsonString
argument_list|,
name|KeyInfo
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**    * Returns a JSON string of this object.    * After stripping out bytesUsed and keyCount    *    * @return String    */
DECL|method|toJsonString ()
specifier|public
name|String
name|toJsonString
parameter_list|()
throws|throws
name|IOException
block|{
name|String
index|[]
name|ignorableFieldNames
init|=
block|{
literal|"dataFileName"
block|}
decl_stmt|;
name|FilterProvider
name|filters
init|=
operator|new
name|SimpleFilterProvider
argument_list|()
operator|.
name|addFilter
argument_list|(
name|OBJECT_INFO
argument_list|,
name|SimpleBeanPropertyFilter
operator|.
name|serializeAllExcept
argument_list|(
name|ignorableFieldNames
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|setVisibility
argument_list|(
name|JsonMethod
operator|.
name|FIELD
argument_list|,
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|ANY
argument_list|)
decl_stmt|;
name|mapper
operator|.
name|getSerializationConfig
argument_list|()
operator|.
name|addMixInAnnotations
argument_list|(
name|Object
operator|.
name|class
argument_list|,
name|MixIn
operator|.
name|class
argument_list|)
expr_stmt|;
name|ObjectWriter
name|writer
init|=
name|mapper
operator|.
name|writer
argument_list|(
name|filters
argument_list|)
decl_stmt|;
return|return
name|writer
operator|.
name|writeValueAsString
argument_list|(
name|this
argument_list|)
return|;
block|}
comment|/**    * Returns the Object as a Json String.    */
DECL|method|toDBString ()
specifier|public
name|String
name|toDBString
parameter_list|()
throws|throws
name|IOException
block|{
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
return|return
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class

end_unit

