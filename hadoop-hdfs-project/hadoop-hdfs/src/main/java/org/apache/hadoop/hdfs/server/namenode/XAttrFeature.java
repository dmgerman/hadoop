begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|XAttr
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_comment
comment|/**  * Feature for extended attributes.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|XAttrFeature
specifier|public
class|class
name|XAttrFeature
implements|implements
name|INode
operator|.
name|Feature
block|{
DECL|field|EMPTY_ENTRY_LIST
specifier|public
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|XAttr
argument_list|>
name|EMPTY_ENTRY_LIST
init|=
name|ImmutableList
operator|.
name|of
argument_list|()
decl_stmt|;
DECL|field|xAttrs
specifier|private
specifier|final
name|ImmutableList
argument_list|<
name|XAttr
argument_list|>
name|xAttrs
decl_stmt|;
DECL|method|XAttrFeature (ImmutableList<XAttr> xAttrs)
specifier|public
name|XAttrFeature
parameter_list|(
name|ImmutableList
argument_list|<
name|XAttr
argument_list|>
name|xAttrs
parameter_list|)
block|{
name|this
operator|.
name|xAttrs
operator|=
name|xAttrs
expr_stmt|;
block|}
DECL|method|getXAttrs ()
specifier|public
name|ImmutableList
argument_list|<
name|XAttr
argument_list|>
name|getXAttrs
parameter_list|()
block|{
return|return
name|xAttrs
return|;
block|}
block|}
end_class

end_unit

