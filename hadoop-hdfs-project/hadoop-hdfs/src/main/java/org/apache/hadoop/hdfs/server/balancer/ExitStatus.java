begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.balancer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|balancer
package|;
end_package

begin_comment
comment|/**  * Exit status - The values associated with each exit status is directly mapped  * to the process's exit code in command line.  */
end_comment

begin_enum
DECL|enum|ExitStatus
specifier|public
enum|enum
name|ExitStatus
block|{
DECL|enumConstant|SUCCESS
name|SUCCESS
argument_list|(
literal|0
argument_list|)
block|,
DECL|enumConstant|IN_PROGRESS
name|IN_PROGRESS
argument_list|(
literal|1
argument_list|)
block|,
DECL|enumConstant|ALREADY_RUNNING
name|ALREADY_RUNNING
argument_list|(
operator|-
literal|1
argument_list|)
block|,
DECL|enumConstant|NO_MOVE_BLOCK
name|NO_MOVE_BLOCK
argument_list|(
operator|-
literal|2
argument_list|)
block|,
DECL|enumConstant|NO_MOVE_PROGRESS
name|NO_MOVE_PROGRESS
argument_list|(
operator|-
literal|3
argument_list|)
block|,
DECL|enumConstant|IO_EXCEPTION
name|IO_EXCEPTION
argument_list|(
operator|-
literal|4
argument_list|)
block|,
DECL|enumConstant|ILLEGAL_ARGUMENTS
name|ILLEGAL_ARGUMENTS
argument_list|(
operator|-
literal|5
argument_list|)
block|,
DECL|enumConstant|INTERRUPTED
name|INTERRUPTED
argument_list|(
operator|-
literal|6
argument_list|)
block|,
DECL|enumConstant|UNFINALIZED_UPGRADE
name|UNFINALIZED_UPGRADE
argument_list|(
operator|-
literal|7
argument_list|)
block|;
DECL|field|code
specifier|private
specifier|final
name|int
name|code
decl_stmt|;
DECL|method|ExitStatus (int code)
specifier|private
name|ExitStatus
parameter_list|(
name|int
name|code
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
block|}
comment|/** @return the command line exit code. */
DECL|method|getExitCode ()
specifier|public
name|int
name|getExitCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
block|}
end_enum

end_unit

