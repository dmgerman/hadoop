begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.blockmanagement
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|Block
import|;
end_import

begin_comment
comment|/**  * Subclass of InvalidateBlocks used by the CacheReplicationManager to  * track blocks on each storage that are scheduled to be uncached.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|UncacheBlocks
specifier|public
class|class
name|UncacheBlocks
extends|extends
name|InvalidateBlocks
block|{
DECL|method|UncacheBlocks ()
name|UncacheBlocks
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|invalidateWork ( final String storageId, final DatanodeDescriptor dn)
specifier|synchronized
name|List
argument_list|<
name|Block
argument_list|>
name|invalidateWork
parameter_list|(
specifier|final
name|String
name|storageId
parameter_list|,
specifier|final
name|DatanodeDescriptor
name|dn
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|Block
argument_list|>
name|toInvalidate
init|=
name|pollNumBlocks
argument_list|(
name|storageId
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
if|if
condition|(
name|toInvalidate
operator|!=
literal|null
condition|)
block|{
name|dn
operator|.
name|addBlocksToBeUncached
argument_list|(
name|toInvalidate
argument_list|)
expr_stmt|;
block|}
return|return
name|toInvalidate
return|;
block|}
block|}
end_class

end_unit

