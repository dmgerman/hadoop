begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.diskbalancer.connectors
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|diskbalancer
operator|.
name|connectors
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|diskbalancer
operator|.
name|datamodel
operator|.
name|DiskBalancerCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|diskbalancer
operator|.
name|datamodel
operator|.
name|DiskBalancerDataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * A connector that understands JSON data cluster models.  */
end_comment

begin_class
DECL|class|JsonNodeConnector
specifier|public
class|class
name|JsonNodeConnector
implements|implements
name|ClusterConnector
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|JsonNodeConnector
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|clusterURI
specifier|private
specifier|final
name|URL
name|clusterURI
decl_stmt|;
comment|/**    * Constructs a JsonNodeConnector.    * @param clusterURI - A file URL that contains cluster information.    */
DECL|method|JsonNodeConnector (URL clusterURI)
specifier|public
name|JsonNodeConnector
parameter_list|(
name|URL
name|clusterURI
parameter_list|)
block|{
name|this
operator|.
name|clusterURI
operator|=
name|clusterURI
expr_stmt|;
block|}
comment|/**    * getNodes function connects to a cluster definition file    * and returns nodes defined in that file.    *    * @return Array of DiskBalancerDataNodes    */
annotation|@
name|Override
DECL|method|getNodes ()
specifier|public
name|List
argument_list|<
name|DiskBalancerDataNode
argument_list|>
name|getNodes
parameter_list|()
throws|throws
name|Exception
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|this
operator|.
name|clusterURI
argument_list|)
expr_stmt|;
name|String
name|dataFilePath
init|=
name|this
operator|.
name|clusterURI
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Reading cluster info from file : "
operator|+
name|dataFilePath
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|DiskBalancerCluster
name|cluster
init|=
name|mapper
operator|.
name|readValue
argument_list|(
operator|new
name|File
argument_list|(
name|dataFilePath
argument_list|)
argument_list|,
name|DiskBalancerCluster
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|message
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Found %d node(s)"
argument_list|,
name|cluster
operator|.
name|getNodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
return|return
name|cluster
operator|.
name|getNodes
argument_list|()
return|;
block|}
comment|/**    * Returns info about the connector.    *    * @return String.    */
annotation|@
name|Override
DECL|method|getConnectorInfo ()
specifier|public
name|String
name|getConnectorInfo
parameter_list|()
block|{
return|return
literal|"Json Cluster Connector : Connects to a JSON file that describes a"
operator|+
literal|" cluster : "
operator|+
name|clusterURI
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

