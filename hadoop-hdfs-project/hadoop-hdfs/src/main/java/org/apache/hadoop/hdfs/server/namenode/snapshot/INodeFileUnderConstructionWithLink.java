begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode.snapshot
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeFileUnderConstruction
import|;
end_import

begin_comment
comment|/**  * Represent an {@link INodeFileUnderConstruction} that is snapshotted.  * Note that snapshot files are represented by  * {@link INodeFileUnderConstructionSnapshot}.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|INodeFileUnderConstructionWithLink
specifier|public
class|class
name|INodeFileUnderConstructionWithLink
extends|extends
name|INodeFileUnderConstruction
implements|implements
name|FileWithLink
block|{
DECL|field|next
specifier|private
name|FileWithLink
name|next
decl_stmt|;
DECL|method|INodeFileUnderConstructionWithLink (INodeFileUnderConstruction f)
specifier|public
name|INodeFileUnderConstructionWithLink
parameter_list|(
name|INodeFileUnderConstruction
name|f
parameter_list|)
block|{
name|super
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|setNext
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toINodeFile (final long mtime)
specifier|protected
name|INodeFileWithLink
name|toINodeFile
parameter_list|(
specifier|final
name|long
name|mtime
parameter_list|)
block|{
name|assertAllBlocksComplete
argument_list|()
expr_stmt|;
specifier|final
name|long
name|atime
init|=
name|getModificationTime
argument_list|()
decl_stmt|;
specifier|final
name|INodeFileWithLink
name|f
init|=
operator|new
name|INodeFileWithLink
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|f
operator|.
name|setModificationTime
argument_list|(
name|mtime
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessTime
argument_list|(
name|atime
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
name|f
return|;
block|}
annotation|@
name|Override
specifier|public
name|Pair
argument_list|<
name|?
extends|extends
name|INodeFileUnderConstruction
argument_list|,
DECL|method|createSnapshotCopy ()
name|INodeFileUnderConstructionSnapshot
argument_list|>
name|createSnapshotCopy
parameter_list|()
block|{
return|return
operator|new
name|Pair
argument_list|<
name|INodeFileUnderConstructionWithLink
argument_list|,
name|INodeFileUnderConstructionSnapshot
argument_list|>
argument_list|(
name|this
argument_list|,
operator|new
name|INodeFileUnderConstructionSnapshot
argument_list|(
name|this
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|getNext ()
specifier|public
parameter_list|<
name|N
extends|extends
name|INodeFile
operator|&
name|FileWithLink
parameter_list|>
name|N
name|getNext
parameter_list|()
block|{
return|return
operator|(
name|N
operator|)
name|next
return|;
block|}
annotation|@
name|Override
DECL|method|setNext (N next)
specifier|public
parameter_list|<
name|N
extends|extends
name|INodeFile
operator|&
name|FileWithLink
parameter_list|>
name|void
name|setNext
parameter_list|(
name|N
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|insert (N inode)
specifier|public
parameter_list|<
name|N
extends|extends
name|INodeFile
operator|&
name|FileWithLink
parameter_list|>
name|void
name|insert
parameter_list|(
name|N
name|inode
parameter_list|)
block|{
name|inode
operator|.
name|setNext
argument_list|(
name|this
operator|.
name|getNext
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|setNext
argument_list|(
name|inode
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBlockReplication ()
specifier|public
name|short
name|getBlockReplication
parameter_list|()
block|{
return|return
name|Util
operator|.
name|getBlockReplication
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|collectSubtreeBlocksAndClear (BlocksMapUpdateInfo info)
specifier|protected
name|int
name|collectSubtreeBlocksAndClear
parameter_list|(
name|BlocksMapUpdateInfo
name|info
parameter_list|)
block|{
if|if
condition|(
name|next
operator|==
literal|null
operator|||
name|next
operator|==
name|this
condition|)
block|{
comment|// this is the only remaining inode.
return|return
name|super
operator|.
name|collectSubtreeBlocksAndClear
argument_list|(
name|info
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|Util
operator|.
name|collectSubtreeBlocksAndClear
argument_list|(
name|this
argument_list|,
name|info
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

