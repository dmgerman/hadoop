begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringEscapeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DatanodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DirectoryListing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|block
operator|.
name|BlockTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|block
operator|.
name|BlockTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|common
operator|.
name|JspHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ServletUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|DatanodeJspHelper
specifier|public
class|class
name|DatanodeJspHelper
block|{
DECL|method|getDFSClient (final UserGroupInformation user, final String addr, final Configuration conf )
specifier|private
specifier|static
name|DFSClient
name|getDFSClient
parameter_list|(
specifier|final
name|UserGroupInformation
name|user
parameter_list|,
specifier|final
name|String
name|addr
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|user
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|DFSClient
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|DFSClient
name|run
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|DFSClient
argument_list|(
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|addr
argument_list|)
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
comment|/**    * Internal convenience method for canonicalizing host name.    * @param addr name:port or name     * @return canonicalized host name    */
DECL|method|canonicalize (String addr)
specifier|private
specifier|static
name|String
name|canonicalize
parameter_list|(
name|String
name|addr
parameter_list|)
block|{
comment|// default port 1 is supplied to allow addr without port.
comment|// the port will be ignored.
return|return
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|addr
argument_list|,
literal|1
argument_list|)
operator|.
name|getAddress
argument_list|()
operator|.
name|getCanonicalHostName
argument_list|()
return|;
block|}
DECL|field|lsDateFormat
specifier|private
specifier|static
specifier|final
name|SimpleDateFormat
name|lsDateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd HH:mm"
argument_list|)
decl_stmt|;
comment|/**    * Get the default chunk size.    * @param conf the configuration    * @return the number of bytes to chunk in    */
DECL|method|getDefaultChunkSize (Configuration conf)
specifier|private
specifier|static
name|int
name|getDefaultChunkSize
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getInt
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_DEFAULT_CHUNK_VIEW_SIZE_KEY
argument_list|,
name|DFSConfigKeys
operator|.
name|DFS_DEFAULT_CHUNK_VIEW_SIZE_DEFAULT
argument_list|)
return|;
block|}
DECL|method|generateDirectoryStructure (JspWriter out, HttpServletRequest req, HttpServletResponse resp, Configuration conf )
specifier|static
name|void
name|generateDirectoryStructure
parameter_list|(
name|JspWriter
name|out
parameter_list|,
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|resp
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
specifier|final
name|String
name|dir
init|=
name|JspHelper
operator|.
name|validatePath
argument_list|(
name|StringEscapeUtils
operator|.
name|unescapeHtml
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"dir"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|dir
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|tokenString
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|JspHelper
operator|.
name|getUGI
argument_list|(
name|req
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|namenodeInfoPortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"namenodeInfoPort"
argument_list|)
decl_stmt|;
name|int
name|namenodeInfoPort
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|namenodeInfoPortStr
operator|!=
literal|null
condition|)
name|namenodeInfoPort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|namenodeInfoPortStr
argument_list|)
expr_stmt|;
specifier|final
name|String
name|nnAddr
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
decl_stmt|;
if|if
condition|(
name|nnAddr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
operator|+
literal|" url param is null"
argument_list|)
expr_stmt|;
return|return;
block|}
name|DFSClient
name|dfs
init|=
name|getDFSClient
argument_list|(
name|ugi
argument_list|,
name|nnAddr
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|target
init|=
name|dir
decl_stmt|;
specifier|final
name|HdfsFileStatus
name|targetStatus
init|=
name|dfs
operator|.
name|getFileInfo
argument_list|(
name|target
argument_list|)
decl_stmt|;
if|if
condition|(
name|targetStatus
operator|==
literal|null
condition|)
block|{
comment|// not exists
name|out
operator|.
name|print
argument_list|(
literal|"<h3>File or directory : "
operator|+
name|target
operator|+
literal|" does not exist</h3>"
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|printGotoForm
argument_list|(
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|target
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|targetStatus
operator|.
name|isDir
argument_list|()
condition|)
block|{
comment|// a file
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blocks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|dir
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
name|LocatedBlock
name|firstBlock
init|=
literal|null
decl_stmt|;
name|DatanodeInfo
index|[]
name|locations
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|blocks
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|firstBlock
operator|=
name|blocks
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|locations
operator|=
name|firstBlock
operator|.
name|getLocations
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|locations
operator|==
literal|null
operator|||
name|locations
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Empty file"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|DatanodeInfo
name|chosenNode
init|=
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|firstBlock
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|fqdn
init|=
name|canonicalize
argument_list|(
name|chosenNode
operator|.
name|getIpAddr
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|datanodePort
init|=
name|chosenNode
operator|.
name|getXferPort
argument_list|()
decl_stmt|;
name|String
name|redirectLocation
init|=
literal|"http://"
operator|+
name|fqdn
operator|+
literal|":"
operator|+
name|chosenNode
operator|.
name|getInfoPort
argument_list|()
operator|+
literal|"/browseBlock.jsp?blockId="
operator|+
name|firstBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
operator|+
literal|"&blockSize="
operator|+
name|firstBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
operator|+
literal|"&genstamp="
operator|+
name|firstBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getGenerationStamp
argument_list|()
operator|+
literal|"&filename="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|dir
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&datanodePort="
operator|+
name|datanodePort
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
decl_stmt|;
name|resp
operator|.
name|sendRedirect
argument_list|(
name|redirectLocation
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
comment|// directory
comment|// generate a table and dump the info
name|String
index|[]
name|headings
init|=
block|{
literal|"Name"
block|,
literal|"Type"
block|,
literal|"Size"
block|,
literal|"Replication"
block|,
literal|"Block Size"
block|,
literal|"Modification Time"
block|,
literal|"Permission"
block|,
literal|"Owner"
block|,
literal|"Group"
block|}
decl_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<h3>Contents of directory "
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|printPathWithLinks
argument_list|(
name|dir
argument_list|,
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"</h3><hr>"
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|printGotoForm
argument_list|(
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|dir
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|String
name|parent
decl_stmt|;
if|if
condition|(
operator|(
name|parent
operator|=
name|f
operator|.
name|getParent
argument_list|()
operator|)
operator|!=
literal|null
condition|)
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|req
operator|.
name|getRequestURL
argument_list|()
operator|+
literal|"?dir="
operator|+
name|parent
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
operator|+
literal|"\">Go to parent directory</a><br>"
argument_list|)
expr_stmt|;
name|DirectoryListing
name|thisListing
init|=
name|dfs
operator|.
name|listPaths
argument_list|(
name|target
argument_list|,
name|HdfsFileStatus
operator|.
name|EMPTY_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|thisListing
operator|==
literal|null
operator|||
name|thisListing
operator|.
name|getPartialListing
argument_list|()
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Empty directory"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|JspHelper
operator|.
name|addTableHeader
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|int
name|row
init|=
literal|0
decl_stmt|;
name|JspHelper
operator|.
name|addTableRow
argument_list|(
name|out
argument_list|,
name|headings
argument_list|,
name|row
operator|++
argument_list|)
expr_stmt|;
name|String
name|cols
index|[]
init|=
operator|new
name|String
index|[
name|headings
operator|.
name|length
index|]
decl_stmt|;
do|do
block|{
name|HdfsFileStatus
index|[]
name|files
init|=
name|thisListing
operator|.
name|getPartialListing
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|localFileName
init|=
name|files
index|[
name|i
index|]
operator|.
name|getLocalName
argument_list|()
decl_stmt|;
comment|// Get the location of the first block of the file
if|if
condition|(
operator|!
name|files
index|[
name|i
index|]
operator|.
name|isDir
argument_list|()
condition|)
block|{
name|cols
index|[
literal|1
index|]
operator|=
literal|"file"
expr_stmt|;
name|cols
index|[
literal|2
index|]
operator|=
name|StringUtils
operator|.
name|byteDesc
argument_list|(
name|files
index|[
name|i
index|]
operator|.
name|getLen
argument_list|()
argument_list|)
expr_stmt|;
name|cols
index|[
literal|3
index|]
operator|=
name|Short
operator|.
name|toString
argument_list|(
name|files
index|[
name|i
index|]
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
name|cols
index|[
literal|4
index|]
operator|=
name|StringUtils
operator|.
name|byteDesc
argument_list|(
name|files
index|[
name|i
index|]
operator|.
name|getBlockSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cols
index|[
literal|1
index|]
operator|=
literal|"dir"
expr_stmt|;
name|cols
index|[
literal|2
index|]
operator|=
literal|""
expr_stmt|;
name|cols
index|[
literal|3
index|]
operator|=
literal|""
expr_stmt|;
name|cols
index|[
literal|4
index|]
operator|=
literal|""
expr_stmt|;
block|}
name|String
name|datanodeUrl
init|=
name|req
operator|.
name|getRequestURL
argument_list|()
operator|+
literal|"?dir="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|files
index|[
name|i
index|]
operator|.
name|getFullName
argument_list|(
name|target
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
decl_stmt|;
name|cols
index|[
literal|0
index|]
operator|=
literal|"<a href=\""
operator|+
name|datanodeUrl
operator|+
literal|"\">"
operator|+
name|localFileName
operator|+
literal|"</a>"
expr_stmt|;
name|cols
index|[
literal|5
index|]
operator|=
name|lsDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
operator|(
name|files
index|[
name|i
index|]
operator|.
name|getModificationTime
argument_list|()
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|cols
index|[
literal|6
index|]
operator|=
name|files
index|[
name|i
index|]
operator|.
name|getPermission
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|cols
index|[
literal|7
index|]
operator|=
name|files
index|[
name|i
index|]
operator|.
name|getOwner
argument_list|()
expr_stmt|;
name|cols
index|[
literal|8
index|]
operator|=
name|files
index|[
name|i
index|]
operator|.
name|getGroup
argument_list|()
expr_stmt|;
name|JspHelper
operator|.
name|addTableRow
argument_list|(
name|out
argument_list|,
name|cols
argument_list|,
name|row
operator|++
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|thisListing
operator|.
name|hasMore
argument_list|()
condition|)
block|{
break|break;
block|}
name|thisListing
operator|=
name|dfs
operator|.
name|listPaths
argument_list|(
name|target
argument_list|,
name|thisListing
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|thisListing
operator|!=
literal|null
condition|)
do|;
name|JspHelper
operator|.
name|addTableFooter
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
name|out
operator|.
name|print
argument_list|(
literal|"<br><a href=\"http://"
operator|+
name|canonicalize
argument_list|(
name|nnAddr
argument_list|)
operator|+
literal|":"
operator|+
name|namenodeInfoPort
operator|+
literal|"/dfshealth.jsp\">Go back to DFS home</a>"
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|generateFileDetails (JspWriter out, HttpServletRequest req, Configuration conf )
specifier|static
name|void
name|generateFileDetails
parameter_list|(
name|JspWriter
name|out
parameter_list|,
name|HttpServletRequest
name|req
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|long
name|startOffset
init|=
literal|0
decl_stmt|;
name|int
name|datanodePort
decl_stmt|;
specifier|final
name|Long
name|blockId
init|=
name|JspHelper
operator|.
name|validateLong
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"blockId"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|blockId
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (blockId absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|tokenString
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|JspHelper
operator|.
name|getUGI
argument_list|(
name|req
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|datanodePortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"datanodePort"
argument_list|)
decl_stmt|;
if|if
condition|(
name|datanodePortStr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (datanodePort absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|datanodePort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|datanodePortStr
argument_list|)
expr_stmt|;
specifier|final
name|Long
name|genStamp
init|=
name|JspHelper
operator|.
name|validateLong
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"genstamp"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|genStamp
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (genstamp absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|namenodeInfoPortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"namenodeInfoPort"
argument_list|)
decl_stmt|;
name|int
name|namenodeInfoPort
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|namenodeInfoPortStr
operator|!=
literal|null
condition|)
name|namenodeInfoPort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|namenodeInfoPortStr
argument_list|)
expr_stmt|;
specifier|final
name|String
name|nnAddr
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
decl_stmt|;
if|if
condition|(
name|nnAddr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
operator|+
literal|" url param is null"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|int
name|chunkSizeToView
init|=
name|JspHelper
operator|.
name|string2ChunkSizeToView
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"chunkSizeToView"
argument_list|)
argument_list|,
name|getDefaultChunkSize
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|startOffsetStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"startOffset"
argument_list|)
decl_stmt|;
if|if
condition|(
name|startOffsetStr
operator|==
literal|null
operator|||
name|Long
operator|.
name|parseLong
argument_list|(
name|startOffsetStr
argument_list|)
operator|<
literal|0
condition|)
name|startOffset
operator|=
literal|0
expr_stmt|;
else|else
name|startOffset
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|startOffsetStr
argument_list|)
expr_stmt|;
name|String
name|path
init|=
name|StringEscapeUtils
operator|.
name|unescapeHtml
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"filename"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|==
literal|null
condition|)
block|{
name|path
operator|=
name|req
operator|.
name|getPathInfo
argument_list|()
operator|==
literal|null
condition|?
literal|"/"
else|:
name|req
operator|.
name|getPathInfo
argument_list|()
expr_stmt|;
block|}
specifier|final
name|String
name|filename
init|=
name|JspHelper
operator|.
name|validatePath
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|filename
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|String
name|blockSizeStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"blockSize"
argument_list|)
decl_stmt|;
if|if
condition|(
name|blockSizeStr
operator|==
literal|null
operator|||
name|blockSizeStr
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input"
argument_list|)
expr_stmt|;
return|return;
block|}
name|long
name|blockSize
init|=
name|Long
operator|.
name|parseLong
argument_list|(
name|blockSizeStr
argument_list|)
decl_stmt|;
specifier|final
name|DFSClient
name|dfs
init|=
name|getDFSClient
argument_list|(
name|ugi
argument_list|,
name|nnAddr
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blocks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|filename
argument_list|,
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
comment|// Add the various links for looking at the file contents
comment|// URL for downloading the full file
name|String
name|downloadUrl
init|=
literal|"http://"
operator|+
name|req
operator|.
name|getServerName
argument_list|()
operator|+
literal|":"
operator|+
name|req
operator|.
name|getServerPort
argument_list|()
operator|+
literal|"/streamFile"
operator|+
name|ServletUtil
operator|.
name|encodePath
argument_list|(
name|filename
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|,
literal|true
argument_list|)
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
decl_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a name=\"viewOptions\"></a>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|downloadUrl
operator|+
literal|"\">Download this file</a><br>"
argument_list|)
expr_stmt|;
name|DatanodeInfo
name|chosenNode
decl_stmt|;
comment|// URL for TAIL
name|LocatedBlock
name|lastBlk
init|=
name|blocks
operator|.
name|get
argument_list|(
name|blocks
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|chosenNode
operator|=
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|lastBlk
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|out
operator|.
name|print
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
name|String
name|fqdn
init|=
name|canonicalize
argument_list|(
name|chosenNode
operator|.
name|getIpAddr
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tailUrl
init|=
literal|"http://"
operator|+
name|fqdn
operator|+
literal|":"
operator|+
name|chosenNode
operator|.
name|getInfoPort
argument_list|()
operator|+
literal|"/tail.jsp?filename="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|filename
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
literal|"&chunkSizeToView="
operator|+
name|chunkSizeToView
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
operator|+
literal|"&referrer="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|req
operator|.
name|getRequestURL
argument_list|()
operator|+
literal|"?"
operator|+
name|req
operator|.
name|getQueryString
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|tailUrl
operator|+
literal|"\">Tail this file</a><br>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<form action=\"/browseBlock.jsp\" method=GET>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<b>Chunk size to view (in bytes, up to file's DFS block size):</b>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"blockId\" value=\""
operator|+
name|blockId
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"blockSize\" value=\""
operator|+
name|blockSize
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"startOffset\" value=\""
operator|+
name|startOffset
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"filename\" value=\""
operator|+
name|filename
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"genstamp\" value=\""
operator|+
name|genStamp
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"datanodePort\" value=\""
operator|+
name|datanodePort
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"namenodeInfoPort\" value=\""
operator|+
name|namenodeInfoPort
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\""
operator|+
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
operator|+
literal|"\" value=\""
operator|+
name|nnAddr
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"text\" name=\"chunkSizeToView\" value="
operator|+
name|chunkSizeToView
operator|+
literal|" size=10 maxlength=10>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"&nbsp;&nbsp;<input type=\"submit\" name=\"submit\" value=\"Refresh\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"</form>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a name=\"blockDetails\"></a>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<B>Total number of blocks: "
operator|+
name|blocks
operator|.
name|size
argument_list|()
operator|+
literal|"</B><br>"
argument_list|)
expr_stmt|;
comment|// generate a table and dump the info
name|out
operator|.
name|println
argument_list|(
literal|"\n<table>"
argument_list|)
expr_stmt|;
name|String
name|nnCanonicalName
init|=
name|canonicalize
argument_list|(
name|nnAddr
argument_list|)
decl_stmt|;
for|for
control|(
name|LocatedBlock
name|cur
range|:
name|blocks
control|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
specifier|final
name|String
name|blockidstring
init|=
name|Long
operator|.
name|toString
argument_list|(
name|cur
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
argument_list|)
decl_stmt|;
name|blockSize
operator|=
name|cur
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<td>"
operator|+
name|blockidstring
operator|+
literal|":</td>"
argument_list|)
expr_stmt|;
name|DatanodeInfo
index|[]
name|locs
init|=
name|cur
operator|.
name|getLocations
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|locs
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
name|String
name|datanodeAddr
init|=
name|locs
index|[
name|j
index|]
operator|.
name|getXferAddr
argument_list|()
decl_stmt|;
name|datanodePort
operator|=
name|locs
index|[
name|j
index|]
operator|.
name|getXferPort
argument_list|()
expr_stmt|;
name|fqdn
operator|=
name|canonicalize
argument_list|(
name|locs
index|[
name|j
index|]
operator|.
name|getIpAddr
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|blockUrl
init|=
literal|"http://"
operator|+
name|fqdn
operator|+
literal|":"
operator|+
name|locs
index|[
name|j
index|]
operator|.
name|getInfoPort
argument_list|()
operator|+
literal|"/browseBlock.jsp?blockId="
operator|+
name|blockidstring
operator|+
literal|"&blockSize="
operator|+
name|blockSize
operator|+
literal|"&filename="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|filename
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&datanodePort="
operator|+
name|datanodePort
operator|+
literal|"&genstamp="
operator|+
name|cur
operator|.
name|getBlock
argument_list|()
operator|.
name|getGenerationStamp
argument_list|()
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
literal|"&chunkSizeToView="
operator|+
name|chunkSizeToView
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
decl_stmt|;
name|String
name|blockInfoUrl
init|=
literal|"http://"
operator|+
name|nnCanonicalName
operator|+
literal|":"
operator|+
name|namenodeInfoPort
operator|+
literal|"/block_info_xml.jsp?blockId="
operator|+
name|blockidstring
decl_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<td>&nbsp</td><td><a href=\""
operator|+
name|blockUrl
operator|+
literal|"\">"
operator|+
name|datanodeAddr
operator|+
literal|"</a></td><td>"
operator|+
literal|"<a href=\""
operator|+
name|blockInfoUrl
operator|+
literal|"\">View Block Info</a></td>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<br><a href=\"http://"
operator|+
name|nnCanonicalName
operator|+
literal|":"
operator|+
name|namenodeInfoPort
operator|+
literal|"/dfshealth.jsp\">Go back to DFS home</a>"
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|generateFileChunks (JspWriter out, HttpServletRequest req, Configuration conf )
specifier|static
name|void
name|generateFileChunks
parameter_list|(
name|JspWriter
name|out
parameter_list|,
name|HttpServletRequest
name|req
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|long
name|startOffset
init|=
literal|0
decl_stmt|;
name|int
name|datanodePort
init|=
literal|0
decl_stmt|;
specifier|final
name|String
name|namenodeInfoPortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"namenodeInfoPort"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|nnAddr
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
decl_stmt|;
if|if
condition|(
name|nnAddr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
operator|+
literal|" url param is null"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|String
name|tokenString
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|JspHelper
operator|.
name|getUGI
argument_list|(
name|req
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|int
name|namenodeInfoPort
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|namenodeInfoPortStr
operator|!=
literal|null
condition|)
name|namenodeInfoPort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|namenodeInfoPortStr
argument_list|)
expr_stmt|;
specifier|final
name|String
name|filename
init|=
name|JspHelper
operator|.
name|validatePath
argument_list|(
name|StringEscapeUtils
operator|.
name|unescapeHtml
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"filename"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|filename
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (filename absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|Long
name|blockId
init|=
name|JspHelper
operator|.
name|validateLong
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"blockId"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|blockId
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (blockId absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|DFSClient
name|dfs
init|=
name|getDFSClient
argument_list|(
name|ugi
argument_list|,
name|nnAddr
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|bpid
init|=
literal|null
decl_stmt|;
name|Token
argument_list|<
name|BlockTokenIdentifier
argument_list|>
name|blockToken
init|=
name|BlockTokenSecretManager
operator|.
name|DUMMY_TOKEN
decl_stmt|;
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|filename
argument_list|,
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
if|if
condition|(
name|blks
operator|==
literal|null
operator|||
name|blks
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Can't locate file blocks"
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
name|boolean
name|needBlockToken
init|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_BLOCK_ACCESS_TOKEN_ENABLE_KEY
argument_list|,
name|DFSConfigKeys
operator|.
name|DFS_BLOCK_ACCESS_TOKEN_ENABLE_DEFAULT
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|blks
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|blks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
operator|==
name|blockId
condition|)
block|{
name|bpid
operator|=
name|blks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockPoolId
argument_list|()
expr_stmt|;
if|if
condition|(
name|needBlockToken
condition|)
block|{
name|blockToken
operator|=
name|blks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getBlockToken
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
specifier|final
name|Long
name|genStamp
init|=
name|JspHelper
operator|.
name|validateLong
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"genstamp"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|genStamp
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (genstamp absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|long
name|blockSize
init|=
literal|0
decl_stmt|;
specifier|final
name|String
name|blockSizeStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"blockSize"
argument_list|)
decl_stmt|;
if|if
condition|(
name|blockSizeStr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (blockSize absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|blockSize
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|blockSizeStr
argument_list|)
expr_stmt|;
specifier|final
name|int
name|chunkSizeToView
init|=
name|JspHelper
operator|.
name|string2ChunkSizeToView
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"chunkSizeToView"
argument_list|)
argument_list|,
name|getDefaultChunkSize
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|startOffsetStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"startOffset"
argument_list|)
decl_stmt|;
if|if
condition|(
name|startOffsetStr
operator|==
literal|null
operator|||
name|Long
operator|.
name|parseLong
argument_list|(
name|startOffsetStr
argument_list|)
operator|<
literal|0
condition|)
name|startOffset
operator|=
literal|0
expr_stmt|;
else|else
name|startOffset
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|startOffsetStr
argument_list|)
expr_stmt|;
name|String
name|datanodePortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"datanodePort"
argument_list|)
decl_stmt|;
if|if
condition|(
name|datanodePortStr
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (datanodePort absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|datanodePort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|datanodePortStr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<h3>File: "
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|printPathWithLinks
argument_list|(
name|filename
argument_list|,
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"</h3><hr>"
argument_list|)
expr_stmt|;
name|String
name|parent
init|=
operator|new
name|File
argument_list|(
name|filename
argument_list|)
operator|.
name|getParent
argument_list|()
decl_stmt|;
name|JspHelper
operator|.
name|printGotoForm
argument_list|(
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|parent
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\"http://"
operator|+
name|req
operator|.
name|getServerName
argument_list|()
operator|+
literal|":"
operator|+
name|req
operator|.
name|getServerPort
argument_list|()
operator|+
literal|"/browseDirectory.jsp?dir="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|parent
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
operator|+
literal|"\"><i>Go back to dir listing</i></a><br>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\"#viewOptions\">Advanced view/download options</a><br>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
comment|// Determine the prev& next blocks
name|long
name|nextStartOffset
init|=
literal|0
decl_stmt|;
name|long
name|nextBlockSize
init|=
literal|0
decl_stmt|;
name|String
name|nextBlockIdStr
init|=
literal|null
decl_stmt|;
name|String
name|nextGenStamp
init|=
literal|null
decl_stmt|;
name|String
name|nextHost
init|=
name|req
operator|.
name|getServerName
argument_list|()
decl_stmt|;
name|int
name|nextPort
init|=
name|req
operator|.
name|getServerPort
argument_list|()
decl_stmt|;
name|int
name|nextDatanodePort
init|=
name|datanodePort
decl_stmt|;
comment|// determine data for the next link
if|if
condition|(
name|startOffset
operator|+
name|chunkSizeToView
operator|>=
name|blockSize
condition|)
block|{
comment|// we have to go to the next block from this point onwards
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blocks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|filename
argument_list|,
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|blocks
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|blocks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
operator|==
name|blockId
condition|)
block|{
if|if
condition|(
name|i
operator|!=
name|blocks
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|LocatedBlock
name|nextBlock
init|=
name|blocks
operator|.
name|get
argument_list|(
name|i
operator|+
literal|1
argument_list|)
decl_stmt|;
name|nextBlockIdStr
operator|=
name|Long
operator|.
name|toString
argument_list|(
name|nextBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
argument_list|)
expr_stmt|;
name|nextGenStamp
operator|=
name|Long
operator|.
name|toString
argument_list|(
name|nextBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
expr_stmt|;
name|nextStartOffset
operator|=
literal|0
expr_stmt|;
name|nextBlockSize
operator|=
name|nextBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
expr_stmt|;
name|DatanodeInfo
name|d
init|=
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|nextBlock
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|nextDatanodePort
operator|=
name|d
operator|.
name|getXferPort
argument_list|()
expr_stmt|;
name|nextHost
operator|=
name|d
operator|.
name|getIpAddr
argument_list|()
expr_stmt|;
name|nextPort
operator|=
name|d
operator|.
name|getInfoPort
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
comment|// we are in the same block
name|nextBlockIdStr
operator|=
name|blockId
operator|.
name|toString
argument_list|()
expr_stmt|;
name|nextStartOffset
operator|=
name|startOffset
operator|+
name|chunkSizeToView
expr_stmt|;
name|nextBlockSize
operator|=
name|blockSize
expr_stmt|;
name|nextGenStamp
operator|=
name|genStamp
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|String
name|nextUrl
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|nextBlockIdStr
operator|!=
literal|null
condition|)
block|{
name|nextUrl
operator|=
literal|"http://"
operator|+
name|canonicalize
argument_list|(
name|nextHost
argument_list|)
operator|+
literal|":"
operator|+
name|nextPort
operator|+
literal|"/browseBlock.jsp?blockId="
operator|+
name|nextBlockIdStr
operator|+
literal|"&blockSize="
operator|+
name|nextBlockSize
operator|+
literal|"&startOffset="
operator|+
name|nextStartOffset
operator|+
literal|"&genstamp="
operator|+
name|nextGenStamp
operator|+
literal|"&filename="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|filename
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&chunkSizeToView="
operator|+
name|chunkSizeToView
operator|+
literal|"&datanodePort="
operator|+
name|nextDatanodePort
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|nextUrl
operator|+
literal|"\">View Next chunk</a>&nbsp;&nbsp;"
argument_list|)
expr_stmt|;
block|}
comment|// determine data for the prev link
name|String
name|prevBlockIdStr
init|=
literal|null
decl_stmt|;
name|String
name|prevGenStamp
init|=
literal|null
decl_stmt|;
name|long
name|prevStartOffset
init|=
literal|0
decl_stmt|;
name|long
name|prevBlockSize
init|=
literal|0
decl_stmt|;
name|String
name|prevHost
init|=
name|req
operator|.
name|getServerName
argument_list|()
decl_stmt|;
name|int
name|prevPort
init|=
name|req
operator|.
name|getServerPort
argument_list|()
decl_stmt|;
name|int
name|prevDatanodePort
init|=
name|datanodePort
decl_stmt|;
if|if
condition|(
name|startOffset
operator|==
literal|0
condition|)
block|{
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blocks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|filename
argument_list|,
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|blocks
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|blocks
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
operator|==
name|blockId
condition|)
block|{
if|if
condition|(
name|i
operator|!=
literal|0
condition|)
block|{
name|LocatedBlock
name|prevBlock
init|=
name|blocks
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|prevBlockIdStr
operator|=
name|Long
operator|.
name|toString
argument_list|(
name|prevBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
argument_list|)
expr_stmt|;
name|prevGenStamp
operator|=
name|Long
operator|.
name|toString
argument_list|(
name|prevBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getGenerationStamp
argument_list|()
argument_list|)
expr_stmt|;
name|prevStartOffset
operator|=
name|prevBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
operator|-
name|chunkSizeToView
expr_stmt|;
if|if
condition|(
name|prevStartOffset
operator|<
literal|0
condition|)
name|prevStartOffset
operator|=
literal|0
expr_stmt|;
name|prevBlockSize
operator|=
name|prevBlock
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
expr_stmt|;
name|DatanodeInfo
name|d
init|=
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|prevBlock
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|prevDatanodePort
operator|=
name|d
operator|.
name|getXferPort
argument_list|()
expr_stmt|;
name|prevHost
operator|=
name|d
operator|.
name|getIpAddr
argument_list|()
expr_stmt|;
name|prevPort
operator|=
name|d
operator|.
name|getInfoPort
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
comment|// we are in the same block
name|prevBlockIdStr
operator|=
name|blockId
operator|.
name|toString
argument_list|()
expr_stmt|;
name|prevStartOffset
operator|=
name|startOffset
operator|-
name|chunkSizeToView
expr_stmt|;
if|if
condition|(
name|prevStartOffset
operator|<
literal|0
condition|)
name|prevStartOffset
operator|=
literal|0
expr_stmt|;
name|prevBlockSize
operator|=
name|blockSize
expr_stmt|;
name|prevGenStamp
operator|=
name|genStamp
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|String
name|prevUrl
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|prevBlockIdStr
operator|!=
literal|null
condition|)
block|{
name|prevUrl
operator|=
literal|"http://"
operator|+
name|canonicalize
argument_list|(
name|prevHost
argument_list|)
operator|+
literal|":"
operator|+
name|prevPort
operator|+
literal|"/browseBlock.jsp?blockId="
operator|+
name|prevBlockIdStr
operator|+
literal|"&blockSize="
operator|+
name|prevBlockSize
operator|+
literal|"&startOffset="
operator|+
name|prevStartOffset
operator|+
literal|"&filename="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|filename
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&chunkSizeToView="
operator|+
name|chunkSizeToView
operator|+
literal|"&genstamp="
operator|+
name|prevGenStamp
operator|+
literal|"&datanodePort="
operator|+
name|prevDatanodePort
operator|+
literal|"&namenodeInfoPort="
operator|+
name|namenodeInfoPort
operator|+
name|JspHelper
operator|.
name|getDelegationTokenUrlParam
argument_list|(
name|tokenString
argument_list|)
operator|+
name|JspHelper
operator|.
name|getUrlParam
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|prevUrl
operator|+
literal|"\">View Prev chunk</a>&nbsp;&nbsp;"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|print
argument_list|(
literal|"<hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<textarea cols=\"100\" rows=\"25\" wrap=\"virtual\" style=\"width:100%\" READONLY>"
argument_list|)
expr_stmt|;
try|try
block|{
name|JspHelper
operator|.
name|streamBlockInAscii
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|req
operator|.
name|getServerName
argument_list|()
argument_list|,
name|datanodePort
argument_list|)
argument_list|,
name|bpid
argument_list|,
name|blockId
argument_list|,
name|blockToken
argument_list|,
name|genStamp
argument_list|,
name|blockSize
argument_list|,
name|startOffset
argument_list|,
name|chunkSizeToView
argument_list|,
name|out
argument_list|,
name|conf
argument_list|,
name|dfs
operator|.
name|getDataEncryptionKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|out
operator|.
name|print
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|print
argument_list|(
literal|"</textarea>"
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|generateFileChunksForTail (JspWriter out, HttpServletRequest req, Configuration conf )
specifier|static
name|void
name|generateFileChunksForTail
parameter_list|(
name|JspWriter
name|out
parameter_list|,
name|HttpServletRequest
name|req
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|referrer
init|=
literal|null
decl_stmt|;
name|boolean
name|noLink
init|=
literal|false
decl_stmt|;
try|try
block|{
name|referrer
operator|=
operator|new
name|URL
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"referrer"
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|referrer
operator|=
literal|null
expr_stmt|;
name|noLink
operator|=
literal|true
expr_stmt|;
block|}
specifier|final
name|String
name|filename
init|=
name|JspHelper
operator|.
name|validatePath
argument_list|(
name|StringEscapeUtils
operator|.
name|unescapeHtml
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"filename"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|filename
operator|==
literal|null
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"Invalid input (file name absent)"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|tokenString
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|DELEGATION_PARAMETER_NAME
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|JspHelper
operator|.
name|getUGI
argument_list|(
name|req
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|namenodeInfoPortStr
init|=
name|req
operator|.
name|getParameter
argument_list|(
literal|"namenodeInfoPort"
argument_list|)
decl_stmt|;
name|String
name|nnAddr
init|=
name|req
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
decl_stmt|;
name|int
name|namenodeInfoPort
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|namenodeInfoPortStr
operator|!=
literal|null
condition|)
name|namenodeInfoPort
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|namenodeInfoPortStr
argument_list|)
expr_stmt|;
specifier|final
name|int
name|chunkSizeToView
init|=
name|JspHelper
operator|.
name|string2ChunkSizeToView
argument_list|(
name|req
operator|.
name|getParameter
argument_list|(
literal|"chunkSizeToView"
argument_list|)
argument_list|,
name|getDefaultChunkSize
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|noLink
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"<h3>Tail of File: "
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|printPathWithLinks
argument_list|(
name|filename
argument_list|,
name|out
argument_list|,
name|namenodeInfoPort
argument_list|,
name|tokenString
argument_list|,
name|nnAddr
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"</h3><hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<a href=\""
operator|+
name|referrer
operator|+
literal|"\">Go Back to File View</a><hr>"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|print
argument_list|(
literal|"<h3>"
operator|+
name|filename
operator|+
literal|"</h3>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|print
argument_list|(
literal|"<b>Chunk size to view (in bytes, up to file's DFS block size):</b>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"text\" name=\"chunkSizeToView\" value="
operator|+
name|chunkSizeToView
operator|+
literal|" size=10 maxlength=10>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"&nbsp;&nbsp;<input type=\"submit\" name=\"submit\" value=\"Refresh\"><hr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"filename\" value=\""
operator|+
name|filename
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"namenodeInfoPort\" value=\""
operator|+
name|namenodeInfoPort
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\""
operator|+
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
operator|+
literal|"\" value=\""
operator|+
name|nnAddr
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|noLink
condition|)
name|out
operator|.
name|print
argument_list|(
literal|"<input type=\"hidden\" name=\"referrer\" value=\""
operator|+
name|referrer
operator|+
literal|"\">"
argument_list|)
expr_stmt|;
comment|// fetch the block from the datanode that has the last block for this file
specifier|final
name|DFSClient
name|dfs
init|=
name|getDFSClient
argument_list|(
name|ugi
argument_list|,
name|nnAddr
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|LocatedBlock
argument_list|>
name|blocks
init|=
name|dfs
operator|.
name|getNamenode
argument_list|()
operator|.
name|getBlockLocations
argument_list|(
name|filename
argument_list|,
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|getLocatedBlocks
argument_list|()
decl_stmt|;
if|if
condition|(
name|blocks
operator|==
literal|null
operator|||
name|blocks
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|out
operator|.
name|print
argument_list|(
literal|"No datanodes contain blocks of file "
operator|+
name|filename
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
name|LocatedBlock
name|lastBlk
init|=
name|blocks
operator|.
name|get
argument_list|(
name|blocks
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|String
name|poolId
init|=
name|lastBlk
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockPoolId
argument_list|()
decl_stmt|;
name|long
name|blockSize
init|=
name|lastBlk
operator|.
name|getBlock
argument_list|()
operator|.
name|getNumBytes
argument_list|()
decl_stmt|;
name|long
name|blockId
init|=
name|lastBlk
operator|.
name|getBlock
argument_list|()
operator|.
name|getBlockId
argument_list|()
decl_stmt|;
name|Token
argument_list|<
name|BlockTokenIdentifier
argument_list|>
name|accessToken
init|=
name|lastBlk
operator|.
name|getBlockToken
argument_list|()
decl_stmt|;
name|long
name|genStamp
init|=
name|lastBlk
operator|.
name|getBlock
argument_list|()
operator|.
name|getGenerationStamp
argument_list|()
decl_stmt|;
name|DatanodeInfo
name|chosenNode
decl_stmt|;
try|try
block|{
name|chosenNode
operator|=
name|JspHelper
operator|.
name|bestNode
argument_list|(
name|lastBlk
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|out
operator|.
name|print
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
name|InetSocketAddress
name|addr
init|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|chosenNode
operator|.
name|getXferAddr
argument_list|()
argument_list|)
decl_stmt|;
comment|// view the last chunkSizeToView bytes while Tailing
specifier|final
name|long
name|startOffset
init|=
name|blockSize
operator|>=
name|chunkSizeToView
condition|?
name|blockSize
operator|-
name|chunkSizeToView
else|:
literal|0
decl_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"<textarea cols=\"100\" rows=\"25\" wrap=\"virtual\" style=\"width:100%\" READONLY>"
argument_list|)
expr_stmt|;
name|JspHelper
operator|.
name|streamBlockInAscii
argument_list|(
name|addr
argument_list|,
name|poolId
argument_list|,
name|blockId
argument_list|,
name|accessToken
argument_list|,
name|genStamp
argument_list|,
name|blockSize
argument_list|,
name|startOffset
argument_list|,
name|chunkSizeToView
argument_list|,
name|out
argument_list|,
name|conf
argument_list|,
name|dfs
operator|.
name|getDataEncryptionKey
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
literal|"</textarea>"
argument_list|)
expr_stmt|;
name|dfs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/** Get DFSClient for a namenode corresponding to the BPID from a datanode */
DECL|method|getDFSClient (final HttpServletRequest request, final DataNode datanode, final Configuration conf, final UserGroupInformation ugi)
specifier|public
specifier|static
name|DFSClient
name|getDFSClient
parameter_list|(
specifier|final
name|HttpServletRequest
name|request
parameter_list|,
specifier|final
name|DataNode
name|datanode
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
specifier|final
name|String
name|nnAddr
init|=
name|request
operator|.
name|getParameter
argument_list|(
name|JspHelper
operator|.
name|NAMENODE_ADDRESS
argument_list|)
decl_stmt|;
return|return
name|getDFSClient
argument_list|(
name|ugi
argument_list|,
name|nnAddr
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

