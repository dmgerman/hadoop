begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.datanode.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|metrics
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|SessionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableQuantiles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableRate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeInt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|source
operator|.
name|JvmMetrics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadLocalRandom
import|;
end_import

begin_comment
comment|/**  *  * This class is for maintaining  the various DataNode statistics  * and publishing them through the metrics interfaces.  * This also registers the JMX MBean for RPC.  *<p>  * This class has a number of metrics variables that are publicly accessible;  * these variables (objects) have methods to update their values;  *  for example:  *<p> {@link #blocksRead}.inc()  *  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"DataNode metrics"
argument_list|,
name|context
operator|=
literal|"dfs"
argument_list|)
DECL|class|DataNodeMetrics
specifier|public
class|class
name|DataNodeMetrics
block|{
DECL|field|bytesWritten
annotation|@
name|Metric
name|MutableCounterLong
name|bytesWritten
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Milliseconds spent writing"
argument_list|)
DECL|field|totalWriteTime
name|MutableCounterLong
name|totalWriteTime
decl_stmt|;
DECL|field|bytesRead
annotation|@
name|Metric
name|MutableCounterLong
name|bytesRead
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Milliseconds spent reading"
argument_list|)
DECL|field|totalReadTime
name|MutableCounterLong
name|totalReadTime
decl_stmt|;
DECL|field|blocksWritten
annotation|@
name|Metric
name|MutableCounterLong
name|blocksWritten
decl_stmt|;
DECL|field|blocksRead
annotation|@
name|Metric
name|MutableCounterLong
name|blocksRead
decl_stmt|;
DECL|field|blocksReplicated
annotation|@
name|Metric
name|MutableCounterLong
name|blocksReplicated
decl_stmt|;
DECL|field|blocksRemoved
annotation|@
name|Metric
name|MutableCounterLong
name|blocksRemoved
decl_stmt|;
DECL|field|blocksVerified
annotation|@
name|Metric
name|MutableCounterLong
name|blocksVerified
decl_stmt|;
DECL|field|blockVerificationFailures
annotation|@
name|Metric
name|MutableCounterLong
name|blockVerificationFailures
decl_stmt|;
DECL|field|blocksCached
annotation|@
name|Metric
name|MutableCounterLong
name|blocksCached
decl_stmt|;
DECL|field|blocksUncached
annotation|@
name|Metric
name|MutableCounterLong
name|blocksUncached
decl_stmt|;
DECL|field|readsFromLocalClient
annotation|@
name|Metric
name|MutableCounterLong
name|readsFromLocalClient
decl_stmt|;
DECL|field|readsFromRemoteClient
annotation|@
name|Metric
name|MutableCounterLong
name|readsFromRemoteClient
decl_stmt|;
DECL|field|writesFromLocalClient
annotation|@
name|Metric
name|MutableCounterLong
name|writesFromLocalClient
decl_stmt|;
DECL|field|writesFromRemoteClient
annotation|@
name|Metric
name|MutableCounterLong
name|writesFromRemoteClient
decl_stmt|;
DECL|field|blocksGetLocalPathInfo
annotation|@
name|Metric
name|MutableCounterLong
name|blocksGetLocalPathInfo
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Bytes read by remote client"
argument_list|)
DECL|field|remoteBytesRead
name|MutableCounterLong
name|remoteBytesRead
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Bytes written by remote client"
argument_list|)
DECL|field|remoteBytesWritten
name|MutableCounterLong
name|remoteBytesWritten
decl_stmt|;
comment|// RamDisk metrics on read/write
DECL|field|ramDiskBlocksWrite
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksWrite
decl_stmt|;
DECL|field|ramDiskBlocksWriteFallback
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksWriteFallback
decl_stmt|;
DECL|field|ramDiskBytesWrite
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBytesWrite
decl_stmt|;
DECL|field|ramDiskBlocksReadHits
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksReadHits
decl_stmt|;
comment|// RamDisk metrics on eviction
DECL|field|ramDiskBlocksEvicted
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksEvicted
decl_stmt|;
DECL|field|ramDiskBlocksEvictedWithoutRead
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksEvictedWithoutRead
decl_stmt|;
DECL|field|ramDiskBlocksEvictionWindowMs
annotation|@
name|Metric
name|MutableRate
name|ramDiskBlocksEvictionWindowMs
decl_stmt|;
DECL|field|ramDiskBlocksEvictionWindowMsQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|ramDiskBlocksEvictionWindowMsQuantiles
decl_stmt|;
comment|// RamDisk metrics on lazy persist
DECL|field|ramDiskBlocksLazyPersisted
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksLazyPersisted
decl_stmt|;
DECL|field|ramDiskBlocksDeletedBeforeLazyPersisted
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBlocksDeletedBeforeLazyPersisted
decl_stmt|;
DECL|field|ramDiskBytesLazyPersisted
annotation|@
name|Metric
name|MutableCounterLong
name|ramDiskBytesLazyPersisted
decl_stmt|;
DECL|field|ramDiskBlocksLazyPersistWindowMs
annotation|@
name|Metric
name|MutableRate
name|ramDiskBlocksLazyPersistWindowMs
decl_stmt|;
DECL|field|ramDiskBlocksLazyPersistWindowMsQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|ramDiskBlocksLazyPersistWindowMsQuantiles
decl_stmt|;
DECL|field|fsyncCount
annotation|@
name|Metric
name|MutableCounterLong
name|fsyncCount
decl_stmt|;
DECL|field|volumeFailures
annotation|@
name|Metric
name|MutableCounterLong
name|volumeFailures
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of network errors on the datanode"
argument_list|)
DECL|field|datanodeNetworkErrors
name|MutableCounterLong
name|datanodeNetworkErrors
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of active dataNode xceivers"
argument_list|)
DECL|field|dataNodeActiveXceiversCount
specifier|private
name|MutableGaugeInt
name|dataNodeActiveXceiversCount
decl_stmt|;
DECL|field|readBlockOp
annotation|@
name|Metric
name|MutableRate
name|readBlockOp
decl_stmt|;
DECL|field|writeBlockOp
annotation|@
name|Metric
name|MutableRate
name|writeBlockOp
decl_stmt|;
DECL|field|blockChecksumOp
annotation|@
name|Metric
name|MutableRate
name|blockChecksumOp
decl_stmt|;
DECL|field|copyBlockOp
annotation|@
name|Metric
name|MutableRate
name|copyBlockOp
decl_stmt|;
DECL|field|replaceBlockOp
annotation|@
name|Metric
name|MutableRate
name|replaceBlockOp
decl_stmt|;
DECL|field|heartbeats
annotation|@
name|Metric
name|MutableRate
name|heartbeats
decl_stmt|;
DECL|field|heartbeatsTotal
annotation|@
name|Metric
name|MutableRate
name|heartbeatsTotal
decl_stmt|;
DECL|field|lifelines
annotation|@
name|Metric
name|MutableRate
name|lifelines
decl_stmt|;
DECL|field|blockReports
annotation|@
name|Metric
name|MutableRate
name|blockReports
decl_stmt|;
DECL|field|incrementalBlockReports
annotation|@
name|Metric
name|MutableRate
name|incrementalBlockReports
decl_stmt|;
DECL|field|cacheReports
annotation|@
name|Metric
name|MutableRate
name|cacheReports
decl_stmt|;
DECL|field|packetAckRoundTripTimeNanos
annotation|@
name|Metric
name|MutableRate
name|packetAckRoundTripTimeNanos
decl_stmt|;
DECL|field|packetAckRoundTripTimeNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|packetAckRoundTripTimeNanosQuantiles
decl_stmt|;
DECL|field|flushNanos
annotation|@
name|Metric
name|MutableRate
name|flushNanos
decl_stmt|;
DECL|field|flushNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|flushNanosQuantiles
decl_stmt|;
DECL|field|fsyncNanos
annotation|@
name|Metric
name|MutableRate
name|fsyncNanos
decl_stmt|;
DECL|field|fsyncNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|fsyncNanosQuantiles
decl_stmt|;
DECL|field|sendDataPacketBlockedOnNetworkNanos
annotation|@
name|Metric
name|MutableRate
name|sendDataPacketBlockedOnNetworkNanos
decl_stmt|;
DECL|field|sendDataPacketBlockedOnNetworkNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|sendDataPacketBlockedOnNetworkNanosQuantiles
decl_stmt|;
DECL|field|sendDataPacketTransferNanos
annotation|@
name|Metric
name|MutableRate
name|sendDataPacketTransferNanos
decl_stmt|;
DECL|field|sendDataPacketTransferNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|sendDataPacketTransferNanosQuantiles
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of blocks in pending IBR"
argument_list|)
DECL|field|blocksInPendingIBR
specifier|private
name|MutableGaugeLong
name|blocksInPendingIBR
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of blocks at receiving status in pending IBR"
argument_list|)
DECL|field|blocksReceivingInPendingIBR
specifier|private
name|MutableGaugeLong
name|blocksReceivingInPendingIBR
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of blocks at received status in pending IBR"
argument_list|)
DECL|field|blocksReceivedInPendingIBR
specifier|private
name|MutableGaugeLong
name|blocksReceivedInPendingIBR
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of blocks at deleted status in pending IBR"
argument_list|)
DECL|field|blocksDeletedInPendingIBR
specifier|private
name|MutableGaugeLong
name|blocksDeletedInPendingIBR
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of erasure coding reconstruction tasks"
argument_list|)
DECL|field|ecReconstructionTasks
name|MutableCounterLong
name|ecReconstructionTasks
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Count of erasure coding failed reconstruction tasks"
argument_list|)
DECL|field|ecFailedReconstructionTasks
name|MutableCounterLong
name|ecFailedReconstructionTasks
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Nanoseconds spent by decoding tasks"
argument_list|)
DECL|field|ecDecodingTimeNanos
name|MutableCounterLong
name|ecDecodingTimeNanos
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Bytes read by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionBytesRead
name|MutableCounterLong
name|ecReconstructionBytesRead
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Bytes written by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionBytesWritten
name|MutableCounterLong
name|ecReconstructionBytesWritten
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Bytes remote read by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionRemoteBytesRead
name|MutableCounterLong
name|ecReconstructionRemoteBytesRead
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Milliseconds spent on read by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionReadTimeMillis
specifier|private
name|MutableCounterLong
name|ecReconstructionReadTimeMillis
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Milliseconds spent on decoding by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionDecodingTimeMillis
specifier|private
name|MutableCounterLong
name|ecReconstructionDecodingTimeMillis
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Milliseconds spent on write by erasure coding worker"
argument_list|)
DECL|field|ecReconstructionWriteTimeMillis
specifier|private
name|MutableCounterLong
name|ecReconstructionWriteTimeMillis
decl_stmt|;
DECL|field|registry
specifier|final
name|MetricsRegistry
name|registry
init|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"datanode"
argument_list|)
decl_stmt|;
DECL|field|name
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|jvmMetrics
name|JvmMetrics
name|jvmMetrics
init|=
literal|null
decl_stmt|;
DECL|method|DataNodeMetrics (String name, String sessionId, int[] intervals, final JvmMetrics jvmMetrics)
specifier|public
name|DataNodeMetrics
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|sessionId
parameter_list|,
name|int
index|[]
name|intervals
parameter_list|,
specifier|final
name|JvmMetrics
name|jvmMetrics
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|jvmMetrics
operator|=
name|jvmMetrics
expr_stmt|;
name|registry
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
specifier|final
name|int
name|len
init|=
name|intervals
operator|.
name|length
decl_stmt|;
name|packetAckRoundTripTimeNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|flushNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|fsyncNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|sendDataPacketBlockedOnNetworkNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|sendDataPacketTransferNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|ramDiskBlocksEvictionWindowMsQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|ramDiskBlocksLazyPersistWindowMsQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|len
condition|;
name|i
operator|++
control|)
block|{
name|int
name|interval
init|=
name|intervals
index|[
name|i
index|]
decl_stmt|;
name|packetAckRoundTripTimeNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"packetAckRoundTripTimeNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Packet Ack RTT in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|flushNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"flushNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Disk flush latency in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|fsyncNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"fsyncNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Disk fsync latency in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|sendDataPacketBlockedOnNetworkNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"sendDataPacketBlockedOnNetworkNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Time blocked on network while sending a packet in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|sendDataPacketTransferNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"sendDataPacketTransferNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Time reading from disk and writing to network while sending "
operator|+
literal|"a packet in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|ramDiskBlocksEvictionWindowMsQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"ramDiskBlocksEvictionWindows"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Time between the RamDisk block write and eviction in ms"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|ramDiskBlocksLazyPersistWindowMsQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"ramDiskBlocksLazyPersistWindows"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Time between the RamDisk block write and disk persist in ms"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|create (Configuration conf, String dnName)
specifier|public
specifier|static
name|DataNodeMetrics
name|create
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|String
name|dnName
parameter_list|)
block|{
name|String
name|sessionId
init|=
name|conf
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_METRICS_SESSION_ID_KEY
argument_list|)
decl_stmt|;
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|JvmMetrics
name|jm
init|=
name|JvmMetrics
operator|.
name|create
argument_list|(
literal|"DataNode"
argument_list|,
name|sessionId
argument_list|,
name|ms
argument_list|)
decl_stmt|;
name|String
name|name
init|=
literal|"DataNodeActivity-"
operator|+
operator|(
name|dnName
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"UndefinedDataNodeName"
operator|+
name|ThreadLocalRandom
operator|.
name|current
argument_list|()
operator|.
name|nextInt
argument_list|()
else|:
name|dnName
operator|.
name|replace
argument_list|(
literal|':'
argument_list|,
literal|'-'
argument_list|)
operator|)
decl_stmt|;
comment|// Percentile measurement is off by default, by watching no intervals
name|int
index|[]
name|intervals
init|=
name|conf
operator|.
name|getInts
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_METRICS_PERCENTILES_INTERVALS_KEY
argument_list|)
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
operator|new
name|DataNodeMetrics
argument_list|(
name|name
argument_list|,
name|sessionId
argument_list|,
name|intervals
argument_list|,
name|jm
argument_list|)
argument_list|)
return|;
block|}
DECL|method|name ()
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getJvmMetrics ()
specifier|public
name|JvmMetrics
name|getJvmMetrics
parameter_list|()
block|{
return|return
name|jvmMetrics
return|;
block|}
DECL|method|addHeartbeat (long latency)
specifier|public
name|void
name|addHeartbeat
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|heartbeats
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addHeartbeatTotal (long latency)
specifier|public
name|void
name|addHeartbeatTotal
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|heartbeatsTotal
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addLifeline (long latency)
specifier|public
name|void
name|addLifeline
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|lifelines
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addBlockReport (long latency)
specifier|public
name|void
name|addBlockReport
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|blockReports
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addIncrementalBlockReport (long latency)
specifier|public
name|void
name|addIncrementalBlockReport
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|incrementalBlockReports
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addCacheReport (long latency)
specifier|public
name|void
name|addCacheReport
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|cacheReports
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBlocksReplicated ()
specifier|public
name|void
name|incrBlocksReplicated
parameter_list|()
block|{
name|blocksReplicated
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksWritten ()
specifier|public
name|void
name|incrBlocksWritten
parameter_list|()
block|{
name|blocksWritten
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksRemoved (int delta)
specifier|public
name|void
name|incrBlocksRemoved
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|blocksRemoved
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBytesWritten (int delta)
specifier|public
name|void
name|incrBytesWritten
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|bytesWritten
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBlockVerificationFailures ()
specifier|public
name|void
name|incrBlockVerificationFailures
parameter_list|()
block|{
name|blockVerificationFailures
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksVerified ()
specifier|public
name|void
name|incrBlocksVerified
parameter_list|()
block|{
name|blocksVerified
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksCached (int delta)
specifier|public
name|void
name|incrBlocksCached
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|blocksCached
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBlocksUncached (int delta)
specifier|public
name|void
name|incrBlocksUncached
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|blocksUncached
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
DECL|method|addReadBlockOp (long latency)
specifier|public
name|void
name|addReadBlockOp
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|readBlockOp
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addWriteBlockOp (long latency)
specifier|public
name|void
name|addWriteBlockOp
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|writeBlockOp
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addReplaceBlockOp (long latency)
specifier|public
name|void
name|addReplaceBlockOp
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|replaceBlockOp
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addCopyBlockOp (long latency)
specifier|public
name|void
name|addCopyBlockOp
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|copyBlockOp
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|addBlockChecksumOp (long latency)
specifier|public
name|void
name|addBlockChecksumOp
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|blockChecksumOp
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBytesRead (int delta)
specifier|public
name|void
name|incrBytesRead
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|bytesRead
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBlocksRead ()
specifier|public
name|void
name|incrBlocksRead
parameter_list|()
block|{
name|blocksRead
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrFsyncCount ()
specifier|public
name|void
name|incrFsyncCount
parameter_list|()
block|{
name|fsyncCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrTotalWriteTime (long timeTaken)
specifier|public
name|void
name|incrTotalWriteTime
parameter_list|(
name|long
name|timeTaken
parameter_list|)
block|{
name|totalWriteTime
operator|.
name|incr
argument_list|(
name|timeTaken
argument_list|)
expr_stmt|;
block|}
DECL|method|incrTotalReadTime (long timeTaken)
specifier|public
name|void
name|incrTotalReadTime
parameter_list|(
name|long
name|timeTaken
parameter_list|)
block|{
name|totalReadTime
operator|.
name|incr
argument_list|(
name|timeTaken
argument_list|)
expr_stmt|;
block|}
DECL|method|addPacketAckRoundTripTimeNanos (long latencyNanos)
specifier|public
name|void
name|addPacketAckRoundTripTimeNanos
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|packetAckRoundTripTimeNanos
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|packetAckRoundTripTimeNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addFlushNanos (long latencyNanos)
specifier|public
name|void
name|addFlushNanos
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|flushNanos
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|flushNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addFsyncNanos (long latencyNanos)
specifier|public
name|void
name|addFsyncNanos
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|fsyncNanos
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|fsyncNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|DefaultMetricsSystem
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
DECL|method|incrWritesFromClient (boolean local, long size)
specifier|public
name|void
name|incrWritesFromClient
parameter_list|(
name|boolean
name|local
parameter_list|,
name|long
name|size
parameter_list|)
block|{
if|if
condition|(
name|local
condition|)
block|{
name|writesFromLocalClient
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|writesFromRemoteClient
operator|.
name|incr
argument_list|()
expr_stmt|;
name|remoteBytesWritten
operator|.
name|incr
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|incrReadsFromClient (boolean local, long size)
specifier|public
name|void
name|incrReadsFromClient
parameter_list|(
name|boolean
name|local
parameter_list|,
name|long
name|size
parameter_list|)
block|{
if|if
condition|(
name|local
condition|)
block|{
name|readsFromLocalClient
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|readsFromRemoteClient
operator|.
name|incr
argument_list|()
expr_stmt|;
name|remoteBytesRead
operator|.
name|incr
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|incrVolumeFailures ()
specifier|public
name|void
name|incrVolumeFailures
parameter_list|()
block|{
name|volumeFailures
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrDatanodeNetworkErrors ()
specifier|public
name|void
name|incrDatanodeNetworkErrors
parameter_list|()
block|{
name|datanodeNetworkErrors
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
comment|/** Increment for getBlockLocalPathInfo calls */
DECL|method|incrBlocksGetLocalPathInfo ()
specifier|public
name|void
name|incrBlocksGetLocalPathInfo
parameter_list|()
block|{
name|blocksGetLocalPathInfo
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|addSendDataPacketBlockedOnNetworkNanos (long latencyNanos)
specifier|public
name|void
name|addSendDataPacketBlockedOnNetworkNanos
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|sendDataPacketBlockedOnNetworkNanos
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|sendDataPacketBlockedOnNetworkNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addSendDataPacketTransferNanos (long latencyNanos)
specifier|public
name|void
name|addSendDataPacketTransferNanos
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|sendDataPacketTransferNanos
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|sendDataPacketTransferNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|incrRamDiskBlocksWrite ()
specifier|public
name|void
name|incrRamDiskBlocksWrite
parameter_list|()
block|{
name|ramDiskBlocksWrite
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrRamDiskBlocksWriteFallback ()
specifier|public
name|void
name|incrRamDiskBlocksWriteFallback
parameter_list|()
block|{
name|ramDiskBlocksWriteFallback
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|addRamDiskBytesWrite (long bytes)
specifier|public
name|void
name|addRamDiskBytesWrite
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|ramDiskBytesWrite
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrRamDiskBlocksReadHits ()
specifier|public
name|void
name|incrRamDiskBlocksReadHits
parameter_list|()
block|{
name|ramDiskBlocksReadHits
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrRamDiskBlocksEvicted ()
specifier|public
name|void
name|incrRamDiskBlocksEvicted
parameter_list|()
block|{
name|ramDiskBlocksEvicted
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrRamDiskBlocksEvictedWithoutRead ()
specifier|public
name|void
name|incrRamDiskBlocksEvictedWithoutRead
parameter_list|()
block|{
name|ramDiskBlocksEvictedWithoutRead
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|addRamDiskBlocksEvictionWindowMs (long latencyMs)
specifier|public
name|void
name|addRamDiskBlocksEvictionWindowMs
parameter_list|(
name|long
name|latencyMs
parameter_list|)
block|{
name|ramDiskBlocksEvictionWindowMs
operator|.
name|add
argument_list|(
name|latencyMs
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|ramDiskBlocksEvictionWindowMsQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyMs
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|incrRamDiskBlocksLazyPersisted ()
specifier|public
name|void
name|incrRamDiskBlocksLazyPersisted
parameter_list|()
block|{
name|ramDiskBlocksLazyPersisted
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrRamDiskBlocksDeletedBeforeLazyPersisted ()
specifier|public
name|void
name|incrRamDiskBlocksDeletedBeforeLazyPersisted
parameter_list|()
block|{
name|ramDiskBlocksDeletedBeforeLazyPersisted
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrRamDiskBytesLazyPersisted (long bytes)
specifier|public
name|void
name|incrRamDiskBytesLazyPersisted
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|ramDiskBytesLazyPersisted
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|addRamDiskBlocksLazyPersistWindowMs (long latencyMs)
specifier|public
name|void
name|addRamDiskBlocksLazyPersistWindowMs
parameter_list|(
name|long
name|latencyMs
parameter_list|)
block|{
name|ramDiskBlocksLazyPersistWindowMs
operator|.
name|add
argument_list|(
name|latencyMs
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|ramDiskBlocksLazyPersistWindowMsQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyMs
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Resets blocks in pending IBR to zero.    */
DECL|method|resetBlocksInPendingIBR ()
specifier|public
name|void
name|resetBlocksInPendingIBR
parameter_list|()
block|{
name|blocksInPendingIBR
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|blocksReceivingInPendingIBR
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|blocksReceivedInPendingIBR
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|blocksDeletedInPendingIBR
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBlocksInPendingIBR ()
specifier|public
name|void
name|incrBlocksInPendingIBR
parameter_list|()
block|{
name|blocksInPendingIBR
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksReceivingInPendingIBR ()
specifier|public
name|void
name|incrBlocksReceivingInPendingIBR
parameter_list|()
block|{
name|blocksReceivingInPendingIBR
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksReceivedInPendingIBR ()
specifier|public
name|void
name|incrBlocksReceivedInPendingIBR
parameter_list|()
block|{
name|blocksReceivedInPendingIBR
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrBlocksDeletedInPendingIBR ()
specifier|public
name|void
name|incrBlocksDeletedInPendingIBR
parameter_list|()
block|{
name|blocksDeletedInPendingIBR
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrECReconstructionTasks ()
specifier|public
name|void
name|incrECReconstructionTasks
parameter_list|()
block|{
name|ecReconstructionTasks
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrECFailedReconstructionTasks ()
specifier|public
name|void
name|incrECFailedReconstructionTasks
parameter_list|()
block|{
name|ecFailedReconstructionTasks
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrDataNodeActiveXceiversCount ()
specifier|public
name|void
name|incrDataNodeActiveXceiversCount
parameter_list|()
block|{
name|dataNodeActiveXceiversCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|decrDataNodeActiveXceiversCount ()
specifier|public
name|void
name|decrDataNodeActiveXceiversCount
parameter_list|()
block|{
name|dataNodeActiveXceiversCount
operator|.
name|decr
argument_list|()
expr_stmt|;
block|}
DECL|method|setDataNodeActiveXceiversCount (int value)
specifier|public
name|void
name|setDataNodeActiveXceiversCount
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|dataNodeActiveXceiversCount
operator|.
name|set
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECDecodingTime (long decodingTimeNanos)
specifier|public
name|void
name|incrECDecodingTime
parameter_list|(
name|long
name|decodingTimeNanos
parameter_list|)
block|{
name|ecDecodingTimeNanos
operator|.
name|incr
argument_list|(
name|decodingTimeNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionBytesRead (long bytes)
specifier|public
name|void
name|incrECReconstructionBytesRead
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|ecReconstructionBytesRead
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionRemoteBytesRead (long bytes)
specifier|public
name|void
name|incrECReconstructionRemoteBytesRead
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|ecReconstructionRemoteBytesRead
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionBytesWritten (long bytes)
specifier|public
name|void
name|incrECReconstructionBytesWritten
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|ecReconstructionBytesWritten
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionReadTime (long millis)
specifier|public
name|void
name|incrECReconstructionReadTime
parameter_list|(
name|long
name|millis
parameter_list|)
block|{
name|ecReconstructionReadTimeMillis
operator|.
name|incr
argument_list|(
name|millis
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionWriteTime (long millis)
specifier|public
name|void
name|incrECReconstructionWriteTime
parameter_list|(
name|long
name|millis
parameter_list|)
block|{
name|ecReconstructionWriteTimeMillis
operator|.
name|incr
argument_list|(
name|millis
argument_list|)
expr_stmt|;
block|}
DECL|method|incrECReconstructionDecodingTime (long millis)
specifier|public
name|void
name|incrECReconstructionDecodingTime
parameter_list|(
name|long
name|millis
parameter_list|)
block|{
name|ecReconstructionDecodingTimeMillis
operator|.
name|incr
argument_list|(
name|millis
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

