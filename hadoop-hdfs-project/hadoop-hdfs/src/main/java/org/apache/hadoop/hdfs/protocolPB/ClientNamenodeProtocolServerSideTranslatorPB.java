begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ContentSummary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsServerDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Options
operator|.
name|Rename
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|RemoteIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AddPathBasedCacheDirectiveException
operator|.
name|EmptyPathError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AddPathBasedCacheDirectiveException
operator|.
name|InvalidPathNameError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AddPathBasedCacheDirectiveException
operator|.
name|InvalidPoolNameError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AddPathBasedCacheDirectiveException
operator|.
name|PoolWritePermissionDeniedError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|AddPathBasedCacheDirectiveException
operator|.
name|PathAlreadyExistsInPoolError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CachePoolInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|CorruptFileBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|DirectoryListing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|LocatedBlocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|PathBasedCacheDirective
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|PathBasedCacheDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|RemovePathBasedCacheDescriptorException
operator|.
name|InvalidIdException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|RemovePathBasedCacheDescriptorException
operator|.
name|NoSuchIdException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|RemovePathBasedCacheDescriptorException
operator|.
name|RemovePermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|SnapshotDiffReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|SnapshottableDirectoryStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AbandonBlockRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AbandonBlockResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddBlockRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddBlockResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddCachePoolResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddPathBasedCacheDirectiveErrorProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddPathBasedCacheDirectivesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AddPathBasedCacheDirectivesResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AllowSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AllowSnapshotResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AppendRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|AppendResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CompleteRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CompleteResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ConcatRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ConcatResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSnapshotResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSymlinkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|CreateSymlinkResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DeleteSnapshotResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DisallowSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|DisallowSnapshotResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FinalizeUpgradeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FinalizeUpgradeResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FsyncRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|FsyncResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetAdditionalDatanodeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetAdditionalDatanodeResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetBlockLocationsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetBlockLocationsResponseProto
operator|.
name|Builder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetBlockLocationsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetContentSummaryRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetContentSummaryResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDataEncryptionKeyRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDataEncryptionKeyResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDatanodeReportRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetDatanodeReportResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileInfoResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileLinkInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFileLinkInfoResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFsStatsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetFsStatusRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetLinkTargetRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetLinkTargetResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetListingRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetListingResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetPreferredBlockSizeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetPreferredBlockSizeResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetServerDefaultsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetServerDefaultsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshotDiffReportRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshotDiffReportResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshottableDirListingRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|GetSnapshottableDirListingResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|IsFileClosedRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|IsFileClosedResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCachePoolsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCachePoolsResponseElementProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCachePoolsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCorruptFileBlocksRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListCorruptFileBlocksResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListPathBasedCacheDescriptorsElementProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListPathBasedCacheDescriptorsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ListPathBasedCacheDescriptorsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MetaSaveRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MetaSaveResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MkdirsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|MkdirsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ModifyCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ModifyCachePoolResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|PathBasedCacheDirectiveProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RecoverLeaseRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RecoverLeaseResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RefreshNodesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RefreshNodesResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemoveCachePoolRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemoveCachePoolResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemovePathBasedCacheDescriptorsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemovePathBasedCacheDescriptorsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RemovePathBasedCacheDescriptorErrorProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|Rename2RequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|Rename2ResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameSnapshotRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenameSnapshotResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenewLeaseRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RenewLeaseResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ReportBadBlocksRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|ReportBadBlocksResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RestoreFailedStorageRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RestoreFailedStorageResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollEditsRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|RollEditsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SaveNamespaceRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SaveNamespaceResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetBalancerBandwidthRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetBalancerBandwidthResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetOwnerRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetOwnerResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetPermissionRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetPermissionResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetQuotaRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetQuotaResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetReplicationRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetReplicationResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetSafeModeRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetSafeModeResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetTimesRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|SetTimesResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdateBlockForPipelineRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdateBlockForPipelineResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdatePipelineRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ClientNamenodeProtocolProtos
operator|.
name|UpdatePipelineResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdfsProtos
operator|.
name|DatanodeIDProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdfsProtos
operator|.
name|DatanodeInfoProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdfsProtos
operator|.
name|LocatedBlockProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|block
operator|.
name|DataEncryptionKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|CachePool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|CancelDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|CancelDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|RenewDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|RenewDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Fallible
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_comment
comment|/**  * This class is used on the server side. Calls come across the wire for the  * for protocol {@link ClientNamenodeProtocolPB}.  * This class translates the PB data types  * to the native data types used inside the NN as specified in the generic  * ClientProtocol.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|ClientNamenodeProtocolServerSideTranslatorPB
specifier|public
class|class
name|ClientNamenodeProtocolServerSideTranslatorPB
implements|implements
name|ClientNamenodeProtocolPB
block|{
DECL|field|server
specifier|final
specifier|private
name|ClientProtocol
name|server
decl_stmt|;
DECL|field|VOID_DELETE_SNAPSHOT_RESPONSE
specifier|static
specifier|final
name|DeleteSnapshotResponseProto
name|VOID_DELETE_SNAPSHOT_RESPONSE
init|=
name|DeleteSnapshotResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_RENAME_SNAPSHOT_RESPONSE
specifier|static
specifier|final
name|RenameSnapshotResponseProto
name|VOID_RENAME_SNAPSHOT_RESPONSE
init|=
name|RenameSnapshotResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_ALLOW_SNAPSHOT_RESPONSE
specifier|static
specifier|final
name|AllowSnapshotResponseProto
name|VOID_ALLOW_SNAPSHOT_RESPONSE
init|=
name|AllowSnapshotResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_DISALLOW_SNAPSHOT_RESPONSE
specifier|static
specifier|final
name|DisallowSnapshotResponseProto
name|VOID_DISALLOW_SNAPSHOT_RESPONSE
init|=
name|DisallowSnapshotResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|static
specifier|final
name|GetSnapshottableDirListingResponseProto
DECL|field|NULL_GET_SNAPSHOTTABLE_DIR_LISTING_RESPONSE
name|NULL_GET_SNAPSHOTTABLE_DIR_LISTING_RESPONSE
init|=
name|GetSnapshottableDirListingResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_CREATE_RESPONSE
specifier|private
specifier|static
specifier|final
name|CreateResponseProto
name|VOID_CREATE_RESPONSE
init|=
name|CreateResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_APPEND_RESPONSE
specifier|private
specifier|static
specifier|final
name|AppendResponseProto
name|VOID_APPEND_RESPONSE
init|=
name|AppendResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SET_PERM_RESPONSE
specifier|private
specifier|static
specifier|final
name|SetPermissionResponseProto
name|VOID_SET_PERM_RESPONSE
init|=
name|SetPermissionResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SET_OWNER_RESPONSE
specifier|private
specifier|static
specifier|final
name|SetOwnerResponseProto
name|VOID_SET_OWNER_RESPONSE
init|=
name|SetOwnerResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_ADD_BLOCK_RESPONSE
specifier|private
specifier|static
specifier|final
name|AbandonBlockResponseProto
name|VOID_ADD_BLOCK_RESPONSE
init|=
name|AbandonBlockResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_REP_BAD_BLOCK_RESPONSE
specifier|private
specifier|static
specifier|final
name|ReportBadBlocksResponseProto
name|VOID_REP_BAD_BLOCK_RESPONSE
init|=
name|ReportBadBlocksResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_CONCAT_RESPONSE
specifier|private
specifier|static
specifier|final
name|ConcatResponseProto
name|VOID_CONCAT_RESPONSE
init|=
name|ConcatResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_RENAME2_RESPONSE
specifier|private
specifier|static
specifier|final
name|Rename2ResponseProto
name|VOID_RENAME2_RESPONSE
init|=
name|Rename2ResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_GETLISTING_RESPONSE
specifier|private
specifier|static
specifier|final
name|GetListingResponseProto
name|VOID_GETLISTING_RESPONSE
init|=
name|GetListingResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_RENEWLEASE_RESPONSE
specifier|private
specifier|static
specifier|final
name|RenewLeaseResponseProto
name|VOID_RENEWLEASE_RESPONSE
init|=
name|RenewLeaseResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SAVENAMESPACE_RESPONSE
specifier|private
specifier|static
specifier|final
name|SaveNamespaceResponseProto
name|VOID_SAVENAMESPACE_RESPONSE
init|=
name|SaveNamespaceResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_REFRESHNODES_RESPONSE
specifier|private
specifier|static
specifier|final
name|RefreshNodesResponseProto
name|VOID_REFRESHNODES_RESPONSE
init|=
name|RefreshNodesResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_FINALIZEUPGRADE_RESPONSE
specifier|private
specifier|static
specifier|final
name|FinalizeUpgradeResponseProto
name|VOID_FINALIZEUPGRADE_RESPONSE
init|=
name|FinalizeUpgradeResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_METASAVE_RESPONSE
specifier|private
specifier|static
specifier|final
name|MetaSaveResponseProto
name|VOID_METASAVE_RESPONSE
init|=
name|MetaSaveResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_GETFILEINFO_RESPONSE
specifier|private
specifier|static
specifier|final
name|GetFileInfoResponseProto
name|VOID_GETFILEINFO_RESPONSE
init|=
name|GetFileInfoResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_GETFILELINKINFO_RESPONSE
specifier|private
specifier|static
specifier|final
name|GetFileLinkInfoResponseProto
name|VOID_GETFILELINKINFO_RESPONSE
init|=
name|GetFileLinkInfoResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SETQUOTA_RESPONSE
specifier|private
specifier|static
specifier|final
name|SetQuotaResponseProto
name|VOID_SETQUOTA_RESPONSE
init|=
name|SetQuotaResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_FSYNC_RESPONSE
specifier|private
specifier|static
specifier|final
name|FsyncResponseProto
name|VOID_FSYNC_RESPONSE
init|=
name|FsyncResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_SETTIMES_RESPONSE
specifier|private
specifier|static
specifier|final
name|SetTimesResponseProto
name|VOID_SETTIMES_RESPONSE
init|=
name|SetTimesResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|VOID_CREATESYMLINK_RESPONSE
specifier|private
specifier|static
specifier|final
name|CreateSymlinkResponseProto
name|VOID_CREATESYMLINK_RESPONSE
init|=
name|CreateSymlinkResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|UpdatePipelineResponseProto
DECL|field|VOID_UPDATEPIPELINE_RESPONSE
name|VOID_UPDATEPIPELINE_RESPONSE
init|=
name|UpdatePipelineResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|CancelDelegationTokenResponseProto
DECL|field|VOID_CANCELDELEGATIONTOKEN_RESPONSE
name|VOID_CANCELDELEGATIONTOKEN_RESPONSE
init|=
name|CancelDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|SetBalancerBandwidthResponseProto
DECL|field|VOID_SETBALANCERBANDWIDTH_RESPONSE
name|VOID_SETBALANCERBANDWIDTH_RESPONSE
init|=
name|SetBalancerBandwidthResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**    * Constructor    *     * @param server - the NN server    * @throws IOException    */
DECL|method|ClientNamenodeProtocolServerSideTranslatorPB (ClientProtocol server)
specifier|public
name|ClientNamenodeProtocolServerSideTranslatorPB
parameter_list|(
name|ClientProtocol
name|server
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|server
operator|=
name|server
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBlockLocations ( RpcController controller, GetBlockLocationsRequestProto req)
specifier|public
name|GetBlockLocationsResponseProto
name|getBlockLocations
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetBlockLocationsRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|LocatedBlocks
name|b
init|=
name|server
operator|.
name|getBlockLocations
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getOffset
argument_list|()
argument_list|,
name|req
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
name|Builder
name|builder
init|=
name|GetBlockLocationsResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setLocations
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|b
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getServerDefaults ( RpcController controller, GetServerDefaultsRequestProto req)
specifier|public
name|GetServerDefaultsResponseProto
name|getServerDefaults
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetServerDefaultsRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|FsServerDefaults
name|result
init|=
name|server
operator|.
name|getServerDefaults
argument_list|()
decl_stmt|;
return|return
name|GetServerDefaultsResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setServerDefaults
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|create (RpcController controller, CreateRequestProto req)
specifier|public
name|CreateResponseProto
name|create
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CreateRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|HdfsFileStatus
name|result
init|=
name|server
operator|.
name|create
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getMasked
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getCreateFlag
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getCreateParent
argument_list|()
argument_list|,
operator|(
name|short
operator|)
name|req
operator|.
name|getReplication
argument_list|()
argument_list|,
name|req
operator|.
name|getBlockSize
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|CreateResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFs
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
return|return
name|VOID_CREATE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|append (RpcController controller, AppendRequestProto req)
specifier|public
name|AppendResponseProto
name|append
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AppendRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|LocatedBlock
name|result
init|=
name|server
operator|.
name|append
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|AppendResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
return|return
name|VOID_APPEND_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setReplication (RpcController controller, SetReplicationRequestProto req)
specifier|public
name|SetReplicationResponseProto
name|setReplication
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetReplicationRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|setReplication
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
operator|(
name|short
operator|)
name|req
operator|.
name|getReplication
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|SetReplicationResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setPermission (RpcController controller, SetPermissionRequestProto req)
specifier|public
name|SetPermissionResponseProto
name|setPermission
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetPermissionRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|setPermission
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_SET_PERM_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|setOwner (RpcController controller, SetOwnerRequestProto req)
specifier|public
name|SetOwnerResponseProto
name|setOwner
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetOwnerRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|setOwner
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|hasUsername
argument_list|()
condition|?
name|req
operator|.
name|getUsername
argument_list|()
else|:
literal|null
argument_list|,
name|req
operator|.
name|hasGroupname
argument_list|()
condition|?
name|req
operator|.
name|getGroupname
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_SET_OWNER_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|abandonBlock (RpcController controller, AbandonBlockRequestProto req)
specifier|public
name|AbandonBlockResponseProto
name|abandonBlock
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AbandonBlockRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|abandonBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getB
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getHolder
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_ADD_BLOCK_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|addBlock (RpcController controller, AddBlockRequestProto req)
specifier|public
name|AddBlockResponseProto
name|addBlock
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AddBlockRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|DatanodeInfoProto
argument_list|>
name|excl
init|=
name|req
operator|.
name|getExcludeNodesList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|favor
init|=
name|req
operator|.
name|getFavoredNodesList
argument_list|()
decl_stmt|;
name|LocatedBlock
name|result
init|=
name|server
operator|.
name|addBlock
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|,
name|req
operator|.
name|hasPrevious
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getPrevious
argument_list|()
argument_list|)
else|:
literal|null
argument_list|,
operator|(
name|excl
operator|==
literal|null
operator|||
name|excl
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|null
else|:
name|PBHelper
operator|.
name|convert
argument_list|(
name|excl
operator|.
name|toArray
argument_list|(
operator|new
name|DatanodeInfoProto
index|[
name|excl
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
argument_list|,
name|req
operator|.
name|getFileId
argument_list|()
argument_list|,
operator|(
name|favor
operator|==
literal|null
operator|||
name|favor
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|null
else|:
name|favor
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|favor
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|AddBlockResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getAdditionalDatanode ( RpcController controller, GetAdditionalDatanodeRequestProto req)
specifier|public
name|GetAdditionalDatanodeResponseProto
name|getAdditionalDatanode
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetAdditionalDatanodeRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|DatanodeInfoProto
argument_list|>
name|existingList
init|=
name|req
operator|.
name|getExistingsList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|DatanodeInfoProto
argument_list|>
name|excludesList
init|=
name|req
operator|.
name|getExcludesList
argument_list|()
decl_stmt|;
name|LocatedBlock
name|result
init|=
name|server
operator|.
name|getAdditionalDatanode
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getBlk
argument_list|()
argument_list|)
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|existingList
operator|.
name|toArray
argument_list|(
operator|new
name|DatanodeInfoProto
index|[
name|existingList
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|excludesList
operator|.
name|toArray
argument_list|(
operator|new
name|DatanodeInfoProto
index|[
name|excludesList
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
argument_list|,
name|req
operator|.
name|getNumAdditionalNodes
argument_list|()
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|GetAdditionalDatanodeResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlock
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|complete (RpcController controller, CompleteRequestProto req)
specifier|public
name|CompleteResponseProto
name|complete
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CompleteRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|complete
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|,
name|req
operator|.
name|hasLast
argument_list|()
condition|?
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getLast
argument_list|()
argument_list|)
else|:
literal|null
argument_list|,
name|req
operator|.
name|hasFileId
argument_list|()
condition|?
name|req
operator|.
name|getFileId
argument_list|()
else|:
name|INodeId
operator|.
name|GRANDFATHER_INODE_ID
argument_list|)
decl_stmt|;
return|return
name|CompleteResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|reportBadBlocks (RpcController controller, ReportBadBlocksRequestProto req)
specifier|public
name|ReportBadBlocksResponseProto
name|reportBadBlocks
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ReportBadBlocksRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|LocatedBlockProto
argument_list|>
name|bl
init|=
name|req
operator|.
name|getBlocksList
argument_list|()
decl_stmt|;
name|server
operator|.
name|reportBadBlocks
argument_list|(
name|PBHelper
operator|.
name|convertLocatedBlock
argument_list|(
name|bl
operator|.
name|toArray
argument_list|(
operator|new
name|LocatedBlockProto
index|[
name|bl
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_REP_BAD_BLOCK_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|concat (RpcController controller, ConcatRequestProto req)
specifier|public
name|ConcatResponseProto
name|concat
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ConcatRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|String
argument_list|>
name|srcs
init|=
name|req
operator|.
name|getSrcsList
argument_list|()
decl_stmt|;
name|server
operator|.
name|concat
argument_list|(
name|req
operator|.
name|getTrg
argument_list|()
argument_list|,
name|srcs
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|srcs
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_CONCAT_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|rename (RpcController controller, RenameRequestProto req)
specifier|public
name|RenameResponseProto
name|rename
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RenameRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|rename
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getDst
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|RenameResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rename2 (RpcController controller, Rename2RequestProto req)
specifier|public
name|Rename2ResponseProto
name|rename2
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|Rename2RequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|rename2
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getDst
argument_list|()
argument_list|,
name|req
operator|.
name|getOverwriteDest
argument_list|()
condition|?
name|Rename
operator|.
name|OVERWRITE
else|:
name|Rename
operator|.
name|NONE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|VOID_RENAME2_RESPONSE
return|;
block|}
annotation|@
name|Override
DECL|method|delete (RpcController controller, DeleteRequestProto req)
specifier|public
name|DeleteResponseProto
name|delete
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|DeleteRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|delete
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getRecursive
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|DeleteResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|mkdirs (RpcController controller, MkdirsRequestProto req)
specifier|public
name|MkdirsResponseProto
name|mkdirs
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|MkdirsRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|mkdirs
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getMasked
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getCreateParent
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|MkdirsResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getListing (RpcController controller, GetListingRequestProto req)
specifier|public
name|GetListingResponseProto
name|getListing
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetListingRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|DirectoryListing
name|result
init|=
name|server
operator|.
name|getListing
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getStartAfter
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|req
operator|.
name|getNeedLocation
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|GetListingResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDirList
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|VOID_GETLISTING_RESPONSE
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renewLease (RpcController controller, RenewLeaseRequestProto req)
specifier|public
name|RenewLeaseResponseProto
name|renewLease
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RenewLeaseRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|renewLease
argument_list|(
name|req
operator|.
name|getClientName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_RENEWLEASE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|recoverLease (RpcController controller, RecoverLeaseRequestProto req)
specifier|public
name|RecoverLeaseResponseProto
name|recoverLease
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RecoverLeaseRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|recoverLease
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|RecoverLeaseResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|restoreFailedStorage ( RpcController controller, RestoreFailedStorageRequestProto req)
specifier|public
name|RestoreFailedStorageResponseProto
name|restoreFailedStorage
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RestoreFailedStorageRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|restoreFailedStorage
argument_list|(
name|req
operator|.
name|getArg
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|RestoreFailedStorageResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getFsStats (RpcController controller, GetFsStatusRequestProto req)
specifier|public
name|GetFsStatsResponseProto
name|getFsStats
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetFsStatusRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
return|return
name|PBHelper
operator|.
name|convert
argument_list|(
name|server
operator|.
name|getStats
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDatanodeReport ( RpcController controller, GetDatanodeReportRequestProto req)
specifier|public
name|GetDatanodeReportResponseProto
name|getDatanodeReport
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetDatanodeReportRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|?
extends|extends
name|DatanodeInfoProto
argument_list|>
name|result
init|=
name|PBHelper
operator|.
name|convert
argument_list|(
name|server
operator|.
name|getDatanodeReport
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getType
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|GetDatanodeReportResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|addAllDi
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getPreferredBlockSize ( RpcController controller, GetPreferredBlockSizeRequestProto req)
specifier|public
name|GetPreferredBlockSizeResponseProto
name|getPreferredBlockSize
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetPreferredBlockSizeRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|long
name|result
init|=
name|server
operator|.
name|getPreferredBlockSize
argument_list|(
name|req
operator|.
name|getFilename
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|GetPreferredBlockSizeResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBsize
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setSafeMode (RpcController controller, SetSafeModeRequestProto req)
specifier|public
name|SetSafeModeResponseProto
name|setSafeMode
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetSafeModeRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|setSafeMode
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getAction
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getChecked
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|SetSafeModeResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|saveNamespace (RpcController controller, SaveNamespaceRequestProto req)
specifier|public
name|SaveNamespaceResponseProto
name|saveNamespace
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SaveNamespaceRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|saveNamespace
argument_list|()
expr_stmt|;
return|return
name|VOID_SAVENAMESPACE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|rollEdits (RpcController controller, RollEditsRequestProto request)
specifier|public
name|RollEditsResponseProto
name|rollEdits
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RollEditsRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|long
name|txid
init|=
name|server
operator|.
name|rollEdits
argument_list|()
decl_stmt|;
return|return
name|RollEditsResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNewSegmentTxId
argument_list|(
name|txid
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|refreshNodes (RpcController controller, RefreshNodesRequestProto req)
specifier|public
name|RefreshNodesResponseProto
name|refreshNodes
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RefreshNodesRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|refreshNodes
argument_list|()
expr_stmt|;
return|return
name|VOID_REFRESHNODES_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|finalizeUpgrade (RpcController controller, FinalizeUpgradeRequestProto req)
specifier|public
name|FinalizeUpgradeResponseProto
name|finalizeUpgrade
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|FinalizeUpgradeRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|finalizeUpgrade
argument_list|()
expr_stmt|;
return|return
name|VOID_FINALIZEUPGRADE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listCorruptFileBlocks ( RpcController controller, ListCorruptFileBlocksRequestProto req)
specifier|public
name|ListCorruptFileBlocksResponseProto
name|listCorruptFileBlocks
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ListCorruptFileBlocksRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|CorruptFileBlocks
name|result
init|=
name|server
operator|.
name|listCorruptFileBlocks
argument_list|(
name|req
operator|.
name|getPath
argument_list|()
argument_list|,
name|req
operator|.
name|hasCookie
argument_list|()
condition|?
name|req
operator|.
name|getCookie
argument_list|()
else|:
literal|null
argument_list|)
decl_stmt|;
return|return
name|ListCorruptFileBlocksResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCorrupt
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|metaSave (RpcController controller, MetaSaveRequestProto req)
specifier|public
name|MetaSaveResponseProto
name|metaSave
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|MetaSaveRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|metaSave
argument_list|(
name|req
operator|.
name|getFilename
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_METASAVE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getFileInfo (RpcController controller, GetFileInfoRequestProto req)
specifier|public
name|GetFileInfoResponseProto
name|getFileInfo
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetFileInfoRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|HdfsFileStatus
name|result
init|=
name|server
operator|.
name|getFileInfo
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|GetFileInfoResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFs
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
return|return
name|VOID_GETFILEINFO_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getFileLinkInfo (RpcController controller, GetFileLinkInfoRequestProto req)
specifier|public
name|GetFileLinkInfoResponseProto
name|getFileLinkInfo
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetFileLinkInfoRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|HdfsFileStatus
name|result
init|=
name|server
operator|.
name|getFileLinkInfo
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|GetFileLinkInfoResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFs
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|VOID_GETFILELINKINFO_RESPONSE
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getContentSummary ( RpcController controller, GetContentSummaryRequestProto req)
specifier|public
name|GetContentSummaryResponseProto
name|getContentSummary
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetContentSummaryRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|ContentSummary
name|result
init|=
name|server
operator|.
name|getContentSummary
argument_list|(
name|req
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|GetContentSummaryResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSummary
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setQuota (RpcController controller, SetQuotaRequestProto req)
specifier|public
name|SetQuotaResponseProto
name|setQuota
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetQuotaRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|setQuota
argument_list|(
name|req
operator|.
name|getPath
argument_list|()
argument_list|,
name|req
operator|.
name|getNamespaceQuota
argument_list|()
argument_list|,
name|req
operator|.
name|getDiskspaceQuota
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_SETQUOTA_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|fsync (RpcController controller, FsyncRequestProto req)
specifier|public
name|FsyncResponseProto
name|fsync
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|FsyncRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|fsync
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getClient
argument_list|()
argument_list|,
name|req
operator|.
name|getLastBlockLength
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_FSYNC_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setTimes (RpcController controller, SetTimesRequestProto req)
specifier|public
name|SetTimesResponseProto
name|setTimes
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetTimesRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|setTimes
argument_list|(
name|req
operator|.
name|getSrc
argument_list|()
argument_list|,
name|req
operator|.
name|getMtime
argument_list|()
argument_list|,
name|req
operator|.
name|getAtime
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_SETTIMES_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createSymlink (RpcController controller, CreateSymlinkRequestProto req)
specifier|public
name|CreateSymlinkResponseProto
name|createSymlink
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CreateSymlinkRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|createSymlink
argument_list|(
name|req
operator|.
name|getTarget
argument_list|()
argument_list|,
name|req
operator|.
name|getLink
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getDirPerm
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getCreateParent
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_CREATESYMLINK_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getLinkTarget (RpcController controller, GetLinkTargetRequestProto req)
specifier|public
name|GetLinkTargetResponseProto
name|getLinkTarget
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetLinkTargetRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|String
name|result
init|=
name|server
operator|.
name|getLinkTarget
argument_list|(
name|req
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|GetLinkTargetResponseProto
operator|.
name|Builder
name|builder
init|=
name|GetLinkTargetResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setTargetPath
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|updateBlockForPipeline ( RpcController controller, UpdateBlockForPipelineRequestProto req)
specifier|public
name|UpdateBlockForPipelineResponseProto
name|updateBlockForPipeline
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|UpdateBlockForPipelineRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|LocatedBlockProto
name|result
init|=
name|PBHelper
operator|.
name|convert
argument_list|(
name|server
operator|.
name|updateBlockForPipeline
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getBlock
argument_list|()
argument_list|)
argument_list|,
name|req
operator|.
name|getClientName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|UpdateBlockForPipelineResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlock
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|updatePipeline (RpcController controller, UpdatePipelineRequestProto req)
specifier|public
name|UpdatePipelineResponseProto
name|updatePipeline
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|UpdatePipelineRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|DatanodeIDProto
argument_list|>
name|newNodes
init|=
name|req
operator|.
name|getNewNodesList
argument_list|()
decl_stmt|;
name|server
operator|.
name|updatePipeline
argument_list|(
name|req
operator|.
name|getClientName
argument_list|()
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getOldBlock
argument_list|()
argument_list|)
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|req
operator|.
name|getNewBlock
argument_list|()
argument_list|)
argument_list|,
name|PBHelper
operator|.
name|convert
argument_list|(
name|newNodes
operator|.
name|toArray
argument_list|(
operator|new
name|DatanodeIDProto
index|[
name|newNodes
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|VOID_UPDATEPIPELINE_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDelegationToken ( RpcController controller, GetDelegationTokenRequestProto req)
specifier|public
name|GetDelegationTokenResponseProto
name|getDelegationToken
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetDelegationTokenRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
name|server
operator|.
name|getDelegationToken
argument_list|(
operator|new
name|Text
argument_list|(
name|req
operator|.
name|getRenewer
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|GetDelegationTokenResponseProto
operator|.
name|Builder
name|rspBuilder
init|=
name|GetDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|token
operator|!=
literal|null
condition|)
block|{
name|rspBuilder
operator|.
name|setToken
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|token
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|rspBuilder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renewDelegationToken ( RpcController controller, RenewDelegationTokenRequestProto req)
specifier|public
name|RenewDelegationTokenResponseProto
name|renewDelegationToken
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RenewDelegationTokenRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|long
name|result
init|=
name|server
operator|.
name|renewDelegationToken
argument_list|(
name|PBHelper
operator|.
name|convertDelegationToken
argument_list|(
name|req
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|RenewDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNewExpiryTime
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|cancelDelegationToken ( RpcController controller, CancelDelegationTokenRequestProto req)
specifier|public
name|CancelDelegationTokenResponseProto
name|cancelDelegationToken
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CancelDelegationTokenRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|cancelDelegationToken
argument_list|(
name|PBHelper
operator|.
name|convertDelegationToken
argument_list|(
name|req
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|VOID_CANCELDELEGATIONTOKEN_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setBalancerBandwidth ( RpcController controller, SetBalancerBandwidthRequestProto req)
specifier|public
name|SetBalancerBandwidthResponseProto
name|setBalancerBandwidth
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetBalancerBandwidthRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|setBalancerBandwidth
argument_list|(
name|req
operator|.
name|getBandwidth
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_SETBALANCERBANDWIDTH_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDataEncryptionKey ( RpcController controller, GetDataEncryptionKeyRequestProto request)
specifier|public
name|GetDataEncryptionKeyResponseProto
name|getDataEncryptionKey
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetDataEncryptionKeyRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|GetDataEncryptionKeyResponseProto
operator|.
name|Builder
name|builder
init|=
name|GetDataEncryptionKeyResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|DataEncryptionKey
name|encryptionKey
init|=
name|server
operator|.
name|getDataEncryptionKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|encryptionKey
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDataEncryptionKey
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|encryptionKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createSnapshot (RpcController controller, CreateSnapshotRequestProto req)
specifier|public
name|CreateSnapshotResponseProto
name|createSnapshot
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CreateSnapshotRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
specifier|final
name|CreateSnapshotResponseProto
operator|.
name|Builder
name|builder
init|=
name|CreateSnapshotResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
specifier|final
name|String
name|snapshotPath
init|=
name|server
operator|.
name|createSnapshot
argument_list|(
name|req
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|,
name|req
operator|.
name|hasSnapshotName
argument_list|()
condition|?
name|req
operator|.
name|getSnapshotName
argument_list|()
else|:
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|snapshotPath
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSnapshotPath
argument_list|(
name|snapshotPath
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deleteSnapshot (RpcController controller, DeleteSnapshotRequestProto req)
specifier|public
name|DeleteSnapshotResponseProto
name|deleteSnapshot
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|DeleteSnapshotRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|deleteSnapshot
argument_list|(
name|req
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|,
name|req
operator|.
name|getSnapshotName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_DELETE_SNAPSHOT_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|allowSnapshot (RpcController controller, AllowSnapshotRequestProto req)
specifier|public
name|AllowSnapshotResponseProto
name|allowSnapshot
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AllowSnapshotRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|allowSnapshot
argument_list|(
name|req
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_ALLOW_SNAPSHOT_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|disallowSnapshot (RpcController controller, DisallowSnapshotRequestProto req)
specifier|public
name|DisallowSnapshotResponseProto
name|disallowSnapshot
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|DisallowSnapshotRequestProto
name|req
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|disallowSnapshot
argument_list|(
name|req
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_DISALLOW_SNAPSHOT_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renameSnapshot (RpcController controller, RenameSnapshotRequestProto request)
specifier|public
name|RenameSnapshotResponseProto
name|renameSnapshot
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RenameSnapshotRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|renameSnapshot
argument_list|(
name|request
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|,
name|request
operator|.
name|getSnapshotOldName
argument_list|()
argument_list|,
name|request
operator|.
name|getSnapshotNewName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|VOID_RENAME_SNAPSHOT_RESPONSE
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getSnapshottableDirListing ( RpcController controller, GetSnapshottableDirListingRequestProto request)
specifier|public
name|GetSnapshottableDirListingResponseProto
name|getSnapshottableDirListing
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetSnapshottableDirListingRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|SnapshottableDirectoryStatus
index|[]
name|result
init|=
name|server
operator|.
name|getSnapshottableDirListing
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
return|return
name|GetSnapshottableDirListingResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSnapshottableDirList
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|NULL_GET_SNAPSHOTTABLE_DIR_LISTING_RESPONSE
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getSnapshotDiffReport ( RpcController controller, GetSnapshotDiffReportRequestProto request)
specifier|public
name|GetSnapshotDiffReportResponseProto
name|getSnapshotDiffReport
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetSnapshotDiffReportRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|SnapshotDiffReport
name|report
init|=
name|server
operator|.
name|getSnapshotDiffReport
argument_list|(
name|request
operator|.
name|getSnapshotRoot
argument_list|()
argument_list|,
name|request
operator|.
name|getFromSnapshot
argument_list|()
argument_list|,
name|request
operator|.
name|getToSnapshot
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|GetSnapshotDiffReportResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDiffReport
argument_list|(
name|PBHelper
operator|.
name|convert
argument_list|(
name|report
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|isFileClosed ( RpcController controller, IsFileClosedRequestProto request)
specifier|public
name|IsFileClosedResponseProto
name|isFileClosed
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|IsFileClosedRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|boolean
name|result
init|=
name|server
operator|.
name|isFileClosed
argument_list|(
name|request
operator|.
name|getSrc
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|IsFileClosedResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addPathBasedCacheDirectives (RpcController controller, AddPathBasedCacheDirectivesRequestProto request)
specifier|public
name|AddPathBasedCacheDirectivesResponseProto
name|addPathBasedCacheDirectives
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AddPathBasedCacheDirectivesRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|ArrayList
argument_list|<
name|PathBasedCacheDirective
argument_list|>
name|input
init|=
operator|new
name|ArrayList
argument_list|<
name|PathBasedCacheDirective
argument_list|>
argument_list|(
name|request
operator|.
name|getElementsCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|request
operator|.
name|getElementsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|PathBasedCacheDirectiveProto
name|proto
init|=
name|request
operator|.
name|getElements
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
operator|new
name|PathBasedCacheDirective
argument_list|(
name|proto
operator|.
name|getPath
argument_list|()
argument_list|,
name|proto
operator|.
name|getPool
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Fallible
argument_list|<
name|PathBasedCacheDescriptor
argument_list|>
argument_list|>
name|output
init|=
name|server
operator|.
name|addPathBasedCacheDirectives
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|AddPathBasedCacheDirectivesResponseProto
operator|.
name|Builder
name|builder
init|=
name|AddPathBasedCacheDirectivesResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|output
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
try|try
block|{
name|PathBasedCacheDescriptor
name|directive
init|=
name|output
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addResults
argument_list|(
name|directive
operator|.
name|getEntryId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|EmptyPathError
condition|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|EMPTY_PATH_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|InvalidPathNameError
condition|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|INVALID_PATH_NAME_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|InvalidPoolNameError
condition|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|INVALID_POOL_NAME_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|PoolWritePermissionDeniedError
condition|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|ADD_PERMISSION_DENIED_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|PathAlreadyExistsInPoolError
condition|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|PATH_ALREADY_EXISTS_IN_POOL_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|AddPathBasedCacheDirectiveErrorProto
operator|.
name|UNEXPECTED_ADD_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removePathBasedCacheDescriptors ( RpcController controller, RemovePathBasedCacheDescriptorsRequestProto request)
specifier|public
name|RemovePathBasedCacheDescriptorsResponseProto
name|removePathBasedCacheDescriptors
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RemovePathBasedCacheDescriptorsRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|Fallible
argument_list|<
name|Long
argument_list|>
argument_list|>
name|output
init|=
name|server
operator|.
name|removePathBasedCacheDescriptors
argument_list|(
name|request
operator|.
name|getElementsList
argument_list|()
argument_list|)
decl_stmt|;
name|RemovePathBasedCacheDescriptorsResponseProto
operator|.
name|Builder
name|builder
init|=
name|RemovePathBasedCacheDescriptorsResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|output
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
try|try
block|{
name|long
name|id
init|=
name|output
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addResults
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidIdException
name|ioe
parameter_list|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|RemovePathBasedCacheDescriptorErrorProto
operator|.
name|INVALID_CACHED_PATH_ID_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchIdException
name|ioe
parameter_list|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|RemovePathBasedCacheDescriptorErrorProto
operator|.
name|NO_SUCH_CACHED_PATH_ID_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RemovePermissionDeniedException
name|ioe
parameter_list|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|RemovePathBasedCacheDescriptorErrorProto
operator|.
name|REMOVE_PERMISSION_DENIED_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|builder
operator|.
name|addResults
argument_list|(
name|RemovePathBasedCacheDescriptorErrorProto
operator|.
name|UNEXPECTED_REMOVE_ERROR_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listPathBasedCacheDescriptors ( RpcController controller, ListPathBasedCacheDescriptorsRequestProto request)
specifier|public
name|ListPathBasedCacheDescriptorsResponseProto
name|listPathBasedCacheDescriptors
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ListPathBasedCacheDescriptorsRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|RemoteIterator
argument_list|<
name|PathBasedCacheDescriptor
argument_list|>
name|iter
init|=
name|server
operator|.
name|listPathBasedCacheDescriptors
argument_list|(
name|request
operator|.
name|getPrevId
argument_list|()
argument_list|,
name|request
operator|.
name|hasPool
argument_list|()
condition|?
name|request
operator|.
name|getPool
argument_list|()
else|:
literal|null
argument_list|,
name|request
operator|.
name|hasPath
argument_list|()
condition|?
name|request
operator|.
name|getPath
argument_list|()
else|:
literal|null
argument_list|)
decl_stmt|;
name|ListPathBasedCacheDescriptorsResponseProto
operator|.
name|Builder
name|builder
init|=
name|ListPathBasedCacheDescriptorsResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|long
name|prevId
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|PathBasedCacheDescriptor
name|directive
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addElements
argument_list|(
name|ListPathBasedCacheDescriptorsElementProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setId
argument_list|(
name|directive
operator|.
name|getEntryId
argument_list|()
argument_list|)
operator|.
name|setPath
argument_list|(
name|directive
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|setPool
argument_list|(
name|directive
operator|.
name|getPool
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prevId
operator|=
name|directive
operator|.
name|getEntryId
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|prevId
operator|==
literal|0
condition|)
block|{
name|builder
operator|.
name|setHasMore
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iter
operator|=
name|server
operator|.
name|listPathBasedCacheDescriptors
argument_list|(
name|prevId
argument_list|,
name|request
operator|.
name|hasPool
argument_list|()
condition|?
name|request
operator|.
name|getPool
argument_list|()
else|:
literal|null
argument_list|,
name|request
operator|.
name|hasPath
argument_list|()
condition|?
name|request
operator|.
name|getPath
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setHasMore
argument_list|(
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addCachePool (RpcController controller, AddCachePoolRequestProto request)
specifier|public
name|AddCachePoolResponseProto
name|addCachePool
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|AddCachePoolRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|CachePoolInfo
name|info
init|=
operator|new
name|CachePoolInfo
argument_list|(
name|request
operator|.
name|getPoolName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasOwnerName
argument_list|()
condition|)
block|{
name|info
operator|.
name|setOwnerName
argument_list|(
name|request
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasGroupName
argument_list|()
condition|)
block|{
name|info
operator|.
name|setGroupName
argument_list|(
name|request
operator|.
name|getGroupName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasMode
argument_list|()
condition|)
block|{
name|info
operator|.
name|setMode
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
name|request
operator|.
name|getMode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasWeight
argument_list|()
condition|)
block|{
name|info
operator|.
name|setWeight
argument_list|(
name|request
operator|.
name|getWeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|server
operator|.
name|addCachePool
argument_list|(
name|info
argument_list|)
expr_stmt|;
return|return
name|AddCachePoolResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|modifyCachePool (RpcController controller, ModifyCachePoolRequestProto request)
specifier|public
name|ModifyCachePoolResponseProto
name|modifyCachePool
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ModifyCachePoolRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|CachePoolInfo
name|info
init|=
operator|new
name|CachePoolInfo
argument_list|(
name|request
operator|.
name|getPoolName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasOwnerName
argument_list|()
condition|)
block|{
name|info
operator|.
name|setOwnerName
argument_list|(
name|request
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasGroupName
argument_list|()
condition|)
block|{
name|info
operator|.
name|setGroupName
argument_list|(
name|request
operator|.
name|getGroupName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasMode
argument_list|()
condition|)
block|{
name|info
operator|.
name|setMode
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
name|request
operator|.
name|getMode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|hasWeight
argument_list|()
condition|)
block|{
name|info
operator|.
name|setWeight
argument_list|(
name|request
operator|.
name|getWeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|server
operator|.
name|modifyCachePool
argument_list|(
name|info
argument_list|)
expr_stmt|;
return|return
name|ModifyCachePoolResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeCachePool (RpcController controller, RemoveCachePoolRequestProto request)
specifier|public
name|RemoveCachePoolResponseProto
name|removeCachePool
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RemoveCachePoolRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|server
operator|.
name|removeCachePool
argument_list|(
name|request
operator|.
name|getPoolName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|RemoveCachePoolResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listCachePools (RpcController controller, ListCachePoolsRequestProto request)
specifier|public
name|ListCachePoolsResponseProto
name|listCachePools
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ListCachePoolsRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|RemoteIterator
argument_list|<
name|CachePoolInfo
argument_list|>
name|iter
init|=
name|server
operator|.
name|listCachePools
argument_list|(
name|request
operator|.
name|getPrevPoolName
argument_list|()
argument_list|)
decl_stmt|;
name|ListCachePoolsResponseProto
operator|.
name|Builder
name|responseBuilder
init|=
name|ListCachePoolsResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|String
name|prevPoolName
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|CachePoolInfo
name|pool
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|ListCachePoolsResponseElementProto
operator|.
name|Builder
name|elemBuilder
init|=
name|ListCachePoolsResponseElementProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|elemBuilder
operator|.
name|setPoolName
argument_list|(
name|pool
operator|.
name|getPoolName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|pool
operator|.
name|getOwnerName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|elemBuilder
operator|.
name|setOwnerName
argument_list|(
name|pool
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|pool
operator|.
name|getGroupName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|elemBuilder
operator|.
name|setGroupName
argument_list|(
name|pool
operator|.
name|getGroupName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|pool
operator|.
name|getMode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|elemBuilder
operator|.
name|setMode
argument_list|(
name|pool
operator|.
name|getMode
argument_list|()
operator|.
name|toShort
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|pool
operator|.
name|getWeight
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|elemBuilder
operator|.
name|setWeight
argument_list|(
name|pool
operator|.
name|getWeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|responseBuilder
operator|.
name|addElements
argument_list|(
name|elemBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|prevPoolName
operator|=
name|pool
operator|.
name|getPoolName
argument_list|()
expr_stmt|;
block|}
comment|// fill in hasNext
if|if
condition|(
name|prevPoolName
operator|==
literal|null
condition|)
block|{
name|responseBuilder
operator|.
name|setHasMore
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iter
operator|=
name|server
operator|.
name|listCachePools
argument_list|(
name|prevPoolName
argument_list|)
expr_stmt|;
name|responseBuilder
operator|.
name|setHasMore
argument_list|(
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|responseBuilder
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

