begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.nfs.mount
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|nfs
operator|.
name|mount
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|DatagramSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mount
operator|.
name|MountdBase
import|;
end_import

begin_comment
comment|/**  * Main class for starting mountd daemon. This daemon implements the NFS  * mount protocol. When receiving a MOUNT request from an NFS client, it checks  * the request against the list of currently exported file systems. If the  * client is permitted to mount the file system, rpc.mountd obtains a file  * handle for requested directory and returns it to the client.  */
end_comment

begin_class
DECL|class|Mountd
specifier|public
class|class
name|Mountd
extends|extends
name|MountdBase
block|{
DECL|method|Mountd (Configuration config, DatagramSocket registrationSocket)
specifier|public
name|Mountd
parameter_list|(
name|Configuration
name|config
parameter_list|,
name|DatagramSocket
name|registrationSocket
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
operator|new
name|RpcProgramMountd
argument_list|(
name|config
argument_list|,
name|registrationSocket
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Mountd
name|mountd
init|=
operator|new
name|Mountd
argument_list|(
name|config
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mountd
operator|.
name|start
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

