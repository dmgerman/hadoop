begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.nfs.nfs3
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|nfs
operator|.
name|nfs3
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|SessionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|nfs
operator|.
name|conf
operator|.
name|NfsConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableQuantiles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableRate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|source
operator|.
name|JvmMetrics
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining the various NFS gateway activity statistics and  * publishing them through the metrics interfaces.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"Nfs3 metrics"
argument_list|,
name|context
operator|=
literal|"dfs"
argument_list|)
DECL|class|Nfs3Metrics
specifier|public
class|class
name|Nfs3Metrics
block|{
comment|// All mutable rates are in nanoseconds
comment|// No metric for nullProcedure;
DECL|field|getattr
annotation|@
name|Metric
name|MutableRate
name|getattr
decl_stmt|;
DECL|field|setattr
annotation|@
name|Metric
name|MutableRate
name|setattr
decl_stmt|;
DECL|field|lookup
annotation|@
name|Metric
name|MutableRate
name|lookup
decl_stmt|;
DECL|field|access
annotation|@
name|Metric
name|MutableRate
name|access
decl_stmt|;
DECL|field|readlink
annotation|@
name|Metric
name|MutableRate
name|readlink
decl_stmt|;
DECL|field|read
annotation|@
name|Metric
name|MutableRate
name|read
decl_stmt|;
DECL|field|readNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|readNanosQuantiles
decl_stmt|;
DECL|field|write
annotation|@
name|Metric
name|MutableRate
name|write
decl_stmt|;
DECL|field|writeNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|writeNanosQuantiles
decl_stmt|;
DECL|field|create
annotation|@
name|Metric
name|MutableRate
name|create
decl_stmt|;
DECL|field|mkdir
annotation|@
name|Metric
name|MutableRate
name|mkdir
decl_stmt|;
DECL|field|symlink
annotation|@
name|Metric
name|MutableRate
name|symlink
decl_stmt|;
DECL|field|mknod
annotation|@
name|Metric
name|MutableRate
name|mknod
decl_stmt|;
DECL|field|remove
annotation|@
name|Metric
name|MutableRate
name|remove
decl_stmt|;
DECL|field|rmdir
annotation|@
name|Metric
name|MutableRate
name|rmdir
decl_stmt|;
DECL|field|rename
annotation|@
name|Metric
name|MutableRate
name|rename
decl_stmt|;
DECL|field|link
annotation|@
name|Metric
name|MutableRate
name|link
decl_stmt|;
DECL|field|readdir
annotation|@
name|Metric
name|MutableRate
name|readdir
decl_stmt|;
DECL|field|readdirplus
annotation|@
name|Metric
name|MutableRate
name|readdirplus
decl_stmt|;
DECL|field|fsstat
annotation|@
name|Metric
name|MutableRate
name|fsstat
decl_stmt|;
DECL|field|fsinfo
annotation|@
name|Metric
name|MutableRate
name|fsinfo
decl_stmt|;
DECL|field|pathconf
annotation|@
name|Metric
name|MutableRate
name|pathconf
decl_stmt|;
DECL|field|commit
annotation|@
name|Metric
name|MutableRate
name|commit
decl_stmt|;
DECL|field|commitNanosQuantiles
specifier|final
name|MutableQuantiles
index|[]
name|commitNanosQuantiles
decl_stmt|;
DECL|field|bytesWritten
annotation|@
name|Metric
name|MutableCounterLong
name|bytesWritten
decl_stmt|;
DECL|field|bytesRead
annotation|@
name|Metric
name|MutableCounterLong
name|bytesRead
decl_stmt|;
DECL|field|registry
specifier|final
name|MetricsRegistry
name|registry
init|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"nfs3"
argument_list|)
decl_stmt|;
DECL|field|name
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|jvmMetrics
name|JvmMetrics
name|jvmMetrics
init|=
literal|null
decl_stmt|;
DECL|method|Nfs3Metrics (String name, String sessionId, int[] intervals, final JvmMetrics jvmMetrics)
specifier|public
name|Nfs3Metrics
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|sessionId
parameter_list|,
name|int
index|[]
name|intervals
parameter_list|,
specifier|final
name|JvmMetrics
name|jvmMetrics
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|jvmMetrics
operator|=
name|jvmMetrics
expr_stmt|;
name|registry
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
specifier|final
name|int
name|len
init|=
name|intervals
operator|.
name|length
decl_stmt|;
name|readNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|writeNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
name|commitNanosQuantiles
operator|=
operator|new
name|MutableQuantiles
index|[
name|len
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|len
condition|;
name|i
operator|++
control|)
block|{
name|int
name|interval
init|=
name|intervals
index|[
name|i
index|]
decl_stmt|;
name|readNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"readProcessNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Read process in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|writeNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"writeProcessNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Write process in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
name|commitNanosQuantiles
index|[
name|i
index|]
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"commitProcessNanos"
operator|+
name|interval
operator|+
literal|"s"
argument_list|,
literal|"Commit process in ns"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
name|interval
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|create (Configuration conf, String gatewayName)
specifier|public
specifier|static
name|Nfs3Metrics
name|create
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|String
name|gatewayName
parameter_list|)
block|{
name|String
name|sessionId
init|=
name|conf
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_METRICS_SESSION_ID_KEY
argument_list|)
decl_stmt|;
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|JvmMetrics
name|jm
init|=
name|JvmMetrics
operator|.
name|create
argument_list|(
name|gatewayName
argument_list|,
name|sessionId
argument_list|,
name|ms
argument_list|)
decl_stmt|;
comment|// Percentile measurement is [50th,75th,90th,95th,99th] currently
name|int
index|[]
name|intervals
init|=
name|conf
operator|.
name|getInts
argument_list|(
name|NfsConfigKeys
operator|.
name|NFS_METRICS_PERCENTILES_INTERVALS_KEY
argument_list|)
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
operator|new
name|Nfs3Metrics
argument_list|(
name|gatewayName
argument_list|,
name|sessionId
argument_list|,
name|intervals
argument_list|,
name|jm
argument_list|)
argument_list|)
return|;
block|}
DECL|method|name ()
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getJvmMetrics ()
specifier|public
name|JvmMetrics
name|getJvmMetrics
parameter_list|()
block|{
return|return
name|jvmMetrics
return|;
block|}
DECL|method|incrBytesWritten (long bytes)
specifier|public
name|void
name|incrBytesWritten
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|bytesWritten
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|incrBytesRead (long bytes)
specifier|public
name|void
name|incrBytesRead
parameter_list|(
name|long
name|bytes
parameter_list|)
block|{
name|bytesRead
operator|.
name|incr
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
DECL|method|addGetattr (long latencyNanos)
specifier|public
name|void
name|addGetattr
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|getattr
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addSetattr (long latencyNanos)
specifier|public
name|void
name|addSetattr
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|setattr
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addLookup (long latencyNanos)
specifier|public
name|void
name|addLookup
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|lookup
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addAccess (long latencyNanos)
specifier|public
name|void
name|addAccess
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|access
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addReadlink (long latencyNanos)
specifier|public
name|void
name|addReadlink
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|readlink
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addRead (long latencyNanos)
specifier|public
name|void
name|addRead
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|read
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|readNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addWrite (long latencyNanos)
specifier|public
name|void
name|addWrite
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|write
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|writeNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addCreate (long latencyNanos)
specifier|public
name|void
name|addCreate
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|create
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addMkdir (long latencyNanos)
specifier|public
name|void
name|addMkdir
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|mkdir
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addSymlink (long latencyNanos)
specifier|public
name|void
name|addSymlink
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|symlink
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addMknod (long latencyNanos)
specifier|public
name|void
name|addMknod
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|mknod
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addRemove (long latencyNanos)
specifier|public
name|void
name|addRemove
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|remove
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addRmdir (long latencyNanos)
specifier|public
name|void
name|addRmdir
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|rmdir
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addRename (long latencyNanos)
specifier|public
name|void
name|addRename
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|rename
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addLink (long latencyNanos)
specifier|public
name|void
name|addLink
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|link
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addReaddir (long latencyNanos)
specifier|public
name|void
name|addReaddir
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|readdir
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addReaddirplus (long latencyNanos)
specifier|public
name|void
name|addReaddirplus
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|readdirplus
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addFsstat (long latencyNanos)
specifier|public
name|void
name|addFsstat
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|fsstat
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addFsinfo (long latencyNanos)
specifier|public
name|void
name|addFsinfo
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|fsinfo
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addPathconf (long latencyNanos)
specifier|public
name|void
name|addPathconf
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|pathconf
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
DECL|method|addCommit (long latencyNanos)
specifier|public
name|void
name|addCommit
parameter_list|(
name|long
name|latencyNanos
parameter_list|)
block|{
name|commit
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
for|for
control|(
name|MutableQuantiles
name|q
range|:
name|commitNanosQuantiles
control|)
block|{
name|q
operator|.
name|add
argument_list|(
name|latencyNanos
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

