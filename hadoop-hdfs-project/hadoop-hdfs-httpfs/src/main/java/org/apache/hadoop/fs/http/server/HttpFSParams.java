begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.http.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|http
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|http
operator|.
name|client
operator|.
name|HttpFSFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|BooleanParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|EnumParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|LongParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|ShortParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|StringParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|wsrs
operator|.
name|UserProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|MDC
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_comment
comment|/**  * HttpFS HTTP Parameters used by {@link HttpFSServer}.  */
end_comment

begin_class
DECL|class|HttpFSParams
specifier|public
class|class
name|HttpFSParams
block|{
comment|/**    * To avoid instantiation.    */
DECL|method|HttpFSParams ()
specifier|private
name|HttpFSParams
parameter_list|()
block|{   }
comment|/**    * Class for access-time parameter.    */
DECL|class|AccessTimeParam
specifier|public
specifier|static
class|class
name|AccessTimeParam
extends|extends
name|LongParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|ACCESS_TIME_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"-1"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|AccessTimeParam (String str)
specifier|public
name|AccessTimeParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for block-size parameter.    */
DECL|class|BlockSizeParam
specifier|public
specifier|static
class|class
name|BlockSizeParam
extends|extends
name|LongParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|BLOCKSIZE_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"-1"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|BlockSizeParam (String str)
specifier|public
name|BlockSizeParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for data parameter.    */
DECL|class|DataParam
specifier|public
specifier|static
class|class
name|DataParam
extends|extends
name|BooleanParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"data"
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"false"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|DataParam (String str)
specifier|public
name|DataParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for DELETE operation parameter.    */
DECL|class|DeleteOpParam
specifier|public
specifier|static
class|class
name|DeleteOpParam
extends|extends
name|EnumParam
argument_list|<
name|HttpFSFileSystem
operator|.
name|DeleteOpValues
argument_list|>
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OP_PARAM
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|DeleteOpParam (String str)
specifier|public
name|DeleteOpParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|HttpFSFileSystem
operator|.
name|DeleteOpValues
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for delete's recursive parameter.    */
DECL|class|DeleteRecursiveParam
specifier|public
specifier|static
class|class
name|DeleteRecursiveParam
extends|extends
name|BooleanParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|RECURSIVE_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"false"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|DeleteRecursiveParam (String str)
specifier|public
name|DeleteRecursiveParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for do-as parameter.    */
DECL|class|DoAsParam
specifier|public
specifier|static
class|class
name|DoAsParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|DO_AS_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|""
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|DoAsParam (String str)
specifier|public
name|DoAsParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|UserProvider
operator|.
name|USER_PATTERN
argument_list|)
expr_stmt|;
block|}
comment|/**      * Delegates to parent and then adds do-as user to      * MDC context for logging purposes.      *      * @param name parameter name.      * @param str parameter value.      *      * @return parsed parameter      */
annotation|@
name|Override
DECL|method|parseParam (String name, String str)
specifier|public
name|String
name|parseParam
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|str
parameter_list|)
block|{
name|String
name|doAs
init|=
name|super
operator|.
name|parseParam
argument_list|(
name|name
argument_list|,
name|str
argument_list|)
decl_stmt|;
name|MDC
operator|.
name|put
argument_list|(
name|NAME
argument_list|,
operator|(
name|doAs
operator|!=
literal|null
operator|)
condition|?
name|doAs
else|:
literal|"-"
argument_list|)
expr_stmt|;
return|return
name|doAs
return|;
block|}
block|}
comment|/**    * Class for filter parameter.    */
DECL|class|FilterParam
specifier|public
specifier|static
class|class
name|FilterParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"filter"
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|""
decl_stmt|;
comment|/**      * Constructor.      *      * @param expr parameter value.      */
DECL|method|FilterParam (String expr)
specifier|public
name|FilterParam
parameter_list|(
name|String
name|expr
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|expr
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for path parameter.    */
DECL|class|FsPathParam
specifier|public
specifier|static
class|class
name|FsPathParam
extends|extends
name|StringParam
block|{
comment|/**      * Constructor.      *      * @param path parameter value.      */
DECL|method|FsPathParam (String path)
specifier|public
name|FsPathParam
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
literal|"path"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
comment|/**      * Makes the path absolute adding '/' to it.      *<p/>      * This is required because JAX-RS resolution of paths does not add      * the root '/'.      */
DECL|method|makeAbsolute ()
specifier|public
name|void
name|makeAbsolute
parameter_list|()
block|{
name|String
name|path
init|=
name|value
argument_list|()
decl_stmt|;
name|path
operator|=
literal|"/"
operator|+
operator|(
operator|(
name|path
operator|!=
literal|null
operator|)
condition|?
name|path
else|:
literal|""
operator|)
expr_stmt|;
name|setValue
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for GET operation parameter.    */
DECL|class|GetOpParam
specifier|public
specifier|static
class|class
name|GetOpParam
extends|extends
name|EnumParam
argument_list|<
name|HttpFSFileSystem
operator|.
name|GetOpValues
argument_list|>
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OP_PARAM
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|GetOpParam (String str)
specifier|public
name|GetOpParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|HttpFSFileSystem
operator|.
name|GetOpValues
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for group parameter.    */
DECL|class|GroupParam
specifier|public
specifier|static
class|class
name|GroupParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|GROUP_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|""
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|GroupParam (String str)
specifier|public
name|GroupParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|UserProvider
operator|.
name|USER_PATTERN
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for len parameter.    */
DECL|class|LenParam
specifier|public
specifier|static
class|class
name|LenParam
extends|extends
name|LongParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"len"
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"-1"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|LenParam (String str)
specifier|public
name|LenParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for modified-time parameter.    */
DECL|class|ModifiedTimeParam
specifier|public
specifier|static
class|class
name|ModifiedTimeParam
extends|extends
name|LongParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|MODIFICATION_TIME_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"-1"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|ModifiedTimeParam (String str)
specifier|public
name|ModifiedTimeParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for offset parameter.    */
DECL|class|OffsetParam
specifier|public
specifier|static
class|class
name|OffsetParam
extends|extends
name|LongParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"offset"
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"0"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|OffsetParam (String str)
specifier|public
name|OffsetParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for overwrite parameter.    */
DECL|class|OverwriteParam
specifier|public
specifier|static
class|class
name|OverwriteParam
extends|extends
name|BooleanParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OVERWRITE_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"true"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|OverwriteParam (String str)
specifier|public
name|OverwriteParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for owner parameter.    */
DECL|class|OwnerParam
specifier|public
specifier|static
class|class
name|OwnerParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OWNER_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|""
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|OwnerParam (String str)
specifier|public
name|OwnerParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|UserProvider
operator|.
name|USER_PATTERN
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for permission parameter.    */
DECL|class|PermissionParam
specifier|public
specifier|static
class|class
name|PermissionParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|PERMISSION_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
name|HttpFSFileSystem
operator|.
name|DEFAULT_PERMISSION
decl_stmt|;
comment|/**      * Symbolic Unix permissions regular expression pattern.      */
DECL|field|PERMISSION_PATTERN
specifier|private
specifier|static
specifier|final
name|Pattern
name|PERMISSION_PATTERN
init|=
name|Pattern
operator|.
name|compile
argument_list|(
name|DEFAULT
operator|+
literal|"|(-[-r][-w][-x][-r][-w][-x][-r][-w][-x])"
operator|+
literal|"|[0-7][0-7][0-7]"
argument_list|)
decl_stmt|;
comment|/**      * Constructor.      *      * @param permission parameter value.      */
DECL|method|PermissionParam (String permission)
specifier|public
name|PermissionParam
parameter_list|(
name|String
name|permission
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|permission
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|PERMISSION_PATTERN
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for POST operation parameter.    */
DECL|class|PostOpParam
specifier|public
specifier|static
class|class
name|PostOpParam
extends|extends
name|EnumParam
argument_list|<
name|HttpFSFileSystem
operator|.
name|PostOpValues
argument_list|>
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OP_PARAM
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|PostOpParam (String str)
specifier|public
name|PostOpParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|HttpFSFileSystem
operator|.
name|PostOpValues
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for PUT operation parameter.    */
DECL|class|PutOpParam
specifier|public
specifier|static
class|class
name|PutOpParam
extends|extends
name|EnumParam
argument_list|<
name|HttpFSFileSystem
operator|.
name|PutOpValues
argument_list|>
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|OP_PARAM
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|PutOpParam (String str)
specifier|public
name|PutOpParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|,
name|HttpFSFileSystem
operator|.
name|PutOpValues
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for replication parameter.    */
DECL|class|ReplicationParam
specifier|public
specifier|static
class|class
name|ReplicationParam
extends|extends
name|ShortParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|REPLICATION_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|"-1"
decl_stmt|;
comment|/**      * Constructor.      *      * @param str parameter value.      */
DECL|method|ReplicationParam (String str)
specifier|public
name|ReplicationParam
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Class for to-path parameter.    */
DECL|class|ToPathParam
specifier|public
specifier|static
class|class
name|ToPathParam
extends|extends
name|StringParam
block|{
comment|/**      * Parameter name.      */
DECL|field|NAME
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|HttpFSFileSystem
operator|.
name|DESTINATION_PARAM
decl_stmt|;
comment|/**      * Default parameter value.      */
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT
init|=
literal|""
decl_stmt|;
comment|/**      * Constructor.      *      * @param path parameter value.      */
DECL|method|ToPathParam (String path)
specifier|public
name|ToPathParam
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|NAME
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

