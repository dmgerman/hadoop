begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.test
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_comment
comment|/**  * Helper to configure FileSystemAccess user/group and proxyuser  * configuration for testing using Java System properties.  *<p/>  * It uses the {@link SysPropsForTestsLoader} to load JavaSystem  * properties for testing.  */
end_comment

begin_class
DECL|class|HadoopUsersConfTestHelper
specifier|public
class|class
name|HadoopUsersConfTestHelper
block|{
static|static
block|{
name|SysPropsForTestsLoader
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
DECL|field|HADOOP_PROXYUSER
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_PROXYUSER
init|=
literal|"test.hadoop.proxyuser"
decl_stmt|;
DECL|field|HADOOP_PROXYUSER_HOSTS
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_PROXYUSER_HOSTS
init|=
literal|"test.hadoop.proxyuser.hosts"
decl_stmt|;
DECL|field|HADOOP_PROXYUSER_GROUPS
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_PROXYUSER_GROUPS
init|=
literal|"test.hadoop.proxyuser.groups"
decl_stmt|;
DECL|field|HADOOP_USER_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_USER_PREFIX
init|=
literal|"test.hadoop.user."
decl_stmt|;
comment|/**    * Returns a valid FileSystemAccess proxyuser for the FileSystemAccess cluster.    *<p/>    * The user is read from the Java System property    *<code>test.hadoop.proxyuser</code> which defaults to the current user    * (java System property<code>user.name</code>).    *<p/>    * This property should be set in the<code>test.properties</code> file.    *<p/>    * When running FileSystemAccess minicluster it is used to configure the FileSystemAccess minicluster.    *<p/>    * When using an external FileSystemAccess cluster, it is expected this property is set to    * a valid proxy user.    *    * @return a valid FileSystemAccess proxyuser for the FileSystemAccess cluster.    */
DECL|method|getHadoopProxyUser ()
specifier|public
specifier|static
name|String
name|getHadoopProxyUser
parameter_list|()
block|{
return|return
name|System
operator|.
name|getProperty
argument_list|(
name|HADOOP_PROXYUSER
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * Returns the hosts for the FileSystemAccess proxyuser settings.    *<p/>    * The hosts are read from the Java System property    *<code>test.hadoop.proxyuser.hosts</code> which defaults to<code>*</code>.    *<p/>    * This property should be set in the<code>test.properties</code> file.    *<p/>    * This property is ONLY used when running FileSystemAccess minicluster, it is used to    * configure the FileSystemAccess minicluster.    *<p/>    * When using an external FileSystemAccess cluster this property is ignored.    *    * @return the hosts for the FileSystemAccess proxyuser settings.    */
DECL|method|getHadoopProxyUserHosts ()
specifier|public
specifier|static
name|String
name|getHadoopProxyUserHosts
parameter_list|()
block|{
return|return
name|System
operator|.
name|getProperty
argument_list|(
name|HADOOP_PROXYUSER_HOSTS
argument_list|,
literal|"*"
argument_list|)
return|;
block|}
comment|/**    * Returns the groups for the FileSystemAccess proxyuser settings.    *<p/>    * The hosts are read from the Java System property    *<code>test.hadoop.proxyuser.groups</code> which defaults to<code>*</code>.    *<p/>    * This property should be set in the<code>test.properties</code> file.    *<p/>    * This property is ONLY used when running FileSystemAccess minicluster, it is used to    * configure the FileSystemAccess minicluster.    *<p/>    * When using an external FileSystemAccess cluster this property is ignored.    *    * @return the groups for the FileSystemAccess proxyuser settings.    */
DECL|method|getHadoopProxyUserGroups ()
specifier|public
specifier|static
name|String
name|getHadoopProxyUserGroups
parameter_list|()
block|{
return|return
name|System
operator|.
name|getProperty
argument_list|(
name|HADOOP_PROXYUSER_GROUPS
argument_list|,
literal|"*"
argument_list|)
return|;
block|}
DECL|field|DEFAULT_USERS
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|DEFAULT_USERS
init|=
operator|new
name|String
index|[]
block|{
literal|"user1"
block|,
literal|"user2"
block|}
decl_stmt|;
DECL|field|DEFAULT_USERS_GROUP
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|DEFAULT_USERS_GROUP
init|=
operator|new
name|String
index|[]
block|{
literal|"group1"
block|,
literal|"supergroup"
block|}
decl_stmt|;
comment|/**    * Returns the FileSystemAccess users to be used for tests. These users are defined    * in the<code>test.properties</code> file in properties of the form    *<code>test.hadoop.user.#USER#=#GROUP1#,#GROUP2#,...</code>.    *<p/>    * These properties are used to configure the FileSystemAccess minicluster user/group    * information.    *<p/>    * When using an external FileSystemAccess cluster these properties should match the    * user/groups settings in the cluster.    *    * @return the FileSystemAccess users used for testing.    */
DECL|method|getHadoopUsers ()
specifier|public
specifier|static
name|String
index|[]
name|getHadoopUsers
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|users
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|stringPropertyNames
argument_list|()
control|)
block|{
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
name|HADOOP_USER_PREFIX
argument_list|)
condition|)
block|{
name|users
operator|.
name|add
argument_list|(
name|name
operator|.
name|substring
argument_list|(
name|HADOOP_USER_PREFIX
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|(
name|users
operator|.
name|size
argument_list|()
operator|!=
literal|0
operator|)
condition|?
name|users
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|users
operator|.
name|size
argument_list|()
index|]
argument_list|)
else|:
name|DEFAULT_USERS
return|;
block|}
comment|/**    * Returns the groups a FileSystemAccess user belongs to during tests. These users/groups    * are defined in the<code>test.properties</code> file in properties of the    * form<code>test.hadoop.user.#USER#=#GROUP1#,#GROUP2#,...</code>.    *<p/>    * These properties are used to configure the FileSystemAccess minicluster user/group    * information.    *<p/>    * When using an external FileSystemAccess cluster these properties should match the    * user/groups settings in the cluster.    *    * @param user user name to get gropus.    *    * @return the groups of FileSystemAccess users used for testing.    */
DECL|method|getHadoopUserGroups (String user)
specifier|public
specifier|static
name|String
index|[]
name|getHadoopUserGroups
parameter_list|(
name|String
name|user
parameter_list|)
block|{
if|if
condition|(
name|getHadoopUsers
argument_list|()
operator|==
name|DEFAULT_USERS
condition|)
block|{
for|for
control|(
name|String
name|defaultUser
range|:
name|DEFAULT_USERS
control|)
block|{
if|if
condition|(
name|defaultUser
operator|.
name|equals
argument_list|(
name|user
argument_list|)
condition|)
block|{
return|return
name|DEFAULT_USERS_GROUP
return|;
block|}
block|}
return|return
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
else|else
block|{
name|String
name|groups
init|=
name|System
operator|.
name|getProperty
argument_list|(
name|HADOOP_USER_PREFIX
operator|+
name|user
argument_list|)
decl_stmt|;
return|return
operator|(
name|groups
operator|!=
literal|null
operator|)
condition|?
name|groups
operator|.
name|split
argument_list|(
literal|","
argument_list|)
else|:
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
block|}
DECL|method|getBaseConf ()
specifier|public
specifier|static
name|Configuration
name|getBaseConf
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|stringPropertyNames
argument_list|()
control|)
block|{
name|conf
operator|.
name|set
argument_list|(
name|name
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|conf
return|;
block|}
DECL|method|addUserConf (Configuration conf)
specifier|public
specifier|static
name|void
name|addUserConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.security.authentication"
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser."
operator|+
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUser
argument_list|()
operator|+
literal|".hosts"
argument_list|,
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUserHosts
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser."
operator|+
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUser
argument_list|()
operator|+
literal|".groups"
argument_list|,
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUserGroups
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|user
range|:
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUsers
argument_list|()
control|)
block|{
name|String
index|[]
name|groups
init|=
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUserGroups
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
name|user
argument_list|,
name|groups
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

