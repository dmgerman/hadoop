begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.http.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|http
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ContentSummary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileChecksum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|http
operator|.
name|server
operator|.
name|HttpFSServerWebApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HFSTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HadoopUsersConfTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDir
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDirHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestHdfs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestHdfsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestJetty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestJettyHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|webapp
operator|.
name|WebAppContext
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|TestHttpFSFileSystem
specifier|public
class|class
name|TestHttpFSFileSystem
extends|extends
name|HFSTestCase
block|{
DECL|method|createHttpFSServer ()
specifier|private
name|void
name|createHttpFSServer
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|homeDir
init|=
name|TestDirHelper
operator|.
name|getTestDir
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"conf"
argument_list|)
operator|.
name|mkdir
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"log"
argument_list|)
operator|.
name|mkdir
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"temp"
argument_list|)
operator|.
name|mkdir
argument_list|()
argument_list|)
expr_stmt|;
name|HttpFSServerWebApp
operator|.
name|setHomeDirForCurrentThread
argument_list|(
name|homeDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|secretFile
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"conf"
argument_list|)
argument_list|,
literal|"secret"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|secretFile
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
comment|//HDFS configuration
name|String
name|fsDefaultName
init|=
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
operator|.
name|get
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_DEFAULT_NAME_KEY
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_DEFAULT_NAME_KEY
argument_list|,
name|fsDefaultName
argument_list|)
expr_stmt|;
name|File
name|hdfsSite
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"conf"
argument_list|)
argument_list|,
literal|"hdfs-site.xml"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
operator|new
name|FileOutputStream
argument_list|(
name|hdfsSite
argument_list|)
decl_stmt|;
name|conf
operator|.
name|writeXml
argument_list|(
name|os
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
comment|//HTTPFS configuration
name|conf
operator|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"httpfs.proxyuser."
operator|+
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUser
argument_list|()
operator|+
literal|".groups"
argument_list|,
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUserGroups
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"httpfs.proxyuser."
operator|+
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUser
argument_list|()
operator|+
literal|".hosts"
argument_list|,
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopProxyUserHosts
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"httpfs.authentication.signature.secret.file"
argument_list|,
name|secretFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|httpfsSite
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"conf"
argument_list|)
argument_list|,
literal|"httpfs-site.xml"
argument_list|)
decl_stmt|;
name|os
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|httpfsSite
argument_list|)
expr_stmt|;
name|conf
operator|.
name|writeXml
argument_list|(
name|os
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|ClassLoader
name|cl
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|cl
operator|.
name|getResource
argument_list|(
literal|"webapp"
argument_list|)
decl_stmt|;
name|WebAppContext
name|context
init|=
operator|new
name|WebAppContext
argument_list|(
name|url
operator|.
name|getPath
argument_list|()
argument_list|,
literal|"/webhdfs"
argument_list|)
decl_stmt|;
name|Server
name|server
init|=
name|TestJettyHelper
operator|.
name|getJettyServer
argument_list|()
decl_stmt|;
name|server
operator|.
name|addHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|getHttpFileSystem ()
specifier|protected
name|FileSystem
name|getHttpFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.http.impl"
argument_list|,
name|HttpFSFileSystem
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|FileSystem
operator|.
name|get
argument_list|(
name|TestJettyHelper
operator|.
name|getJettyURL
argument_list|()
operator|.
name|toURI
argument_list|()
argument_list|,
name|conf
argument_list|)
return|;
block|}
DECL|method|testGet ()
specifier|protected
name|void
name|testGet
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|getHttpFileSystem
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|fs
operator|.
name|getUri
argument_list|()
argument_list|,
name|TestJettyHelper
operator|.
name|getJettyURL
argument_list|()
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testOpen ()
specifier|private
name|void
name|testOpen
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|InputStream
name|is
init|=
name|fs
operator|.
name|open
argument_list|(
operator|new
name|Path
argument_list|(
name|path
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|is
operator|.
name|read
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testCreate (Path path, boolean override)
specifier|private
name|void
name|testCreate
parameter_list|(
name|Path
name|path
parameter_list|,
name|boolean
name|override
parameter_list|)
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|getHttpFileSystem
argument_list|()
decl_stmt|;
name|FsPermission
name|permission
init|=
operator|new
name|FsPermission
argument_list|(
name|FsAction
operator|.
name|READ_WRITE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
operator|new
name|Path
argument_list|(
name|path
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
name|permission
argument_list|,
name|override
argument_list|,
literal|1024
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|,
literal|100
operator|*
literal|1024
operator|*
literal|1024
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|FileStatus
name|status
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status
operator|.
name|getReplication
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status
operator|.
name|getBlockSize
argument_list|()
argument_list|,
literal|100
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status
operator|.
name|getPermission
argument_list|()
argument_list|,
name|permission
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|is
operator|.
name|read
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testCreate ()
specifier|private
name|void
name|testCreate
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|testCreate
argument_list|(
name|path
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|testCreate
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|testCreate
argument_list|(
name|path
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{      }
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testAppend ()
specifier|private
name|void
name|testAppend
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|os
operator|=
name|fs
operator|.
name|append
argument_list|(
operator|new
name|Path
argument_list|(
name|path
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|is
operator|.
name|read
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|is
operator|.
name|read
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|is
operator|.
name|read
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testRename ()
specifier|private
name|void
name|testRename
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|Path
name|oldPath
init|=
operator|new
name|Path
argument_list|(
name|path
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|newPath
init|=
operator|new
name|Path
argument_list|(
name|path
operator|.
name|getParent
argument_list|()
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|rename
argument_list|(
name|oldPath
argument_list|,
name|newPath
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|oldPath
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|newPath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testDelete ()
specifier|private
name|void
name|testDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|foo
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|Path
name|bar
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|Path
name|foe
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foe"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|foo
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|bar
argument_list|,
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|foe
argument_list|)
expr_stmt|;
name|FileSystem
name|hoopFs
init|=
name|getHttpFileSystem
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|hoopFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|foo
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|foo
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|hoopFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|bar
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{     }
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|bar
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|hoopFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|bar
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|bar
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|foe
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|hoopFs
operator|.
name|delete
argument_list|(
name|foe
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|foe
argument_list|)
argument_list|)
expr_stmt|;
name|hoopFs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testListStatus ()
specifier|private
name|void
name|testListStatus
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|FileStatus
name|status1
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|FileStatus
name|status2
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
operator|new
name|Path
argument_list|(
name|path
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getPermission
argument_list|()
argument_list|,
name|status1
operator|.
name|getPermission
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getPath
argument_list|()
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|status1
operator|.
name|getPath
argument_list|()
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getReplication
argument_list|()
argument_list|,
name|status1
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getBlockSize
argument_list|()
argument_list|,
name|status1
operator|.
name|getBlockSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getAccessTime
argument_list|()
argument_list|,
name|status1
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|status1
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getOwner
argument_list|()
argument_list|,
name|status1
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getGroup
argument_list|()
argument_list|,
name|status1
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status2
operator|.
name|getLen
argument_list|()
argument_list|,
name|status1
operator|.
name|getLen
argument_list|()
argument_list|)
expr_stmt|;
name|FileStatus
index|[]
name|stati
init|=
name|fs
operator|.
name|listStatus
argument_list|(
name|path
operator|.
name|getParent
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|stati
operator|.
name|length
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|stati
index|[
literal|0
index|]
operator|.
name|getPath
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|path
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testWorkingdirectory ()
specifier|private
name|void
name|testWorkingdirectory
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|workingDir
init|=
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|Path
name|hoopWorkingDir
init|=
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|hoopWorkingDir
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
name|workingDir
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setWorkingDirectory
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|workingDir
operator|=
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|workingDir
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/tmp"
argument_list|)
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testMkdirs ()
specifier|private
name|void
name|testMkdirs
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|getHttpFileSystem
argument_list|()
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testSetTimes ()
specifier|private
name|void
name|testSetTimes
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|FileStatus
name|status1
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|long
name|at
init|=
name|status1
operator|.
name|getAccessTime
argument_list|()
decl_stmt|;
name|long
name|mt
init|=
name|status1
operator|.
name|getModificationTime
argument_list|()
decl_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|path
argument_list|,
name|mt
operator|+
literal|10
argument_list|,
name|at
operator|+
literal|20
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|status1
operator|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|long
name|atNew
init|=
name|status1
operator|.
name|getAccessTime
argument_list|()
decl_stmt|;
name|long
name|mtNew
init|=
name|status1
operator|.
name|getModificationTime
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mtNew
argument_list|,
name|mt
operator|+
literal|10
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|atNew
argument_list|,
name|at
operator|+
literal|20
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetPermission ()
specifier|private
name|void
name|testSetPermission
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foodir"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|FsPermission
name|permission1
init|=
operator|new
name|FsPermission
argument_list|(
name|FsAction
operator|.
name|READ_WRITE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|permission1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|FileStatus
name|status1
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|FsPermission
name|permission2
init|=
name|status1
operator|.
name|getPermission
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|permission2
argument_list|,
name|permission1
argument_list|)
expr_stmt|;
comment|//sticky bit
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|permission1
operator|=
operator|new
name|FsPermission
argument_list|(
name|FsAction
operator|.
name|READ_WRITE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|permission1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|status1
operator|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|permission2
operator|=
name|status1
operator|.
name|getPermission
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|permission2
operator|.
name|getStickyBit
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|permission2
argument_list|,
name|permission1
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetOwner ()
specifier|private
name|void
name|testSetOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|String
name|user
init|=
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUsers
argument_list|()
index|[
literal|1
index|]
decl_stmt|;
name|String
name|group
init|=
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUserGroups
argument_list|(
name|user
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|path
argument_list|,
name|user
argument_list|,
name|group
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|FileStatus
name|status1
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status1
operator|.
name|getOwner
argument_list|()
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status1
operator|.
name|getGroup
argument_list|()
argument_list|,
name|group
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetReplication ()
specifier|private
name|void
name|testSetReplication
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|path
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|path
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
expr_stmt|;
name|FileStatus
name|status1
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|status1
operator|.
name|getReplication
argument_list|()
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|testChecksum ()
specifier|private
name|void
name|testChecksum
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|FileChecksum
name|hdfsChecksum
init|=
name|fs
operator|.
name|getFileChecksum
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|FileChecksum
name|httpChecksum
init|=
name|fs
operator|.
name|getFileChecksum
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpChecksum
operator|.
name|getAlgorithmName
argument_list|()
argument_list|,
name|hdfsChecksum
operator|.
name|getAlgorithmName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpChecksum
operator|.
name|getLength
argument_list|()
argument_list|,
name|hdfsChecksum
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|httpChecksum
operator|.
name|getBytes
argument_list|()
argument_list|,
name|hdfsChecksum
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testContentSummary ()
specifier|private
name|void
name|testContentSummary
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsConf
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|TestHdfsHelper
operator|.
name|getHdfsTestDir
argument_list|()
argument_list|,
literal|"foo.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|ContentSummary
name|hdfsContentSummary
init|=
name|fs
operator|.
name|getContentSummary
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|=
name|getHttpFileSystem
argument_list|()
expr_stmt|;
name|ContentSummary
name|httpContentSummary
init|=
name|fs
operator|.
name|getContentSummary
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fs
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getDirectoryCount
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getDirectoryCount
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getFileCount
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getFileCount
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getLength
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getQuota
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getSpaceConsumed
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getSpaceConsumed
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|httpContentSummary
operator|.
name|getSpaceQuota
argument_list|()
argument_list|,
name|hdfsContentSummary
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|enum|Operation
specifier|protected
enum|enum
name|Operation
block|{
DECL|enumConstant|GET
DECL|enumConstant|OPEN
DECL|enumConstant|CREATE
DECL|enumConstant|APPEND
DECL|enumConstant|RENAME
DECL|enumConstant|DELETE
DECL|enumConstant|LIST_STATUS
DECL|enumConstant|WORKING_DIRECTORY
DECL|enumConstant|MKDIRS
name|GET
block|,
name|OPEN
block|,
name|CREATE
block|,
name|APPEND
block|,
name|RENAME
block|,
name|DELETE
block|,
name|LIST_STATUS
block|,
name|WORKING_DIRECTORY
block|,
name|MKDIRS
block|,
DECL|enumConstant|SET_TIMES
DECL|enumConstant|SET_PERMISSION
DECL|enumConstant|SET_OWNER
DECL|enumConstant|SET_REPLICATION
DECL|enumConstant|CHECKSUM
DECL|enumConstant|CONTENT_SUMMARY
name|SET_TIMES
block|,
name|SET_PERMISSION
block|,
name|SET_OWNER
block|,
name|SET_REPLICATION
block|,
name|CHECKSUM
block|,
name|CONTENT_SUMMARY
block|}
DECL|method|operation (Operation op)
specifier|private
name|void
name|operation
parameter_list|(
name|Operation
name|op
parameter_list|)
throws|throws
name|Exception
block|{
switch|switch
condition|(
name|op
condition|)
block|{
case|case
name|GET
case|:
name|testGet
argument_list|()
expr_stmt|;
break|break;
case|case
name|OPEN
case|:
name|testOpen
argument_list|()
expr_stmt|;
break|break;
case|case
name|CREATE
case|:
name|testCreate
argument_list|()
expr_stmt|;
break|break;
case|case
name|APPEND
case|:
name|testAppend
argument_list|()
expr_stmt|;
break|break;
case|case
name|RENAME
case|:
name|testRename
argument_list|()
expr_stmt|;
break|break;
case|case
name|DELETE
case|:
name|testDelete
argument_list|()
expr_stmt|;
break|break;
case|case
name|LIST_STATUS
case|:
name|testListStatus
argument_list|()
expr_stmt|;
break|break;
case|case
name|WORKING_DIRECTORY
case|:
name|testWorkingdirectory
argument_list|()
expr_stmt|;
break|break;
case|case
name|MKDIRS
case|:
name|testMkdirs
argument_list|()
expr_stmt|;
break|break;
case|case
name|SET_TIMES
case|:
name|testSetTimes
argument_list|()
expr_stmt|;
break|break;
case|case
name|SET_PERMISSION
case|:
name|testSetPermission
argument_list|()
expr_stmt|;
break|break;
case|case
name|SET_OWNER
case|:
name|testSetOwner
argument_list|()
expr_stmt|;
break|break;
case|case
name|SET_REPLICATION
case|:
name|testSetReplication
argument_list|()
expr_stmt|;
break|break;
case|case
name|CHECKSUM
case|:
name|testChecksum
argument_list|()
expr_stmt|;
break|break;
case|case
name|CONTENT_SUMMARY
case|:
name|testContentSummary
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
annotation|@
name|Parameterized
operator|.
name|Parameters
DECL|method|operations ()
specifier|public
specifier|static
name|Collection
name|operations
parameter_list|()
block|{
name|Object
index|[]
index|[]
name|ops
init|=
operator|new
name|Object
index|[
name|Operation
operator|.
name|values
argument_list|()
operator|.
name|length
index|]
index|[]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|Operation
operator|.
name|values
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ops
index|[
name|i
index|]
operator|=
operator|new
name|Object
index|[]
block|{
name|Operation
operator|.
name|values
argument_list|()
index|[
name|i
index|]
block|}
expr_stmt|;
block|}
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|ops
argument_list|)
return|;
comment|//    return Arrays.asList(new Object[][]{ new Object[]{Operation.CREATE}});
block|}
DECL|field|operation
specifier|private
name|Operation
name|operation
decl_stmt|;
DECL|method|TestHttpFSFileSystem (Operation operation)
specifier|public
name|TestHttpFSFileSystem
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|this
operator|.
name|operation
operator|=
name|operation
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|TestDir
annotation|@
name|TestJetty
annotation|@
name|TestHdfs
DECL|method|testOperation ()
specifier|public
name|void
name|testOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|createHttpFSServer
argument_list|()
expr_stmt|;
name|operation
argument_list|(
name|operation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|TestDir
annotation|@
name|TestJetty
annotation|@
name|TestHdfs
DECL|method|testOperationDoAs ()
specifier|public
name|void
name|testOperationDoAs
parameter_list|()
throws|throws
name|Exception
block|{
name|createHttpFSServer
argument_list|()
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|UserGroupInformation
operator|.
name|createProxyUser
argument_list|(
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUsers
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
decl_stmt|;
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|operation
argument_list|(
name|operation
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

