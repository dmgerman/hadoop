begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.lib.service.instrumentation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|service
operator|.
name|instrumentation
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|service
operator|.
name|Instrumentation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|service
operator|.
name|scheduler
operator|.
name|SchedulerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDir
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDirHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|simple
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|simple
operator|.
name|parser
operator|.
name|JSONParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_class
DECL|class|TestInstrumentationService
specifier|public
class|class
name|TestInstrumentationService
extends|extends
name|HTestCase
block|{
annotation|@
name|Override
DECL|method|getWaitForRatio ()
specifier|protected
name|float
name|getWaitForRatio
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
annotation|@
name|Test
DECL|method|cron ()
specifier|public
name|void
name|cron
parameter_list|()
block|{
name|InstrumentationService
operator|.
name|Cron
name|cron
init|=
operator|new
name|InstrumentationService
operator|.
name|Cron
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|lapStart
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|own
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|total
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|long
name|begin
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|()
argument_list|,
name|cron
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|()
argument_list|,
name|cron
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|,
name|begin
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|,
name|cron
operator|.
name|lapStart
argument_list|)
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|stop
argument_list|()
argument_list|,
name|cron
argument_list|)
expr_stmt|;
name|long
name|end
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|delta
init|=
name|end
operator|-
name|begin
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|own
argument_list|,
name|delta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|total
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|lapStart
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|long
name|reStart
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|start
argument_list|,
name|begin
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|lapStart
argument_list|,
name|reStart
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|long
name|reEnd
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|delta
operator|+=
name|reEnd
operator|-
name|reStart
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|own
argument_list|,
name|delta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|total
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|lapStart
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cron
operator|.
name|end
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cron
operator|.
name|total
argument_list|,
name|reEnd
operator|-
name|begin
argument_list|,
literal|20
argument_list|)
expr_stmt|;
try|try
block|{
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ex
parameter_list|)
block|{     }
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ex
parameter_list|)
block|{     }
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|timer ()
specifier|public
name|void
name|timer
parameter_list|()
throws|throws
name|Exception
block|{
name|InstrumentationService
operator|.
name|Timer
name|timer
init|=
operator|new
name|InstrumentationService
operator|.
name|Timer
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|InstrumentationService
operator|.
name|Cron
name|cron
init|=
operator|new
name|InstrumentationService
operator|.
name|Cron
argument_list|()
decl_stmt|;
name|long
name|ownStart
decl_stmt|;
name|long
name|ownEnd
decl_stmt|;
name|long
name|totalStart
decl_stmt|;
name|long
name|totalEnd
decl_stmt|;
name|long
name|ownDelta
decl_stmt|;
name|long
name|totalDelta
decl_stmt|;
name|long
name|avgTotal
decl_stmt|;
name|long
name|avgOwn
decl_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|totalStart
operator|=
name|ownStart
expr_stmt|;
name|ownDelta
operator|=
literal|0
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|totalEnd
operator|=
name|ownEnd
expr_stmt|;
name|totalDelta
operator|=
name|totalEnd
operator|-
name|totalStart
expr_stmt|;
name|avgTotal
operator|=
name|totalDelta
expr_stmt|;
name|avgOwn
operator|=
name|ownDelta
expr_stmt|;
name|timer
operator|.
name|addCron
argument_list|(
name|cron
argument_list|)
expr_stmt|;
name|long
index|[]
name|values
init|=
name|timer
operator|.
name|getValues
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_TOTAL
index|]
argument_list|,
name|totalDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_OWN
index|]
argument_list|,
name|ownDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_TOTAL
index|]
argument_list|,
name|avgTotal
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_OWN
index|]
argument_list|,
name|avgOwn
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|cron
operator|=
operator|new
name|InstrumentationService
operator|.
name|Cron
argument_list|()
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|totalStart
operator|=
name|ownStart
expr_stmt|;
name|ownDelta
operator|=
literal|0
expr_stmt|;
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|totalEnd
operator|=
name|ownEnd
expr_stmt|;
name|totalDelta
operator|=
name|totalEnd
operator|-
name|totalStart
expr_stmt|;
name|avgTotal
operator|=
operator|(
name|avgTotal
operator|*
literal|1
operator|+
name|totalDelta
operator|)
operator|/
literal|2
expr_stmt|;
name|avgOwn
operator|=
operator|(
name|avgOwn
operator|*
literal|1
operator|+
name|ownDelta
operator|)
operator|/
literal|2
expr_stmt|;
name|timer
operator|.
name|addCron
argument_list|(
name|cron
argument_list|)
expr_stmt|;
name|values
operator|=
name|timer
operator|.
name|getValues
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_TOTAL
index|]
argument_list|,
name|totalDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_OWN
index|]
argument_list|,
name|ownDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_TOTAL
index|]
argument_list|,
name|avgTotal
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_OWN
index|]
argument_list|,
name|avgOwn
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|avgTotal
operator|=
name|totalDelta
expr_stmt|;
name|avgOwn
operator|=
name|ownDelta
expr_stmt|;
name|cron
operator|=
operator|new
name|InstrumentationService
operator|.
name|Cron
argument_list|()
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|totalStart
operator|=
name|ownStart
expr_stmt|;
name|ownDelta
operator|=
literal|0
expr_stmt|;
name|sleep
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|sleep
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|ownStart
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|sleep
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|ownEnd
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|ownDelta
operator|+=
name|ownEnd
operator|-
name|ownStart
expr_stmt|;
name|totalEnd
operator|=
name|ownEnd
expr_stmt|;
name|totalDelta
operator|=
name|totalEnd
operator|-
name|totalStart
expr_stmt|;
name|avgTotal
operator|=
operator|(
name|avgTotal
operator|*
literal|1
operator|+
name|totalDelta
operator|)
operator|/
literal|2
expr_stmt|;
name|avgOwn
operator|=
operator|(
name|avgOwn
operator|*
literal|1
operator|+
name|ownDelta
operator|)
operator|/
literal|2
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|timer
operator|.
name|addCron
argument_list|(
name|cron
argument_list|)
expr_stmt|;
name|values
operator|=
name|timer
operator|.
name|getValues
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_TOTAL
index|]
argument_list|,
name|totalDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_OWN
index|]
argument_list|,
name|ownDelta
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_TOTAL
index|]
argument_list|,
name|avgTotal
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_OWN
index|]
argument_list|,
name|avgOwn
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|timer
operator|.
name|toJSONString
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"lastTotal"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_TOTAL
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"lastOwn"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_OWN
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"avgTotal"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_TOTAL
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"avgOwn"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_OWN
index|]
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|timer
operator|.
name|writeJSONString
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|json
operator|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"lastTotal"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_TOTAL
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"lastOwn"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|LAST_OWN
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"avgTotal"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_TOTAL
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"avgOwn"
argument_list|)
argument_list|,
name|values
index|[
name|InstrumentationService
operator|.
name|Timer
operator|.
name|AVG_OWN
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|sampler ()
specifier|public
name|void
name|sampler
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|long
name|value
index|[]
init|=
operator|new
name|long
index|[
literal|1
index|]
decl_stmt|;
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
name|var
init|=
operator|new
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|getValue
parameter_list|()
block|{
return|return
name|value
index|[
literal|0
index|]
return|;
block|}
block|}
decl_stmt|;
name|InstrumentationService
operator|.
name|Sampler
name|sampler
init|=
operator|new
name|InstrumentationService
operator|.
name|Sampler
argument_list|()
decl_stmt|;
name|sampler
operator|.
name|init
argument_list|(
literal|4
argument_list|,
name|var
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
literal|0f
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|sampler
operator|.
name|sample
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
literal|0f
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|value
index|[
literal|0
index|]
operator|=
literal|1
expr_stmt|;
name|sampler
operator|.
name|sample
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
operator|(
literal|0d
operator|+
literal|1
operator|)
operator|/
literal|2
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|value
index|[
literal|0
index|]
operator|=
literal|2
expr_stmt|;
name|sampler
operator|.
name|sample
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
operator|(
literal|0d
operator|+
literal|1
operator|+
literal|2
operator|)
operator|/
literal|3
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|value
index|[
literal|0
index|]
operator|=
literal|3
expr_stmt|;
name|sampler
operator|.
name|sample
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
operator|(
literal|0d
operator|+
literal|1
operator|+
literal|2
operator|+
literal|3
operator|)
operator|/
literal|4
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|value
index|[
literal|0
index|]
operator|=
literal|4
expr_stmt|;
name|sampler
operator|.
name|sample
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|,
operator|(
literal|4d
operator|+
literal|1
operator|+
literal|2
operator|+
literal|3
operator|)
operator|/
literal|4
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|sampler
operator|.
name|toJSONString
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"sampler"
argument_list|)
argument_list|,
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"size"
argument_list|)
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|sampler
operator|.
name|writeJSONString
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|json
operator|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"sampler"
argument_list|)
argument_list|,
name|sampler
operator|.
name|getRate
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"size"
argument_list|)
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|variableHolder ()
specifier|public
name|void
name|variableHolder
parameter_list|()
throws|throws
name|Exception
block|{
name|InstrumentationService
operator|.
name|VariableHolder
argument_list|<
name|String
argument_list|>
name|variableHolder
init|=
operator|new
name|InstrumentationService
operator|.
name|VariableHolder
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|variableHolder
operator|.
name|var
operator|=
operator|new
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
literal|"foo"
return|;
block|}
block|}
expr_stmt|;
name|JSONObject
name|json
init|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|variableHolder
operator|.
name|toJSONString
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|variableHolder
operator|.
name|writeJSONString
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|json
operator|=
operator|(
name|JSONObject
operator|)
operator|new
name|JSONParser
argument_list|()
operator|.
name|parse
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|json
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|TestDir
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|service ()
specifier|public
name|void
name|service
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dir
init|=
name|TestDirHelper
operator|.
name|getTestDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|String
name|services
init|=
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|InstrumentationService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"server.services"
argument_list|,
name|services
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
literal|"server"
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|server
operator|.
name|init
argument_list|()
expr_stmt|;
name|Instrumentation
name|instrumentation
init|=
name|server
operator|.
name|get
argument_list|(
name|Instrumentation
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|instrumentation
argument_list|)
expr_stmt|;
name|instrumentation
operator|.
name|incr
argument_list|(
literal|"g"
argument_list|,
literal|"c"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|instrumentation
operator|.
name|incr
argument_list|(
literal|"g"
argument_list|,
literal|"c"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|instrumentation
operator|.
name|incr
argument_list|(
literal|"g"
argument_list|,
literal|"c1"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Instrumentation
operator|.
name|Cron
name|cron
init|=
name|instrumentation
operator|.
name|createCron
argument_list|()
decl_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|instrumentation
operator|.
name|addCron
argument_list|(
literal|"g"
argument_list|,
literal|"t"
argument_list|,
name|cron
argument_list|)
expr_stmt|;
name|cron
operator|=
name|instrumentation
operator|.
name|createCron
argument_list|()
expr_stmt|;
name|cron
operator|.
name|start
argument_list|()
expr_stmt|;
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|cron
operator|.
name|stop
argument_list|()
expr_stmt|;
name|instrumentation
operator|.
name|addCron
argument_list|(
literal|"g"
argument_list|,
literal|"t"
argument_list|,
name|cron
argument_list|)
expr_stmt|;
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|String
argument_list|>
name|var
init|=
operator|new
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
literal|"foo"
return|;
block|}
block|}
decl_stmt|;
name|instrumentation
operator|.
name|addVariable
argument_list|(
literal|"g"
argument_list|,
literal|"v"
argument_list|,
name|var
argument_list|)
expr_stmt|;
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
name|varToSample
init|=
operator|new
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|getValue
parameter_list|()
block|{
return|return
literal|1L
return|;
block|}
block|}
decl_stmt|;
name|instrumentation
operator|.
name|addSampler
argument_list|(
literal|"g"
argument_list|,
literal|"s"
argument_list|,
literal|10
argument_list|,
name|varToSample
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|snapshot
init|=
name|instrumentation
operator|.
name|getSnapshot
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"os-env"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"sys-props"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"jvm"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"counters"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"timers"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"variables"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|snapshot
operator|.
name|get
argument_list|(
literal|"samplers"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"os-env"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"PATH"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"sys-props"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"java.version"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"jvm"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"free.memory"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"jvm"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"max.memory"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"jvm"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"total.memory"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"counters"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"timers"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"variables"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"samplers"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"counters"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"counters"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"timers"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"t"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"variables"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"v"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
operator|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"samplers"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"s"
argument_list|)
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JSONObject
operator|.
name|writeJSONString
argument_list|(
name|snapshot
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|TestDir
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|sampling ()
specifier|public
name|void
name|sampling
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dir
init|=
name|TestDirHelper
operator|.
name|getTestDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|String
name|services
init|=
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|InstrumentationService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|SchedulerService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"server.services"
argument_list|,
name|services
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
literal|"server"
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|server
operator|.
name|init
argument_list|()
expr_stmt|;
name|Instrumentation
name|instrumentation
init|=
name|server
operator|.
name|get
argument_list|(
name|Instrumentation
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|AtomicInteger
name|count
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
name|varToSample
init|=
operator|new
name|Instrumentation
operator|.
name|Variable
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|getValue
parameter_list|()
block|{
return|return
operator|(
name|long
operator|)
name|count
operator|.
name|incrementAndGet
argument_list|()
return|;
block|}
block|}
decl_stmt|;
name|instrumentation
operator|.
name|addSampler
argument_list|(
literal|"g"
argument_list|,
literal|"s"
argument_list|,
literal|10
argument_list|,
name|varToSample
argument_list|)
expr_stmt|;
name|sleep
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|int
name|i
init|=
name|count
operator|.
name|get
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|i
operator|>
literal|0
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
argument_list|>
name|snapshot
init|=
name|instrumentation
operator|.
name|getSnapshot
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|samplers
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
operator|)
name|snapshot
operator|.
name|get
argument_list|(
literal|"samplers"
argument_list|)
decl_stmt|;
name|InstrumentationService
operator|.
name|Sampler
name|sampler
init|=
operator|(
name|InstrumentationService
operator|.
name|Sampler
operator|)
name|samplers
operator|.
name|get
argument_list|(
literal|"g"
argument_list|)
operator|.
name|get
argument_list|(
literal|"s"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sampler
operator|.
name|getRate
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|server
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

