begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.lib.service.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|service
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|GroupMappingServiceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HadoopUsersConfTestHelper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|DummyGroupMapping
specifier|public
class|class
name|DummyGroupMapping
implements|implements
name|GroupMappingServiceProvider
block|{
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getGroups (String user)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getGroups
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|user
operator|.
name|equals
argument_list|(
literal|"root"
argument_list|)
condition|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
literal|"admin"
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|user
operator|.
name|equals
argument_list|(
literal|"nobody"
argument_list|)
condition|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
literal|"nobody"
argument_list|)
return|;
block|}
else|else
block|{
name|String
index|[]
name|groups
init|=
name|HadoopUsersConfTestHelper
operator|.
name|getHadoopUserGroups
argument_list|(
name|user
argument_list|)
decl_stmt|;
return|return
operator|(
name|groups
operator|!=
literal|null
operator|)
condition|?
name|Arrays
operator|.
name|asList
argument_list|(
name|groups
argument_list|)
else|:
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|cacheGroupsRefresh ()
specifier|public
name|void
name|cacheGroupsRefresh
parameter_list|()
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|cacheGroupsAdd (List<String> groups)
specifier|public
name|void
name|cacheGroupsAdd
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|groups
parameter_list|)
throws|throws
name|IOException
block|{   }
block|}
end_class

end_unit

