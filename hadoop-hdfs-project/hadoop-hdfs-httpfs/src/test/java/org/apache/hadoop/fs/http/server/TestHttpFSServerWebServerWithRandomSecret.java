begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.http.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|http
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Shell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Unlike {@link TestHttpFSServerWebServer}, httpfs-signature.secret doesn't  * exist. In this case, a random secret is used.  */
end_comment

begin_class
DECL|class|TestHttpFSServerWebServerWithRandomSecret
specifier|public
class|class
name|TestHttpFSServerWebServerWithRandomSecret
extends|extends
name|TestHttpFSServerWebServer
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass ()
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|homeDir
init|=
name|GenericTestUtils
operator|.
name|getTestDir
argument_list|()
decl_stmt|;
name|File
name|confDir
init|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"etc/hadoop"
argument_list|)
decl_stmt|;
name|File
name|logsDir
init|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"logs"
argument_list|)
decl_stmt|;
name|File
name|tempDir
init|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"temp"
argument_list|)
decl_stmt|;
name|confDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|logsDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|tempDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
if|if
condition|(
name|Shell
operator|.
name|WINDOWS
condition|)
block|{
name|File
name|binDir
init|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"bin"
argument_list|)
decl_stmt|;
name|binDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|File
name|winutils
init|=
name|Shell
operator|.
name|getWinUtilsFile
argument_list|()
decl_stmt|;
if|if
condition|(
name|winutils
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|copyFileToDirectory
argument_list|(
name|winutils
argument_list|,
name|binDir
argument_list|)
expr_stmt|;
block|}
block|}
name|System
operator|.
name|setProperty
argument_list|(
literal|"hadoop.home.dir"
argument_list|,
name|homeDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"hadoop.log.dir"
argument_list|,
name|logsDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"httpfs.home.dir"
argument_list|,
name|homeDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"httpfs.log.dir"
argument_list|,
name|logsDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"httpfs.config.dir"
argument_list|,
name|confDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

