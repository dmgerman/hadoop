begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.lib.servlet
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|servlet
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|lib
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDir
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|TestDirHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestServerWebApp
specifier|public
class|class
name|TestServerWebApp
extends|extends
name|HTestCase
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|getHomeDirNotDef ()
specifier|public
name|void
name|getHomeDirNotDef
parameter_list|()
block|{
name|ServerWebApp
operator|.
name|getHomeDir
argument_list|(
literal|"TestServerWebApp00"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getHomeDir ()
specifier|public
name|void
name|getHomeDir
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp0.home.dir"
argument_list|,
literal|"/tmp"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ServerWebApp
operator|.
name|getHomeDir
argument_list|(
literal|"TestServerWebApp0"
argument_list|)
argument_list|,
literal|"/tmp"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ServerWebApp
operator|.
name|getDir
argument_list|(
literal|"TestServerWebApp0"
argument_list|,
literal|".log.dir"
argument_list|,
literal|"/tmp/log"
argument_list|)
argument_list|,
literal|"/tmp/log"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp0.log.dir"
argument_list|,
literal|"/tmplog"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ServerWebApp
operator|.
name|getDir
argument_list|(
literal|"TestServerWebApp0"
argument_list|,
literal|".log.dir"
argument_list|,
literal|"/tmp/log"
argument_list|)
argument_list|,
literal|"/tmplog"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|TestDir
DECL|method|lifecycle ()
specifier|public
name|void
name|lifecycle
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dir
init|=
name|TestDirHelper
operator|.
name|getTestDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp1.home.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp1.config.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp1.log.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp1.temp.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|ServerWebApp
name|server
init|=
operator|new
name|ServerWebApp
argument_list|(
literal|"TestServerWebApp1"
argument_list|)
block|{     }
decl_stmt|;
name|assertEquals
argument_list|(
name|server
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Server
operator|.
name|Status
operator|.
name|UNDEF
argument_list|)
expr_stmt|;
name|server
operator|.
name|contextInitialized
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|server
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Server
operator|.
name|Status
operator|.
name|NORMAL
argument_list|)
expr_stmt|;
name|server
operator|.
name|contextDestroyed
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|server
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Server
operator|.
name|Status
operator|.
name|SHUTDOWN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RuntimeException
operator|.
name|class
argument_list|)
annotation|@
name|TestDir
DECL|method|failedInit ()
specifier|public
name|void
name|failedInit
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dir
init|=
name|TestDirHelper
operator|.
name|getTestDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp2.home.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp2.config.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp2.log.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"TestServerWebApp2.temp.dir"
argument_list|,
name|dir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"testserverwebapp2.services"
argument_list|,
literal|"FOO"
argument_list|)
expr_stmt|;
name|ServerWebApp
name|server
init|=
operator|new
name|ServerWebApp
argument_list|(
literal|"TestServerWebApp2"
argument_list|)
block|{     }
decl_stmt|;
name|server
operator|.
name|contextInitialized
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

