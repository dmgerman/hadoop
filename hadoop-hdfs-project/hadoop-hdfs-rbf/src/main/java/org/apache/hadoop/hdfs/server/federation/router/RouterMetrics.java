begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|ProcessName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|SessionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeInt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|source
operator|.
name|JvmMetrics
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining the various Router activity statistics  * and publishing them through the metrics interfaces.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|name
operator|=
literal|"RouterActivity"
argument_list|,
name|about
operator|=
literal|"Router metrics"
argument_list|,
name|context
operator|=
literal|"dfs"
argument_list|)
DECL|class|RouterMetrics
specifier|public
class|class
name|RouterMetrics
block|{
DECL|field|registry
specifier|private
specifier|final
name|MetricsRegistry
name|registry
init|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"router"
argument_list|)
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Duration in SafeMode at startup in msec"
argument_list|)
DECL|field|safeModeTime
specifier|private
name|MutableGaugeInt
name|safeModeTime
decl_stmt|;
DECL|field|jvmMetrics
specifier|private
name|JvmMetrics
name|jvmMetrics
init|=
literal|null
decl_stmt|;
DECL|method|RouterMetrics ( String processName, String sessionId, final JvmMetrics jvmMetrics)
name|RouterMetrics
parameter_list|(
name|String
name|processName
parameter_list|,
name|String
name|sessionId
parameter_list|,
specifier|final
name|JvmMetrics
name|jvmMetrics
parameter_list|)
block|{
name|this
operator|.
name|jvmMetrics
operator|=
name|jvmMetrics
expr_stmt|;
name|registry
operator|.
name|tag
argument_list|(
name|ProcessName
argument_list|,
name|processName
argument_list|)
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
block|}
DECL|method|create (Configuration conf)
specifier|public
specifier|static
name|RouterMetrics
name|create
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|String
name|sessionId
init|=
name|conf
operator|.
name|get
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_METRICS_SESSION_ID_KEY
argument_list|)
decl_stmt|;
name|String
name|processName
init|=
literal|"Router"
decl_stmt|;
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|JvmMetrics
name|jm
init|=
name|JvmMetrics
operator|.
name|create
argument_list|(
name|processName
argument_list|,
name|sessionId
argument_list|,
name|ms
argument_list|)
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
operator|new
name|RouterMetrics
argument_list|(
name|processName
argument_list|,
name|sessionId
argument_list|,
name|jm
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getJvmMetrics ()
specifier|public
name|JvmMetrics
name|getJvmMetrics
parameter_list|()
block|{
return|return
name|jvmMetrics
return|;
block|}
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|DefaultMetricsSystem
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
DECL|method|setSafeModeTime (long elapsed)
specifier|public
name|void
name|setSafeModeTime
parameter_list|(
name|long
name|elapsed
parameter_list|)
block|{
name|safeModeTime
operator|.
name|set
argument_list|(
operator|(
name|int
operator|)
name|elapsed
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

