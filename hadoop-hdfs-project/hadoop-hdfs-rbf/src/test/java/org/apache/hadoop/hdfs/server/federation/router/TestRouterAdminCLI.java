begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|FederationTestUtils
operator|.
name|createNamenodeReport
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ha
operator|.
name|HAServiceProtocol
operator|.
name|HAServiceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|protocol
operator|.
name|HdfsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|MiniRouterDFSCluster
operator|.
name|RouterContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|RouterConfigBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|StateStoreDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|metrics
operator|.
name|RBFMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|ActiveNamenodeResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|MountTableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|MountTableResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|MultipleDestinationMountTableResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|RemoteLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|order
operator|.
name|DestinationOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|StateStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|impl
operator|.
name|DisabledNameserviceStoreImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|impl
operator|.
name|MountTableStoreImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|GetMountTableEntriesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|protocol
operator|.
name|GetMountTableEntriesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|MountTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|federation
operator|.
name|RouterAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|Whitebox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ToolRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_comment
comment|/**  * Tests Router admin commands.  */
end_comment

begin_class
DECL|class|TestRouterAdminCLI
specifier|public
class|class
name|TestRouterAdminCLI
block|{
DECL|field|cluster
specifier|private
specifier|static
name|StateStoreDFSCluster
name|cluster
decl_stmt|;
DECL|field|routerContext
specifier|private
specifier|static
name|RouterContext
name|routerContext
decl_stmt|;
DECL|field|stateStore
specifier|private
specifier|static
name|StateStoreService
name|stateStore
decl_stmt|;
DECL|field|admin
specifier|private
specifier|static
name|RouterAdmin
name|admin
decl_stmt|;
DECL|field|client
specifier|private
specifier|static
name|RouterClient
name|client
decl_stmt|;
DECL|field|router
specifier|private
specifier|static
name|Router
name|router
decl_stmt|;
DECL|field|TEST_USER
specifier|private
specifier|static
specifier|final
name|String
name|TEST_USER
init|=
literal|"test-user"
decl_stmt|;
DECL|field|out
specifier|private
specifier|final
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
DECL|field|err
specifier|private
specifier|final
name|ByteArrayOutputStream
name|err
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
DECL|field|OLD_OUT
specifier|private
specifier|static
specifier|final
name|PrintStream
name|OLD_OUT
init|=
name|System
operator|.
name|out
decl_stmt|;
DECL|field|OLD_ERR
specifier|private
specifier|static
specifier|final
name|PrintStream
name|OLD_ERR
init|=
name|System
operator|.
name|err
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|globalSetUp ()
specifier|public
specifier|static
name|void
name|globalSetUp
parameter_list|()
throws|throws
name|Exception
block|{
name|cluster
operator|=
operator|new
name|StateStoreDFSCluster
argument_list|(
literal|false
argument_list|,
literal|1
argument_list|,
name|MultipleDestinationMountTableResolver
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Build and start a router with State Store + admin + RPC
name|Configuration
name|conf
init|=
operator|new
name|RouterConfigBuilder
argument_list|()
operator|.
name|stateStore
argument_list|()
operator|.
name|metrics
argument_list|()
operator|.
name|admin
argument_list|()
operator|.
name|rpc
argument_list|()
operator|.
name|safemode
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|cluster
operator|.
name|addRouterOverrides
argument_list|(
name|conf
argument_list|)
expr_stmt|;
comment|// Start routers
name|cluster
operator|.
name|startRouters
argument_list|()
expr_stmt|;
name|routerContext
operator|=
name|cluster
operator|.
name|getRandomRouter
argument_list|()
expr_stmt|;
name|router
operator|=
name|routerContext
operator|.
name|getRouter
argument_list|()
expr_stmt|;
name|stateStore
operator|=
name|router
operator|.
name|getStateStore
argument_list|()
expr_stmt|;
name|Configuration
name|routerConf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|InetSocketAddress
name|routerSocket
init|=
name|router
operator|.
name|getAdminServerAddress
argument_list|()
decl_stmt|;
name|routerConf
operator|.
name|setSocketAddr
argument_list|(
name|RBFConfigKeys
operator|.
name|DFS_ROUTER_ADMIN_ADDRESS_KEY
argument_list|,
name|routerSocket
argument_list|)
expr_stmt|;
name|admin
operator|=
operator|new
name|RouterAdmin
argument_list|(
name|routerConf
argument_list|)
expr_stmt|;
name|client
operator|=
name|routerContext
operator|.
name|getAdminClient
argument_list|()
expr_stmt|;
comment|// Add two fake name services to testing disabling them
name|ActiveNamenodeResolver
name|membership
init|=
name|router
operator|.
name|getNamenodeResolver
argument_list|()
decl_stmt|;
name|membership
operator|.
name|registerNamenode
argument_list|(
name|createNamenodeReport
argument_list|(
literal|"ns0"
argument_list|,
literal|"nn1"
argument_list|,
name|HAServiceState
operator|.
name|ACTIVE
argument_list|)
argument_list|)
expr_stmt|;
name|membership
operator|.
name|registerNamenode
argument_list|(
name|createNamenodeReport
argument_list|(
literal|"ns1"
argument_list|,
literal|"nn1"
argument_list|,
name|HAServiceState
operator|.
name|ACTIVE
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|refreshCaches
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Mock the quota module since no real namenode is started up.
name|Quota
name|quota
init|=
name|Mockito
operator|.
name|spy
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|createRpcServer
argument_list|()
operator|.
name|getQuotaModule
argument_list|()
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|quota
argument_list|)
operator|.
name|setQuota
argument_list|(
name|Mockito
operator|.
name|anyString
argument_list|()
argument_list|,
name|Mockito
operator|.
name|anyLong
argument_list|()
argument_list|,
name|Mockito
operator|.
name|anyLong
argument_list|()
argument_list|,
name|Mockito
operator|.
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getRpcServer
argument_list|()
argument_list|,
literal|"quotaCall"
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|RouterRpcServer
name|spyRpcServer
init|=
name|Mockito
operator|.
name|spy
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|createRpcServer
argument_list|()
argument_list|)
decl_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
argument_list|,
literal|"rpcServer"
argument_list|,
name|spyRpcServer
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
literal|null
argument_list|)
operator|.
name|when
argument_list|(
name|spyRpcServer
argument_list|)
operator|.
name|getFileInfo
argument_list|(
name|Mockito
operator|.
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|tearDownCluster ()
specifier|public
specifier|static
name|void
name|tearDownCluster
parameter_list|()
block|{
name|cluster
operator|.
name|stopRouter
argument_list|(
name|routerContext
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|cluster
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
comment|// set back system out/err
name|System
operator|.
name|setOut
argument_list|(
name|OLD_OUT
argument_list|)
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
name|OLD_ERR
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddMountTable ()
specifier|public
name|void
name|testAddMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0,ns1"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-addmounttable"
decl_stmt|;
name|String
name|dest
init|=
literal|"/addmounttable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RemoteLocation
argument_list|>
name|destinations
init|=
name|mountTable
operator|.
name|getDestinations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|destinations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ns0"
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ns1"
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isFaultTolerant
argument_list|()
argument_list|)
expr_stmt|;
comment|// test mount table update behavior
name|dest
operator|=
name|dest
operator|+
literal|"-new"
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-readonly"
block|,
literal|"-faulttolerant"
block|,
literal|"-order"
block|,
literal|"HASH_ALL"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RemoteLocation
name|loc2
init|=
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ns0"
argument_list|,
name|loc2
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|loc2
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|RemoteLocation
name|loc3
init|=
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ns1"
argument_list|,
name|loc3
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|loc3
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mountTable
operator|.
name|isFaultTolerant
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddMountTableNotNormalized ()
specifier|public
name|void
name|testAddMountTableNotNormalized
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-addmounttable-notnormalized"
decl_stmt|;
name|String
name|srcWithSlash
init|=
name|src
operator|+
literal|"/"
decl_stmt|;
name|String
name|dest
init|=
literal|"/addmounttable-notnormalized"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|srcWithSlash
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RemoteLocation
argument_list|>
name|destinations
init|=
name|mountTable
operator|.
name|getDestinations
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|destinations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isFaultTolerant
argument_list|()
argument_list|)
expr_stmt|;
comment|// test mount table update behavior
name|dest
operator|=
name|dest
operator|+
literal|"-new"
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|srcWithSlash
block|,
name|nsId
block|,
name|dest
block|,
literal|"-readonly"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddOrderMountTable ()
specifier|public
name|void
name|testAddOrderMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|testAddOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|HASH
argument_list|)
expr_stmt|;
name|testAddOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|LOCAL
argument_list|)
expr_stmt|;
name|testAddOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|RANDOM
argument_list|)
expr_stmt|;
name|testAddOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|HASH_ALL
argument_list|)
expr_stmt|;
name|testAddOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|SPACE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddOrderErrorMsg ()
specifier|public
name|void
name|testAddOrderErrorMsg
parameter_list|()
throws|throws
name|Exception
block|{
name|DestinationOrder
name|order
init|=
name|DestinationOrder
operator|.
name|HASH
decl_stmt|;
specifier|final
name|String
name|mnt
init|=
literal|"/newAdd1"
operator|+
name|order
decl_stmt|;
specifier|final
name|String
name|nsId
init|=
literal|"ns0,ns1"
decl_stmt|;
specifier|final
name|String
name|dest
init|=
literal|"/changAdd"
decl_stmt|;
name|String
index|[]
name|argv1
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|mnt
block|,
name|nsId
block|,
name|dest
block|,
literal|"-order"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add the order with wrong command
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|mnt
block|,
name|nsId
block|,
name|dest
block|,
literal|"-orde"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddOrderMountTable (DestinationOrder order)
specifier|private
name|void
name|testAddOrderMountTable
parameter_list|(
name|DestinationOrder
name|order
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|String
name|mnt
init|=
literal|"/"
operator|+
name|order
decl_stmt|;
specifier|final
name|String
name|nsId
init|=
literal|"ns0,ns1"
decl_stmt|;
specifier|final
name|String
name|dest
init|=
literal|"/"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|mnt
block|,
name|nsId
block|,
name|dest
block|,
literal|"-order"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check the state in the State Store
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MountTableManager
name|mountTable
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
decl_stmt|;
name|GetMountTableEntriesRequest
name|request
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|mnt
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|response
init|=
name|mountTable
operator|.
name|getMountTableEntries
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|MountTable
argument_list|>
name|entries
init|=
name|response
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entries
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entries
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDestinations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|order
argument_list|,
name|response
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDestOrder
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListMountTable ()
specifier|public
name|void
name|testListMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-lsmounttable"
decl_stmt|;
name|String
name|srcWithSlash
init|=
name|src
operator|+
literal|"/"
decl_stmt|;
name|String
name|dest
init|=
literal|"/lsmounttable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
comment|// re-set system out for testing
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|,
name|src
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|src
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test with not-normalized src input
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|,
name|srcWithSlash
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|src
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test with wrong number of arguments
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|,
name|srcWithSlash
block|,
literal|"check"
block|,
literal|"check2"
block|}
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Too many arguments, Max=1 argument allowed"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Test ls command without input path, it will list
comment|// mount table under root path.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|src
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|outStr
init|=
name|out
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|// verify if all the mount table are listed
for|for
control|(
name|MountTable
name|entry
range|:
name|getResponse
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|outStr
operator|.
name|contains
argument_list|(
name|entry
operator|.
name|getSourcePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testRemoveMountTable ()
specifier|public
name|void
name|testRemoveMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-rmmounttable"
decl_stmt|;
name|String
name|dest
init|=
literal|"/rmmounttable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|,
name|src
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// remove an invalid mount table
name|String
name|invalidPath
init|=
literal|"/invalid"
decl_stmt|;
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|,
name|invalidPath
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Cannot remove mount point "
operator|+
name|invalidPath
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiArgsRemoveMountTable ()
specifier|public
name|void
name|testMultiArgsRemoveMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src1
init|=
literal|"/test-rmmounttable1"
decl_stmt|;
name|String
name|src2
init|=
literal|"/test-rmmounttable2"
decl_stmt|;
name|String
name|dest1
init|=
literal|"/rmmounttable1"
decl_stmt|;
name|String
name|dest2
init|=
literal|"/rmmounttable2"
decl_stmt|;
comment|// Adding mount table entries
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src1
block|,
name|nsId
block|,
name|dest1
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src2
block|,
name|nsId
block|,
name|dest2
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Ensure mount table entries added successfully
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src1
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|getRequest
operator|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src2
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src1
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src2
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
comment|// Remove multiple mount table entries
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|,
name|src1
block|,
name|src2
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Verify successful deletion of mount table entries
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveMountTableNotNormalized ()
specifier|public
name|void
name|testRemoveMountTableNotNormalized
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-rmmounttable-notnormalized"
decl_stmt|;
name|String
name|srcWithSlash
init|=
name|src
operator|+
literal|"/"
decl_stmt|;
name|String
name|dest
init|=
literal|"/rmmounttable-notnormalized"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|,
name|srcWithSlash
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMountTableDefaultACL ()
specifier|public
name|void
name|testMountTableDefaultACL
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/testpath0"
block|,
literal|"ns0"
block|,
literal|"/testdir0"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
literal|"/testpath0"
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|String
name|group
init|=
name|ugi
operator|.
name|getGroups
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|ugi
operator|.
name|getShortUserName
argument_list|()
else|:
name|ugi
operator|.
name|getPrimaryGroupName
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|,
name|mountTable
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|group
argument_list|,
name|mountTable
operator|.
name|getGroupName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|0755
argument_list|,
name|mountTable
operator|.
name|getMode
argument_list|()
operator|.
name|toShort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMountTablePermissions ()
specifier|public
name|void
name|testMountTablePermissions
parameter_list|()
throws|throws
name|Exception
block|{
comment|// re-set system out for testing
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
comment|// use superuser to add new mount table with only read permission
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/testpath2-1"
block|,
literal|"ns0"
block|,
literal|"/testdir2-1"
block|,
literal|"-owner"
block|,
name|TEST_USER
block|,
literal|"-group"
block|,
name|TEST_USER
block|,
literal|"-mode"
block|,
literal|"0455"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|superUser
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
decl_stmt|;
comment|// use normal user as current user to test
name|UserGroupInformation
name|remoteUser
init|=
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|TEST_USER
argument_list|)
decl_stmt|;
name|UserGroupInformation
operator|.
name|setLoginUser
argument_list|(
name|remoteUser
argument_list|)
expr_stmt|;
comment|// verify read permission by executing other commands
name|verifyExecutionResult
argument_list|(
literal|"/testpath2-1"
argument_list|,
literal|true
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// add new mount table with only write permission
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/testpath2-2"
block|,
literal|"ns0"
block|,
literal|"/testdir2-2"
block|,
literal|"-owner"
block|,
name|TEST_USER
block|,
literal|"-group"
block|,
name|TEST_USER
block|,
literal|"-mode"
block|,
literal|"0255"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|verifyExecutionResult
argument_list|(
literal|"/testpath2-2"
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// set mount table entry with read and write permission
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/testpath2-3"
block|,
literal|"ns0"
block|,
literal|"/testdir2-3"
block|,
literal|"-owner"
block|,
name|TEST_USER
block|,
literal|"-group"
block|,
name|TEST_USER
block|,
literal|"-mode"
block|,
literal|"0755"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|verifyExecutionResult
argument_list|(
literal|"/testpath2-3"
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// set back login user
name|remoteUser
operator|=
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|superUser
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setLoginUser
argument_list|(
name|remoteUser
argument_list|)
expr_stmt|;
block|}
comment|/**    * Verify router admin commands execution result.    *    * @param mount    *          target mount table    * @param canRead    *          whether can list mount tables under specified mount    * @param addCommandCode    *          expected return code of add command executed for specified mount    * @param rmCommandCode    *          expected return code of rm command executed for specified mount    * @throws Exception    */
DECL|method|verifyExecutionResult (String mount, boolean canRead, int addCommandCode, int rmCommandCode)
specifier|private
name|void
name|verifyExecutionResult
parameter_list|(
name|String
name|mount
parameter_list|,
name|boolean
name|canRead
parameter_list|,
name|int
name|addCommandCode
parameter_list|,
name|int
name|rmCommandCode
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|argv
init|=
literal|null
decl_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// execute ls command
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|,
name|mount
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|canRead
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|mount
argument_list|)
argument_list|)
expr_stmt|;
comment|// execute add/update command
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|mount
block|,
literal|"ns0"
block|,
name|mount
operator|+
literal|"newdir"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
name|addCommandCode
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// execute remove command
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|,
name|mount
block|}
expr_stmt|;
name|assertEquals
argument_list|(
name|rmCommandCode
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidArgumentMessage ()
specifier|public
name|void
name|testInvalidArgumentMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/testSource"
decl_stmt|;
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|}
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong message: "
operator|+
name|out
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-add<source><nameservice1, nameservice2, ...><destination> "
operator|+
literal|"[-readonly] [-faulttolerant] "
operator|+
literal|"[-order HASH|LOCAL|RANDOM|HASH_ALL|SPACE] "
operator|+
literal|"-owner<owner> -group<group> -mode<mode>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong message: "
operator|+
name|out
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-update<source> [<nameservice1, nameservice2, ...><destination>] "
operator|+
literal|"[-readonly true|false] [-faulttolerant true|false] "
operator|+
literal|"[-order HASH|LOCAL|RANDOM|HASH_ALL|SPACE] "
operator|+
literal|"-owner<owner> -group<group> -mode<mode>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-rm"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-rm<source>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-setQuota<path> -nsQuota<nsQuota> -ssQuota "
operator|+
literal|"<quota in bytes or quota size string>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-clrQuota"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-clrQuota<path>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-safemode enter | leave | get]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
name|nsId
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-nameservice enable | disable<nameservice>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-getDestination"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-getDestination<path>]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-refreshRouterArgs"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"\t[-refreshRouterArgs "
operator|+
literal|"<host:ipc_port><key> [arg1..argn]]"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-Random"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
literal|"Usage: hdfs dfsrouteradmin :\n"
operator|+
literal|"\t[-add<source><nameservice1, nameservice2, ...><destination> "
operator|+
literal|"[-readonly] [-faulttolerant] "
operator|+
literal|"[-order HASH|LOCAL|RANDOM|HASH_ALL|SPACE] "
operator|+
literal|"-owner<owner> -group<group> -mode<mode>]\n"
operator|+
literal|"\t[-update<source> [<nameservice1, nameservice2, ...> "
operator|+
literal|"<destination>] [-readonly true|false]"
operator|+
literal|" [-faulttolerant true|false] "
operator|+
literal|"[-order HASH|LOCAL|RANDOM|HASH_ALL|SPACE] "
operator|+
literal|"-owner<owner> -group<group> -mode<mode>]\n"
operator|+
literal|"\t[-rm<source>]\n"
operator|+
literal|"\t[-ls<path>]\n"
operator|+
literal|"\t[-getDestination<path>]\n"
operator|+
literal|"\t[-setQuota<path> -nsQuota<nsQuota> -ssQuota "
operator|+
literal|"<quota in bytes or quota size string>]\n"
operator|+
literal|"\t[-clrQuota<path>]\n"
operator|+
literal|"\t[-safemode enter | leave | get]\n"
operator|+
literal|"\t[-nameservice enable | disable<nameservice>]\n"
operator|+
literal|"\t[-getDisabledNameservices]\n"
operator|+
literal|"\t[-refresh]\n"
operator|+
literal|"\t[-refreshRouterArgs<host:ipc_port><key> [arg1..argn]]"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong message: "
operator|+
name|out
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAndClearQuota ()
specifier|public
name|void
name|testSetAndClearQuota
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-QuotaMounttable"
decl_stmt|;
name|String
name|src1
init|=
literal|"/test-QuotaMounttable1"
decl_stmt|;
name|String
name|dest
init|=
literal|"/QuotaMounttable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RouterQuotaUsage
name|quotaUsage
init|=
name|mountTable
operator|.
name|getQuota
argument_list|()
decl_stmt|;
comment|// verify the default quota set
name|assertEquals
argument_list|(
name|RouterQuotaUsage
operator|.
name|QUOTA_USAGE_COUNT_DEFAULT
argument_list|,
name|quotaUsage
operator|.
name|getFileAndDirectoryCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RouterQuotaUsage
operator|.
name|QUOTA_USAGE_COUNT_DEFAULT
argument_list|,
name|quotaUsage
operator|.
name|getSpaceConsumed
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|nsQuota
init|=
literal|50
decl_stmt|;
name|long
name|ssQuota
init|=
literal|100
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src
block|,
literal|"-nsQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|nsQuota
argument_list|)
block|,
literal|"-ssQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|ssQuota
argument_list|)
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|quotaUsage
operator|=
name|mountTable
operator|.
name|getQuota
argument_list|()
expr_stmt|;
comment|// verify if the quota is set
name|assertEquals
argument_list|(
name|nsQuota
argument_list|,
name|quotaUsage
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ssQuota
argument_list|,
name|quotaUsage
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// use quota string for setting ss quota
name|String
name|newSsQuota
init|=
literal|"2m"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src
block|,
literal|"-ssQuota"
block|,
name|newSsQuota
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|quotaUsage
operator|=
name|mountTable
operator|.
name|getQuota
argument_list|()
expr_stmt|;
comment|// verify if ns quota keeps quondam value
name|assertEquals
argument_list|(
name|nsQuota
argument_list|,
name|quotaUsage
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify if ss quota is correctly set
name|assertEquals
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|,
name|quotaUsage
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// test clrQuota command
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-clrQuota"
block|,
name|src
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|quotaUsage
operator|=
name|mountTable
operator|.
name|getQuota
argument_list|()
expr_stmt|;
comment|// verify if quota unset successfully
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify multi args ClrQuota
name|String
name|dest1
init|=
literal|"/QuotaMounttable1"
decl_stmt|;
comment|// Add mount table entries.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src1
block|,
name|nsId
block|,
name|dest1
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// SetQuota for the added entries
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src
block|,
literal|"-nsQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|nsQuota
argument_list|)
block|,
literal|"-ssQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|ssQuota
argument_list|)
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src1
block|,
literal|"-nsQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|nsQuota
argument_list|)
block|,
literal|"-ssQuota"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|ssQuota
argument_list|)
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Clear quota for the added entries
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-clrQuota"
block|,
name|src
block|,
name|src1
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Verify clear quota for the entries
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|quotaUsage
operator|=
name|mountTable
operator|.
name|getQuota
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getQuota
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HdfsConstants
operator|.
name|QUOTA_RESET
argument_list|,
name|quotaUsage
operator|.
name|getSpaceQuota
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// verify wrong arguments
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setQuota"
block|,
name|src
block|,
literal|"check"
block|,
literal|"check2"
block|}
expr_stmt|;
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Invalid argument : check"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testManageSafeMode ()
specifier|public
name|void
name|testManageSafeMode
parameter_list|()
throws|throws
name|Exception
block|{
comment|// ensure the Router become RUNNING state
name|waitState
argument_list|(
name|RouterServiceState
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"enter"
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify state
name|assertEquals
argument_list|(
name|RouterServiceState
operator|.
name|SAFEMODE
argument_list|,
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getRouterState
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"get"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"leave"
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify state
name|assertEquals
argument_list|(
name|RouterServiceState
operator|.
name|RUNNING
argument_list|,
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getRouterState
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"get"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"get"
block|,
literal|"-random"
block|,
literal|"check"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"safemode: Too many arguments, Max=1 argument allowed only"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"check"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"safemode: Invalid argument: check"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSafeModeStatus ()
specifier|public
name|void
name|testSafeModeStatus
parameter_list|()
throws|throws
name|Exception
block|{
comment|// ensure the Router become RUNNING state
name|waitState
argument_list|(
name|RouterServiceState
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"enter"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|RBFMetrics
name|metrics
init|=
name|router
operator|.
name|getMetrics
argument_list|()
decl_stmt|;
name|String
name|jsonString
init|=
name|metrics
operator|.
name|getRouterStatus
argument_list|()
decl_stmt|;
name|String
name|result
init|=
name|router
operator|.
name|getNamenodeMetrics
argument_list|()
operator|.
name|getSafemode
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Wrong safe mode message: "
operator|+
name|result
argument_list|,
name|result
operator|.
name|startsWith
argument_list|(
literal|"Safe mode is ON."
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify state using RBFMetrics
name|assertEquals
argument_list|(
name|RouterServiceState
operator|.
name|SAFEMODE
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonString
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"leave"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|jsonString
operator|=
name|metrics
operator|.
name|getRouterStatus
argument_list|()
expr_stmt|;
name|result
operator|=
name|router
operator|.
name|getNamenodeMetrics
argument_list|()
operator|.
name|getSafemode
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong safe mode message: "
operator|+
name|result
argument_list|,
literal|""
argument_list|,
name|result
argument_list|)
expr_stmt|;
comment|// verify state
name|assertEquals
argument_list|(
name|RouterServiceState
operator|.
name|RUNNING
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonString
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getSafemodeService
argument_list|()
operator|.
name|isInSafeMode
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-safemode"
block|,
literal|"get"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateInvalidEntry ()
specifier|public
name|void
name|testCreateInvalidEntry
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"test-createInvalidEntry"
block|,
literal|"ns0"
block|,
literal|"/createInvalidEntry"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/test-createInvalidEntry"
block|,
literal|"ns0"
block|,
literal|"createInvalidEntry"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|null
block|,
literal|"ns0"
block|,
literal|"/createInvalidEntry"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/test-createInvalidEntry"
block|,
literal|"ns0"
block|,
literal|null
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|""
block|,
literal|"ns0"
block|,
literal|"/createInvalidEntry"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/test-createInvalidEntry"
block|,
literal|null
block|,
literal|"/createInvalidEntry"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/test-createInvalidEntry"
block|,
literal|""
block|,
literal|"/createInvalidEntry"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNameserviceManager ()
specifier|public
name|void
name|testNameserviceManager
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Disable a name service and check if it's disabled
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
literal|"disable"
block|,
literal|"ns0"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|DisabledNameserviceStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-getDisabledNameservices"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ns0 should be reported: "
operator|+
name|out
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"ns0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Enable a name service and check if it's there
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
literal|"enable"
block|,
literal|"ns0"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|DisabledNameserviceStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-getDisabledNameservices"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"ns0 should not be reported: "
operator|+
name|out
argument_list|,
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"ns0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Wrong commands
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
literal|"enable"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|msg
init|=
literal|"Not enough parameters specificed for cmd -nameservice"
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Got error: "
operator|+
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
literal|"wrong"
block|,
literal|"ns0"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Got error: "
operator|+
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"nameservice: Unknown command: wrong"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-nameservice"
block|,
literal|"enable"
block|,
literal|"ns0"
block|,
literal|"check"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Too many arguments, Max=2 arguments allowed"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"-getDisabledNameservices"
block|,
literal|"check"
block|}
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"No arguments allowed"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRefreshMountTableCache ()
specifier|public
name|void
name|testRefreshMountTableCache
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|src
init|=
literal|"/refreshMount"
decl_stmt|;
comment|// create mount table entry
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
literal|"refreshNS0"
block|,
literal|"/refreshDest"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
comment|// refresh the mount table entry cache
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-refresh"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"Successfully updated mount table cache"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now ls should return that mount table entry
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-ls"
block|,
name|src
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|src
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Wait for the Router transforming to expected state.    * @param expectedState Expected Router state.    * @throws Exception    */
DECL|method|waitState (final RouterServiceState expectedState)
specifier|private
name|void
name|waitState
parameter_list|(
specifier|final
name|RouterServiceState
name|expectedState
parameter_list|)
throws|throws
name|Exception
block|{
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
name|expectedState
operator|==
name|routerContext
operator|.
name|getRouter
argument_list|()
operator|.
name|getRouterState
argument_list|()
return|;
block|}
block|}
argument_list|,
literal|1000
argument_list|,
literal|30000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateNonExistingMountTable ()
specifier|public
name|void
name|testUpdateNonExistingMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-updateNonExistingMounttable"
decl_stmt|;
name|String
name|dest
init|=
literal|"/updateNonExistingMounttable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
comment|// Update shall fail if the mount entry doesn't exist.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"update: /test-updateNonExistingMounttable doesn't exist."
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateDestinationForExistingMountTable ()
specifier|public
name|void
name|testUpdateDestinationForExistingMountTable
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Add a mount table firstly
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-updateDestinationForExistingMountTable"
decl_stmt|;
name|String
name|dest
init|=
literal|"/UpdateDestinationForExistingMountTable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the destination
name|String
name|newNsId
init|=
literal|"ns1"
decl_stmt|;
name|String
name|newDest
init|=
literal|"/newDestination"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|newNsId
block|,
name|newDest
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the destination updated successfully
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newNsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newDest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateDestinationForExistingMountTableNotNormalized ()
specifier|public
name|void
name|testUpdateDestinationForExistingMountTableNotNormalized
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Add a mount table firstly
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-updateDestinationForExistingMountTableNotNormalized"
decl_stmt|;
name|String
name|srcWithSlash
init|=
name|src
operator|+
literal|"/"
decl_stmt|;
name|String
name|dest
init|=
literal|"/UpdateDestinationForExistingMountTableNotNormalized"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the destination
name|String
name|newNsId
init|=
literal|"ns1"
decl_stmt|;
name|String
name|newDest
init|=
literal|"/newDestination"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|srcWithSlash
block|,
name|newNsId
block|,
name|newDest
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the destination updated successfully
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newNsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newDest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateChangeAttributes ()
specifier|public
name|void
name|testUpdateChangeAttributes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Add a mount table firstly
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/mount"
decl_stmt|;
name|String
name|dest
init|=
literal|"/dest"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-readonly"
block|,
literal|"-order"
block|,
literal|"HASH_ALL"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the destination
name|String
name|newNsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|newDest
init|=
literal|"/newDestination"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|newNsId
block|,
name|newDest
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the destination updated successfully and other attributes are
comment|// preserved.
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newNsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newDest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HASH_ALL"
argument_list|,
name|mountTable
operator|.
name|getDestOrder
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the attribute.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
literal|"-readonly"
block|,
literal|"false"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the attribute updated successfully and destination and other
comment|// attributes are preserved.
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newNsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|newDest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HASH_ALL"
argument_list|,
name|mountTable
operator|.
name|getDestOrder
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateErrorCase ()
specifier|public
name|void
name|testUpdateErrorCase
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Add a mount table firstly
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/mount"
decl_stmt|;
name|String
name|dest
init|=
literal|"/dest"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-readonly"
block|,
literal|"-order"
block|,
literal|"HASH_ALL"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Check update for non-existent mount entry.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"/noMount"
block|,
literal|"-readonly"
block|,
literal|"false"
block|}
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"update: /noMount doesn't exist."
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Check update if non true/false value is passed for readonly.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
literal|"-readonly"
block|,
literal|"check"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"update: "
operator|+
literal|"Invalid argument: check. Please specify either true or false."
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Check update with missing value is passed for faulttolerant.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
literal|"ns1"
block|,
literal|"/tmp"
block|,
literal|"-faulttolerant"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"update: Unable to parse arguments:"
operator|+
literal|" no value provided for -faulttolerant"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Check update with invalid order.
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
literal|"ns1"
block|,
literal|"/tmp"
block|,
literal|"-order"
block|,
literal|"Invalid"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"update: Unable to parse arguments: Cannot parse order: Invalid"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateReadonlyUserGroupPermissionMountable ()
specifier|public
name|void
name|testUpdateReadonlyUserGroupPermissionMountable
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Add a mount table
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-updateReadonlyUserGroupPermissionMountTable"
decl_stmt|;
name|String
name|dest
init|=
literal|"/UpdateReadonlyUserGroupPermissionMountTable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the readonly, owner, group and permission
name|String
name|testOwner
init|=
literal|"test_owner"
decl_stmt|;
name|String
name|testGroup
init|=
literal|"test_group"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-readonly"
block|,
literal|"true"
block|,
literal|"-owner"
block|,
name|testOwner
block|,
literal|"-group"
block|,
name|testGroup
block|,
literal|"-mode"
block|,
literal|"0455"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the destination updated successfully
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mountTable
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testOwner
argument_list|,
name|mountTable
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testGroup
argument_list|,
name|mountTable
operator|.
name|getGroupName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|0455
argument_list|,
name|mountTable
operator|.
name|getMode
argument_list|()
operator|.
name|toShort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateOrderMountTable ()
specifier|public
name|void
name|testUpdateOrderMountTable
parameter_list|()
throws|throws
name|Exception
block|{
name|testUpdateOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|HASH
argument_list|)
expr_stmt|;
name|testUpdateOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|LOCAL
argument_list|)
expr_stmt|;
name|testUpdateOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|RANDOM
argument_list|)
expr_stmt|;
name|testUpdateOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|HASH_ALL
argument_list|)
expr_stmt|;
name|testUpdateOrderMountTable
argument_list|(
name|DestinationOrder
operator|.
name|SPACE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOrderErrorMsg ()
specifier|public
name|void
name|testOrderErrorMsg
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|DestinationOrder
name|order
init|=
name|DestinationOrder
operator|.
name|HASH
decl_stmt|;
name|String
name|src
init|=
literal|"/testod"
operator|+
name|order
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|dest
init|=
literal|"/testUpd"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DestinationOrder
operator|.
name|HASH
argument_list|,
name|mountTable
operator|.
name|getDestOrder
argument_list|()
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-order"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
comment|// Update the order with wrong command
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
operator|+
literal|"a"
block|,
name|nsId
block|,
name|dest
operator|+
literal|"a"
block|,
literal|"-orde"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
comment|// Update without order argument
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testUpdateOrderMountTable (DestinationOrder order)
specifier|private
name|void
name|testUpdateOrderMountTable
parameter_list|(
name|DestinationOrder
name|order
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Add a mount table
name|String
name|nsId
init|=
literal|"ns0"
decl_stmt|;
name|String
name|src
init|=
literal|"/test-updateOrderMountTable-"
operator|+
name|order
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|dest
init|=
literal|"/UpdateOrderMountTable"
decl_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|GetMountTableEntriesRequest
name|getRequest
init|=
name|GetMountTableEntriesRequest
operator|.
name|newInstance
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|GetMountTableEntriesResponse
name|getResponse
init|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
comment|// Ensure mount table added successfully
name|MountTable
name|mountTable
init|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DestinationOrder
operator|.
name|HASH
argument_list|,
name|mountTable
operator|.
name|getDestOrder
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the order
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
name|src
block|,
name|nsId
block|,
name|dest
block|,
literal|"-order"
block|,
name|order
operator|.
name|toString
argument_list|()
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getResponse
operator|=
name|client
operator|.
name|getMountTableManager
argument_list|()
operator|.
name|getMountTableEntries
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
comment|// Ensure the destination updated successfully
name|mountTable
operator|=
name|getResponse
operator|.
name|getEntries
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|src
argument_list|,
name|mountTable
operator|.
name|getSourcePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nsId
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNameserviceId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dest
argument_list|,
name|mountTable
operator|.
name|getDestinations
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDest
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|order
argument_list|,
name|mountTable
operator|.
name|getDestOrder
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDestination ()
specifier|public
name|void
name|testGetDestination
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test the basic destination feature
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-getDestination"
block|,
literal|"/file.txt"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Destination: ns0"
operator|+
name|System
operator|.
name|lineSeparator
argument_list|()
argument_list|,
name|out
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add a HASH_ALL entry to check the destination changing
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/testGetDest"
block|,
literal|"ns0,ns1"
block|,
literal|"/testGetDestination"
block|,
literal|"-order"
block|,
name|DestinationOrder
operator|.
name|HASH_ALL
operator|.
name|toString
argument_list|()
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|stateStore
operator|.
name|loadCache
argument_list|(
name|MountTableStoreImpl
operator|.
name|class
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MountTableResolver
name|resolver
init|=
operator|(
name|MountTableResolver
operator|)
name|router
operator|.
name|getSubclusterResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|loadCache
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Files should be distributed across ns0 and ns1
name|Map
argument_list|<
name|String
argument_list|,
name|AtomicInteger
argument_list|>
name|counter
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|Pattern
name|p
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"Destination: (.*)"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|out
operator|.
name|reset
argument_list|()
expr_stmt|;
name|String
name|filename
init|=
literal|"file"
operator|+
name|i
operator|+
literal|".txt"
decl_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-getDestination"
block|,
literal|"/testGetDest/"
operator|+
name|filename
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|outLine
init|=
name|out
operator|.
name|toString
argument_list|()
decl_stmt|;
name|Matcher
name|m
init|=
name|p
operator|.
name|matcher
argument_list|(
name|outLine
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|find
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|nsId
init|=
name|m
operator|.
name|group
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|counter
operator|.
name|containsKey
argument_list|(
name|nsId
argument_list|)
condition|)
block|{
name|counter
operator|.
name|get
argument_list|(
name|nsId
argument_list|)
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|counter
operator|.
name|put
argument_list|(
name|nsId
argument_list|,
operator|new
name|AtomicInteger
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
literal|"Wrong counter size: "
operator|+
name|counter
argument_list|,
literal|2
argument_list|,
name|counter
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|counter
operator|+
literal|" should contain ns0"
argument_list|,
name|counter
operator|.
name|containsKey
argument_list|(
literal|"ns0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|counter
operator|+
literal|" should contain ns1"
argument_list|,
name|counter
operator|.
name|containsKey
argument_list|(
literal|"ns1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Bad cases
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-getDestination"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-getDestination /file1.txt /file2.txt"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testErrorFaultTolerant ()
specifier|public
name|void
name|testErrorFaultTolerant
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|argv
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/mntft"
block|,
literal|"ns01"
block|,
literal|"/tmp"
block|,
literal|"-faulttolerant"
block|}
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Invalid entry, fault tolerance requires multiple destinations"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|)
argument_list|)
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/mntft"
block|,
literal|"ns0,ns1"
block|,
literal|"/tmp"
block|,
literal|"-order"
block|,
literal|"HASH"
block|,
literal|"-faulttolerant"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|err
operator|.
name|toString
argument_list|()
argument_list|,
name|err
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Invalid entry, fault tolerance only supported for ALL order"
argument_list|)
argument_list|)
expr_stmt|;
name|err
operator|.
name|reset
argument_list|()
expr_stmt|;
name|argv
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"/mntft"
block|,
literal|"ns0,ns1"
block|,
literal|"/tmp"
block|,
literal|"-order"
block|,
literal|"HASH_ALL"
block|,
literal|"-faulttolerant"
block|}
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ToolRunner
operator|.
name|run
argument_list|(
name|admin
argument_list|,
name|argv
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

