begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|MockResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|ActiveNamenodeResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|FileSubclusterResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|StateStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
operator|.
name|RBFConfigKeys
operator|.
name|FEDERATION_FILE_RESOLVER_CLIENT_CLASS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
operator|.
name|RBFConfigKeys
operator|.
name|FEDERATION_NAMENODE_RESOLVER_CLIENT_CLASS
import|;
end_import

begin_comment
comment|/**  * Tests Router federation utility methods.  */
end_comment

begin_class
DECL|class|TestFederationUtil
specifier|public
class|class
name|TestFederationUtil
block|{
annotation|@
name|Test
DECL|method|testInstanceCreation ()
specifier|public
name|void
name|testInstanceCreation
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|HdfsConfiguration
argument_list|()
decl_stmt|;
comment|// Use mock resolver classes
name|conf
operator|.
name|setClass
argument_list|(
name|FEDERATION_NAMENODE_RESOLVER_CLIENT_CLASS
argument_list|,
name|MockResolver
operator|.
name|class
argument_list|,
name|ActiveNamenodeResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|FEDERATION_FILE_RESOLVER_CLIENT_CLASS
argument_list|,
name|MockResolver
operator|.
name|class
argument_list|,
name|FileSubclusterResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|Router
name|router
init|=
operator|new
name|Router
argument_list|()
decl_stmt|;
name|StateStoreService
name|stateStore
init|=
operator|new
name|StateStoreService
argument_list|()
decl_stmt|;
name|ActiveNamenodeResolver
name|namenodeResolverWithContext
init|=
name|FederationUtil
operator|.
name|newActiveNamenodeResolver
argument_list|(
name|conf
argument_list|,
name|stateStore
argument_list|)
decl_stmt|;
name|ActiveNamenodeResolver
name|namenodeResolverWithoutContext
init|=
name|FederationUtil
operator|.
name|newActiveNamenodeResolver
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|FileSubclusterResolver
name|subclusterResolverWithContext
init|=
name|FederationUtil
operator|.
name|newFileSubclusterResolver
argument_list|(
name|conf
argument_list|,
name|router
argument_list|)
decl_stmt|;
name|FileSubclusterResolver
name|subclusterResolverWithoutContext
init|=
name|FederationUtil
operator|.
name|newFileSubclusterResolver
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Check all instances are created successfully.
name|assertNotNull
argument_list|(
name|namenodeResolverWithContext
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|namenodeResolverWithoutContext
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|subclusterResolverWithContext
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|subclusterResolverWithoutContext
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

