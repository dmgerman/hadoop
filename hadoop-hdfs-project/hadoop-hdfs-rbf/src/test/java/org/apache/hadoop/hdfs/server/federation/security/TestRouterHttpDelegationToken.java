begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed under the Apache License, Version 2.0 (the "License");  *   you may not use this file except in compliance with the License.  *   You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *   Unless required by applicable law or agreed to in writing, software  *   distributed under the License is distributed on an "AS IS" BASIS,  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *   See the License for the specific language governing permissions and  *   limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.federation.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|security
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
operator|.
name|HADOOP_HTTP_AUTHENTICATION_TYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|SWebHdfs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|router
operator|.
name|SecurityConfUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|RouterConfigBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
operator|.
name|RBFConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|federation
operator|.
name|router
operator|.
name|Router
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|WebHdfsTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|GetOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|HttpOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|Param
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|PutOpParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|RenewerParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|TokenArgumentParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|web
operator|.
name|resources
operator|.
name|UserParam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|FilterContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AuthenticationFilterInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|PseudoAuthenticationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|LambdaTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test Delegation Tokens from the Router HTTP interface.  */
end_comment

begin_class
DECL|class|TestRouterHttpDelegationToken
specifier|public
class|class
name|TestRouterHttpDelegationToken
block|{
DECL|field|FILTER_INITIALIZER_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|FILTER_INITIALIZER_PROPERTY
init|=
literal|"hadoop.http.filter.initializers"
decl_stmt|;
DECL|field|router
specifier|private
name|Router
name|router
decl_stmt|;
DECL|field|fs
specifier|private
name|WebHdfsFileSystem
name|fs
decl_stmt|;
comment|/**    * The initializer of custom filter.    */
DECL|class|NoAuthFilterInitializer
specifier|public
specifier|static
specifier|final
class|class
name|NoAuthFilterInitializer
extends|extends
name|AuthenticationFilterInitializer
block|{
DECL|field|PREFIX
specifier|static
specifier|final
name|String
name|PREFIX
init|=
literal|"hadoop.http.authentication."
decl_stmt|;
annotation|@
name|Override
DECL|method|initFilter (FilterContainer container, Configuration conf)
specifier|public
name|void
name|initFilter
parameter_list|(
name|FilterContainer
name|container
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filterConfig
init|=
name|getFilterConfigMap
argument_list|(
name|conf
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
name|container
operator|.
name|addFilter
argument_list|(
literal|"authentication"
argument_list|,
name|NoAuthFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|filterConfig
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Custom filter to be able to test auth methods and let the other ones go.    */
DECL|class|NoAuthFilter
specifier|public
specifier|static
specifier|final
class|class
name|NoAuthFilter
extends|extends
name|AuthenticationFilter
block|{
annotation|@
name|Override
DECL|method|getConfiguration (String configPrefix, FilterConfig filterConfig)
specifier|protected
name|Properties
name|getConfiguration
parameter_list|(
name|String
name|configPrefix
parameter_list|,
name|FilterConfig
name|filterConfig
parameter_list|)
throws|throws
name|ServletException
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Enumeration
argument_list|<
name|?
argument_list|>
name|names
init|=
name|filterConfig
operator|.
name|getInitParameterNames
argument_list|()
decl_stmt|;
while|while
condition|(
name|names
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|name
init|=
operator|(
name|String
operator|)
name|names
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
name|configPrefix
argument_list|)
condition|)
block|{
name|String
name|value
init|=
name|filterConfig
operator|.
name|getInitParameter
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|name
operator|.
name|substring
argument_list|(
name|configPrefix
operator|.
name|length
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
name|props
operator|.
name|put
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
name|PseudoAuthenticationHandler
operator|.
name|ANONYMOUS_ALLOWED
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
name|props
return|;
block|}
block|}
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|SecurityConfUtil
operator|.
name|initSecurity
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RBFConfigKeys
operator|.
name|DFS_ROUTER_HTTP_ADDRESS_KEY
argument_list|,
literal|"0.0.0.0:0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RBFConfigKeys
operator|.
name|DFS_ROUTER_HTTPS_ADDRESS_KEY
argument_list|,
literal|"0.0.0.0:0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RBFConfigKeys
operator|.
name|DFS_ROUTER_RPC_ADDRESS_KEY
argument_list|,
literal|"0.0.0.0:0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FILTER_INITIALIZER_PROPERTY
argument_list|,
name|NoAuthFilterInitializer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HADOOP_HTTP_AUTHENTICATION_TYPE
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
comment|// Start routers with an RPC and HTTP service only
name|Configuration
name|routerConf
init|=
operator|new
name|RouterConfigBuilder
argument_list|()
operator|.
name|rpc
argument_list|()
operator|.
name|http
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|routerConf
argument_list|)
expr_stmt|;
name|router
operator|=
operator|new
name|Router
argument_list|()
expr_stmt|;
name|router
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|router
operator|.
name|start
argument_list|()
expr_stmt|;
name|InetSocketAddress
name|webAddress
init|=
name|router
operator|.
name|getHttpServerAddress
argument_list|()
decl_stmt|;
name|URI
name|webURI
init|=
operator|new
name|URI
argument_list|(
name|SWebHdfs
operator|.
name|SCHEME
argument_list|,
literal|null
argument_list|,
name|webAddress
operator|.
name|getHostName
argument_list|()
argument_list|,
name|webAddress
operator|.
name|getPort
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|fs
operator|=
operator|(
name|WebHdfsFileSystem
operator|)
name|FileSystem
operator|.
name|get
argument_list|(
name|webURI
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|router
operator|!=
literal|null
condition|)
block|{
name|router
operator|.
name|stop
argument_list|()
expr_stmt|;
name|router
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetDelegationToken ()
specifier|public
name|void
name|testGetDelegationToken
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|renewer
init|=
literal|"renewer0"
decl_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|token
init|=
name|getDelegationToken
argument_list|(
name|fs
argument_list|,
name|renewer
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|DelegationTokenIdentifier
name|tokenId
init|=
name|getTokenIdentifier
argument_list|(
name|token
operator|.
name|getIdentifier
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"router"
argument_list|,
name|tokenId
operator|.
name|getOwner
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|renewer
argument_list|,
name|tokenId
operator|.
name|getRenewer
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|tokenId
operator|.
name|getRealUser
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SWEBHDFS delegation"
argument_list|,
name|token
operator|.
name|getKind
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|token
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRenewDelegationToken ()
specifier|public
name|void
name|testRenewDelegationToken
parameter_list|()
throws|throws
name|Exception
block|{
name|Token
argument_list|<
name|?
argument_list|>
name|token
init|=
name|getDelegationToken
argument_list|(
name|fs
argument_list|,
literal|"router"
argument_list|)
decl_stmt|;
name|DelegationTokenIdentifier
name|tokenId
init|=
name|getTokenIdentifier
argument_list|(
name|token
operator|.
name|getIdentifier
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|t
init|=
name|renewDelegationToken
argument_list|(
name|fs
argument_list|,
name|token
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|t
operator|+
literal|" should not be larger than "
operator|+
name|tokenId
operator|.
name|getMaxDate
argument_list|()
argument_list|,
name|t
operator|<=
name|tokenId
operator|.
name|getMaxDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCancelDelegationToken ()
specifier|public
name|void
name|testCancelDelegationToken
parameter_list|()
throws|throws
name|Exception
block|{
name|Token
argument_list|<
name|?
argument_list|>
name|token
init|=
name|getDelegationToken
argument_list|(
name|fs
argument_list|,
literal|"router"
argument_list|)
decl_stmt|;
name|cancelDelegationToken
argument_list|(
name|fs
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|LambdaTestUtils
operator|.
name|intercept
argument_list|(
name|IOException
operator|.
name|class
argument_list|,
literal|"Server returned HTTP response code: 403 "
argument_list|,
parameter_list|()
lambda|->
name|renewDelegationToken
argument_list|(
name|fs
argument_list|,
name|token
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getDelegationToken ( WebHdfsFileSystem webHdfs, String renewer)
specifier|private
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|getDelegationToken
parameter_list|(
name|WebHdfsFileSystem
name|webHdfs
parameter_list|,
name|String
name|renewer
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|json
init|=
name|sendHttpRequest
argument_list|(
name|webHdfs
argument_list|,
name|GetOpParam
operator|.
name|Op
operator|.
name|GETDELEGATIONTOKEN
argument_list|,
operator|new
name|RenewerParam
argument_list|(
name|renewer
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|WebHdfsTestUtil
operator|.
name|convertJsonToDelegationToken
argument_list|(
name|json
argument_list|)
return|;
block|}
DECL|method|renewDelegationToken (WebHdfsFileSystem webHdfs, Token<?> token)
specifier|private
name|long
name|renewDelegationToken
parameter_list|(
name|WebHdfsFileSystem
name|webHdfs
parameter_list|,
name|Token
argument_list|<
name|?
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|json
init|=
name|sendHttpRequest
argument_list|(
name|webHdfs
argument_list|,
name|PutOpParam
operator|.
name|Op
operator|.
name|RENEWDELEGATIONTOKEN
argument_list|,
operator|new
name|TokenArgumentParam
argument_list|(
name|token
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
operator|(
name|Number
operator|)
name|json
operator|.
name|get
argument_list|(
literal|"long"
argument_list|)
operator|)
operator|.
name|longValue
argument_list|()
return|;
block|}
DECL|method|cancelDelegationToken (WebHdfsFileSystem webHdfs, Token<?> token)
specifier|private
name|void
name|cancelDelegationToken
parameter_list|(
name|WebHdfsFileSystem
name|webHdfs
parameter_list|,
name|Token
argument_list|<
name|?
argument_list|>
name|token
parameter_list|)
throws|throws
name|IOException
block|{
name|sendHttpRequest
argument_list|(
name|webHdfs
argument_list|,
name|PutOpParam
operator|.
name|Op
operator|.
name|CANCELDELEGATIONTOKEN
argument_list|,
operator|new
name|TokenArgumentParam
argument_list|(
name|token
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|sendHttpRequest (WebHdfsFileSystem webHdfs, final HttpOpParam.Op op, final Param<?, ?>... parameters)
specifier|private
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|sendHttpRequest
parameter_list|(
name|WebHdfsFileSystem
name|webHdfs
parameter_list|,
specifier|final
name|HttpOpParam
operator|.
name|Op
name|op
parameter_list|,
specifier|final
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
modifier|...
name|parameters
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|user
init|=
name|SecurityConfUtil
operator|.
name|getRouterUserName
argument_list|()
decl_stmt|;
comment|// process parameters, add user.name
name|List
argument_list|<
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|pList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|pList
operator|.
name|add
argument_list|(
operator|new
name|UserParam
argument_list|(
name|user
argument_list|)
argument_list|)
expr_stmt|;
name|pList
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|parameters
argument_list|)
argument_list|)
expr_stmt|;
comment|// build request url
specifier|final
name|URL
name|url
init|=
name|WebHdfsTestUtil
operator|.
name|toUrl
argument_list|(
name|webHdfs
argument_list|,
name|op
argument_list|,
literal|null
argument_list|,
name|pList
operator|.
name|toArray
argument_list|(
operator|new
name|Param
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
index|[
name|pList
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
decl_stmt|;
comment|// open connection and send request
name|HttpURLConnection
name|conn
init|=
name|WebHdfsTestUtil
operator|.
name|openConnection
argument_list|(
name|url
argument_list|,
name|webHdfs
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|conn
operator|.
name|setRequestMethod
argument_list|(
name|op
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|WebHdfsTestUtil
operator|.
name|sendRequest
argument_list|(
name|conn
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|json
init|=
name|WebHdfsTestUtil
operator|.
name|getAndParseResponse
argument_list|(
name|conn
argument_list|)
decl_stmt|;
name|conn
operator|.
name|disconnect
argument_list|()
expr_stmt|;
return|return
name|json
return|;
block|}
DECL|method|getTokenIdentifier (byte[] id)
specifier|private
name|DelegationTokenIdentifier
name|getTokenIdentifier
parameter_list|(
name|byte
index|[]
name|id
parameter_list|)
throws|throws
name|IOException
block|{
name|DelegationTokenIdentifier
name|identifier
init|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
decl_stmt|;
name|ByteArrayInputStream
name|bais
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|DataInputStream
name|dais
init|=
operator|new
name|DataInputStream
argument_list|(
name|bais
argument_list|)
decl_stmt|;
name|identifier
operator|.
name|readFields
argument_list|(
name|dais
argument_list|)
expr_stmt|;
return|return
name|identifier
return|;
block|}
block|}
end_class

end_unit

