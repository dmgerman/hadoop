begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.server.namenode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|UnresolvedLinkException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|blockmanagement
operator|.
name|BlockCollection
import|;
end_import

begin_class
DECL|class|NameNodeRaidTestUtil
specifier|public
class|class
name|NameNodeRaidTestUtil
block|{
DECL|method|getBlockCollections (final FSNamesystem namesystem, final String... files)
specifier|public
specifier|static
name|BlockCollection
index|[]
name|getBlockCollections
parameter_list|(
specifier|final
name|FSNamesystem
name|namesystem
parameter_list|,
specifier|final
name|String
modifier|...
name|files
parameter_list|)
throws|throws
name|UnresolvedLinkException
block|{
specifier|final
name|BlockCollection
index|[]
name|inodes
init|=
operator|new
name|BlockCollection
index|[
name|files
operator|.
name|length
index|]
decl_stmt|;
specifier|final
name|FSDirectory
name|dir
init|=
name|namesystem
operator|.
name|dir
decl_stmt|;
name|dir
operator|.
name|readLock
argument_list|()
expr_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|inodes
index|[
name|i
index|]
operator|=
operator|(
name|BlockCollection
operator|)
name|dir
operator|.
name|rootDir
operator|.
name|getNode
argument_list|(
name|files
index|[
name|i
index|]
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|inodes
return|;
block|}
finally|finally
block|{
name|dir
operator|.
name|readUnlock
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

