begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.registry.cli
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|AbstractRegistryTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|operations
operator|.
name|TestRegistryOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TestRegistryCli
specifier|public
class|class
name|TestRegistryCli
extends|extends
name|AbstractRegistryTest
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestRegistryOperations
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|sysOutStream
specifier|private
name|ByteArrayOutputStream
name|sysOutStream
decl_stmt|;
DECL|field|sysOut
specifier|private
name|PrintStream
name|sysOut
decl_stmt|;
DECL|field|sysErrStream
specifier|private
name|ByteArrayOutputStream
name|sysErrStream
decl_stmt|;
DECL|field|sysErr
specifier|private
name|PrintStream
name|sysErr
decl_stmt|;
DECL|field|cli
specifier|private
name|RegistryCli
name|cli
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|sysOutStream
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|sysOut
operator|=
operator|new
name|PrintStream
argument_list|(
name|sysOutStream
argument_list|)
expr_stmt|;
name|sysErrStream
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|sysErr
operator|=
operator|new
name|PrintStream
argument_list|(
name|sysErrStream
argument_list|)
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
name|sysOut
argument_list|)
expr_stmt|;
name|cli
operator|=
operator|new
name|RegistryCli
argument_list|(
name|operations
argument_list|,
name|createRegistryConfiguration
argument_list|()
argument_list|,
name|sysOut
argument_list|,
name|sysErr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|cli
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|assertResult (RegistryCli cli, int code, String...args)
specifier|private
name|void
name|assertResult
parameter_list|(
name|RegistryCli
name|cli
parameter_list|,
name|int
name|code
parameter_list|,
name|String
modifier|...
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|result
init|=
name|cli
operator|.
name|run
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|code
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadCommands ()
specifier|public
name|void
name|testBadCommands
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
operator|new
name|String
index|[]
block|{ }
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidNumArgs ()
specifier|public
name|void
name|testInvalidNumArgs
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|,
literal|"/path"
argument_list|,
literal|"/extraPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/path"
argument_list|,
literal|"/extraPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"mknode"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"mknode"
argument_list|,
literal|"/path"
argument_list|,
literal|"/extraPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"rm"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"rm"
argument_list|,
literal|"/path"
argument_list|,
literal|"/extraPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadArgType ()
specifier|public
name|void
name|testBadArgType
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"fooPort"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadPath ()
specifier|public
name|void
name|testBadPath
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"mknode"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"mknode"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"rm"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"rm"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"NonSlashPath"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"//"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotExistingPaths ()
specifier|public
name|void
name|testNotExistingPaths
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|,
literal|"/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"ls"
argument_list|,
literal|"/NonExistingDir/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/NonExistingDir/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/NonExistingDir/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/NonExistingDir/nonexisting_path"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/NonExistingDir/nonexisting_path"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidCommands ()
specifier|public
name|void
name|testValidCommands
parameter_list|()
throws|throws
name|Exception
block|{
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/foo"
argument_list|)
expr_stmt|;
comment|//Test Sub Directories Binds
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"mknode"
argument_list|,
literal|"/subdir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir/foo"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/subdir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/subdir"
argument_list|)
expr_stmt|;
comment|//Test Bind that the dir itself
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"mknode"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-inet"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"-p"
argument_list|,
literal|"378"
argument_list|,
literal|"-h"
argument_list|,
literal|"host"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"mknode"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-webui"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"mknode"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"bind"
argument_list|,
literal|"-rest"
argument_list|,
literal|"uriString"
argument_list|,
literal|"-api"
argument_list|,
literal|"Api"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
operator|-
literal|1
argument_list|,
literal|"resolve"
argument_list|,
literal|"/dir"
argument_list|)
expr_stmt|;
name|assertResult
argument_list|(
name|cli
argument_list|,
literal|0
argument_list|,
literal|"rm"
argument_list|,
literal|"/Nonexitent"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

