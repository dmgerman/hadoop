begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.registry.client.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|ServiceOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|server
operator|.
name|services
operator|.
name|MicroZookeeperService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Simple tests to look at the micro ZK service itself  */
end_comment

begin_class
DECL|class|TestMicroZookeeperService
specifier|public
class|class
name|TestMicroZookeeperService
extends|extends
name|Assert
block|{
DECL|field|zookeeper
specifier|private
name|MicroZookeeperService
name|zookeeper
decl_stmt|;
annotation|@
name|Rule
DECL|field|testTimeout
specifier|public
specifier|final
name|Timeout
name|testTimeout
init|=
operator|new
name|Timeout
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
annotation|@
name|Rule
DECL|field|methodName
specifier|public
name|TestName
name|methodName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|After
DECL|method|destroyZKServer ()
specifier|public
name|void
name|destroyZKServer
parameter_list|()
throws|throws
name|IOException
block|{
name|ServiceOperations
operator|.
name|stop
argument_list|(
name|zookeeper
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTempDirSupport ()
specifier|public
name|void
name|testTempDirSupport
parameter_list|()
throws|throws
name|Throwable
block|{
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|zookeeper
operator|=
operator|new
name|MicroZookeeperService
argument_list|(
literal|"t1"
argument_list|)
expr_stmt|;
name|zookeeper
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|zookeeper
operator|.
name|start
argument_list|()
expr_stmt|;
name|zookeeper
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

