begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.registry.server.dns
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|server
operator|.
name|dns
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Name
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xbill
operator|.
name|DNS
operator|.
name|Record
import|;
end_import

begin_class
DECL|class|LookupTask
specifier|public
class|class
name|LookupTask
implements|implements
name|Callable
argument_list|<
name|Record
index|[]
argument_list|>
block|{
DECL|field|name
specifier|private
name|Name
name|name
decl_stmt|;
DECL|field|type
specifier|private
name|int
name|type
decl_stmt|;
DECL|method|LookupTask (Name name, int type)
specifier|public
name|LookupTask
parameter_list|(
name|Name
name|name
parameter_list|,
name|int
name|type
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|call ()
specifier|public
name|Record
index|[]
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|Lookup
argument_list|(
name|name
argument_list|,
name|type
argument_list|)
operator|.
name|run
argument_list|()
return|;
block|}
block|}
end_class

end_unit

