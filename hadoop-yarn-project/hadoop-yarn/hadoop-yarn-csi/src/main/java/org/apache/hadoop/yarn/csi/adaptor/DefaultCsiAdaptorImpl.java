begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.csi.adaptor
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|adaptor
package|;
end_package

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|CsiAdaptorPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetPluginInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetPluginInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodePublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodePublishVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeUnpublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeUnpublishVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ValidateVolumeCapabilitiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ValidateVolumeCapabilitiesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|client
operator|.
name|CsiClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|client
operator|.
name|CsiClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|translator
operator|.
name|ProtoTranslatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|csi
operator|.
name|CsiConfigUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * The default implementation of csi-driver-adaptor service.  */
end_comment

begin_class
DECL|class|DefaultCsiAdaptorImpl
specifier|public
class|class
name|DefaultCsiAdaptorImpl
implements|implements
name|CsiAdaptorPlugin
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DefaultCsiAdaptorImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|driverName
specifier|private
name|String
name|driverName
decl_stmt|;
DECL|field|csiClient
specifier|private
name|CsiClient
name|csiClient
decl_stmt|;
DECL|method|DefaultCsiAdaptorImpl ()
specifier|public
name|DefaultCsiAdaptorImpl
parameter_list|()
block|{
comment|// use default constructor for reflection
block|}
annotation|@
name|Override
DECL|method|init (String driverName, Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|String
name|driverName
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|YarnException
block|{
comment|// if the driver end point is invalid, following code will fail.
name|String
name|driverEndpoint
init|=
name|CsiConfigUtils
operator|.
name|getCsiDriverEndpoint
argument_list|(
name|driverName
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"This csi-adaptor is configured to contact with"
operator|+
literal|" the csi-driver {} via gRPC endpoint: {}"
argument_list|,
name|driverName
argument_list|,
name|driverEndpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|csiClient
operator|=
operator|new
name|CsiClientImpl
argument_list|(
name|driverEndpoint
argument_list|)
expr_stmt|;
name|this
operator|.
name|driverName
operator|=
name|driverName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDriverName ()
specifier|public
name|String
name|getDriverName
parameter_list|()
block|{
return|return
name|driverName
return|;
block|}
annotation|@
name|Override
DECL|method|getPluginInfo ( GetPluginInfoRequest request)
specifier|public
name|GetPluginInfoResponse
name|getPluginInfo
parameter_list|(
name|GetPluginInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Csi
operator|.
name|GetPluginInfoResponse
name|response
init|=
name|csiClient
operator|.
name|getPluginInfo
argument_list|()
decl_stmt|;
return|return
name|ProtoTranslatorFactory
operator|.
name|getTranslator
argument_list|(
name|GetPluginInfoResponse
operator|.
name|class
argument_list|,
name|Csi
operator|.
name|GetPluginInfoResponse
operator|.
name|class
argument_list|)
operator|.
name|convertFrom
argument_list|(
name|response
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|validateVolumeCapacity ( ValidateVolumeCapabilitiesRequest request)
specifier|public
name|ValidateVolumeCapabilitiesResponse
name|validateVolumeCapacity
parameter_list|(
name|ValidateVolumeCapabilitiesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Csi
operator|.
name|ValidateVolumeCapabilitiesRequest
name|req
init|=
name|ProtoTranslatorFactory
operator|.
name|getTranslator
argument_list|(
name|ValidateVolumeCapabilitiesRequest
operator|.
name|class
argument_list|,
name|Csi
operator|.
name|ValidateVolumeCapabilitiesRequest
operator|.
name|class
argument_list|)
operator|.
name|convertTo
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Csi
operator|.
name|ValidateVolumeCapabilitiesResponse
name|response
init|=
name|csiClient
operator|.
name|validateVolumeCapabilities
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|ProtoTranslatorFactory
operator|.
name|getTranslator
argument_list|(
name|ValidateVolumeCapabilitiesResponse
operator|.
name|class
argument_list|,
name|Csi
operator|.
name|ValidateVolumeCapabilitiesResponse
operator|.
name|class
argument_list|)
operator|.
name|convertFrom
argument_list|(
name|response
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|nodePublishVolume ( NodePublishVolumeRequest request)
specifier|public
name|NodePublishVolumeResponse
name|nodePublishVolume
parameter_list|(
name|NodePublishVolumeRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received nodePublishVolume call, request: {}"
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|Csi
operator|.
name|NodePublishVolumeRequest
name|req
init|=
name|ProtoTranslatorFactory
operator|.
name|getTranslator
argument_list|(
name|NodePublishVolumeRequest
operator|.
name|class
argument_list|,
name|Csi
operator|.
name|NodePublishVolumeRequest
operator|.
name|class
argument_list|)
operator|.
name|convertTo
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Translate to CSI proto message: {}"
argument_list|,
name|req
argument_list|)
expr_stmt|;
name|csiClient
operator|.
name|nodePublishVolume
argument_list|(
name|req
argument_list|)
expr_stmt|;
return|return
name|NodePublishVolumeResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|nodeUnpublishVolume ( NodeUnpublishVolumeRequest request)
specifier|public
name|NodeUnpublishVolumeResponse
name|nodeUnpublishVolume
parameter_list|(
name|NodeUnpublishVolumeRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received nodeUnpublishVolume call, request: {}"
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
name|req
init|=
name|ProtoTranslatorFactory
operator|.
name|getTranslator
argument_list|(
name|NodeUnpublishVolumeRequest
operator|.
name|class
argument_list|,
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
operator|.
name|class
argument_list|)
operator|.
name|convertTo
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Translate to CSI proto message: {}"
argument_list|,
name|req
argument_list|)
expr_stmt|;
name|csiClient
operator|.
name|nodeUnpublishVolume
argument_list|(
name|req
argument_list|)
expr_stmt|;
return|return
name|NodeUnpublishVolumeResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
block|}
end_class

end_unit

