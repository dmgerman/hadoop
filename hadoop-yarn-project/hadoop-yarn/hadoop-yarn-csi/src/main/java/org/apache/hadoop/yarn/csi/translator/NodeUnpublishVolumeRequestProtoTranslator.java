begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.csi.translator
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|translator
package|;
end_package

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeUnpublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_comment
comment|/**  * This class helps to transform a YARN side NodeUnpublishVolumeRequest  * to corresponding CSI protocol message.  * @param<A> YARN NodeUnpublishVolumeRequest  * @param<B> CSI NodeUnpublishVolumeRequest  */
end_comment

begin_class
DECL|class|NodeUnpublishVolumeRequestProtoTranslator
specifier|public
class|class
name|NodeUnpublishVolumeRequestProtoTranslator
parameter_list|<
name|A
parameter_list|,
name|B
parameter_list|>
implements|implements
name|ProtoTranslator
argument_list|<
name|NodeUnpublishVolumeRequest
argument_list|,
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
argument_list|>
block|{
annotation|@
name|Override
DECL|method|convertTo ( NodeUnpublishVolumeRequest messageA)
specifier|public
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
name|convertTo
parameter_list|(
name|NodeUnpublishVolumeRequest
name|messageA
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeId
argument_list|(
name|messageA
operator|.
name|getVolumeId
argument_list|()
argument_list|)
operator|.
name|setTargetPath
argument_list|(
name|messageA
operator|.
name|getTargetPath
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|convertFrom ( Csi.NodeUnpublishVolumeRequest messageB)
specifier|public
name|NodeUnpublishVolumeRequest
name|convertFrom
parameter_list|(
name|Csi
operator|.
name|NodeUnpublishVolumeRequest
name|messageB
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|NodeUnpublishVolumeRequest
operator|.
name|newInstance
argument_list|(
name|messageB
operator|.
name|getVolumeId
argument_list|()
argument_list|,
name|messageB
operator|.
name|getTargetPath
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

