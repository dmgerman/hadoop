begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.csi.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|client
package|;
end_package

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
import|;
end_import

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
operator|.
name|GetPluginInfoRequest
import|;
end_import

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
operator|.
name|GetPluginInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|utils
operator|.
name|GrpcHelper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|SocketAddress
import|;
end_import

begin_comment
comment|/**  * A CSI client implementation that communicates with a CSI driver via  * unix domain socket. It leverages gRPC blocking stubs to synchronize  * the call with CSI driver. CSI spec is designed as a set of synchronized  * APIs, in order to make the call idempotent for failure recovery,  * so the client does the same.  */
end_comment

begin_class
DECL|class|CsiClientImpl
specifier|public
class|class
name|CsiClientImpl
implements|implements
name|CsiClient
block|{
DECL|field|address
specifier|private
specifier|final
name|SocketAddress
name|address
decl_stmt|;
DECL|method|CsiClientImpl (String address)
specifier|public
name|CsiClientImpl
parameter_list|(
name|String
name|address
parameter_list|)
block|{
name|this
operator|.
name|address
operator|=
name|GrpcHelper
operator|.
name|getSocketAddress
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getPluginInfo ()
specifier|public
name|GetPluginInfoResponse
name|getPluginInfo
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|CsiGrpcClient
name|client
init|=
name|CsiGrpcClient
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDomainSocketAddress
argument_list|(
name|address
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
name|GetPluginInfoRequest
name|request
init|=
name|GetPluginInfoRequest
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
return|return
name|client
operator|.
name|createIdentityBlockingStub
argument_list|()
operator|.
name|getPluginInfo
argument_list|(
name|request
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|validateVolumeCapabilities ( Csi.ValidateVolumeCapabilitiesRequest request)
specifier|public
name|Csi
operator|.
name|ValidateVolumeCapabilitiesResponse
name|validateVolumeCapabilities
parameter_list|(
name|Csi
operator|.
name|ValidateVolumeCapabilitiesRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|CsiGrpcClient
name|client
init|=
name|CsiGrpcClient
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDomainSocketAddress
argument_list|(
name|address
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
return|return
name|client
operator|.
name|createControllerBlockingStub
argument_list|()
operator|.
name|validateVolumeCapabilities
argument_list|(
name|request
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

