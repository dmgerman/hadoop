begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.csi.translator
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|translator
package|;
end_package

begin_import
import|import
name|csi
operator|.
name|v0
operator|.
name|Csi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodePublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ValidateVolumeCapabilitiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_comment
comment|/**  * This class helps to transform a YARN side NodePublishVolumeRequest  * to corresponding CSI protocol message.  * @param<A> YARN NodePublishVolumeRequest  * @param<B> CSI NodePublishVolumeRequest  */
end_comment

begin_class
DECL|class|NodePublishVolumeRequestProtoTranslator
specifier|public
class|class
name|NodePublishVolumeRequestProtoTranslator
parameter_list|<
name|A
parameter_list|,
name|B
parameter_list|>
implements|implements
name|ProtoTranslator
argument_list|<
name|NodePublishVolumeRequest
argument_list|,
name|Csi
operator|.
name|NodePublishVolumeRequest
argument_list|>
block|{
annotation|@
name|Override
DECL|method|convertTo ( NodePublishVolumeRequest messageA)
specifier|public
name|Csi
operator|.
name|NodePublishVolumeRequest
name|convertTo
parameter_list|(
name|NodePublishVolumeRequest
name|messageA
parameter_list|)
throws|throws
name|YarnException
block|{
name|Csi
operator|.
name|NodePublishVolumeRequest
operator|.
name|Builder
name|builder
init|=
name|Csi
operator|.
name|NodePublishVolumeRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|ValidateVolumeCapabilitiesRequest
operator|.
name|VolumeCapability
name|cap
init|=
name|messageA
operator|.
name|getVolumeCapability
argument_list|()
decl_stmt|;
name|Csi
operator|.
name|VolumeCapability
name|csiVolumeCap
init|=
name|Csi
operator|.
name|VolumeCapability
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAccessMode
argument_list|(
name|Csi
operator|.
name|VolumeCapability
operator|.
name|AccessMode
operator|.
name|newBuilder
argument_list|()
operator|.
name|setModeValue
argument_list|(
name|cap
operator|.
name|getAccessMode
argument_list|()
operator|.
name|ordinal
argument_list|()
argument_list|)
argument_list|)
comment|// access mode
comment|// TODO support block
operator|.
name|setMount
argument_list|(
name|Csi
operator|.
name|VolumeCapability
operator|.
name|MountVolume
operator|.
name|newBuilder
argument_list|()
comment|// TODO support fsType
operator|.
name|setFsType
argument_list|(
literal|"xfs"
argument_list|)
comment|// fs type
operator|.
name|addAllMountFlags
argument_list|(
name|cap
operator|.
name|getMountFlags
argument_list|()
argument_list|)
argument_list|)
comment|// mount flags
operator|.
name|build
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeCapability
argument_list|(
name|csiVolumeCap
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setVolumeId
argument_list|(
name|messageA
operator|.
name|getVolumeId
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setTargetPath
argument_list|(
name|messageA
operator|.
name|getTargetPath
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setReadonly
argument_list|(
name|messageA
operator|.
name|getReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|putAllNodePublishSecrets
argument_list|(
name|messageA
operator|.
name|getSecrets
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|putAllPublishInfo
argument_list|(
name|messageA
operator|.
name|getPublishContext
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setStagingTargetPath
argument_list|(
name|messageA
operator|.
name|getStagingPath
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|convertFrom ( Csi.NodePublishVolumeRequest messageB)
specifier|public
name|NodePublishVolumeRequest
name|convertFrom
parameter_list|(
name|Csi
operator|.
name|NodePublishVolumeRequest
name|messageB
parameter_list|)
throws|throws
name|YarnException
block|{
name|Csi
operator|.
name|VolumeCapability
name|cap0
init|=
name|messageB
operator|.
name|getVolumeCapability
argument_list|()
decl_stmt|;
name|ValidateVolumeCapabilitiesRequest
operator|.
name|VolumeCapability
name|cap
init|=
operator|new
name|ValidateVolumeCapabilitiesRequest
operator|.
name|VolumeCapability
argument_list|(
name|ValidateVolumeCapabilitiesRequest
operator|.
name|AccessMode
operator|.
name|valueOf
argument_list|(
name|cap0
operator|.
name|getAccessMode
argument_list|()
operator|.
name|getMode
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
argument_list|,
name|ValidateVolumeCapabilitiesRequest
operator|.
name|VolumeType
operator|.
name|FILE_SYSTEM
argument_list|,
name|cap0
operator|.
name|getMount
argument_list|()
operator|.
name|getMountFlagsList
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|NodePublishVolumeRequest
operator|.
name|newInstance
argument_list|(
name|messageB
operator|.
name|getVolumeId
argument_list|()
argument_list|,
name|messageB
operator|.
name|getReadonly
argument_list|()
argument_list|,
name|messageB
operator|.
name|getTargetPath
argument_list|()
argument_list|,
name|messageB
operator|.
name|getStagingTargetPath
argument_list|()
argument_list|,
name|cap
argument_list|,
name|messageB
operator|.
name|getPublishInfoMap
argument_list|()
argument_list|,
name|messageB
operator|.
name|getNodePublishSecretsMap
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

