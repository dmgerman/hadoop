begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.csi.adaptor
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|csi
operator|.
name|adaptor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|CsiAdaptorPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetPluginInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetPluginInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodePublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodePublishVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeUnpublishVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeUnpublishVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ValidateVolumeCapabilitiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ValidateVolumeCapabilitiesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * This class is used by {@link TestCsiAdaptorService} for testing.  * It gives some dummy implementation for a adaptor plugin, and used to  * verify the plugin can be properly loaded by NM and execution logic is  * as expected.  *  * This is created as a separated class instead of an inner class, because  * {@link CsiAdaptorServices} is loading classes using conf.getClass(),  * the utility class is unable to resolve inner classes.  */
end_comment

begin_class
DECL|class|MockCsiAdaptor
specifier|public
class|class
name|MockCsiAdaptor
implements|implements
name|CsiAdaptorPlugin
block|{
DECL|field|driverName
specifier|private
name|String
name|driverName
decl_stmt|;
annotation|@
name|Override
DECL|method|init (String driverName, Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|String
name|driverName
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|YarnException
block|{
name|this
operator|.
name|driverName
operator|=
name|driverName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDriverName ()
specifier|public
name|String
name|getDriverName
parameter_list|()
block|{
return|return
name|this
operator|.
name|driverName
return|;
block|}
annotation|@
name|Override
DECL|method|getPluginInfo ( GetPluginInfoRequest request)
specifier|public
name|GetPluginInfoResponse
name|getPluginInfo
parameter_list|(
name|GetPluginInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
name|GetPluginInfoResponse
operator|.
name|newInstance
argument_list|(
name|driverName
argument_list|,
literal|"1.0"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|validateVolumeCapacity ( ValidateVolumeCapabilitiesRequest request)
specifier|public
name|ValidateVolumeCapabilitiesResponse
name|validateVolumeCapacity
parameter_list|(
name|ValidateVolumeCapabilitiesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
name|ValidateVolumeCapabilitiesResponse
operator|.
name|newInstance
argument_list|(
literal|true
argument_list|,
literal|"verified via MockCsiAdaptor"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|nodePublishVolume ( NodePublishVolumeRequest request)
specifier|public
name|NodePublishVolumeResponse
name|nodePublishVolume
parameter_list|(
name|NodePublishVolumeRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|nodeUnpublishVolume ( NodeUnpublishVolumeRequest request)
specifier|public
name|NodeUnpublishVolumeResponse
name|nodeUnpublishVolume
parameter_list|(
name|NodeUnpublishVolumeRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

