begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.gpu
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|gpu
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|DockerCommandPlugin
import|;
end_import

begin_comment
comment|/**  * Factory to create GpuDocker Command Plugin instance  */
end_comment

begin_class
DECL|class|GpuDockerCommandPluginFactory
specifier|public
class|class
name|GpuDockerCommandPluginFactory
block|{
DECL|method|createGpuDockerCommandPlugin ( Configuration conf)
specifier|public
specifier|static
name|DockerCommandPlugin
name|createGpuDockerCommandPlugin
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|YarnException
block|{
name|String
name|impl
init|=
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|NM_GPU_DOCKER_PLUGIN_IMPL
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_NM_GPU_DOCKER_PLUGIN_IMPL
argument_list|)
decl_stmt|;
if|if
condition|(
name|impl
operator|.
name|equals
argument_list|(
name|YarnConfiguration
operator|.
name|NVIDIA_DOCKER_V1
argument_list|)
condition|)
block|{
return|return
operator|new
name|NvidiaDockerV1CommandPlugin
argument_list|(
name|conf
argument_list|)
return|;
block|}
throw|throw
operator|new
name|YarnException
argument_list|(
literal|"Unkown implementation name for Gpu docker plugin, impl="
operator|+
name|impl
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

