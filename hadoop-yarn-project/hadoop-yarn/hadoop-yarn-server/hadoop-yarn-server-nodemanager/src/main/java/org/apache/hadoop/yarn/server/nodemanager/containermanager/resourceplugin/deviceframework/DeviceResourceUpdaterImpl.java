begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.deviceframework
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|deviceframework
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|deviceplugin
operator|.
name|Device
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|deviceplugin
operator|.
name|DevicePlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|NodeResourceUpdaterPlugin
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Hooks into NodeStatusUpdater to update resource.  * */
end_comment

begin_class
DECL|class|DeviceResourceUpdaterImpl
specifier|public
class|class
name|DeviceResourceUpdaterImpl
extends|extends
name|NodeResourceUpdaterPlugin
block|{
DECL|field|LOG
specifier|final
specifier|static
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|DeviceResourceUpdaterImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|resourceName
specifier|private
name|String
name|resourceName
decl_stmt|;
DECL|field|devicePlugin
specifier|private
name|DevicePlugin
name|devicePlugin
decl_stmt|;
DECL|method|DeviceResourceUpdaterImpl (String resourceName, DevicePlugin devicePlugin)
specifier|public
name|DeviceResourceUpdaterImpl
parameter_list|(
name|String
name|resourceName
parameter_list|,
name|DevicePlugin
name|devicePlugin
parameter_list|)
block|{
name|this
operator|.
name|devicePlugin
operator|=
name|devicePlugin
expr_stmt|;
name|this
operator|.
name|resourceName
operator|=
name|resourceName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|updateConfiguredResource (Resource res)
specifier|public
name|void
name|updateConfiguredResource
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|YarnException
block|{
name|LOG
operator|.
name|info
argument_list|(
name|resourceName
operator|+
literal|" plugin update resource "
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Device
argument_list|>
name|devices
init|=
literal|null
decl_stmt|;
try|try
block|{
name|devices
operator|=
name|devicePlugin
operator|.
name|getDevices
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|YarnException
argument_list|(
literal|"Exception thrown from plugin's getDevices"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
literal|null
operator|==
name|devices
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
name|resourceName
operator|+
literal|" plugin failed to discover resource ( null value got)."
argument_list|)
expr_stmt|;
return|return;
block|}
name|res
operator|.
name|setResourceValue
argument_list|(
name|resourceName
argument_list|,
name|devices
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

