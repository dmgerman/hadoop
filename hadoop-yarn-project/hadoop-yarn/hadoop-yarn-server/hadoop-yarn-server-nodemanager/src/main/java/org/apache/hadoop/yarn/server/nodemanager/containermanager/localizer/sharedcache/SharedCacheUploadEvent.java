begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.sharedcache
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|localizer
operator|.
name|sharedcache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|AbstractEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|localizer
operator|.
name|LocalResourceRequest
import|;
end_import

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|SharedCacheUploadEvent
specifier|public
class|class
name|SharedCacheUploadEvent
extends|extends
name|AbstractEvent
argument_list|<
name|SharedCacheUploadEventType
argument_list|>
block|{
DECL|field|resources
specifier|private
specifier|final
name|Map
argument_list|<
name|LocalResourceRequest
argument_list|,
name|Path
argument_list|>
name|resources
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|ContainerLaunchContext
name|context
decl_stmt|;
DECL|field|user
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
DECL|method|SharedCacheUploadEvent (Map<LocalResourceRequest,Path> resources, ContainerLaunchContext context, String user, SharedCacheUploadEventType eventType)
specifier|public
name|SharedCacheUploadEvent
parameter_list|(
name|Map
argument_list|<
name|LocalResourceRequest
argument_list|,
name|Path
argument_list|>
name|resources
parameter_list|,
name|ContainerLaunchContext
name|context
parameter_list|,
name|String
name|user
parameter_list|,
name|SharedCacheUploadEventType
name|eventType
parameter_list|)
block|{
name|super
argument_list|(
name|eventType
argument_list|)
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getResources ()
specifier|public
name|Map
argument_list|<
name|LocalResourceRequest
argument_list|,
name|Path
argument_list|>
name|getResources
parameter_list|()
block|{
return|return
name|resources
return|;
block|}
DECL|method|getContainerLaunchContext ()
specifier|public
name|ContainerLaunchContext
name|getContainerLaunchContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
block|}
end_class

end_unit

