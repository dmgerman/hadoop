begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  *  Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|runtime
operator|.
name|runc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * This class is a Java representation of the OCI Image Manifest Specification.  */
end_comment

begin_class
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|ImageManifest
specifier|public
class|class
name|ImageManifest
block|{
DECL|field|schemaVersion
specifier|final
specifier|private
name|int
name|schemaVersion
decl_stmt|;
DECL|field|mediaType
specifier|final
specifier|private
name|String
name|mediaType
decl_stmt|;
DECL|field|config
specifier|final
specifier|private
name|Blob
name|config
decl_stmt|;
DECL|field|layers
specifier|final
specifier|private
name|ArrayList
argument_list|<
name|Blob
argument_list|>
name|layers
decl_stmt|;
DECL|field|annotations
specifier|final
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|annotations
decl_stmt|;
DECL|method|ImageManifest ()
specifier|public
name|ImageManifest
parameter_list|()
block|{
name|this
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|ImageManifest (int schemaVersion, String mediaType, Blob config, ArrayList<Blob> layers, Map<String, String> annotations)
specifier|public
name|ImageManifest
parameter_list|(
name|int
name|schemaVersion
parameter_list|,
name|String
name|mediaType
parameter_list|,
name|Blob
name|config
parameter_list|,
name|ArrayList
argument_list|<
name|Blob
argument_list|>
name|layers
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|annotations
parameter_list|)
block|{
name|this
operator|.
name|schemaVersion
operator|=
name|schemaVersion
expr_stmt|;
name|this
operator|.
name|mediaType
operator|=
name|mediaType
expr_stmt|;
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
name|this
operator|.
name|layers
operator|=
name|layers
expr_stmt|;
name|this
operator|.
name|annotations
operator|=
name|annotations
expr_stmt|;
block|}
DECL|method|getSchemaVersion ()
specifier|public
name|int
name|getSchemaVersion
parameter_list|()
block|{
return|return
name|schemaVersion
return|;
block|}
DECL|method|getMediaType ()
specifier|public
name|String
name|getMediaType
parameter_list|()
block|{
return|return
name|mediaType
return|;
block|}
DECL|method|getConfig ()
specifier|public
name|Blob
name|getConfig
parameter_list|()
block|{
return|return
name|config
return|;
block|}
DECL|method|getLayers ()
specifier|public
name|ArrayList
argument_list|<
name|Blob
argument_list|>
name|getLayers
parameter_list|()
block|{
return|return
name|layers
return|;
block|}
DECL|method|getAnnotations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAnnotations
parameter_list|()
block|{
return|return
name|annotations
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"schemaVersion: "
operator|+
name|schemaVersion
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"mediaType: "
operator|+
name|mediaType
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|config
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Blob
name|b
range|:
name|layers
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|b
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**    * This class is a Java representation of an OCI Image Blob.    */
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|Blob
specifier|public
specifier|static
class|class
name|Blob
block|{
DECL|field|mediaType
specifier|final
specifier|private
name|String
name|mediaType
decl_stmt|;
DECL|field|digest
specifier|final
specifier|private
name|String
name|digest
decl_stmt|;
DECL|field|size
specifier|final
specifier|private
name|long
name|size
decl_stmt|;
DECL|field|urls
specifier|final
specifier|private
name|ArrayList
argument_list|<
name|String
argument_list|>
name|urls
decl_stmt|;
DECL|field|annotations
specifier|final
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|annotations
decl_stmt|;
DECL|method|Blob ()
specifier|public
name|Blob
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|Blob (String mediaType, String digest, long size, ArrayList<String> urls, Map<String, String> annotations)
specifier|public
name|Blob
parameter_list|(
name|String
name|mediaType
parameter_list|,
name|String
name|digest
parameter_list|,
name|long
name|size
parameter_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
name|urls
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|annotations
parameter_list|)
block|{
name|this
operator|.
name|mediaType
operator|=
name|mediaType
expr_stmt|;
name|this
operator|.
name|digest
operator|=
name|digest
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|urls
operator|=
name|urls
expr_stmt|;
name|this
operator|.
name|annotations
operator|=
name|annotations
expr_stmt|;
block|}
DECL|method|getMediaType ()
specifier|public
name|String
name|getMediaType
parameter_list|()
block|{
return|return
name|mediaType
return|;
block|}
DECL|method|getDigest ()
specifier|public
name|String
name|getDigest
parameter_list|()
block|{
return|return
name|digest
return|;
block|}
DECL|method|getSize ()
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
DECL|method|getUrls ()
specifier|public
name|ArrayList
argument_list|<
name|String
argument_list|>
name|getUrls
parameter_list|()
block|{
return|return
name|urls
return|;
block|}
DECL|method|getAnnotations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAnnotations
parameter_list|()
block|{
return|return
name|annotations
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"mediaType: "
operator|+
name|mediaType
operator|+
literal|"\n"
operator|+
literal|"size: "
operator|+
name|size
operator|+
literal|"\n"
operator|+
literal|"digest: "
operator|+
name|digest
operator|+
literal|"\n"
return|;
block|}
block|}
block|}
end_class

end_unit

