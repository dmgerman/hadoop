begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.com.nec
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|com
operator|.
name|nec
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jna
operator|.
name|Native
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jna
operator|.
name|Pointer
import|;
end_import

begin_class
DECL|class|UdevUtil
class|class
name|UdevUtil
block|{
DECL|field|libUdev
specifier|private
specifier|static
name|LibUdev
name|libUdev
decl_stmt|;
DECL|method|init ()
specifier|public
specifier|synchronized
name|void
name|init
parameter_list|()
block|{
name|LibUdev
operator|.
name|init
argument_list|()
expr_stmt|;
name|libUdev
operator|=
name|LibUdev
operator|.
name|instance
expr_stmt|;
block|}
DECL|method|getSysPath (int deviceNo, char devType)
specifier|public
name|String
name|getSysPath
parameter_list|(
name|int
name|deviceNo
parameter_list|,
name|char
name|devType
parameter_list|)
block|{
name|Pointer
name|udev
init|=
literal|null
decl_stmt|;
name|Pointer
name|device
init|=
literal|null
decl_stmt|;
try|try
block|{
name|udev
operator|=
name|libUdev
operator|.
name|udev_new
argument_list|()
expr_stmt|;
name|device
operator|=
name|libUdev
operator|.
name|udev_device_new_from_devnum
argument_list|(
name|udev
argument_list|,
operator|(
name|byte
operator|)
name|devType
argument_list|,
name|deviceNo
argument_list|)
expr_stmt|;
if|if
condition|(
name|device
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Udev: device not found"
argument_list|)
throw|;
block|}
name|Pointer
name|sysPathPtr
init|=
name|libUdev
operator|.
name|udev_device_get_syspath
argument_list|(
name|device
argument_list|)
decl_stmt|;
if|if
condition|(
name|sysPathPtr
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Udev: syspath not found for device"
argument_list|)
throw|;
block|}
return|return
name|sysPathPtr
operator|.
name|getString
argument_list|(
literal|0
argument_list|)
return|;
block|}
finally|finally
block|{
if|if
condition|(
name|device
operator|!=
literal|null
condition|)
block|{
name|libUdev
operator|.
name|udev_device_unref
argument_list|(
name|device
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|udev
operator|!=
literal|null
condition|)
block|{
name|libUdev
operator|.
name|udev_unref
argument_list|(
name|udev
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"checkstyle:staticvariablename"
block|,
literal|"checkstyle:methodname"
block|,
literal|"checkstyle:parametername"
block|}
argument_list|)
DECL|class|LibUdev
specifier|private
specifier|static
class|class
name|LibUdev
implements|implements
name|LibUdevMapping
block|{
DECL|field|instance
specifier|private
specifier|static
name|LibUdev
name|instance
decl_stmt|;
DECL|method|init ()
specifier|public
specifier|static
name|void
name|init
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|Native
operator|.
name|register
argument_list|(
literal|"udev"
argument_list|)
expr_stmt|;
name|instance
operator|=
operator|new
name|LibUdev
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|udev_new ()
specifier|public
specifier|native
name|Pointer
name|udev_new
parameter_list|()
function_decl|;
DECL|method|udev_unref (Pointer udev)
specifier|public
specifier|native
name|Pointer
name|udev_unref
parameter_list|(
name|Pointer
name|udev
parameter_list|)
function_decl|;
DECL|method|udev_device_new_from_devnum (Pointer udev, byte type, int devnum)
specifier|public
specifier|native
name|Pointer
name|udev_device_new_from_devnum
parameter_list|(
name|Pointer
name|udev
parameter_list|,
name|byte
name|type
parameter_list|,
name|int
name|devnum
parameter_list|)
function_decl|;
DECL|method|udev_device_get_syspath (Pointer udev_device)
specifier|public
specifier|native
name|Pointer
name|udev_device_get_syspath
parameter_list|(
name|Pointer
name|udev_device
parameter_list|)
function_decl|;
DECL|method|udev_device_unref (Pointer udev_device)
specifier|public
specifier|native
name|Pointer
name|udev_device_unref
parameter_list|(
name|Pointer
name|udev_device
parameter_list|)
function_decl|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"checkstyle:staticvariablename"
block|,
literal|"checkstyle:methodname"
block|,
literal|"checkstyle:parametername"
block|}
argument_list|)
DECL|interface|LibUdevMapping
interface|interface
name|LibUdevMapping
block|{
DECL|method|udev_new ()
name|Pointer
name|udev_new
parameter_list|()
function_decl|;
DECL|method|udev_unref (Pointer udev)
name|Pointer
name|udev_unref
parameter_list|(
name|Pointer
name|udev
parameter_list|)
function_decl|;
DECL|method|udev_device_new_from_devnum (Pointer udev, byte type, int devnum)
name|Pointer
name|udev_device_new_from_devnum
parameter_list|(
name|Pointer
name|udev
parameter_list|,
name|byte
name|type
parameter_list|,
name|int
name|devnum
parameter_list|)
function_decl|;
DECL|method|udev_device_get_syspath (Pointer udev_device)
name|Pointer
name|udev_device_get_syspath
parameter_list|(
name|Pointer
name|udev_device
parameter_list|)
function_decl|;
DECL|method|udev_device_unref (Pointer udev_device)
name|Pointer
name|udev_device_unref
parameter_list|(
name|Pointer
name|udev_device
parameter_list|)
function_decl|;
block|}
block|}
end_class

end_unit

