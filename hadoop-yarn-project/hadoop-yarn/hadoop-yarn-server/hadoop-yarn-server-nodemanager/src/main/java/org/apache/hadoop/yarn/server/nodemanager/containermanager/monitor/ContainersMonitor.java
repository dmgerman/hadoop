begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|monitor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceUtilization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|ResourceView
import|;
end_import

begin_interface
DECL|interface|ContainersMonitor
specifier|public
interface|interface
name|ContainersMonitor
extends|extends
name|Service
extends|,
name|EventHandler
argument_list|<
name|ContainersMonitorEvent
argument_list|>
extends|,
name|ResourceView
block|{
DECL|method|getContainersUtilization ()
name|ResourceUtilization
name|getContainersUtilization
parameter_list|()
function_decl|;
DECL|method|getVmemRatio ()
name|float
name|getVmemRatio
parameter_list|()
function_decl|;
DECL|method|subtractNodeResourcesFromResourceUtilization ( ResourceUtilization resourceUtil)
name|void
name|subtractNodeResourcesFromResourceUtilization
parameter_list|(
name|ResourceUtilization
name|resourceUtil
parameter_list|)
function_decl|;
comment|/**    * Utility method to add a {@link Resource} to the    * {@link ResourceUtilization}.    * @param containersMonitor Containers Monitor.    * @param resourceUtil Resource Utilization.    * @param resource Resource.    */
DECL|method|increaseResourceUtilization ( ContainersMonitor containersMonitor, ResourceUtilization resourceUtil, Resource resource)
specifier|static
name|void
name|increaseResourceUtilization
parameter_list|(
name|ContainersMonitor
name|containersMonitor
parameter_list|,
name|ResourceUtilization
name|resourceUtil
parameter_list|,
name|Resource
name|resource
parameter_list|)
block|{
name|float
name|vCores
init|=
operator|(
name|float
operator|)
name|resource
operator|.
name|getVirtualCores
argument_list|()
decl_stmt|;
name|int
name|vmem
init|=
call|(
name|int
call|)
argument_list|(
name|resource
operator|.
name|getMemorySize
argument_list|()
operator|*
name|containersMonitor
operator|.
name|getVmemRatio
argument_list|()
argument_list|)
decl_stmt|;
name|resourceUtil
operator|.
name|addTo
argument_list|(
operator|(
name|int
operator|)
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|,
name|vmem
argument_list|,
name|vCores
argument_list|)
expr_stmt|;
block|}
comment|/**    * Utility method to subtract a {@link Resource} from the    * {@link ResourceUtilization}.    * @param containersMonitor Containers Monitor.    * @param resourceUtil Resource Utilization.    * @param resource Resource.    */
DECL|method|decreaseResourceUtilization ( ContainersMonitor containersMonitor, ResourceUtilization resourceUtil, Resource resource)
specifier|static
name|void
name|decreaseResourceUtilization
parameter_list|(
name|ContainersMonitor
name|containersMonitor
parameter_list|,
name|ResourceUtilization
name|resourceUtil
parameter_list|,
name|Resource
name|resource
parameter_list|)
block|{
name|float
name|vCores
init|=
operator|(
name|float
operator|)
name|resource
operator|.
name|getVirtualCores
argument_list|()
decl_stmt|;
name|int
name|vmem
init|=
call|(
name|int
call|)
argument_list|(
name|resource
operator|.
name|getMemorySize
argument_list|()
operator|*
name|containersMonitor
operator|.
name|getVmemRatio
argument_list|()
argument_list|)
decl_stmt|;
name|resourceUtil
operator|.
name|subtractFrom
argument_list|(
operator|(
name|int
operator|)
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|,
name|vmem
argument_list|,
name|vCores
argument_list|)
expr_stmt|;
block|}
block|}
end_interface

end_unit

