begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_comment
comment|/**  * Stores config related to cgroups.  */
end_comment

begin_class
DECL|class|CGroupsMountConfig
specifier|public
class|class
name|CGroupsMountConfig
block|{
DECL|field|enableMount
specifier|private
specifier|final
name|boolean
name|enableMount
decl_stmt|;
DECL|field|mountPath
specifier|private
specifier|final
name|String
name|mountPath
decl_stmt|;
DECL|method|CGroupsMountConfig (Configuration conf)
specifier|public
name|CGroupsMountConfig
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|enableMount
operator|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|NM_LINUX_CONTAINER_CGROUPS_MOUNT
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|mountPath
operator|=
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|ensureMountPathIsDefined ()
specifier|public
name|boolean
name|ensureMountPathIsDefined
parameter_list|()
throws|throws
name|ResourceHandlerException
block|{
if|if
condition|(
name|mountPath
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResourceHandlerException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Cgroups mount path not specified in %s."
argument_list|,
name|YarnConfiguration
operator|.
name|NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH
argument_list|)
argument_list|)
throw|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|isMountPathDefined ()
specifier|public
name|boolean
name|isMountPathDefined
parameter_list|()
block|{
return|return
name|mountPath
operator|!=
literal|null
return|;
block|}
DECL|method|isMountEnabled ()
specifier|public
name|boolean
name|isMountEnabled
parameter_list|()
block|{
return|return
name|enableMount
return|;
block|}
DECL|method|mountDisabledButMountPathDefined ()
specifier|public
name|boolean
name|mountDisabledButMountPathDefined
parameter_list|()
block|{
return|return
operator|!
name|enableMount
operator|&&
name|mountPath
operator|!=
literal|null
return|;
block|}
DECL|method|mountEnabledAndMountPathDefined ()
specifier|public
name|boolean
name|mountEnabledAndMountPathDefined
parameter_list|()
block|{
return|return
name|enableMount
operator|&&
name|mountPath
operator|!=
literal|null
return|;
block|}
DECL|method|getMountPath ()
specifier|public
name|String
name|getMountPath
parameter_list|()
block|{
return|return
name|mountPath
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CGroupsMountConfig{"
operator|+
literal|"enableMount="
operator|+
name|enableMount
operator|+
literal|", mountPath='"
operator|+
name|mountPath
operator|+
literal|'\''
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

