begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.loghandler.event
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|loghandler
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAccessType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LogAggregationContext
import|;
end_import

begin_class
DECL|class|LogHandlerAppStartedEvent
specifier|public
class|class
name|LogHandlerAppStartedEvent
extends|extends
name|LogHandlerEvent
block|{
DECL|field|applicationId
specifier|private
specifier|final
name|ApplicationId
name|applicationId
decl_stmt|;
DECL|field|user
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
DECL|field|credentials
specifier|private
specifier|final
name|Credentials
name|credentials
decl_stmt|;
DECL|field|appAcls
specifier|private
specifier|final
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
decl_stmt|;
DECL|field|logAggregationContext
specifier|private
specifier|final
name|LogAggregationContext
name|logAggregationContext
decl_stmt|;
DECL|method|LogHandlerAppStartedEvent (ApplicationId appId, String user, Credentials credentials, Map<ApplicationAccessType, String> appAcls)
specifier|public
name|LogHandlerAppStartedEvent
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|String
name|user
parameter_list|,
name|Credentials
name|credentials
parameter_list|,
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
parameter_list|)
block|{
name|this
argument_list|(
name|appId
argument_list|,
name|user
argument_list|,
name|credentials
argument_list|,
name|appAcls
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|LogHandlerAppStartedEvent (ApplicationId appId, String user, Credentials credentials, Map<ApplicationAccessType, String> appAcls, LogAggregationContext logAggregationContext)
specifier|public
name|LogHandlerAppStartedEvent
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|String
name|user
parameter_list|,
name|Credentials
name|credentials
parameter_list|,
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
parameter_list|,
name|LogAggregationContext
name|logAggregationContext
parameter_list|)
block|{
name|super
argument_list|(
name|LogHandlerEventType
operator|.
name|APPLICATION_STARTED
argument_list|)
expr_stmt|;
name|this
operator|.
name|applicationId
operator|=
name|appId
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|credentials
operator|=
name|credentials
expr_stmt|;
name|this
operator|.
name|appAcls
operator|=
name|appAcls
expr_stmt|;
name|this
operator|.
name|logAggregationContext
operator|=
name|logAggregationContext
expr_stmt|;
block|}
DECL|method|getApplicationId ()
specifier|public
name|ApplicationId
name|getApplicationId
parameter_list|()
block|{
return|return
name|this
operator|.
name|applicationId
return|;
block|}
DECL|method|getCredentials ()
specifier|public
name|Credentials
name|getCredentials
parameter_list|()
block|{
return|return
name|this
operator|.
name|credentials
return|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|this
operator|.
name|user
return|;
block|}
DECL|method|getApplicationAcls ()
specifier|public
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|getApplicationAcls
parameter_list|()
block|{
return|return
name|this
operator|.
name|appAcls
return|;
block|}
DECL|method|getLogAggregationContext ()
specifier|public
name|LogAggregationContext
name|getLogAggregationContext
parameter_list|()
block|{
return|return
name|this
operator|.
name|logAggregationContext
return|;
block|}
block|}
end_class

end_unit

