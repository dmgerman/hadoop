begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * *  *  Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements. See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership. The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License. You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  * /  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_comment
comment|/**  * Use {@code NetworkTagMappingManagerFactory} to get the correct  * {@link NetworkTagMappingManager}.  *  */
end_comment

begin_class
DECL|class|NetworkTagMappingManagerFactory
specifier|public
specifier|final
class|class
name|NetworkTagMappingManagerFactory
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|NetworkTagMappingManagerFactory
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|NetworkTagMappingManagerFactory ()
specifier|private
name|NetworkTagMappingManagerFactory
parameter_list|()
block|{}
DECL|method|getManager (Configuration conf)
specifier|public
specifier|static
name|NetworkTagMappingManager
name|getManager
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|Class
argument_list|<
name|?
extends|extends
name|NetworkTagMappingManager
argument_list|>
name|managerClass
init|=
name|conf
operator|.
name|getClass
argument_list|(
name|YarnConfiguration
operator|.
name|NM_NETWORK_TAG_MAPPING_MANAGER
argument_list|,
name|NetworkTagMappingJsonManager
operator|.
name|class
argument_list|,
name|NetworkTagMappingManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Using NetworkTagMappingManager implementation - "
operator|+
name|managerClass
argument_list|)
expr_stmt|;
return|return
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|managerClass
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

