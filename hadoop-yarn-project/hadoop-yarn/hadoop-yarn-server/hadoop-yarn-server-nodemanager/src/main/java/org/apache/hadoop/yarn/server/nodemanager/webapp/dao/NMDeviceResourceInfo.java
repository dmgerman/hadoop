begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|deviceplugin
operator|.
name|Device
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|deviceframework
operator|.
name|AssignedDevice
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Wrapper class of Device allocation for NMWebServices.  * */
end_comment

begin_class
DECL|class|NMDeviceResourceInfo
specifier|public
class|class
name|NMDeviceResourceInfo
extends|extends
name|NMResourceInfo
block|{
DECL|field|totalDevices
specifier|private
name|List
argument_list|<
name|Device
argument_list|>
name|totalDevices
decl_stmt|;
DECL|field|assignedDevices
specifier|private
name|List
argument_list|<
name|AssignedDevice
argument_list|>
name|assignedDevices
decl_stmt|;
DECL|method|NMDeviceResourceInfo ( List<Device> totalDevices, List<AssignedDevice> assignedDevices)
specifier|public
name|NMDeviceResourceInfo
parameter_list|(
name|List
argument_list|<
name|Device
argument_list|>
name|totalDevices
parameter_list|,
name|List
argument_list|<
name|AssignedDevice
argument_list|>
name|assignedDevices
parameter_list|)
block|{
name|this
operator|.
name|assignedDevices
operator|=
name|assignedDevices
expr_stmt|;
name|this
operator|.
name|totalDevices
operator|=
name|totalDevices
expr_stmt|;
block|}
DECL|method|getTotalDevices ()
specifier|public
name|List
argument_list|<
name|Device
argument_list|>
name|getTotalDevices
parameter_list|()
block|{
return|return
name|totalDevices
return|;
block|}
DECL|method|setTotalDevices (List<Device> totalDevices)
specifier|public
name|void
name|setTotalDevices
parameter_list|(
name|List
argument_list|<
name|Device
argument_list|>
name|totalDevices
parameter_list|)
block|{
name|this
operator|.
name|totalDevices
operator|=
name|totalDevices
expr_stmt|;
block|}
DECL|method|getAssignedDevices ()
specifier|public
name|List
argument_list|<
name|AssignedDevice
argument_list|>
name|getAssignedDevices
parameter_list|()
block|{
return|return
name|assignedDevices
return|;
block|}
DECL|method|setAssignedDevices ( List<AssignedDevice> assignedDevices)
specifier|public
name|void
name|setAssignedDevices
parameter_list|(
name|List
argument_list|<
name|AssignedDevice
argument_list|>
name|assignedDevices
parameter_list|)
block|{
name|this
operator|.
name|assignedDevices
operator|=
name|assignedDevices
expr_stmt|;
block|}
block|}
end_class

end_unit

