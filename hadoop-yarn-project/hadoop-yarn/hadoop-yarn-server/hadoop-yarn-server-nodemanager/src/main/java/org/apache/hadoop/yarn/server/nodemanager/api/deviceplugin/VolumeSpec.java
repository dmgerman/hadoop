begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.api.deviceplugin
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|deviceplugin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Describe one volume creation or deletion.  * */
end_comment

begin_class
DECL|class|VolumeSpec
specifier|public
specifier|final
class|class
name|VolumeSpec
implements|implements
name|Serializable
implements|,
name|Comparable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3483619025106416736L
decl_stmt|;
DECL|field|volumeDriver
specifier|private
specifier|final
name|String
name|volumeDriver
decl_stmt|;
DECL|field|volumeName
specifier|private
specifier|final
name|String
name|volumeName
decl_stmt|;
DECL|field|volumeOperation
specifier|private
specifier|final
name|String
name|volumeOperation
decl_stmt|;
DECL|field|CREATE
specifier|public
specifier|final
specifier|static
name|String
name|CREATE
init|=
literal|"create"
decl_stmt|;
DECL|field|DELETE
specifier|public
specifier|final
specifier|static
name|String
name|DELETE
init|=
literal|"delete"
decl_stmt|;
DECL|method|VolumeSpec (Builder builder)
specifier|private
name|VolumeSpec
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|volumeDriver
operator|=
name|builder
operator|.
name|volumeDriver
expr_stmt|;
name|this
operator|.
name|volumeName
operator|=
name|builder
operator|.
name|volumeName
expr_stmt|;
name|this
operator|.
name|volumeOperation
operator|=
name|builder
operator|.
name|volumeOperation
expr_stmt|;
block|}
DECL|method|getVolumeDriver ()
specifier|public
name|String
name|getVolumeDriver
parameter_list|()
block|{
return|return
name|volumeDriver
return|;
block|}
DECL|method|getVolumeName ()
specifier|public
name|String
name|getVolumeName
parameter_list|()
block|{
return|return
name|volumeName
return|;
block|}
DECL|method|getVolumeOperation ()
specifier|public
name|String
name|getVolumeOperation
parameter_list|()
block|{
return|return
name|volumeOperation
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|VolumeSpec
name|other
init|=
operator|(
name|VolumeSpec
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|volumeDriver
argument_list|,
name|other
operator|.
name|getVolumeDriver
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|volumeName
argument_list|,
name|other
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|volumeOperation
argument_list|,
name|other
operator|.
name|getVolumeOperation
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|volumeDriver
argument_list|,
name|volumeName
argument_list|,
name|volumeOperation
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (Object o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
comment|/**    * Builder for VolumeSpec.    * */
DECL|class|Builder
specifier|public
specifier|final
specifier|static
class|class
name|Builder
block|{
DECL|field|volumeDriver
specifier|private
name|String
name|volumeDriver
decl_stmt|;
DECL|field|volumeName
specifier|private
name|String
name|volumeName
decl_stmt|;
DECL|field|volumeOperation
specifier|private
name|String
name|volumeOperation
decl_stmt|;
DECL|method|Builder ()
specifier|private
name|Builder
parameter_list|()
block|{}
DECL|method|newInstance ()
specifier|public
specifier|static
name|Builder
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
DECL|method|build ()
specifier|public
name|VolumeSpec
name|build
parameter_list|()
block|{
return|return
operator|new
name|VolumeSpec
argument_list|(
name|this
argument_list|)
return|;
block|}
DECL|method|setVolumeDriver (String volDriver)
specifier|public
name|Builder
name|setVolumeDriver
parameter_list|(
name|String
name|volDriver
parameter_list|)
block|{
name|this
operator|.
name|volumeDriver
operator|=
name|volDriver
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setVolumeName (String volName)
specifier|public
name|Builder
name|setVolumeName
parameter_list|(
name|String
name|volName
parameter_list|)
block|{
name|this
operator|.
name|volumeName
operator|=
name|volName
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setVolumeOperation (String volOperation)
specifier|public
name|Builder
name|setVolumeOperation
parameter_list|(
name|String
name|volOperation
parameter_list|)
block|{
name|this
operator|.
name|volumeOperation
operator|=
name|volOperation
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
block|}
end_class

end_unit

