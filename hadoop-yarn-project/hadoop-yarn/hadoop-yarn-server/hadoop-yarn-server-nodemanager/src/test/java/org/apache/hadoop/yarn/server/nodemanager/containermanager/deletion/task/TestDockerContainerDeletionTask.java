begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|deletion
operator|.
name|task
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerNodemanagerRecoveryProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|DeletionService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_comment
comment|/**  * Test the attributes of the {@link DockerContainerDeletionTask} class.  */
end_comment

begin_class
DECL|class|TestDockerContainerDeletionTask
specifier|public
class|class
name|TestDockerContainerDeletionTask
block|{
DECL|field|ID
specifier|private
specifier|static
specifier|final
name|int
name|ID
init|=
literal|0
decl_stmt|;
DECL|field|USER
specifier|private
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"user"
decl_stmt|;
DECL|field|CONTAINER_ID
specifier|private
specifier|static
specifier|final
name|String
name|CONTAINER_ID
init|=
literal|"container_e123_123456_000001"
decl_stmt|;
DECL|field|deletionService
specifier|private
name|DeletionService
name|deletionService
decl_stmt|;
DECL|field|deletionTask
specifier|private
name|DockerContainerDeletionTask
name|deletionTask
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|deletionService
operator|=
name|mock
argument_list|(
name|DeletionService
operator|.
name|class
argument_list|)
expr_stmt|;
name|deletionTask
operator|=
operator|new
name|DockerContainerDeletionTask
argument_list|(
name|ID
argument_list|,
name|deletionService
argument_list|,
name|USER
argument_list|,
name|CONTAINER_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetUser ()
specifier|public
name|void
name|testGetUser
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|deletionTask
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainerId ()
specifier|public
name|void
name|testGetContainerId
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|CONTAINER_ID
argument_list|,
name|deletionTask
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertDeletionTaskToProto ()
specifier|public
name|void
name|testConvertDeletionTaskToProto
parameter_list|()
block|{
name|YarnServerNodemanagerRecoveryProtos
operator|.
name|DeletionServiceDeleteTaskProto
name|proto
init|=
name|deletionTask
operator|.
name|convertDeletionTaskToProto
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ID
argument_list|,
name|proto
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|proto
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_ID
argument_list|,
name|proto
operator|.
name|getDockerContainerId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DeletionTaskType
operator|.
name|DOCKER_CONTAINER
operator|.
name|name
argument_list|()
argument_list|,
name|proto
operator|.
name|getTaskType
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

