begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|runtime
operator|.
name|docker
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|TestDockerVolumeCommand
specifier|public
class|class
name|TestDockerVolumeCommand
block|{
annotation|@
name|Test
DECL|method|testDockerVolumeCommand ()
specifier|public
name|void
name|testDockerVolumeCommand
parameter_list|()
block|{
name|DockerVolumeCommand
name|dockerVolumeCommand
init|=
operator|new
name|DockerVolumeCommand
argument_list|(
literal|"create"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"volume"
argument_list|,
name|dockerVolumeCommand
operator|.
name|getCommandOption
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dockerVolumeCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"sub-command"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"create"
argument_list|)
argument_list|)
expr_stmt|;
name|dockerVolumeCommand
operator|.
name|setDriverName
argument_list|(
literal|"driver1"
argument_list|)
expr_stmt|;
name|dockerVolumeCommand
operator|.
name|setVolumeName
argument_list|(
literal|"volume1"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dockerVolumeCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"driver"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"driver1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dockerVolumeCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"volume"
argument_list|)
operator|.
name|contains
argument_list|(
literal|"volume1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

