begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|runtime
operator|.
name|docker
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Tests the docker run command and its command  * line arguments.  */
end_comment

begin_class
DECL|class|TestDockerRunCommand
specifier|public
class|class
name|TestDockerRunCommand
block|{
DECL|field|dockerRunCommand
specifier|private
name|DockerRunCommand
name|dockerRunCommand
decl_stmt|;
DECL|field|CONTAINER_NAME
specifier|private
specifier|static
specifier|final
name|String
name|CONTAINER_NAME
init|=
literal|"foo"
decl_stmt|;
DECL|field|USER_ID
specifier|private
specifier|static
specifier|final
name|String
name|USER_ID
init|=
literal|"user_id"
decl_stmt|;
DECL|field|IMAGE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|IMAGE_NAME
init|=
literal|"image_name"
decl_stmt|;
DECL|field|CLIENT_CONFIG_PATH
specifier|private
specifier|static
specifier|final
name|String
name|CLIENT_CONFIG_PATH
init|=
literal|"/path/to/client.json"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|dockerRunCommand
operator|=
operator|new
name|DockerRunCommand
argument_list|(
name|CONTAINER_NAME
argument_list|,
name|USER_ID
argument_list|,
name|IMAGE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCommandOption ()
specifier|public
name|void
name|testGetCommandOption
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"run"
argument_list|,
name|dockerRunCommand
operator|.
name|getCommandOption
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCommandArguments ()
specifier|public
name|void
name|testCommandArguments
parameter_list|()
block|{
name|String
name|sourceDevice
init|=
literal|"source"
decl_stmt|;
name|String
name|destDevice
init|=
literal|"dest"
decl_stmt|;
name|dockerRunCommand
operator|.
name|addDevice
argument_list|(
name|sourceDevice
argument_list|,
name|destDevice
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|commands
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|commands
operator|.
name|add
argument_list|(
literal|"launch_command"
argument_list|)
expr_stmt|;
name|dockerRunCommand
operator|.
name|setOverrideCommandWithArgs
argument_list|(
name|commands
argument_list|)
expr_stmt|;
name|dockerRunCommand
operator|.
name|removeContainerOnExit
argument_list|()
expr_stmt|;
name|dockerRunCommand
operator|.
name|addTmpfsMount
argument_list|(
literal|"/run"
argument_list|)
expr_stmt|;
name|String
name|portsMapping
init|=
literal|"127.0.0.1:8080:80,1234:1234,:2222"
decl_stmt|;
for|for
control|(
name|String
name|mapping
range|:
name|portsMapping
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|dockerRunCommand
operator|.
name|addPortsMapping
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
block|}
name|dockerRunCommand
operator|.
name|addRuntime
argument_list|(
literal|"nvidia"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"run"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"docker-command"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user_id"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"user"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"image_name"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"image"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"source:dest"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"devices"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"rm"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"launch_command"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"launch-command"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/run"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"tmpfs"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"127.0.0.1:8080:80,1234:1234,:2222"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"ports-mapping"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"nvidia"
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetClientConfigDir ()
specifier|public
name|void
name|testSetClientConfigDir
parameter_list|()
block|{
name|dockerRunCommand
operator|.
name|setClientConfigDir
argument_list|(
name|CLIENT_CONFIG_PATH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CLIENT_CONFIG_PATH
argument_list|,
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|dockerRunCommand
operator|.
name|getDockerCommandWithArguments
argument_list|()
operator|.
name|get
argument_list|(
literal|"docker-config"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

