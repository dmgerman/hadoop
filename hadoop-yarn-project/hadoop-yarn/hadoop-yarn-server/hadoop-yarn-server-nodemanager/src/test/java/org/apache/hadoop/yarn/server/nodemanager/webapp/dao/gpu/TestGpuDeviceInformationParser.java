begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.webapp.dao.gpu
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|gpu
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|TestGpuDeviceInformationParser
specifier|public
class|class
name|TestGpuDeviceInformationParser
block|{
annotation|@
name|Test
DECL|method|testParse ()
specifier|public
name|void
name|testParse
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/nvidia-smi-sample-xml-output"
argument_list|)
decl_stmt|;
name|String
name|s
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
name|f
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|GpuDeviceInformationParser
name|parser
init|=
operator|new
name|GpuDeviceInformationParser
argument_list|()
decl_stmt|;
name|GpuDeviceInformation
name|info
init|=
name|parser
operator|.
name|parseXml
argument_list|(
name|s
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"375.66"
argument_list|,
name|info
operator|.
name|getDriverVersion
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|info
operator|.
name|getGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PerGpuDeviceInformation
name|gpu1
init|=
name|info
operator|.
name|getGpus
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Tesla P100-PCIE-12GB"
argument_list|,
name|gpu1
operator|.
name|getProductName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|12193
argument_list|,
name|gpu1
operator|.
name|getGpuMemoryUsage
argument_list|()
operator|.
name|getTotalMemoryMiB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|10.3f
argument_list|,
name|gpu1
operator|.
name|getGpuUtilizations
argument_list|()
operator|.
name|getOverallGpuUtilization
argument_list|()
argument_list|,
literal|1e-6
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|34f
argument_list|,
name|gpu1
operator|.
name|getTemperature
argument_list|()
operator|.
name|getCurrentGpuTemp
argument_list|()
argument_list|,
literal|1e-6
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|85f
argument_list|,
name|gpu1
operator|.
name|getTemperature
argument_list|()
operator|.
name|getMaxGpuTemp
argument_list|()
argument_list|,
literal|1e-6
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|82f
argument_list|,
name|gpu1
operator|.
name|getTemperature
argument_list|()
operator|.
name|getSlowThresholdGpuTemp
argument_list|()
argument_list|,
literal|1e-6
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

