begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.deviceframework
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|deviceframework
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|deviceplugin
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|TestResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_comment
comment|/**  * Unit tests for DevicePluginAdapter.  * About interaction with vendor plugin  * */
end_comment

begin_class
DECL|class|TestDevicePluginAdapter
specifier|public
class|class
name|TestDevicePluginAdapter
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestDevicePluginAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
name|YarnConfiguration
name|conf
decl_stmt|;
DECL|field|tempResourceTypesFile
specifier|private
name|String
name|tempResourceTypesFile
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
comment|// setup resource-types.xml
name|ResourceUtils
operator|.
name|resetResourceTypes
argument_list|()
expr_stmt|;
name|String
name|resourceTypesFile
init|=
literal|"resource-types-pluggable-devices.xml"
decl_stmt|;
name|this
operator|.
name|tempResourceTypesFile
operator|=
name|TestResourceUtils
operator|.
name|setupResourceTypes
argument_list|(
name|this
operator|.
name|conf
argument_list|,
name|resourceTypesFile
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|IOException
block|{
comment|// cleanup resource-types.xml
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|tempResourceTypesFile
argument_list|)
decl_stmt|;
if|if
condition|(
name|dest
operator|.
name|exists
argument_list|()
condition|)
block|{
name|dest
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testDeviceResourceUpdaterImpl ()
specifier|public
name|void
name|testDeviceResourceUpdaterImpl
parameter_list|()
throws|throws
name|YarnException
block|{
name|Resource
name|nodeResource
init|=
name|mock
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Init an plugin
name|MyPlugin
name|plugin
init|=
operator|new
name|MyPlugin
argument_list|()
decl_stmt|;
name|MyPlugin
name|spyPlugin
init|=
name|spy
argument_list|(
name|plugin
argument_list|)
decl_stmt|;
name|String
name|resourceName
init|=
name|MyPlugin
operator|.
name|RESOURCE_NAME
decl_stmt|;
comment|// Init an adapter for the plugin
name|DevicePluginAdapter
name|adapter
init|=
operator|new
name|DevicePluginAdapter
argument_list|(
name|resourceName
argument_list|,
name|spyPlugin
argument_list|)
decl_stmt|;
name|adapter
operator|.
name|initialize
argument_list|(
name|mock
argument_list|(
name|Context
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|adapter
operator|.
name|getNodeResourceHandlerInstance
argument_list|()
operator|.
name|updateConfiguredResource
argument_list|(
name|nodeResource
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|spyPlugin
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getDevices
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|nodeResource
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setResourceValue
argument_list|(
name|resourceName
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
DECL|class|MyPlugin
specifier|private
class|class
name|MyPlugin
implements|implements
name|DevicePlugin
block|{
DECL|field|RESOURCE_NAME
specifier|private
specifier|final
specifier|static
name|String
name|RESOURCE_NAME
init|=
literal|"cmpA.com/hdwA"
decl_stmt|;
annotation|@
name|Override
DECL|method|getRegisterRequestInfo ()
specifier|public
name|DeviceRegisterRequest
name|getRegisterRequestInfo
parameter_list|()
block|{
return|return
name|DeviceRegisterRequest
operator|.
name|Builder
operator|.
name|newInstance
argument_list|()
operator|.
name|setResourceName
argument_list|(
name|RESOURCE_NAME
argument_list|)
operator|.
name|setPluginVersion
argument_list|(
literal|"v1.0"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getDevices ()
specifier|public
name|Set
argument_list|<
name|Device
argument_list|>
name|getDevices
parameter_list|()
block|{
name|TreeSet
argument_list|<
name|Device
argument_list|>
name|r
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|()
decl_stmt|;
name|r
operator|.
name|add
argument_list|(
name|Device
operator|.
name|Builder
operator|.
name|newInstance
argument_list|()
operator|.
name|setId
argument_list|(
literal|0
argument_list|)
operator|.
name|setDevPath
argument_list|(
literal|"/dev/hdwA0"
argument_list|)
operator|.
name|setMajorNumber
argument_list|(
literal|256
argument_list|)
operator|.
name|setMinorNumber
argument_list|(
literal|0
argument_list|)
operator|.
name|setBusID
argument_list|(
literal|"0000:80:00.0"
argument_list|)
operator|.
name|setHealthy
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|add
argument_list|(
name|Device
operator|.
name|Builder
operator|.
name|newInstance
argument_list|()
operator|.
name|setId
argument_list|(
literal|1
argument_list|)
operator|.
name|setDevPath
argument_list|(
literal|"/dev/hdwA1"
argument_list|)
operator|.
name|setMajorNumber
argument_list|(
literal|256
argument_list|)
operator|.
name|setMinorNumber
argument_list|(
literal|0
argument_list|)
operator|.
name|setBusID
argument_list|(
literal|"0000:80:01.0"
argument_list|)
operator|.
name|setHealthy
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|add
argument_list|(
name|Device
operator|.
name|Builder
operator|.
name|newInstance
argument_list|()
operator|.
name|setId
argument_list|(
literal|2
argument_list|)
operator|.
name|setDevPath
argument_list|(
literal|"/dev/hdwA2"
argument_list|)
operator|.
name|setMajorNumber
argument_list|(
literal|256
argument_list|)
operator|.
name|setMinorNumber
argument_list|(
literal|0
argument_list|)
operator|.
name|setBusID
argument_list|(
literal|"0000:80:02.0"
argument_list|)
operator|.
name|setHealthy
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
annotation|@
name|Override
DECL|method|onDevicesAllocated (Set<Device> allocatedDevices, YarnRuntimeType yarnRuntime)
specifier|public
name|DeviceRuntimeSpec
name|onDevicesAllocated
parameter_list|(
name|Set
argument_list|<
name|Device
argument_list|>
name|allocatedDevices
parameter_list|,
name|YarnRuntimeType
name|yarnRuntime
parameter_list|)
throws|throws
name|Exception
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|onDevicesReleased (Set<Device> releasedDevices)
specifier|public
name|void
name|onDevicesReleased
parameter_list|(
name|Set
argument_list|<
name|Device
argument_list|>
name|releasedDevices
parameter_list|)
block|{      }
block|}
comment|// MyPlugin
block|}
end_class

end_unit

