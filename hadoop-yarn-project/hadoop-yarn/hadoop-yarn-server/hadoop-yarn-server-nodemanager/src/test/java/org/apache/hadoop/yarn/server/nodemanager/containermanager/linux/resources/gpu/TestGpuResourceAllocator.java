begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.gpu
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|resources
operator|.
name|gpu
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
operator|.
name|GPU_URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|CustomResourceTypesConfigurationProvider
operator|.
name|initResourceTypes
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|argThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyZeroInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|NodeManager
operator|.
name|NMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|container
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|container
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|resources
operator|.
name|ResourceHandlerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|linux
operator|.
name|resources
operator|.
name|gpu
operator|.
name|GpuResourceAllocator
operator|.
name|GpuAllocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|resourceplugin
operator|.
name|gpu
operator|.
name|GpuDevice
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|recovery
operator|.
name|NMStateStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Captor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|MockitoAnnotations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Unit tests for GpuResourceAllocator.  */
end_comment

begin_class
DECL|class|TestGpuResourceAllocator
specifier|public
class|class
name|TestGpuResourceAllocator
block|{
DECL|field|WAIT_PERIOD_FOR_RESOURCE
specifier|private
specifier|static
specifier|final
name|int
name|WAIT_PERIOD_FOR_RESOURCE
init|=
literal|100
decl_stmt|;
DECL|class|ContainerMatcher
specifier|private
specifier|static
class|class
name|ContainerMatcher
implements|implements
name|ArgumentMatcher
argument_list|<
name|Container
argument_list|>
block|{
DECL|field|container
specifier|private
name|Container
name|container
decl_stmt|;
DECL|method|ContainerMatcher (Container container)
name|ContainerMatcher
parameter_list|(
name|Container
name|container
parameter_list|)
block|{
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|matches (Container other)
specifier|public
name|boolean
name|matches
parameter_list|(
name|Container
name|other
parameter_list|)
block|{
name|long
name|expectedId
init|=
name|container
operator|.
name|getContainerId
argument_list|()
operator|.
name|getContainerId
argument_list|()
decl_stmt|;
name|long
name|otherId
init|=
name|other
operator|.
name|getContainerId
argument_list|()
operator|.
name|getContainerId
argument_list|()
decl_stmt|;
return|return
name|expectedId
operator|==
name|otherId
return|;
block|}
block|}
annotation|@
name|Captor
DECL|field|gpuCaptor
specifier|private
name|ArgumentCaptor
argument_list|<
name|List
argument_list|<
name|Serializable
argument_list|>
argument_list|>
name|gpuCaptor
decl_stmt|;
annotation|@
name|Mock
DECL|field|nmContext
specifier|private
name|NMContext
name|nmContext
decl_stmt|;
annotation|@
name|Mock
DECL|field|nmStateStore
specifier|private
name|NMStateStoreService
name|nmStateStore
decl_stmt|;
annotation|@
name|Rule
DECL|field|exception
specifier|public
name|ExpectedException
name|exception
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
DECL|field|testSubject
specifier|private
name|GpuResourceAllocator
name|testSubject
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|initResourceTypes
argument_list|(
name|ResourceInformation
operator|.
name|GPU_URI
argument_list|)
expr_stmt|;
name|MockitoAnnotations
operator|.
name|initMocks
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|testSubject
operator|=
name|createTestSubject
argument_list|(
name|WAIT_PERIOD_FOR_RESOURCE
argument_list|)
expr_stmt|;
block|}
DECL|method|createTestSubject (int waitPeriodForResource)
specifier|private
name|GpuResourceAllocator
name|createTestSubject
parameter_list|(
name|int
name|waitPeriodForResource
parameter_list|)
block|{
name|when
argument_list|(
name|nmContext
operator|.
name|getNMStateStore
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|nmStateStore
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|nmContext
operator|.
name|getContainers
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|GpuResourceAllocator
argument_list|(
name|nmContext
argument_list|,
name|waitPeriodForResource
argument_list|)
return|;
block|}
DECL|method|createGpuResourceRequest (int gpus)
specifier|private
name|Resource
name|createGpuResourceRequest
parameter_list|(
name|int
name|gpus
parameter_list|)
block|{
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|gpus
operator|>
literal|0
condition|)
block|{
name|res
operator|.
name|setResourceValue
argument_list|(
name|ResourceInformation
operator|.
name|GPU_URI
argument_list|,
name|gpus
argument_list|)
expr_stmt|;
block|}
return|return
name|res
return|;
block|}
DECL|method|createMockContainers (int gpus, int numberOfContainers)
specifier|private
name|List
argument_list|<
name|Container
argument_list|>
name|createMockContainers
parameter_list|(
name|int
name|gpus
parameter_list|,
name|int
name|numberOfContainers
parameter_list|)
block|{
specifier|final
name|long
name|id
init|=
literal|111L
decl_stmt|;
name|List
argument_list|<
name|Container
argument_list|>
name|containers
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numberOfContainers
condition|;
name|i
operator|++
control|)
block|{
name|containers
operator|.
name|add
argument_list|(
name|createMockContainer
argument_list|(
name|gpus
argument_list|,
name|id
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|containers
return|;
block|}
DECL|method|createMockContainer (int gpus, long id)
specifier|private
name|Container
name|createMockContainer
parameter_list|(
name|int
name|gpus
parameter_list|,
name|long
name|id
parameter_list|)
block|{
name|Resource
name|res
init|=
name|createGpuResourceRequest
argument_list|(
name|gpus
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|mock
argument_list|(
name|ContainerId
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|containerId
operator|.
name|getContainerId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|mock
argument_list|(
name|Container
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|container
operator|.
name|getResource
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|container
operator|.
name|getContainerState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ContainerState
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
name|nmContext
operator|.
name|getContainers
argument_list|()
operator|.
name|put
argument_list|(
name|containerId
argument_list|,
name|container
argument_list|)
expr_stmt|;
return|return
name|container
return|;
block|}
DECL|method|createAndAddGpus (int numberOfGpus)
specifier|private
name|void
name|createAndAddGpus
parameter_list|(
name|int
name|numberOfGpus
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numberOfGpus
condition|;
name|i
operator|++
control|)
block|{
name|testSubject
operator|.
name|addGpu
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numberOfGpus
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numberOfGpus
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addGpus (GpuDevice... gpus)
specifier|private
name|void
name|addGpus
parameter_list|(
name|GpuDevice
modifier|...
name|gpus
parameter_list|)
block|{
for|for
control|(
name|GpuDevice
name|gpu
range|:
name|gpus
control|)
block|{
name|testSubject
operator|.
name|addGpu
argument_list|(
name|gpu
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|gpus
operator|.
name|length
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|gpus
operator|.
name|length
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addGpusAndDontVerify (GpuDevice... gpus)
specifier|private
name|void
name|addGpusAndDontVerify
parameter_list|(
name|GpuDevice
modifier|...
name|gpus
parameter_list|)
block|{
for|for
control|(
name|GpuDevice
name|gpu
range|:
name|gpus
control|)
block|{
name|testSubject
operator|.
name|addGpu
argument_list|(
name|gpu
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setupContainerAsReleasingGpus (Container... releasingContainers)
specifier|private
name|void
name|setupContainerAsReleasingGpus
parameter_list|(
name|Container
modifier|...
name|releasingContainers
parameter_list|)
block|{
name|ContainerState
index|[]
name|finalStates
init|=
operator|new
name|ContainerState
index|[]
block|{
name|ContainerState
operator|.
name|KILLING
block|,
name|ContainerState
operator|.
name|DONE
block|,
name|ContainerState
operator|.
name|LOCALIZATION_FAILED
block|,
name|ContainerState
operator|.
name|CONTAINER_RESOURCES_CLEANINGUP
block|,
name|ContainerState
operator|.
name|CONTAINER_CLEANEDUP_AFTER_KILL
block|,
name|ContainerState
operator|.
name|EXITED_WITH_FAILURE
block|,
name|ContainerState
operator|.
name|EXITED_WITH_SUCCESS
block|}
decl_stmt|;
specifier|final
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|Container
name|container
range|:
name|releasingContainers
control|)
block|{
name|ContainerState
name|state
init|=
name|finalStates
index|[
name|random
operator|.
name|nextInt
argument_list|(
name|finalStates
operator|.
name|length
argument_list|)
index|]
decl_stmt|;
name|when
argument_list|(
name|container
operator|.
name|getContainerState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|container
operator|.
name|isContainerInFinalStates
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertAllocatedGpu (GpuDevice expectedGpu, Container container, GpuAllocation allocation)
specifier|private
name|void
name|assertAllocatedGpu
parameter_list|(
name|GpuDevice
name|expectedGpu
parameter_list|,
name|Container
name|container
parameter_list|,
name|GpuAllocation
name|allocation
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allocation
operator|.
name|getAllowedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|allocation
operator|.
name|getDeniedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|GpuDevice
argument_list|>
name|allowedGPUs
init|=
name|allocation
operator|.
name|getAllowedGPUs
argument_list|()
decl_stmt|;
name|GpuDevice
name|allocatedGpu
init|=
name|allowedGPUs
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedGpu
argument_list|,
name|allocatedGpu
argument_list|)
expr_stmt|;
name|assertAssignmentInStateStore
argument_list|(
name|expectedGpu
argument_list|,
name|container
argument_list|)
expr_stmt|;
block|}
DECL|method|assertAllocatedGpus (int gpus, int deniedGpus, Container container, GpuAllocation allocation)
specifier|private
name|void
name|assertAllocatedGpus
parameter_list|(
name|int
name|gpus
parameter_list|,
name|int
name|deniedGpus
parameter_list|,
name|Container
name|container
parameter_list|,
name|GpuAllocation
name|allocation
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|gpus
argument_list|,
name|allocation
operator|.
name|getAllowedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deniedGpus
argument_list|,
name|allocation
operator|.
name|getDeniedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertAssignmentInStateStore
argument_list|(
name|gpus
argument_list|,
name|container
argument_list|)
expr_stmt|;
block|}
DECL|method|assertNoAllocation (GpuAllocation allocation)
specifier|private
name|void
name|assertNoAllocation
parameter_list|(
name|GpuAllocation
name|allocation
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allocation
operator|.
name|getDeniedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|allocation
operator|.
name|getAllowedGPUs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|nmStateStore
argument_list|)
expr_stmt|;
block|}
DECL|method|assertAssignmentInStateStore (GpuDevice expectedGpu, Container container)
specifier|private
name|void
name|assertAssignmentInStateStore
parameter_list|(
name|GpuDevice
name|expectedGpu
parameter_list|,
name|Container
name|container
parameter_list|)
throws|throws
name|IOException
block|{
name|verify
argument_list|(
name|nmStateStore
argument_list|)
operator|.
name|storeAssignedResources
argument_list|(
name|argThat
argument_list|(
operator|new
name|ContainerMatcher
argument_list|(
name|container
argument_list|)
argument_list|)
argument_list|,
name|eq
argument_list|(
name|GPU_URI
argument_list|)
argument_list|,
name|gpuCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Serializable
argument_list|>
name|gpuList
init|=
name|gpuCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|gpuList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedGpu
argument_list|,
name|gpuList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertAssignmentInStateStore (int gpus, Container container)
specifier|private
name|void
name|assertAssignmentInStateStore
parameter_list|(
name|int
name|gpus
parameter_list|,
name|Container
name|container
parameter_list|)
throws|throws
name|IOException
block|{
name|verify
argument_list|(
name|nmStateStore
argument_list|)
operator|.
name|storeAssignedResources
argument_list|(
name|argThat
argument_list|(
operator|new
name|ContainerMatcher
argument_list|(
name|container
argument_list|)
argument_list|)
argument_list|,
name|eq
argument_list|(
name|GPU_URI
argument_list|)
argument_list|,
name|gpuCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Serializable
argument_list|>
name|gpuList
init|=
name|gpuCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|gpus
argument_list|,
name|gpuList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|findDuplicates ( List<GpuAllocation> allocations)
specifier|private
specifier|static
name|Set
argument_list|<
name|GpuAllocation
argument_list|>
name|findDuplicates
parameter_list|(
name|List
argument_list|<
name|GpuAllocation
argument_list|>
name|allocations
parameter_list|)
block|{
specifier|final
name|Set
argument_list|<
name|GpuAllocation
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|GpuAllocation
argument_list|>
name|tmpSet
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|GpuAllocation
name|allocation
range|:
name|allocations
control|)
block|{
if|if
condition|(
operator|!
name|tmpSet
operator|.
name|add
argument_list|(
name|allocation
argument_list|)
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|allocation
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Test
DECL|method|testNewGpuAllocatorHasEmptyCollectionOfDevices ()
specifier|public
name|void
name|testNewGpuAllocatorHasEmptyCollectionOfDevices
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddOneDevice ()
specifier|public
name|void
name|testAddOneDevice
parameter_list|()
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddMoreDevices ()
specifier|public
name|void
name|testAddMoreDevices
parameter_list|()
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddMoreDevicesWithSameData ()
specifier|public
name|void
name|testAddMoreDevicesWithSameData
parameter_list|()
block|{
name|addGpusAndDontVerify
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRequestZeroGpu ()
specifier|public
name|void
name|testRequestZeroGpu
parameter_list|()
throws|throws
name|ResourceHandlerException
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|0
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|assertNoAllocation
argument_list|(
name|allocation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRequestOneGpu ()
specifier|public
name|void
name|testRequestOneGpu
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|GpuDevice
name|gpu
init|=
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|addGpus
argument_list|(
name|gpu
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|1
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|assertAllocatedGpu
argument_list|(
name|gpu
argument_list|,
name|container
argument_list|,
name|allocation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRequestMoreThanAvailableGpu ()
specifier|public
name|void
name|testRequestMoreThanAvailableGpu
parameter_list|()
throws|throws
name|ResourceHandlerException
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceHandlerException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Failed to find enough GPUs"
argument_list|)
expr_stmt|;
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRequestMoreThanAvailableGpuAndOneContainerIsReleasingGpus ()
specifier|public
name|void
name|testRequestMoreThanAvailableGpuAndOneContainerIsReleasingGpus
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|container
argument_list|,
name|allocation
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|setupContainerAsReleasingGpus
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|Container
name|container2
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|6L
argument_list|)
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceHandlerException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"as some other containers might not "
operator|+
literal|"releasing GPUs"
argument_list|)
expr_stmt|;
name|GpuAllocation
name|allocation2
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container2
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|container
argument_list|,
name|allocation2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThreeContainersJustTwoOfThemSatisfied ()
specifier|public
name|void
name|testThreeContainersJustTwoOfThemSatisfied
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|3
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|Container
name|container2
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|6L
argument_list|)
decl_stmt|;
name|Container
name|container3
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|6L
argument_list|)
decl_stmt|;
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|container
argument_list|,
name|allocation
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|GpuAllocation
name|allocation2
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container2
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|container2
argument_list|,
name|allocation2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceHandlerException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Failed to find enough GPUs"
argument_list|)
expr_stmt|;
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReleaseAndAssignGpus ()
specifier|public
name|void
name|testReleaseAndAssignGpus
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|addGpus
argument_list|(
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GpuDevice
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|container
argument_list|,
name|allocation
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|setupContainerAsReleasingGpus
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|Container
name|container2
init|=
name|createMockContainer
argument_list|(
literal|2
argument_list|,
literal|6L
argument_list|)
decl_stmt|;
try|try
block|{
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceHandlerException
name|e
parameter_list|)
block|{
comment|//intended as we have not enough GPUs available
block|}
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|testSubject
operator|.
name|unassignGpus
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
name|GpuAllocation
name|allocation2
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container2
argument_list|)
decl_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|container
argument_list|,
name|allocation2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateLotsOfContainersVerifyGpuAssignmentsAreCorrect ()
specifier|public
name|void
name|testCreateLotsOfContainersVerifyGpuAssignmentsAreCorrect
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|createAndAddGpus
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Container
argument_list|>
name|containers
init|=
name|createMockContainers
argument_list|(
literal|3
argument_list|,
literal|33
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|GpuAllocation
argument_list|>
name|allocations
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|Container
name|container
range|:
name|containers
control|)
block|{
name|GpuAllocation
name|allocation
init|=
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
decl_stmt|;
name|allocations
operator|.
name|add
argument_list|(
name|allocation
argument_list|)
expr_stmt|;
name|assertAllocatedGpus
argument_list|(
literal|3
argument_list|,
literal|97
argument_list|,
name|container
argument_list|,
name|allocation
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|99
argument_list|,
name|testSubject
operator|.
name|getDeviceAllocationMapping
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|99
argument_list|,
name|testSubject
operator|.
name|getAssignedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|testSubject
operator|.
name|getAllowedGpus
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|testSubject
operator|.
name|getAvailableGpus
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|GpuAllocation
argument_list|>
name|duplicateAllocations
init|=
name|findDuplicates
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|duplicateAllocations
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGpuGetsUnassignedWhenStateStoreThrowsException ()
specifier|public
name|void
name|testGpuGetsUnassignedWhenStateStoreThrowsException
parameter_list|()
throws|throws
name|ResourceHandlerException
throws|,
name|IOException
block|{
name|doThrow
argument_list|(
operator|new
name|IOException
argument_list|(
literal|"Failed to save container mappings "
operator|+
literal|"to NM state store!"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|nmStateStore
argument_list|)
operator|.
name|storeAssignedResources
argument_list|(
name|any
argument_list|(
name|Container
operator|.
name|class
argument_list|)
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|anyList
argument_list|()
argument_list|)
expr_stmt|;
name|createAndAddGpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceHandlerException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Failed to save container mappings "
operator|+
literal|"to NM state store"
argument_list|)
expr_stmt|;
name|Container
name|container
init|=
name|createMockContainer
argument_list|(
literal|1
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|testSubject
operator|.
name|assignGpus
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

