begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.executor
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|executor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|container
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_comment
comment|/**  * Test the attributes of the {@link ContainerReapContext}.  */
end_comment

begin_class
DECL|class|TestContainerReapContext
specifier|public
class|class
name|TestContainerReapContext
block|{
DECL|field|USER
specifier|private
specifier|final
specifier|static
name|String
name|USER
init|=
literal|"user"
decl_stmt|;
DECL|field|container
specifier|private
name|Container
name|container
decl_stmt|;
DECL|field|context
specifier|private
name|ContainerReapContext
name|context
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|container
operator|=
name|mock
argument_list|(
name|Container
operator|.
name|class
argument_list|)
expr_stmt|;
name|context
operator|=
operator|new
name|ContainerReapContext
operator|.
name|Builder
argument_list|()
operator|.
name|setUser
argument_list|(
name|USER
argument_list|)
operator|.
name|setContainer
argument_list|(
name|container
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getContainer ()
specifier|public
name|void
name|getContainer
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|container
argument_list|,
name|context
operator|.
name|getContainer
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getUser ()
specifier|public
name|void
name|getUser
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

