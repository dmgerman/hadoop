begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements. See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership. The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License. You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ResourceCalculatorPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_class
DECL|class|TestNodeManagerHardwareUtils
specifier|public
class|class
name|TestNodeManagerHardwareUtils
block|{
annotation|@
name|Test
DECL|method|testGetContainerCores ()
specifier|public
name|void
name|testGetContainerCores
parameter_list|()
block|{
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|float
name|ret
decl_stmt|;
specifier|final
name|int
name|numProcessors
init|=
literal|4
decl_stmt|;
name|ResourceCalculatorPlugin
name|plugin
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ResourceCalculatorPlugin
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doReturn
argument_list|(
name|numProcessors
argument_list|)
operator|.
name|when
argument_list|(
name|plugin
argument_list|)
operator|.
name|getNumProcessors
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|0
argument_list|)
expr_stmt|;
try|try
block|{
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"getContainerCores should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ie
parameter_list|)
block|{
comment|// expected
block|}
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|ret
operator|=
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
operator|(
name|int
operator|)
name|ret
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|ret
operator|=
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
name|int
operator|)
name|ret
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|75
argument_list|)
expr_stmt|;
name|ret
operator|=
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
name|int
operator|)
name|ret
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|85
argument_list|)
expr_stmt|;
name|ret
operator|=
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3.4
argument_list|,
name|ret
argument_list|,
literal|0.1
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|ret
operator|=
name|NodeManagerHardwareUtils
operator|.
name|getContainersCores
argument_list|(
name|plugin
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
operator|(
name|int
operator|)
name|ret
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

