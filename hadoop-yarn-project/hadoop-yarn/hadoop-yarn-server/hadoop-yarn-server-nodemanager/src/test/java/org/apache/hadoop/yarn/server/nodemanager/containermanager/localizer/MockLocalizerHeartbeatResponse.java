begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|localizer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|LocalizerAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|LocalizerHeartbeatResponse
import|;
end_import

begin_class
DECL|class|MockLocalizerHeartbeatResponse
specifier|public
class|class
name|MockLocalizerHeartbeatResponse
implements|implements
name|LocalizerHeartbeatResponse
block|{
DECL|field|action
name|LocalizerAction
name|action
decl_stmt|;
DECL|field|rsrc
name|List
argument_list|<
name|LocalResource
argument_list|>
name|rsrc
decl_stmt|;
DECL|method|MockLocalizerHeartbeatResponse ()
name|MockLocalizerHeartbeatResponse
parameter_list|()
block|{
name|rsrc
operator|=
operator|new
name|ArrayList
argument_list|<
name|LocalResource
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|MockLocalizerHeartbeatResponse ( LocalizerAction action, List<LocalResource> rsrc)
name|MockLocalizerHeartbeatResponse
parameter_list|(
name|LocalizerAction
name|action
parameter_list|,
name|List
argument_list|<
name|LocalResource
argument_list|>
name|rsrc
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
name|this
operator|.
name|rsrc
operator|=
name|rsrc
expr_stmt|;
block|}
DECL|method|getLocalizerAction ()
specifier|public
name|LocalizerAction
name|getLocalizerAction
parameter_list|()
block|{
return|return
name|action
return|;
block|}
DECL|method|getAllResources ()
specifier|public
name|List
argument_list|<
name|LocalResource
argument_list|>
name|getAllResources
parameter_list|()
block|{
return|return
name|rsrc
return|;
block|}
DECL|method|getLocalResource (int i)
specifier|public
name|LocalResource
name|getLocalResource
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|rsrc
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
DECL|method|setLocalizerAction (LocalizerAction action)
specifier|public
name|void
name|setLocalizerAction
parameter_list|(
name|LocalizerAction
name|action
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
DECL|method|addAllResources (List<LocalResource> resources)
specifier|public
name|void
name|addAllResources
parameter_list|(
name|List
argument_list|<
name|LocalResource
argument_list|>
name|resources
parameter_list|)
block|{
name|rsrc
operator|.
name|addAll
argument_list|(
name|resources
argument_list|)
expr_stmt|;
block|}
DECL|method|addResource (LocalResource resource)
specifier|public
name|void
name|addResource
parameter_list|(
name|LocalResource
name|resource
parameter_list|)
block|{
name|rsrc
operator|.
name|add
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
DECL|method|removeResource (int index)
specifier|public
name|void
name|removeResource
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|rsrc
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
DECL|method|clearResources ()
specifier|public
name|void
name|clearResources
parameter_list|()
block|{
name|rsrc
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

