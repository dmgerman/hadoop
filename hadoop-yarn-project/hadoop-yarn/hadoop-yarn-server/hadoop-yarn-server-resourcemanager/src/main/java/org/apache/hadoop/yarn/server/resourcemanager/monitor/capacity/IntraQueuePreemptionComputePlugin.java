begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|monitor
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmcontainer
operator|.
name|RMContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|common
operator|.
name|fica
operator|.
name|FiCaSchedulerApp
import|;
end_import

begin_interface
DECL|interface|IntraQueuePreemptionComputePlugin
interface|interface
name|IntraQueuePreemptionComputePlugin
block|{
DECL|method|getResourceDemandFromAppsPerQueue (String queueName, String partition)
name|Map
argument_list|<
name|String
argument_list|,
name|Resource
argument_list|>
name|getResourceDemandFromAppsPerQueue
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|partition
parameter_list|)
function_decl|;
DECL|method|computeAppsIdealAllocation (Resource clusterResource, TempQueuePerPartition tq, Map<ApplicationAttemptId, Set<RMContainer>> selectedCandidates, Resource totalPreemptedResourceAllowed, Resource queueTotalUnassigned, float maxAllowablePreemptLimit)
name|void
name|computeAppsIdealAllocation
parameter_list|(
name|Resource
name|clusterResource
parameter_list|,
name|TempQueuePerPartition
name|tq
parameter_list|,
name|Map
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|Set
argument_list|<
name|RMContainer
argument_list|>
argument_list|>
name|selectedCandidates
parameter_list|,
name|Resource
name|totalPreemptedResourceAllowed
parameter_list|,
name|Resource
name|queueTotalUnassigned
parameter_list|,
name|float
name|maxAllowablePreemptLimit
parameter_list|)
function_decl|;
DECL|method|getPreemptableApps (String queueName, String partition)
name|Collection
argument_list|<
name|FiCaSchedulerApp
argument_list|>
name|getPreemptableApps
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|partition
parameter_list|)
function_decl|;
DECL|method|skipContainerBasedOnIntraQueuePolicy (FiCaSchedulerApp app, Resource clusterResource, Resource usedResource, RMContainer c)
name|boolean
name|skipContainerBasedOnIntraQueuePolicy
parameter_list|(
name|FiCaSchedulerApp
name|app
parameter_list|,
name|Resource
name|clusterResource
parameter_list|,
name|Resource
name|usedResource
parameter_list|,
name|RMContainer
name|c
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

