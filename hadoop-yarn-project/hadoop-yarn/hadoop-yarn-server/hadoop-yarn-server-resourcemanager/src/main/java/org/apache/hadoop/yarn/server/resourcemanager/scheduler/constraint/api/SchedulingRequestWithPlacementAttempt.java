begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|constraint
operator|.
name|api
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|SchedulingRequest
import|;
end_import

begin_comment
comment|/**  * Simple holder class encapsulating a SchedulingRequest  * with a placement attempt.  */
end_comment

begin_class
DECL|class|SchedulingRequestWithPlacementAttempt
specifier|public
class|class
name|SchedulingRequestWithPlacementAttempt
block|{
DECL|field|placementAttempt
specifier|private
specifier|final
name|int
name|placementAttempt
decl_stmt|;
DECL|field|schedulingRequest
specifier|private
specifier|final
name|SchedulingRequest
name|schedulingRequest
decl_stmt|;
DECL|method|SchedulingRequestWithPlacementAttempt (int placementAttempt, SchedulingRequest schedulingRequest)
specifier|public
name|SchedulingRequestWithPlacementAttempt
parameter_list|(
name|int
name|placementAttempt
parameter_list|,
name|SchedulingRequest
name|schedulingRequest
parameter_list|)
block|{
name|this
operator|.
name|placementAttempt
operator|=
name|placementAttempt
expr_stmt|;
name|this
operator|.
name|schedulingRequest
operator|=
name|schedulingRequest
expr_stmt|;
block|}
DECL|method|getPlacementAttempt ()
specifier|public
name|int
name|getPlacementAttempt
parameter_list|()
block|{
return|return
name|placementAttempt
return|;
block|}
DECL|method|getSchedulingRequest ()
specifier|public
name|SchedulingRequest
name|getSchedulingRequest
parameter_list|()
block|{
return|return
name|schedulingRequest
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"SchedulingRequestWithPlacementAttempt{"
operator|+
literal|"placementAttempt="
operator|+
name|placementAttempt
operator|+
literal|", schedulingRequest="
operator|+
name|schedulingRequest
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

