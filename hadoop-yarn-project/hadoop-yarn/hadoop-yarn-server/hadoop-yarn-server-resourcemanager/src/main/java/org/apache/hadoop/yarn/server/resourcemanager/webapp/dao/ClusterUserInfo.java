begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_comment
comment|/**  * The YARN UI doesn't have centralized login mechanism. While accessing UI2 from kerberized shell, user who is  * placed the request to YARN need to be displayed in UI. Given requests from UI2 is routed via Proxy, only RM can provide  * the user who has placed the request. This DAO object help to provide the requested user and also RM logged in user.  * the response sent by RM is authenticated user instead of proxy user.  * It is always good to display authenticated user in browser which eliminates lot of confusion to end use.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|ClusterUserInfo
specifier|public
class|class
name|ClusterUserInfo
block|{
comment|// User who has started the RM
DECL|field|rmLoginUser
specifier|protected
name|String
name|rmLoginUser
decl_stmt|;
comment|// User who has placed the request
DECL|field|requestedUser
specifier|protected
name|String
name|requestedUser
decl_stmt|;
DECL|method|ClusterUserInfo ()
specifier|public
name|ClusterUserInfo
parameter_list|()
block|{     }
DECL|method|ClusterUserInfo (ResourceManager rm, UserGroupInformation ugi)
specifier|public
name|ClusterUserInfo
parameter_list|(
name|ResourceManager
name|rm
parameter_list|,
name|UserGroupInformation
name|ugi
parameter_list|)
block|{
name|this
operator|.
name|rmLoginUser
operator|=
name|rm
operator|.
name|getRMLoginUser
argument_list|()
expr_stmt|;
if|if
condition|(
name|ugi
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|requestedUser
operator|=
name|ugi
operator|.
name|getShortUserName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|requestedUser
operator|=
literal|"UNKNOWN_USER"
expr_stmt|;
block|}
block|}
DECL|method|getRmLoginUser ()
specifier|public
name|String
name|getRmLoginUser
parameter_list|()
block|{
return|return
name|rmLoginUser
return|;
block|}
DECL|method|getRequestedUser ()
specifier|public
name|String
name|getRequestedUser
parameter_list|()
block|{
return|return
name|requestedUser
return|;
block|}
block|}
end_class

end_unit

