begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.recovery
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmnode
operator|.
name|RMNode
import|;
end_import

begin_interface
DECL|interface|Store
specifier|public
interface|interface
name|Store
extends|extends
name|NodeStore
extends|,
name|ApplicationsStore
block|{
DECL|interface|ApplicationInfo
specifier|public
interface|interface
name|ApplicationInfo
block|{
DECL|method|getApplicationMaster ()
specifier|public
name|ApplicationMaster
name|getApplicationMaster
parameter_list|()
function_decl|;
DECL|method|getMasterContainer ()
specifier|public
name|Container
name|getMasterContainer
parameter_list|()
function_decl|;
DECL|method|getApplicationSubmissionContext ()
specifier|public
name|ApplicationSubmissionContext
name|getApplicationSubmissionContext
parameter_list|()
function_decl|;
DECL|method|getContainers ()
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|getContainers
parameter_list|()
function_decl|;
block|}
DECL|interface|RMState
specifier|public
interface|interface
name|RMState
block|{
DECL|method|getStoredNodeManagers ()
specifier|public
name|List
argument_list|<
name|RMNode
argument_list|>
name|getStoredNodeManagers
parameter_list|()
function_decl|;
DECL|method|getStoredApplications ()
specifier|public
name|Map
argument_list|<
name|ApplicationId
argument_list|,
name|ApplicationInfo
argument_list|>
name|getStoredApplications
parameter_list|()
function_decl|;
DECL|method|getLastLoggedNodeId ()
specifier|public
name|NodeId
name|getLastLoggedNodeId
parameter_list|()
function_decl|;
block|}
DECL|method|restore ()
specifier|public
name|RMState
name|restore
parameter_list|()
throws|throws
name|IOException
function_decl|;
DECL|method|doneWithRecovery ()
specifier|public
name|void
name|doneWithRecovery
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

