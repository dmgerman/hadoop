begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ApplicationAttemptEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ApplicationEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ContainerEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
operator|.
name|Identifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|AppAttemptMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ApplicationMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ContainerMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMServerUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMAppImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMAppMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMAppState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|attempt
operator|.
name|RMAppAttempt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|attempt
operator|.
name|RMAppAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmcontainer
operator|.
name|RMContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|timelineservice
operator|.
name|RMTimelineCollectorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|collector
operator|.
name|TimelineCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|timeline
operator|.
name|TimelineUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * This class is responsible for posting application, appattempt&amp; Container  * lifecycle related events to timeline service v2.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|TimelineServiceV2Publisher
specifier|public
class|class
name|TimelineServiceV2Publisher
extends|extends
name|AbstractSystemMetricsPublisher
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TimelineServiceV2Publisher
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|rmTimelineCollectorManager
specifier|private
name|RMTimelineCollectorManager
name|rmTimelineCollectorManager
decl_stmt|;
DECL|field|publishContainerEvents
specifier|private
name|boolean
name|publishContainerEvents
decl_stmt|;
DECL|method|TimelineServiceV2Publisher (RMContext rmContext)
specifier|public
name|TimelineServiceV2Publisher
parameter_list|(
name|RMContext
name|rmContext
parameter_list|)
block|{
name|super
argument_list|(
literal|"TimelineserviceV2Publisher"
argument_list|)
expr_stmt|;
name|rmTimelineCollectorManager
operator|=
name|rmContext
operator|.
name|getRMTimelineCollectorManager
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|super
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|register
argument_list|(
name|SystemMetricsEventType
operator|.
name|class
argument_list|,
operator|new
name|TimelineV2EventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|publishContainerEvents
operator|=
name|getConfig
argument_list|()
operator|.
name|getBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PUBLISH_CONTAINER_EVENTS_ENABLED
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_PUBLISH_CONTAINER_EVENTS_ENABLED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|isPublishContainerEvents ()
name|boolean
name|isPublishContainerEvents
parameter_list|()
block|{
return|return
name|publishContainerEvents
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appCreated (RMApp app, long createdTime)
specifier|public
name|void
name|appCreated
parameter_list|(
name|RMApp
name|app
parameter_list|,
name|long
name|createdTime
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
name|createApplicationEntity
argument_list|(
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setQueue
argument_list|(
name|app
operator|.
name|getQueue
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|createdTime
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|NAME_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|TYPE_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getApplicationType
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|USER_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|QUEUE_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getQueue
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|SUBMITTED_TIME_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getSubmitTime
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_TAGS_INFO
argument_list|,
name|app
operator|.
name|getApplicationTags
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|UNMANAGED_APPLICATION_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getUnmanagedAM
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APPLICATION_PRIORITY_INFO
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|AM_NODE_LABEL_EXPRESSION
argument_list|,
name|app
operator|.
name|getAmNodeLabelExpression
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_NODE_LABEL_EXPRESSION
argument_list|,
name|app
operator|.
name|getAppNodeLabelExpression
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|app
operator|.
name|getCallerContext
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|app
operator|.
name|getCallerContext
argument_list|()
operator|.
name|getContext
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|YARN_APP_CALLER_CONTEXT
argument_list|,
name|app
operator|.
name|getCallerContext
argument_list|()
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|app
operator|.
name|getCallerContext
argument_list|()
operator|.
name|getSignature
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|YARN_APP_CALLER_SIGNATURE
argument_list|,
name|app
operator|.
name|getCallerContext
argument_list|()
operator|.
name|getSignature
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|ContainerLaunchContext
name|amContainerSpec
init|=
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getAMContainerSpec
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|AM_CONTAINER_LAUNCH_COMMAND
argument_list|,
name|amContainerSpec
operator|.
name|getCommands
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|createdTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appFinished (RMApp app, RMAppState state, long finishedTime)
specifier|public
name|void
name|appFinished
parameter_list|(
name|RMApp
name|app
parameter_list|,
name|RMAppState
name|state
parameter_list|,
name|long
name|finishedTime
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
name|createApplicationEntity
argument_list|(
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|finishedTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|DIAGNOSTICS_INFO_EVENT_INFO
argument_list|,
name|app
operator|.
name|getDiagnostics
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINAL_STATUS_EVENT_INFO
argument_list|,
name|app
operator|.
name|getFinalApplicationStatus
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|RMServerUtils
operator|.
name|createApplicationState
argument_list|(
name|state
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|app
operator|.
name|getCurrentAppAttempt
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|app
operator|.
name|getCurrentAppAttempt
argument_list|()
operator|.
name|getAppAttemptId
argument_list|()
decl_stmt|;
if|if
condition|(
name|appAttemptId
operator|!=
literal|null
condition|)
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|LATEST_APP_ATTEMPT_EVENT_INFO
argument_list|,
name|appAttemptId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|RMAppMetrics
name|appMetrics
init|=
name|app
operator|.
name|getRMAppMetrics
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|entityMetrics
init|=
name|getTimelinelineAppMetrics
argument_list|(
name|appMetrics
argument_list|,
name|finishedTime
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setMetrics
argument_list|(
name|entityMetrics
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getTimelinelineAppMetrics ( RMAppMetrics appMetrics, long timestamp)
specifier|private
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|getTimelinelineAppMetrics
parameter_list|(
name|RMAppMetrics
name|appMetrics
parameter_list|,
name|long
name|timestamp
parameter_list|)
block|{
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|entityMetrics
init|=
operator|new
name|HashSet
argument_list|<
name|TimelineMetric
argument_list|>
argument_list|()
decl_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_CPU_METRICS
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getVcoreSeconds
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_MEM_METRICS
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getMemorySeconds
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_MEM_PREEMPT_METRICS
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getPreemptedMemorySeconds
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_CPU_PREEMPT_METRICS
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getPreemptedVcoreSeconds
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_RESOURCE_PREEMPTED_CPU
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getResourcePreempted
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_RESOURCE_PREEMPTED_MEM
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getResourcePreempted
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_NON_AM_CONTAINER_PREEMPTED
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getNumNonAMContainersPreempted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|getTimelineMetric
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_AM_CONTAINER_PREEMPTED
argument_list|,
name|timestamp
argument_list|,
name|appMetrics
operator|.
name|getNumAMContainersPreempted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|entityMetrics
return|;
block|}
DECL|method|getTimelineMetric (String name, long timestamp, Number value)
specifier|private
name|TimelineMetric
name|getTimelineMetric
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|timestamp
parameter_list|,
name|Number
name|value
parameter_list|)
block|{
name|TimelineMetric
name|metric
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|metric
operator|.
name|setId
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|metric
operator|.
name|addValue
argument_list|(
name|timestamp
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|metric
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appStateUpdated (RMApp app, YarnApplicationState appState, long updatedTime)
specifier|public
name|void
name|appStateUpdated
parameter_list|(
name|RMApp
name|app
parameter_list|,
name|YarnApplicationState
name|appState
parameter_list|,
name|long
name|updatedTime
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
name|createApplicationEntity
argument_list|(
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|appState
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_UPDATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|updatedTime
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
comment|// publish in entity info also to query using filters
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|appState
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appACLsUpdated (RMApp app, String appViewACLs, long updatedTime)
specifier|public
name|void
name|appACLsUpdated
parameter_list|(
name|RMApp
name|app
parameter_list|,
name|String
name|appViewACLs
parameter_list|,
name|long
name|updatedTime
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
name|createApplicationEntity
argument_list|(
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_VIEW_ACLS_ENTITY_INFO
argument_list|,
operator|(
name|appViewACLs
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|appViewACLs
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|ACLS_UPDATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|updatedTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appUpdated (RMApp app, long currentTimeMillis)
specifier|public
name|void
name|appUpdated
parameter_list|(
name|RMApp
name|app
parameter_list|,
name|long
name|currentTimeMillis
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
name|createApplicationEntity
argument_list|(
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|QUEUE_ENTITY_INFO
argument_list|,
name|app
operator|.
name|getQueue
argument_list|()
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APPLICATION_PRIORITY_INFO
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|UPDATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|currentTimeMillis
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createApplicationEntity ( ApplicationId applicationId)
specifier|private
specifier|static
name|ApplicationEntity
name|createApplicationEntity
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
block|{
name|ApplicationEntity
name|entity
init|=
operator|new
name|ApplicationEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|applicationId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appAttemptRegistered (RMAppAttempt appAttempt, long registeredTime)
specifier|public
name|void
name|appAttemptRegistered
parameter_list|(
name|RMAppAttempt
name|appAttempt
parameter_list|,
name|long
name|registeredTime
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createAppAttemptEntity
argument_list|(
name|appAttempt
operator|.
name|getAppAttemptId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|registeredTime
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|REGISTERED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|registeredTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|TRACKING_URL_INFO
argument_list|,
name|appAttempt
operator|.
name|getTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ORIGINAL_TRACKING_URL_INFO
argument_list|,
name|appAttempt
operator|.
name|getOriginalTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|HOST_INFO
argument_list|,
name|appAttempt
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|RPC_PORT_INFO
argument_list|,
name|appAttempt
operator|.
name|getRpcPort
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|appAttempt
operator|.
name|getMasterContainer
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|MASTER_CONTAINER_INFO
argument_list|,
name|appAttempt
operator|.
name|getMasterContainer
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|appAttempt
operator|.
name|getAppAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|appAttemptFinished (RMAppAttempt appAttempt, RMAppAttemptState appAttemtpState, RMApp app, long finishedTime)
specifier|public
name|void
name|appAttemptFinished
parameter_list|(
name|RMAppAttempt
name|appAttempt
parameter_list|,
name|RMAppAttemptState
name|appAttemtpState
parameter_list|,
name|RMApp
name|app
parameter_list|,
name|long
name|finishedTime
parameter_list|)
block|{
name|ApplicationAttemptEntity
name|entity
init|=
name|createAppAttemptEntity
argument_list|(
name|appAttempt
operator|.
name|getAppAttemptId
argument_list|()
argument_list|)
decl_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|finishedTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|DIAGNOSTICS_INFO
argument_list|,
name|appAttempt
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
comment|// app will get the final status from app attempt, or create one
comment|// based on app state if it doesn't exist
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|FINAL_STATUS_INFO
argument_list|,
name|app
operator|.
name|getFinalApplicationStatus
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|STATE_INFO
argument_list|,
name|RMServerUtils
operator|.
name|createApplicationAttemptState
argument_list|(
name|appAttemtpState
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|appAttempt
operator|.
name|getAppAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createAppAttemptEntity ( ApplicationAttemptId appAttemptId)
specifier|private
specifier|static
name|ApplicationAttemptEntity
name|createAppAttemptEntity
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
block|{
name|ApplicationAttemptEntity
name|entity
init|=
operator|new
name|ApplicationAttemptEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|appAttemptId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setParent
argument_list|(
operator|new
name|Identifier
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|name
argument_list|()
argument_list|,
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|containerCreated (RMContainer container, long createdTime)
specifier|public
name|void
name|containerCreated
parameter_list|(
name|RMContainer
name|container
parameter_list|,
name|long
name|createdTime
parameter_list|)
block|{
if|if
condition|(
name|publishContainerEvents
condition|)
block|{
name|TimelineEntity
name|entity
init|=
name|createContainerEntity
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|createdTime
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ContainerMetricsConstants
operator|.
name|CREATED_IN_RM_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|createdTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
comment|// updated as event info instead of entity info, as entity info is updated
comment|// by NM
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_MEMORY_INFO
argument_list|,
name|container
operator|.
name|getAllocatedResource
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_VCORE_INFO
argument_list|,
name|container
operator|.
name|getAllocatedResource
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_INFO
argument_list|,
name|container
operator|.
name|getAllocatedNode
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PORT_INFO
argument_list|,
name|container
operator|.
name|getAllocatedNode
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PRIORITY_INFO
argument_list|,
name|container
operator|.
name|getAllocatedPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_HTTP_ADDRESS_INFO
argument_list|,
name|container
operator|.
name|getNodeHttpAddress
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|container
operator|.
name|getContainerId
argument_list|()
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|containerFinished (RMContainer container, long finishedTime)
specifier|public
name|void
name|containerFinished
parameter_list|(
name|RMContainer
name|container
parameter_list|,
name|long
name|finishedTime
parameter_list|)
block|{
if|if
condition|(
name|publishContainerEvents
condition|)
block|{
name|TimelineEntity
name|entity
init|=
name|createContainerEntity
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|)
decl_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ContainerMetricsConstants
operator|.
name|FINISHED_IN_RM_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|finishedTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|DIAGNOSTICS_INFO
argument_list|,
name|container
operator|.
name|getDiagnosticsInfo
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|EXIT_STATUS_INFO
argument_list|,
name|container
operator|.
name|getContainerExitStatus
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|STATE_INFO
argument_list|,
name|container
operator|.
name|getContainerState
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|CONTAINER_FINISHED_TIME
argument_list|,
name|finishedTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|getDispatcher
argument_list|()
operator|.
name|getEventHandler
argument_list|()
operator|.
name|handle
argument_list|(
operator|new
name|TimelineV2PublishEvent
argument_list|(
name|SystemMetricsEventType
operator|.
name|PUBLISH_ENTITY
argument_list|,
name|entity
argument_list|,
name|container
operator|.
name|getContainerId
argument_list|()
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createContainerEntity ( ContainerId containerId)
specifier|private
specifier|static
name|ContainerEntity
name|createContainerEntity
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
block|{
name|ContainerEntity
name|entity
init|=
operator|new
name|ContainerEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|containerId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setParent
argument_list|(
operator|new
name|Identifier
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|name
argument_list|()
argument_list|,
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|putEntity (TimelineEntity entity, ApplicationId appId)
specifier|private
name|void
name|putEntity
parameter_list|(
name|TimelineEntity
name|entity
parameter_list|,
name|ApplicationId
name|appId
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Publishing the entity "
operator|+
name|entity
operator|+
literal|", JSON-style content: "
operator|+
name|TimelineUtils
operator|.
name|dumpTimelineRecordtoJSON
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|TimelineCollector
name|timelineCollector
init|=
name|rmTimelineCollectorManager
operator|.
name|get
argument_list|(
name|appId
argument_list|)
decl_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|timelineCollector
operator|.
name|putEntities
argument_list|(
name|entities
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error when publishing entity "
operator|+
name|entity
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|ApplicationFinishPublishEvent
specifier|private
class|class
name|ApplicationFinishPublishEvent
extends|extends
name|TimelineV2PublishEvent
block|{
DECL|field|app
specifier|private
name|RMAppImpl
name|app
decl_stmt|;
DECL|method|ApplicationFinishPublishEvent (SystemMetricsEventType type, TimelineEntity entity, RMAppImpl app)
specifier|public
name|ApplicationFinishPublishEvent
parameter_list|(
name|SystemMetricsEventType
name|type
parameter_list|,
name|TimelineEntity
name|entity
parameter_list|,
name|RMAppImpl
name|app
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|entity
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|app
operator|=
name|app
expr_stmt|;
block|}
DECL|method|getRMAppImpl ()
specifier|public
name|RMAppImpl
name|getRMAppImpl
parameter_list|()
block|{
return|return
name|app
return|;
block|}
block|}
DECL|class|TimelineV2EventHandler
specifier|private
class|class
name|TimelineV2EventHandler
implements|implements
name|EventHandler
argument_list|<
name|TimelineV2PublishEvent
argument_list|>
block|{
annotation|@
name|Override
DECL|method|handle (TimelineV2PublishEvent event)
specifier|public
name|void
name|handle
parameter_list|(
name|TimelineV2PublishEvent
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|event
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|PUBLISH_APPLICATION_FINISHED_ENTITY
case|:
name|putEntity
argument_list|(
name|event
operator|.
name|getEntity
argument_list|()
argument_list|,
name|event
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ApplicationFinishPublishEvent
operator|)
name|event
operator|)
operator|.
name|getRMAppImpl
argument_list|()
operator|.
name|stopTimelineCollector
argument_list|()
expr_stmt|;
break|break;
default|default:
name|putEntity
argument_list|(
name|event
operator|.
name|getEntity
argument_list|()
argument_list|,
name|event
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
DECL|class|TimelineV2PublishEvent
specifier|private
class|class
name|TimelineV2PublishEvent
extends|extends
name|TimelinePublishEvent
block|{
DECL|field|entity
specifier|private
name|TimelineEntity
name|entity
decl_stmt|;
DECL|method|TimelineV2PublishEvent (SystemMetricsEventType type, TimelineEntity entity, ApplicationId appId)
specifier|public
name|TimelineV2PublishEvent
parameter_list|(
name|SystemMetricsEventType
name|type
parameter_list|,
name|TimelineEntity
name|entity
parameter_list|,
name|ApplicationId
name|appId
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|appId
argument_list|)
expr_stmt|;
name|this
operator|.
name|entity
operator|=
name|entity
expr_stmt|;
block|}
DECL|method|getEntity ()
specifier|public
name|TimelineEntity
name|getEntity
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
block|}
block|}
end_class

end_unit

