begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_comment
comment|/**  * Simple class to allow users to send information required to create a  * ContainerLaunchContext which can then be used as part of the  * ApplicationSubmissionContext  *  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"log-aggregation-context"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|LogAggregationContextInfo
specifier|public
class|class
name|LogAggregationContextInfo
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"log-include-pattern"
argument_list|)
DECL|field|logIncludePattern
name|String
name|logIncludePattern
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"log-exclude-pattern"
argument_list|)
DECL|field|logExcludePattern
name|String
name|logExcludePattern
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"rolled-log-include-pattern"
argument_list|)
DECL|field|rolledLogsIncludePattern
name|String
name|rolledLogsIncludePattern
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"rolled-log-exclude-pattern"
argument_list|)
DECL|field|rolledLogsExcludePattern
name|String
name|rolledLogsExcludePattern
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"log-aggregation-policy-class-name"
argument_list|)
DECL|field|policyClassName
name|String
name|policyClassName
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"log-aggregation-policy-parameters"
argument_list|)
DECL|field|policyParameters
name|String
name|policyParameters
decl_stmt|;
DECL|method|LogAggregationContextInfo ()
specifier|public
name|LogAggregationContextInfo
parameter_list|()
block|{   }
DECL|method|getIncludePattern ()
specifier|public
name|String
name|getIncludePattern
parameter_list|()
block|{
return|return
name|this
operator|.
name|logIncludePattern
return|;
block|}
DECL|method|setIncludePattern (String includePattern)
specifier|public
name|void
name|setIncludePattern
parameter_list|(
name|String
name|includePattern
parameter_list|)
block|{
name|this
operator|.
name|logIncludePattern
operator|=
name|includePattern
expr_stmt|;
block|}
DECL|method|getExcludePattern ()
specifier|public
name|String
name|getExcludePattern
parameter_list|()
block|{
return|return
name|this
operator|.
name|logExcludePattern
return|;
block|}
DECL|method|setExcludePattern (String excludePattern)
specifier|public
name|void
name|setExcludePattern
parameter_list|(
name|String
name|excludePattern
parameter_list|)
block|{
name|this
operator|.
name|logExcludePattern
operator|=
name|excludePattern
expr_stmt|;
block|}
DECL|method|getRolledLogsIncludePattern ()
specifier|public
name|String
name|getRolledLogsIncludePattern
parameter_list|()
block|{
return|return
name|this
operator|.
name|rolledLogsIncludePattern
return|;
block|}
DECL|method|setRolledLogsIncludePattern ( String rolledLogsIncludePattern)
specifier|public
name|void
name|setRolledLogsIncludePattern
parameter_list|(
name|String
name|rolledLogsIncludePattern
parameter_list|)
block|{
name|this
operator|.
name|rolledLogsIncludePattern
operator|=
name|rolledLogsIncludePattern
expr_stmt|;
block|}
DECL|method|getRolledLogsExcludePattern ()
specifier|public
name|String
name|getRolledLogsExcludePattern
parameter_list|()
block|{
return|return
name|this
operator|.
name|rolledLogsExcludePattern
return|;
block|}
DECL|method|setRolledLogsExcludePattern ( String rolledLogsExcludePattern)
specifier|public
name|void
name|setRolledLogsExcludePattern
parameter_list|(
name|String
name|rolledLogsExcludePattern
parameter_list|)
block|{
name|this
operator|.
name|rolledLogsExcludePattern
operator|=
name|rolledLogsExcludePattern
expr_stmt|;
block|}
DECL|method|getLogAggregationPolicyClassName ()
specifier|public
name|String
name|getLogAggregationPolicyClassName
parameter_list|()
block|{
return|return
name|this
operator|.
name|policyClassName
return|;
block|}
DECL|method|setLogAggregationPolicyClassName ( String className)
specifier|public
name|void
name|setLogAggregationPolicyClassName
parameter_list|(
name|String
name|className
parameter_list|)
block|{
name|this
operator|.
name|policyClassName
operator|=
name|className
expr_stmt|;
block|}
DECL|method|getLogAggregationPolicyParameters ()
specifier|public
name|String
name|getLogAggregationPolicyParameters
parameter_list|()
block|{
return|return
name|this
operator|.
name|policyParameters
return|;
block|}
DECL|method|setLogAggregationPolicyParameters ( String parameters)
specifier|public
name|void
name|setLogAggregationPolicyParameters
parameter_list|(
name|String
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|policyParameters
operator|=
name|parameters
expr_stmt|;
block|}
block|}
end_class

end_unit

