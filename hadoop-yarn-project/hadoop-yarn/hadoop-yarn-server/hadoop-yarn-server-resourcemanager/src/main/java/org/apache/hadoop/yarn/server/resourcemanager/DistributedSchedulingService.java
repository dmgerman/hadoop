begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationMasterProtocolPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|DistributedSchedulerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|impl
operator|.
name|pb
operator|.
name|service
operator|.
name|ApplicationMasterProtocolPBServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|DistSchedAllocateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|DistSchedRegisterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|ApplicationMasterProtocol
operator|.
name|ApplicationMasterProtocolService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|YarnScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|security
operator|.
name|AMRMTokenSecretManager
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_class
DECL|class|DistributedSchedulingService
specifier|public
class|class
name|DistributedSchedulingService
extends|extends
name|ApplicationMasterService
implements|implements
name|DistributedSchedulerProtocol
block|{
DECL|method|DistributedSchedulingService (RMContext rmContext, YarnScheduler scheduler)
specifier|public
name|DistributedSchedulingService
parameter_list|(
name|RMContext
name|rmContext
parameter_list|,
name|YarnScheduler
name|scheduler
parameter_list|)
block|{
name|super
argument_list|(
name|DistributedSchedulingService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|rmContext
argument_list|,
name|scheduler
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getServer (YarnRPC rpc, Configuration serverConf, InetSocketAddress addr, AMRMTokenSecretManager secretManager)
specifier|public
name|Server
name|getServer
parameter_list|(
name|YarnRPC
name|rpc
parameter_list|,
name|Configuration
name|serverConf
parameter_list|,
name|InetSocketAddress
name|addr
parameter_list|,
name|AMRMTokenSecretManager
name|secretManager
parameter_list|)
block|{
name|Server
name|server
init|=
name|rpc
operator|.
name|getServer
argument_list|(
name|DistributedSchedulerProtocol
operator|.
name|class
argument_list|,
name|this
argument_list|,
name|addr
argument_list|,
name|serverConf
argument_list|,
name|secretManager
argument_list|,
name|serverConf
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER_CLIENT_THREAD_COUNT
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_CLIENT_THREAD_COUNT
argument_list|)
argument_list|)
decl_stmt|;
comment|// To support application running no NMs that DO NOT support
comment|// Dist Scheduling...
operator|(
operator|(
name|RPC
operator|.
name|Server
operator|)
name|server
operator|)
operator|.
name|addProtocol
argument_list|(
name|RPC
operator|.
name|RpcKind
operator|.
name|RPC_PROTOCOL_BUFFER
argument_list|,
name|ApplicationMasterProtocolPB
operator|.
name|class
argument_list|,
name|ApplicationMasterProtocolService
operator|.
name|newReflectiveBlockingService
argument_list|(
operator|new
name|ApplicationMasterProtocolPBServiceImpl
argument_list|(
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|server
return|;
block|}
annotation|@
name|Override
DECL|method|registerApplicationMaster (RegisterApplicationMasterRequest request)
specifier|public
name|RegisterApplicationMasterResponse
name|registerApplicationMaster
parameter_list|(
name|RegisterApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
name|super
operator|.
name|registerApplicationMaster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|finishApplicationMaster (FinishApplicationMasterRequest request)
specifier|public
name|FinishApplicationMasterResponse
name|finishApplicationMaster
parameter_list|(
name|FinishApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
name|super
operator|.
name|finishApplicationMaster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|allocate (AllocateRequest request)
specifier|public
name|AllocateResponse
name|allocate
parameter_list|(
name|AllocateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
name|super
operator|.
name|allocate
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|DistSchedRegisterResponse
DECL|method|registerApplicationMasterForDistributedScheduling ( RegisterApplicationMasterRequest request)
name|registerApplicationMasterForDistributedScheduling
parameter_list|(
name|RegisterApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RegisterApplicationMasterResponse
name|response
init|=
name|registerApplicationMaster
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|DistSchedRegisterResponse
name|dsResp
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|DistSchedRegisterResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|dsResp
operator|.
name|setRegisterResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setMinAllocatableCapabilty
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MIN_MEMORY
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MIN_MEMORY_DEFAULT
argument_list|)
argument_list|,
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MIN_VCORES
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MIN_VCORES_DEFAULT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setMaxAllocatableCapabilty
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MAX_MEMORY
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MAX_MEMORY_DEFAULT
argument_list|)
argument_list|,
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MAX_VCORES
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_MAX_VCORES_DEFAULT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setIncrAllocatableCapabilty
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_INCR_MEMORY
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_INCR_MEMORY_DEFAULT
argument_list|)
argument_list|,
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_INCR_VCORES
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_INCR_VCORES_DEFAULT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setContainerTokenExpiryInterval
argument_list|(
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS
argument_list|,
name|YarnConfiguration
operator|.
name|DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS_DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setContainerIdStart
argument_list|(
name|this
operator|.
name|rmContext
operator|.
name|getEpoch
argument_list|()
operator|<<
name|ResourceManager
operator|.
name|EPOCH_BIT_SHIFT
argument_list|)
expr_stmt|;
comment|// Set nodes to be used for scheduling
comment|// TODO: The actual computation of the list will happen in YARN-4412
comment|// TODO: Till then, send the complete list
name|dsResp
operator|.
name|setNodesForScheduling
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|rmContext
operator|.
name|getRMNodes
argument_list|()
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|dsResp
return|;
block|}
annotation|@
name|Override
DECL|method|allocateForDistributedScheduling (AllocateRequest request)
specifier|public
name|DistSchedAllocateResponse
name|allocateForDistributedScheduling
parameter_list|(
name|AllocateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|AllocateResponse
name|response
init|=
name|allocate
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|DistSchedAllocateResponse
name|dsResp
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|DistSchedAllocateResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|dsResp
operator|.
name|setAllocateResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|dsResp
operator|.
name|setNodesForScheduling
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|rmContext
operator|.
name|getRMNodes
argument_list|()
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|dsResp
return|;
block|}
block|}
end_class

end_unit

