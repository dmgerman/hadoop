begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.recovery.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
operator|.
name|records
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Stable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerResourceManagerServiceProtos
operator|.
name|ApplicationStateDataProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
operator|.
name|RMStateStore
operator|.
name|ApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMAppState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * Contains all the state data that needs to be stored persistently   * for an Application  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|ApplicationStateData
specifier|public
specifier|abstract
class|class
name|ApplicationStateData
block|{
DECL|method|newInstance (long submitTime, long startTime, String user, ApplicationSubmissionContext submissionContext, RMAppState state, String diagnostics, long finishTime)
specifier|public
specifier|static
name|ApplicationStateData
name|newInstance
parameter_list|(
name|long
name|submitTime
parameter_list|,
name|long
name|startTime
parameter_list|,
name|String
name|user
parameter_list|,
name|ApplicationSubmissionContext
name|submissionContext
parameter_list|,
name|RMAppState
name|state
parameter_list|,
name|String
name|diagnostics
parameter_list|,
name|long
name|finishTime
parameter_list|)
block|{
name|ApplicationStateData
name|appState
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationStateData
operator|.
name|class
argument_list|)
decl_stmt|;
name|appState
operator|.
name|setSubmitTime
argument_list|(
name|submitTime
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setStartTime
argument_list|(
name|startTime
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setApplicationSubmissionContext
argument_list|(
name|submissionContext
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setState
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setDiagnostics
argument_list|(
name|diagnostics
argument_list|)
expr_stmt|;
name|appState
operator|.
name|setFinishTime
argument_list|(
name|finishTime
argument_list|)
expr_stmt|;
return|return
name|appState
return|;
block|}
DECL|method|newInstance ( ApplicationState appState)
specifier|public
specifier|static
name|ApplicationStateData
name|newInstance
parameter_list|(
name|ApplicationState
name|appState
parameter_list|)
block|{
return|return
name|newInstance
argument_list|(
name|appState
operator|.
name|getSubmitTime
argument_list|()
argument_list|,
name|appState
operator|.
name|getStartTime
argument_list|()
argument_list|,
name|appState
operator|.
name|getUser
argument_list|()
argument_list|,
name|appState
operator|.
name|getApplicationSubmissionContext
argument_list|()
argument_list|,
name|appState
operator|.
name|getState
argument_list|()
argument_list|,
name|appState
operator|.
name|getDiagnostics
argument_list|()
argument_list|,
name|appState
operator|.
name|getFinishTime
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getProto ()
specifier|public
specifier|abstract
name|ApplicationStateDataProto
name|getProto
parameter_list|()
function_decl|;
comment|/**    * The time at which the application was received by the Resource Manager    * @return submitTime    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getSubmitTime ()
specifier|public
specifier|abstract
name|long
name|getSubmitTime
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setSubmitTime (long submitTime)
specifier|public
specifier|abstract
name|void
name|setSubmitTime
parameter_list|(
name|long
name|submitTime
parameter_list|)
function_decl|;
comment|/**    * Get the<em>start time</em> of the application.    * @return<em>start time</em> of the application    */
annotation|@
name|Public
annotation|@
name|Stable
DECL|method|getStartTime ()
specifier|public
specifier|abstract
name|long
name|getStartTime
parameter_list|()
function_decl|;
annotation|@
name|Private
annotation|@
name|Unstable
DECL|method|setStartTime (long startTime)
specifier|public
specifier|abstract
name|void
name|setStartTime
parameter_list|(
name|long
name|startTime
parameter_list|)
function_decl|;
comment|/**    * The application submitter    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setUser (String user)
specifier|public
specifier|abstract
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getUser ()
specifier|public
specifier|abstract
name|String
name|getUser
parameter_list|()
function_decl|;
comment|/**    * The {@link ApplicationSubmissionContext} for the application    * {@link ApplicationId} can be obtained from the this    * @return ApplicationSubmissionContext    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getApplicationSubmissionContext ()
specifier|public
specifier|abstract
name|ApplicationSubmissionContext
name|getApplicationSubmissionContext
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setApplicationSubmissionContext ( ApplicationSubmissionContext context)
specifier|public
specifier|abstract
name|void
name|setApplicationSubmissionContext
parameter_list|(
name|ApplicationSubmissionContext
name|context
parameter_list|)
function_decl|;
comment|/**    * Get the final state of the application.    * @return the final state of the application.    */
DECL|method|getState ()
specifier|public
specifier|abstract
name|RMAppState
name|getState
parameter_list|()
function_decl|;
DECL|method|setState (RMAppState state)
specifier|public
specifier|abstract
name|void
name|setState
parameter_list|(
name|RMAppState
name|state
parameter_list|)
function_decl|;
comment|/**    * Get the diagnostics information for the application master.    * @return the diagnostics information for the application master.    */
DECL|method|getDiagnostics ()
specifier|public
specifier|abstract
name|String
name|getDiagnostics
parameter_list|()
function_decl|;
DECL|method|setDiagnostics (String diagnostics)
specifier|public
specifier|abstract
name|void
name|setDiagnostics
parameter_list|(
name|String
name|diagnostics
parameter_list|)
function_decl|;
comment|/**    * The finish time of the application.    * @return the finish time of the application.,    */
DECL|method|getFinishTime ()
specifier|public
specifier|abstract
name|long
name|getFinishTime
parameter_list|()
function_decl|;
DECL|method|setFinishTime (long finishTime)
specifier|public
specifier|abstract
name|void
name|setFinishTime
parameter_list|(
name|long
name|finishTime
parameter_list|)
function_decl|;
block|}
end_class

end_unit

