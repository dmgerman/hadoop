begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|activities
operator|.
name|ActivitiesUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|activities
operator|.
name|ActivityNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|RMWSConsts
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * DAO object to display request allocation detailed information.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|AppRequestAllocationInfo
specifier|public
class|class
name|AppRequestAllocationInfo
block|{
DECL|field|requestPriority
specifier|private
name|Integer
name|requestPriority
decl_stmt|;
DECL|field|allocationRequestId
specifier|private
name|Long
name|allocationRequestId
decl_stmt|;
DECL|field|allocationState
specifier|private
name|String
name|allocationState
decl_stmt|;
DECL|field|diagnostic
specifier|private
name|String
name|diagnostic
decl_stmt|;
DECL|field|children
specifier|private
name|List
argument_list|<
name|ActivityNodeInfo
argument_list|>
name|children
decl_stmt|;
DECL|method|AppRequestAllocationInfo ()
name|AppRequestAllocationInfo
parameter_list|()
block|{   }
DECL|method|AppRequestAllocationInfo (List<ActivityNode> activityNodes, RMWSConsts.ActivitiesGroupBy groupBy)
name|AppRequestAllocationInfo
parameter_list|(
name|List
argument_list|<
name|ActivityNode
argument_list|>
name|activityNodes
parameter_list|,
name|RMWSConsts
operator|.
name|ActivitiesGroupBy
name|groupBy
parameter_list|)
block|{
name|ActivityNode
name|lastActivityNode
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|activityNodes
argument_list|)
decl_stmt|;
name|this
operator|.
name|requestPriority
operator|=
name|lastActivityNode
operator|.
name|getRequestPriority
argument_list|()
expr_stmt|;
name|this
operator|.
name|allocationRequestId
operator|=
name|lastActivityNode
operator|.
name|getAllocationRequestId
argument_list|()
expr_stmt|;
name|this
operator|.
name|allocationState
operator|=
name|lastActivityNode
operator|.
name|getState
argument_list|()
operator|.
name|name
argument_list|()
expr_stmt|;
if|if
condition|(
name|lastActivityNode
operator|.
name|isRequestType
argument_list|()
operator|&&
name|lastActivityNode
operator|.
name|getDiagnostic
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|diagnostic
operator|=
name|lastActivityNode
operator|.
name|getDiagnostic
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|children
operator|=
name|ActivitiesUtils
operator|.
name|getRequestActivityNodeInfos
argument_list|(
name|activityNodes
argument_list|,
name|groupBy
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestPriority ()
specifier|public
name|Integer
name|getRequestPriority
parameter_list|()
block|{
return|return
name|requestPriority
return|;
block|}
DECL|method|getAllocationRequestId ()
specifier|public
name|Long
name|getAllocationRequestId
parameter_list|()
block|{
return|return
name|allocationRequestId
return|;
block|}
DECL|method|getAllocationState ()
specifier|public
name|String
name|getAllocationState
parameter_list|()
block|{
return|return
name|allocationState
return|;
block|}
DECL|method|getChildren ()
specifier|public
name|List
argument_list|<
name|ActivityNodeInfo
argument_list|>
name|getChildren
parameter_list|()
block|{
return|return
name|children
return|;
block|}
DECL|method|getDiagnostic ()
specifier|public
name|String
name|getDiagnostic
parameter_list|()
block|{
return|return
name|diagnostic
return|;
block|}
block|}
end_class

end_unit

