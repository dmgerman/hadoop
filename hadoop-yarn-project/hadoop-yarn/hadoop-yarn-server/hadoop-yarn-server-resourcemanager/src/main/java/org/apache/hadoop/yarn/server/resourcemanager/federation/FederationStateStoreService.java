begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.federation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|federation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|retry
operator|.
name|RetryPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|concurrent
operator|.
name|HadoopExecutors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|FederationStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|AddApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|AddApplicationHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|DeleteApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|DeleteApplicationHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationsHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationsHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPoliciesConfigurationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPoliciesConfigurationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPolicyConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPolicyConfigurationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClustersInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClustersInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SetSubClusterPolicyConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SetSubClusterPolicyConfigurationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterDeregisterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterDeregisterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterHeartbeatRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterHeartbeatResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterRegisterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterRegisterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|UpdateApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|UpdateApplicationHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|utils
operator|.
name|FederationStateStoreFacade
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|records
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|util
operator|.
name|WebAppUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * Implements {@link FederationStateStore} and provides a service for  * participating in the federation membership.  */
end_comment

begin_class
DECL|class|FederationStateStoreService
specifier|public
class|class
name|FederationStateStoreService
extends|extends
name|AbstractService
implements|implements
name|FederationStateStore
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FederationStateStoreService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|config
specifier|private
name|Configuration
name|config
decl_stmt|;
DECL|field|scheduledExecutorService
specifier|private
name|ScheduledExecutorService
name|scheduledExecutorService
decl_stmt|;
DECL|field|stateStoreHeartbeat
specifier|private
name|FederationStateStoreHeartbeat
name|stateStoreHeartbeat
decl_stmt|;
DECL|field|stateStoreClient
specifier|private
name|FederationStateStore
name|stateStoreClient
init|=
literal|null
decl_stmt|;
DECL|field|subClusterId
specifier|private
name|SubClusterId
name|subClusterId
decl_stmt|;
DECL|field|heartbeatInterval
specifier|private
name|long
name|heartbeatInterval
decl_stmt|;
DECL|field|rmContext
specifier|private
name|RMContext
name|rmContext
decl_stmt|;
DECL|method|FederationStateStoreService (RMContext rmContext)
specifier|public
name|FederationStateStoreService
parameter_list|(
name|RMContext
name|rmContext
parameter_list|)
block|{
name|super
argument_list|(
name|FederationStateStoreService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"FederationStateStoreService initialized"
argument_list|)
expr_stmt|;
name|this
operator|.
name|rmContext
operator|=
name|rmContext
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|config
operator|=
name|conf
expr_stmt|;
name|RetryPolicy
name|retryPolicy
init|=
name|FederationStateStoreFacade
operator|.
name|createRetryPolicy
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|this
operator|.
name|stateStoreClient
operator|=
operator|(
name|FederationStateStore
operator|)
name|FederationStateStoreFacade
operator|.
name|createRetryInstance
argument_list|(
name|conf
argument_list|,
name|YarnConfiguration
operator|.
name|FEDERATION_STATESTORE_CLIENT_CLASS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_FEDERATION_STATESTORE_CLIENT_CLASS
argument_list|,
name|FederationStateStore
operator|.
name|class
argument_list|,
name|retryPolicy
argument_list|)
expr_stmt|;
name|this
operator|.
name|stateStoreClient
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Initialized state store client class"
argument_list|)
expr_stmt|;
name|this
operator|.
name|subClusterId
operator|=
name|SubClusterId
operator|.
name|newInstance
argument_list|(
name|YarnConfiguration
operator|.
name|getClusterId
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|heartbeatInterval
operator|=
name|conf
operator|.
name|getLong
argument_list|(
name|YarnConfiguration
operator|.
name|FEDERATION_STATESTORE_HEARTBEAT_INTERVAL_SECS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_FEDERATION_STATESTORE_HEARTBEAT_INTERVAL_SECS
argument_list|)
expr_stmt|;
if|if
condition|(
name|heartbeatInterval
operator|<=
literal|0
condition|)
block|{
name|heartbeatInterval
operator|=
name|YarnConfiguration
operator|.
name|DEFAULT_FEDERATION_STATESTORE_HEARTBEAT_INTERVAL_SECS
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Initialized federation membership service."
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|registerAndInitializeHeartbeat
argument_list|()
expr_stmt|;
name|super
operator|.
name|serviceStart
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
name|Exception
name|ex
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|this
operator|.
name|scheduledExecutorService
operator|!=
literal|null
operator|&&
operator|!
name|this
operator|.
name|scheduledExecutorService
operator|.
name|isShutdown
argument_list|()
condition|)
block|{
name|this
operator|.
name|scheduledExecutorService
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Stopped federation membership heartbeat"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to shutdown ScheduledExecutorService"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|ex
operator|=
name|e
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|stateStoreClient
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|deregisterSubCluster
argument_list|(
name|SubClusterDeregisterRequest
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|SubClusterState
operator|.
name|SC_UNREGISTERED
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|this
operator|.
name|stateStoreClient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|ex
operator|!=
literal|null
condition|)
block|{
throw|throw
name|ex
throw|;
block|}
block|}
comment|// Return a client accessible string representation of the service address.
DECL|method|getServiceAddress (InetSocketAddress address)
specifier|private
name|String
name|getServiceAddress
parameter_list|(
name|InetSocketAddress
name|address
parameter_list|)
block|{
name|InetSocketAddress
name|socketAddress
init|=
name|NetUtils
operator|.
name|getConnectAddress
argument_list|(
name|address
argument_list|)
decl_stmt|;
return|return
name|socketAddress
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
operator|+
literal|":"
operator|+
name|socketAddress
operator|.
name|getPort
argument_list|()
return|;
block|}
DECL|method|registerAndInitializeHeartbeat ()
specifier|private
name|void
name|registerAndInitializeHeartbeat
parameter_list|()
block|{
name|String
name|clientRMAddress
init|=
name|getServiceAddress
argument_list|(
name|rmContext
operator|.
name|getClientRMService
argument_list|()
operator|.
name|getBindAddress
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|amRMAddress
init|=
name|getServiceAddress
argument_list|(
name|rmContext
operator|.
name|getApplicationMasterService
argument_list|()
operator|.
name|getBindAddress
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|rmAdminAddress
init|=
name|getServiceAddress
argument_list|(
name|config
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADMIN_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_ADMIN_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_ADMIN_PORT
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|webAppAddress
init|=
name|WebAppUtils
operator|.
name|getResolvedRemoteRMWebAppURLWithoutScheme
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|SubClusterInfo
name|subClusterInfo
init|=
name|SubClusterInfo
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|amRMAddress
argument_list|,
name|clientRMAddress
argument_list|,
name|rmAdminAddress
argument_list|,
name|webAppAddress
argument_list|,
name|SubClusterState
operator|.
name|SC_NEW
argument_list|,
name|ResourceManager
operator|.
name|getClusterTimeStamp
argument_list|()
argument_list|,
literal|""
argument_list|)
decl_stmt|;
try|try
block|{
name|registerSubCluster
argument_list|(
name|SubClusterRegisterRequest
operator|.
name|newInstance
argument_list|(
name|subClusterInfo
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Successfully registered for federation subcluster: {}"
argument_list|,
name|subClusterInfo
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|YarnRuntimeException
argument_list|(
literal|"Failed to register Federation membership with the StateStore"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|stateStoreHeartbeat
operator|=
operator|new
name|FederationStateStoreHeartbeat
argument_list|(
name|subClusterId
argument_list|,
name|stateStoreClient
argument_list|,
name|rmContext
operator|.
name|getScheduler
argument_list|()
argument_list|)
expr_stmt|;
name|scheduledExecutorService
operator|=
name|HadoopExecutors
operator|.
name|newSingleThreadScheduledExecutor
argument_list|()
expr_stmt|;
name|scheduledExecutorService
operator|.
name|scheduleWithFixedDelay
argument_list|(
name|stateStoreHeartbeat
argument_list|,
name|heartbeatInterval
argument_list|,
name|heartbeatInterval
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Started federation membership heartbeat with interval: {}"
argument_list|,
name|heartbeatInterval
argument_list|)
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getStateStoreClient ()
specifier|public
name|FederationStateStore
name|getStateStoreClient
parameter_list|()
block|{
return|return
name|stateStoreClient
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getStateStoreHeartbeatThread ()
specifier|public
name|FederationStateStoreHeartbeat
name|getStateStoreHeartbeatThread
parameter_list|()
block|{
return|return
name|stateStoreHeartbeat
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentVersion ()
specifier|public
name|Version
name|getCurrentVersion
parameter_list|()
block|{
return|return
name|stateStoreClient
operator|.
name|getCurrentVersion
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|loadVersion ()
specifier|public
name|Version
name|loadVersion
parameter_list|()
block|{
return|return
name|stateStoreClient
operator|.
name|getCurrentVersion
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPolicyConfiguration ( GetSubClusterPolicyConfigurationRequest request)
specifier|public
name|GetSubClusterPolicyConfigurationResponse
name|getPolicyConfiguration
parameter_list|(
name|GetSubClusterPolicyConfigurationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getPolicyConfiguration
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setPolicyConfiguration ( SetSubClusterPolicyConfigurationRequest request)
specifier|public
name|SetSubClusterPolicyConfigurationResponse
name|setPolicyConfiguration
parameter_list|(
name|SetSubClusterPolicyConfigurationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|setPolicyConfiguration
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPoliciesConfigurations ( GetSubClusterPoliciesConfigurationsRequest request)
specifier|public
name|GetSubClusterPoliciesConfigurationsResponse
name|getPoliciesConfigurations
parameter_list|(
name|GetSubClusterPoliciesConfigurationsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getPoliciesConfigurations
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|registerSubCluster ( SubClusterRegisterRequest registerSubClusterRequest)
specifier|public
name|SubClusterRegisterResponse
name|registerSubCluster
parameter_list|(
name|SubClusterRegisterRequest
name|registerSubClusterRequest
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|registerSubCluster
argument_list|(
name|registerSubClusterRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deregisterSubCluster ( SubClusterDeregisterRequest subClusterDeregisterRequest)
specifier|public
name|SubClusterDeregisterResponse
name|deregisterSubCluster
parameter_list|(
name|SubClusterDeregisterRequest
name|subClusterDeregisterRequest
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|deregisterSubCluster
argument_list|(
name|subClusterDeregisterRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|subClusterHeartbeat ( SubClusterHeartbeatRequest subClusterHeartbeatRequest)
specifier|public
name|SubClusterHeartbeatResponse
name|subClusterHeartbeat
parameter_list|(
name|SubClusterHeartbeatRequest
name|subClusterHeartbeatRequest
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|subClusterHeartbeat
argument_list|(
name|subClusterHeartbeatRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getSubCluster ( GetSubClusterInfoRequest subClusterRequest)
specifier|public
name|GetSubClusterInfoResponse
name|getSubCluster
parameter_list|(
name|GetSubClusterInfoRequest
name|subClusterRequest
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getSubCluster
argument_list|(
name|subClusterRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getSubClusters ( GetSubClustersInfoRequest subClustersRequest)
specifier|public
name|GetSubClustersInfoResponse
name|getSubClusters
parameter_list|(
name|GetSubClustersInfoRequest
name|subClustersRequest
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getSubClusters
argument_list|(
name|subClustersRequest
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addApplicationHomeSubCluster ( AddApplicationHomeSubClusterRequest request)
specifier|public
name|AddApplicationHomeSubClusterResponse
name|addApplicationHomeSubCluster
parameter_list|(
name|AddApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|addApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateApplicationHomeSubCluster ( UpdateApplicationHomeSubClusterRequest request)
specifier|public
name|UpdateApplicationHomeSubClusterResponse
name|updateApplicationHomeSubCluster
parameter_list|(
name|UpdateApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|updateApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationHomeSubCluster ( GetApplicationHomeSubClusterRequest request)
specifier|public
name|GetApplicationHomeSubClusterResponse
name|getApplicationHomeSubCluster
parameter_list|(
name|GetApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationsHomeSubCluster ( GetApplicationsHomeSubClusterRequest request)
specifier|public
name|GetApplicationsHomeSubClusterResponse
name|getApplicationsHomeSubCluster
parameter_list|(
name|GetApplicationsHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|getApplicationsHomeSubCluster
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteApplicationHomeSubCluster ( DeleteApplicationHomeSubClusterRequest request)
specifier|public
name|DeleteApplicationHomeSubClusterResponse
name|deleteApplicationHomeSubCluster
parameter_list|(
name|DeleteApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
block|{
return|return
name|stateStoreClient
operator|.
name|deleteApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
return|;
block|}
block|}
end_class

end_unit

