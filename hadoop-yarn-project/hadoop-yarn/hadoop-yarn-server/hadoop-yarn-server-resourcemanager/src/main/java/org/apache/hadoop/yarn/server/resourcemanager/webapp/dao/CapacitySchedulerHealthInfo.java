begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|SchedulerHealth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|CapacitySchedulerHealthInfo
specifier|public
class|class
name|CapacitySchedulerHealthInfo
block|{
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|OperationInformation
specifier|public
specifier|static
class|class
name|OperationInformation
block|{
DECL|field|nodeId
name|String
name|nodeId
decl_stmt|;
DECL|field|containerId
name|String
name|containerId
decl_stmt|;
DECL|field|queue
name|String
name|queue
decl_stmt|;
DECL|method|OperationInformation ()
name|OperationInformation
parameter_list|()
block|{     }
DECL|method|OperationInformation (SchedulerHealth.DetailedInformation di)
name|OperationInformation
parameter_list|(
name|SchedulerHealth
operator|.
name|DetailedInformation
name|di
parameter_list|)
block|{
name|this
operator|.
name|nodeId
operator|=
name|di
operator|.
name|getNodeId
argument_list|()
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|di
operator|.
name|getNodeId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|this
operator|.
name|containerId
operator|=
name|di
operator|.
name|getContainerId
argument_list|()
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|di
operator|.
name|getContainerId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|this
operator|.
name|queue
operator|=
name|di
operator|.
name|getQueue
argument_list|()
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|di
operator|.
name|getQueue
argument_list|()
expr_stmt|;
block|}
DECL|method|getNodeId ()
specifier|public
name|String
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
DECL|method|getContainerId ()
specifier|public
name|String
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
block|}
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|LastRunDetails
specifier|public
specifier|static
class|class
name|LastRunDetails
block|{
DECL|field|operation
name|String
name|operation
decl_stmt|;
DECL|field|count
name|long
name|count
decl_stmt|;
DECL|field|resources
name|ResourceInfo
name|resources
decl_stmt|;
DECL|method|LastRunDetails ()
name|LastRunDetails
parameter_list|()
block|{     }
DECL|method|LastRunDetails (String operation, long count, Resource resource)
name|LastRunDetails
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|count
parameter_list|,
name|Resource
name|resource
parameter_list|)
block|{
name|this
operator|.
name|operation
operator|=
name|operation
expr_stmt|;
name|this
operator|.
name|count
operator|=
name|count
expr_stmt|;
name|this
operator|.
name|resources
operator|=
operator|new
name|ResourceInfo
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
DECL|method|getOperation ()
specifier|public
name|String
name|getOperation
parameter_list|()
block|{
return|return
name|operation
return|;
block|}
DECL|method|getCount ()
specifier|public
name|long
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
DECL|method|getResources ()
specifier|public
name|ResourceInfo
name|getResources
parameter_list|()
block|{
return|return
name|resources
return|;
block|}
block|}
DECL|field|lastrun
name|long
name|lastrun
decl_stmt|;
DECL|field|operationsInfo
name|Map
argument_list|<
name|String
argument_list|,
name|OperationInformation
argument_list|>
name|operationsInfo
decl_stmt|;
DECL|field|lastRunDetails
name|List
argument_list|<
name|LastRunDetails
argument_list|>
name|lastRunDetails
decl_stmt|;
DECL|method|CapacitySchedulerHealthInfo ()
name|CapacitySchedulerHealthInfo
parameter_list|()
block|{   }
DECL|method|getLastrun ()
specifier|public
name|long
name|getLastrun
parameter_list|()
block|{
return|return
name|lastrun
return|;
block|}
DECL|method|CapacitySchedulerHealthInfo (CapacityScheduler cs)
name|CapacitySchedulerHealthInfo
parameter_list|(
name|CapacityScheduler
name|cs
parameter_list|)
block|{
name|SchedulerHealth
name|ht
init|=
name|cs
operator|.
name|getSchedulerHealth
argument_list|()
decl_stmt|;
name|lastrun
operator|=
name|ht
operator|.
name|getLastSchedulerRunTime
argument_list|()
expr_stmt|;
name|operationsInfo
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|operationsInfo
operator|.
name|put
argument_list|(
literal|"last-allocation"
argument_list|,
operator|new
name|OperationInformation
argument_list|(
name|ht
operator|.
name|getLastAllocationDetails
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|operationsInfo
operator|.
name|put
argument_list|(
literal|"last-release"
argument_list|,
operator|new
name|OperationInformation
argument_list|(
name|ht
operator|.
name|getLastReleaseDetails
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|operationsInfo
operator|.
name|put
argument_list|(
literal|"last-preemption"
argument_list|,
operator|new
name|OperationInformation
argument_list|(
name|ht
operator|.
name|getLastPreemptionDetails
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|operationsInfo
operator|.
name|put
argument_list|(
literal|"last-reservation"
argument_list|,
operator|new
name|OperationInformation
argument_list|(
name|ht
operator|.
name|getLastReservationDetails
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lastRunDetails
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|lastRunDetails
operator|.
name|add
argument_list|(
operator|new
name|LastRunDetails
argument_list|(
literal|"releases"
argument_list|,
name|ht
operator|.
name|getReleaseCount
argument_list|()
argument_list|,
name|ht
operator|.
name|getResourcesReleased
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lastRunDetails
operator|.
name|add
argument_list|(
operator|new
name|LastRunDetails
argument_list|(
literal|"allocations"
argument_list|,
name|ht
operator|.
name|getAllocationCount
argument_list|()
argument_list|,
name|ht
operator|.
name|getResourcesAllocated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lastRunDetails
operator|.
name|add
argument_list|(
operator|new
name|LastRunDetails
argument_list|(
literal|"reservations"
argument_list|,
name|ht
operator|.
name|getReservationCount
argument_list|()
argument_list|,
name|ht
operator|.
name|getResourcesReserved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

