begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_comment
comment|/**  * Factory class for creating instances of  * {@link ConfigurationMutationACLPolicy}.  */
end_comment

begin_class
DECL|class|ConfigurationMutationACLPolicyFactory
specifier|public
specifier|final
class|class
name|ConfigurationMutationACLPolicyFactory
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ConfigurationMutationACLPolicyFactory
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|ConfigurationMutationACLPolicyFactory ()
specifier|private
name|ConfigurationMutationACLPolicyFactory
parameter_list|()
block|{
comment|// Unused.
block|}
DECL|method|getPolicy (Configuration conf)
specifier|public
specifier|static
name|ConfigurationMutationACLPolicy
name|getPolicy
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|Class
argument_list|<
name|?
extends|extends
name|ConfigurationMutationACLPolicy
argument_list|>
name|policyClass
init|=
name|conf
operator|.
name|getClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER_MUTATION_ACL_POLICY_CLASS
argument_list|,
name|DefaultConfigurationMutationACLPolicy
operator|.
name|class
argument_list|,
name|ConfigurationMutationACLPolicy
operator|.
name|class
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Using ConfigurationMutationACLPolicy implementation - "
operator|+
name|policyClass
argument_list|)
expr_stmt|;
return|return
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|policyClass
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

