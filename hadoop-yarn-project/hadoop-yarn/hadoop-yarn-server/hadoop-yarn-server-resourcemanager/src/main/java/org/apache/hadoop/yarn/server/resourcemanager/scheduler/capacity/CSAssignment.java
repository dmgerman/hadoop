begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmcontainer
operator|.
name|RMContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|common
operator|.
name|fica
operator|.
name|FiCaSchedulerApp
import|;
end_import

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|CSAssignment
specifier|public
class|class
name|CSAssignment
block|{
DECL|field|resource
specifier|final
specifier|private
name|Resource
name|resource
decl_stmt|;
DECL|field|type
specifier|private
name|NodeType
name|type
decl_stmt|;
DECL|field|excessReservation
specifier|private
specifier|final
name|RMContainer
name|excessReservation
decl_stmt|;
DECL|field|application
specifier|private
specifier|final
name|FiCaSchedulerApp
name|application
decl_stmt|;
DECL|method|CSAssignment (Resource resource, NodeType type)
specifier|public
name|CSAssignment
parameter_list|(
name|Resource
name|resource
parameter_list|,
name|NodeType
name|type
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|application
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|excessReservation
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|CSAssignment (FiCaSchedulerApp application, RMContainer excessReservation)
specifier|public
name|CSAssignment
parameter_list|(
name|FiCaSchedulerApp
name|application
parameter_list|,
name|RMContainer
name|excessReservation
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|excessReservation
operator|.
name|getContainer
argument_list|()
operator|.
name|getResource
argument_list|()
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|NodeType
operator|.
name|NODE_LOCAL
expr_stmt|;
name|this
operator|.
name|application
operator|=
name|application
expr_stmt|;
name|this
operator|.
name|excessReservation
operator|=
name|excessReservation
expr_stmt|;
block|}
DECL|method|getResource ()
specifier|public
name|Resource
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
DECL|method|getType ()
specifier|public
name|NodeType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|setType (NodeType type)
specifier|public
name|void
name|setType
parameter_list|(
name|NodeType
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
DECL|method|getApplication ()
specifier|public
name|FiCaSchedulerApp
name|getApplication
parameter_list|()
block|{
return|return
name|application
return|;
block|}
DECL|method|getExcessReservation ()
specifier|public
name|RMContainer
name|getExcessReservation
parameter_list|()
block|{
return|return
name|excessReservation
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|resource
operator|.
name|getMemory
argument_list|()
operator|+
literal|":"
operator|+
name|type
return|;
block|}
block|}
end_class

end_unit

