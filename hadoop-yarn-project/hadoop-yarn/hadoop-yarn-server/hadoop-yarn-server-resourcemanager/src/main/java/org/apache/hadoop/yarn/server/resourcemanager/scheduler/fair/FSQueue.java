begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_comment
comment|/**  * A queue containing several applications.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|FSQueue
specifier|public
class|class
name|FSQueue
block|{
comment|/** Queue name. */
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
comment|/** Applications in this specific queue; does not include children queues' jobs. */
DECL|field|applications
specifier|private
name|Collection
argument_list|<
name|FSSchedulerApp
argument_list|>
name|applications
init|=
operator|new
name|ArrayList
argument_list|<
name|FSSchedulerApp
argument_list|>
argument_list|()
decl_stmt|;
comment|/** Scheduling mode for jobs inside the queue (fair or FIFO) */
DECL|field|schedulingMode
specifier|private
name|SchedulingMode
name|schedulingMode
decl_stmt|;
DECL|field|scheduler
specifier|private
name|FairScheduler
name|scheduler
decl_stmt|;
DECL|field|queueSchedulable
specifier|private
name|FSQueueSchedulable
name|queueSchedulable
decl_stmt|;
DECL|method|FSQueue (FairScheduler scheduler, String name)
specifier|public
name|FSQueue
parameter_list|(
name|FairScheduler
name|scheduler
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|queueSchedulable
operator|=
operator|new
name|FSQueueSchedulable
argument_list|(
name|scheduler
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|scheduler
operator|=
name|scheduler
expr_stmt|;
block|}
DECL|method|getApplications ()
specifier|public
name|Collection
argument_list|<
name|FSSchedulerApp
argument_list|>
name|getApplications
parameter_list|()
block|{
return|return
name|applications
return|;
block|}
DECL|method|addApp (FSSchedulerApp app)
specifier|public
name|void
name|addApp
parameter_list|(
name|FSSchedulerApp
name|app
parameter_list|)
block|{
name|applications
operator|.
name|add
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|AppSchedulable
name|appSchedulable
init|=
operator|new
name|AppSchedulable
argument_list|(
name|scheduler
argument_list|,
name|app
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|app
operator|.
name|setAppSchedulable
argument_list|(
name|appSchedulable
argument_list|)
expr_stmt|;
name|queueSchedulable
operator|.
name|addApp
argument_list|(
name|appSchedulable
argument_list|)
expr_stmt|;
block|}
DECL|method|removeJob (FSSchedulerApp app)
specifier|public
name|void
name|removeJob
parameter_list|(
name|FSSchedulerApp
name|app
parameter_list|)
block|{
name|applications
operator|.
name|remove
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|queueSchedulable
operator|.
name|removeApp
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getSchedulingMode ()
specifier|public
name|SchedulingMode
name|getSchedulingMode
parameter_list|()
block|{
return|return
name|schedulingMode
return|;
block|}
DECL|method|setSchedulingMode (SchedulingMode schedulingMode)
specifier|public
name|void
name|setSchedulingMode
parameter_list|(
name|SchedulingMode
name|schedulingMode
parameter_list|)
block|{
name|this
operator|.
name|schedulingMode
operator|=
name|schedulingMode
expr_stmt|;
block|}
DECL|method|getQueueSchedulable ()
specifier|public
name|FSQueueSchedulable
name|getQueueSchedulable
parameter_list|()
block|{
return|return
name|queueSchedulable
return|;
block|}
block|}
end_class

end_unit

