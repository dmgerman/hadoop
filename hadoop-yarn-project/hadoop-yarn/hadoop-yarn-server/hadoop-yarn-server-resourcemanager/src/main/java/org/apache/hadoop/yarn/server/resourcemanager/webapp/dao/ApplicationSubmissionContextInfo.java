begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_comment
comment|/**  * Simple class to allow users to send information required to create an  * ApplicationSubmissionContext which can then be used to submit an app  *   */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"application-submission-context"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ApplicationSubmissionContextInfo
specifier|public
class|class
name|ApplicationSubmissionContextInfo
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"application-id"
argument_list|)
DECL|field|applicationId
name|String
name|applicationId
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"application-name"
argument_list|)
DECL|field|applicationName
name|String
name|applicationName
decl_stmt|;
DECL|field|queue
name|String
name|queue
decl_stmt|;
DECL|field|priority
name|int
name|priority
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"am-container-spec"
argument_list|)
DECL|field|containerInfo
name|ContainerLaunchContextInfo
name|containerInfo
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"unmanaged-AM"
argument_list|)
DECL|field|isUnmanagedAM
name|boolean
name|isUnmanagedAM
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"cancel-tokens-when-complete"
argument_list|)
DECL|field|cancelTokensWhenComplete
name|boolean
name|cancelTokensWhenComplete
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"max-app-attempts"
argument_list|)
DECL|field|maxAppAttempts
name|int
name|maxAppAttempts
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"resource"
argument_list|)
DECL|field|resource
name|ResourceInfo
name|resource
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"application-type"
argument_list|)
DECL|field|applicationType
name|String
name|applicationType
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"keep-containers-across-application-attempts"
argument_list|)
DECL|field|keepContainers
name|boolean
name|keepContainers
decl_stmt|;
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"application-tags"
argument_list|)
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"tag"
argument_list|)
DECL|field|tags
name|Set
argument_list|<
name|String
argument_list|>
name|tags
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"app-node-label-expression"
argument_list|)
DECL|field|appNodeLabelExpression
name|String
name|appNodeLabelExpression
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"am-container-node-label-expression"
argument_list|)
DECL|field|amContainerNodeLabelExpression
name|String
name|amContainerNodeLabelExpression
decl_stmt|;
DECL|method|ApplicationSubmissionContextInfo ()
specifier|public
name|ApplicationSubmissionContextInfo
parameter_list|()
block|{
name|applicationId
operator|=
literal|""
expr_stmt|;
name|applicationName
operator|=
literal|""
expr_stmt|;
name|containerInfo
operator|=
operator|new
name|ContainerLaunchContextInfo
argument_list|()
expr_stmt|;
name|resource
operator|=
operator|new
name|ResourceInfo
argument_list|()
expr_stmt|;
name|priority
operator|=
name|Priority
operator|.
name|UNDEFINED
operator|.
name|getPriority
argument_list|()
expr_stmt|;
name|isUnmanagedAM
operator|=
literal|false
expr_stmt|;
name|cancelTokensWhenComplete
operator|=
literal|true
expr_stmt|;
name|keepContainers
operator|=
literal|false
expr_stmt|;
name|applicationType
operator|=
literal|""
expr_stmt|;
name|tags
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|appNodeLabelExpression
operator|=
literal|""
expr_stmt|;
name|amContainerNodeLabelExpression
operator|=
literal|""
expr_stmt|;
block|}
DECL|method|getApplicationId ()
specifier|public
name|String
name|getApplicationId
parameter_list|()
block|{
return|return
name|applicationId
return|;
block|}
DECL|method|getApplicationName ()
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationName
return|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
DECL|method|getPriority ()
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
DECL|method|getContainerLaunchContextInfo ()
specifier|public
name|ContainerLaunchContextInfo
name|getContainerLaunchContextInfo
parameter_list|()
block|{
return|return
name|containerInfo
return|;
block|}
DECL|method|getUnmanagedAM ()
specifier|public
name|boolean
name|getUnmanagedAM
parameter_list|()
block|{
return|return
name|isUnmanagedAM
return|;
block|}
DECL|method|getCancelTokensWhenComplete ()
specifier|public
name|boolean
name|getCancelTokensWhenComplete
parameter_list|()
block|{
return|return
name|cancelTokensWhenComplete
return|;
block|}
DECL|method|getMaxAppAttempts ()
specifier|public
name|int
name|getMaxAppAttempts
parameter_list|()
block|{
return|return
name|maxAppAttempts
return|;
block|}
DECL|method|getResource ()
specifier|public
name|ResourceInfo
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
DECL|method|getApplicationType ()
specifier|public
name|String
name|getApplicationType
parameter_list|()
block|{
return|return
name|applicationType
return|;
block|}
DECL|method|getKeepContainersAcrossApplicationAttempts ()
specifier|public
name|boolean
name|getKeepContainersAcrossApplicationAttempts
parameter_list|()
block|{
return|return
name|keepContainers
return|;
block|}
DECL|method|getApplicationTags ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getApplicationTags
parameter_list|()
block|{
return|return
name|tags
return|;
block|}
DECL|method|getAppNodeLabelExpression ()
specifier|public
name|String
name|getAppNodeLabelExpression
parameter_list|()
block|{
return|return
name|appNodeLabelExpression
return|;
block|}
DECL|method|getAMContainerNodeLabelExpression ()
specifier|public
name|String
name|getAMContainerNodeLabelExpression
parameter_list|()
block|{
return|return
name|amContainerNodeLabelExpression
return|;
block|}
DECL|method|setApplicationId (String applicationId)
specifier|public
name|void
name|setApplicationId
parameter_list|(
name|String
name|applicationId
parameter_list|)
block|{
name|this
operator|.
name|applicationId
operator|=
name|applicationId
expr_stmt|;
block|}
DECL|method|setApplicationName (String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
DECL|method|setQueue (String queue)
specifier|public
name|void
name|setQueue
parameter_list|(
name|String
name|queue
parameter_list|)
block|{
name|this
operator|.
name|queue
operator|=
name|queue
expr_stmt|;
block|}
DECL|method|setPriority (int priority)
specifier|public
name|void
name|setPriority
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
DECL|method|setContainerLaunchContextInfo ( ContainerLaunchContextInfo containerLaunchContext)
specifier|public
name|void
name|setContainerLaunchContextInfo
parameter_list|(
name|ContainerLaunchContextInfo
name|containerLaunchContext
parameter_list|)
block|{
name|this
operator|.
name|containerInfo
operator|=
name|containerLaunchContext
expr_stmt|;
block|}
DECL|method|setUnmanagedAM (boolean isUnmanagedAM)
specifier|public
name|void
name|setUnmanagedAM
parameter_list|(
name|boolean
name|isUnmanagedAM
parameter_list|)
block|{
name|this
operator|.
name|isUnmanagedAM
operator|=
name|isUnmanagedAM
expr_stmt|;
block|}
DECL|method|setCancelTokensWhenComplete (boolean cancelTokensWhenComplete)
specifier|public
name|void
name|setCancelTokensWhenComplete
parameter_list|(
name|boolean
name|cancelTokensWhenComplete
parameter_list|)
block|{
name|this
operator|.
name|cancelTokensWhenComplete
operator|=
name|cancelTokensWhenComplete
expr_stmt|;
block|}
DECL|method|setMaxAppAttempts (int maxAppAttempts)
specifier|public
name|void
name|setMaxAppAttempts
parameter_list|(
name|int
name|maxAppAttempts
parameter_list|)
block|{
name|this
operator|.
name|maxAppAttempts
operator|=
name|maxAppAttempts
expr_stmt|;
block|}
DECL|method|setResource (ResourceInfo resource)
specifier|public
name|void
name|setResource
parameter_list|(
name|ResourceInfo
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
block|}
DECL|method|setApplicationType (String applicationType)
specifier|public
name|void
name|setApplicationType
parameter_list|(
name|String
name|applicationType
parameter_list|)
block|{
name|this
operator|.
name|applicationType
operator|=
name|applicationType
expr_stmt|;
block|}
specifier|public
name|void
DECL|method|setKeepContainersAcrossApplicationAttempts (boolean keepContainers)
name|setKeepContainersAcrossApplicationAttempts
parameter_list|(
name|boolean
name|keepContainers
parameter_list|)
block|{
name|this
operator|.
name|keepContainers
operator|=
name|keepContainers
expr_stmt|;
block|}
DECL|method|setApplicationTags (Set<String> tags)
specifier|public
name|void
name|setApplicationTags
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|tags
parameter_list|)
block|{
name|this
operator|.
name|tags
operator|=
name|tags
expr_stmt|;
block|}
DECL|method|setAppNodeLabelExpression (String appNodeLabelExpression)
specifier|public
name|void
name|setAppNodeLabelExpression
parameter_list|(
name|String
name|appNodeLabelExpression
parameter_list|)
block|{
name|this
operator|.
name|appNodeLabelExpression
operator|=
name|appNodeLabelExpression
expr_stmt|;
block|}
DECL|method|setAMContainerNodeLabelExpression (String nodeLabelExpression)
specifier|public
name|void
name|setAMContainerNodeLabelExpression
parameter_list|(
name|String
name|nodeLabelExpression
parameter_list|)
block|{
name|this
operator|.
name|amContainerNodeLabelExpression
operator|=
name|nodeLabelExpression
expr_stmt|;
block|}
block|}
end_class

end_unit

