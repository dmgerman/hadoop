begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_comment
comment|/**  * The class that encapsulates response from clusterinfo for   * updates from the node managers.  */
end_comment

begin_class
DECL|class|NodeResponse
specifier|public
class|class
name|NodeResponse
block|{
DECL|field|completed
specifier|private
specifier|final
name|List
argument_list|<
name|Container
argument_list|>
name|completed
decl_stmt|;
DECL|field|toCleanUp
specifier|private
specifier|final
name|List
argument_list|<
name|Container
argument_list|>
name|toCleanUp
decl_stmt|;
DECL|field|finishedApplications
specifier|private
specifier|final
name|List
argument_list|<
name|ApplicationId
argument_list|>
name|finishedApplications
decl_stmt|;
DECL|method|NodeResponse (List<ApplicationId> finishedApplications, List<Container> completed, List<Container> toKill)
specifier|public
name|NodeResponse
parameter_list|(
name|List
argument_list|<
name|ApplicationId
argument_list|>
name|finishedApplications
parameter_list|,
name|List
argument_list|<
name|Container
argument_list|>
name|completed
parameter_list|,
name|List
argument_list|<
name|Container
argument_list|>
name|toKill
parameter_list|)
block|{
name|this
operator|.
name|finishedApplications
operator|=
name|finishedApplications
expr_stmt|;
name|this
operator|.
name|completed
operator|=
name|completed
expr_stmt|;
name|this
operator|.
name|toCleanUp
operator|=
name|toKill
expr_stmt|;
block|}
DECL|method|getFinishedApplications ()
specifier|public
name|List
argument_list|<
name|ApplicationId
argument_list|>
name|getFinishedApplications
parameter_list|()
block|{
return|return
name|this
operator|.
name|finishedApplications
return|;
block|}
DECL|method|getCompletedContainers ()
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|getCompletedContainers
parameter_list|()
block|{
return|return
name|this
operator|.
name|completed
return|;
block|}
DECL|method|getContainersToCleanUp ()
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|getContainersToCleanUp
parameter_list|()
block|{
return|return
name|this
operator|.
name|toCleanUp
return|;
block|}
block|}
end_class

end_unit

