begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAccessType
import|;
end_import

begin_comment
comment|/**  * Simple class to allow users to send information required to create a  * ContainerLaunchContext which can then be used as part of the  * ApplicationSubmissionContext  *   */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"container-launch-context-info"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ContainerLaunchContextInfo
specifier|public
class|class
name|ContainerLaunchContextInfo
block|{
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"local-resources"
argument_list|)
DECL|field|local_resources
name|HashMap
argument_list|<
name|String
argument_list|,
name|LocalResourceInfo
argument_list|>
name|local_resources
decl_stmt|;
DECL|field|environment
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|environment
decl_stmt|;
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"commands"
argument_list|)
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"command"
argument_list|,
name|type
operator|=
name|String
operator|.
name|class
argument_list|)
DECL|field|commands
name|List
argument_list|<
name|String
argument_list|>
name|commands
decl_stmt|;
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"service-data"
argument_list|)
DECL|field|servicedata
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|servicedata
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"credentials"
argument_list|)
DECL|field|credentials
name|CredentialsInfo
name|credentials
decl_stmt|;
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"application-acls"
argument_list|)
DECL|field|acls
name|HashMap
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
decl_stmt|;
DECL|method|ContainerLaunchContextInfo ()
specifier|public
name|ContainerLaunchContextInfo
parameter_list|()
block|{
name|local_resources
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|LocalResourceInfo
argument_list|>
argument_list|()
expr_stmt|;
name|environment
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|commands
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|servicedata
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|credentials
operator|=
operator|new
name|CredentialsInfo
argument_list|()
expr_stmt|;
name|acls
operator|=
operator|new
name|HashMap
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|getResources ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|LocalResourceInfo
argument_list|>
name|getResources
parameter_list|()
block|{
return|return
name|local_resources
return|;
block|}
DECL|method|getEnvironment ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getEnvironment
parameter_list|()
block|{
return|return
name|environment
return|;
block|}
DECL|method|getCommands ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getCommands
parameter_list|()
block|{
return|return
name|commands
return|;
block|}
DECL|method|getAuxillaryServiceData ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAuxillaryServiceData
parameter_list|()
block|{
return|return
name|servicedata
return|;
block|}
DECL|method|getCredentials ()
specifier|public
name|CredentialsInfo
name|getCredentials
parameter_list|()
block|{
return|return
name|credentials
return|;
block|}
DECL|method|getAcls ()
specifier|public
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|getAcls
parameter_list|()
block|{
return|return
name|acls
return|;
block|}
DECL|method|setResources (HashMap<String, LocalResourceInfo> resources)
specifier|public
name|void
name|setResources
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|LocalResourceInfo
argument_list|>
name|resources
parameter_list|)
block|{
name|this
operator|.
name|local_resources
operator|=
name|resources
expr_stmt|;
block|}
DECL|method|setEnvironment (HashMap<String, String> environment)
specifier|public
name|void
name|setEnvironment
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|environment
parameter_list|)
block|{
name|this
operator|.
name|environment
operator|=
name|environment
expr_stmt|;
block|}
DECL|method|setCommands (List<String> commands)
specifier|public
name|void
name|setCommands
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|commands
parameter_list|)
block|{
name|this
operator|.
name|commands
operator|=
name|commands
expr_stmt|;
block|}
DECL|method|setAuxillaryServiceData (HashMap<String, String> serviceData)
specifier|public
name|void
name|setAuxillaryServiceData
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|serviceData
parameter_list|)
block|{
name|this
operator|.
name|servicedata
operator|=
name|serviceData
expr_stmt|;
block|}
DECL|method|setCredentials (CredentialsInfo credentials)
specifier|public
name|void
name|setCredentials
parameter_list|(
name|CredentialsInfo
name|credentials
parameter_list|)
block|{
name|this
operator|.
name|credentials
operator|=
name|credentials
expr_stmt|;
block|}
DECL|method|setAcls (HashMap<ApplicationAccessType, String> acls)
specifier|public
name|void
name|setAcls
parameter_list|(
name|HashMap
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
parameter_list|)
block|{
name|this
operator|.
name|acls
operator|=
name|acls
expr_stmt|;
block|}
block|}
end_class

end_unit

