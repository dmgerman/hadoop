begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_class
DECL|class|SchedulerHealth
specifier|public
class|class
name|SchedulerHealth
block|{
DECL|class|DetailedInformation
specifier|static
specifier|public
class|class
name|DetailedInformation
block|{
DECL|field|timestamp
name|long
name|timestamp
decl_stmt|;
DECL|field|nodeId
name|NodeId
name|nodeId
decl_stmt|;
DECL|field|containerId
name|ContainerId
name|containerId
decl_stmt|;
DECL|field|queue
name|String
name|queue
decl_stmt|;
DECL|method|DetailedInformation (long timestamp, NodeId nodeId, ContainerId containerId, String queue)
specifier|public
name|DetailedInformation
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
name|this
operator|.
name|queue
operator|=
name|queue
expr_stmt|;
block|}
DECL|method|getTimestamp ()
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|getNodeId ()
specifier|public
name|NodeId
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
DECL|method|getContainerId ()
specifier|public
name|ContainerId
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
block|}
DECL|enum|Operation
enum|enum
name|Operation
block|{
DECL|enumConstant|ALLOCATION
DECL|enumConstant|RELEASE
DECL|enumConstant|PREEMPTION
DECL|enumConstant|RESERVATION
DECL|enumConstant|FULFILLED_RESERVATION
name|ALLOCATION
block|,
name|RELEASE
block|,
name|PREEMPTION
block|,
name|RESERVATION
block|,
name|FULFILLED_RESERVATION
block|}
DECL|field|lastSchedulerRunTime
name|long
name|lastSchedulerRunTime
decl_stmt|;
DECL|field|lastSchedulerRunDetails
name|Map
argument_list|<
name|Operation
argument_list|,
name|Resource
argument_list|>
name|lastSchedulerRunDetails
decl_stmt|;
DECL|field|schedulerHealthDetails
name|Map
argument_list|<
name|Operation
argument_list|,
name|DetailedInformation
argument_list|>
name|schedulerHealthDetails
decl_stmt|;
DECL|field|schedulerOperationCounts
name|Map
argument_list|<
name|Operation
argument_list|,
name|Long
argument_list|>
name|schedulerOperationCounts
decl_stmt|;
comment|// this is for counts since the RM started, never reset
DECL|field|schedulerOperationAggregateCounts
name|Map
argument_list|<
name|Operation
argument_list|,
name|Long
argument_list|>
name|schedulerOperationAggregateCounts
decl_stmt|;
DECL|method|SchedulerHealth ()
specifier|public
name|SchedulerHealth
parameter_list|()
block|{
name|lastSchedulerRunDetails
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|schedulerHealthDetails
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|schedulerOperationCounts
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|schedulerOperationAggregateCounts
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|Operation
name|op
range|:
name|Operation
operator|.
name|values
argument_list|()
control|)
block|{
name|lastSchedulerRunDetails
operator|.
name|put
argument_list|(
name|op
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|schedulerOperationCounts
operator|.
name|put
argument_list|(
name|op
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|schedulerHealthDetails
operator|.
name|put
argument_list|(
name|op
argument_list|,
operator|new
name|DetailedInformation
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|schedulerOperationAggregateCounts
operator|.
name|put
argument_list|(
name|op
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|updateAllocation (long timestamp, NodeId nodeId, ContainerId containerId, String queue)
specifier|public
name|void
name|updateAllocation
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|DetailedInformation
name|di
init|=
operator|new
name|DetailedInformation
argument_list|(
name|timestamp
argument_list|,
name|nodeId
argument_list|,
name|containerId
argument_list|,
name|queue
argument_list|)
decl_stmt|;
name|schedulerHealthDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|,
name|di
argument_list|)
expr_stmt|;
block|}
DECL|method|updateRelease (long timestamp, NodeId nodeId, ContainerId containerId, String queue)
specifier|public
name|void
name|updateRelease
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|DetailedInformation
name|di
init|=
operator|new
name|DetailedInformation
argument_list|(
name|timestamp
argument_list|,
name|nodeId
argument_list|,
name|containerId
argument_list|,
name|queue
argument_list|)
decl_stmt|;
name|schedulerHealthDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|,
name|di
argument_list|)
expr_stmt|;
block|}
DECL|method|updatePreemption (long timestamp, NodeId nodeId, ContainerId containerId, String queue)
specifier|public
name|void
name|updatePreemption
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|DetailedInformation
name|di
init|=
operator|new
name|DetailedInformation
argument_list|(
name|timestamp
argument_list|,
name|nodeId
argument_list|,
name|containerId
argument_list|,
name|queue
argument_list|)
decl_stmt|;
name|schedulerHealthDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|PREEMPTION
argument_list|,
name|di
argument_list|)
expr_stmt|;
block|}
DECL|method|updateReservation (long timestamp, NodeId nodeId, ContainerId containerId, String queue)
specifier|public
name|void
name|updateReservation
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|DetailedInformation
name|di
init|=
operator|new
name|DetailedInformation
argument_list|(
name|timestamp
argument_list|,
name|nodeId
argument_list|,
name|containerId
argument_list|,
name|queue
argument_list|)
decl_stmt|;
name|schedulerHealthDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|,
name|di
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerRunDetails (long timestamp, Resource allocated, Resource reserved)
specifier|public
name|void
name|updateSchedulerRunDetails
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|Resource
name|allocated
parameter_list|,
name|Resource
name|reserved
parameter_list|)
block|{
name|lastSchedulerRunTime
operator|=
name|timestamp
expr_stmt|;
name|lastSchedulerRunDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|,
name|allocated
argument_list|)
expr_stmt|;
name|lastSchedulerRunDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|,
name|reserved
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerReleaseDetails (long timestamp, Resource released)
specifier|public
name|void
name|updateSchedulerReleaseDetails
parameter_list|(
name|long
name|timestamp
parameter_list|,
name|Resource
name|released
parameter_list|)
block|{
name|lastSchedulerRunTime
operator|=
name|timestamp
expr_stmt|;
name|lastSchedulerRunDetails
operator|.
name|put
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|,
name|released
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerReleaseCounts (long count)
specifier|public
name|void
name|updateSchedulerReleaseCounts
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|updateCounts
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerAllocationCounts (long count)
specifier|public
name|void
name|updateSchedulerAllocationCounts
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|updateCounts
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerReservationCounts (long count)
specifier|public
name|void
name|updateSchedulerReservationCounts
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|updateCounts
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerFulfilledReservationCounts (long count)
specifier|public
name|void
name|updateSchedulerFulfilledReservationCounts
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|updateCounts
argument_list|(
name|Operation
operator|.
name|FULFILLED_RESERVATION
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|updateSchedulerPreemptionCounts (long count)
specifier|public
name|void
name|updateSchedulerPreemptionCounts
parameter_list|(
name|long
name|count
parameter_list|)
block|{
name|updateCounts
argument_list|(
name|Operation
operator|.
name|PREEMPTION
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|updateCounts (Operation op, long count)
specifier|private
name|void
name|updateCounts
parameter_list|(
name|Operation
name|op
parameter_list|,
name|long
name|count
parameter_list|)
block|{
name|schedulerOperationCounts
operator|.
name|put
argument_list|(
name|op
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|Long
name|tmp
init|=
name|schedulerOperationAggregateCounts
operator|.
name|get
argument_list|(
name|op
argument_list|)
decl_stmt|;
name|schedulerOperationAggregateCounts
operator|.
name|put
argument_list|(
name|op
argument_list|,
name|tmp
operator|+
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|getLastSchedulerRunTime ()
specifier|public
name|long
name|getLastSchedulerRunTime
parameter_list|()
block|{
return|return
name|lastSchedulerRunTime
return|;
block|}
DECL|method|getResourceDetails (Operation op)
specifier|private
name|Resource
name|getResourceDetails
parameter_list|(
name|Operation
name|op
parameter_list|)
block|{
return|return
name|lastSchedulerRunDetails
operator|.
name|get
argument_list|(
name|op
argument_list|)
return|;
block|}
DECL|method|getResourcesAllocated ()
specifier|public
name|Resource
name|getResourcesAllocated
parameter_list|()
block|{
return|return
name|getResourceDetails
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|)
return|;
block|}
DECL|method|getResourcesReserved ()
specifier|public
name|Resource
name|getResourcesReserved
parameter_list|()
block|{
return|return
name|getResourceDetails
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|)
return|;
block|}
DECL|method|getResourcesReleased ()
specifier|public
name|Resource
name|getResourcesReleased
parameter_list|()
block|{
return|return
name|getResourceDetails
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|)
return|;
block|}
DECL|method|getDetailedInformation (Operation op)
specifier|private
name|DetailedInformation
name|getDetailedInformation
parameter_list|(
name|Operation
name|op
parameter_list|)
block|{
return|return
name|schedulerHealthDetails
operator|.
name|get
argument_list|(
name|op
argument_list|)
return|;
block|}
DECL|method|getLastAllocationDetails ()
specifier|public
name|DetailedInformation
name|getLastAllocationDetails
parameter_list|()
block|{
return|return
name|getDetailedInformation
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|)
return|;
block|}
DECL|method|getLastReleaseDetails ()
specifier|public
name|DetailedInformation
name|getLastReleaseDetails
parameter_list|()
block|{
return|return
name|getDetailedInformation
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|)
return|;
block|}
DECL|method|getLastReservationDetails ()
specifier|public
name|DetailedInformation
name|getLastReservationDetails
parameter_list|()
block|{
return|return
name|getDetailedInformation
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|)
return|;
block|}
DECL|method|getLastPreemptionDetails ()
specifier|public
name|DetailedInformation
name|getLastPreemptionDetails
parameter_list|()
block|{
return|return
name|getDetailedInformation
argument_list|(
name|Operation
operator|.
name|PREEMPTION
argument_list|)
return|;
block|}
DECL|method|getOperationCount (Operation op)
specifier|private
name|Long
name|getOperationCount
parameter_list|(
name|Operation
name|op
parameter_list|)
block|{
return|return
name|schedulerOperationCounts
operator|.
name|get
argument_list|(
name|op
argument_list|)
return|;
block|}
DECL|method|getAllocationCount ()
specifier|public
name|Long
name|getAllocationCount
parameter_list|()
block|{
return|return
name|getOperationCount
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|)
return|;
block|}
DECL|method|getReleaseCount ()
specifier|public
name|Long
name|getReleaseCount
parameter_list|()
block|{
return|return
name|getOperationCount
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|)
return|;
block|}
DECL|method|getReservationCount ()
specifier|public
name|Long
name|getReservationCount
parameter_list|()
block|{
return|return
name|getOperationCount
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|)
return|;
block|}
DECL|method|getPreemptionCount ()
specifier|public
name|Long
name|getPreemptionCount
parameter_list|()
block|{
return|return
name|getOperationCount
argument_list|(
name|Operation
operator|.
name|PREEMPTION
argument_list|)
return|;
block|}
DECL|method|getAggregateOperationCount (Operation op)
specifier|private
name|Long
name|getAggregateOperationCount
parameter_list|(
name|Operation
name|op
parameter_list|)
block|{
return|return
name|schedulerOperationAggregateCounts
operator|.
name|get
argument_list|(
name|op
argument_list|)
return|;
block|}
DECL|method|getAggregateAllocationCount ()
specifier|public
name|Long
name|getAggregateAllocationCount
parameter_list|()
block|{
return|return
name|getAggregateOperationCount
argument_list|(
name|Operation
operator|.
name|ALLOCATION
argument_list|)
return|;
block|}
DECL|method|getAggregateReleaseCount ()
specifier|public
name|Long
name|getAggregateReleaseCount
parameter_list|()
block|{
return|return
name|getAggregateOperationCount
argument_list|(
name|Operation
operator|.
name|RELEASE
argument_list|)
return|;
block|}
DECL|method|getAggregateReservationCount ()
specifier|public
name|Long
name|getAggregateReservationCount
parameter_list|()
block|{
return|return
name|getAggregateOperationCount
argument_list|(
name|Operation
operator|.
name|RESERVATION
argument_list|)
return|;
block|}
DECL|method|getAggregatePreemptionCount ()
specifier|public
name|Long
name|getAggregatePreemptionCount
parameter_list|()
block|{
return|return
name|getAggregateOperationCount
argument_list|(
name|Operation
operator|.
name|PREEMPTION
argument_list|)
return|;
block|}
DECL|method|getAggregateFulFilledReservationsCount ()
specifier|public
name|Long
name|getAggregateFulFilledReservationsCount
parameter_list|()
block|{
return|return
name|getAggregateOperationCount
argument_list|(
name|Operation
operator|.
name|FULFILLED_RESERVATION
argument_list|)
return|;
block|}
block|}
end_class

end_unit

