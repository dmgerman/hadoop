begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.volume.csi
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|volume
operator|.
name|csi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|volume
operator|.
name|csi
operator|.
name|lifecycle
operator|.
name|Volume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|volume
operator|.
name|csi
operator|.
name|lifecycle
operator|.
name|VolumeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|volume
operator|.
name|csi
operator|.
name|VolumeCapabilityRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|volume
operator|.
name|csi
operator|.
name|VolumeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|volume
operator|.
name|csi
operator|.
name|VolumeMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|volume
operator|.
name|csi
operator|.
name|exception
operator|.
name|InvalidVolumeException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Helper class to build a {@link Volume}.  */
end_comment

begin_class
DECL|class|VolumeBuilder
specifier|public
specifier|final
class|class
name|VolumeBuilder
block|{
DECL|field|id
specifier|private
name|String
name|id
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|min
specifier|private
name|Long
name|min
decl_stmt|;
DECL|field|max
specifier|private
name|Long
name|max
decl_stmt|;
DECL|field|unit
specifier|private
name|String
name|unit
decl_stmt|;
DECL|field|driver
specifier|private
name|String
name|driver
decl_stmt|;
DECL|field|mount
specifier|private
name|String
name|mount
decl_stmt|;
DECL|method|VolumeBuilder ()
specifier|private
name|VolumeBuilder
parameter_list|()
block|{
comment|// hide constructor
block|}
DECL|method|newBuilder ()
specifier|public
specifier|static
name|VolumeBuilder
name|newBuilder
parameter_list|()
block|{
return|return
operator|new
name|VolumeBuilder
argument_list|()
return|;
block|}
DECL|method|volumeId (String volumeId)
specifier|public
name|VolumeBuilder
name|volumeId
parameter_list|(
name|String
name|volumeId
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|volumeId
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|volumeName (String volumeName)
specifier|public
name|VolumeBuilder
name|volumeName
parameter_list|(
name|String
name|volumeName
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|volumeName
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|minCapability (long minCapability)
specifier|public
name|VolumeBuilder
name|minCapability
parameter_list|(
name|long
name|minCapability
parameter_list|)
block|{
name|this
operator|.
name|min
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|minCapability
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxCapability (long maxCapability)
specifier|public
name|VolumeBuilder
name|maxCapability
parameter_list|(
name|long
name|maxCapability
parameter_list|)
block|{
name|this
operator|.
name|max
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|maxCapability
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|unit (String capUnit)
specifier|public
name|VolumeBuilder
name|unit
parameter_list|(
name|String
name|capUnit
parameter_list|)
block|{
name|this
operator|.
name|unit
operator|=
name|capUnit
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|driverName (String driverName)
specifier|public
name|VolumeBuilder
name|driverName
parameter_list|(
name|String
name|driverName
parameter_list|)
block|{
name|this
operator|.
name|driver
operator|=
name|driverName
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|mountPoint (String mountPoint)
specifier|public
name|VolumeBuilder
name|mountPoint
parameter_list|(
name|String
name|mountPoint
parameter_list|)
block|{
name|this
operator|.
name|mount
operator|=
name|mountPoint
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|Volume
name|build
parameter_list|()
throws|throws
name|InvalidVolumeException
block|{
name|VolumeId
name|vid
init|=
operator|new
name|VolumeId
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|id
argument_list|)
operator|.
name|orElse
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|VolumeCapabilityRange
name|volumeCap
init|=
name|VolumeCapabilityRange
operator|.
name|newBuilder
argument_list|()
operator|.
name|minCapacity
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|min
argument_list|)
operator|.
name|orElse
argument_list|(
literal|0L
argument_list|)
argument_list|)
operator|.
name|maxCapacity
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|max
argument_list|)
operator|.
name|orElse
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
operator|.
name|unit
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|unit
argument_list|)
operator|.
name|orElse
argument_list|(
literal|"Gi"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|VolumeMetaData
name|meta
init|=
name|VolumeMetaData
operator|.
name|newBuilder
argument_list|()
operator|.
name|capability
argument_list|(
name|volumeCap
argument_list|)
operator|.
name|driverName
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|driver
argument_list|)
operator|.
name|orElse
argument_list|(
literal|"test-driver"
argument_list|)
argument_list|)
operator|.
name|mountPoint
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|mount
argument_list|)
operator|.
name|orElse
argument_list|(
literal|"/mnt/data"
argument_list|)
argument_list|)
operator|.
name|volumeName
argument_list|(
name|name
argument_list|)
operator|.
name|volumeId
argument_list|(
name|vid
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
operator|new
name|VolumeImpl
argument_list|(
name|meta
argument_list|)
return|;
block|}
block|}
end_class

end_unit

