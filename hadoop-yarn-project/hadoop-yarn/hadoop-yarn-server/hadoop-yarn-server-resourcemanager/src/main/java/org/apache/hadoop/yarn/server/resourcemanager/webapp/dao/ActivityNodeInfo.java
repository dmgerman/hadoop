begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|activities
operator|.
name|ActivitiesUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|activities
operator|.
name|ActivityNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|activities
operator|.
name|ActivityState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|RMWSConsts
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/*  * DAO object to display node information in allocation tree.  * It corresponds to "ActivityNode" class.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ActivityNodeInfo
specifier|public
class|class
name|ActivityNodeInfo
block|{
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
comment|// The name for activity node
DECL|field|appPriority
specifier|private
name|Integer
name|appPriority
decl_stmt|;
DECL|field|requestPriority
specifier|private
name|Integer
name|requestPriority
decl_stmt|;
DECL|field|allocationRequestId
specifier|private
name|Long
name|allocationRequestId
decl_stmt|;
DECL|field|allocationState
specifier|private
name|String
name|allocationState
decl_stmt|;
DECL|field|diagnostic
specifier|private
name|String
name|diagnostic
decl_stmt|;
DECL|field|nodeId
specifier|private
name|String
name|nodeId
decl_stmt|;
comment|// Used for groups of activities
DECL|field|count
specifier|private
name|Integer
name|count
decl_stmt|;
DECL|field|nodeIds
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|nodeIds
decl_stmt|;
DECL|field|children
specifier|protected
name|List
argument_list|<
name|ActivityNodeInfo
argument_list|>
name|children
decl_stmt|;
DECL|method|ActivityNodeInfo ()
name|ActivityNodeInfo
parameter_list|()
block|{   }
DECL|method|ActivityNodeInfo (String name, ActivityState activityState, String diagnostic, NodeId nId)
specifier|public
name|ActivityNodeInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|ActivityState
name|activityState
parameter_list|,
name|String
name|diagnostic
parameter_list|,
name|NodeId
name|nId
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|allocationState
operator|=
name|activityState
operator|.
name|name
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostic
operator|=
name|diagnostic
expr_stmt|;
name|setNodeId
argument_list|(
name|nId
argument_list|)
expr_stmt|;
block|}
DECL|method|ActivityNodeInfo (ActivityState groupActivityState, String groupDiagnostic, List<String> groupNodeIds)
specifier|public
name|ActivityNodeInfo
parameter_list|(
name|ActivityState
name|groupActivityState
parameter_list|,
name|String
name|groupDiagnostic
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|groupNodeIds
parameter_list|)
block|{
name|this
operator|.
name|allocationState
operator|=
name|groupActivityState
operator|.
name|name
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostic
operator|=
name|groupDiagnostic
expr_stmt|;
name|this
operator|.
name|count
operator|=
name|groupNodeIds
operator|.
name|size
argument_list|()
expr_stmt|;
name|this
operator|.
name|nodeIds
operator|=
name|groupNodeIds
expr_stmt|;
block|}
DECL|method|ActivityNodeInfo (ActivityNode node, RMWSConsts.ActivitiesGroupBy groupBy)
name|ActivityNodeInfo
parameter_list|(
name|ActivityNode
name|node
parameter_list|,
name|RMWSConsts
operator|.
name|ActivitiesGroupBy
name|groupBy
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|node
operator|.
name|getName
argument_list|()
expr_stmt|;
name|setPriority
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|setNodeId
argument_list|(
name|node
operator|.
name|getNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|allocationState
operator|=
name|node
operator|.
name|getState
argument_list|()
operator|.
name|name
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostic
operator|=
name|node
operator|.
name|getDiagnostic
argument_list|()
expr_stmt|;
name|this
operator|.
name|requestPriority
operator|=
name|node
operator|.
name|getRequestPriority
argument_list|()
expr_stmt|;
name|this
operator|.
name|allocationRequestId
operator|=
name|node
operator|.
name|getAllocationRequestId
argument_list|()
expr_stmt|;
comment|// only consider grouping for request type
if|if
condition|(
name|node
operator|.
name|isRequestType
argument_list|()
condition|)
block|{
name|this
operator|.
name|children
operator|=
name|ActivitiesUtils
operator|.
name|getRequestActivityNodeInfos
argument_list|(
name|node
operator|.
name|getChildren
argument_list|()
argument_list|,
name|groupBy
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|children
operator|=
name|node
operator|.
name|getChildren
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|e
lambda|->
operator|new
name|ActivityNodeInfo
argument_list|(
name|e
argument_list|,
name|groupBy
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setNodeId (NodeId nId)
specifier|public
name|void
name|setNodeId
parameter_list|(
name|NodeId
name|nId
parameter_list|)
block|{
if|if
condition|(
name|nId
operator|!=
literal|null
operator|&&
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|nId
operator|.
name|getHost
argument_list|()
argument_list|)
condition|)
block|{
name|this
operator|.
name|nodeId
operator|=
name|nId
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|setPriority (ActivityNode node)
specifier|private
name|void
name|setPriority
parameter_list|(
name|ActivityNode
name|node
parameter_list|)
block|{
if|if
condition|(
name|node
operator|.
name|isAppType
argument_list|()
condition|)
block|{
name|this
operator|.
name|appPriority
operator|=
name|node
operator|.
name|getAppPriority
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|requestPriority
operator|=
name|node
operator|.
name|getRequestPriority
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getNodeId ()
specifier|public
name|String
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
DECL|method|setNodeIds (List<String> nodeIds)
specifier|public
name|void
name|setNodeIds
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|nodeIds
parameter_list|)
block|{
name|this
operator|.
name|nodeIds
operator|=
name|nodeIds
expr_stmt|;
block|}
DECL|method|getAllocationRequestId ()
specifier|public
name|Long
name|getAllocationRequestId
parameter_list|()
block|{
return|return
name|allocationRequestId
return|;
block|}
DECL|method|getCount ()
specifier|public
name|Integer
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
DECL|method|getNodeIds ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getNodeIds
parameter_list|()
block|{
return|return
name|nodeIds
return|;
block|}
DECL|method|getChildren ()
specifier|public
name|List
argument_list|<
name|ActivityNodeInfo
argument_list|>
name|getChildren
parameter_list|()
block|{
return|return
name|children
return|;
block|}
DECL|method|getAllocationState ()
specifier|public
name|String
name|getAllocationState
parameter_list|()
block|{
return|return
name|allocationState
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getAppPriority ()
specifier|public
name|Integer
name|getAppPriority
parameter_list|()
block|{
return|return
name|appPriority
return|;
block|}
DECL|method|getRequestPriority ()
specifier|public
name|Integer
name|getRequestPriority
parameter_list|()
block|{
return|return
name|requestPriority
return|;
block|}
DECL|method|getDiagnostic ()
specifier|public
name|String
name|getDiagnostic
parameter_list|()
block|{
return|return
name|diagnostic
return|;
block|}
block|}
end_class

end_unit

