begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.federation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|federation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|FederationStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterHeartbeatRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ClusterMetricsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONJAXBContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONMarshaller
import|;
end_import

begin_comment
comment|/**  * Periodic heart beat from a<code>ResourceManager</code> participating in  * federation to indicate liveliness. The heart beat publishes the current  * capabilities as represented by {@link ClusterMetricsInfo} of the sub cluster.  *  */
end_comment

begin_class
DECL|class|FederationStateStoreHeartbeat
specifier|public
class|class
name|FederationStateStoreHeartbeat
implements|implements
name|Runnable
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FederationStateStoreHeartbeat
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|subClusterId
specifier|private
name|SubClusterId
name|subClusterId
decl_stmt|;
DECL|field|stateStoreService
specifier|private
name|FederationStateStore
name|stateStoreService
decl_stmt|;
DECL|field|rs
specifier|private
specifier|final
name|ResourceScheduler
name|rs
decl_stmt|;
DECL|field|currentClusterState
specifier|private
name|StringWriter
name|currentClusterState
decl_stmt|;
DECL|field|jc
specifier|private
name|JSONJAXBContext
name|jc
decl_stmt|;
DECL|field|marshaller
specifier|private
name|JSONMarshaller
name|marshaller
decl_stmt|;
DECL|field|capability
specifier|private
name|String
name|capability
decl_stmt|;
DECL|method|FederationStateStoreHeartbeat (SubClusterId subClusterId, FederationStateStore stateStoreClient, ResourceScheduler scheduler)
specifier|public
name|FederationStateStoreHeartbeat
parameter_list|(
name|SubClusterId
name|subClusterId
parameter_list|,
name|FederationStateStore
name|stateStoreClient
parameter_list|,
name|ResourceScheduler
name|scheduler
parameter_list|)
block|{
name|this
operator|.
name|stateStoreService
operator|=
name|stateStoreClient
expr_stmt|;
name|this
operator|.
name|subClusterId
operator|=
name|subClusterId
expr_stmt|;
name|this
operator|.
name|rs
operator|=
name|scheduler
expr_stmt|;
comment|// Initialize the JAXB Marshaller
name|this
operator|.
name|currentClusterState
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
try|try
block|{
name|this
operator|.
name|jc
operator|=
operator|new
name|JSONJAXBContext
argument_list|(
name|JSONConfiguration
operator|.
name|mapped
argument_list|()
operator|.
name|rootUnwrapping
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|ClusterMetricsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|marshaller
operator|=
name|jc
operator|.
name|createJSONMarshaller
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Exception while trying to initialize JAXB context."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Initialized Federation membership for cluster with timestamp:  "
operator|+
name|ResourceManager
operator|.
name|getClusterTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get the current cluster state as a JSON string representation of the    * {@link ClusterMetricsInfo}.    */
DECL|method|updateClusterState ()
specifier|private
name|void
name|updateClusterState
parameter_list|()
block|{
try|try
block|{
comment|// get the current state
name|currentClusterState
operator|.
name|getBuffer
argument_list|()
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ClusterMetricsInfo
name|clusterMetricsInfo
init|=
operator|new
name|ClusterMetricsInfo
argument_list|(
name|rs
argument_list|)
decl_stmt|;
name|marshaller
operator|.
name|marshallToJSON
argument_list|(
name|clusterMetricsInfo
argument_list|,
name|currentClusterState
argument_list|)
expr_stmt|;
name|capability
operator|=
name|currentClusterState
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Exception while trying to generate cluster state,"
operator|+
literal|" so reverting to last know state."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
specifier|synchronized
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|updateClusterState
argument_list|()
expr_stmt|;
name|SubClusterHeartbeatRequest
name|request
init|=
name|SubClusterHeartbeatRequest
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|SubClusterState
operator|.
name|SC_RUNNING
argument_list|,
name|capability
argument_list|)
decl_stmt|;
name|stateStoreService
operator|.
name|subClusterHeartbeat
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Sending the heartbeat with capability: {}"
argument_list|,
name|capability
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Exception when trying to heartbeat: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

