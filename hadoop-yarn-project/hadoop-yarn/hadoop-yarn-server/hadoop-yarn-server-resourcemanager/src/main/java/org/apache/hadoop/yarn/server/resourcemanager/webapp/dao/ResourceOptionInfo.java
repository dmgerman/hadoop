begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceOption
import|;
end_import

begin_comment
comment|/**  * A JAXB representation of a {link ResourceOption}.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"resourceOption"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|NONE
argument_list|)
DECL|class|ResourceOptionInfo
specifier|public
class|class
name|ResourceOptionInfo
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"resource"
argument_list|)
DECL|field|resource
specifier|private
name|ResourceInfo
name|resource
init|=
operator|new
name|ResourceInfo
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"overCommitTimeout"
argument_list|)
DECL|field|overCommitTimeout
specifier|private
name|int
name|overCommitTimeout
decl_stmt|;
comment|/** Internal resource option for caching. */
DECL|field|resourceOption
specifier|private
name|ResourceOption
name|resourceOption
decl_stmt|;
DECL|method|ResourceOptionInfo ()
specifier|public
name|ResourceOptionInfo
parameter_list|()
block|{   }
comment|// JAXB needs this
DECL|method|ResourceOptionInfo (ResourceOption resourceOption)
specifier|public
name|ResourceOptionInfo
parameter_list|(
name|ResourceOption
name|resourceOption
parameter_list|)
block|{
if|if
condition|(
name|resourceOption
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|resource
operator|=
operator|new
name|ResourceInfo
argument_list|(
name|resourceOption
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|overCommitTimeout
operator|=
name|resourceOption
operator|.
name|getOverCommitTimeout
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getResourceOption ()
specifier|public
name|ResourceOption
name|getResourceOption
parameter_list|()
block|{
if|if
condition|(
name|resourceOption
operator|==
literal|null
condition|)
block|{
name|resourceOption
operator|=
name|ResourceOption
operator|.
name|newInstance
argument_list|(
name|resource
operator|.
name|getResource
argument_list|()
argument_list|,
name|overCommitTimeout
argument_list|)
expr_stmt|;
block|}
return|return
name|resourceOption
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getResourceOption
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

