begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.rmnode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmnode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceUtilization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|LogAggregationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeHeartbeatResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|NodeHealthStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|NodeStatus
import|;
end_import

begin_class
DECL|class|RMNodeStatusEvent
specifier|public
class|class
name|RMNodeStatusEvent
extends|extends
name|RMNodeEvent
block|{
DECL|field|nodeStatus
specifier|private
specifier|final
name|NodeStatus
name|nodeStatus
decl_stmt|;
DECL|field|latestResponse
specifier|private
specifier|final
name|NodeHeartbeatResponse
name|latestResponse
decl_stmt|;
DECL|field|logAggregationReportsForApps
specifier|private
name|List
argument_list|<
name|LogAggregationReport
argument_list|>
name|logAggregationReportsForApps
decl_stmt|;
DECL|method|RMNodeStatusEvent (NodeId nodeId, NodeStatus nodeStatus, NodeHeartbeatResponse latestResponse)
specifier|public
name|RMNodeStatusEvent
parameter_list|(
name|NodeId
name|nodeId
parameter_list|,
name|NodeStatus
name|nodeStatus
parameter_list|,
name|NodeHeartbeatResponse
name|latestResponse
parameter_list|)
block|{
name|this
argument_list|(
name|nodeId
argument_list|,
name|nodeStatus
argument_list|,
name|latestResponse
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|RMNodeStatusEvent (NodeId nodeId, NodeStatus nodeStatus, NodeHeartbeatResponse latestResponse, List<LogAggregationReport> logAggregationReportsForApps)
specifier|public
name|RMNodeStatusEvent
parameter_list|(
name|NodeId
name|nodeId
parameter_list|,
name|NodeStatus
name|nodeStatus
parameter_list|,
name|NodeHeartbeatResponse
name|latestResponse
parameter_list|,
name|List
argument_list|<
name|LogAggregationReport
argument_list|>
name|logAggregationReportsForApps
parameter_list|)
block|{
name|super
argument_list|(
name|nodeId
argument_list|,
name|RMNodeEventType
operator|.
name|STATUS_UPDATE
argument_list|)
expr_stmt|;
name|this
operator|.
name|nodeStatus
operator|=
name|nodeStatus
expr_stmt|;
name|this
operator|.
name|latestResponse
operator|=
name|latestResponse
expr_stmt|;
name|this
operator|.
name|logAggregationReportsForApps
operator|=
name|logAggregationReportsForApps
expr_stmt|;
block|}
DECL|method|getNodeHealthStatus ()
specifier|public
name|NodeHealthStatus
name|getNodeHealthStatus
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getNodeHealthStatus
argument_list|()
return|;
block|}
DECL|method|getContainers ()
specifier|public
name|List
argument_list|<
name|ContainerStatus
argument_list|>
name|getContainers
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getContainersStatuses
argument_list|()
return|;
block|}
DECL|method|getLatestResponse ()
specifier|public
name|NodeHeartbeatResponse
name|getLatestResponse
parameter_list|()
block|{
return|return
name|this
operator|.
name|latestResponse
return|;
block|}
DECL|method|getKeepAliveAppIds ()
specifier|public
name|List
argument_list|<
name|ApplicationId
argument_list|>
name|getKeepAliveAppIds
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getKeepAliveApplications
argument_list|()
return|;
block|}
DECL|method|getAggregatedContainersUtilization ()
specifier|public
name|ResourceUtilization
name|getAggregatedContainersUtilization
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getContainersUtilization
argument_list|()
return|;
block|}
DECL|method|getNodeUtilization ()
specifier|public
name|ResourceUtilization
name|getNodeUtilization
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getNodeUtilization
argument_list|()
return|;
block|}
DECL|method|getLogAggregationReportsForApps ()
specifier|public
name|List
argument_list|<
name|LogAggregationReport
argument_list|>
name|getLogAggregationReportsForApps
parameter_list|()
block|{
return|return
name|this
operator|.
name|logAggregationReportsForApps
return|;
block|}
DECL|method|setLogAggregationReportsForApps ( List<LogAggregationReport> logAggregationReportsForApps)
specifier|public
name|void
name|setLogAggregationReportsForApps
parameter_list|(
name|List
argument_list|<
name|LogAggregationReport
argument_list|>
name|logAggregationReportsForApps
parameter_list|)
block|{
name|this
operator|.
name|logAggregationReportsForApps
operator|=
name|logAggregationReportsForApps
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getNMReportedIncreasedContainers ()
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|getNMReportedIncreasedContainers
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeStatus
operator|.
name|getIncreasedContainers
argument_list|()
operator|==
literal|null
condition|?
name|Collections
operator|.
name|EMPTY_LIST
else|:
name|this
operator|.
name|nodeStatus
operator|.
name|getIncreasedContainers
argument_list|()
return|;
block|}
block|}
end_class

end_unit

