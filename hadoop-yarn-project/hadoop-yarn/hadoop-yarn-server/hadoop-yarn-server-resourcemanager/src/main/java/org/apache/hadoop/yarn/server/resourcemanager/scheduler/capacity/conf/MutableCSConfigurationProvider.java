begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|MutableConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|conf
operator|.
name|YarnConfigurationStore
operator|.
name|LogMutation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * CS configuration provider which implements  * {@link MutableConfigurationProvider} for modifying capacity scheduler  * configuration.  */
end_comment

begin_class
DECL|class|MutableCSConfigurationProvider
specifier|public
class|class
name|MutableCSConfigurationProvider
implements|implements
name|CSConfigurationProvider
implements|,
name|MutableConfigurationProvider
block|{
DECL|field|schedConf
specifier|private
name|Configuration
name|schedConf
decl_stmt|;
DECL|field|confStore
specifier|private
name|YarnConfigurationStore
name|confStore
decl_stmt|;
DECL|field|rmContext
specifier|private
name|RMContext
name|rmContext
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|method|MutableCSConfigurationProvider (RMContext rmContext)
specifier|public
name|MutableCSConfigurationProvider
parameter_list|(
name|RMContext
name|rmContext
parameter_list|)
block|{
name|this
operator|.
name|rmContext
operator|=
name|rmContext
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration config)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|config
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|store
init|=
name|config
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|SCHEDULER_CONFIGURATION_STORE_CLASS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_CONFIGURATION_STORE
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|store
condition|)
block|{
case|case
name|YarnConfiguration
operator|.
name|MEMORY_CONFIGURATION_STORE
case|:
name|this
operator|.
name|confStore
operator|=
operator|new
name|InMemoryConfigurationStore
argument_list|()
expr_stmt|;
break|break;
default|default:
name|this
operator|.
name|confStore
operator|=
name|YarnConfigurationStoreFactory
operator|.
name|getStore
argument_list|(
name|config
argument_list|)
expr_stmt|;
break|break;
block|}
name|Configuration
name|initialSchedConf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|initialSchedConf
operator|.
name|addResource
argument_list|(
name|YarnConfiguration
operator|.
name|CS_CONFIGURATION_FILE
argument_list|)
expr_stmt|;
name|this
operator|.
name|schedConf
operator|=
name|initialSchedConf
expr_stmt|;
name|confStore
operator|.
name|initialize
argument_list|(
name|config
argument_list|,
name|initialSchedConf
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|config
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|loadConfiguration (Configuration configuration)
specifier|public
name|CapacitySchedulerConfiguration
name|loadConfiguration
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
throws|throws
name|IOException
block|{
name|Configuration
name|loadedConf
init|=
operator|new
name|Configuration
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|loadedConf
operator|.
name|addResource
argument_list|(
name|schedConf
argument_list|)
expr_stmt|;
return|return
operator|new
name|CapacitySchedulerConfiguration
argument_list|(
name|loadedConf
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|mutateConfiguration (String user, Map<String, String> confUpdate)
specifier|public
name|void
name|mutateConfiguration
parameter_list|(
name|String
name|user
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confUpdate
parameter_list|)
block|{
name|Configuration
name|oldConf
init|=
operator|new
name|Configuration
argument_list|(
name|schedConf
argument_list|)
decl_stmt|;
name|LogMutation
name|log
init|=
operator|new
name|LogMutation
argument_list|(
name|confUpdate
argument_list|,
name|user
argument_list|)
decl_stmt|;
name|long
name|id
init|=
name|confStore
operator|.
name|logMutation
argument_list|(
name|log
argument_list|)
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|kv
range|:
name|confUpdate
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|schedConf
operator|.
name|set
argument_list|(
name|kv
operator|.
name|getKey
argument_list|()
argument_list|,
name|kv
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|rmContext
operator|.
name|getScheduler
argument_list|()
operator|.
name|reinitialize
argument_list|(
name|conf
argument_list|,
name|rmContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|schedConf
operator|=
name|oldConf
expr_stmt|;
name|confStore
operator|.
name|confirmMutation
argument_list|(
name|id
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return;
block|}
name|confStore
operator|.
name|confirmMutation
argument_list|(
name|id
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

