begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.recovery.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
operator|.
name|records
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerResourceManagerRecoveryProtos
operator|.
name|AMRMTokenSecretManagerStateProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|MasterKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|security
operator|.
name|AMRMTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * Contains all the state data that needs to be stored persistently   * for {@link AMRMTokenSecretManager}  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|AMRMTokenSecretManagerState
specifier|public
specifier|abstract
class|class
name|AMRMTokenSecretManagerState
block|{
DECL|method|newInstance ( MasterKey currentMasterKey, MasterKey nextMasterKey)
specifier|public
specifier|static
name|AMRMTokenSecretManagerState
name|newInstance
parameter_list|(
name|MasterKey
name|currentMasterKey
parameter_list|,
name|MasterKey
name|nextMasterKey
parameter_list|)
block|{
name|AMRMTokenSecretManagerState
name|data
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|AMRMTokenSecretManagerState
operator|.
name|class
argument_list|)
decl_stmt|;
name|data
operator|.
name|setCurrentMasterKey
argument_list|(
name|currentMasterKey
argument_list|)
expr_stmt|;
name|data
operator|.
name|setNextMasterKey
argument_list|(
name|nextMasterKey
argument_list|)
expr_stmt|;
return|return
name|data
return|;
block|}
DECL|method|newInstance ( AMRMTokenSecretManagerState state)
specifier|public
specifier|static
name|AMRMTokenSecretManagerState
name|newInstance
parameter_list|(
name|AMRMTokenSecretManagerState
name|state
parameter_list|)
block|{
name|AMRMTokenSecretManagerState
name|data
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|AMRMTokenSecretManagerState
operator|.
name|class
argument_list|)
decl_stmt|;
name|data
operator|.
name|setCurrentMasterKey
argument_list|(
name|state
operator|.
name|getCurrentMasterKey
argument_list|()
argument_list|)
expr_stmt|;
name|data
operator|.
name|setNextMasterKey
argument_list|(
name|state
operator|.
name|getNextMasterKey
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|data
return|;
block|}
comment|/**    * {@link AMRMTokenSecretManager} current Master key    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getCurrentMasterKey ()
specifier|public
specifier|abstract
name|MasterKey
name|getCurrentMasterKey
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setCurrentMasterKey (MasterKey currentMasterKey)
specifier|public
specifier|abstract
name|void
name|setCurrentMasterKey
parameter_list|(
name|MasterKey
name|currentMasterKey
parameter_list|)
function_decl|;
comment|/**    * {@link AMRMTokenSecretManager} next Master key    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getNextMasterKey ()
specifier|public
specifier|abstract
name|MasterKey
name|getNextMasterKey
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setNextMasterKey (MasterKey nextMasterKey)
specifier|public
specifier|abstract
name|void
name|setNextMasterKey
parameter_list|(
name|MasterKey
name|nextMasterKey
parameter_list|)
function_decl|;
DECL|method|getProto ()
specifier|public
specifier|abstract
name|AMRMTokenSecretManagerStateProto
name|getProto
parameter_list|()
function_decl|;
block|}
end_class

end_unit

