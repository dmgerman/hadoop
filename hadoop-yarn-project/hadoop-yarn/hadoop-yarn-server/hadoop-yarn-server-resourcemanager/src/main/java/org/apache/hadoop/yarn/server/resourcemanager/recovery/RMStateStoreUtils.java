begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.recovery
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
operator|.
name|RMDelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
operator|.
name|YARNDelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
operator|.
name|records
operator|.
name|RMDelegationTokenIdentifierData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Utility methods for {@link RMStateStore} and subclasses.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|RMStateStoreUtils
specifier|public
class|class
name|RMStateStoreUtils
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|RMStateStoreUtils
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Returns the RM Delegation Token data from the {@link DataInputStream} as a    * {@link RMDelegationTokenIdentifierData}.  It can handle both the current    * and old (non-protobuf) formats.    *    * @param fsIn The {@link DataInputStream} containing RM Delegation Token data    * @return An {@link RMDelegationTokenIdentifierData} containing the read in    * RM Delegation Token    */
specifier|public
specifier|static
name|RMDelegationTokenIdentifierData
DECL|method|readRMDelegationTokenIdentifierData (DataInputStream fsIn)
name|readRMDelegationTokenIdentifierData
parameter_list|(
name|DataInputStream
name|fsIn
parameter_list|)
throws|throws
name|IOException
block|{
name|RMDelegationTokenIdentifierData
name|identifierData
init|=
operator|new
name|RMDelegationTokenIdentifierData
argument_list|()
decl_stmt|;
try|try
block|{
name|identifierData
operator|.
name|readFields
argument_list|(
name|fsIn
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Recovering old formatted token"
argument_list|)
expr_stmt|;
name|fsIn
operator|.
name|reset
argument_list|()
expr_stmt|;
name|YARNDelegationTokenIdentifier
name|identifier
init|=
operator|new
name|RMDelegationTokenIdentifier
argument_list|()
decl_stmt|;
name|identifier
operator|.
name|readFieldsInOldFormat
argument_list|(
name|fsIn
argument_list|)
expr_stmt|;
name|identifierData
operator|.
name|setIdentifier
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
name|identifierData
operator|.
name|setRenewDate
argument_list|(
name|fsIn
operator|.
name|readLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|identifierData
return|;
block|}
block|}
end_class

end_unit

