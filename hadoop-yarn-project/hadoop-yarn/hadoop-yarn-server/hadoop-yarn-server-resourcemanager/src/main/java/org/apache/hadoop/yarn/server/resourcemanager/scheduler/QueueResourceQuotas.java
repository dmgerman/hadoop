begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|CommonNodeLabelsManager
import|;
end_import

begin_comment
comment|/**  * QueueResourceQuotas by Labels for following fields by label  * - EFFECTIVE_MIN_CAPACITY  * - EFFECTIVE_MAX_CAPACITY  * This class can be used to track resource usage in queue/user/app.  *  * And it is thread-safe  */
end_comment

begin_class
DECL|class|QueueResourceQuotas
specifier|public
class|class
name|QueueResourceQuotas
extends|extends
name|AbstractResourceUsage
block|{
comment|// short for no-label :)
DECL|field|NL
specifier|private
specifier|static
specifier|final
name|String
name|NL
init|=
name|CommonNodeLabelsManager
operator|.
name|NO_LABEL
decl_stmt|;
DECL|method|QueueResourceQuotas ()
specifier|public
name|QueueResourceQuotas
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/*    * Configured Minimum Resource    */
DECL|method|getConfiguredMinResource ()
specifier|public
name|Resource
name|getConfiguredMinResource
parameter_list|()
block|{
return|return
name|_get
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|MIN_RESOURCE
argument_list|)
return|;
block|}
DECL|method|getConfiguredMinResource (String label)
specifier|public
name|Resource
name|getConfiguredMinResource
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|MIN_RESOURCE
argument_list|)
return|;
block|}
DECL|method|setConfiguredMinResource (String label, Resource res)
specifier|public
name|void
name|setConfiguredMinResource
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|MIN_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setConfiguredMinResource (Resource res)
specifier|public
name|void
name|setConfiguredMinResource
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|MIN_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
comment|/*    * Configured Maximum Resource    */
DECL|method|getConfiguredMaxResource ()
specifier|public
name|Resource
name|getConfiguredMaxResource
parameter_list|()
block|{
return|return
name|getConfiguredMaxResource
argument_list|(
name|NL
argument_list|)
return|;
block|}
DECL|method|getConfiguredMaxResource (String label)
specifier|public
name|Resource
name|getConfiguredMaxResource
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|MAX_RESOURCE
argument_list|)
return|;
block|}
DECL|method|setConfiguredMaxResource (Resource res)
specifier|public
name|void
name|setConfiguredMaxResource
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|setConfiguredMaxResource
argument_list|(
name|NL
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setConfiguredMaxResource (String label, Resource res)
specifier|public
name|void
name|setConfiguredMaxResource
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|MAX_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
comment|/*    * Effective Minimum Resource    */
DECL|method|getEffectiveMinResource ()
specifier|public
name|Resource
name|getEffectiveMinResource
parameter_list|()
block|{
return|return
name|_get
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE
argument_list|)
return|;
block|}
DECL|method|getEffectiveMinResource (String label)
specifier|public
name|Resource
name|getEffectiveMinResource
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE
argument_list|)
return|;
block|}
DECL|method|setEffectiveMinResource (String label, Resource res)
specifier|public
name|void
name|setEffectiveMinResource
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setEffectiveMinResource (Resource res)
specifier|public
name|void
name|setEffectiveMinResource
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
comment|/*    * Effective Maximum Resource    */
DECL|method|getEffectiveMaxResource ()
specifier|public
name|Resource
name|getEffectiveMaxResource
parameter_list|()
block|{
return|return
name|getEffectiveMaxResource
argument_list|(
name|NL
argument_list|)
return|;
block|}
DECL|method|getEffectiveMaxResource (String label)
specifier|public
name|Resource
name|getEffectiveMaxResource
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MAX_RESOURCE
argument_list|)
return|;
block|}
DECL|method|setEffectiveMaxResource (Resource res)
specifier|public
name|void
name|setEffectiveMaxResource
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|setEffectiveMaxResource
argument_list|(
name|NL
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setEffectiveMaxResource (String label, Resource res)
specifier|public
name|void
name|setEffectiveMaxResource
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MAX_RESOURCE
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
comment|/*    * Effective Minimum Resource    */
DECL|method|getEffectiveMinResourceUp ()
specifier|public
name|Resource
name|getEffectiveMinResourceUp
parameter_list|()
block|{
return|return
name|_get
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE_UP
argument_list|)
return|;
block|}
DECL|method|getEffectiveMinResourceUp (String label)
specifier|public
name|Resource
name|getEffectiveMinResourceUp
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE_UP
argument_list|)
return|;
block|}
DECL|method|setEffectiveMinResourceUp (String label, Resource res)
specifier|public
name|void
name|setEffectiveMinResourceUp
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE_UP
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setEffectiveMinResourceUp (Resource res)
specifier|public
name|void
name|setEffectiveMinResourceUp
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|NL
argument_list|,
name|ResourceType
operator|.
name|EFF_MIN_RESOURCE_UP
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
comment|/*    * Effective Maximum Resource    */
DECL|method|getEffectiveMaxResourceUp ()
specifier|public
name|Resource
name|getEffectiveMaxResourceUp
parameter_list|()
block|{
return|return
name|getEffectiveMaxResourceUp
argument_list|(
name|NL
argument_list|)
return|;
block|}
DECL|method|getEffectiveMaxResourceUp (String label)
specifier|public
name|Resource
name|getEffectiveMaxResourceUp
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|_get
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MAX_RESOURCE_UP
argument_list|)
return|;
block|}
DECL|method|setEffectiveMaxResourceUp (Resource res)
specifier|public
name|void
name|setEffectiveMaxResourceUp
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
name|setEffectiveMaxResourceUp
argument_list|(
name|NL
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
DECL|method|setEffectiveMaxResourceUp (String label, Resource res)
specifier|public
name|void
name|setEffectiveMaxResourceUp
parameter_list|(
name|String
name|label
parameter_list|,
name|Resource
name|res
parameter_list|)
block|{
name|_set
argument_list|(
name|label
argument_list|,
name|ResourceType
operator|.
name|EFF_MAX_RESOURCE_UP
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

