begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.converter
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|MissingOptionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Unit tests for FSConfigToCSConfigArgumentHandler.  *  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|TestFSConfigToCSConfigArgumentHandler
specifier|public
class|class
name|TestFSConfigToCSConfigArgumentHandler
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestFSConfigToCSConfigArgumentHandler
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Rule
DECL|field|expectedException
specifier|public
name|ExpectedException
name|expectedException
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
annotation|@
name|Mock
DECL|field|mockConverter
specifier|private
name|FSConfigToCSConfigConverter
name|mockConverter
decl_stmt|;
DECL|field|fsTestCommons
specifier|private
name|FSConfigConverterTestCommons
name|fsTestCommons
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|fsTestCommons
operator|=
operator|new
name|FSConfigConverterTestCommons
argument_list|()
expr_stmt|;
name|fsTestCommons
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|fsTestCommons
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|setupFSConfigConversionFiles (boolean defineAllocationFile)
specifier|private
name|void
name|setupFSConfigConversionFiles
parameter_list|(
name|boolean
name|defineAllocationFile
parameter_list|)
throws|throws
name|IOException
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureFairSchedulerXml
argument_list|()
expr_stmt|;
if|if
condition|(
name|defineAllocationFile
condition|)
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureYarnSiteXmlWithFsAllocFileDefined
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyYarnSiteXml
argument_list|()
expr_stmt|;
block|}
name|FSConfigConverterTestCommons
operator|.
name|configureDummyConversionRulesFile
argument_list|()
expr_stmt|;
block|}
DECL|method|createArgumentHandler ()
specifier|private
name|FSConfigToCSConfigArgumentHandler
name|createArgumentHandler
parameter_list|()
block|{
return|return
operator|new
name|FSConfigToCSConfigArgumentHandler
argument_list|(
name|mockConverter
argument_list|)
return|;
block|}
DECL|method|getDefaultArgumentsAsArray ()
specifier|private
specifier|static
name|String
index|[]
name|getDefaultArgumentsAsArray
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
name|getDefaultArguments
argument_list|()
decl_stmt|;
return|return
name|args
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
DECL|method|getDefaultArguments ()
specifier|private
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|getDefaultArguments
parameter_list|()
block|{
return|return
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"-y"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|,
literal|"-o"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|)
return|;
block|}
DECL|method|getArgumentsAsArrayWithDefaults (String... args)
specifier|private
name|String
index|[]
name|getArgumentsAsArrayWithDefaults
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
name|getDefaultArguments
argument_list|()
decl_stmt|;
name|result
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
DECL|method|getArgumentsAsArray (String... args)
specifier|private
name|String
index|[]
name|getArgumentsAsArray
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|result
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testMissingYarnSiteXmlArgument ()
specifier|public
name|void
name|testMissingYarnSiteXmlArgument
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-o"
block|,
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
block|}
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|MissingOptionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"Missing required option: y"
argument_list|)
expr_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingFairSchedulerXmlArgument ()
specifier|public
name|void
name|testMissingFairSchedulerXmlArgument
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|getDefaultArgumentsAsArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingOutputDirArgument ()
specifier|public
name|void
name|testMissingOutputDirArgument
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-y"
block|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
block|}
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|MissingOptionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"Missing required option: o"
argument_list|)
expr_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingRulesConfiguration ()
specifier|public
name|void
name|testMissingRulesConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|getDefaultArgumentsAsArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidRulesConfigFile ()
specifier|public
name|void
name|testInvalidRulesConfigFile
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureYarnSiteXmlWithFsAllocFileDefined
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureFairSchedulerXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureInvalidConversionRulesFile
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|()
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidOutputDir ()
specifier|public
name|void
name|testInvalidOutputDir
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureYarnSiteXmlWithFsAllocFileDefined
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureFairSchedulerXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureDummyConversionRulesFile
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArray
argument_list|(
literal|"-y"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|,
literal|"-o"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|fsTestCommons
operator|.
name|getErrContent
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Error content missing"
argument_list|,
name|fsTestCommons
operator|.
name|getErrContent
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Cannot start FS config conversion due to the following "
operator|+
literal|"precondition error"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFairSchedulerXmlIsNotDefinedIfItsDefinedInYarnSiteXml ()
specifier|public
name|void
name|testFairSchedulerXmlIsNotDefinedIfItsDefinedInYarnSiteXml
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|getDefaultArgumentsAsArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyYarnSiteXmlSpecified ()
specifier|public
name|void
name|testEmptyYarnSiteXmlSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureFairSchedulerXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyYarnSiteXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureDummyConversionRulesFile
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyFairSchedulerXmlSpecified ()
specifier|public
name|void
name|testEmptyFairSchedulerXmlSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyFairSchedulerXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyYarnSiteXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureDummyConversionRulesFile
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyRulesConfigurationSpecified ()
specifier|public
name|void
name|testEmptyRulesConfigurationSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyFairSchedulerXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyYarnSiteXml
argument_list|()
expr_stmt|;
name|FSConfigConverterTestCommons
operator|.
name|configureEmptyConversionRulesFile
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationDefaults ()
specifier|public
name|void
name|testConvertFSConfigurationDefaults
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|FSConfigToCSConfigConverterParams
argument_list|>
name|conversionParams
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|FSConfigToCSConfigConverterParams
operator|.
name|class
argument_list|)
decl_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
operator|new
name|FSConfigToCSConfigArgumentHandler
argument_list|(
name|mockConverter
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
comment|// validate params
name|Mockito
operator|.
name|verify
argument_list|(
name|mockConverter
argument_list|)
operator|.
name|convert
argument_list|(
name|conversionParams
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|conversionParams
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"FS config converter parameters: "
operator|+
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yarn site config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|,
name|params
operator|.
name|getYarnSiteXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FS xml"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
name|params
operator|.
name|getFairSchedulerXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Conversion rules config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
name|params
operator|.
name|getConversionRulesConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Console mode"
argument_list|,
name|params
operator|.
name|isConsole
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationWithConsoleParam ()
specifier|public
name|void
name|testConvertFSConfigurationWithConsoleParam
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|FSConfigToCSConfigConverterParams
argument_list|>
name|conversionParams
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|FSConfigToCSConfigConverterParams
operator|.
name|class
argument_list|)
decl_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
operator|new
name|FSConfigToCSConfigArgumentHandler
argument_list|(
name|mockConverter
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
literal|"-p"
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
comment|// validate params
name|Mockito
operator|.
name|verify
argument_list|(
name|mockConverter
argument_list|)
operator|.
name|convert
argument_list|(
name|conversionParams
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|conversionParams
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"FS config converter parameters: "
operator|+
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yarn site config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|,
name|params
operator|.
name|getYarnSiteXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FS xml"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
name|params
operator|.
name|getFairSchedulerXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Conversion rules config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
name|params
operator|.
name|getConversionRulesConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Console mode"
argument_list|,
name|params
operator|.
name|isConsole
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationClusterResource ()
specifier|public
name|void
name|testConvertFSConfigurationClusterResource
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|FSConfigToCSConfigConverterParams
argument_list|>
name|conversionParams
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|FSConfigToCSConfigConverterParams
operator|.
name|class
argument_list|)
decl_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
operator|new
name|FSConfigToCSConfigArgumentHandler
argument_list|(
name|mockConverter
argument_list|)
decl_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
literal|"-p"
argument_list|,
literal|"-c"
argument_list|,
literal|"vcores=20, memory-mb=240"
argument_list|)
decl_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
comment|// validate params
name|Mockito
operator|.
name|verify
argument_list|(
name|mockConverter
argument_list|)
operator|.
name|convert
argument_list|(
name|conversionParams
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|conversionParams
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"FS config converter parameters: "
operator|+
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yarn site config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|YARN_SITE_XML
argument_list|,
name|params
operator|.
name|getYarnSiteXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FS xml"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
name|params
operator|.
name|getFairSchedulerXmlConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Conversion rules config"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
name|params
operator|.
name|getConversionRulesConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cluster resource"
argument_list|,
literal|"vcores=20, memory-mb=240"
argument_list|,
name|params
operator|.
name|getClusterResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Console mode"
argument_list|,
name|params
operator|.
name|isConsole
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationErrorHandling ()
specifier|public
name|void
name|testConvertFSConfigurationErrorHandling
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
literal|"-p"
argument_list|)
decl_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|UnsupportedPropertyException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockConverter
argument_list|)
operator|.
name|convert
argument_list|(
name|ArgumentMatchers
operator|.
name|any
argument_list|(
name|FSConfigToCSConfigConverterParams
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Error content missing"
argument_list|,
name|fsTestCommons
operator|.
name|getErrContent
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Unsupported property/setting encountered"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationErrorHandling2 ()
specifier|public
name|void
name|testConvertFSConfigurationErrorHandling2
parameter_list|()
throws|throws
name|Exception
block|{
name|setupFSConfigConversionFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getArgumentsAsArrayWithDefaults
argument_list|(
literal|"-f"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|FS_ALLOC_FILE
argument_list|,
literal|"-r"
argument_list|,
name|FSConfigConverterTestCommons
operator|.
name|CONVERSION_RULES_FILE
argument_list|,
literal|"-p"
argument_list|)
decl_stmt|;
name|FSConfigToCSConfigArgumentHandler
name|argumentHandler
init|=
name|createArgumentHandler
argument_list|()
decl_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
name|ConversionException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockConverter
argument_list|)
operator|.
name|convert
argument_list|(
name|ArgumentMatchers
operator|.
name|any
argument_list|(
name|FSConfigToCSConfigConverterParams
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|argumentHandler
operator|.
name|parseAndConvert
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Error content missing"
argument_list|,
name|fsTestCommons
operator|.
name|getErrContent
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Fatal error during FS config conversion"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

