begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|test
operator|.
name|WebAppTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_comment
comment|/**  * This class tests the RedirectionErrorPage.  */
end_comment

begin_class
DECL|class|TestRedirectionErrorPage
specifier|public
class|class
name|TestRedirectionErrorPage
block|{
annotation|@
name|Test
DECL|method|testAppBlockRenderWithNullCurrentAppAttempt ()
specifier|public
name|void
name|testAppBlockRenderWithNullCurrentAppAttempt
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Injector
name|injector
decl_stmt|;
comment|// initialize RM Context, and create RMApp, without creating RMAppAttempt
specifier|final
name|RMContext
name|rmContext
init|=
name|TestRMWebApp
operator|.
name|mockRMContext
argument_list|(
literal|15
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|8
argument_list|)
decl_stmt|;
name|injector
operator|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|RMContext
operator|.
name|class
argument_list|,
name|rmContext
argument_list|,
operator|new
name|Module
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
try|try
block|{
name|ResourceManager
name|rm
init|=
name|TestRMWebApp
operator|.
name|mockRm
argument_list|(
name|rmContext
argument_list|)
decl_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|rm
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ErrorBlock
name|instance
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|ErrorBlock
operator|.
name|class
argument_list|)
decl_stmt|;
name|instance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|APPLICATION_ID
argument_list|,
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|ERROR_MESSAGE
argument_list|,
literal|"This is an error"
argument_list|)
expr_stmt|;
name|instance
operator|.
name|render
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

