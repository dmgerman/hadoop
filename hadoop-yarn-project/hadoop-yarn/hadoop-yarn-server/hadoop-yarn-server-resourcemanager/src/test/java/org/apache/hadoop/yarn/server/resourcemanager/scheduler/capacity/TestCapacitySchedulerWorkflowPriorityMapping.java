begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|WorkflowPriorityMappingsManager
operator|.
name|WorkflowPriorityMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_class
DECL|class|TestCapacitySchedulerWorkflowPriorityMapping
specifier|public
class|class
name|TestCapacitySchedulerWorkflowPriorityMapping
extends|extends
name|CapacitySchedulerTestBase
block|{
DECL|field|mockRM
specifier|private
name|MockRM
name|mockRM
init|=
literal|null
decl_stmt|;
DECL|method|setWorkFlowPriorityMappings ( CapacitySchedulerConfiguration conf)
specifier|private
specifier|static
name|void
name|setWorkFlowPriorityMappings
parameter_list|(
name|CapacitySchedulerConfiguration
name|conf
parameter_list|)
block|{
comment|// Define top-level queues
name|conf
operator|.
name|setQueues
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"a"
block|,
literal|"b"
block|}
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|A
argument_list|,
name|A_CAPACITY
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|B
argument_list|,
name|B_CAPACITY
argument_list|)
expr_stmt|;
comment|// Define 2nd-level queues
name|conf
operator|.
name|setQueues
argument_list|(
name|A
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"a1"
block|,
literal|"a2"
block|}
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|A1
argument_list|,
name|A1_CAPACITY
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|A2
argument_list|,
name|A2_CAPACITY
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setQueues
argument_list|(
name|B
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"b1"
block|,
literal|"b2"
block|,
literal|"b3"
block|}
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|B1
argument_list|,
name|B1_CAPACITY
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|B2
argument_list|,
name|B2_CAPACITY
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setCapacity
argument_list|(
name|B3
argument_list|,
name|B3_CAPACITY
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|WorkflowPriorityMapping
argument_list|>
name|mappings
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow1"
argument_list|,
name|B
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow2"
argument_list|,
name|A1
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow3"
argument_list|,
name|A
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setWorkflowPriorityMappings
argument_list|(
name|mappings
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWorkflowPriorityMappings ()
specifier|public
name|void
name|testWorkflowPriorityMappings
parameter_list|()
throws|throws
name|Exception
block|{
name|CapacitySchedulerConfiguration
name|conf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ENABLE_WORKFLOW_PRIORITY_MAPPINGS_OVERRIDE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Initialize workflow priority mappings.
name|setWorkFlowPriorityMappings
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mockRM
operator|=
operator|new
name|MockRM
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|mockRM
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|mockRM
operator|.
name|start
argument_list|()
expr_stmt|;
name|cs
operator|.
name|start
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|expected
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|A
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"workflow3"
argument_list|,
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow3"
argument_list|,
name|A
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|B
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"workflow1"
argument_list|,
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow1"
argument_list|,
name|B
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|A1
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"workflow2"
argument_list|,
operator|new
name|WorkflowPriorityMapping
argument_list|(
literal|"workflow2"
argument_list|,
name|A1
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|cs
operator|.
name|getWorkflowPriorityMappingsManager
argument_list|()
operator|.
name|getWorkflowPriorityMappings
argument_list|()
argument_list|)
expr_stmt|;
comment|// Maps to rule corresponding to parent queue "a" for workflow3.
name|mockRM
operator|.
name|submitApp
argument_list|(
literal|1
argument_list|,
literal|"a2"
argument_list|,
literal|true
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_YARN_WORKFLOW_ID_TAG_PREFIX
operator|+
literal|"workflow3"
argument_list|)
argument_list|)
expr_stmt|;
name|RMApp
name|app
init|=
name|mockRM
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|get
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
comment|// Does not match any rule as rule for queue + workflow does not exist.
comment|// Priority passed in the app is taken up.
name|mockRM
operator|.
name|submitApp
argument_list|(
literal|1
argument_list|,
literal|"a1"
argument_list|,
literal|true
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|6
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_YARN_WORKFLOW_ID_TAG_PREFIX
operator|+
literal|"workflow1"
argument_list|)
argument_list|)
expr_stmt|;
name|app
operator|=
name|mockRM
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|get
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
comment|// Maps to rule corresponding to parent queue "a1" for workflow2.
name|mockRM
operator|.
name|submitApp
argument_list|(
literal|1
argument_list|,
literal|"a1"
argument_list|,
literal|true
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_YARN_WORKFLOW_ID_TAG_PREFIX
operator|+
literal|"workflow2"
argument_list|)
argument_list|)
expr_stmt|;
name|app
operator|=
name|mockRM
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|get
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
comment|// Maps to rule corresponding to parent queue "b" for workflow1.
name|mockRM
operator|.
name|submitApp
argument_list|(
literal|1
argument_list|,
literal|"b3"
argument_list|,
literal|true
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_YARN_WORKFLOW_ID_TAG_PREFIX
operator|+
literal|"workflow1"
argument_list|)
argument_list|)
expr_stmt|;
name|app
operator|=
name|mockRM
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|get
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
comment|// Disable workflow priority mappings override and reinitialize scheduler.
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ENABLE_WORKFLOW_PRIORITY_MAPPINGS_OVERRIDE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cs
operator|.
name|reinitialize
argument_list|(
name|conf
argument_list|,
name|mockRM
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|mockRM
operator|.
name|submitApp
argument_list|(
literal|1
argument_list|,
literal|"a2"
argument_list|,
literal|true
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_YARN_WORKFLOW_ID_TAG_PREFIX
operator|+
literal|"workflow3"
argument_list|)
argument_list|)
expr_stmt|;
name|app
operator|=
name|mockRM
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|get
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

