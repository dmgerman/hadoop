begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|AbstractYarnScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|CustomResourceTypesConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|helper
operator|.
name|AppInfoJsonVerifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|helper
operator|.
name|AppInfoXmlVerifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|helper
operator|.
name|ResourceRequestsJsonVerifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|helper
operator|.
name|ResourceRequestsXmlVerifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|TestRMWebServicesCustomResourceTypesCommons
specifier|public
class|class
name|TestRMWebServicesCustomResourceTypesCommons
block|{
DECL|method|verifyAppsXML (NodeList appArray, RMApp app, ResourceManager rm)
specifier|static
name|void
name|verifyAppsXML
parameter_list|(
name|NodeList
name|appArray
parameter_list|,
name|RMApp
name|app
parameter_list|,
name|ResourceManager
name|rm
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|appArray
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|element
init|=
operator|(
name|Element
operator|)
name|appArray
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|AppInfoXmlVerifications
operator|.
name|verify
argument_list|(
name|element
argument_list|,
name|app
argument_list|)
expr_stmt|;
name|NodeList
name|resourceRequests
init|=
name|element
operator|.
name|getElementsByTagName
argument_list|(
literal|"resourceRequests"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resourceRequests
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|resourceRequest
init|=
name|resourceRequests
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ResourceRequest
name|rr
init|=
operator|(
operator|(
name|AbstractYarnScheduler
operator|)
name|rm
operator|.
name|getRMContext
argument_list|()
operator|.
name|getScheduler
argument_list|()
operator|)
operator|.
name|getApplicationAttempt
argument_list|(
name|app
operator|.
name|getCurrentAppAttempt
argument_list|()
operator|.
name|getAppAttemptId
argument_list|()
argument_list|)
operator|.
name|getAppSchedulingInfo
argument_list|()
operator|.
name|getAllResourceRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ResourceRequestsXmlVerifications
operator|.
name|verifyWithCustomResourceTypes
argument_list|(
operator|(
name|Element
operator|)
name|resourceRequest
argument_list|,
name|rr
argument_list|,
name|CustomResourceTypesConfigurationProvider
operator|.
name|getCustomResourceTypes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyAppInfoJson (JSONObject info, RMApp app, ResourceManager rm)
specifier|static
name|void
name|verifyAppInfoJson
parameter_list|(
name|JSONObject
name|info
parameter_list|,
name|RMApp
name|app
parameter_list|,
name|ResourceManager
name|rm
parameter_list|)
throws|throws
name|JSONException
block|{
name|int
name|expectedNumberOfElements
init|=
name|getExpectedNumberOfElements
argument_list|(
name|app
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"incorrect number of elements"
argument_list|,
name|expectedNumberOfElements
argument_list|,
name|info
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|AppInfoJsonVerifications
operator|.
name|verify
argument_list|(
name|info
argument_list|,
name|app
argument_list|)
expr_stmt|;
name|JSONArray
name|resourceRequests
init|=
name|info
operator|.
name|getJSONArray
argument_list|(
literal|"resourceRequests"
argument_list|)
decl_stmt|;
name|JSONObject
name|requestInfo
init|=
name|resourceRequests
operator|.
name|getJSONObject
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ResourceRequest
name|rr
init|=
operator|(
operator|(
name|AbstractYarnScheduler
operator|)
name|rm
operator|.
name|getRMContext
argument_list|()
operator|.
name|getScheduler
argument_list|()
operator|)
operator|.
name|getApplicationAttempt
argument_list|(
name|app
operator|.
name|getCurrentAppAttempt
argument_list|()
operator|.
name|getAppAttemptId
argument_list|()
argument_list|)
operator|.
name|getAppSchedulingInfo
argument_list|()
operator|.
name|getAllResourceRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ResourceRequestsJsonVerifications
operator|.
name|verifyWithCustomResourceTypes
argument_list|(
name|requestInfo
argument_list|,
name|rr
argument_list|,
name|CustomResourceTypesConfigurationProvider
operator|.
name|getCustomResourceTypes
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getExpectedNumberOfElements (RMApp app)
specifier|static
name|int
name|getExpectedNumberOfElements
parameter_list|(
name|RMApp
name|app
parameter_list|)
block|{
name|int
name|expectedNumberOfElements
init|=
literal|40
operator|+
literal|2
decl_stmt|;
comment|// 2 -> resourceRequests
if|if
condition|(
name|app
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getNodeLabelExpression
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|expectedNumberOfElements
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|app
operator|.
name|getAMResourceRequests
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getNodeLabelExpression
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|expectedNumberOfElements
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|AppInfo
operator|.
name|getAmRPCAddressFromRMAppAttempt
argument_list|(
name|app
operator|.
name|getCurrentAppAttempt
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|expectedNumberOfElements
operator|++
expr_stmt|;
block|}
return|return
name|expectedNumberOfElements
return|;
block|}
block|}
end_class

end_unit

