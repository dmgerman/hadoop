begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*******************************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *   or more contributor license agreements.  See the NOTICE file  *   distributed with this work for additional information  *   regarding copyright ownership.  The ASF licenses this file  *   to you under the Apache License, Version 2.0 (the  *   "License"); you may not use this file except in compliance  *   with the License.  You may obtain a copy of the License at  *    *       http://www.apache.org/licenses/LICENSE-2.0  *    *   Unless required by applicable law or agreed to in writing, software  *   distributed under the License is distributed on an "AS IS" BASIS,  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *   See the License for the specific language governing permissions and  *   limitations under the License.  *******************************************************************************/
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.reservation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequestInterpreter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ReservationDefinitionPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ReservationRequestsPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
operator|.
name|exceptions
operator|.
name|PlanningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|QueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|DefaultResourceCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|log
operator|.
name|Log
import|;
end_import

begin_class
DECL|class|TestGreedyReservationAgent
specifier|public
class|class
name|TestGreedyReservationAgent
block|{
DECL|field|agent
name|ReservationAgent
name|agent
decl_stmt|;
DECL|field|plan
name|InMemoryPlan
name|plan
decl_stmt|;
DECL|field|minAlloc
name|Resource
name|minAlloc
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
decl_stmt|;
DECL|field|res
name|ResourceCalculator
name|res
init|=
operator|new
name|DefaultResourceCalculator
argument_list|()
decl_stmt|;
DECL|field|maxAlloc
name|Resource
name|maxAlloc
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
literal|8
argument_list|,
literal|8
argument_list|)
decl_stmt|;
DECL|field|rand
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
DECL|field|step
name|long
name|step
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|seed
init|=
name|rand
operator|.
name|nextLong
argument_list|()
decl_stmt|;
name|rand
operator|.
name|setSeed
argument_list|(
name|seed
argument_list|)
expr_stmt|;
name|Log
operator|.
name|info
argument_list|(
literal|"Running with seed: "
operator|+
name|seed
argument_list|)
expr_stmt|;
comment|// setting completely loose quotas
name|long
name|timeWindow
init|=
literal|1000000L
decl_stmt|;
name|Resource
name|clusterCapacity
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|100
operator|*
literal|1024
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|step
operator|=
literal|1000L
expr_stmt|;
name|ReservationSystemTestUtil
name|testUtil
init|=
operator|new
name|ReservationSystemTestUtil
argument_list|()
decl_stmt|;
name|String
name|reservationQ
init|=
name|testUtil
operator|.
name|getFullReservationQueueName
argument_list|()
decl_stmt|;
name|float
name|instConstraint
init|=
literal|100
decl_stmt|;
name|float
name|avgConstraint
init|=
literal|100
decl_stmt|;
name|ReservationSchedulerConfiguration
name|conf
init|=
name|ReservationSystemTestUtil
operator|.
name|createConf
argument_list|(
name|reservationQ
argument_list|,
name|timeWindow
argument_list|,
name|instConstraint
argument_list|,
name|avgConstraint
argument_list|)
decl_stmt|;
name|CapacityOverTimePolicy
name|policy
init|=
operator|new
name|CapacityOverTimePolicy
argument_list|()
decl_stmt|;
name|policy
operator|.
name|init
argument_list|(
name|reservationQ
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|agent
operator|=
operator|new
name|GreedyReservationAgent
argument_list|()
expr_stmt|;
name|QueueMetrics
name|queueMetrics
init|=
name|mock
argument_list|(
name|QueueMetrics
operator|.
name|class
argument_list|)
decl_stmt|;
name|plan
operator|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|clusterCapacity
argument_list|,
name|step
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
literal|"dedicated"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"javadoc"
argument_list|)
annotation|@
name|Test
DECL|method|testSimple ()
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create a request with a single atomic ask
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|5
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|20
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|reservationID
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER SIMPLE ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|10
operator|*
name|step
init|;
name|i
operator|<
literal|20
operator|*
name|step
condition|;
name|i
operator|++
control|)
block|{
name|assertTrue
argument_list|(
literal|"Agent-based allocation unexpected"
argument_list|,
name|Resources
operator|.
name|equals
argument_list|(
name|cs
operator|.
name|getResourcesAtTime
argument_list|(
name|i
argument_list|)
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
operator|*
literal|10
argument_list|,
literal|2
operator|*
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testOrder ()
specifier|public
name|void
name|testOrder
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create a completely utilized segment around time 30
name|int
index|[]
name|f
init|=
block|{
literal|100
block|,
literal|100
block|}
decl_stmt|;
name|assertTrue
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|,
name|plan
operator|.
name|addReservation
argument_list|(
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"u1"
argument_list|,
literal|"dedicated"
argument_list|,
literal|30
operator|*
name|step
argument_list|,
literal|30
operator|*
name|step
operator|+
name|f
operator|.
name|length
operator|*
name|step
argument_list|,
name|ReservationSystemTestUtil
operator|.
name|generateAllocation
argument_list|(
literal|30
operator|*
name|step
argument_list|,
name|step
argument_list|,
name|f
argument_list|)
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// create a chain of 4 RR, mixing gang and non-gang
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|0
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|70
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ORDER
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
operator|*
name|step
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
comment|// submit to agent
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
comment|// validate
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|reservationID
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|0
operator|*
name|step
argument_list|,
literal|10
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|10
operator|*
name|step
argument_list|,
literal|30
operator|*
name|step
argument_list|,
literal|10
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|40
operator|*
name|step
argument_list|,
literal|50
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|50
operator|*
name|step
argument_list|,
literal|70
operator|*
name|step
argument_list|,
literal|10
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ORDER ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOrderNoGapImpossible ()
specifier|public
name|void
name|testOrderNoGapImpossible
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create a completely utilized segment at time 30
name|int
index|[]
name|f
init|=
block|{
literal|100
block|,
literal|100
block|}
decl_stmt|;
name|assertTrue
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|,
name|plan
operator|.
name|addReservation
argument_list|(
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"u1"
argument_list|,
literal|"dedicated"
argument_list|,
literal|30
operator|*
name|step
argument_list|,
literal|30
operator|*
name|step
operator|+
name|f
operator|.
name|length
operator|*
name|step
argument_list|,
name|ReservationSystemTestUtil
operator|.
name|generateAllocation
argument_list|(
literal|30
operator|*
name|step
argument_list|,
name|step
argument_list|,
name|f
argument_list|)
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// create a chain of 4 RR, mixing gang and non-gang
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|70L
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ORDER_NO_GAP
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|boolean
name|result
init|=
literal|false
decl_stmt|;
try|try
block|{
comment|// submit to agent
name|result
operator|=
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|p
parameter_list|)
block|{
comment|// expected
block|}
comment|// validate
name|assertFalse
argument_list|(
literal|"Agent-based allocation should have failed"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation should have failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ORDER_NO_GAP IMPOSSIBLE ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOrderNoGap ()
specifier|public
name|void
name|testOrderNoGap
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create a chain of 4 RR, mixing gang and non-gang
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|0
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|60
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ORDER_NO_GAP
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
operator|*
name|step
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
comment|// submit to agent
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ORDER ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
comment|// validate
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|reservationID
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|0
operator|*
name|step
argument_list|,
literal|10
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|10
operator|*
name|step
argument_list|,
literal|30
operator|*
name|step
argument_list|,
literal|10
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|30
operator|*
name|step
argument_list|,
literal|40
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|40
operator|*
name|step
argument_list|,
literal|60
operator|*
name|step
argument_list|,
literal|10
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSingleSliding ()
specifier|public
name|void
name|testSingleSliding
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create a single request for which we need subsequent (tight) packing.
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|100
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|120
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ALL
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|200
argument_list|,
literal|10
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
comment|// submit to agent
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
comment|// validate results, we expect the second one to be accepted
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|reservationID
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|100
operator|*
name|step
argument_list|,
literal|120
operator|*
name|step
argument_list|,
literal|100
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER packed ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAny ()
specifier|public
name|void
name|testAny
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create an ANY request, with an impossible step (last in list, first
comment|// considered),
comment|// and two satisfiable ones. We expect the second one to be returned.
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|100
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|120
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ANY
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r3
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|110
argument_list|,
literal|110
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r3
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
comment|// submit to agent
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|boolean
name|res
init|=
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
decl_stmt|;
comment|// validate results, we expect the second one to be accepted
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|110
operator|*
name|step
argument_list|,
literal|120
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ANY ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAnyImpossible ()
specifier|public
name|void
name|testAnyImpossible
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create an ANY request, with all impossible alternatives
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|120L
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ANY
argument_list|)
expr_stmt|;
comment|// longer than arrival-deadline
name|ReservationRequest
name|r1
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|35
argument_list|,
literal|5
argument_list|,
literal|30
argument_list|)
decl_stmt|;
comment|// above max cluster size
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|110
argument_list|,
literal|110
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|boolean
name|result
init|=
literal|false
decl_stmt|;
try|try
block|{
comment|// submit to agent
name|result
operator|=
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|p
parameter_list|)
block|{
comment|// expected
block|}
comment|// validate results, we expect the second one to be accepted
name|assertFalse
argument_list|(
literal|"Agent-based allocation should have failed"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation should have failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ANY IMPOSSIBLE ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAll ()
specifier|public
name|void
name|testAll
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create an ALL request
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|100
operator|*
name|step
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|120
operator|*
name|step
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ALL
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
operator|*
name|step
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
operator|*
name|step
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
comment|// submit to agent
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
comment|// validate results, we expect the second one to be accepted
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|reservationID
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|ReservationAllocation
name|cs
init|=
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|100
operator|*
name|step
argument_list|,
literal|110
operator|*
name|step
argument_list|,
literal|20
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|toString
argument_list|()
argument_list|,
name|check
argument_list|(
name|cs
argument_list|,
literal|110
operator|*
name|step
argument_list|,
literal|120
operator|*
name|step
argument_list|,
literal|25
argument_list|,
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ALL ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllImpossible ()
specifier|public
name|void
name|testAllImpossible
parameter_list|()
throws|throws
name|PlanningException
block|{
name|prepareBasicPlan
argument_list|()
expr_stmt|;
comment|// create an ALL request, with an impossible combination, it should be
comment|// rejected, and allocation remain unchanged
name|ReservationDefinition
name|rr
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setArrival
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDeadline
argument_list|(
literal|120L
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ALL
argument_list|)
expr_stmt|;
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|55
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|ReservationRequest
name|r2
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|55
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|boolean
name|result
init|=
literal|false
decl_stmt|;
try|try
block|{
comment|// submit to agent
name|result
operator|=
name|agent
operator|.
name|createReservation
argument_list|(
name|reservationID
argument_list|,
literal|"u1"
argument_list|,
name|plan
argument_list|,
name|rr
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|p
parameter_list|)
block|{
comment|// expected
block|}
comment|// validate results, we expect the second one to be accepted
name|assertFalse
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Agent-based allocation failed"
argument_list|,
name|plan
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------AFTER ALL IMPOSSIBLE ALLOCATION (queue: "
operator|+
name|reservationID
operator|+
literal|")----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|prepareBasicPlan ()
specifier|private
name|void
name|prepareBasicPlan
parameter_list|()
throws|throws
name|PlanningException
block|{
comment|// insert in the reservation a couple of controlled reservations, to create
comment|// conditions for assignment that are non-empty
name|int
index|[]
name|f
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|20
block|,
literal|20
block|,
literal|20
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|assertTrue
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|,
name|plan
operator|.
name|addReservation
argument_list|(
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"u1"
argument_list|,
literal|"dedicated"
argument_list|,
literal|0L
argument_list|,
literal|0L
operator|+
name|f
operator|.
name|length
operator|*
name|step
argument_list|,
name|ReservationSystemTestUtil
operator|.
name|generateAllocation
argument_list|(
literal|0
argument_list|,
name|step
argument_list|,
name|f
argument_list|)
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|int
index|[]
name|f2
init|=
block|{
literal|5
block|,
literal|5
block|,
literal|5
block|,
literal|5
block|,
literal|5
block|,
literal|5
block|,
literal|5
block|}
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|alloc
init|=
name|ReservationSystemTestUtil
operator|.
name|generateAllocation
argument_list|(
literal|5000
argument_list|,
name|step
argument_list|,
name|f2
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|,
name|plan
operator|.
name|addReservation
argument_list|(
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"u1"
argument_list|,
literal|"dedicated"
argument_list|,
literal|5000
argument_list|,
literal|5000
operator|+
name|f2
operator|.
name|length
operator|*
name|step
argument_list|,
name|alloc
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--------BEFORE AGENT----------"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plan
operator|.
name|toCumulativeString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|check (ReservationAllocation cs, long start, long end, int containers, int mem, int cores)
specifier|private
name|boolean
name|check
parameter_list|(
name|ReservationAllocation
name|cs
parameter_list|,
name|long
name|start
parameter_list|,
name|long
name|end
parameter_list|,
name|int
name|containers
parameter_list|,
name|int
name|mem
parameter_list|,
name|int
name|cores
parameter_list|)
block|{
name|boolean
name|res
init|=
literal|true
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
name|start
init|;
name|i
operator|<
name|end
condition|;
name|i
operator|++
control|)
block|{
name|res
operator|=
name|res
operator|&&
name|Resources
operator|.
name|equals
argument_list|(
name|cs
operator|.
name|getResourcesAtTime
argument_list|(
name|i
argument_list|)
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
name|mem
operator|*
name|containers
argument_list|,
name|cores
operator|*
name|containers
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|res
return|;
block|}
DECL|method|testStress (int numJobs)
specifier|public
name|void
name|testStress
parameter_list|(
name|int
name|numJobs
parameter_list|)
throws|throws
name|PlanningException
throws|,
name|IOException
block|{
name|long
name|timeWindow
init|=
literal|1000000L
decl_stmt|;
name|Resource
name|clusterCapacity
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|500
operator|*
literal|100
operator|*
literal|1024
argument_list|,
literal|500
operator|*
literal|32
argument_list|)
decl_stmt|;
name|step
operator|=
literal|1000L
expr_stmt|;
name|ReservationSystemTestUtil
name|testUtil
init|=
operator|new
name|ReservationSystemTestUtil
argument_list|()
decl_stmt|;
name|CapacityScheduler
name|scheduler
init|=
name|testUtil
operator|.
name|mockCapacityScheduler
argument_list|(
literal|500
operator|*
literal|100
argument_list|)
decl_stmt|;
name|String
name|reservationQ
init|=
name|testUtil
operator|.
name|getFullReservationQueueName
argument_list|()
decl_stmt|;
name|float
name|instConstraint
init|=
literal|100
decl_stmt|;
name|float
name|avgConstraint
init|=
literal|100
decl_stmt|;
name|ReservationSchedulerConfiguration
name|conf
init|=
name|ReservationSystemTestUtil
operator|.
name|createConf
argument_list|(
name|reservationQ
argument_list|,
name|timeWindow
argument_list|,
name|instConstraint
argument_list|,
name|avgConstraint
argument_list|)
decl_stmt|;
name|CapacityOverTimePolicy
name|policy
init|=
operator|new
name|CapacityOverTimePolicy
argument_list|()
decl_stmt|;
name|policy
operator|.
name|init
argument_list|(
name|reservationQ
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|plan
operator|=
operator|new
name|InMemoryPlan
argument_list|(
name|scheduler
operator|.
name|getRootQueueMetrics
argument_list|()
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|clusterCapacity
argument_list|,
name|step
argument_list|,
name|res
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
literal|"dedicated"
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|int
name|acc
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|ReservationDefinition
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationDefinition
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numJobs
condition|;
name|i
operator|++
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|generateRandomRR
argument_list|(
name|rand
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numJobs
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
if|if
condition|(
name|agent
operator|.
name|createReservation
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
argument_list|,
literal|"u"
operator|+
name|i
operator|%
literal|100
argument_list|,
name|plan
argument_list|,
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|acc
operator|++
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|PlanningException
name|p
parameter_list|)
block|{
comment|// ignore exceptions
block|}
block|}
name|long
name|end
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Submitted "
operator|+
name|numJobs
operator|+
literal|" jobs "
operator|+
literal|" accepted "
operator|+
name|acc
operator|+
literal|" in "
operator|+
operator|(
name|end
operator|-
name|start
operator|)
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
block|}
DECL|method|main (String[] arg)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|arg
parameter_list|)
block|{
comment|// run a stress test with by default 1000 random jobs
name|int
name|numJobs
init|=
literal|1000
decl_stmt|;
if|if
condition|(
name|arg
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|numJobs
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|arg
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|TestGreedyReservationAgent
name|test
init|=
operator|new
name|TestGreedyReservationAgent
argument_list|()
decl_stmt|;
name|test
operator|.
name|setup
argument_list|()
expr_stmt|;
name|test
operator|.
name|testStress
argument_list|(
name|numJobs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

