begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_class
DECL|class|TestFSQueueSchedulable
specifier|public
class|class
name|TestFSQueueSchedulable
block|{
DECL|field|schedulable
specifier|private
name|FSQueueSchedulable
name|schedulable
init|=
literal|null
decl_stmt|;
DECL|field|maxResource
specifier|private
name|Resource
name|maxResource
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|10
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|String
name|queueName
init|=
literal|"testFSQueue"
decl_stmt|;
name|FSQueue
name|mockQueue
init|=
name|mock
argument_list|(
name|FSQueue
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockQueue
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|queueName
argument_list|)
expr_stmt|;
name|QueueManager
name|mockMgr
init|=
name|mock
argument_list|(
name|QueueManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockMgr
operator|.
name|getMaxResources
argument_list|(
name|queueName
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|maxResource
argument_list|)
expr_stmt|;
name|schedulable
operator|=
operator|new
name|FSQueueSchedulable
argument_list|(
literal|null
argument_list|,
name|mockQueue
argument_list|,
name|mockMgr
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateDemand ()
specifier|public
name|void
name|testUpdateDemand
parameter_list|()
block|{
name|AppSchedulable
name|app
init|=
name|mock
argument_list|(
name|AppSchedulable
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|app
operator|.
name|getDemand
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|maxResource
argument_list|)
expr_stmt|;
name|schedulable
operator|.
name|addApp
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|schedulable
operator|.
name|addApp
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|schedulable
operator|.
name|updateDemand
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Demand is greater than max allowed "
argument_list|,
name|Resources
operator|.
name|equals
argument_list|(
name|schedulable
operator|.
name|getDemand
argument_list|()
argument_list|,
name|maxResource
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

