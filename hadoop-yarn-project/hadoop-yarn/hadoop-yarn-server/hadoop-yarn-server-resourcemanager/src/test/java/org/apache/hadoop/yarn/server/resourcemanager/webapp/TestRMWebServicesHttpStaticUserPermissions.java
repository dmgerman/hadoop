begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|minikdc
operator|.
name|MiniKdc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|KerberosTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fifo
operator|.
name|FifoScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ApplicationSubmissionContextInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
operator|.
name|Status
import|;
end_import

begin_class
DECL|class|TestRMWebServicesHttpStaticUserPermissions
specifier|public
class|class
name|TestRMWebServicesHttpStaticUserPermissions
block|{
DECL|field|testRootDir
specifier|private
specifier|static
specifier|final
name|File
name|testRootDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|TestRMWebServicesHttpStaticUserPermissions
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|"-root"
argument_list|)
decl_stmt|;
DECL|field|spnegoKeytabFile
specifier|private
specifier|static
name|File
name|spnegoKeytabFile
init|=
operator|new
name|File
argument_list|(
name|KerberosTestUtils
operator|.
name|getKeytabFile
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|spnegoPrincipal
specifier|private
specifier|static
name|String
name|spnegoPrincipal
init|=
name|KerberosTestUtils
operator|.
name|getServerPrincipal
argument_list|()
decl_stmt|;
DECL|field|testMiniKDC
specifier|private
specifier|static
name|MiniKdc
name|testMiniKDC
decl_stmt|;
DECL|field|rm
specifier|private
specifier|static
name|MockRM
name|rm
decl_stmt|;
DECL|class|Helper
specifier|static
class|class
name|Helper
block|{
DECL|field|method
name|String
name|method
decl_stmt|;
DECL|field|requestBody
name|String
name|requestBody
decl_stmt|;
DECL|method|Helper (String method, String requestBody)
name|Helper
parameter_list|(
name|String
name|method
parameter_list|,
name|String
name|requestBody
parameter_list|)
block|{
name|this
operator|.
name|method
operator|=
name|method
expr_stmt|;
name|this
operator|.
name|requestBody
operator|=
name|requestBody
expr_stmt|;
block|}
block|}
annotation|@
name|BeforeClass
DECL|method|setUp ()
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
block|{
try|try
block|{
name|testMiniKDC
operator|=
operator|new
name|MiniKdc
argument_list|(
name|MiniKdc
operator|.
name|createConf
argument_list|()
argument_list|,
name|testRootDir
argument_list|)
expr_stmt|;
name|setupKDC
argument_list|()
expr_stmt|;
name|setupAndStartRM
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Couldn't create MiniKDC"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
DECL|method|tearDown ()
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|testMiniKDC
operator|!=
literal|null
condition|)
block|{
name|testMiniKDC
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rm
operator|!=
literal|null
condition|)
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|TestRMWebServicesHttpStaticUserPermissions ()
specifier|public
name|TestRMWebServicesHttpStaticUserPermissions
parameter_list|()
throws|throws
name|Exception
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|setupAndStartRM ()
specifier|private
specifier|static
name|void
name|setupAndStartRM
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|rmconf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|rmconf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|RM_AM_MAX_ATTEMPTS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_AM_MAX_ATTEMPTS
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|FifoScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ACL_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|set
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|,
literal|"kerberos"
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|set
argument_list|(
literal|"yarn.resourcemanager.principal"
argument_list|,
name|spnegoPrincipal
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|set
argument_list|(
literal|"yarn.resourcemanager.keytab"
argument_list|,
name|spnegoKeytabFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|rmconf
operator|.
name|setBoolean
argument_list|(
literal|"mockrm.webapp.enabled"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|rmconf
argument_list|)
expr_stmt|;
name|rm
operator|=
operator|new
name|MockRM
argument_list|(
name|rmconf
argument_list|)
expr_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|setupKDC ()
specifier|private
specifier|static
name|void
name|setupKDC
parameter_list|()
throws|throws
name|Exception
block|{
name|testMiniKDC
operator|.
name|start
argument_list|()
expr_stmt|;
name|testMiniKDC
operator|.
name|createPrincipal
argument_list|(
name|spnegoKeytabFile
argument_list|,
literal|"HTTP/localhost"
argument_list|,
literal|"client"
argument_list|,
name|UserGroupInformation
operator|.
name|getLoginUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|,
literal|"client2"
argument_list|)
expr_stmt|;
block|}
comment|// Test that the http static user can't submit or kill apps
comment|// when secure mode is turned on
annotation|@
name|Test
DECL|method|testWebServiceAccess ()
specifier|public
name|void
name|testWebServiceAccess
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationSubmissionContextInfo
name|app
init|=
operator|new
name|ApplicationSubmissionContextInfo
argument_list|()
decl_stmt|;
name|String
name|appid
init|=
literal|"application_123_0"
decl_stmt|;
name|app
operator|.
name|setApplicationId
argument_list|(
name|appid
argument_list|)
expr_stmt|;
name|String
name|submitAppRequestBody
init|=
name|TestRMWebServicesDelegationTokenAuthentication
operator|.
name|getMarshalledAppInfo
argument_list|(
name|app
argument_list|)
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
literal|"http://localhost:8088/ws/v1/cluster/apps"
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
comment|// we should be access the apps page with the static user
name|TestRMWebServicesDelegationTokenAuthentication
operator|.
name|setupConn
argument_list|(
name|conn
argument_list|,
literal|"GET"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
try|try
block|{
name|conn
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Got "
operator|+
name|conn
operator|.
name|getResponseCode
argument_list|()
operator|+
literal|" instead of 200 accessing "
operator|+
name|url
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|conn
operator|.
name|disconnect
argument_list|()
expr_stmt|;
comment|// new-application, submit app and kill should fail with
comment|// forbidden
name|Map
argument_list|<
name|String
argument_list|,
name|Helper
argument_list|>
name|urlRequestMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Helper
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|killAppRequestBody
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n"
operator|+
literal|"<appstate>\n"
operator|+
literal|"<state>KILLED</state>\n"
operator|+
literal|"</appstate>"
decl_stmt|;
name|urlRequestMap
operator|.
name|put
argument_list|(
literal|"http://localhost:8088/ws/v1/cluster/apps"
argument_list|,
operator|new
name|Helper
argument_list|(
literal|"POST"
argument_list|,
name|submitAppRequestBody
argument_list|)
argument_list|)
expr_stmt|;
name|urlRequestMap
operator|.
name|put
argument_list|(
literal|"http://localhost:8088/ws/v1/cluster/apps/new-application"
argument_list|,
operator|new
name|Helper
argument_list|(
literal|"POST"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|urlRequestMap
operator|.
name|put
argument_list|(
literal|"http://localhost:8088/ws/v1/cluster/apps/app_123_1/state"
argument_list|,
operator|new
name|Helper
argument_list|(
literal|"PUT"
argument_list|,
name|killAppRequestBody
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Helper
argument_list|>
name|entry
range|:
name|urlRequestMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|URL
name|reqURL
init|=
operator|new
name|URL
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|conn
operator|=
operator|(
name|HttpURLConnection
operator|)
name|reqURL
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|String
name|method
init|=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|method
decl_stmt|;
name|String
name|body
init|=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|requestBody
decl_stmt|;
name|TestRMWebServicesDelegationTokenAuthentication
operator|.
name|setupConn
argument_list|(
name|conn
argument_list|,
name|method
argument_list|,
literal|"application/xml"
argument_list|,
name|body
argument_list|)
expr_stmt|;
try|try
block|{
name|conn
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Request "
operator|+
name|entry
operator|.
name|getKey
argument_list|()
operator|+
literal|"succeeded but should have failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|Status
operator|.
name|FORBIDDEN
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
name|InputStream
name|errorStream
init|=
name|conn
operator|.
name|getErrorStream
argument_list|()
decl_stmt|;
name|String
name|error
init|=
literal|""
decl_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|errorStream
argument_list|,
literal|"UTF8"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|line
init|;
operator|(
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|;
control|)
block|{
name|error
operator|+=
name|line
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The default static user cannot carry out this operation."
argument_list|,
name|error
argument_list|)
expr_stmt|;
block|}
name|conn
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

