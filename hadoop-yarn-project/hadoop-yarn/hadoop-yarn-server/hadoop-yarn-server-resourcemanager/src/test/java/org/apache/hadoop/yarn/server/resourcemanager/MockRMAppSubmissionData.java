begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAccessType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationTimeoutType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LogAggregationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * This class holds all data fields to submit an RM Application.  * Use the {@link Builder} class to compile necessary data for app submission.  */
end_comment

begin_class
DECL|class|MockRMAppSubmissionData
specifier|public
specifier|final
class|class
name|MockRMAppSubmissionData
block|{
DECL|field|amResourceRequests
specifier|private
specifier|final
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|amResourceRequests
decl_stmt|;
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|user
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
DECL|field|acls
specifier|private
specifier|final
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
decl_stmt|;
DECL|field|unmanaged
specifier|private
specifier|final
name|boolean
name|unmanaged
decl_stmt|;
DECL|field|queue
specifier|private
specifier|final
name|String
name|queue
decl_stmt|;
DECL|field|maxAppAttempts
specifier|private
specifier|final
name|int
name|maxAppAttempts
decl_stmt|;
DECL|field|appType
specifier|private
specifier|final
name|String
name|appType
decl_stmt|;
DECL|field|waitForAccepted
specifier|private
specifier|final
name|boolean
name|waitForAccepted
decl_stmt|;
DECL|field|keepContainers
specifier|private
specifier|final
name|boolean
name|keepContainers
decl_stmt|;
DECL|field|isAppIdProvided
specifier|private
specifier|final
name|boolean
name|isAppIdProvided
decl_stmt|;
DECL|field|applicationId
specifier|private
specifier|final
name|ApplicationId
name|applicationId
decl_stmt|;
DECL|field|attemptFailuresValidityInterval
specifier|private
specifier|final
name|long
name|attemptFailuresValidityInterval
decl_stmt|;
DECL|field|logAggregationContext
specifier|private
specifier|final
name|LogAggregationContext
name|logAggregationContext
decl_stmt|;
DECL|field|cancelTokensWhenComplete
specifier|private
specifier|final
name|boolean
name|cancelTokensWhenComplete
decl_stmt|;
DECL|field|priority
specifier|private
specifier|final
name|Priority
name|priority
decl_stmt|;
DECL|field|amLabel
specifier|private
specifier|final
name|String
name|amLabel
decl_stmt|;
DECL|field|applicationTimeouts
specifier|private
specifier|final
name|Map
argument_list|<
name|ApplicationTimeoutType
argument_list|,
name|Long
argument_list|>
name|applicationTimeouts
decl_stmt|;
DECL|field|tokensConf
specifier|private
specifier|final
name|ByteBuffer
name|tokensConf
decl_stmt|;
DECL|field|applicationTags
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|applicationTags
decl_stmt|;
DECL|field|appNodeLabel
specifier|private
specifier|final
name|String
name|appNodeLabel
decl_stmt|;
DECL|field|credentials
specifier|private
specifier|final
name|Credentials
name|credentials
decl_stmt|;
DECL|field|resource
specifier|private
specifier|final
name|Resource
name|resource
decl_stmt|;
DECL|method|getAmResourceRequests ()
specifier|public
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|getAmResourceRequests
parameter_list|()
block|{
return|return
name|amResourceRequests
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|getAcls ()
specifier|public
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|getAcls
parameter_list|()
block|{
return|return
name|acls
return|;
block|}
DECL|method|isUnmanaged ()
specifier|public
name|boolean
name|isUnmanaged
parameter_list|()
block|{
return|return
name|unmanaged
return|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
DECL|method|getMaxAppAttempts ()
specifier|public
name|int
name|getMaxAppAttempts
parameter_list|()
block|{
return|return
name|maxAppAttempts
return|;
block|}
DECL|method|getAppType ()
specifier|public
name|String
name|getAppType
parameter_list|()
block|{
return|return
name|appType
return|;
block|}
DECL|method|isWaitForAccepted ()
specifier|public
name|boolean
name|isWaitForAccepted
parameter_list|()
block|{
return|return
name|waitForAccepted
return|;
block|}
DECL|method|isKeepContainers ()
specifier|public
name|boolean
name|isKeepContainers
parameter_list|()
block|{
return|return
name|keepContainers
return|;
block|}
DECL|method|isAppIdProvided ()
specifier|public
name|boolean
name|isAppIdProvided
parameter_list|()
block|{
return|return
name|isAppIdProvided
return|;
block|}
DECL|method|getApplicationId ()
specifier|public
name|ApplicationId
name|getApplicationId
parameter_list|()
block|{
return|return
name|applicationId
return|;
block|}
DECL|method|getAttemptFailuresValidityInterval ()
specifier|public
name|long
name|getAttemptFailuresValidityInterval
parameter_list|()
block|{
return|return
name|attemptFailuresValidityInterval
return|;
block|}
DECL|method|getLogAggregationContext ()
specifier|public
name|LogAggregationContext
name|getLogAggregationContext
parameter_list|()
block|{
return|return
name|logAggregationContext
return|;
block|}
DECL|method|isCancelTokensWhenComplete ()
specifier|public
name|boolean
name|isCancelTokensWhenComplete
parameter_list|()
block|{
return|return
name|cancelTokensWhenComplete
return|;
block|}
DECL|method|getPriority ()
specifier|public
name|Priority
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
DECL|method|getAmLabel ()
specifier|public
name|String
name|getAmLabel
parameter_list|()
block|{
return|return
name|amLabel
return|;
block|}
DECL|method|getApplicationTimeouts ()
specifier|public
name|Map
argument_list|<
name|ApplicationTimeoutType
argument_list|,
name|Long
argument_list|>
name|getApplicationTimeouts
parameter_list|()
block|{
return|return
name|applicationTimeouts
return|;
block|}
DECL|method|getTokensConf ()
specifier|public
name|ByteBuffer
name|getTokensConf
parameter_list|()
block|{
return|return
name|tokensConf
return|;
block|}
DECL|method|getApplicationTags ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getApplicationTags
parameter_list|()
block|{
return|return
name|applicationTags
return|;
block|}
DECL|method|getAppNodeLabel ()
specifier|public
name|String
name|getAppNodeLabel
parameter_list|()
block|{
return|return
name|appNodeLabel
return|;
block|}
DECL|method|getCredentials ()
specifier|public
name|Credentials
name|getCredentials
parameter_list|()
block|{
return|return
name|credentials
return|;
block|}
DECL|method|getResource ()
specifier|public
name|Resource
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
DECL|method|MockRMAppSubmissionData (Builder builder)
specifier|private
name|MockRMAppSubmissionData
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|amLabel
operator|=
name|builder
operator|.
name|amLabel
expr_stmt|;
name|this
operator|.
name|tokensConf
operator|=
name|builder
operator|.
name|tokensConf
expr_stmt|;
name|this
operator|.
name|maxAppAttempts
operator|=
name|builder
operator|.
name|maxAppAttempts
expr_stmt|;
name|this
operator|.
name|logAggregationContext
operator|=
name|builder
operator|.
name|logAggregationContext
expr_stmt|;
name|this
operator|.
name|queue
operator|=
name|builder
operator|.
name|queue
expr_stmt|;
name|this
operator|.
name|amResourceRequests
operator|=
name|builder
operator|.
name|amResourceRequests
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|builder
operator|.
name|user
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|builder
operator|.
name|priority
expr_stmt|;
name|this
operator|.
name|waitForAccepted
operator|=
name|builder
operator|.
name|waitForAccepted
expr_stmt|;
name|this
operator|.
name|keepContainers
operator|=
name|builder
operator|.
name|keepContainers
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|builder
operator|.
name|name
expr_stmt|;
name|this
operator|.
name|applicationId
operator|=
name|builder
operator|.
name|applicationId
expr_stmt|;
name|this
operator|.
name|attemptFailuresValidityInterval
operator|=
name|builder
operator|.
name|attemptFailuresValidityInterval
expr_stmt|;
name|this
operator|.
name|acls
operator|=
name|builder
operator|.
name|acls
expr_stmt|;
name|this
operator|.
name|appType
operator|=
name|builder
operator|.
name|appType
expr_stmt|;
name|this
operator|.
name|appNodeLabel
operator|=
name|builder
operator|.
name|appNodeLabel
expr_stmt|;
name|this
operator|.
name|isAppIdProvided
operator|=
name|builder
operator|.
name|isAppIdProvided
expr_stmt|;
name|this
operator|.
name|unmanaged
operator|=
name|builder
operator|.
name|unmanaged
expr_stmt|;
name|this
operator|.
name|applicationTags
operator|=
name|builder
operator|.
name|applicationTags
expr_stmt|;
name|this
operator|.
name|cancelTokensWhenComplete
operator|=
name|builder
operator|.
name|cancelTokensWhenComplete
expr_stmt|;
name|this
operator|.
name|applicationTimeouts
operator|=
name|builder
operator|.
name|applicationTimeouts
expr_stmt|;
name|this
operator|.
name|credentials
operator|=
name|builder
operator|.
name|credentials
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|builder
operator|.
name|resource
expr_stmt|;
block|}
comment|/**    * Tests should use this class to prepare all data required to submit an app.    */
DECL|class|Builder
specifier|public
specifier|static
specifier|final
class|class
name|Builder
block|{
DECL|field|amResourceRequests
specifier|private
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|amResourceRequests
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|acls
specifier|private
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
decl_stmt|;
DECL|field|unmanaged
specifier|private
name|boolean
name|unmanaged
decl_stmt|;
DECL|field|queue
specifier|private
name|String
name|queue
decl_stmt|;
DECL|field|maxAppAttempts
specifier|private
name|int
name|maxAppAttempts
decl_stmt|;
DECL|field|appType
specifier|private
name|String
name|appType
decl_stmt|;
DECL|field|waitForAccepted
specifier|private
name|boolean
name|waitForAccepted
decl_stmt|;
DECL|field|keepContainers
specifier|private
name|boolean
name|keepContainers
decl_stmt|;
DECL|field|isAppIdProvided
specifier|private
name|boolean
name|isAppIdProvided
decl_stmt|;
DECL|field|applicationId
specifier|private
name|ApplicationId
name|applicationId
decl_stmt|;
DECL|field|attemptFailuresValidityInterval
specifier|private
name|long
name|attemptFailuresValidityInterval
decl_stmt|;
DECL|field|logAggregationContext
specifier|private
name|LogAggregationContext
name|logAggregationContext
decl_stmt|;
DECL|field|cancelTokensWhenComplete
specifier|private
name|boolean
name|cancelTokensWhenComplete
decl_stmt|;
DECL|field|priority
specifier|private
name|Priority
name|priority
decl_stmt|;
DECL|field|amLabel
specifier|private
name|String
name|amLabel
decl_stmt|;
DECL|field|applicationTimeouts
specifier|private
name|Map
argument_list|<
name|ApplicationTimeoutType
argument_list|,
name|Long
argument_list|>
name|applicationTimeouts
decl_stmt|;
DECL|field|tokensConf
specifier|private
name|ByteBuffer
name|tokensConf
decl_stmt|;
DECL|field|applicationTags
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|applicationTags
decl_stmt|;
DECL|field|appNodeLabel
specifier|private
name|String
name|appNodeLabel
decl_stmt|;
DECL|field|credentials
specifier|private
name|Credentials
name|credentials
decl_stmt|;
DECL|field|resource
specifier|private
name|Resource
name|resource
decl_stmt|;
DECL|method|Builder ()
specifier|private
name|Builder
parameter_list|()
block|{     }
DECL|method|create ()
specifier|public
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
DECL|method|createWithMemory (long memory, MockRM mockRM)
specifier|public
specifier|static
name|Builder
name|createWithMemory
parameter_list|(
name|long
name|memory
parameter_list|,
name|MockRM
name|mockRM
parameter_list|)
throws|throws
name|IOException
block|{
name|Resource
name|resource
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setMemorySize
argument_list|(
name|memory
argument_list|)
expr_stmt|;
return|return
name|createWithResource
argument_list|(
name|resource
argument_list|,
name|mockRM
argument_list|)
return|;
block|}
DECL|method|createWithResource (Resource resource, MockRM mockRM)
specifier|public
specifier|static
name|Builder
name|createWithResource
parameter_list|(
name|Resource
name|resource
parameter_list|,
name|MockRM
name|mockRM
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|maxAppAttempts
init|=
name|mockRM
operator|.
name|getConfig
argument_list|()
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|RM_AM_MAX_ATTEMPTS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_AM_MAX_ATTEMPTS
argument_list|)
decl_stmt|;
return|return
name|MockRMAppSubmissionData
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|withResource
argument_list|(
name|resource
argument_list|)
operator|.
name|withAppName
argument_list|(
literal|""
argument_list|)
operator|.
name|withUser
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|)
operator|.
name|withAcls
argument_list|(
literal|null
argument_list|)
operator|.
name|withUnmanagedAM
argument_list|(
literal|false
argument_list|)
operator|.
name|withQueue
argument_list|(
literal|null
argument_list|)
operator|.
name|withMaxAppAttempts
argument_list|(
name|maxAppAttempts
argument_list|)
operator|.
name|withCredentials
argument_list|(
literal|null
argument_list|)
operator|.
name|withAppType
argument_list|(
literal|null
argument_list|)
operator|.
name|withWaitForAppAcceptedState
argument_list|(
literal|true
argument_list|)
operator|.
name|withKeepContainers
argument_list|(
literal|false
argument_list|)
operator|.
name|withApplicationId
argument_list|(
literal|null
argument_list|)
operator|.
name|withAttemptFailuresValidityInterval
argument_list|(
literal|0L
argument_list|)
operator|.
name|withLogAggregationContext
argument_list|(
literal|null
argument_list|)
operator|.
name|withCancelTokensWhenComplete
argument_list|(
literal|true
argument_list|)
operator|.
name|withAppPriority
argument_list|(
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|withAmLabel
argument_list|(
literal|""
argument_list|)
operator|.
name|withApplicationTimeouts
argument_list|(
literal|null
argument_list|)
operator|.
name|withTokensConf
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|withAmResourceRequests ( List<ResourceRequest> amResourceRequests)
specifier|public
name|Builder
name|withAmResourceRequests
parameter_list|(
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|amResourceRequests
parameter_list|)
block|{
name|this
operator|.
name|amResourceRequests
operator|=
name|amResourceRequests
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAppName (String name)
specifier|public
name|Builder
name|withAppName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withUser (String user)
specifier|public
name|Builder
name|withUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAcls (Map<ApplicationAccessType, String> acls)
specifier|public
name|Builder
name|withAcls
parameter_list|(
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
parameter_list|)
block|{
name|this
operator|.
name|acls
operator|=
name|acls
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withUnmanagedAM (boolean unmanaged)
specifier|public
name|Builder
name|withUnmanagedAM
parameter_list|(
name|boolean
name|unmanaged
parameter_list|)
block|{
name|this
operator|.
name|unmanaged
operator|=
name|unmanaged
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withQueue (String queue)
specifier|public
name|Builder
name|withQueue
parameter_list|(
name|String
name|queue
parameter_list|)
block|{
name|this
operator|.
name|queue
operator|=
name|queue
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withMaxAppAttempts (int maxAppAttempts)
specifier|public
name|Builder
name|withMaxAppAttempts
parameter_list|(
name|int
name|maxAppAttempts
parameter_list|)
block|{
name|this
operator|.
name|maxAppAttempts
operator|=
name|maxAppAttempts
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAppType (String appType)
specifier|public
name|Builder
name|withAppType
parameter_list|(
name|String
name|appType
parameter_list|)
block|{
name|this
operator|.
name|appType
operator|=
name|appType
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withWaitForAppAcceptedState (boolean waitForAccepted)
specifier|public
name|Builder
name|withWaitForAppAcceptedState
parameter_list|(
name|boolean
name|waitForAccepted
parameter_list|)
block|{
name|this
operator|.
name|waitForAccepted
operator|=
name|waitForAccepted
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withKeepContainers (boolean keepContainers)
specifier|public
name|Builder
name|withKeepContainers
parameter_list|(
name|boolean
name|keepContainers
parameter_list|)
block|{
name|this
operator|.
name|keepContainers
operator|=
name|keepContainers
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withApplicationId (ApplicationId applicationId)
specifier|public
name|Builder
name|withApplicationId
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
block|{
name|this
operator|.
name|applicationId
operator|=
name|applicationId
expr_stmt|;
name|this
operator|.
name|isAppIdProvided
operator|=
name|applicationId
operator|!=
literal|null
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAttemptFailuresValidityInterval ( long attemptFailuresValidityInterval)
specifier|public
name|Builder
name|withAttemptFailuresValidityInterval
parameter_list|(
name|long
name|attemptFailuresValidityInterval
parameter_list|)
block|{
name|this
operator|.
name|attemptFailuresValidityInterval
operator|=
name|attemptFailuresValidityInterval
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withLogAggregationContext ( LogAggregationContext logAggregationContext)
specifier|public
name|Builder
name|withLogAggregationContext
parameter_list|(
name|LogAggregationContext
name|logAggregationContext
parameter_list|)
block|{
name|this
operator|.
name|logAggregationContext
operator|=
name|logAggregationContext
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withCancelTokensWhenComplete ( boolean cancelTokensWhenComplete)
specifier|public
name|Builder
name|withCancelTokensWhenComplete
parameter_list|(
name|boolean
name|cancelTokensWhenComplete
parameter_list|)
block|{
name|this
operator|.
name|cancelTokensWhenComplete
operator|=
name|cancelTokensWhenComplete
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAppPriority (Priority priority)
specifier|public
name|Builder
name|withAppPriority
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAmLabel (String amLabel)
specifier|public
name|Builder
name|withAmLabel
parameter_list|(
name|String
name|amLabel
parameter_list|)
block|{
name|this
operator|.
name|amLabel
operator|=
name|amLabel
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withApplicationTimeouts ( Map<ApplicationTimeoutType, Long> applicationTimeouts)
specifier|public
name|Builder
name|withApplicationTimeouts
parameter_list|(
name|Map
argument_list|<
name|ApplicationTimeoutType
argument_list|,
name|Long
argument_list|>
name|applicationTimeouts
parameter_list|)
block|{
name|this
operator|.
name|applicationTimeouts
operator|=
name|applicationTimeouts
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withTokensConf (ByteBuffer tokensConf)
specifier|public
name|Builder
name|withTokensConf
parameter_list|(
name|ByteBuffer
name|tokensConf
parameter_list|)
block|{
name|this
operator|.
name|tokensConf
operator|=
name|tokensConf
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withApplicationTags (Set<String> applicationTags)
specifier|public
name|Builder
name|withApplicationTags
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|applicationTags
parameter_list|)
block|{
name|this
operator|.
name|applicationTags
operator|=
name|applicationTags
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withAppNodeLabel (String appNodeLabel)
specifier|public
name|Builder
name|withAppNodeLabel
parameter_list|(
name|String
name|appNodeLabel
parameter_list|)
block|{
name|this
operator|.
name|appNodeLabel
operator|=
name|appNodeLabel
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withCredentials (Credentials cred)
specifier|public
name|Builder
name|withCredentials
parameter_list|(
name|Credentials
name|cred
parameter_list|)
block|{
name|this
operator|.
name|credentials
operator|=
name|cred
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withResource (Resource resource)
specifier|public
name|Builder
name|withResource
parameter_list|(
name|Resource
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|MockRMAppSubmissionData
name|build
parameter_list|()
block|{
return|return
operator|new
name|MockRMAppSubmissionData
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

