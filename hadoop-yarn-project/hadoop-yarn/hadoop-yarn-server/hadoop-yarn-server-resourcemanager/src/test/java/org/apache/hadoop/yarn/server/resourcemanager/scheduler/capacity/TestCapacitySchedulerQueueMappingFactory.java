begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|placement
operator|.
name|PlacementRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|placement
operator|.
name|QueueMappingEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|placement
operator|.
name|UserGroupMappingPlacementRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|TestCapacitySchedulerAutoCreatedQueueBase
operator|.
name|getQueueMapping
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|TestCapacitySchedulerAutoCreatedQueueBase
operator|.
name|setupQueueConfiguration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|hasItems
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|TestCapacitySchedulerQueueMappingFactory
specifier|public
class|class
name|TestCapacitySchedulerQueueMappingFactory
block|{
DECL|field|QUEUE_MAPPING_NAME
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE_MAPPING_NAME
init|=
literal|"app-name"
decl_stmt|;
DECL|field|QUEUE_MAPPING_RULE_APP_NAME
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE_MAPPING_RULE_APP_NAME
init|=
literal|"org.apache.hadoop.yarn.server.resourcemanager.placement.AppNameMappingPlacementRule"
decl_stmt|;
DECL|field|QUEUE_MAPPING_RULE_USER_GROUP
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE_MAPPING_RULE_USER_GROUP
init|=
literal|"org.apache.hadoop.yarn.server.resourcemanager.placement.UserGroupMappingPlacementRule"
decl_stmt|;
DECL|field|USER
specifier|public
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"user_"
decl_stmt|;
DECL|field|PARENT_QUEUE
specifier|public
specifier|static
specifier|final
name|String
name|PARENT_QUEUE
init|=
literal|"c"
decl_stmt|;
DECL|field|mockRM
specifier|private
name|MockRM
name|mockRM
init|=
literal|null
decl_stmt|;
DECL|method|setupQueueMappingsForRules ( CapacitySchedulerConfiguration conf, String parentQueue, boolean overrideWithQueueMappings, int[] sourceIds)
specifier|public
specifier|static
name|CapacitySchedulerConfiguration
name|setupQueueMappingsForRules
parameter_list|(
name|CapacitySchedulerConfiguration
name|conf
parameter_list|,
name|String
name|parentQueue
parameter_list|,
name|boolean
name|overrideWithQueueMappings
parameter_list|,
name|int
index|[]
name|sourceIds
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|queuePlacementRules
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|queuePlacementRules
operator|.
name|add
argument_list|(
name|QUEUE_MAPPING_RULE_USER_GROUP
argument_list|)
expr_stmt|;
name|queuePlacementRules
operator|.
name|add
argument_list|(
name|QUEUE_MAPPING_RULE_APP_NAME
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setQueuePlacementRules
argument_list|(
name|queuePlacementRules
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
argument_list|>
name|existingMappingsForUG
init|=
name|conf
operator|.
name|getQueueMappings
argument_list|()
decl_stmt|;
comment|//set queue mapping
name|List
argument_list|<
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
argument_list|>
name|queueMappingsForUG
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sourceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
comment|//Set C as parent queue name for auto queue creation
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
name|userQueueMapping
init|=
operator|new
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
argument_list|(
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
operator|.
name|MappingType
operator|.
name|USER
argument_list|,
name|USER
operator|+
name|sourceIds
index|[
name|i
index|]
argument_list|,
name|getQueueMapping
argument_list|(
name|parentQueue
argument_list|,
name|USER
operator|+
name|sourceIds
index|[
name|i
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|queueMappingsForUG
operator|.
name|add
argument_list|(
name|userQueueMapping
argument_list|)
expr_stmt|;
block|}
name|existingMappingsForUG
operator|.
name|addAll
argument_list|(
name|queueMappingsForUG
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setQueueMappings
argument_list|(
name|existingMappingsForUG
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|QueueMappingEntity
argument_list|>
name|existingMappingsForAN
init|=
name|conf
operator|.
name|getQueueMappingEntity
argument_list|(
name|QUEUE_MAPPING_NAME
argument_list|)
decl_stmt|;
comment|//set queue mapping
name|List
argument_list|<
name|QueueMappingEntity
argument_list|>
name|queueMappingsForAN
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sourceIds
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
comment|//Set C as parent queue name for auto queue creation
name|QueueMappingEntity
name|queueMapping
init|=
operator|new
name|QueueMappingEntity
argument_list|(
name|USER
operator|+
name|sourceIds
index|[
name|i
index|]
argument_list|,
name|getQueueMapping
argument_list|(
name|parentQueue
argument_list|,
name|USER
operator|+
name|sourceIds
index|[
name|i
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|queueMappingsForAN
operator|.
name|add
argument_list|(
name|queueMapping
argument_list|)
expr_stmt|;
block|}
name|existingMappingsForAN
operator|.
name|addAll
argument_list|(
name|queueMappingsForAN
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setQueueMappingEntities
argument_list|(
name|existingMappingsForAN
argument_list|,
name|QUEUE_MAPPING_NAME
argument_list|)
expr_stmt|;
comment|//override with queue mappings
name|conf
operator|.
name|setOverrideWithQueueMappings
argument_list|(
name|overrideWithQueueMappings
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
annotation|@
name|Test
DECL|method|testUpdatePlacementRulesFactory ()
specifier|public
name|void
name|testUpdatePlacementRulesFactory
parameter_list|()
throws|throws
name|Exception
block|{
name|CapacitySchedulerConfiguration
name|conf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|setupQueueConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// init queue mapping for UserGroupMappingRule and AppNameMappingRule
name|setupQueueMappingsForRules
argument_list|(
name|conf
argument_list|,
name|PARENT_QUEUE
argument_list|,
literal|true
argument_list|,
operator|new
name|int
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
expr_stmt|;
name|mockRM
operator|=
operator|new
name|MockRM
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|mockRM
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|cs
operator|.
name|updatePlacementRules
argument_list|()
expr_stmt|;
name|mockRM
operator|.
name|start
argument_list|()
expr_stmt|;
name|cs
operator|.
name|start
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|PlacementRule
argument_list|>
name|rules
init|=
name|cs
operator|.
name|getRMContext
argument_list|()
operator|.
name|getQueuePlacementManager
argument_list|()
operator|.
name|getPlacementRules
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|placementRuleNames
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|PlacementRule
name|pr
range|:
name|rules
control|)
block|{
name|placementRuleNames
operator|.
name|add
argument_list|(
name|pr
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// verify both placement rules were added successfully
name|assertThat
argument_list|(
name|placementRuleNames
argument_list|,
name|hasItems
argument_list|(
name|QUEUE_MAPPING_RULE_USER_GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|placementRuleNames
argument_list|,
name|hasItems
argument_list|(
name|QUEUE_MAPPING_RULE_APP_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

