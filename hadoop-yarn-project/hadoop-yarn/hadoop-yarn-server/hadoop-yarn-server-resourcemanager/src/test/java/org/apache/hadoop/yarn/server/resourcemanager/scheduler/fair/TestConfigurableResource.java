begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  * To test class {@link ConfigurableResource}.  */
end_comment

begin_class
DECL|class|TestConfigurableResource
specifier|public
class|class
name|TestConfigurableResource
block|{
DECL|field|clusterResource
specifier|private
specifier|final
name|Resource
name|clusterResource
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testGetResourceWithPercentage ()
specifier|public
name|void
name|testGetResourceWithPercentage
parameter_list|()
block|{
name|ConfigurableResource
name|configurableResource
init|=
operator|new
name|ConfigurableResource
argument_list|(
operator|new
name|double
index|[]
block|{
literal|0.5
block|,
literal|0.5
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The absolute resource should be null since object"
operator|+
literal|" configurableResource is initialized with percentages"
argument_list|,
name|configurableResource
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"The absolute resource should be null since cluster resource"
operator|+
literal|" is null"
argument_list|,
name|configurableResource
operator|.
name|getResource
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetResourceWithAbsolute ()
specifier|public
name|void
name|testGetResourceWithAbsolute
parameter_list|()
block|{
name|ConfigurableResource
name|configurableResource
init|=
operator|new
name|ConfigurableResource
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|3072
argument_list|,
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|,
literal|3072
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|,
literal|3072
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
literal|null
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|,
literal|3072
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|configurableResource
operator|.
name|getResource
argument_list|(
literal|null
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

