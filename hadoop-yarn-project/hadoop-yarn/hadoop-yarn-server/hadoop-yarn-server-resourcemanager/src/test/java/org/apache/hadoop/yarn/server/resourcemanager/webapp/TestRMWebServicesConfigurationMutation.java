begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Guice
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|servlet
operator|.
name|ServletModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONJAXBContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONMarshaller
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|guice
operator|.
name|spi
operator|.
name|container
operator|.
name|servlet
operator|.
name|GuiceContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|test
operator|.
name|framework
operator|.
name|WebAppDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|QueueConfigInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|QueueConfigsUpdateInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|GenericExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|GuiceServletConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|JerseyTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_comment
comment|/**  * Test scheduler configuration mutation via REST API.  */
end_comment

begin_class
DECL|class|TestRMWebServicesConfigurationMutation
specifier|public
class|class
name|TestRMWebServicesConfigurationMutation
extends|extends
name|JerseyTestBase
block|{
DECL|field|CONF_FILE
specifier|private
specifier|static
specifier|final
name|File
name|CONF_FILE
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"test-classes"
argument_list|)
argument_list|,
name|YarnConfiguration
operator|.
name|CS_CONFIGURATION_FILE
argument_list|)
decl_stmt|;
DECL|field|OLD_CONF_FILE
specifier|private
specifier|static
specifier|final
name|File
name|OLD_CONF_FILE
init|=
operator|new
name|File
argument_list|(
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
literal|"test-classes"
argument_list|)
argument_list|,
name|YarnConfiguration
operator|.
name|CS_CONFIGURATION_FILE
operator|+
literal|".tmp"
argument_list|)
decl_stmt|;
DECL|field|rm
specifier|private
specifier|static
name|MockRM
name|rm
decl_stmt|;
DECL|field|userName
specifier|private
specifier|static
name|String
name|userName
decl_stmt|;
DECL|field|csConf
specifier|private
specifier|static
name|CapacitySchedulerConfiguration
name|csConf
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|YarnConfiguration
name|conf
decl_stmt|;
DECL|class|WebServletModule
specifier|private
specifier|static
class|class
name|WebServletModule
extends|extends
name|ServletModule
block|{
annotation|@
name|Override
DECL|method|configureServlets ()
specifier|protected
name|void
name|configureServlets
parameter_list|()
block|{
name|bind
argument_list|(
name|JAXBContextResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|RMWebServices
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GenericExceptionHandler
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
name|userName
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unable to get current user name "
operator|+
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
name|csConf
operator|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|(
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setupQueueConfiguration
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CS_CONF_PROVIDER
argument_list|,
name|CapacitySchedulerConfiguration
operator|.
name|STORE_CS_CONF_PROVIDER
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ADMIN_ACL
argument_list|,
name|userName
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|CONF_FILE
operator|.
name|exists
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|CONF_FILE
operator|.
name|renameTo
argument_list|(
name|OLD_CONF_FILE
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to rename conf file"
argument_list|)
throw|;
block|}
block|}
name|FileOutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|CONF_FILE
argument_list|)
decl_stmt|;
name|csConf
operator|.
name|writeXml
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to write XML file"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|rm
operator|=
operator|new
name|MockRM
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|rm
argument_list|)
expr_stmt|;
name|serve
argument_list|(
literal|"/*"
argument_list|)
operator|.
name|with
argument_list|(
name|GuiceContainer
operator|.
name|class
argument_list|)
expr_stmt|;
name|filter
argument_list|(
literal|"/*"
argument_list|)
operator|.
name|through
argument_list|(
name|TestRMWebServicesAppsModification
operator|.
name|TestRMCustomAuthFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|GuiceServletConfig
operator|.
name|setInjector
argument_list|(
name|Guice
operator|.
name|createInjector
argument_list|(
operator|new
name|WebServletModule
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setupQueueConfiguration ( CapacitySchedulerConfiguration config)
specifier|private
specifier|static
name|void
name|setupQueueConfiguration
parameter_list|(
name|CapacitySchedulerConfiguration
name|config
parameter_list|)
block|{
name|config
operator|.
name|setQueues
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"a"
block|,
literal|"b"
block|,
literal|"c"
block|}
argument_list|)
expr_stmt|;
specifier|final
name|String
name|a
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|".a"
decl_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|a
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMaximumCapacity
argument_list|(
name|a
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
specifier|final
name|String
name|a1
init|=
name|a
operator|+
literal|".a1"
decl_stmt|;
specifier|final
name|String
name|a2
init|=
name|a
operator|+
literal|".a2"
decl_stmt|;
name|config
operator|.
name|setQueues
argument_list|(
name|a
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"a1"
block|,
literal|"a2"
block|}
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|a1
argument_list|,
literal|100f
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|a2
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
specifier|final
name|String
name|b
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|".b"
decl_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|b
argument_list|,
literal|75f
argument_list|)
expr_stmt|;
specifier|final
name|String
name|c
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|".c"
decl_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|c
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
specifier|final
name|String
name|c1
init|=
name|c
operator|+
literal|".c1"
decl_stmt|;
name|config
operator|.
name|setQueues
argument_list|(
name|c
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"c1"
block|}
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCapacity
argument_list|(
name|c1
argument_list|,
literal|0f
argument_list|)
expr_stmt|;
block|}
DECL|method|TestRMWebServicesConfigurationMutation ()
specifier|public
name|TestRMWebServicesConfigurationMutation
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|WebAppDescriptor
operator|.
name|Builder
argument_list|(
literal|"org.apache.hadoop.yarn.server.resourcemanager.webapp"
argument_list|)
operator|.
name|contextListenerClass
argument_list|(
name|GuiceServletConfig
operator|.
name|class
argument_list|)
operator|.
name|filterClass
argument_list|(
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|servlet
operator|.
name|GuiceFilter
operator|.
name|class
argument_list|)
operator|.
name|contextPath
argument_list|(
literal|"jersey-guice-filter"
argument_list|)
operator|.
name|servletPath
argument_list|(
literal|"/"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddNestedQueue ()
specifier|public
name|void
name|testAddNestedQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Add parent queue root.d with two children d1 and d2.
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|d1Capacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|d1Capacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"25"
argument_list|)
expr_stmt|;
name|d1Capacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_CAPACITY
argument_list|,
literal|"25"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nearEmptyCapacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|nearEmptyCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"1E-4"
argument_list|)
expr_stmt|;
name|nearEmptyCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_CAPACITY
argument_list|,
literal|"1E-4"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|d2Capacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|d2Capacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"75"
argument_list|)
expr_stmt|;
name|d2Capacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_CAPACITY
argument_list|,
literal|"75"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|d1
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.d.d1"
argument_list|,
name|d1Capacity
argument_list|)
decl_stmt|;
name|QueueConfigInfo
name|d2
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.d.d2"
argument_list|,
name|d2Capacity
argument_list|)
decl_stmt|;
name|QueueConfigInfo
name|d
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.d"
argument_list|,
name|nearEmptyCapacity
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getAddQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|d1
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getAddQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|d2
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getAddQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root.d"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|25.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.d.d1"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|75.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.d.d2"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddWithUpdate ()
specifier|public
name|void
name|testAddWithUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Add root.d with capacity 25, reducing root.b capacity from 75 to 50.
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|dCapacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|dCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"25"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bCapacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|bCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"50"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|d
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.d"
argument_list|,
name|dCapacity
argument_list|)
decl_stmt|;
name|QueueConfigInfo
name|b
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.b"
argument_list|,
name|bCapacity
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getAddQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|25.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.d"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.b"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveQueue ()
specifier|public
name|void
name|testRemoveQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|stopQueue
argument_list|(
literal|"root.a.a2"
argument_list|)
expr_stmt|;
comment|// Remove root.a.a2
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|updateInfo
operator|.
name|getRemoveQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
literal|"root.a.a2"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root.a"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a1"
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root.a"
argument_list|)
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveParentQueue ()
specifier|public
name|void
name|testRemoveParentQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|stopQueue
argument_list|(
literal|"root.c"
argument_list|,
literal|"root.c.c1"
argument_list|)
expr_stmt|;
comment|// Remove root.c (parent queue)
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|updateInfo
operator|.
name|getRemoveQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
literal|"root.c"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root.c"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveParentQueueWithCapacity ()
specifier|public
name|void
name|testRemoveParentQueueWithCapacity
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|stopQueue
argument_list|(
literal|"root.a"
argument_list|,
literal|"root.a.a1"
argument_list|,
literal|"root.a.a2"
argument_list|)
expr_stmt|;
comment|// Remove root.a (parent queue) with capacity 25
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|updateInfo
operator|.
name|getRemoveQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
literal|"root.a"
argument_list|)
expr_stmt|;
comment|// Set root.b capacity to 100
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bCapacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|bCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|b
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.b"
argument_list|,
name|bCapacity
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.b"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveMultipleQueues ()
specifier|public
name|void
name|testRemoveMultipleQueues
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|stopQueue
argument_list|(
literal|"root.b"
argument_list|,
literal|"root.c"
argument_list|,
literal|"root.c.c1"
argument_list|)
expr_stmt|;
comment|// Remove root.b and root.c
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|updateInfo
operator|.
name|getRemoveQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
literal|"root.b"
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getRemoveQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
literal|"root.c"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|aCapacity
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|aCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|aCapacity
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_CAPACITY
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|configInfo
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.a"
argument_list|,
name|aCapacity
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|configInfo
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newCSConf
operator|.
name|getQueues
argument_list|(
literal|"root"
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
DECL|method|stopQueue (String... queuePaths)
specifier|private
name|void
name|stopQueue
parameter_list|(
name|String
modifier|...
name|queuePaths
parameter_list|)
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Set state of queues to STOPPED.
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|stoppedParam
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|stoppedParam
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|STATE
argument_list|,
name|QueueState
operator|.
name|STOPPED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|queue
range|:
name|queuePaths
control|)
block|{
name|QueueConfigInfo
name|stoppedInfo
init|=
operator|new
name|QueueConfigInfo
argument_list|(
name|queue
argument_list|,
name|stoppedParam
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|stoppedInfo
argument_list|)
expr_stmt|;
block|}
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|queue
range|:
name|queuePaths
control|)
block|{
name|assertEquals
argument_list|(
name|QueueState
operator|.
name|STOPPED
argument_list|,
name|newCSConf
operator|.
name|getState
argument_list|(
name|queue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUpdateQueue ()
specifier|public
name|void
name|testUpdateQueue
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Update config value.
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|updateParam
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|updateParam
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_AM_RESOURCE_SUFFIX
argument_list|,
literal|"0.2"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|aUpdateInfo
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.a"
argument_list|,
name|updateParam
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|aUpdateInfo
argument_list|)
expr_stmt|;
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT
argument_list|,
name|cs
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getMaximumApplicationMasterResourcePerQueuePercent
argument_list|(
literal|"root.a"
argument_list|)
argument_list|,
literal|0.001f
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
name|cs
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0.2f
argument_list|,
name|newCSConf
operator|.
name|getMaximumApplicationMasterResourcePerQueuePercent
argument_list|(
literal|"root.a"
argument_list|)
argument_list|,
literal|0.001f
argument_list|)
expr_stmt|;
comment|// Remove config. Config value should be reverted to default.
name|updateParam
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_AM_RESOURCE_SUFFIX
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|aUpdateInfo
operator|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.a"
argument_list|,
name|updateParam
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|aUpdateInfo
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|newCSConf
operator|=
name|cs
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT
argument_list|,
name|newCSConf
operator|.
name|getMaximumApplicationMasterResourcePerQueuePercent
argument_list|(
literal|"root.a"
argument_list|)
argument_list|,
literal|0.001f
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateQueueCapacity ()
specifier|public
name|void
name|testUpdateQueueCapacity
parameter_list|()
throws|throws
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Update root.a and root.b capacity to 50.
name|QueueConfigsUpdateInfo
name|updateInfo
init|=
operator|new
name|QueueConfigsUpdateInfo
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|updateParam
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|updateParam
operator|.
name|put
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|CAPACITY
argument_list|,
literal|"50"
argument_list|)
expr_stmt|;
name|QueueConfigInfo
name|aUpdateInfo
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.a"
argument_list|,
name|updateParam
argument_list|)
decl_stmt|;
name|QueueConfigInfo
name|bUpdateInfo
init|=
operator|new
name|QueueConfigInfo
argument_list|(
literal|"root.b"
argument_list|,
name|updateParam
argument_list|)
decl_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|aUpdateInfo
argument_list|)
expr_stmt|;
name|updateInfo
operator|.
name|getUpdateQueueInfo
argument_list|()
operator|.
name|add
argument_list|(
name|bUpdateInfo
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"queues"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|updateInfo
argument_list|,
name|QueueConfigsUpdateInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|put
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|CapacitySchedulerConfiguration
name|newCSConf
init|=
operator|(
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
operator|)
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|50.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.a"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50.0f
argument_list|,
name|newCSConf
operator|.
name|getNonLabeledQueueCapacity
argument_list|(
literal|"root.b"
argument_list|)
argument_list|,
literal|0.01f
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|rm
operator|!=
literal|null
condition|)
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|CONF_FILE
operator|.
name|delete
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|OLD_CONF_FILE
operator|.
name|renameTo
argument_list|(
name|CONF_FILE
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Failed to re-copy old configuration file"
argument_list|)
throw|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|toJson (Object nsli, Class klass)
specifier|private
name|String
name|toJson
parameter_list|(
name|Object
name|nsli
parameter_list|,
name|Class
name|klass
parameter_list|)
throws|throws
name|Exception
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JSONJAXBContext
name|ctx
init|=
operator|new
name|JSONJAXBContext
argument_list|(
name|klass
argument_list|)
decl_stmt|;
name|JSONMarshaller
name|jm
init|=
name|ctx
operator|.
name|createJSONMarshaller
argument_list|()
decl_stmt|;
name|jm
operator|.
name|marshallToJSON
argument_list|(
name|nsli
argument_list|,
name|sw
argument_list|)
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

