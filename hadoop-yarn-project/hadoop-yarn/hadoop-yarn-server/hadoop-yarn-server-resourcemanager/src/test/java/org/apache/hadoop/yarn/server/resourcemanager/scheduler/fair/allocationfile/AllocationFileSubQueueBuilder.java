begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.allocationfile
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|allocationfile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Queue builder that can build a subqueue with its properties.  */
end_comment

begin_class
DECL|class|AllocationFileSubQueueBuilder
specifier|public
class|class
name|AllocationFileSubQueueBuilder
extends|extends
name|AllocationFileQueueBuilder
block|{
DECL|field|parentQueueBuilder
specifier|private
name|AllocationFileSimpleQueueBuilder
name|parentQueueBuilder
decl_stmt|;
DECL|method|AllocationFileSubQueueBuilder ( AllocationFileSimpleQueueBuilder parentQueueBuilder, String queueName)
name|AllocationFileSubQueueBuilder
parameter_list|(
name|AllocationFileSimpleQueueBuilder
name|parentQueueBuilder
parameter_list|,
name|String
name|queueName
parameter_list|)
block|{
name|getqueuePropertiesBuilder
argument_list|()
operator|.
name|queueName
argument_list|(
name|queueName
argument_list|)
expr_stmt|;
name|this
operator|.
name|parentQueueBuilder
operator|=
name|parentQueueBuilder
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|buildQueue ()
specifier|public
name|AllocationFileWriter
name|buildQueue
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"BuildQueue is not supported in "
operator|+
name|getClass
argument_list|()
argument_list|)
throw|;
block|}
DECL|method|buildSubQueue ()
specifier|public
name|AllocationFileSimpleQueueBuilder
name|buildSubQueue
parameter_list|()
block|{
name|AllocationFileQueueProperties
name|queueProperties
init|=
name|getqueuePropertiesBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|AllocationFileQueue
name|queue
init|=
operator|new
name|AllocationFileQueue
argument_list|(
name|queueProperties
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentQueueBuilder
operator|!=
literal|null
condition|)
block|{
name|parentQueueBuilder
operator|.
name|addSubQueue
argument_list|(
name|queue
argument_list|)
expr_stmt|;
return|return
name|parentQueueBuilder
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"parentQueueBuilder field has to be set on a "
operator|+
name|getClass
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

