begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.nodelabels
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|nodelabels
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|CommonNodeLabelsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|NodeLabelTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_class
DECL|class|TestRMNodeLabelsManager
specifier|public
class|class
name|TestRMNodeLabelsManager
extends|extends
name|NodeLabelTestBase
block|{
DECL|field|EMPTY_RESOURCE
specifier|private
specifier|final
name|Resource
name|EMPTY_RESOURCE
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
DECL|field|SMALL_RESOURCE
specifier|private
specifier|final
name|Resource
name|SMALL_RESOURCE
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
decl_stmt|;
DECL|field|LARGE_NODE
specifier|private
specifier|final
name|Resource
name|LARGE_NODE
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1000
argument_list|,
literal|0
argument_list|)
decl_stmt|;
DECL|field|mgr
name|DummyRMNodeLabelsManager
name|mgr
init|=
literal|null
decl_stmt|;
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
block|{
name|mgr
operator|=
operator|new
name|DummyRMNodeLabelsManager
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after ()
specifier|public
name|void
name|after
parameter_list|()
block|{
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
DECL|method|testNodeActiveDeactiveUpdate ()
specifier|public
name|void
name|testNodeActiveDeactiveUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|mgr
operator|.
name|addToCluserNodeLabels
argument_list|(
name|toSet
argument_list|(
literal|"p1"
argument_list|,
literal|"p2"
argument_list|,
literal|"p3"
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n2"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p2"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n3"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p2"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p3"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
name|RMNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
comment|// active two NM to n1, one large and one small
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|LARGE_NODE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|add
argument_list|(
name|SMALL_RESOURCE
argument_list|,
name|LARGE_NODE
argument_list|)
argument_list|)
expr_stmt|;
comment|// change the large NM to small, check if resource updated
name|mgr
operator|.
name|updateNodeResource
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// deactive one NM, and check if resource updated
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// continus deactive, check if resource updated
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
comment|// Add two NM to n1 back
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|LARGE_NODE
argument_list|)
expr_stmt|;
comment|// And remove p1, now the two NM should come to default label,
name|mgr
operator|.
name|removeFromClusterNodeLabels
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"p1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
name|RMNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|add
argument_list|(
name|SMALL_RESOURCE
argument_list|,
name|LARGE_NODE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
DECL|method|testUpdateNodeLabelWithActiveNode ()
specifier|public
name|void
name|testUpdateNodeLabelWithActiveNode
parameter_list|()
throws|throws
name|Exception
block|{
name|mgr
operator|.
name|addToCluserNodeLabels
argument_list|(
name|toSet
argument_list|(
literal|"p1"
argument_list|,
literal|"p2"
argument_list|,
literal|"p3"
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n2"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p2"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n3"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// active two NM to n1, one large and one small
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n2"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n3"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// change label of n1 to p2
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|EMPTY_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p2"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p3"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// add more labels
name|mgr
operator|.
name|addToCluserNodeLabels
argument_list|(
name|toSet
argument_list|(
literal|"p4"
argument_list|,
literal|"p5"
argument_list|,
literal|"p6"
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
operator|(
name|Map
operator|)
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n4"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n5"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p2"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n6"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p3"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n7"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p4"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n8"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// now node -> label is,
comment|// p1 : n4
comment|// p2 : n1, n2, n5
comment|// p3 : n3, n6
comment|// p4 : n7
comment|// p5 : n8
comment|// no-label : n9
comment|// active these nodes
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n4"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n5"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n6"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n7"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n8"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n9"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// check varibles
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p2"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p3"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p4"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p5"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
name|RMNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// change a bunch of nodes -> labels
comment|// n4 -> p2
comment|// n7 -> empty
comment|// n5 -> p1
comment|// n8 -> empty
comment|// n9 -> p1
comment|//
comment|// now become:
comment|// p1 : n5, n9
comment|// p2 : n1, n2, n4
comment|// p3 : n3, n6
comment|// p4 : [ ]
comment|// p5 : [ ]
comment|// no label: n8, n7
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
operator|(
name|Map
operator|)
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n4"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p2"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n7"
argument_list|)
argument_list|,
name|RMNodeLabelsManager
operator|.
name|EMPTY_STRING_SET
argument_list|,
name|toNodeId
argument_list|(
literal|"n5"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n8"
argument_list|)
argument_list|,
name|RMNodeLabelsManager
operator|.
name|EMPTY_STRING_SET
argument_list|,
name|toNodeId
argument_list|(
literal|"n9"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check varibles
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p2"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p3"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p4"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p5"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|""
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
DECL|method|testGetQueueResource ()
specifier|public
name|void
name|testGetQueueResource
parameter_list|()
throws|throws
name|Exception
block|{
name|Resource
name|clusterResource
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|9999
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|/*      * Node->Labels:      *   host1 : red, blue      *   host2 : blue, yellow      *   host3 : yellow      *   host4 :      */
name|mgr
operator|.
name|addToCluserNodeLabels
argument_list|(
name|toSet
argument_list|(
literal|"red"
argument_list|,
literal|"blue"
argument_list|,
literal|"yellow"
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"host1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"red"
argument_list|,
literal|"blue"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"host2"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"blue"
argument_list|,
literal|"yellow"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceLabelsOnNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"host3"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"yellow"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// active two NM to n1, one large and one small
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host1"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host2"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host4"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// reinitialize queue
name|Set
argument_list|<
name|String
argument_list|>
name|q1Label
init|=
name|toSet
argument_list|(
literal|"red"
argument_list|,
literal|"blue"
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|q2Label
init|=
name|toSet
argument_list|(
literal|"blue"
argument_list|,
literal|"yellow"
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|q3Label
init|=
name|toSet
argument_list|(
literal|"yellow"
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|q4Label
init|=
name|RMNodeLabelsManager
operator|.
name|EMPTY_STRING_SET
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|q5Label
init|=
name|toSet
argument_list|(
name|RMNodeLabelsManager
operator|.
name|ANY
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|queueToLabels
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|reinitializeQueueLabels
argument_list|(
name|queueToLabels
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|4
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|removeLabelsFromNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"host1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"red"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"host2"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"blue"
argument_list|,
literal|"yellow"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|addLabelsToNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"host3"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"red"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|/*      * Check resource after changes some labels      * Node->Labels:      *   host1 : blue (was: red, blue)      *   host2 : (was: blue, yellow)      *   host3 : red, yellow (was: yellow)      *   host4 :      */
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|4
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|4
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
comment|/*      * Check resource after deactive/active some nodes       * Node->Labels:      *   (deactived) host1 : blue      *   host2 :      *   (deactived and then actived) host3 : red, yellow      *   host4 :      */
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host1"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
comment|/*      * Check resource after refresh queue:      *    Q1: blue      *    Q2: red, blue      *    Q3: red      *    Q4:      *    Q5: ANY      */
name|q1Label
operator|=
name|toSet
argument_list|(
literal|"blue"
argument_list|)
expr_stmt|;
name|q2Label
operator|=
name|toSet
argument_list|(
literal|"blue"
argument_list|,
literal|"red"
argument_list|)
expr_stmt|;
name|q3Label
operator|=
name|toSet
argument_list|(
literal|"red"
argument_list|)
expr_stmt|;
name|q4Label
operator|=
name|RMNodeLabelsManager
operator|.
name|EMPTY_STRING_SET
expr_stmt|;
name|q5Label
operator|=
name|toSet
argument_list|(
name|RMNodeLabelsManager
operator|.
name|ANY
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|)
expr_stmt|;
name|queueToLabels
operator|.
name|put
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|reinitializeQueueLabels
argument_list|(
name|queueToLabels
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
comment|/*      * Active NMs in nodes already have NM      * Node->Labels:      *   host2 :      *   host3 : red, yellow (3 NMs)      *   host4 : (2 NMs)      */
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|3
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host4"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|6
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|6
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
comment|/*      * Deactive NMs in nodes already have NMs      * Node->Labels:      *   host2 :      *   host3 : red, yellow (2 NMs)      *   host4 : (0 NMs)      */
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host3"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host4"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|deactivateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host4"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q1"
argument_list|,
name|q1Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q2"
argument_list|,
name|q2Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|3
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q3"
argument_list|,
name|q3Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|1
argument_list|)
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q4"
argument_list|,
name|q4Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|clusterResource
argument_list|,
name|mgr
operator|.
name|getQueueResource
argument_list|(
literal|"Q5"
argument_list|,
name|q5Label
argument_list|,
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
DECL|method|testGetLabelResourceWhenMultipleNMsExistingInSameHost ()
specifier|public
name|void
name|testGetLabelResourceWhenMultipleNMsExistingInSameHost
parameter_list|()
throws|throws
name|IOException
block|{
comment|// active two NM to n1, one large and one small
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|1
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|2
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|3
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|activateNode
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"n1"
argument_list|,
literal|4
argument_list|)
argument_list|,
name|SMALL_RESOURCE
argument_list|)
expr_stmt|;
comment|// check resource of no label, it should be small * 4
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
name|CommonNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
comment|// change two of these nodes to p1, check resource of no_label and P1
name|mgr
operator|.
name|addToCluserNodeLabels
argument_list|(
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|addLabelsToNode
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|toNodeId
argument_list|(
literal|"n1:1"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|,
name|toNodeId
argument_list|(
literal|"n1:2"
argument_list|)
argument_list|,
name|toSet
argument_list|(
literal|"p1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check resource
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
name|CommonNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mgr
operator|.
name|getResourceByLabel
argument_list|(
literal|"p1"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|Resources
operator|.
name|multiply
argument_list|(
name|SMALL_RESOURCE
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

