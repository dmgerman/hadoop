begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|DrainDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerResourceManagerRecoveryProtos
operator|.
name|ReservationAllocationStateProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|recovery
operator|.
name|RMStateStore
operator|.
name|RMState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
operator|.
name|ReservationSystemTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Clock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|UTCClock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|TestReservationSystemWithRMHA
specifier|public
class|class
name|TestReservationSystemWithRMHA
extends|extends
name|RMHATestBase
block|{
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|CapacitySchedulerConfiguration
name|conf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|ReservationSystemTestUtil
operator|.
name|setupQueueConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_RESERVATION_SYSTEM_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|configuration
operator|=
name|conf
expr_stmt|;
name|super
operator|.
name|setup
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSubmitReservationAndCheckAfterFailover ()
specifier|public
name|void
name|testSubmitReservationAndCheckAfterFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|startRMs
argument_list|()
expr_stmt|;
name|addNodeCapacityToPlan
argument_list|()
expr_stmt|;
name|ClientRMService
name|clientService
init|=
name|rm1
operator|.
name|getClientRMService
argument_list|()
decl_stmt|;
comment|// create a reservation
name|ReservationSubmissionRequest
name|request
init|=
name|createReservationSubmissionRequest
argument_list|()
decl_stmt|;
name|ReservationSubmissionResponse
name|response
init|=
literal|null
decl_stmt|;
try|try
block|{
name|response
operator|=
name|clientService
operator|.
name|submitReservation
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|response
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Submit reservation response: "
operator|+
name|reservationID
argument_list|)
expr_stmt|;
name|ReservationDefinition
name|reservationDefinition
init|=
name|request
operator|.
name|getReservationDefinition
argument_list|()
decl_stmt|;
comment|// Do the failover
name|explicitFailover
argument_list|()
expr_stmt|;
name|rm2
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1"
argument_list|,
literal|102400
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|RMState
name|state
init|=
name|rm2
operator|.
name|getRMContext
argument_list|()
operator|.
name|getStateStore
argument_list|()
operator|.
name|loadState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|ReservationId
argument_list|,
name|ReservationAllocationStateProto
argument_list|>
name|reservationStateMap
init|=
name|state
operator|.
name|getReservationState
argument_list|()
operator|.
name|get
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationStateMap
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationStateMap
operator|.
name|get
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateReservationAndCheckAfterFailover ()
specifier|public
name|void
name|testUpdateReservationAndCheckAfterFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|startRMs
argument_list|()
expr_stmt|;
name|addNodeCapacityToPlan
argument_list|()
expr_stmt|;
name|ClientRMService
name|clientService
init|=
name|rm1
operator|.
name|getClientRMService
argument_list|()
decl_stmt|;
comment|// create a reservation
name|ReservationSubmissionRequest
name|request
init|=
name|createReservationSubmissionRequest
argument_list|()
decl_stmt|;
name|ReservationSubmissionResponse
name|response
init|=
literal|null
decl_stmt|;
try|try
block|{
name|response
operator|=
name|clientService
operator|.
name|submitReservation
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|response
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Submit reservation response: "
operator|+
name|reservationID
argument_list|)
expr_stmt|;
name|ReservationDefinition
name|reservationDefinition
init|=
name|request
operator|.
name|getReservationDefinition
argument_list|()
decl_stmt|;
comment|// Change any field
name|long
name|newDeadline
init|=
name|reservationDefinition
operator|.
name|getDeadline
argument_list|()
operator|+
literal|100
decl_stmt|;
name|reservationDefinition
operator|.
name|setDeadline
argument_list|(
name|newDeadline
argument_list|)
expr_stmt|;
name|ReservationUpdateRequest
name|updateRequest
init|=
name|ReservationUpdateRequest
operator|.
name|newInstance
argument_list|(
name|reservationDefinition
argument_list|,
name|reservationID
argument_list|)
decl_stmt|;
name|rm1
operator|.
name|updateReservationState
argument_list|(
name|updateRequest
argument_list|)
expr_stmt|;
comment|// Do the failover
name|explicitFailover
argument_list|()
expr_stmt|;
name|rm2
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1"
argument_list|,
literal|102400
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|RMState
name|state
init|=
name|rm2
operator|.
name|getRMContext
argument_list|()
operator|.
name|getStateStore
argument_list|()
operator|.
name|loadState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|ReservationId
argument_list|,
name|ReservationAllocationStateProto
argument_list|>
name|reservationStateMap
init|=
name|state
operator|.
name|getReservationState
argument_list|()
operator|.
name|get
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationStateMap
argument_list|)
expr_stmt|;
name|ReservationAllocationStateProto
name|reservationState
init|=
name|reservationStateMap
operator|.
name|get
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|newDeadline
argument_list|,
name|reservationState
operator|.
name|getReservationDefinition
argument_list|()
operator|.
name|getDeadline
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteReservationAndCheckAfterFailover ()
specifier|public
name|void
name|testDeleteReservationAndCheckAfterFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|startRMs
argument_list|()
expr_stmt|;
name|addNodeCapacityToPlan
argument_list|()
expr_stmt|;
name|ClientRMService
name|clientService
init|=
name|rm1
operator|.
name|getClientRMService
argument_list|()
decl_stmt|;
comment|// create a reservation
name|ReservationSubmissionRequest
name|request
init|=
name|createReservationSubmissionRequest
argument_list|()
decl_stmt|;
name|ReservationSubmissionResponse
name|response
init|=
literal|null
decl_stmt|;
try|try
block|{
name|response
operator|=
name|clientService
operator|.
name|submitReservation
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|response
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
comment|// Delete the reservation
name|ReservationDeleteRequest
name|deleteRequest
init|=
name|ReservationDeleteRequest
operator|.
name|newInstance
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|clientService
operator|.
name|deleteReservation
argument_list|(
name|deleteRequest
argument_list|)
expr_stmt|;
comment|// Do the failover
name|explicitFailover
argument_list|()
expr_stmt|;
name|rm2
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1"
argument_list|,
literal|102400
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|RMState
name|state
init|=
name|rm2
operator|.
name|getRMContext
argument_list|()
operator|.
name|getStateStore
argument_list|()
operator|.
name|loadState
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|state
operator|.
name|getReservationState
argument_list|()
operator|.
name|get
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addNodeCapacityToPlan ()
specifier|private
name|void
name|addNodeCapacityToPlan
parameter_list|()
block|{
try|try
block|{
name|rm1
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1"
argument_list|,
literal|102400
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|int
name|attempts
init|=
literal|10
decl_stmt|;
do|do
block|{
name|DrainDispatcher
name|dispatcher
init|=
operator|(
name|DrainDispatcher
operator|)
name|rm1
operator|.
name|getRMContext
argument_list|()
operator|.
name|getDispatcher
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|await
argument_list|()
expr_stmt|;
name|rm1
operator|.
name|getRMContext
argument_list|()
operator|.
name|getReservationSystem
argument_list|()
operator|.
name|synchronizePlan
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
expr_stmt|;
if|if
condition|(
name|rm1
operator|.
name|getRMContext
argument_list|()
operator|.
name|getReservationSystem
argument_list|()
operator|.
name|getPlan
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
operator|.
name|getTotalCapacity
argument_list|()
operator|.
name|getMemory
argument_list|()
operator|>
literal|0
condition|)
block|{
break|break;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Waiting for node capacity to be added to plan"
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|attempts
operator|--
operator|>
literal|0
condition|)
do|;
if|if
condition|(
name|attempts
operator|<=
literal|0
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exhausted attempts in checking if node capacity was "
operator|+
literal|"added to the plan"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createReservationSubmissionRequest ()
specifier|private
name|ReservationSubmissionRequest
name|createReservationSubmissionRequest
parameter_list|()
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
return|return
name|ReservationSystemTestUtil
operator|.
name|createSimpleReservationRequest
argument_list|(
literal|4
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
return|;
block|}
block|}
end_class

end_unit

