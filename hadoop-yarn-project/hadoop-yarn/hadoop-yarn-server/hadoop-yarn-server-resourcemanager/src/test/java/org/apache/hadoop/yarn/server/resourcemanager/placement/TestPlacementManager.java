begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.placement
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|placement
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
operator|.
name|DOT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|TestCapacitySchedulerAutoCreatedQueueBase
operator|.
name|setupQueueConfiguration
import|;
end_import

begin_class
DECL|class|TestPlacementManager
specifier|public
class|class
name|TestPlacementManager
block|{
DECL|field|USER
specifier|public
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"user_"
decl_stmt|;
DECL|field|APP_NAME
specifier|public
specifier|static
specifier|final
name|String
name|APP_NAME
init|=
literal|"DistributedShell"
decl_stmt|;
DECL|field|APP_ID1
specifier|public
specifier|static
specifier|final
name|String
name|APP_ID1
init|=
literal|"1"
decl_stmt|;
DECL|field|USER1
specifier|public
specifier|static
specifier|final
name|String
name|USER1
init|=
name|USER
operator|+
name|APP_ID1
decl_stmt|;
DECL|field|APP_ID2
specifier|public
specifier|static
specifier|final
name|String
name|APP_ID2
init|=
literal|"2"
decl_stmt|;
DECL|field|USER2
specifier|public
specifier|static
specifier|final
name|String
name|USER2
init|=
name|USER
operator|+
name|APP_ID2
decl_stmt|;
DECL|field|PARENT_QUEUE
specifier|public
specifier|static
specifier|final
name|String
name|PARENT_QUEUE
init|=
literal|"c"
decl_stmt|;
DECL|field|mockRM
specifier|private
name|MockRM
name|mockRM
init|=
literal|null
decl_stmt|;
DECL|field|CLUSTER_TIMESTAMP
specifier|private
specifier|static
specifier|final
name|long
name|CLUSTER_TIMESTAMP
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
DECL|method|getQueueMapping (String parentQueue, String leafQueue)
specifier|private
name|String
name|getQueueMapping
parameter_list|(
name|String
name|parentQueue
parameter_list|,
name|String
name|leafQueue
parameter_list|)
block|{
return|return
name|parentQueue
operator|+
name|DOT
operator|+
name|leafQueue
return|;
block|}
annotation|@
name|Test
DECL|method|testPlaceApplicationWithPlacementRuleChain ()
specifier|public
name|void
name|testPlaceApplicationWithPlacementRuleChain
parameter_list|()
throws|throws
name|Exception
block|{
name|CapacitySchedulerConfiguration
name|conf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|setupQueueConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
name|mockRM
operator|=
operator|new
name|MockRM
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|mockRM
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|mockRM
operator|.
name|start
argument_list|()
expr_stmt|;
name|cs
operator|.
name|start
argument_list|()
expr_stmt|;
name|PlacementManager
name|pm
init|=
name|cs
operator|.
name|getRMContext
argument_list|()
operator|.
name|getQueuePlacementManager
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|PlacementRule
argument_list|>
name|queuePlacementRules
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
name|userQueueMapping
init|=
operator|new
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
argument_list|(
name|UserGroupMappingPlacementRule
operator|.
name|QueueMapping
operator|.
name|MappingType
operator|.
name|USER
argument_list|,
name|USER1
argument_list|,
name|getQueueMapping
argument_list|(
name|PARENT_QUEUE
argument_list|,
name|USER1
argument_list|)
argument_list|)
decl_stmt|;
name|UserGroupMappingPlacementRule
name|ugRule
init|=
operator|new
name|UserGroupMappingPlacementRule
argument_list|(
literal|false
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|userQueueMapping
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|queuePlacementRules
operator|.
name|add
argument_list|(
name|ugRule
argument_list|)
expr_stmt|;
name|pm
operator|.
name|updateRules
argument_list|(
name|queuePlacementRules
argument_list|)
expr_stmt|;
name|ApplicationSubmissionContext
name|asc
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|asc
operator|.
name|setQueue
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_QUEUE_NAME
argument_list|)
expr_stmt|;
name|asc
operator|.
name|setApplicationName
argument_list|(
name|APP_NAME
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
literal|"Placement should be null"
argument_list|,
name|pm
operator|.
name|placeApplication
argument_list|(
name|asc
argument_list|,
name|USER2
argument_list|)
argument_list|)
expr_stmt|;
name|QueueMappingEntity
name|queueMappingEntity
init|=
operator|new
name|QueueMappingEntity
argument_list|(
name|APP_NAME
argument_list|,
name|USER1
argument_list|,
name|PARENT_QUEUE
argument_list|)
decl_stmt|;
name|AppNameMappingPlacementRule
name|anRule
init|=
operator|new
name|AppNameMappingPlacementRule
argument_list|(
literal|false
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|queueMappingEntity
argument_list|)
argument_list|)
decl_stmt|;
name|queuePlacementRules
operator|.
name|add
argument_list|(
name|anRule
argument_list|)
expr_stmt|;
name|pm
operator|.
name|updateRules
argument_list|(
name|queuePlacementRules
argument_list|)
expr_stmt|;
try|try
block|{
name|ApplicationPlacementContext
name|pc
init|=
name|pm
operator|.
name|placeApplication
argument_list|(
name|asc
argument_list|,
name|USER2
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception not expected"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

