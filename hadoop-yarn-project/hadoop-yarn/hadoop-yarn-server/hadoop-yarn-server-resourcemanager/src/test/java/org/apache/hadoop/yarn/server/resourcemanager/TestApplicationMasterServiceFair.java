begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|InvalidResourceRequestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|resourcetypes
operator|.
name|ResourceTypesTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|resource
operator|.
name|TestResourceProfiles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FSLeafQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairSchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Unit tests for {@link ApplicationMasterService} with {@link FairScheduler}.  */
end_comment

begin_class
DECL|class|TestApplicationMasterServiceFair
specifier|public
class|class
name|TestApplicationMasterServiceFair
extends|extends
name|ApplicationMasterServiceTestBase
block|{
DECL|field|DEFAULT_QUEUE
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_QUEUE
init|=
literal|"root.default"
decl_stmt|;
annotation|@
name|Override
DECL|method|createYarnConfig ()
specifier|protected
name|YarnConfiguration
name|createYarnConfig
parameter_list|()
block|{
name|FairSchedulerConfiguration
name|fsConf
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|()
decl_stmt|;
name|YarnConfiguration
name|yarnConf
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|fsConf
argument_list|)
decl_stmt|;
name|yarnConf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|FairScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|yarnConf
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceUsageForQueue (ResourceManager rm, String queue)
specifier|protected
name|Resource
name|getResourceUsageForQueue
parameter_list|(
name|ResourceManager
name|rm
parameter_list|,
name|String
name|queue
parameter_list|)
block|{
name|FairScheduler
name|fs
init|=
operator|(
name|FairScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|FSLeafQueue
name|leafQueue
init|=
name|fs
operator|.
name|getQueueManager
argument_list|()
operator|.
name|getLeafQueue
argument_list|(
name|DEFAULT_QUEUE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
return|return
name|leafQueue
operator|.
name|getResourceUsage
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getDefaultQueueName ()
specifier|protected
name|String
name|getDefaultQueueName
parameter_list|()
block|{
return|return
name|DEFAULT_QUEUE
return|;
block|}
annotation|@
name|Test
DECL|method|testRequestCapacityMinMaxAllocationWithDifferentUnits ()
specifier|public
name|void
name|testRequestCapacityMinMaxAllocationWithDifferentUnits
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|ResourceInformation
argument_list|>
name|riMap
init|=
name|initializeMandatoryResources
argument_list|()
decl_stmt|;
name|ResourceInformation
name|res1
init|=
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|CUSTOM_RES
argument_list|,
literal|"G"
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|CUSTOM_RES
argument_list|,
name|res1
argument_list|)
expr_stmt|;
name|ResourceUtils
operator|.
name|initializeResourcesFromResourceInformationMap
argument_list|(
name|riMap
argument_list|)
expr_stmt|;
specifier|final
name|YarnConfiguration
name|yarnConf
init|=
name|createYarnConfig
argument_list|()
decl_stmt|;
comment|// Don't reset resource types since we have already configured resource
comment|// types
name|yarnConf
operator|.
name|setBoolean
argument_list|(
name|TestResourceProfiles
operator|.
name|TEST_CONF_RESET_RESOURCE_TYPES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|yarnConf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_RESOURCE_PROFILES_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|(
name|yarnConf
argument_list|)
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm1
init|=
name|rm
operator|.
name|registerNode
argument_list|(
literal|"199.99.99.1:"
operator|+
name|DEFAULT_PORT
argument_list|,
name|ResourceTypesTestHelper
operator|.
name|newResource
argument_list|(
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB
argument_list|,
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES
argument_list|,
literal|"5G"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
name|GB
argument_list|,
literal|"app"
argument_list|,
literal|"user"
argument_list|,
literal|null
argument_list|,
name|DEFAULT_QUEUE
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm1
argument_list|)
decl_stmt|;
comment|// Now request res_1, 500M< 5G so it should be allowed
try|try
block|{
name|am1
operator|.
name|allocate
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|ResourceRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|capability
argument_list|(
name|ResourceTypesTestHelper
operator|.
name|newResource
argument_list|(
literal|4
operator|*
name|GB
argument_list|,
literal|1
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES
argument_list|,
literal|"500M"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
operator|.
name|numContainers
argument_list|(
literal|1
argument_list|)
operator|.
name|resourceName
argument_list|(
literal|"*"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidResourceRequestException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Allocate request should be accepted but exception was thrown: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
name|rm
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

