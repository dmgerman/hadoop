begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.allocationfile
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|allocationfile
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|allocationfile
operator|.
name|AllocationFileWriter
operator|.
name|addIfPresent
import|;
end_import

begin_comment
comment|/**  * DAO for Allocation File Queue.  */
end_comment

begin_class
DECL|class|AllocationFileQueue
specifier|final
specifier|public
class|class
name|AllocationFileQueue
block|{
DECL|field|DEFAULT_TAG_NAME
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_TAG_NAME
init|=
literal|"queue"
decl_stmt|;
DECL|field|LEGACY_TAG_NAME
specifier|private
specifier|static
specifier|final
name|String
name|LEGACY_TAG_NAME
init|=
literal|"pool"
decl_stmt|;
DECL|field|queueName
specifier|private
specifier|final
name|String
name|queueName
decl_stmt|;
DECL|field|minResources
specifier|private
specifier|final
name|String
name|minResources
decl_stmt|;
DECL|field|maxResources
specifier|private
specifier|final
name|String
name|maxResources
decl_stmt|;
DECL|field|aclAdministerApps
specifier|private
specifier|final
name|String
name|aclAdministerApps
decl_stmt|;
DECL|field|aclSubmitApps
specifier|private
specifier|final
name|String
name|aclSubmitApps
decl_stmt|;
DECL|field|aclSubmitReservations
specifier|private
specifier|final
name|String
name|aclSubmitReservations
decl_stmt|;
DECL|field|aclAdministerReservations
specifier|private
specifier|final
name|String
name|aclAdministerReservations
decl_stmt|;
DECL|field|aclListReservations
specifier|private
specifier|final
name|String
name|aclListReservations
decl_stmt|;
DECL|field|schedulingPolicy
specifier|private
specifier|final
name|String
name|schedulingPolicy
decl_stmt|;
DECL|field|maxRunningApps
specifier|private
specifier|final
name|Integer
name|maxRunningApps
decl_stmt|;
DECL|field|maxAMShare
specifier|private
specifier|final
name|Double
name|maxAMShare
decl_stmt|;
DECL|field|allowPreemptionFrom
specifier|private
specifier|final
name|Boolean
name|allowPreemptionFrom
decl_stmt|;
DECL|field|minSharePreemptionTimeout
specifier|private
specifier|final
name|Integer
name|minSharePreemptionTimeout
decl_stmt|;
DECL|field|maxChildResources
specifier|private
specifier|final
name|String
name|maxChildResources
decl_stmt|;
DECL|field|fairSharePreemptionTimeout
specifier|private
specifier|final
name|Integer
name|fairSharePreemptionTimeout
decl_stmt|;
DECL|field|fairSharePreemptionThreshold
specifier|private
specifier|final
name|Double
name|fairSharePreemptionThreshold
decl_stmt|;
DECL|field|maxContainerAllocation
specifier|private
specifier|final
name|String
name|maxContainerAllocation
decl_stmt|;
DECL|field|subQueues
specifier|private
specifier|final
name|List
argument_list|<
name|AllocationFileQueue
argument_list|>
name|subQueues
decl_stmt|;
DECL|field|weight
specifier|private
specifier|final
name|Float
name|weight
decl_stmt|;
DECL|field|tagName
specifier|private
name|String
name|tagName
decl_stmt|;
DECL|field|parent
specifier|private
specifier|final
name|boolean
name|parent
decl_stmt|;
DECL|field|reservation
specifier|private
specifier|final
name|boolean
name|reservation
decl_stmt|;
DECL|method|AllocationFileQueue (Builder builder)
specifier|private
name|AllocationFileQueue
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|queueName
operator|=
name|builder
operator|.
name|name
expr_stmt|;
name|this
operator|.
name|parent
operator|=
name|builder
operator|.
name|parent
expr_stmt|;
name|this
operator|.
name|minResources
operator|=
name|builder
operator|.
name|minResources
expr_stmt|;
name|this
operator|.
name|maxResources
operator|=
name|builder
operator|.
name|maxResources
expr_stmt|;
name|this
operator|.
name|aclAdministerApps
operator|=
name|builder
operator|.
name|aclAdministerApps
expr_stmt|;
name|this
operator|.
name|aclSubmitApps
operator|=
name|builder
operator|.
name|aclSubmitApps
expr_stmt|;
name|this
operator|.
name|aclSubmitReservations
operator|=
name|builder
operator|.
name|aclSubmitReservations
expr_stmt|;
name|this
operator|.
name|aclAdministerReservations
operator|=
name|builder
operator|.
name|aclAdministerReservations
expr_stmt|;
name|this
operator|.
name|aclListReservations
operator|=
name|builder
operator|.
name|aclListReservations
expr_stmt|;
name|this
operator|.
name|schedulingPolicy
operator|=
name|builder
operator|.
name|schedulingPolicy
expr_stmt|;
name|this
operator|.
name|maxRunningApps
operator|=
name|builder
operator|.
name|maxRunningApps
expr_stmt|;
name|this
operator|.
name|maxAMShare
operator|=
name|builder
operator|.
name|maxAMShare
expr_stmt|;
name|this
operator|.
name|allowPreemptionFrom
operator|=
name|builder
operator|.
name|allowPreemptionFrom
expr_stmt|;
name|this
operator|.
name|minSharePreemptionTimeout
operator|=
name|builder
operator|.
name|minSharePreemptionTimeout
expr_stmt|;
name|this
operator|.
name|maxChildResources
operator|=
name|builder
operator|.
name|maxChildResources
expr_stmt|;
name|this
operator|.
name|fairSharePreemptionTimeout
operator|=
name|builder
operator|.
name|fairSharePreemptionTimeout
expr_stmt|;
name|this
operator|.
name|fairSharePreemptionThreshold
operator|=
name|builder
operator|.
name|fairSharePreemptionThreshold
expr_stmt|;
name|this
operator|.
name|maxContainerAllocation
operator|=
name|builder
operator|.
name|maxContainerAllocation
expr_stmt|;
name|this
operator|.
name|weight
operator|=
name|builder
operator|.
name|weight
expr_stmt|;
name|this
operator|.
name|reservation
operator|=
name|builder
operator|.
name|reservation
expr_stmt|;
name|this
operator|.
name|subQueues
operator|=
name|builder
operator|.
name|subQueues
expr_stmt|;
name|this
operator|.
name|tagName
operator|=
name|DEFAULT_TAG_NAME
expr_stmt|;
block|}
DECL|method|render ()
name|String
name|render
parameter_list|()
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|printStartTag
argument_list|(
name|pw
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|printQueues
argument_list|(
name|pw
argument_list|,
name|subQueues
argument_list|,
name|tagName
operator|.
name|equals
argument_list|(
name|LEGACY_TAG_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"minResources"
argument_list|,
name|minResources
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxResources"
argument_list|,
name|maxResources
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclAdministerApps"
argument_list|,
name|aclAdministerApps
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclSubmitApps"
argument_list|,
name|aclSubmitApps
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclSubmitReservations"
argument_list|,
name|aclSubmitReservations
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclAdministerReservations"
argument_list|,
name|aclAdministerReservations
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclListReservations"
argument_list|,
name|aclListReservations
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"schedulingPolicy"
argument_list|,
name|schedulingPolicy
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxRunningApps"
argument_list|,
name|maxRunningApps
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxAMShare"
argument_list|,
name|maxAMShare
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"allowPreemptionFrom"
argument_list|,
name|allowPreemptionFrom
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"minSharePreemptionTimeout"
argument_list|,
name|minSharePreemptionTimeout
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxChildResources"
argument_list|,
name|maxChildResources
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"fairSharePreemptionTimeout"
argument_list|,
name|fairSharePreemptionTimeout
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"fairSharePreemptionThreshold"
argument_list|,
name|fairSharePreemptionThreshold
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxContainerAllocation"
argument_list|,
name|maxContainerAllocation
argument_list|)
expr_stmt|;
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"weight"
argument_list|,
name|weight
argument_list|)
expr_stmt|;
if|if
condition|(
name|reservation
condition|)
block|{
name|pw
operator|.
name|println
argument_list|(
literal|"<reservation></reservation>"
argument_list|)
expr_stmt|;
block|}
name|printEndTag
argument_list|(
name|pw
argument_list|)
expr_stmt|;
name|pw
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|renderWithLegacyTag ()
name|String
name|renderWithLegacyTag
parameter_list|()
block|{
name|this
operator|.
name|tagName
operator|=
name|LEGACY_TAG_NAME
expr_stmt|;
return|return
name|render
argument_list|()
return|;
block|}
DECL|method|printStartTag (PrintWriter pw)
specifier|private
name|void
name|printStartTag
parameter_list|(
name|PrintWriter
name|pw
parameter_list|)
block|{
name|String
name|queueWithName
init|=
name|String
operator|.
name|format
argument_list|(
literal|"<%s name=\"%s\""
argument_list|,
name|tagName
argument_list|,
name|queueName
argument_list|)
decl_stmt|;
name|pw
operator|.
name|print
argument_list|(
name|queueWithName
argument_list|)
expr_stmt|;
if|if
condition|(
name|parent
condition|)
block|{
name|pw
operator|.
name|print
argument_list|(
literal|" type=\"parent\""
argument_list|)
expr_stmt|;
block|}
name|pw
operator|.
name|println
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
block|}
DECL|method|printEndTag (PrintWriter pw)
specifier|private
name|void
name|printEndTag
parameter_list|(
name|PrintWriter
name|pw
parameter_list|)
block|{
name|pw
operator|.
name|println
argument_list|(
literal|"</"
operator|+
name|tagName
operator|+
literal|">"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Class that can build queues (with subqueues) for testcases.    * The intention of having this class to group the common properties of    * simple queues and subqueues by methods delegating calls to a    * queuePropertiesBuilder instance.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|minResources
specifier|private
name|String
name|minResources
decl_stmt|;
DECL|field|maxResources
specifier|private
name|String
name|maxResources
decl_stmt|;
DECL|field|aclAdministerApps
specifier|private
name|String
name|aclAdministerApps
decl_stmt|;
DECL|field|aclSubmitApps
specifier|private
name|String
name|aclSubmitApps
decl_stmt|;
DECL|field|aclSubmitReservations
specifier|private
name|String
name|aclSubmitReservations
decl_stmt|;
DECL|field|aclAdministerReservations
specifier|private
name|String
name|aclAdministerReservations
decl_stmt|;
DECL|field|aclListReservations
specifier|private
name|String
name|aclListReservations
decl_stmt|;
DECL|field|schedulingPolicy
specifier|private
name|String
name|schedulingPolicy
decl_stmt|;
DECL|field|maxRunningApps
specifier|private
name|Integer
name|maxRunningApps
decl_stmt|;
DECL|field|maxAMShare
specifier|private
name|Double
name|maxAMShare
decl_stmt|;
DECL|field|allowPreemptionFrom
specifier|private
name|Boolean
name|allowPreemptionFrom
decl_stmt|;
DECL|field|minSharePreemptionTimeout
specifier|private
name|Integer
name|minSharePreemptionTimeout
decl_stmt|;
DECL|field|parent
specifier|private
name|boolean
name|parent
decl_stmt|;
DECL|field|maxChildResources
specifier|private
name|String
name|maxChildResources
decl_stmt|;
DECL|field|fairSharePreemptionTimeout
specifier|private
name|Integer
name|fairSharePreemptionTimeout
decl_stmt|;
DECL|field|fairSharePreemptionThreshold
specifier|private
name|Double
name|fairSharePreemptionThreshold
decl_stmt|;
DECL|field|maxContainerAllocation
specifier|private
name|String
name|maxContainerAllocation
decl_stmt|;
DECL|field|reservation
specifier|private
name|boolean
name|reservation
decl_stmt|;
DECL|field|subQueues
specifier|private
specifier|final
name|List
argument_list|<
name|AllocationFileQueue
argument_list|>
name|subQueues
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|field|weight
specifier|private
name|Float
name|weight
decl_stmt|;
DECL|method|Builder (String name)
specifier|public
name|Builder
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|parent (boolean value)
specifier|public
name|Builder
name|parent
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|minResources (String value)
specifier|public
name|Builder
name|minResources
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|minResources
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxResources (String value)
specifier|public
name|Builder
name|maxResources
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxResources
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|aclAdministerApps (String value)
specifier|public
name|Builder
name|aclAdministerApps
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|aclAdministerApps
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|aclSubmitApps (String value)
specifier|public
name|Builder
name|aclSubmitApps
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|aclSubmitApps
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|aclSubmitReservations (String value)
specifier|public
name|Builder
name|aclSubmitReservations
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|aclSubmitReservations
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|aclAdministerReservations (String value)
specifier|public
name|Builder
name|aclAdministerReservations
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|aclAdministerReservations
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|aclListReservations (String value)
specifier|public
name|Builder
name|aclListReservations
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|aclListReservations
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|schedulingPolicy (String value)
specifier|public
name|Builder
name|schedulingPolicy
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|schedulingPolicy
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxRunningApps (int value)
specifier|public
name|Builder
name|maxRunningApps
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxRunningApps
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxAMShare (double value)
specifier|public
name|Builder
name|maxAMShare
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxAMShare
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|allowPreemptionFrom (boolean value)
specifier|public
name|Builder
name|allowPreemptionFrom
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|this
operator|.
name|allowPreemptionFrom
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|minSharePreemptionTimeout (int value)
specifier|public
name|Builder
name|minSharePreemptionTimeout
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|minSharePreemptionTimeout
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxChildResources (String value)
specifier|public
name|Builder
name|maxChildResources
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxChildResources
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|fairSharePreemptionTimeout (Integer value)
specifier|public
name|Builder
name|fairSharePreemptionTimeout
parameter_list|(
name|Integer
name|value
parameter_list|)
block|{
name|this
operator|.
name|fairSharePreemptionTimeout
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|fairSharePreemptionThreshold ( double value)
specifier|public
name|Builder
name|fairSharePreemptionThreshold
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|this
operator|.
name|fairSharePreemptionThreshold
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|maxContainerAllocation (String value)
specifier|public
name|Builder
name|maxContainerAllocation
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxContainerAllocation
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|weight (float value)
specifier|public
name|Builder
name|weight
parameter_list|(
name|float
name|value
parameter_list|)
block|{
name|this
operator|.
name|weight
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|reservation ()
specifier|public
name|Builder
name|reservation
parameter_list|()
block|{
name|this
operator|.
name|reservation
operator|=
literal|true
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|subQueue (AllocationFileQueue queue)
specifier|public
name|Builder
name|subQueue
parameter_list|(
name|AllocationFileQueue
name|queue
parameter_list|)
block|{
if|if
condition|(
name|queue
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Subqueue cannot be null!"
argument_list|)
throw|;
block|}
name|subQueues
operator|.
name|add
argument_list|(
name|queue
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|AllocationFileQueue
name|build
parameter_list|()
block|{
return|return
operator|new
name|AllocationFileQueue
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

