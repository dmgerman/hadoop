begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.allocationfile
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|allocationfile
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|AllocationFileQueue
class|class
name|AllocationFileQueue
block|{
DECL|field|properties
specifier|private
specifier|final
name|AllocationFileQueueProperties
name|properties
decl_stmt|;
DECL|field|subQueues
specifier|private
specifier|final
name|List
argument_list|<
name|AllocationFileQueue
argument_list|>
name|subQueues
decl_stmt|;
DECL|method|AllocationFileQueue (AllocationFileQueueProperties properties, List<AllocationFileQueue> subQueues)
name|AllocationFileQueue
parameter_list|(
name|AllocationFileQueueProperties
name|properties
parameter_list|,
name|List
argument_list|<
name|AllocationFileQueue
argument_list|>
name|subQueues
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
name|this
operator|.
name|subQueues
operator|=
name|subQueues
expr_stmt|;
block|}
DECL|method|render ()
name|String
name|render
parameter_list|()
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|printStartTag
argument_list|(
name|pw
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|printQueues
argument_list|(
name|pw
argument_list|,
name|subQueues
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"minResources"
argument_list|,
name|properties
operator|::
name|getMinResources
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxResources"
argument_list|,
name|properties
operator|::
name|getMaxResources
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclAdministerApps"
argument_list|,
name|properties
operator|::
name|getAclAdministerApps
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"aclSubmitApps"
argument_list|,
name|properties
operator|::
name|getAclSubmitApps
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"schedulingPolicy"
argument_list|,
name|properties
operator|::
name|getSchedulingPolicy
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxRunningApps"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getMaxRunningApps
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxAMShare"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getMaxAMShare
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"minSharePreemptionTimeout"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getMinSharePreemptionTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxChildResources"
argument_list|,
name|properties
operator|::
name|getMaxChildResources
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"fairSharePreemptionTimeout"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getFairSharePreemptionTimeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"fairSharePreemptionThreshold"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getFairSharePreemptionThreshold
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|AllocationFileWriter
operator|.
name|addIfPresent
argument_list|(
name|pw
argument_list|,
literal|"maxContainerAllocation"
argument_list|,
parameter_list|()
lambda|->
name|AllocationFileWriter
operator|.
name|createNumberSupplier
argument_list|(
name|properties
operator|.
name|getMaxContainerAllocation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printEndTag
argument_list|(
name|pw
argument_list|)
expr_stmt|;
name|pw
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|printStartTag (PrintWriter pw)
specifier|private
name|void
name|printStartTag
parameter_list|(
name|PrintWriter
name|pw
parameter_list|)
block|{
name|pw
operator|.
name|print
argument_list|(
literal|"<queue name=\""
operator|+
name|properties
operator|.
name|getQueueName
argument_list|()
operator|+
literal|"\" "
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|.
name|getParent
argument_list|()
condition|)
block|{
name|pw
operator|.
name|print
argument_list|(
literal|"type=\"parent\""
argument_list|)
expr_stmt|;
block|}
name|pw
operator|.
name|println
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
block|}
DECL|method|printEndTag (PrintWriter pw)
specifier|private
name|void
name|printEndTag
parameter_list|(
name|PrintWriter
name|pw
parameter_list|)
block|{
name|pw
operator|.
name|println
argument_list|(
literal|"</queue>"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

