begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockNM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAbsoluteResourceConfiguration
specifier|public
class|class
name|TestAbsoluteResourceConfiguration
block|{
DECL|field|GB
specifier|private
specifier|static
specifier|final
name|int
name|GB
init|=
literal|1024
decl_stmt|;
DECL|field|QUEUEA
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA
init|=
literal|"queueA"
decl_stmt|;
DECL|field|QUEUEB
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEB
init|=
literal|"queueB"
decl_stmt|;
DECL|field|QUEUEC
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEC
init|=
literal|"queueC"
decl_stmt|;
DECL|field|QUEUEA1
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA1
init|=
literal|"queueA1"
decl_stmt|;
DECL|field|QUEUEA2
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA2
init|=
literal|"queueA2"
decl_stmt|;
DECL|field|QUEUEB1
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEB1
init|=
literal|"queueB1"
decl_stmt|;
DECL|field|QUEUEA_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA_FULL
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|"."
operator|+
name|QUEUEA
decl_stmt|;
DECL|field|QUEUEB_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEB_FULL
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|"."
operator|+
name|QUEUEB
decl_stmt|;
DECL|field|QUEUEC_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEC_FULL
init|=
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|"."
operator|+
name|QUEUEC
decl_stmt|;
DECL|field|QUEUEA1_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA1_FULL
init|=
name|QUEUEA_FULL
operator|+
literal|"."
operator|+
name|QUEUEA1
decl_stmt|;
DECL|field|QUEUEA2_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEA2_FULL
init|=
name|QUEUEA_FULL
operator|+
literal|"."
operator|+
name|QUEUEA2
decl_stmt|;
DECL|field|QUEUEB1_FULL
specifier|private
specifier|static
specifier|final
name|String
name|QUEUEB1_FULL
init|=
name|QUEUEB_FULL
operator|+
literal|"."
operator|+
name|QUEUEB1
decl_stmt|;
DECL|field|QUEUE_A_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_A_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|100
operator|*
name|GB
argument_list|,
literal|10
argument_list|)
decl_stmt|;
DECL|field|QUEUE_A_MAXRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_A_MAXRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|200
operator|*
name|GB
argument_list|,
literal|30
argument_list|)
decl_stmt|;
DECL|field|QUEUE_A1_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_A1_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|50
operator|*
name|GB
argument_list|,
literal|5
argument_list|)
decl_stmt|;
DECL|field|QUEUE_A2_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_A2_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|50
operator|*
name|GB
argument_list|,
literal|5
argument_list|)
decl_stmt|;
DECL|field|QUEUE_B_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_B_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|50
operator|*
name|GB
argument_list|,
literal|10
argument_list|)
decl_stmt|;
DECL|field|QUEUE_B1_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_B1_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|40
operator|*
name|GB
argument_list|,
literal|10
argument_list|)
decl_stmt|;
DECL|field|QUEUE_B_MAXRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_B_MAXRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|150
operator|*
name|GB
argument_list|,
literal|30
argument_list|)
decl_stmt|;
DECL|field|QUEUE_C_MINRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_C_MINRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|50
operator|*
name|GB
argument_list|,
literal|10
argument_list|)
decl_stmt|;
DECL|field|QUEUE_C_MAXRES
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUE_C_MAXRES
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|150
operator|*
name|GB
argument_list|,
literal|20
argument_list|)
decl_stmt|;
DECL|field|QUEUEA_REDUCED
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUEA_REDUCED
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|64000
argument_list|,
literal|6
argument_list|)
decl_stmt|;
DECL|field|QUEUEB_REDUCED
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUEB_REDUCED
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|32000
argument_list|,
literal|6
argument_list|)
decl_stmt|;
DECL|field|QUEUEC_REDUCED
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUEC_REDUCED
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|32000
argument_list|,
literal|6
argument_list|)
decl_stmt|;
DECL|field|QUEUEMAX_REDUCED
specifier|private
specifier|static
specifier|final
name|Resource
name|QUEUEMAX_REDUCED
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|128000
argument_list|,
literal|20
argument_list|)
decl_stmt|;
DECL|field|resourceTypes
specifier|private
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|resourceTypes
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"memory"
argument_list|,
literal|"vcores"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|setupSimpleQueueConfiguration ( boolean isCapacityNeeded)
specifier|private
name|CapacitySchedulerConfiguration
name|setupSimpleQueueConfiguration
parameter_list|(
name|boolean
name|isCapacityNeeded
parameter_list|)
block|{
name|CapacitySchedulerConfiguration
name|csConf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|csConf
operator|.
name|setQueues
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
operator|new
name|String
index|[]
block|{
name|QUEUEA
block|,
name|QUEUEB
block|,
name|QUEUEC
block|}
argument_list|)
expr_stmt|;
comment|// Set default capacities like normal configuration.
if|if
condition|(
name|isCapacityNeeded
condition|)
block|{
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEA_FULL
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEB_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEC_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
block|}
return|return
name|csConf
return|;
block|}
DECL|method|setupComplexQueueConfiguration ( boolean isCapacityNeeded)
specifier|private
name|CapacitySchedulerConfiguration
name|setupComplexQueueConfiguration
parameter_list|(
name|boolean
name|isCapacityNeeded
parameter_list|)
block|{
name|CapacitySchedulerConfiguration
name|csConf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|csConf
operator|.
name|setQueues
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
operator|new
name|String
index|[]
block|{
name|QUEUEA
block|,
name|QUEUEB
block|,
name|QUEUEC
block|}
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setQueues
argument_list|(
name|QUEUEA_FULL
argument_list|,
operator|new
name|String
index|[]
block|{
name|QUEUEA1
block|,
name|QUEUEA2
block|}
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setQueues
argument_list|(
name|QUEUEB_FULL
argument_list|,
operator|new
name|String
index|[]
block|{
name|QUEUEB1
block|}
argument_list|)
expr_stmt|;
comment|// Set default capacities like normal configuration.
if|if
condition|(
name|isCapacityNeeded
condition|)
block|{
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEA_FULL
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEB_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEC_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEA1_FULL
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEA2_FULL
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEB1_FULL
argument_list|,
literal|100f
argument_list|)
expr_stmt|;
block|}
return|return
name|csConf
return|;
block|}
DECL|method|setupMinMaxResourceConfiguration ( CapacitySchedulerConfiguration csConf)
specifier|private
name|CapacitySchedulerConfiguration
name|setupMinMaxResourceConfiguration
parameter_list|(
name|CapacitySchedulerConfiguration
name|csConf
parameter_list|)
block|{
comment|// Update min/max resource to queueA/B/C
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|QUEUE_A_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|QUEUE_B_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|QUEUE_C_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|QUEUE_A_MAXRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|QUEUE_B_MAXRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|QUEUE_C_MAXRES
argument_list|)
expr_stmt|;
return|return
name|csConf
return|;
block|}
DECL|method|setupComplexMinMaxResourceConfig ( CapacitySchedulerConfiguration csConf)
specifier|private
name|CapacitySchedulerConfiguration
name|setupComplexMinMaxResourceConfig
parameter_list|(
name|CapacitySchedulerConfiguration
name|csConf
parameter_list|)
block|{
comment|// Update min/max resource to queueA/B/C
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|QUEUE_A_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|QUEUE_B_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|QUEUE_C_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA1_FULL
argument_list|,
name|QUEUE_A1_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA2_FULL
argument_list|,
name|QUEUE_A2_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB1_FULL
argument_list|,
name|QUEUE_B1_MINRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|QUEUE_A_MAXRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|QUEUE_B_MAXRES
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|QUEUE_C_MAXRES
argument_list|)
expr_stmt|;
return|return
name|csConf
return|;
block|}
annotation|@
name|Test
DECL|method|testSimpleMinMaxResourceConfigurartionPerQueue ()
specifier|public
name|void
name|testSimpleMinMaxResourceConfigurartionPerQueue
parameter_list|()
block|{
name|CapacitySchedulerConfiguration
name|csConf
init|=
name|setupSimpleQueueConfiguration
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|setupMinMaxResourceConfiguration
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MINRES
argument_list|,
name|csConf
operator|.
name|getMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|csConf
operator|.
name|getMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MINRES
argument_list|,
name|csConf
operator|.
name|getMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|csConf
operator|.
name|getMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|csConf
operator|.
name|getMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|csConf
operator|.
name|getMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|resourceTypes
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEffectiveMinMaxResourceConfigurartionPerQueue ()
specifier|public
name|void
name|testEffectiveMinMaxResourceConfigurartionPerQueue
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create conf with basic queue configuration.
name|CapacitySchedulerConfiguration
name|csConf
init|=
name|setupSimpleQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupMinMaxResourceConfiguration
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|(
name|csConf
argument_list|)
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Add few nodes
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|250
operator|*
name|GB
argument_list|,
literal|40
argument_list|)
expr_stmt|;
comment|// Get queue object to verify min/max resource configuration.
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|LeafQueue
name|qA
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEA
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qA
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MINRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MINRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qB
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEB
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qB
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MINRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MINRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qC
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEC
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qC
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimpleValidateAbsoluteResourceConfig ()
specifier|public
name|void
name|testSimpleValidateAbsoluteResourceConfig
parameter_list|()
throws|throws
name|Exception
block|{
comment|/**      * Queue structure is as follows. root / | \ a b c / \ | a1 a2 b1      *      * Test below cases 1) Configure percentage based capacity and absolute      * resource together. 2) As per above tree structure, ensure all values      * could be retrieved. 3) Validate whether min resource cannot be more than      * max resources. 4) Validate whether max resource of queue cannot be more      * than its parent max resource.      */
comment|// create conf with basic queue configuration.
name|CapacitySchedulerConfiguration
name|csConf
init|=
name|setupSimpleQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupMinMaxResourceConfiguration
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|(
name|csConf
argument_list|)
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Add few nodes
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|250
operator|*
name|GB
argument_list|,
literal|40
argument_list|)
expr_stmt|;
comment|// Get queue object to verify min/max resource configuration.
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
comment|// 1. Create a new config with capcity and min/max together. Ensure an
comment|// exception is thrown.
name|CapacitySchedulerConfiguration
name|csConf1
init|=
name|setupSimpleQueueConfiguration
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|setupMinMaxResourceConfiguration
argument_list|(
name|csConf1
argument_list|)
expr_stmt|;
try|try
block|{
name|cs
operator|.
name|reinitialize
argument_list|(
name|csConf1
argument_list|,
name|rm
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|IOException
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to re-init queues : Queue 'queueA' should use either"
operator|+
literal|" percentage based capacity configuration or absolute resource."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|// 2. Create a new config with min/max alone with a complex queue config.
comment|// Check all values could be fetched correctly.
name|CapacitySchedulerConfiguration
name|csConf2
init|=
name|setupComplexQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupComplexMinMaxResourceConfig
argument_list|(
name|csConf2
argument_list|)
expr_stmt|;
name|rm
operator|=
operator|new
name|MockRM
argument_list|(
name|csConf2
argument_list|)
expr_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|250
operator|*
name|GB
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|cs
operator|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
expr_stmt|;
name|LeafQueue
name|qA1
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEA1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEA1 is not correct"
argument_list|,
name|QUEUE_A1_MINRES
argument_list|,
name|qA1
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEA1 is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA1
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qA2
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEA2
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEA2 is not correct"
argument_list|,
name|QUEUE_A2_MINRES
argument_list|,
name|qA2
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEA2 is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA2
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qB1
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEB1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qB1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEB1 is not correct"
argument_list|,
name|QUEUE_B1_MINRES
argument_list|,
name|qB1
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEB1 is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB1
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEB1 is not correct"
argument_list|,
name|QUEUE_B1_MINRES
argument_list|,
name|qB1
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEB1 is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB1
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qC
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEC
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qC
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
comment|// 3. Create a new config and make sure one queue's min resource is more
comment|// than its max resource configured.
name|CapacitySchedulerConfiguration
name|csConf3
init|=
name|setupComplexQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupComplexMinMaxResourceConfig
argument_list|(
name|csConf3
argument_list|)
expr_stmt|;
name|csConf3
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB1_FULL
argument_list|,
name|QUEUE_B_MAXRES
argument_list|)
expr_stmt|;
name|csConf3
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB1_FULL
argument_list|,
name|QUEUE_B1_MINRES
argument_list|)
expr_stmt|;
try|try
block|{
name|cs
operator|.
name|reinitialize
argument_list|(
name|csConf3
argument_list|,
name|rm
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|IOException
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to re-init queues : Min resource configuration "
operator|+
literal|"<memory:153600, vCores:30> is greater than its "
operator|+
literal|"max value:<memory:40960, vCores:10> in queue:queueB1"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// 4. Create a new config and make sure one queue's max resource is more
comment|// than its preant's max resource configured.
name|CapacitySchedulerConfiguration
name|csConf4
init|=
name|setupComplexQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupComplexMinMaxResourceConfig
argument_list|(
name|csConf4
argument_list|)
expr_stmt|;
name|csConf4
operator|.
name|setMaximumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB1_FULL
argument_list|,
name|QUEUE_A_MAXRES
argument_list|)
expr_stmt|;
try|try
block|{
name|cs
operator|.
name|reinitialize
argument_list|(
name|csConf4
argument_list|,
name|rm
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|IOException
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to re-init queues : Max resource configuration "
operator|+
literal|"<memory:204800, vCores:30> is greater than parents max value:"
operator|+
literal|"<memory:153600, vCores:30> in queue:queueB1"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testComplexValidateAbsoluteResourceConfig ()
specifier|public
name|void
name|testComplexValidateAbsoluteResourceConfig
parameter_list|()
throws|throws
name|Exception
block|{
comment|/**      * Queue structure is as follows. root / | \ a b c / \ | a1 a2 b1      *      * Test below cases: 1) Parent and its child queues must use either      * percentage based or absolute resource configuration. 2) Parent's min      * resource must be more than sum of child's min resource.      */
comment|// create conf with basic queue configuration.
name|CapacitySchedulerConfiguration
name|csConf
init|=
name|setupComplexQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupComplexMinMaxResourceConfig
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|(
name|csConf
argument_list|)
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Add few nodes
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|250
operator|*
name|GB
argument_list|,
literal|40
argument_list|)
expr_stmt|;
comment|// 1. Explicitly set percentage based config for parent queues. This will
comment|// make Queue A,B and C with percentage based and A1,A2 or B1 with absolute
comment|// resource.
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEA_FULL
argument_list|,
literal|50f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEB_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setCapacity
argument_list|(
name|QUEUEC_FULL
argument_list|,
literal|25f
argument_list|)
expr_stmt|;
comment|// Also unset resource based config.
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|Resources
operator|.
name|none
argument_list|()
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEB_FULL
argument_list|,
name|Resources
operator|.
name|none
argument_list|()
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEC_FULL
argument_list|,
name|Resources
operator|.
name|none
argument_list|()
argument_list|)
expr_stmt|;
comment|// Get queue object to verify min/max resource configuration.
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
try|try
block|{
name|cs
operator|.
name|reinitialize
argument_list|(
name|csConf
argument_list|,
name|rm
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|IOException
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to re-init queues : Parent queue 'queueA' "
operator|+
literal|"and child queue 'queueA1' should use either percentage based"
operator|+
literal|" capacity configuration or absolute resource together."
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// 2. Create a new config and make sure one queue's min resource is more
comment|// than its max resource configured.
name|CapacitySchedulerConfiguration
name|csConf1
init|=
name|setupComplexQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupComplexMinMaxResourceConfig
argument_list|(
name|csConf1
argument_list|)
expr_stmt|;
comment|// Configure QueueA with lesser resource than its children.
name|csConf1
operator|.
name|setMinimumResourceRequirement
argument_list|(
literal|""
argument_list|,
name|QUEUEA_FULL
argument_list|,
name|QUEUE_A1_MINRES
argument_list|)
expr_stmt|;
try|try
block|{
name|cs
operator|.
name|reinitialize
argument_list|(
name|csConf1
argument_list|,
name|rm
operator|.
name|getRMContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|IOException
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to re-init queues : Parent Queues capacity: "
operator|+
literal|"<memory:51200, vCores:5> is less than to its children:"
operator|+
literal|"<memory:102400, vCores:10> for queue:queueA"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testEffectiveResourceAfterReducingClusterResource ()
specifier|public
name|void
name|testEffectiveResourceAfterReducingClusterResource
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create conf with basic queue configuration.
name|CapacitySchedulerConfiguration
name|csConf
init|=
name|setupSimpleQueueConfiguration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|setupMinMaxResourceConfiguration
argument_list|(
name|csConf
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|(
name|csConf
argument_list|)
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Add few nodes
name|MockNM
name|nm1
init|=
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|125
operator|*
name|GB
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|rm
operator|.
name|registerNode
argument_list|(
literal|"127.0.0.2:1234"
argument_list|,
literal|125
operator|*
name|GB
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Get queue object to verify min/max resource configuration.
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|LeafQueue
name|qA
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEA
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qA
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MINRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MINRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEA is not correct"
argument_list|,
name|QUEUE_A_MAXRES
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qB
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEB
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qB
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MINRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MINRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEB is not correct"
argument_list|,
name|QUEUE_B_MAXRES
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|LeafQueue
name|qC
init|=
operator|(
name|LeafQueue
operator|)
name|cs
operator|.
name|getQueue
argument_list|(
name|QUEUEC
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|qC
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Min resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Max resource configured for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getConfiguredMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MINRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEC is not correct"
argument_list|,
name|QUEUE_C_MAXRES
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
comment|// unregister one NM.
name|rm
operator|.
name|unRegisterNode
argument_list|(
name|nm1
argument_list|)
expr_stmt|;
comment|// After loosing one NM, effective min res of queueA will become just
comment|// above half. Hence A's min will be 60Gi and 6 cores and max will be
comment|// 128GB and 20 cores.
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEA is not correct"
argument_list|,
name|QUEUEA_REDUCED
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEA is not correct"
argument_list|,
name|QUEUEMAX_REDUCED
argument_list|,
name|qA
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEB is not correct"
argument_list|,
name|QUEUEB_REDUCED
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEB is not correct"
argument_list|,
name|QUEUEMAX_REDUCED
argument_list|,
name|qB
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Min resource for QUEUEC is not correct"
argument_list|,
name|QUEUEC_REDUCED
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMinResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Effective Max resource for QUEUEC is not correct"
argument_list|,
name|QUEUEMAX_REDUCED
argument_list|,
name|qC
operator|.
name|queueResourceQuotas
operator|.
name|getEffectiveMaxResource
argument_list|()
argument_list|)
expr_stmt|;
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

