begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.nodelabels
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|nodelabels
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttributeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|InlineDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|AttributeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|NodeAttributeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|TestFileSystemNodeAttributeStore
specifier|public
class|class
name|TestFileSystemNodeAttributeStore
block|{
DECL|field|mgr
specifier|private
name|MockNodeAttrbuteManager
name|mgr
init|=
literal|null
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
init|=
literal|null
decl_stmt|;
DECL|class|MockNodeAttrbuteManager
specifier|private
specifier|static
class|class
name|MockNodeAttrbuteManager
extends|extends
name|NodeAttributesManagerImpl
block|{
annotation|@
name|Override
DECL|method|initDispatcher (Configuration conf)
specifier|protected
name|void
name|initDispatcher
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|super
operator|.
name|dispatcher
operator|=
operator|new
name|InlineDispatcher
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|startDispatcher ()
specifier|protected
name|void
name|startDispatcher
parameter_list|()
block|{
comment|//Do nothing
block|}
annotation|@
name|Override
DECL|method|stopDispatcher ()
specifier|protected
name|void
name|stopDispatcher
parameter_list|()
block|{
comment|//Do nothing
block|}
block|}
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|IOException
block|{
name|mgr
operator|=
operator|new
name|MockNodeAttrbuteManager
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|FS_NODE_ATTRIBUTE_STORE_IMPL_CLASS
argument_list|,
name|FileSystemNodeAttributeStore
operator|.
name|class
argument_list|,
name|NodeAttributeStore
operator|.
name|class
argument_list|)
expr_stmt|;
name|File
name|tempDir
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"nattr"
argument_list|,
literal|".tmp"
argument_list|)
decl_stmt|;
name|tempDir
operator|.
name|delete
argument_list|()
expr_stmt|;
name|tempDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|tempDir
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|FS_NODE_ATTRIBUTE_STORE_ROOT_DIR
argument_list|,
name|tempDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after ()
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystemNodeAttributeStore
name|fsStore
init|=
operator|(
operator|(
name|FileSystemNodeAttributeStore
operator|)
name|mgr
operator|.
name|store
operator|)
decl_stmt|;
name|fsStore
operator|.
name|getFs
argument_list|()
operator|.
name|delete
argument_list|(
name|fsStore
operator|.
name|getFsWorkingPath
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testRecoverWithMirror ()
specifier|public
name|void
name|testRecoverWithMirror
parameter_list|()
throws|throws
name|Exception
block|{
comment|//------host0----
comment|// add       -GPU& FPGA
comment|// remove    -GPU
comment|// replace   -Docker
comment|//------host1----
comment|// add--GPU
name|NodeAttribute
name|docker
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"DOCKER"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"docker-0"
argument_list|)
decl_stmt|;
name|NodeAttribute
name|gpu
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"GPU"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"nvidia"
argument_list|)
decl_stmt|;
name|NodeAttribute
name|fpga
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"FPGA"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"asus"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|NodeAttribute
argument_list|>
argument_list|>
name|toAddAttributes
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|,
name|fpga
argument_list|)
argument_list|)
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host1"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add node attribute
name|mgr
operator|.
name|addNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|2
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add test to remove
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|removeNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
comment|// replace nodeattribute
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|docker
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceNodeAttributes
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
name|toAddAttributes
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|NodeAttribute
argument_list|,
name|AttributeValue
argument_list|>
name|attrs
init|=
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|docker
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|// Start new attribute manager with same path
name|mgr
operator|=
operator|new
name|MockNodeAttrbuteManager
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|1
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host1 size"
argument_list|,
literal|1
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|attrs
operator|=
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|docker
argument_list|)
expr_stmt|;
comment|//------host0----
comment|// current       - docker
comment|// replace       - gpu
comment|//----- host1----
comment|// current       - gpu
comment|// add           - docker
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceNodeAttributes
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
name|toAddAttributes
argument_list|)
expr_stmt|;
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host1"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|docker
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|addNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
comment|// Recover from mirror and edit log
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
name|mgr
operator|=
operator|new
name|MockNodeAttrbuteManager
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|1
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host1 size"
argument_list|,
literal|2
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|attrs
operator|=
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attrs
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|gpu
argument_list|)
expr_stmt|;
name|attrs
operator|=
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host1"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|attrs
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
name|docker
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|attrs
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testRecoverFromEditLog ()
specifier|public
name|void
name|testRecoverFromEditLog
parameter_list|()
throws|throws
name|Exception
block|{
name|NodeAttribute
name|docker
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"DOCKER"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"docker-0"
argument_list|)
decl_stmt|;
name|NodeAttribute
name|gpu
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"GPU"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"nvidia"
argument_list|)
decl_stmt|;
name|NodeAttribute
name|fpga
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
literal|"FPGA"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"asus"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|NodeAttribute
argument_list|>
argument_list|>
name|toAddAttributes
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|,
name|fpga
argument_list|)
argument_list|)
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host1"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|docker
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add node attribute
name|mgr
operator|.
name|addNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|2
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//  Increase editlog operation
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
comment|// Add gpu host1
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|removeNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
comment|// Add gpu host1
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host1"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|docker
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|addNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
comment|// Remove GPU replace
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceNodeAttributes
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
name|toAddAttributes
argument_list|)
expr_stmt|;
comment|// Add fgpa host1
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host1"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|gpu
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|addNodeAttributes
argument_list|(
name|toAddAttributes
argument_list|)
expr_stmt|;
block|}
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|// Start new attribute manager with same path
name|mgr
operator|=
operator|new
name|MockNodeAttrbuteManager
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|1
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host1 size"
argument_list|,
literal|2
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|toAddAttributes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|NodeAttribute
name|replaced
init|=
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"GPU2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"nvidia2"
argument_list|)
decl_stmt|;
name|toAddAttributes
operator|.
name|put
argument_list|(
literal|"host0"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|replaced
argument_list|)
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|replaceNodeAttributes
argument_list|(
name|NodeAttribute
operator|.
name|PREFIX_CENTRALIZED
argument_list|,
name|toAddAttributes
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|stop
argument_list|()
expr_stmt|;
name|mgr
operator|=
operator|new
name|MockNodeAttrbuteManager
argument_list|()
expr_stmt|;
name|mgr
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|mgr
operator|.
name|start
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|NodeAttribute
argument_list|,
name|AttributeValue
argument_list|>
name|valueMap
init|=
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
decl_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|NodeAttribute
argument_list|,
name|AttributeValue
argument_list|>
name|entry
init|=
name|valueMap
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|NodeAttribute
name|attribute
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host0 size"
argument_list|,
literal|1
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host0"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"host1 size"
argument_list|,
literal|2
argument_list|,
name|mgr
operator|.
name|getAttributesForNode
argument_list|(
literal|"host1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|checkNodeAttributeEqual
argument_list|(
name|replaced
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
block|}
DECL|method|checkNodeAttributeEqual (NodeAttribute atr1, NodeAttribute atr2)
specifier|public
name|void
name|checkNodeAttributeEqual
parameter_list|(
name|NodeAttribute
name|atr1
parameter_list|,
name|NodeAttribute
name|atr2
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|atr1
operator|.
name|getAttributeType
argument_list|()
argument_list|,
name|atr2
operator|.
name|getAttributeType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|atr1
operator|.
name|getAttributeName
argument_list|()
argument_list|,
name|atr2
operator|.
name|getAttributeName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|atr1
operator|.
name|getAttributePrefix
argument_list|()
argument_list|,
name|atr2
operator|.
name|getAttributePrefix
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|atr1
operator|.
name|getAttributeValue
argument_list|()
argument_list|,
name|atr2
operator|.
name|getAttributeValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

