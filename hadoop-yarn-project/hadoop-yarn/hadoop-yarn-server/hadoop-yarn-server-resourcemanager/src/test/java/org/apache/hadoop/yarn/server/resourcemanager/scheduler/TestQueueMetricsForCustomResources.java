begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsSystemImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|resourcetypes
operator|.
name|ResourceTypesTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|nodelabels
operator|.
name|RMNodeLabelsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiFunction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|resourcetypes
operator|.
name|ResourceTypesTestHelper
operator|.
name|extractCustomResourcesAsStrings
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|resourcetypes
operator|.
name|ResourceTypesTestHelper
operator|.
name|newResource
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AGGREGATE_CONTAINERS_ALLOCATED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AGGREGATE_CONTAINERS_RELEASED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AGGREGATE_MEMORY_MB_SECONDS_PREEMPTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AGGREGATE_VCORE_SECONDS_PREEMPTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|ALLOCATED_CONTAINERS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|ALLOCATED_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|ALLOCATED_V_CORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AVAILABLE_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|AVAILABLE_V_CORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|PENDING_CONTAINERS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|PENDING_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|PENDING_V_CORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|RESERVED_CONTAINERS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|RESERVED_MB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceMetricsChecker
operator|.
name|ResourceMetricsKey
operator|.
name|RESERVED_V_CORES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|TestQueueMetrics
operator|.
name|queueSource
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
DECL|class|TestQueueMetricsForCustomResources
specifier|public
class|class
name|TestQueueMetricsForCustomResources
block|{
DECL|enum|MetricsForCustomResource
specifier|public
enum|enum
name|MetricsForCustomResource
block|{
DECL|enumConstant|ALLOCATED
DECL|enumConstant|AVAILABLE
DECL|enumConstant|PENDING
DECL|enumConstant|RESERVED
DECL|enumConstant|AGGREGATE_PREEMPTED_SECONDS
name|ALLOCATED
block|,
name|AVAILABLE
block|,
name|PENDING
block|,
name|RESERVED
block|,
name|AGGREGATE_PREEMPTED_SECONDS
block|}
DECL|field|GB
specifier|public
specifier|static
specifier|final
name|long
name|GB
init|=
literal|1024
decl_stmt|;
comment|// MB
DECL|field|CONF
specifier|private
specifier|static
specifier|final
name|Configuration
name|CONF
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|CUSTOM_RES_1
specifier|private
specifier|static
specifier|final
name|String
name|CUSTOM_RES_1
init|=
literal|"custom_res_1"
decl_stmt|;
DECL|field|CUSTOM_RES_2
specifier|private
specifier|static
specifier|final
name|String
name|CUSTOM_RES_2
init|=
literal|"custom_res_2"
decl_stmt|;
DECL|field|USER
specifier|public
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"alice"
decl_stmt|;
DECL|field|defaultResource
specifier|private
name|Resource
name|defaultResource
decl_stmt|;
DECL|field|ms
specifier|private
name|MetricsSystem
name|ms
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|ms
operator|=
operator|new
name|MetricsSystemImpl
argument_list|()
expr_stmt|;
name|QueueMetrics
operator|.
name|clearQueueMetrics
argument_list|()
expr_stmt|;
name|initializeResourceTypes
argument_list|()
expr_stmt|;
name|createDefaultResource
argument_list|()
expr_stmt|;
block|}
DECL|method|createDefaultResource ()
specifier|private
name|void
name|createDefaultResource
parameter_list|()
block|{
name|defaultResource
operator|=
name|newResource
argument_list|(
literal|4
operator|*
name|GB
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|15
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|20
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|initializeResourceTypes ()
specifier|private
name|void
name|initializeResourceTypes
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|ResourceInformation
argument_list|>
name|riMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|ResourceInformation
name|memory
init|=
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getName
argument_list|()
argument_list|,
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getUnits
argument_list|()
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB
argument_list|,
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB
argument_list|)
decl_stmt|;
name|ResourceInformation
name|vcores
init|=
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getName
argument_list|()
argument_list|,
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getUnits
argument_list|()
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES
argument_list|,
name|DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES
argument_list|)
decl_stmt|;
name|ResourceInformation
name|res1
init|=
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getUnits
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|2000
argument_list|)
decl_stmt|;
name|ResourceInformation
name|res2
init|=
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getUnits
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|2000
argument_list|)
decl_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|ResourceInformation
operator|.
name|MEMORY_URI
argument_list|,
name|memory
argument_list|)
expr_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|ResourceInformation
operator|.
name|VCORES_URI
argument_list|,
name|vcores
argument_list|)
expr_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|res1
argument_list|)
expr_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|res2
argument_list|)
expr_stmt|;
name|ResourceUtils
operator|.
name|initializeResourcesFromResourceInformationMap
argument_list|(
name|riMap
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCustomResourceValue (QueueMetrics metrics, MetricsForCustomResource metricsType, Function<QueueMetrics, Resource> func, String resourceName, long expectedValue)
specifier|private
specifier|static
name|void
name|assertCustomResourceValue
parameter_list|(
name|QueueMetrics
name|metrics
parameter_list|,
name|MetricsForCustomResource
name|metricsType
parameter_list|,
name|Function
argument_list|<
name|QueueMetrics
argument_list|,
name|Resource
argument_list|>
name|func
parameter_list|,
name|String
name|resourceName
parameter_list|,
name|long
name|expectedValue
parameter_list|)
block|{
name|Resource
name|res
init|=
name|func
operator|.
name|apply
argument_list|(
name|metrics
argument_list|)
decl_stmt|;
name|Long
name|value
init|=
name|res
operator|.
name|getResourceValue
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
name|assertCustomResourceValueInternal
argument_list|(
name|metricsType
argument_list|,
name|resourceName
argument_list|,
name|expectedValue
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCustomResourceValueInternal ( MetricsForCustomResource metricsType, String resourceName, long expectedValue, Long value)
specifier|private
specifier|static
name|void
name|assertCustomResourceValueInternal
parameter_list|(
name|MetricsForCustomResource
name|metricsType
parameter_list|,
name|String
name|resourceName
parameter_list|,
name|long
name|expectedValue
parameter_list|,
name|Long
name|value
parameter_list|)
block|{
name|assertNotNull
argument_list|(
literal|"QueueMetrics should have custom resource metrics value "
operator|+
literal|"for resource: "
operator|+
name|resourceName
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"QueueMetrics should have custom resource metrics value %d "
operator|+
literal|"for resource: %s for metrics type %s"
argument_list|,
name|expectedValue
argument_list|,
name|resourceName
argument_list|,
name|metricsType
argument_list|)
argument_list|,
name|expectedValue
argument_list|,
operator|(
name|long
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
DECL|method|getCustomResourcesWithValue (long value)
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getCustomResourcesWithValue
parameter_list|(
name|long
name|value
parameter_list|)
block|{
return|return
name|ImmutableMap
operator|.
expr|<
name|String
operator|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createFourLevelQueueHierarchy ()
specifier|private
name|QueueInfo
name|createFourLevelQueueHierarchy
parameter_list|()
block|{
name|QueueInfo
name|root
init|=
operator|new
name|QueueInfo
argument_list|(
literal|null
argument_list|,
literal|"root"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
decl_stmt|;
name|QueueInfo
name|sub
init|=
operator|new
name|QueueInfo
argument_list|(
name|root
argument_list|,
literal|"root.subQ"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
decl_stmt|;
name|QueueInfo
name|sub2
init|=
operator|new
name|QueueInfo
argument_list|(
name|sub
argument_list|,
literal|"root.subQ2"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
decl_stmt|;
return|return
operator|new
name|QueueInfo
argument_list|(
name|sub2
argument_list|,
literal|"root.subQ2.leafQ"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
return|;
block|}
DECL|method|createBasicQueueHierarchy ()
specifier|private
name|QueueInfo
name|createBasicQueueHierarchy
parameter_list|()
block|{
name|QueueInfo
name|root
init|=
operator|new
name|QueueInfo
argument_list|(
literal|null
argument_list|,
literal|"root"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
decl_stmt|;
return|return
operator|new
name|QueueInfo
argument_list|(
name|root
argument_list|,
literal|"root.leaf"
argument_list|,
name|ms
argument_list|,
name|CONF
argument_list|,
name|USER
argument_list|)
return|;
block|}
specifier|private
name|QueueMetricsTestData
operator|.
name|Builder
DECL|method|createQueueMetricsTestDataWithContainers (int containers)
name|createQueueMetricsTestDataWithContainers
parameter_list|(
name|int
name|containers
parameter_list|)
block|{
return|return
name|createDefaultQueueMetricsTestData
argument_list|()
operator|.
name|withContainers
argument_list|(
name|containers
argument_list|)
return|;
block|}
DECL|method|createDefaultQueueMetricsTestData ()
specifier|private
name|QueueMetricsTestData
operator|.
name|Builder
name|createDefaultQueueMetricsTestData
parameter_list|()
block|{
return|return
name|QueueMetricsTestData
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|withUser
argument_list|(
name|USER
argument_list|)
operator|.
name|withPartition
argument_list|(
name|RMNodeLabelsManager
operator|.
name|NO_LABEL
argument_list|)
return|;
block|}
DECL|method|testIncreasePendingResources (QueueMetricsTestData testData)
specifier|private
name|void
name|testIncreasePendingResources
parameter_list|(
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testIncreasePendingResourcesInternal
argument_list|(
name|testData
operator|.
name|containers
argument_list|,
name|testData
argument_list|)
expr_stmt|;
block|}
DECL|method|testIncreasePendingResourcesWithoutContainer ( QueueMetricsTestData testData)
specifier|private
name|void
name|testIncreasePendingResourcesWithoutContainer
parameter_list|(
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testIncreasePendingResourcesInternal
argument_list|(
literal|1
argument_list|,
name|testData
argument_list|)
expr_stmt|;
block|}
DECL|method|testIncreasePendingResourcesInternal (int containers, QueueMetricsTestData testData)
specifier|private
name|void
name|testIncreasePendingResourcesInternal
parameter_list|(
name|int
name|containers
parameter_list|,
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|incrPendingResources
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|containers
argument_list|,
name|testData
operator|.
name|resource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeInt
argument_list|(
name|PENDING_CONTAINERS
argument_list|,
name|containers
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|PENDING_MB
argument_list|,
name|containers
operator|*
name|testData
operator|.
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_V_CORES
argument_list|,
name|containers
operator|*
name|testData
operator|.
name|resource
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
decl_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getPendingResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|PENDING
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
operator|*
name|containers
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testAllocateResources (boolean decreasePending, QueueMetricsTestData testData)
specifier|private
name|void
name|testAllocateResources
parameter_list|(
name|boolean
name|decreasePending
parameter_list|,
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|allocateResources
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|testData
operator|.
name|containers
argument_list|,
name|testData
operator|.
name|resource
argument_list|,
name|decreasePending
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeInt
argument_list|(
name|ALLOCATED_CONTAINERS
argument_list|,
name|testData
operator|.
name|containers
argument_list|)
operator|.
name|counter
argument_list|(
name|AGGREGATE_CONTAINERS_ALLOCATED
argument_list|,
name|testData
operator|.
name|containers
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|ALLOCATED_MB
argument_list|,
name|testData
operator|.
name|containers
operator|*
name|testData
operator|.
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|ALLOCATED_V_CORES
argument_list|,
name|testData
operator|.
name|containers
operator|*
name|testData
operator|.
name|resource
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_CONTAINERS
argument_list|,
literal|0
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|PENDING_MB
argument_list|,
literal|0
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_V_CORES
argument_list|,
literal|0
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
decl_stmt|;
if|if
condition|(
name|decreasePending
condition|)
block|{
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getPendingResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|PENDING
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|testData
operator|.
name|customResourceValues
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getAllocatedResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|ALLOCATED
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
operator|*
name|testData
operator|.
name|containers
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testUpdatePreemptedSeconds (QueueMetricsTestData testData, int seconds)
specifier|private
name|void
name|testUpdatePreemptedSeconds
parameter_list|(
name|QueueMetricsTestData
name|testData
parameter_list|,
name|int
name|seconds
parameter_list|)
block|{
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|updatePreemptedMemoryMBSeconds
argument_list|(
name|testData
operator|.
name|resource
operator|.
name|getMemorySize
argument_list|()
operator|*
name|seconds
argument_list|)
expr_stmt|;
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|updatePreemptedVcoreSeconds
argument_list|(
name|testData
operator|.
name|resource
operator|.
name|getVirtualCores
argument_list|()
operator|*
name|seconds
argument_list|)
expr_stmt|;
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|updatePreemptedSecondsForCustomResources
argument_list|(
name|testData
operator|.
name|resource
argument_list|,
name|seconds
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|counter
argument_list|(
name|AGGREGATE_MEMORY_MB_SECONDS_PREEMPTED
argument_list|,
name|testData
operator|.
name|resource
operator|.
name|getMemorySize
argument_list|()
operator|*
name|seconds
argument_list|)
operator|.
name|counter
argument_list|(
name|AGGREGATE_VCORE_SECONDS_PREEMPTED
argument_list|,
name|testData
operator|.
name|resource
operator|.
name|getVirtualCores
argument_list|()
operator|*
name|seconds
argument_list|)
decl_stmt|;
name|assertQueueMetricsOnly
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|this
operator|::
name|convertPreemptedSecondsToResource
argument_list|,
name|MetricsForCustomResource
operator|.
name|AGGREGATE_PREEMPTED_SECONDS
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
operator|*
name|seconds
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|convertPreemptedSecondsToResource (QueueMetrics qm)
specifier|private
name|Resource
name|convertPreemptedSecondsToResource
parameter_list|(
name|QueueMetrics
name|qm
parameter_list|)
block|{
name|QueueMetricsCustomResource
name|customValues
init|=
name|qm
operator|.
name|getAggregatedPreemptedSecondsResources
argument_list|()
decl_stmt|;
name|MutableCounterLong
name|vcoreSeconds
init|=
name|qm
operator|.
name|getAggregateVcoreSecondsPreempted
argument_list|()
decl_stmt|;
name|MutableCounterLong
name|memorySeconds
init|=
name|qm
operator|.
name|getAggregateMemoryMBSecondsPreempted
argument_list|()
decl_stmt|;
return|return
name|Resource
operator|.
name|newInstance
argument_list|(
name|memorySeconds
operator|.
name|value
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|vcoreSeconds
operator|.
name|value
argument_list|()
argument_list|,
name|customValues
operator|.
name|getValues
argument_list|()
argument_list|)
return|;
block|}
DECL|method|testReserveResources (QueueMetricsTestData testData)
specifier|private
name|void
name|testReserveResources
parameter_list|(
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|reserveResource
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|testData
operator|.
name|resource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeInt
argument_list|(
name|RESERVED_CONTAINERS
argument_list|,
literal|1
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|RESERVED_MB
argument_list|,
name|testData
operator|.
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|RESERVED_V_CORES
argument_list|,
name|testData
operator|.
name|resource
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
decl_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getReservedResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|RESERVED
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetAllocatedResources (QueueMetricsTestData testData)
specifier|private
name|void
name|testGetAllocatedResources
parameter_list|(
name|QueueMetricsTestData
name|testData
parameter_list|)
block|{
name|testAllocateResources
argument_list|(
literal|false
argument_list|,
name|testData
argument_list|)
expr_stmt|;
name|Resource
name|res
init|=
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|getAllocatedResources
argument_list|()
decl_stmt|;
if|if
condition|(
name|testData
operator|.
name|customResourceValues
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|assertCustomResourceValueInternal
argument_list|(
name|MetricsForCustomResource
operator|.
name|ALLOCATED
argument_list|,
name|CUSTOM_RES_1
argument_list|,
name|testData
operator|.
name|customResourceValues
operator|.
name|get
argument_list|(
name|CUSTOM_RES_1
argument_list|)
operator|*
name|testData
operator|.
name|containers
argument_list|,
name|res
operator|.
name|getResourceValue
argument_list|(
name|CUSTOM_RES_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertCustomResourceValueInternal
argument_list|(
name|MetricsForCustomResource
operator|.
name|ALLOCATED
argument_list|,
name|CUSTOM_RES_2
argument_list|,
name|testData
operator|.
name|customResourceValues
operator|.
name|get
argument_list|(
name|CUSTOM_RES_2
argument_list|)
operator|*
name|testData
operator|.
name|containers
argument_list|,
name|res
operator|.
name|getResourceValue
argument_list|(
name|CUSTOM_RES_2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertAllMetrics (QueueInfo queueInfo, ResourceMetricsChecker checker, Function<QueueMetrics, Resource> func, MetricsForCustomResource metricsType, Map<String, Long> expectedCustomResourceValues)
specifier|private
name|void
name|assertAllMetrics
parameter_list|(
name|QueueInfo
name|queueInfo
parameter_list|,
name|ResourceMetricsChecker
name|checker
parameter_list|,
name|Function
argument_list|<
name|QueueMetrics
argument_list|,
name|Resource
argument_list|>
name|func
parameter_list|,
name|MetricsForCustomResource
name|metricsType
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedCustomResourceValues
parameter_list|)
block|{
name|assertAllQueueMetrics
argument_list|(
name|queueInfo
argument_list|,
name|checker
argument_list|,
name|func
argument_list|,
name|metricsType
argument_list|,
name|expectedCustomResourceValues
argument_list|)
expr_stmt|;
comment|//assert leaf and root userSources
name|checker
operator|=
name|ResourceMetricsChecker
operator|.
name|createFromChecker
argument_list|(
name|checker
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|queueInfo
operator|.
name|userSource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
operator|.
name|createFromChecker
argument_list|(
name|checker
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|queueInfo
operator|.
name|getRoot
argument_list|()
operator|.
name|userSource
argument_list|)
expr_stmt|;
block|}
DECL|method|assertQueueMetricsOnly (QueueInfo queueInfo, ResourceMetricsChecker checker, Function<QueueMetrics, Resource> func, MetricsForCustomResource metricsType, Map<String, Long> expectedCustomResourceValues)
specifier|private
name|void
name|assertQueueMetricsOnly
parameter_list|(
name|QueueInfo
name|queueInfo
parameter_list|,
name|ResourceMetricsChecker
name|checker
parameter_list|,
name|Function
argument_list|<
name|QueueMetrics
argument_list|,
name|Resource
argument_list|>
name|func
parameter_list|,
name|MetricsForCustomResource
name|metricsType
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedCustomResourceValues
parameter_list|)
block|{
name|assertAllQueueMetrics
argument_list|(
name|queueInfo
argument_list|,
name|checker
argument_list|,
name|func
argument_list|,
name|metricsType
argument_list|,
name|expectedCustomResourceValues
argument_list|)
expr_stmt|;
block|}
DECL|method|assertAllQueueMetrics (QueueInfo queueInfo, ResourceMetricsChecker checker, Function<QueueMetrics, Resource> func, MetricsForCustomResource metricsType, Map<String, Long> expectedCustomResourceValues)
specifier|private
name|void
name|assertAllQueueMetrics
parameter_list|(
name|QueueInfo
name|queueInfo
parameter_list|,
name|ResourceMetricsChecker
name|checker
parameter_list|,
name|Function
argument_list|<
name|QueueMetrics
argument_list|,
name|Resource
argument_list|>
name|func
parameter_list|,
name|MetricsForCustomResource
name|metricsType
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|expectedCustomResourceValues
parameter_list|)
block|{
comment|// assert normal resource metrics values
name|queueInfo
operator|.
name|checkAllQueueSources
argument_list|(
name|qs
lambda|->
name|ResourceMetricsChecker
operator|.
name|createFromChecker
argument_list|(
name|checker
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|qs
argument_list|)
argument_list|)
expr_stmt|;
comment|// assert custom resource metrics values
name|queueInfo
operator|.
name|checkAllQueueMetrics
argument_list|(
name|qm
lambda|->
block|{
name|assertCustomResourceValue
argument_list|(
name|qm
argument_list|,
name|metricsType
argument_list|,
name|func
argument_list|,
name|CUSTOM_RES_1
argument_list|,
name|expectedCustomResourceValues
operator|.
name|get
argument_list|(
name|CUSTOM_RES_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertCustomResourceValue
argument_list|(
name|qm
argument_list|,
name|metricsType
argument_list|,
name|func
argument_list|,
name|CUSTOM_RES_2
argument_list|,
name|expectedCustomResourceValues
operator|.
name|get
argument_list|(
name|CUSTOM_RES_2
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|computeExpectedCustomResourceValues ( Map<String, Long> customResourceValues, BiFunction<String, Long, Long> func)
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|computeExpectedCustomResourceValues
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|customResourceValues
parameter_list|,
name|BiFunction
argument_list|<
name|String
argument_list|,
name|Long
argument_list|,
name|Long
argument_list|>
name|func
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|values
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|res
range|:
name|customResourceValues
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|values
operator|.
name|put
argument_list|(
name|res
operator|.
name|getKey
argument_list|()
argument_list|,
name|func
operator|.
name|apply
argument_list|(
name|res
operator|.
name|getKey
argument_list|()
argument_list|,
name|res
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
annotation|@
name|Test
DECL|method|testSetAvailableResourcesToQueue1 ()
specifier|public
name|void
name|testSetAvailableResourcesToQueue1
parameter_list|()
block|{
name|String
name|queueName
init|=
literal|"single"
decl_stmt|;
name|QueueMetrics
name|metrics
init|=
name|QueueMetrics
operator|.
name|forQueue
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|CONF
argument_list|)
decl_stmt|;
name|MetricsSource
name|queueSource
init|=
name|queueSource
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setAvailableResourcesToQueue
argument_list|(
name|newResource
argument_list|(
name|GB
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|5
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|6
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeLong
argument_list|(
name|AVAILABLE_MB
argument_list|,
name|GB
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|AVAILABLE_V_CORES
argument_list|,
literal|4
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|queueSource
argument_list|)
expr_stmt|;
name|assertCustomResourceValue
argument_list|(
name|metrics
argument_list|,
name|MetricsForCustomResource
operator|.
name|AVAILABLE
argument_list|,
name|QueueMetrics
operator|::
name|getAvailableResources
argument_list|,
name|CUSTOM_RES_1
argument_list|,
literal|5
operator|*
name|GB
argument_list|)
expr_stmt|;
name|assertCustomResourceValue
argument_list|(
name|metrics
argument_list|,
name|MetricsForCustomResource
operator|.
name|AVAILABLE
argument_list|,
name|QueueMetrics
operator|::
name|getAvailableResources
argument_list|,
name|CUSTOM_RES_2
argument_list|,
literal|6
operator|*
name|GB
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAvailableResourcesToQueue2 ()
specifier|public
name|void
name|testSetAvailableResourcesToQueue2
parameter_list|()
block|{
name|String
name|queueName
init|=
literal|"single"
decl_stmt|;
name|QueueMetrics
name|metrics
init|=
name|QueueMetrics
operator|.
name|forQueue
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|CONF
argument_list|)
decl_stmt|;
name|MetricsSource
name|queueSource
init|=
name|queueSource
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setAvailableResourcesToQueue
argument_list|(
literal|null
argument_list|,
name|newResource
argument_list|(
name|GB
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|CUSTOM_RES_1
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|15
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
name|CUSTOM_RES_2
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|20
operator|*
name|GB
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeLong
argument_list|(
name|AVAILABLE_MB
argument_list|,
name|GB
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|AVAILABLE_V_CORES
argument_list|,
literal|4
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|queueSource
argument_list|)
expr_stmt|;
name|assertCustomResourceValue
argument_list|(
name|metrics
argument_list|,
name|MetricsForCustomResource
operator|.
name|AVAILABLE
argument_list|,
name|QueueMetrics
operator|::
name|getAvailableResources
argument_list|,
name|CUSTOM_RES_1
argument_list|,
literal|15
operator|*
name|GB
argument_list|)
expr_stmt|;
name|assertCustomResourceValue
argument_list|(
name|metrics
argument_list|,
name|MetricsForCustomResource
operator|.
name|AVAILABLE
argument_list|,
name|QueueMetrics
operator|::
name|getAvailableResources
argument_list|,
name|CUSTOM_RES_2
argument_list|,
literal|20
operator|*
name|GB
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIncreasePendingResources ()
specifier|public
name|void
name|testIncreasePendingResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResourceToDecrease
argument_list|(
name|newResource
argument_list|(
name|GB
argument_list|,
literal|2
argument_list|,
name|getCustomResourcesWithValue
argument_list|(
literal|2
operator|*
name|GB
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testIncreasePendingResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDecreasePendingResources ()
specifier|public
name|void
name|testDecreasePendingResources
parameter_list|()
block|{
name|Resource
name|resourceToDecrease
init|=
name|newResource
argument_list|(
name|GB
argument_list|,
literal|2
argument_list|,
name|getCustomResourcesWithValue
argument_list|(
literal|2
operator|*
name|GB
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|containersToDecrease
init|=
literal|2
decl_stmt|;
name|int
name|containers
init|=
literal|5
decl_stmt|;
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
name|containers
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResourceToDecrease
argument_list|(
name|resourceToDecrease
argument_list|,
name|containers
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|//compute expected values
specifier|final
name|int
name|vCoresToDecrease
init|=
name|resourceToDecrease
operator|.
name|getVirtualCores
argument_list|()
decl_stmt|;
specifier|final
name|long
name|memoryMBToDecrease
init|=
name|resourceToDecrease
operator|.
name|getMemorySize
argument_list|()
decl_stmt|;
specifier|final
name|int
name|containersAfterDecrease
init|=
name|containers
operator|-
name|containersToDecrease
decl_stmt|;
specifier|final
name|int
name|vcoresAfterDecrease
init|=
operator|(
name|defaultResource
operator|.
name|getVirtualCores
argument_list|()
operator|*
name|containers
operator|)
operator|-
operator|(
name|vCoresToDecrease
operator|*
name|containersToDecrease
operator|)
decl_stmt|;
specifier|final
name|long
name|memoryAfterDecrease
init|=
operator|(
name|defaultResource
operator|.
name|getMemorySize
argument_list|()
operator|*
name|containers
operator|)
operator|-
operator|(
name|memoryMBToDecrease
operator|*
name|containersToDecrease
operator|)
decl_stmt|;
comment|//first, increase resources to be able to decrease some
name|testIncreasePendingResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
comment|//decrease resources
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|decrPendingResources
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|containersToDecrease
argument_list|,
name|ResourceTypesTestHelper
operator|.
name|newResource
argument_list|(
name|memoryMBToDecrease
argument_list|,
name|vCoresToDecrease
argument_list|,
name|extractCustomResourcesAsStrings
argument_list|(
name|resourceToDecrease
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//check
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeInt
argument_list|(
name|PENDING_CONTAINERS
argument_list|,
name|containersAfterDecrease
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|PENDING_MB
argument_list|,
name|memoryAfterDecrease
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_V_CORES
argument_list|,
name|vcoresAfterDecrease
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
decl_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getPendingResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|PENDING
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
operator|*
name|containers
operator|-
operator|(
name|resourceToDecrease
operator|.
name|getResourceValue
argument_list|(
name|k
argument_list|)
operator|*
name|containersToDecrease
operator|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocateResourcesWithoutDecreasePending ()
specifier|public
name|void
name|testAllocateResourcesWithoutDecreasePending
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testAllocateResources
argument_list|(
literal|false
argument_list|,
name|testData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocateResourcesWithDecreasePending ()
specifier|public
name|void
name|testAllocateResourcesWithDecreasePending
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResourceToDecrease
argument_list|(
name|newResource
argument_list|(
name|GB
argument_list|,
literal|2
argument_list|,
name|getCustomResourcesWithValue
argument_list|(
literal|2
operator|*
name|GB
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|//first, increase pending resources to be able to decrease some
name|testIncreasePendingResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
comment|//then allocate with decrease pending resources
name|testAllocateResources
argument_list|(
literal|true
argument_list|,
name|testData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocateResourcesWithoutContainer ()
specifier|public
name|void
name|testAllocateResourcesWithoutContainer
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createDefaultQueueMetricsTestData
argument_list|()
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|//first, increase pending resources
name|testIncreasePendingResourcesWithoutContainer
argument_list|(
name|testData
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
name|testData
operator|.
name|resource
decl_stmt|;
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|allocateResources
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|resource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeLong
argument_list|(
name|ALLOCATED_MB
argument_list|,
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|ALLOCATED_V_CORES
argument_list|,
name|resource
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_CONTAINERS
argument_list|,
literal|1
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|PENDING_MB
argument_list|,
literal|0
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|PENDING_V_CORES
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|checker
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
expr_stmt|;
name|checker
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|getRoot
argument_list|()
operator|.
name|queueSource
argument_list|)
expr_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getPendingResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|PENDING
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getAllocatedResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|ALLOCATED
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReleaseResources ()
specifier|public
name|void
name|testReleaseResources
parameter_list|()
block|{
name|int
name|containers
init|=
literal|5
decl_stmt|;
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
name|containers
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResourceToDecrease
argument_list|(
name|defaultResource
argument_list|,
name|containers
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|//first, allocate some resources so that we can release some
name|testAllocateResources
argument_list|(
literal|false
argument_list|,
name|testData
argument_list|)
expr_stmt|;
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|releaseResources
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|containers
argument_list|,
name|defaultResource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|counter
argument_list|(
name|AGGREGATE_CONTAINERS_ALLOCATED
argument_list|,
name|containers
argument_list|)
operator|.
name|counter
argument_list|(
name|AGGREGATE_CONTAINERS_RELEASED
argument_list|,
name|containers
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
decl_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getAllocatedResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|ALLOCATED
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatePreemptedSecondsForCustomResources ()
specifier|public
name|void
name|testUpdatePreemptedSecondsForCustomResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createFourLevelQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|int
name|seconds
init|=
literal|1
decl_stmt|;
name|testUpdatePreemptedSeconds
argument_list|(
name|testData
argument_list|,
name|seconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatePreemptedSecondsForCustomResourcesMoreSeconds ()
specifier|public
name|void
name|testUpdatePreemptedSecondsForCustomResourcesMoreSeconds
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createFourLevelQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|int
name|seconds
init|=
literal|15
decl_stmt|;
name|testUpdatePreemptedSeconds
argument_list|(
name|testData
argument_list|,
name|seconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReserveResources ()
specifier|public
name|void
name|testReserveResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testReserveResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUnreserveResources ()
specifier|public
name|void
name|testUnreserveResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testReserveResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
name|testData
operator|.
name|leafQueue
operator|.
name|queueMetrics
operator|.
name|unreserveResource
argument_list|(
name|testData
operator|.
name|partition
argument_list|,
name|testData
operator|.
name|user
argument_list|,
name|defaultResource
argument_list|)
expr_stmt|;
name|ResourceMetricsChecker
name|checker
init|=
name|ResourceMetricsChecker
operator|.
name|create
argument_list|()
operator|.
name|gaugeInt
argument_list|(
name|RESERVED_CONTAINERS
argument_list|,
literal|0
argument_list|)
operator|.
name|gaugeLong
argument_list|(
name|RESERVED_MB
argument_list|,
literal|0
argument_list|)
operator|.
name|gaugeInt
argument_list|(
name|RESERVED_V_CORES
argument_list|,
literal|0
argument_list|)
operator|.
name|checkAgainst
argument_list|(
name|testData
operator|.
name|leafQueue
operator|.
name|queueSource
argument_list|)
decl_stmt|;
name|assertAllMetrics
argument_list|(
name|testData
operator|.
name|leafQueue
argument_list|,
name|checker
argument_list|,
name|QueueMetrics
operator|::
name|getReservedResources
argument_list|,
name|MetricsForCustomResource
operator|.
name|RESERVED
argument_list|,
name|computeExpectedCustomResourceValues
argument_list|(
name|testData
operator|.
name|customResourceValues
argument_list|,
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAllocatedResourcesWithCustomResources ()
specifier|public
name|void
name|testGetAllocatedResourcesWithCustomResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|withResources
argument_list|(
name|defaultResource
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testGetAllocatedResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAllocatedResourcesWithoutCustomResources ()
specifier|public
name|void
name|testGetAllocatedResourcesWithoutCustomResources
parameter_list|()
block|{
name|QueueMetricsTestData
name|testData
init|=
name|createQueueMetricsTestDataWithContainers
argument_list|(
literal|5
argument_list|)
operator|.
name|withResources
argument_list|(
name|newResource
argument_list|(
literal|4
operator|*
name|GB
argument_list|,
literal|4
argument_list|,
name|Collections
operator|.
name|emptyMap
argument_list|()
argument_list|)
argument_list|)
operator|.
name|withLeafQueue
argument_list|(
name|createBasicQueueHierarchy
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|testGetAllocatedResources
argument_list|(
name|testData
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

