begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.converter
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
operator|.
name|PREFIX
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|DYNAMIC_MAX_ASSIGN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|MAX_CAPACITY_PERCENTAGE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|MAX_CHILD_CAPACITY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|QUEUE_AUTO_CREATE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|RESERVATION_SYSTEM
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|SPECIFIED_NOT_FIRST
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|USER_MAX_APPS_DEFAULT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|USER_MAX_RUNNING_APPS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|converter
operator|.
name|FSConfigToCSConfigRuleHandler
operator|.
name|RuleAction
operator|.
name|ABORT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairSchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|junit
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_comment
comment|/**  * Unit tests for FSConfigToCSConfigConverter.  *  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
DECL|class|TestFSConfigToCSConfigConverter
specifier|public
class|class
name|TestFSConfigToCSConfigConverter
block|{
DECL|field|CLUSTER_RESOURCE
specifier|private
specifier|static
specifier|final
name|Resource
name|CLUSTER_RESOURCE
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|16384
argument_list|,
literal|16
argument_list|)
decl_stmt|;
DECL|field|FILE_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|FILE_PREFIX
init|=
literal|"file:"
decl_stmt|;
DECL|field|FAIR_SCHEDULER_XML
specifier|private
specifier|static
specifier|final
name|String
name|FAIR_SCHEDULER_XML
init|=
name|prepareFileName
argument_list|(
literal|"fair-scheduler-conversion.xml"
argument_list|)
decl_stmt|;
annotation|@
name|Mock
DECL|field|ruleHandler
specifier|private
name|FSConfigToCSConfigRuleHandler
name|ruleHandler
decl_stmt|;
DECL|field|converter
specifier|private
name|FSConfigToCSConfigConverter
name|converter
decl_stmt|;
DECL|field|config
specifier|private
name|Configuration
name|config
decl_stmt|;
DECL|field|csConfigOut
specifier|private
name|ByteArrayOutputStream
name|csConfigOut
decl_stmt|;
annotation|@
name|Rule
DECL|field|expectedException
specifier|public
name|ExpectedException
name|expectedException
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
DECL|field|converterTestCommons
specifier|private
name|FSConfigConverterTestCommons
name|converterTestCommons
decl_stmt|;
DECL|method|prepareFileName (String f)
specifier|private
specifier|static
name|String
name|prepareFileName
parameter_list|(
name|String
name|f
parameter_list|)
block|{
return|return
name|FILE_PREFIX
operator|+
operator|new
name|File
argument_list|(
literal|"src/test/resources/"
operator|+
name|f
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
return|;
block|}
DECL|field|FAIR_SCHEDULER_XML_INVALID
specifier|private
specifier|static
specifier|final
name|String
name|FAIR_SCHEDULER_XML_INVALID
init|=
name|prepareFileName
argument_list|(
literal|"fair-scheduler-invalid.xml"
argument_list|)
decl_stmt|;
DECL|field|YARN_SITE_XML
specifier|private
specifier|static
specifier|final
name|String
name|YARN_SITE_XML
init|=
name|prepareFileName
argument_list|(
literal|"yarn-site-with-allocation-file-ref.xml"
argument_list|)
decl_stmt|;
DECL|field|YARN_SITE_XML_NO_REF_TO_FS_XML
specifier|private
specifier|static
specifier|final
name|String
name|YARN_SITE_XML_NO_REF_TO_FS_XML
init|=
name|prepareFileName
argument_list|(
literal|"yarn-site.xml"
argument_list|)
decl_stmt|;
DECL|field|YARN_SITE_XML_INVALID
specifier|private
specifier|static
specifier|final
name|String
name|YARN_SITE_XML_INVALID
init|=
name|prepareFileName
argument_list|(
literal|"yarn-site-with-invalid-allocation-file-ref.xml"
argument_list|)
decl_stmt|;
DECL|field|CONVERSION_RULES_FILE
specifier|private
specifier|static
specifier|final
name|String
name|CONVERSION_RULES_FILE
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/conversion-rules.properties"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|config
operator|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|FairSchedulerConfiguration
operator|.
name|ALLOCATION_FILE
argument_list|,
name|FAIR_SCHEDULER_XML
argument_list|)
expr_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|FairSchedulerConfiguration
operator|.
name|MIGRATION_MODE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|createConverter
argument_list|()
expr_stmt|;
name|converterTestCommons
operator|=
operator|new
name|FSConfigConverterTestCommons
argument_list|()
expr_stmt|;
name|converterTestCommons
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|converterTestCommons
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|createConverter ()
specifier|private
name|void
name|createConverter
parameter_list|()
block|{
name|converter
operator|=
operator|new
name|FSConfigToCSConfigConverter
argument_list|(
name|ruleHandler
argument_list|)
expr_stmt|;
name|converter
operator|.
name|setClusterResource
argument_list|(
name|CLUSTER_RESOURCE
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|yarnSiteOut
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|csConfigOut
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|converter
operator|.
name|setCapacitySchedulerConfigOutputStream
argument_list|(
name|csConfigOut
argument_list|)
expr_stmt|;
name|converter
operator|.
name|setYarnSiteOutputStream
argument_list|(
name|yarnSiteOut
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FSConfigToCSConfigConverterParams
operator|.
name|Builder
DECL|method|createDefaultParamsBuilder ()
name|createDefaultParamsBuilder
parameter_list|()
block|{
return|return
name|FSConfigToCSConfigConverterParams
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|withYarnSiteXmlConfig
argument_list|(
name|YARN_SITE_XML
argument_list|)
operator|.
name|withOutputDirectory
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|)
return|;
block|}
specifier|private
name|FSConfigToCSConfigConverterParams
operator|.
name|Builder
DECL|method|createParamsBuilder (String yarnSiteConfig)
name|createParamsBuilder
parameter_list|(
name|String
name|yarnSiteConfig
parameter_list|)
block|{
return|return
name|FSConfigToCSConfigConverterParams
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|withYarnSiteXmlConfig
argument_list|(
name|yarnSiteConfig
argument_list|)
operator|.
name|withOutputDirectory
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testDefaultMaxApplications ()
specifier|public
name|void
name|testDefaultMaxApplications
parameter_list|()
throws|throws
name|Exception
block|{
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConvertedCSConfig
argument_list|()
decl_stmt|;
name|int
name|maxApps
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_SYSTEM_APPLICATIONS
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Default max apps"
argument_list|,
literal|15
argument_list|,
name|maxApps
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultMaxAMShare ()
specifier|public
name|void
name|testDefaultMaxAMShare
parameter_list|()
throws|throws
name|Exception
block|{
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConvertedCSConfig
argument_list|()
decl_stmt|;
name|String
name|maxAmShare
init|=
name|conf
operator|.
name|get
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAXIMUM_APPLICATION_MASTERS_RESOURCE_PERCENT
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Default max AM share"
argument_list|,
literal|"0.16"
argument_list|,
name|maxAmShare
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertACLs ()
specifier|public
name|void
name|testConvertACLs
parameter_list|()
throws|throws
name|Exception
block|{
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConvertedCSConfig
argument_list|()
decl_stmt|;
comment|// root
name|assertEquals
argument_list|(
literal|"root submit ACL"
argument_list|,
literal|"alice,bob,joe,john hadoop_users"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.acl_submit_applications"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root admin ACL"
argument_list|,
literal|"alice,bob,joe,john hadoop_users"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.acl_administer_queue"
argument_list|)
argument_list|)
expr_stmt|;
comment|// root.admins.bob
name|assertEquals
argument_list|(
literal|"root.admins.bob submit ACL"
argument_list|,
literal|"bob "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.admins.bob.acl_submit_applications"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root.admins.bob admin ACL"
argument_list|,
literal|"bob "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.admins.bob.acl_administer_queue"
argument_list|)
argument_list|)
expr_stmt|;
comment|// root.admins.alice
name|assertEquals
argument_list|(
literal|"root.admins.alice submit ACL"
argument_list|,
literal|"alice "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.admins.alice.acl_submit_applications"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root.admins.alice admin ACL"
argument_list|,
literal|"alice "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.admins.alice.acl_administer_queue"
argument_list|)
argument_list|)
expr_stmt|;
comment|// root.users.john
name|assertEquals
argument_list|(
literal|"root.users.john submit ACL"
argument_list|,
literal|"john "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.users.john.acl_submit_applications"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root.users.john admin ACL"
argument_list|,
literal|"john "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.users.john.acl_administer_queue"
argument_list|)
argument_list|)
expr_stmt|;
comment|// root.users.joe
name|assertEquals
argument_list|(
literal|"root.users.joe submit ACL"
argument_list|,
literal|"joe "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.users.joe.acl_submit_applications"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"root.users.joe admin ACL"
argument_list|,
literal|"joe "
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|PREFIX
operator|+
literal|"root.users.joe.acl_administer_queue"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultMaxRunningApps ()
specifier|public
name|void
name|testDefaultMaxRunningApps
parameter_list|()
throws|throws
name|Exception
block|{
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConvertedCSConfig
argument_list|()
decl_stmt|;
comment|// default setting
name|assertEquals
argument_list|(
literal|"Default max apps"
argument_list|,
literal|15
argument_list|,
name|conf
operator|.
name|getInt
argument_list|(
name|PREFIX
operator|+
literal|"maximum-applications"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMixedQueueOrderingPolicy ()
specifier|public
name|void
name|testMixedQueueOrderingPolicy
parameter_list|()
throws|throws
name|Exception
block|{
name|expectedException
operator|.
name|expect
argument_list|(
name|ConversionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"DRF ordering policy cannot be used together with fifo/fair"
argument_list|)
expr_stmt|;
name|String
name|absolutePath
init|=
operator|new
name|File
argument_list|(
literal|"src/test/resources/fair-scheduler-orderingpolicy-mixed.xml"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|config
operator|.
name|set
argument_list|(
name|FairSchedulerConfiguration
operator|.
name|ALLOCATION_FILE
argument_list|,
name|FILE_PREFIX
operator|+
name|absolutePath
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQueueMaxChildCapacityNotSupported ()
specifier|public
name|void
name|testQueueMaxChildCapacityNotSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|expectedException
operator|.
name|expect
argument_list|(
name|UnsupportedPropertyException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
operator|new
name|UnsupportedPropertyException
argument_list|(
literal|"test"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|ruleHandler
argument_list|)
operator|.
name|handleMaxChildCapacity
argument_list|()
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReservationSystemNotSupported ()
specifier|public
name|void
name|testReservationSystemNotSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|expectedException
operator|.
name|expect
argument_list|(
name|UnsupportedPropertyException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"maxCapacity"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
operator|new
name|UnsupportedPropertyException
argument_list|(
literal|"maxCapacity"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|ruleHandler
argument_list|)
operator|.
name|handleMaxChildCapacity
argument_list|()
expr_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_RESERVATION_SYSTEM_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUserMaxAppsNotSupported ()
specifier|public
name|void
name|testUserMaxAppsNotSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|expectedException
operator|.
name|expect
argument_list|(
name|UnsupportedPropertyException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"userMaxApps"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
operator|new
name|UnsupportedPropertyException
argument_list|(
literal|"userMaxApps"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|ruleHandler
argument_list|)
operator|.
name|handleUserMaxApps
argument_list|()
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUserMaxAppsDefaultNotSupported ()
specifier|public
name|void
name|testUserMaxAppsDefaultNotSupported
parameter_list|()
throws|throws
name|Exception
block|{
name|expectedException
operator|.
name|expect
argument_list|(
name|UnsupportedPropertyException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"userMaxAppsDefault"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doThrow
argument_list|(
operator|new
name|UnsupportedPropertyException
argument_list|(
literal|"userMaxAppsDefault"
argument_list|)
argument_list|)
operator|.
name|when
argument_list|(
name|ruleHandler
argument_list|)
operator|.
name|handleUserMaxAppsDefault
argument_list|()
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationClusterResource ()
specifier|public
name|void
name|testConvertFSConfigurationClusterResource
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Resource"
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|240
argument_list|,
literal|20
argument_list|)
argument_list|,
name|converter
operator|.
name|getClusterResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigPctModeUsedAndClusterResourceDefined ()
specifier|public
name|void
name|testConvertFSConfigPctModeUsedAndClusterResourceDefined
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Resource"
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|240
argument_list|,
literal|20
argument_list|)
argument_list|,
name|converter
operator|.
name|getClusterResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigPctModeUsedAndClusterResourceNotDefined ()
specifier|public
name|void
name|testConvertFSConfigPctModeUsedAndClusterResourceNotDefined
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|ConversionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"cluster resource parameter"
operator|+
literal|" is not defined via CLI"
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationClusterResourceInvalid ()
specifier|public
name|void
name|testConvertFSConfigurationClusterResourceInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240G"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|ConversionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"Error while parsing resource"
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationClusterResourceInvalid2 ()
specifier|public
name|void
name|testConvertFSConfigurationClusterResourceInvalid2
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memmmm=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|ConversionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"Error while parsing resource"
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationRulesFile ()
specifier|public
name|void
name|testConvertFSConfigurationRulesFile
parameter_list|()
throws|throws
name|Exception
block|{
name|ruleHandler
operator|=
operator|new
name|FSConfigToCSConfigRuleHandler
argument_list|()
expr_stmt|;
name|createConverter
argument_list|()
expr_stmt|;
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withConversionRulesConfig
argument_list|(
name|CONVERSION_RULES_FILE
argument_list|)
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=2400"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown UnsupportedPropertyException!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedPropertyException
name|e
parameter_list|)
block|{
comment|//need to catch exception so we can check the rules
block|}
name|ruleHandler
operator|=
name|converter
operator|.
name|getRuleHandler
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|FSConfigToCSConfigRuleHandler
operator|.
name|RuleAction
argument_list|>
name|actions
init|=
name|ruleHandler
operator|.
name|getActions
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"maxCapacityPercentage"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|MAX_CAPACITY_PERCENTAGE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"maxChildCapacity"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|MAX_CHILD_CAPACITY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"userMaxRunningApps"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|USER_MAX_RUNNING_APPS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"userMaxAppsDefault"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|USER_MAX_APPS_DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dynamicMaxAssign"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|DYNAMIC_MAX_ASSIGN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"specifiedNotFirstRule"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|SPECIFIED_NOT_FIRST
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"reservationSystem"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|RESERVATION_SYSTEM
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"queueAutoCreate"
argument_list|,
name|ABORT
argument_list|,
name|actions
operator|.
name|get
argument_list|(
name|QUEUE_AUTO_CREATE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertFSConfigurationUndefinedYarnSiteConfig ()
specifier|public
name|void
name|testConvertFSConfigurationUndefinedYarnSiteConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|FSConfigToCSConfigConverterParams
operator|.
name|Builder
operator|.
name|create
argument_list|()
operator|.
name|withYarnSiteXmlConfig
argument_list|(
literal|null
argument_list|)
operator|.
name|withOutputDirectory
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|PreconditionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"yarn-site.xml configuration is not defined"
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConvertCheckOutputDir ()
specifier|public
name|void
name|testConvertCheckOutputDir
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConvertedCSConfig
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|)
decl_stmt|;
name|File
name|capacityFile
init|=
operator|new
name|File
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|,
literal|"capacity-scheduler.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Capacity file exists"
argument_list|,
name|capacityFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Capacity file length> 0"
argument_list|,
name|capacityFile
operator|.
name|length
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"No. of configuration elements> 0"
argument_list|,
name|conf
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|File
name|yarnSiteFile
init|=
operator|new
name|File
argument_list|(
name|FSConfigConverterTestCommons
operator|.
name|OUTPUT_DIR
argument_list|,
literal|"yarn-site.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Yarn site exists"
argument_list|,
name|yarnSiteFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Yarn site length> 0"
argument_list|,
name|yarnSiteFile
operator|.
name|length
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFairSchedulerXmlIsNotDefinedNeitherDirectlyNorInYarnSiteXml ()
specifier|public
name|void
name|testFairSchedulerXmlIsNotDefinedNeitherDirectlyNorInYarnSiteXml
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createParamsBuilder
argument_list|(
name|YARN_SITE_XML_NO_REF_TO_FS_XML
argument_list|)
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|PreconditionException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedException
operator|.
name|expectMessage
argument_list|(
literal|"fair-scheduler.xml is not defined"
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidFairSchedulerXml ()
specifier|public
name|void
name|testInvalidFairSchedulerXml
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createDefaultParamsBuilder
argument_list|()
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|withFairSchedulerXmlConfig
argument_list|(
name|FAIR_SCHEDULER_XML_INVALID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testInvalidYarnSiteXml ()
specifier|public
name|void
name|testInvalidYarnSiteXml
parameter_list|()
throws|throws
name|Exception
block|{
name|FSConfigToCSConfigConverterParams
name|params
init|=
name|createParamsBuilder
argument_list|(
name|YARN_SITE_XML_INVALID
argument_list|)
operator|.
name|withClusterResource
argument_list|(
literal|"vcores=20, memory-mb=240"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|expectedException
operator|.
name|expect
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
expr_stmt|;
name|converter
operator|.
name|convert
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
DECL|method|getConvertedCSConfig ()
specifier|private
name|Configuration
name|getConvertedCSConfig
parameter_list|()
block|{
name|ByteArrayInputStream
name|input
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|csConfigOut
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"CS config output has length of 0!"
argument_list|,
name|csConfigOut
operator|.
name|toByteArray
argument_list|()
operator|.
name|length
operator|>
literal|0
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|input
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
DECL|method|getConvertedCSConfig (String dir)
specifier|private
name|Configuration
name|getConvertedCSConfig
parameter_list|(
name|String
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|capacityFile
init|=
operator|new
name|File
argument_list|(
name|dir
argument_list|,
literal|"capacity-scheduler.xml"
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|input
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|FileUtils
operator|.
name|readFileToByteArray
argument_list|(
name|capacityFile
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|input
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

