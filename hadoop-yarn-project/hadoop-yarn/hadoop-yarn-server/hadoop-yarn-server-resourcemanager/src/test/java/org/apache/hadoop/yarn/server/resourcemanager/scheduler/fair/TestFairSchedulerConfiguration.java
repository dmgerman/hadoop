begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairSchedulerConfiguration
operator|.
name|parseResourceConfigValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|impl
operator|.
name|Log4JLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|LocalConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ResourceTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|LightWeightResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|utils
operator|.
name|BuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|UnitsConversionUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|DominantResourceCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|AppenderSkeleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|spi
operator|.
name|LoggingEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestFairSchedulerConfiguration
specifier|public
class|class
name|TestFairSchedulerConfiguration
block|{
DECL|field|A_CUSTOM_RESOURCE
specifier|private
specifier|static
specifier|final
name|String
name|A_CUSTOM_RESOURCE
init|=
literal|"a-custom-resource"
decl_stmt|;
DECL|class|CustomResourceTypesConfigurationProvider
specifier|private
specifier|static
class|class
name|CustomResourceTypesConfigurationProvider
extends|extends
name|LocalConfigurationProvider
block|{
annotation|@
name|Override
DECL|method|getConfigurationInputStream (Configuration bootstrapConf, String name)
specifier|public
name|InputStream
name|getConfigurationInputStream
parameter_list|(
name|Configuration
name|bootstrapConf
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
if|if
condition|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES_CONFIGURATION_FILE
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
operator|(
literal|"<configuration>\n"
operator|+
literal|"<property>\n"
operator|+
literal|"<name>yarn.resource-types</name>\n"
operator|+
literal|"<value>"
operator|+
name|A_CUSTOM_RESOURCE
operator|+
literal|"</value>\n"
operator|+
literal|"</property>\n"
operator|+
literal|"<property>\n"
operator|+
literal|"<name>yarn.resource-types.a-custom-resource.units</name>\n"
operator|+
literal|"<value>k</value>\n"
operator|+
literal|"</property>\n"
operator|+
literal|"</configuration>\n"
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|getConfigurationInputStream
argument_list|(
name|bootstrapConf
argument_list|,
name|name
argument_list|)
return|;
block|}
block|}
block|}
DECL|class|TestAppender
specifier|private
specifier|static
class|class
name|TestAppender
extends|extends
name|AppenderSkeleton
block|{
DECL|field|logEvents
specifier|private
specifier|final
name|List
argument_list|<
name|LoggingEvent
argument_list|>
name|logEvents
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|requiresLayout ()
specifier|public
name|boolean
name|requiresLayout
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{     }
annotation|@
name|Override
DECL|method|append (LoggingEvent arg0)
specifier|protected
name|void
name|append
parameter_list|(
name|LoggingEvent
name|arg0
parameter_list|)
block|{
name|logEvents
operator|.
name|add
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
DECL|method|getLogEvents ()
specifier|private
name|List
argument_list|<
name|LoggingEvent
argument_list|>
name|getLogEvents
parameter_list|()
block|{
return|return
name|logEvents
return|;
block|}
block|}
annotation|@
name|Test
DECL|method|testParseResourceConfigValue ()
specifier|public
name|void
name|testParseResourceConfigValue
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"2 vcores, 1024 mb"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"1024 mb, 2 vcores"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"2vcores,1024mb"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"1024mb,2vcores"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"1024   mb, 2    vcores"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"1024 Mb, 2 vCores"
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"  1024 mb, 2 vcores  "
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"  1024.3 mb, 2.35 vcores  "
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"  1024. mb, 2. vcores  "
argument_list|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|Resource
name|clusterResource
init|=
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|2048
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50% memory, 50% cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50% Memory, 50% CpU"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50%"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|4
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50% memory, 100% cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|4
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|" 100% cpu, 50% memory"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|0
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50% memory, 0% cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50 % memory, 50 % cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50%memory,50%cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"  50  %  memory,  50  %  cpu  "
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"50.% memory, 50.% cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
name|clusterResource
operator|=
name|BuilderUtils
operator|.
name|newResource
argument_list|(
literal|1024
operator|*
literal|10
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BuilderUtils
operator|.
name|newResource
argument_list|(
call|(
name|int
call|)
argument_list|(
literal|1024
operator|*
literal|10
operator|*
literal|0.109
argument_list|)
argument_list|,
literal|2
argument_list|)
argument_list|,
name|parseResourceConfigValue
argument_list|(
literal|"10.9% memory, 50.6% cpu"
argument_list|)
operator|.
name|getResource
argument_list|(
name|clusterResource
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testNoUnits ()
specifier|public
name|void
name|testNoUnits
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"1024"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testOnlyMemory ()
specifier|public
name|void
name|testOnlyMemory
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"1024mb"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testOnlyCPU ()
specifier|public
name|void
name|testOnlyCPU
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"1024vcores"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testGibberish ()
specifier|public
name|void
name|testGibberish
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"1o24vc0res"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testNoUnitsPercentage ()
specifier|public
name|void
name|testNoUnitsPercentage
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"95%, 50% memory"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testInvalidNumPercentage ()
specifier|public
name|void
name|testInvalidNumPercentage
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"95A% cpu, 50% memory"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testCpuPercentageMemoryAbsolute ()
specifier|public
name|void
name|testCpuPercentageMemoryAbsolute
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"50% cpu, 1024 mb"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AllocationConfigurationException
operator|.
name|class
argument_list|)
DECL|method|testMemoryPercentageCpuAbsolute ()
specifier|public
name|void
name|testMemoryPercentageCpuAbsolute
parameter_list|()
throws|throws
name|Exception
block|{
name|parseResourceConfigValue
argument_list|(
literal|"50% memory, 2 vcores"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocationIncrementMemoryDefaultUnit ()
specifier|public
name|void
name|testAllocationIncrementMemoryDefaultUnit
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"256"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|minimum
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Resource
name|maximum
init|=
name|Resources
operator|.
name|createResource
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|DominantResourceCalculator
name|resourceCalculator
init|=
operator|new
name|DominantResourceCalculator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|769L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1023L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1280L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1025L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocationIncrementMemoryNonDefaultUnit ()
specifier|public
name|void
name|testAllocationIncrementMemoryNonDefaultUnit
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"1 Gi"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|minimum
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Resource
name|maximum
init|=
name|Resources
operator|.
name|createResource
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|DominantResourceCalculator
name|resourceCalculator
init|=
operator|new
name|DominantResourceCalculator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1023L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048L
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|1025L
argument_list|)
argument_list|,
name|minimum
argument_list|,
name|maximum
argument_list|,
name|increment
argument_list|)
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testAllocationIncrementInvalidUnit ()
specifier|public
name|void
name|testAllocationIncrementInvalidUnit
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"1 Xi"
argument_list|)
expr_stmt|;
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
operator|.
name|getIncrementAllocation
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocationIncrementVCoreNoUnit ()
specifier|public
name|void
name|testAllocationIncrementVCoreNoUnit
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|min
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Resource
name|max
init|=
name|Resources
operator|.
name|createResource
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|DominantResourceCalculator
name|resourceCalculator
init|=
operator|new
name|DominantResourceCalculator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|9
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|10
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|11
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocationIncrementVCoreWithUnit ()
specifier|public
name|void
name|testAllocationIncrementVCoreWithUnit
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"1k"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|min
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Resource
name|max
init|=
name|Resources
operator|.
name|createResource
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|DominantResourceCalculator
name|resourceCalculator
init|=
operator|new
name|DominantResourceCalculator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|999
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2000
argument_list|,
name|resourceCalculator
operator|.
name|normalize
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|1001
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAllocationIncrementCustomResource ()
specifier|public
name|void
name|testAllocationIncrementCustomResource
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|initResourceTypes
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|".a-custom-resource"
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|DominantResourceCalculator
name|calculator
init|=
operator|new
name|DominantResourceCalculator
argument_list|()
decl_stmt|;
name|Resource
name|min
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Resource
name|max
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|,
name|Long
operator|.
name|MAX_VALUE
operator|/
name|UnitsConversionUtil
operator|.
name|convert
argument_list|(
literal|"k"
argument_list|,
literal|""
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|10000L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|9999L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|10000L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|10000L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|20000L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|10001L
argument_list|,
literal|""
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|10L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|9L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|10L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|10L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|customResourceInformation
argument_list|(
literal|20L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|calculator
operator|.
name|normalize
argument_list|(
name|customResource
argument_list|(
literal|11L
argument_list|,
literal|"k"
argument_list|)
argument_list|,
name|min
argument_list|,
name|max
argument_list|,
name|increment
argument_list|)
operator|.
name|getResourceInformation
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|ResourceUtils
operator|.
name|resetResourceTypes
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|customResource (long value, String units)
specifier|private
name|Resource
name|customResource
parameter_list|(
name|long
name|value
parameter_list|,
name|String
name|units
parameter_list|)
block|{
return|return
operator|new
name|LightWeightResource
argument_list|(
literal|0L
argument_list|,
literal|0
argument_list|,
operator|new
name|ResourceInformation
index|[]
block|{
literal|null
block|,
literal|null
block|,
name|customResourceInformation
argument_list|(
name|value
argument_list|,
name|units
argument_list|)
block|}
argument_list|)
return|;
block|}
DECL|method|customResourceInformation (long value, String units)
specifier|private
name|ResourceInformation
name|customResourceInformation
parameter_list|(
name|long
name|value
parameter_list|,
name|String
name|units
parameter_list|)
block|{
return|return
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|A_CUSTOM_RESOURCE
argument_list|,
name|units
argument_list|,
name|value
argument_list|,
name|ResourceTypes
operator|.
name|COUNTABLE
argument_list|,
literal|0L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
return|;
block|}
DECL|method|initResourceTypes ()
specifier|private
name|void
name|initResourceTypes
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CONFIGURATION_PROVIDER_CLASS
argument_list|,
name|CustomResourceTypesConfigurationProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ResourceUtils
operator|.
name|resetResourceTypes
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMemoryIncrementConfiguredViaMultipleProperties ()
specifier|public
name|void
name|testMemoryIncrementConfiguredViaMultipleProperties
parameter_list|()
block|{
name|TestAppender
name|testAppender
init|=
operator|new
name|TestAppender
argument_list|()
decl_stmt|;
name|Log4JLogger
name|logger
init|=
operator|(
name|Log4JLogger
operator|)
name|FairSchedulerConfiguration
operator|.
name|LOG
decl_stmt|;
name|logger
operator|.
name|getLogger
argument_list|()
operator|.
name|addAppender
argument_list|(
name|testAppender
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"yarn.scheduler.increment-allocation-mb"
argument_list|,
literal|"7"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|MEMORY_MB
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"13"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|increment
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Warning message is not logged when specifying memory "
operator|+
literal|"increment via multiple properties"
argument_list|,
name|testAppender
operator|.
name|getLogEvents
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getLevel
argument_list|()
operator|==
name|Level
operator|.
name|WARN
operator|&&
operator|(
literal|"Configuration "
operator|+
literal|"yarn.resource-types.memory-mb.increment-allocation=13 is "
operator|+
literal|"overriding the yarn.scheduler.increment-allocation-mb=7 "
operator|+
literal|"property"
operator|)
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|logger
operator|.
name|getLogger
argument_list|()
operator|.
name|removeAppender
argument_list|(
name|testAppender
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testCpuIncrementConfiguredViaMultipleProperties ()
specifier|public
name|void
name|testCpuIncrementConfiguredViaMultipleProperties
parameter_list|()
block|{
name|TestAppender
name|testAppender
init|=
operator|new
name|TestAppender
argument_list|()
decl_stmt|;
name|Log4JLogger
name|logger
init|=
operator|(
name|Log4JLogger
operator|)
name|FairSchedulerConfiguration
operator|.
name|LOG
decl_stmt|;
name|logger
operator|.
name|getLogger
argument_list|()
operator|.
name|addAppender
argument_list|(
name|testAppender
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"yarn.scheduler.increment-allocation-vcores"
argument_list|,
literal|"7"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
operator|+
literal|"."
operator|+
name|ResourceInformation
operator|.
name|VCORES
operator|.
name|getName
argument_list|()
operator|+
name|FairSchedulerConfiguration
operator|.
name|INCREMENT_ALLOCATION
argument_list|,
literal|"13"
argument_list|)
expr_stmt|;
name|FairSchedulerConfiguration
name|fsc
init|=
operator|new
name|FairSchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Resource
name|increment
init|=
name|fsc
operator|.
name|getIncrementAllocation
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|increment
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Warning message is not logged when specifying CPU vCores "
operator|+
literal|"increment via multiple properties"
argument_list|,
name|testAppender
operator|.
name|getLogEvents
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|e
lambda|->
name|e
operator|.
name|getLevel
argument_list|()
operator|==
name|Level
operator|.
name|WARN
operator|&&
operator|(
literal|"Configuration "
operator|+
literal|"yarn.resource-types.vcores.increment-allocation=13 is "
operator|+
literal|"overriding the yarn.scheduler.increment-allocation-vcores=7 "
operator|+
literal|"property"
operator|)
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|logger
operator|.
name|getLogger
argument_list|()
operator|.
name|removeAppender
argument_list|(
name|testAppender
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

