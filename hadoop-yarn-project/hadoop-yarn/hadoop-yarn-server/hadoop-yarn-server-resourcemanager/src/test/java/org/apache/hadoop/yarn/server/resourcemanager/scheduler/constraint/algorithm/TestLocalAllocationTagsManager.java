begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|constraint
operator|.
name|algorithm
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockNodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmnode
operator|.
name|RMNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|constraint
operator|.
name|AllocationTagsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|constraint
operator|.
name|InvalidAllocationTagsQueryException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests the LocalAllocationTagsManager.  */
end_comment

begin_class
DECL|class|TestLocalAllocationTagsManager
specifier|public
class|class
name|TestLocalAllocationTagsManager
block|{
DECL|field|rmContext
specifier|private
name|RMContext
name|rmContext
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|MockRM
name|rm
init|=
operator|new
name|MockRM
argument_list|()
decl_stmt|;
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNodes
operator|.
name|resetHostIds
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|RMNode
argument_list|>
name|rmNodes
init|=
name|MockNodes
operator|.
name|newNodes
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|4096
argument_list|,
literal|4
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|RMNode
name|rmNode
range|:
name|rmNodes
control|)
block|{
name|rm
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMNodes
argument_list|()
operator|.
name|putIfAbsent
argument_list|(
name|rmNode
operator|.
name|getNodeID
argument_list|()
argument_list|,
name|rmNode
argument_list|)
expr_stmt|;
block|}
name|rmContext
operator|=
name|rm
operator|.
name|getRMContext
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTempContainerAllocations ()
specifier|public
name|void
name|testTempContainerAllocations
parameter_list|()
throws|throws
name|InvalidAllocationTagsQueryException
block|{
comment|/**      * Construct both TEMP and normal containers: Node1: TEMP container_1_1      * (mapper/reducer/app_1) container_1_2 (service/app_1)      *      * Node2: container_1_3 (reducer/app_1) TEMP container_2_1 (service/app_2)      */
name|AllocationTagsManager
name|atm
init|=
operator|new
name|AllocationTagsManager
argument_list|(
name|rmContext
argument_list|)
decl_stmt|;
name|LocalAllocationTagsManager
name|ephAtm
init|=
operator|new
name|LocalAllocationTagsManager
argument_list|(
name|atm
argument_list|)
decl_stmt|;
comment|// 3 Containers from app1
name|ephAtm
operator|.
name|addTempTags
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"mapper"
argument_list|,
literal|"reducer"
argument_list|)
argument_list|)
expr_stmt|;
name|atm
operator|.
name|addContainer
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockContainerId
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|)
expr_stmt|;
name|atm
operator|.
name|addContainer
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host2:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockContainerId
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"reducer"
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 Container from app2
name|ephAtm
operator|.
name|addTempTags
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host2:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expect tag mappings to be present including temp Tags
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"mapper"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host2:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
comment|// Do a temp Tag cleanup on app2
name|ephAtm
operator|.
name|cleanTempContainers
argument_list|(
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host2:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expect app1 to be unaffected
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"mapper"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
comment|// Do a cleanup on app1 as well
name|ephAtm
operator|.
name|cleanTempContainers
argument_list|(
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"mapper"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
comment|// Non temp-tags should be unaffected
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host1:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|atm
operator|.
name|getNodeCardinalityByOp
argument_list|(
name|NodeId
operator|.
name|fromString
argument_list|(
literal|"host2:123"
argument_list|)
argument_list|,
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"service"
argument_list|)
argument_list|,
name|Long
operator|::
name|sum
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expect app2 with no containers, and app1 with 2 containers across 2 nodes
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|atm
operator|.
name|getPerAppNodeMappings
argument_list|()
operator|.
name|get
argument_list|(
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getTypeToTagsWithCount
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|atm
operator|.
name|getPerAppNodeMappings
argument_list|()
operator|.
name|get
argument_list|(
name|TestUtils
operator|.
name|getMockApplicationId
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

