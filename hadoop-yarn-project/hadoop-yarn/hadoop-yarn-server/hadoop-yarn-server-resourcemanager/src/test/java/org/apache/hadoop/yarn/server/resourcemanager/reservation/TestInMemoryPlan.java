begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*******************************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *   or more contributor license agreements.  See the NOTICE file  *   distributed with this work for additional information  *   regarding copyright ownership.  The ASF licenses this file  *   to you under the Apache License, Version 2.0 (the  *   "License"); you may not use this file except in compliance  *   with the License.  You may obtain a copy of the License at  *    *       http://www.apache.org/licenses/LICENSE-2.0  *    *   Unless required by applicable law or agreed to in writing, software  *   distributed under the License is distributed on an "AS IS" BASIS,  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *   See the License for the specific language governing permissions and  *   limitations under the License.  *******************************************************************************/
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.reservation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequestInterpreter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ReservationDefinitionPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ReservationRequestsPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
operator|.
name|exceptions
operator|.
name|PlanningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|QueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Clock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|DefaultResourceCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceCalculator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestInMemoryPlan
specifier|public
class|class
name|TestInMemoryPlan
block|{
DECL|field|user
specifier|private
name|String
name|user
init|=
literal|"yarn"
decl_stmt|;
DECL|field|planName
specifier|private
name|String
name|planName
init|=
literal|"test-reservation"
decl_stmt|;
DECL|field|resCalc
specifier|private
name|ResourceCalculator
name|resCalc
decl_stmt|;
DECL|field|minAlloc
specifier|private
name|Resource
name|minAlloc
decl_stmt|;
DECL|field|maxAlloc
specifier|private
name|Resource
name|maxAlloc
decl_stmt|;
DECL|field|totalCapacity
specifier|private
name|Resource
name|totalCapacity
decl_stmt|;
DECL|field|clock
specifier|private
name|Clock
name|clock
decl_stmt|;
DECL|field|queueMetrics
specifier|private
name|QueueMetrics
name|queueMetrics
decl_stmt|;
DECL|field|policy
specifier|private
name|SharingPolicy
name|policy
decl_stmt|;
DECL|field|agent
specifier|private
name|ReservationAgent
name|agent
decl_stmt|;
DECL|field|replanner
specifier|private
name|Planner
name|replanner
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|PlanningException
block|{
name|resCalc
operator|=
operator|new
name|DefaultResourceCalculator
argument_list|()
expr_stmt|;
name|minAlloc
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|maxAlloc
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|64
operator|*
literal|1024
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|totalCapacity
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|100
operator|*
literal|1024
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|clock
operator|=
name|mock
argument_list|(
name|Clock
operator|.
name|class
argument_list|)
expr_stmt|;
name|queueMetrics
operator|=
name|mock
argument_list|(
name|QueueMetrics
operator|.
name|class
argument_list|)
expr_stmt|;
name|policy
operator|=
name|mock
argument_list|(
name|SharingPolicy
operator|.
name|class
argument_list|)
expr_stmt|;
name|replanner
operator|=
name|mock
argument_list|(
name|Planner
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clock
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|resCalc
operator|=
literal|null
expr_stmt|;
name|minAlloc
operator|=
literal|null
expr_stmt|;
name|maxAlloc
operator|=
literal|null
expr_stmt|;
name|totalCapacity
operator|=
literal|null
expr_stmt|;
name|clock
operator|=
literal|null
expr_stmt|;
name|queueMetrics
operator|=
literal|null
expr_stmt|;
name|policy
operator|=
literal|null
expr_stmt|;
name|replanner
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddReservation ()
specifier|public
name|void
name|testAddReservation
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|int
index|[]
name|alloc
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAddEmptyReservation ()
specifier|public
name|void
name|testAddEmptyReservation
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|int
index|[]
name|alloc
init|=
block|{}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
operator|new
name|HashMap
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAddReservationAlreadyExists ()
specifier|public
name|void
name|testAddReservationAlreadyExists
parameter_list|()
block|{
comment|// First add a reservation
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|int
index|[]
name|alloc
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Try to add it again
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Add should fail as it already exists"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"already exists"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateReservation ()
specifier|public
name|void
name|testUpdateReservation
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
comment|// First add a reservation
name|int
index|[]
name|alloc
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Now update it
name|start
operator|=
literal|110
expr_stmt|;
name|int
index|[]
name|updatedAlloc
init|=
block|{
literal|0
block|,
literal|5
block|,
literal|10
block|,
literal|10
block|,
literal|5
block|,
literal|0
block|}
decl_stmt|;
name|allocations
operator|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|updatedAlloc
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|rDef
operator|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|updatedAlloc
operator|.
name|length
argument_list|,
name|updatedAlloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|updatedAllocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|rAllocation
operator|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|updatedAlloc
operator|.
name|length
argument_list|,
name|updatedAllocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|updateReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|updatedAlloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|updatedAlloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
name|updatedAlloc
index|[
name|i
index|]
operator|+
name|i
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|updatedAlloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
name|updatedAlloc
index|[
name|i
index|]
operator|+
name|i
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUpdateNonExistingReservation ()
specifier|public
name|void
name|testUpdateNonExistingReservation
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
comment|// Try to update a reservation without adding
name|int
index|[]
name|alloc
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|updateReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Update should fail as it does not exist in the plan"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"does not exist in the plan"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteReservation ()
specifier|public
name|void
name|testDeleteReservation
parameter_list|()
block|{
comment|// First add a reservation
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|int
index|[]
name|alloc
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|alloc
operator|.
name|length
argument_list|,
name|allocations
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID
argument_list|,
name|rDef
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc
operator|.
name|length
argument_list|,
name|allocs
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
operator|(
name|alloc
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Now delete it
try|try
block|{
name|plan
operator|.
name|deleteReservation
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testDeleteNonExistingReservation ()
specifier|public
name|void
name|testDeleteNonExistingReservation
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
comment|// Try to delete a reservation without adding
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|deleteReservation
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Delete should fail as it does not exist in the plan"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"does not exist in the plan"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testArchiveCompletedReservations ()
specifier|public
name|void
name|testArchiveCompletedReservations
parameter_list|()
block|{
name|Plan
name|plan
init|=
operator|new
name|InMemoryPlan
argument_list|(
name|queueMetrics
argument_list|,
name|policy
argument_list|,
name|agent
argument_list|,
name|totalCapacity
argument_list|,
literal|1L
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|,
name|maxAlloc
argument_list|,
name|planName
argument_list|,
name|replanner
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID1
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
comment|// First add a reservation
name|int
index|[]
name|alloc1
init|=
block|{
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
decl_stmt|;
name|int
name|start
init|=
literal|100
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations1
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef1
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc1
operator|.
name|length
argument_list|,
name|alloc1
operator|.
name|length
argument_list|,
name|allocations1
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs1
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations1
argument_list|)
decl_stmt|;
name|ReservationAllocation
name|rAllocation
init|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID1
argument_list|,
name|rDef1
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc1
operator|.
name|length
argument_list|,
name|allocs1
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID1
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|doAssertions
argument_list|(
name|plan
argument_list|,
name|rAllocation
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc1
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Now add another one
name|ReservationId
name|reservationID2
init|=
name|ReservationSystemTestUtil
operator|.
name|getNewReservationId
argument_list|()
decl_stmt|;
name|int
index|[]
name|alloc2
init|=
block|{
literal|0
block|,
literal|5
block|,
literal|10
block|,
literal|5
block|,
literal|0
block|}
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|allocations2
init|=
name|generateAllocation
argument_list|(
name|start
argument_list|,
name|alloc2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef2
init|=
name|createSimpleReservationDefinition
argument_list|(
name|start
argument_list|,
name|start
operator|+
name|alloc2
operator|.
name|length
argument_list|,
name|alloc2
operator|.
name|length
argument_list|,
name|allocations2
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|Resource
argument_list|>
name|allocs2
init|=
name|ReservationSystemUtil
operator|.
name|toResources
argument_list|(
name|allocations2
argument_list|)
decl_stmt|;
name|rAllocation
operator|=
operator|new
name|InMemoryReservationAllocation
argument_list|(
name|reservationID2
argument_list|,
name|rDef2
argument_list|,
name|user
argument_list|,
name|planName
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|alloc2
operator|.
name|length
argument_list|,
name|allocs2
argument_list|,
name|resCalc
argument_list|,
name|minAlloc
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID2
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|plan
operator|.
name|addReservation
argument_list|(
name|rAllocation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc2
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|+
name|alloc2
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
name|alloc1
index|[
name|i
index|]
operator|+
name|alloc2
index|[
name|i
index|]
operator|+
name|i
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|+
name|alloc2
index|[
name|i
index|]
operator|+
name|i
operator|)
argument_list|,
name|alloc1
index|[
name|i
index|]
operator|+
name|alloc2
index|[
name|i
index|]
operator|+
name|i
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Now archive completed reservations
name|when
argument_list|(
name|clock
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|106L
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|policy
operator|.
name|getValidWindow
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
try|try
block|{
comment|// will only remove 2nd reservation as only that has fallen out of the
comment|// archival window
name|plan
operator|.
name|archiveCompletedReservations
argument_list|(
name|clock
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc1
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
operator|*
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|alloc1
index|[
name|i
index|]
operator|)
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|when
argument_list|(
name|clock
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|107L
argument_list|)
expr_stmt|;
try|try
block|{
comment|// will remove 1st reservation also as it has fallen out of the archival
comment|// window
name|plan
operator|.
name|archiveCompletedReservations
argument_list|(
name|clock
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PlanningException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID1
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc1
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|plan
operator|.
name|getTotalCommittedResources
argument_list|(
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|plan
operator|.
name|getConsumptionForUser
argument_list|(
name|user
argument_list|,
name|start
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|doAssertions (Plan plan, ReservationAllocation rAllocation)
specifier|private
name|void
name|doAssertions
parameter_list|(
name|Plan
name|plan
parameter_list|,
name|ReservationAllocation
name|rAllocation
parameter_list|)
block|{
name|ReservationId
name|reservationID
init|=
name|rAllocation
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|rAllocation
argument_list|,
name|plan
operator|.
name|getReservationById
argument_list|(
name|reservationID
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
operator|(
operator|(
name|InMemoryPlan
operator|)
name|plan
operator|)
operator|.
name|getAllReservations
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|rAllocation
operator|.
name|getEndTime
argument_list|()
argument_list|,
name|plan
operator|.
name|getLastEndTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|totalCapacity
argument_list|,
name|plan
operator|.
name|getTotalCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|minAlloc
argument_list|,
name|plan
operator|.
name|getMinimumAllocation
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|maxAlloc
argument_list|,
name|plan
operator|.
name|getMaximumAllocation
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|resCalc
argument_list|,
name|plan
operator|.
name|getResourceCalculator
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|planName
argument_list|,
name|plan
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|plan
operator|.
name|getMoveOnExpiry
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createSimpleReservationDefinition (long arrival, long deadline, long duration, Collection<ReservationRequest> resources)
specifier|private
name|ReservationDefinition
name|createSimpleReservationDefinition
parameter_list|(
name|long
name|arrival
parameter_list|,
name|long
name|deadline
parameter_list|,
name|long
name|duration
parameter_list|,
name|Collection
argument_list|<
name|ReservationRequest
argument_list|>
name|resources
parameter_list|)
block|{
comment|// create a request with a single atomic ask
name|ReservationDefinition
name|rDef
init|=
operator|new
name|ReservationDefinitionPBImpl
argument_list|()
decl_stmt|;
name|ReservationRequests
name|reqs
init|=
operator|new
name|ReservationRequestsPBImpl
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|setReservationResources
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|(
name|resources
argument_list|)
argument_list|)
expr_stmt|;
name|reqs
operator|.
name|setInterpreter
argument_list|(
name|ReservationRequestInterpreter
operator|.
name|R_ALL
argument_list|)
expr_stmt|;
name|rDef
operator|.
name|setReservationRequests
argument_list|(
name|reqs
argument_list|)
expr_stmt|;
name|rDef
operator|.
name|setArrival
argument_list|(
name|arrival
argument_list|)
expr_stmt|;
name|rDef
operator|.
name|setDeadline
argument_list|(
name|deadline
argument_list|)
expr_stmt|;
return|return
name|rDef
return|;
block|}
DECL|method|generateAllocation ( int startTime, int[] alloc, boolean isStep)
specifier|private
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|generateAllocation
parameter_list|(
name|int
name|startTime
parameter_list|,
name|int
index|[]
name|alloc
parameter_list|,
name|boolean
name|isStep
parameter_list|)
block|{
name|Map
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
name|req
init|=
operator|new
name|HashMap
argument_list|<
name|ReservationInterval
argument_list|,
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|numContainers
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|alloc
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|isStep
condition|)
block|{
name|numContainers
operator|=
name|alloc
index|[
name|i
index|]
operator|+
name|i
expr_stmt|;
block|}
else|else
block|{
name|numContainers
operator|=
name|alloc
index|[
name|i
index|]
expr_stmt|;
block|}
name|ReservationRequest
name|rr
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|(
name|numContainers
operator|)
argument_list|)
decl_stmt|;
name|req
operator|.
name|put
argument_list|(
operator|new
name|ReservationInterval
argument_list|(
name|startTime
operator|+
name|i
argument_list|,
name|startTime
operator|+
name|i
operator|+
literal|1
argument_list|)
argument_list|,
name|rr
argument_list|)
expr_stmt|;
block|}
return|return
name|req
return|;
block|}
block|}
end_class

end_unit

