begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|JettyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockAM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockNM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmcontainer
operator|.
name|RMContainerEventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|TestRMWebServicesSchedulerActivities
specifier|public
class|class
name|TestRMWebServicesSchedulerActivities
extends|extends
name|TestRMWebServicesCapacitySched
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestRMWebServicesSchedulerActivities
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testAssignMultipleContainersPerNodeHeartbeat ()
specifier|public
name|void
name|testAssignMultipleContainersPerNodeHeartbeat
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|24
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"127.0.0.1"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"/default-rack"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.1:1234"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|JSONArray
name|allocations
init|=
name|json
operator|.
name|getJSONArray
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|allocations
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|!=
name|allocations
operator|.
name|length
argument_list|()
operator|-
literal|1
condition|)
block|{
name|verifyStateOfAllocations
argument_list|(
name|allocations
operator|.
name|getJSONObject
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"finalAllocationState"
argument_list|,
literal|"ALLOCATED"
argument_list|)
expr_stmt|;
name|verifyQueueOrder
argument_list|(
name|allocations
operator|.
name|getJSONObject
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"root-a-b-b2-b3-b1"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAssignWithoutAvailableResource ()
specifier|public
name|void
name|testAssignWithoutAvailableResource
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|1
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"127.0.0.1"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"/default-rack"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testNoNM ()
specifier|public
name|void
name|testNoNM
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.1:1234"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testWrongNodeId ()
specifier|public
name|void
name|testWrongNodeId
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|24
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"127.0.0.1"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"/default-rack"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.0"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testReserveNewContainer ()
specifier|public
name|void
name|testReserveNewContainer
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm1
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|4
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|MockNM
name|nm2
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.2:1234"
argument_list|,
literal|4
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm1
operator|.
name|registerNode
argument_list|()
expr_stmt|;
name|nm2
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm1
argument_list|)
decl_stmt|;
name|RMApp
name|app2
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app2"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b2"
argument_list|)
decl_stmt|;
name|MockAM
name|am2
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app2
argument_list|,
name|rm
argument_list|,
name|nm2
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Reserve new container
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.2"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verifyQueueOrder
argument_list|(
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
argument_list|,
literal|"root-a-b-b3-b1"
argument_list|)
expr_stmt|;
name|JSONObject
name|allocations
init|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
name|verifyStateOfAllocations
argument_list|(
name|allocations
argument_list|,
literal|"finalAllocationState"
argument_list|,
literal|"RESERVED"
argument_list|)
expr_stmt|;
comment|// Do a node heartbeat again without releasing container from app2
name|r
operator|=
name|resource
argument_list|()
expr_stmt|;
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.2"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verifyQueueOrder
argument_list|(
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
argument_list|,
literal|"b1"
argument_list|)
expr_stmt|;
name|allocations
operator|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
expr_stmt|;
name|verifyStateOfAllocations
argument_list|(
name|allocations
argument_list|,
literal|"finalAllocationState"
argument_list|,
literal|"SKIPPED"
argument_list|)
expr_stmt|;
comment|// Finish application 2
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|am2
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|cs
operator|.
name|completedContainer
argument_list|(
name|cs
operator|.
name|getRMContainer
argument_list|(
name|containerId
argument_list|)
argument_list|,
name|ContainerStatus
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|)
argument_list|,
name|RMContainerEventType
operator|.
name|FINISHED
argument_list|)
expr_stmt|;
comment|// Do a node heartbeat again
name|r
operator|=
name|resource
argument_list|()
expr_stmt|;
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.2"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|verifyQueueOrder
argument_list|(
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
argument_list|,
literal|"b1"
argument_list|)
expr_stmt|;
name|allocations
operator|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
expr_stmt|;
name|verifyStateOfAllocations
argument_list|(
name|allocations
argument_list|,
literal|"finalAllocationState"
argument_list|,
literal|"ALLOCATED_FROM_RESERVED"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testActivityJSON ()
specifier|public
name|void
name|testActivityJSON
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|24
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"nodeId"
argument_list|,
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|JSONObject
name|allocations
init|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
name|verifyStateOfAllocations
argument_list|(
name|allocations
argument_list|,
literal|"finalAllocationState"
argument_list|,
literal|"ALLOCATED"
argument_list|)
expr_stmt|;
name|verifyNumberOfNodes
argument_list|(
name|allocations
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|verifyQueueOrder
argument_list|(
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
argument_list|,
literal|"root-b-b1"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|verifyNumberOfNodes (JSONObject allocation, int realValue)
specifier|private
name|void
name|verifyNumberOfNodes
parameter_list|(
name|JSONObject
name|allocation
parameter_list|,
name|int
name|realValue
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|allocation
operator|.
name|isNull
argument_list|(
literal|"root"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"State of allocation is wrong"
argument_list|,
literal|0
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"State of allocation is wrong"
argument_list|,
literal|1
operator|+
name|getNumberOfNodes
argument_list|(
name|allocation
operator|.
name|getJSONObject
argument_list|(
literal|"root"
argument_list|)
argument_list|)
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getNumberOfNodes (JSONObject allocation)
specifier|private
name|int
name|getNumberOfNodes
parameter_list|(
name|JSONObject
name|allocation
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|allocation
operator|.
name|isNull
argument_list|(
literal|"children"
argument_list|)
condition|)
block|{
name|Object
name|object
init|=
name|allocation
operator|.
name|get
argument_list|(
literal|"children"
argument_list|)
decl_stmt|;
if|if
condition|(
name|object
operator|.
name|getClass
argument_list|()
operator|==
name|JSONObject
operator|.
name|class
condition|)
block|{
return|return
literal|1
operator|+
name|getNumberOfNodes
argument_list|(
operator|(
name|JSONObject
operator|)
name|object
argument_list|)
return|;
block|}
else|else
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
operator|(
name|JSONArray
operator|)
name|object
operator|)
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|count
operator|+=
operator|(
literal|1
operator|+
name|getNumberOfNodes
argument_list|(
operator|(
operator|(
name|JSONArray
operator|)
name|object
operator|)
operator|.
name|getJSONObject
argument_list|(
name|i
argument_list|)
argument_list|)
operator|)
expr_stmt|;
block|}
return|return
name|count
return|;
block|}
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
DECL|method|verifyStateOfAllocations (JSONObject allocation, String nameToCheck, String realState)
specifier|private
name|void
name|verifyStateOfAllocations
parameter_list|(
name|JSONObject
name|allocation
parameter_list|,
name|String
name|nameToCheck
parameter_list|,
name|String
name|realState
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"State of allocation is wrong"
argument_list|,
name|allocation
operator|.
name|get
argument_list|(
name|nameToCheck
argument_list|)
argument_list|,
name|realState
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyNumberOfAllocations (JSONObject json, int realValue)
specifier|private
name|void
name|verifyNumberOfAllocations
parameter_list|(
name|JSONObject
name|json
parameter_list|,
name|int
name|realValue
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|json
operator|.
name|isNull
argument_list|(
literal|"allocations"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocations is wrong"
argument_list|,
literal|0
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Object
name|object
init|=
name|json
operator|.
name|get
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
if|if
condition|(
name|object
operator|.
name|getClass
argument_list|()
operator|==
name|JSONObject
operator|.
name|class
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocations is wrong"
argument_list|,
literal|1
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|object
operator|.
name|getClass
argument_list|()
operator|==
name|JSONArray
operator|.
name|class
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocations is wrong in: "
operator|+
name|object
argument_list|,
operator|(
operator|(
name|JSONArray
operator|)
name|object
operator|)
operator|.
name|length
argument_list|()
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|verifyQueueOrder (JSONObject json, String realOrder)
specifier|private
name|void
name|verifyQueueOrder
parameter_list|(
name|JSONObject
name|json
parameter_list|,
name|String
name|realOrder
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|order
init|=
literal|""
decl_stmt|;
if|if
condition|(
operator|!
name|json
operator|.
name|isNull
argument_list|(
literal|"root"
argument_list|)
condition|)
block|{
name|JSONObject
name|root
init|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"root"
argument_list|)
decl_stmt|;
name|order
operator|=
name|root
operator|.
name|getString
argument_list|(
literal|"name"
argument_list|)
operator|+
literal|"-"
operator|+
name|getQueueOrder
argument_list|(
name|root
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"Order of queue is wrong"
argument_list|,
name|order
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|order
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|realOrder
argument_list|)
expr_stmt|;
block|}
DECL|method|getQueueOrder (JSONObject node)
specifier|private
name|String
name|getQueueOrder
parameter_list|(
name|JSONObject
name|node
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|node
operator|.
name|isNull
argument_list|(
literal|"children"
argument_list|)
condition|)
block|{
name|Object
name|children
init|=
name|node
operator|.
name|get
argument_list|(
literal|"children"
argument_list|)
decl_stmt|;
if|if
condition|(
name|children
operator|.
name|getClass
argument_list|()
operator|==
name|JSONObject
operator|.
name|class
condition|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|JSONObject
operator|)
name|children
operator|)
operator|.
name|isNull
argument_list|(
literal|"appPriority"
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
return|return
operator|(
operator|(
name|JSONObject
operator|)
name|children
operator|)
operator|.
name|getString
argument_list|(
literal|"name"
argument_list|)
operator|+
literal|"-"
operator|+
name|getQueueOrder
argument_list|(
operator|(
name|JSONObject
operator|)
name|children
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|children
operator|.
name|getClass
argument_list|()
operator|==
name|JSONArray
operator|.
name|class
condition|)
block|{
name|String
name|order
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
operator|(
name|JSONArray
operator|)
name|children
operator|)
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|JSONObject
name|child
init|=
call|(
name|JSONObject
call|)
argument_list|(
operator|(
name|JSONArray
operator|)
name|children
argument_list|)
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|child
operator|.
name|isNull
argument_list|(
literal|"appPriority"
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
name|order
operator|+=
operator|(
name|child
operator|.
name|getString
argument_list|(
literal|"name"
argument_list|)
operator|+
literal|"-"
operator|+
name|getQueueOrder
argument_list|(
name|child
argument_list|)
operator|)
expr_stmt|;
block|}
return|return
name|order
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
DECL|method|verifyNumberOfAllocationAttempts (JSONObject allocation, int realValue)
specifier|private
name|void
name|verifyNumberOfAllocationAttempts
parameter_list|(
name|JSONObject
name|allocation
parameter_list|,
name|int
name|realValue
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|allocation
operator|.
name|isNull
argument_list|(
literal|"allocationAttempt"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocation attempts is wrong"
argument_list|,
literal|0
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Object
name|object
init|=
name|allocation
operator|.
name|get
argument_list|(
literal|"allocationAttempt"
argument_list|)
decl_stmt|;
if|if
condition|(
name|object
operator|.
name|getClass
argument_list|()
operator|==
name|JSONObject
operator|.
name|class
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocations attempts is wrong"
argument_list|,
literal|1
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|object
operator|.
name|getClass
argument_list|()
operator|==
name|JSONArray
operator|.
name|class
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Number of allocations attempts is wrong"
argument_list|,
operator|(
operator|(
name|JSONArray
operator|)
name|object
operator|)
operator|.
name|length
argument_list|()
argument_list|,
name|realValue
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testAppActivityJSON ()
specifier|public
name|void
name|testAppActivityJSON
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|24
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|JSONObject
name|allocations
init|=
name|json
operator|.
name|getJSONObject
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
name|verifyStateOfAllocations
argument_list|(
name|allocations
argument_list|,
literal|"allocationState"
argument_list|,
literal|"ACCEPTED"
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocationAttempts
argument_list|(
name|allocations
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAppAssignMultipleContainersPerNodeHeartbeat ()
specifier|public
name|void
name|testAppAssignMultipleContainersPerNodeHeartbeat
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|24
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"127.0.0.1"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"/default-rack"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|JSONArray
name|allocations
init|=
name|json
operator|.
name|getJSONArray
argument_list|(
literal|"allocations"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|allocations
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|verifyStateOfAllocations
argument_list|(
name|allocations
operator|.
name|getJSONObject
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"allocationState"
argument_list|,
literal|"ACCEPTED"
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAppAssignWithoutAvailableResource ()
specifier|public
name|void
name|testAppAssignWithoutAvailableResource
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|1
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"127.0.0.1"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"/default-rack"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|,
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|1024
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAppNoNM ()
specifier|public
name|void
name|testAppNoNM
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
comment|//Get JSON
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//Get JSON
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAppReserveNewContainer ()
specifier|public
name|void
name|testAppReserveNewContainer
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Start RM so that it accepts app submissions
name|rm
operator|.
name|start
argument_list|()
expr_stmt|;
name|MockNM
name|nm1
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|4
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|MockNM
name|nm2
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.2:1234"
argument_list|,
literal|4
operator|*
literal|1024
argument_list|,
name|rm
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|nm1
operator|.
name|registerNode
argument_list|()
expr_stmt|;
name|nm2
operator|.
name|registerNode
argument_list|()
expr_stmt|;
try|try
block|{
name|RMApp
name|app1
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app1"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b1"
argument_list|)
decl_stmt|;
name|MockAM
name|am1
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app1
argument_list|,
name|rm
argument_list|,
name|nm1
argument_list|)
decl_stmt|;
name|RMApp
name|app2
init|=
name|rm
operator|.
name|submitApp
argument_list|(
literal|10
argument_list|,
literal|"app2"
argument_list|,
literal|"user1"
argument_list|,
literal|null
argument_list|,
literal|"b2"
argument_list|)
decl_stmt|;
name|MockAM
name|am2
init|=
name|MockRM
operator|.
name|launchAndRegisterAM
argument_list|(
name|app2
argument_list|,
name|rm
argument_list|,
name|nm2
argument_list|)
decl_stmt|;
name|am1
operator|.
name|allocate
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|ResourceRequest
operator|.
name|newInstance
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|"*"
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|)
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Reserve new container
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|json
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Do a node heartbeat again without releasing container from app2
name|r
operator|=
name|resource
argument_list|()
expr_stmt|;
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Finish application 2
name|CapacityScheduler
name|cs
init|=
operator|(
name|CapacityScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|am2
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|cs
operator|.
name|completedContainer
argument_list|(
name|cs
operator|.
name|getRMContainer
argument_list|(
name|containerId
argument_list|)
argument_list|,
name|ContainerStatus
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|)
argument_list|,
name|RMContainerEventType
operator|.
name|FINISHED
argument_list|)
expr_stmt|;
comment|// Do a node heartbeat again
name|r
operator|=
name|resource
argument_list|()
expr_stmt|;
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"appId"
argument_list|,
name|app1
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"scheduler/app-activities"
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|verifyNumberOfAllocations
argument_list|(
name|json
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|rm
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

