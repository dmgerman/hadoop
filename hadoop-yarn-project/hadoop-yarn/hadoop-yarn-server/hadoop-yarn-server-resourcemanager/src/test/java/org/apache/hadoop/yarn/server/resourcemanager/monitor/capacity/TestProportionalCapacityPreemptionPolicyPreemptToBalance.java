begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|monitor
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmcontainer
operator|.
name|RMContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|argThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_class
DECL|class|TestProportionalCapacityPreemptionPolicyPreemptToBalance
specifier|public
class|class
name|TestProportionalCapacityPreemptionPolicyPreemptToBalance
extends|extends
name|ProportionalCapacityPreemptionPolicyMockFramework
block|{
annotation|@
name|Test
DECL|method|testPreemptionToBalanceDisabled ()
specifier|public
name|void
name|testPreemptionToBalanceDisabled
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|labelsConfig
init|=
literal|"=100,true"
decl_stmt|;
comment|// default partition
name|String
name|nodesConfig
init|=
literal|"n1="
decl_stmt|;
comment|// only one node
name|String
name|queuesConfig
init|=
comment|// guaranteed,max,used,pending
literal|"root(=[100 100 100 100]);"
operator|+
comment|//root
literal|"-a(=[30 100 10 30]);"
operator|+
comment|// a
literal|"-b(=[30 100 40 30]);"
operator|+
comment|// b
literal|"-c(=[30 100 50 30]);"
operator|+
comment|// c
literal|"-d(=[10 100 0 0])"
decl_stmt|;
comment|// d
name|String
name|appsConfig
init|=
comment|//queueName\t(priority,resource,host,expression,#repeat,reserved)
literal|"a\t(1,1,n1,,10,false);"
operator|+
comment|// app1 in a
literal|"b\t(1,1,n1,,40,false);"
operator|+
comment|// app2 in b
literal|"c\t(1,1,n1,,50,false)"
decl_stmt|;
comment|// app3 in c
name|buildEnv
argument_list|(
name|labelsConfig
argument_list|,
name|nodesConfig
argument_list|,
name|queuesConfig
argument_list|,
name|appsConfig
argument_list|)
expr_stmt|;
name|policy
operator|.
name|editSchedule
argument_list|()
expr_stmt|;
comment|// I_A: A:30 B:35 C:35, preempt 5 from B and 15 from C to A
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|5
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|15
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|35
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|35
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreemptionToBalanceEnabled ()
specifier|public
name|void
name|testPreemptionToBalanceEnabled
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|labelsConfig
init|=
literal|"=100,true"
decl_stmt|;
comment|// default partition
name|String
name|nodesConfig
init|=
literal|"n1="
decl_stmt|;
comment|// only one node
name|String
name|queuesConfig
init|=
comment|// guaranteed,max,used,pending
literal|"root(=[100 100 100 100]);"
operator|+
comment|//root
literal|"-a(=[30 100 10 30]);"
operator|+
comment|// a
literal|"-b(=[30 100 40 30]);"
operator|+
comment|// b
literal|"-c(=[30 100 50 30]);"
operator|+
comment|// c
literal|"-d(=[10 100 0 0])"
decl_stmt|;
comment|// d
name|String
name|appsConfig
init|=
comment|//queueName\t(priority,resource,host,expression,#repeat,reserved)
literal|"a\t(1,1,n1,,10,false);"
operator|+
comment|// app1 in a
literal|"b\t(1,1,n1,,40,false);"
operator|+
comment|// app2 in b
literal|"c\t(1,1,n1,,50,false)"
decl_stmt|;
comment|// app3 in c
comment|// enable preempt to balance and ideal assignment will change.
name|boolean
name|isPreemptionToBalanceEnabled
init|=
literal|true
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|PREEMPTION_TO_BALANCE_QUEUES_BEYOND_GUARANTEED
argument_list|,
name|isPreemptionToBalanceEnabled
argument_list|)
expr_stmt|;
name|buildEnv
argument_list|(
name|labelsConfig
argument_list|,
name|nodesConfig
argument_list|,
name|queuesConfig
argument_list|,
name|appsConfig
argument_list|)
expr_stmt|;
name|policy
operator|.
name|editSchedule
argument_list|()
expr_stmt|;
comment|// I_A: A:33 B:33 C:33, preempt 7 from B and 17 from C to A
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|7
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|17
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreemptionToBalanceUsedPlusPendingLessThanGuaranteed ()
specifier|public
name|void
name|testPreemptionToBalanceUsedPlusPendingLessThanGuaranteed
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|labelsConfig
init|=
literal|"=100,true"
decl_stmt|;
comment|// default partition
name|String
name|nodesConfig
init|=
literal|"n1="
decl_stmt|;
comment|// only one node
name|String
name|queuesConfig
init|=
comment|// guaranteed,max,used,pending
literal|"root(=[100 100 100 100]);"
operator|+
comment|//root
literal|"-a(=[30 100 10 6]);"
operator|+
comment|// a
literal|"-b(=[30 100 40 30]);"
operator|+
comment|// b
literal|"-c(=[30 100 50 30]);"
operator|+
comment|// c
literal|"-d(=[10 100 0 0])"
decl_stmt|;
comment|// d
name|String
name|appsConfig
init|=
comment|//queueName\t(priority,resource,host,expression,#repeat,reserved)
literal|"a\t(1,1,n1,,10,false);"
operator|+
comment|// app1 in a
literal|"b\t(1,1,n1,,40,false);"
operator|+
comment|// app2 in b
literal|"c\t(1,1,n1,,50,false)"
decl_stmt|;
comment|// app3 in c
name|boolean
name|isPreemptionToBalanceEnabled
init|=
literal|true
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|PREEMPTION_TO_BALANCE_QUEUES_BEYOND_GUARANTEED
argument_list|,
name|isPreemptionToBalanceEnabled
argument_list|)
expr_stmt|;
name|buildEnv
argument_list|(
name|labelsConfig
argument_list|,
name|nodesConfig
argument_list|,
name|queuesConfig
argument_list|,
name|appsConfig
argument_list|)
expr_stmt|;
name|policy
operator|.
name|editSchedule
argument_list|()
expr_stmt|;
comment|// I_A: A:15 B:42 C:43, preempt 7 from B and 17 from C to A
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|8
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreemptionToBalanceWithVcoreResource ()
specifier|public
name|void
name|testPreemptionToBalanceWithVcoreResource
parameter_list|()
throws|throws
name|IOException
block|{
name|Logger
operator|.
name|getRootLogger
argument_list|()
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|DEBUG
argument_list|)
expr_stmt|;
name|String
name|labelsConfig
init|=
literal|"=100:100,true"
decl_stmt|;
comment|// default partition
name|String
name|nodesConfig
init|=
literal|"n1="
decl_stmt|;
comment|// only one node
name|String
name|queuesConfig
init|=
comment|// guaranteed,max,used,pending
literal|"root(=[100:100 100:100 100:100 120:140]);"
operator|+
comment|//root
literal|"-a(=[60:60 100:100 40:40 70:40]);"
operator|+
comment|// a
literal|"-b(=[40:40 100:100 60:60 50:100])"
decl_stmt|;
comment|// b
name|String
name|appsConfig
init|=
comment|//queueName\t(priority,resource,host,expression,#repeat,reserved)
literal|"a\t(1,1:1,n1,,40,false);"
operator|+
comment|// app1 in a
literal|"b\t(1,1:1,n1,,60,false)"
decl_stmt|;
comment|// app2 in b
name|boolean
name|isPreemptionToBalanceEnabled
init|=
literal|true
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|PREEMPTION_TO_BALANCE_QUEUES_BEYOND_GUARANTEED
argument_list|,
name|isPreemptionToBalanceEnabled
argument_list|)
expr_stmt|;
name|buildEnv
argument_list|(
name|labelsConfig
argument_list|,
name|nodesConfig
argument_list|,
name|queuesConfig
argument_list|,
name|appsConfig
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|policy
operator|.
name|editSchedule
argument_list|()
expr_stmt|;
comment|// 21 containers will be preempted here
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|21
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreemptionToBalanceWithConfiguredTimeout ()
specifier|public
name|void
name|testPreemptionToBalanceWithConfiguredTimeout
parameter_list|()
throws|throws
name|IOException
block|{
name|Logger
operator|.
name|getRootLogger
argument_list|()
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|DEBUG
argument_list|)
expr_stmt|;
name|String
name|labelsConfig
init|=
literal|"=100:100,true"
decl_stmt|;
comment|// default partition
name|String
name|nodesConfig
init|=
literal|"n1="
decl_stmt|;
comment|// only one node
name|String
name|queuesConfig
init|=
comment|// guaranteed,max,used,pending
literal|"root(=[100:100 100:100 100:100 120:140]);"
operator|+
comment|//root
literal|"-a(=[60:60 100:100 40:40 70:40]);"
operator|+
comment|// a
literal|"-b(=[40:40 100:100 60:60 50:100])"
decl_stmt|;
comment|// b
name|String
name|appsConfig
init|=
comment|//queueName\t(priority,resource,host,expression,#repeat,reserved)
literal|"a\t(1,1:1,n1,,40,false);"
operator|+
comment|// app1 in a
literal|"b\t(1,1:1,n1,,60,false)"
decl_stmt|;
comment|// app2 in b
name|boolean
name|isPreemptionToBalanceEnabled
init|=
literal|true
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|PREEMPTION_TO_BALANCE_QUEUES_BEYOND_GUARANTEED
argument_list|,
name|isPreemptionToBalanceEnabled
argument_list|)
expr_stmt|;
specifier|final
name|long
name|FB_MAX_BEFORE_KILL
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|MAX_WAIT_BEFORE_KILL_FOR_QUEUE_BALANCE_PREEMPTION
argument_list|,
name|FB_MAX_BEFORE_KILL
argument_list|)
expr_stmt|;
name|buildEnv
argument_list|(
name|labelsConfig
argument_list|,
name|nodesConfig
argument_list|,
name|queuesConfig
argument_list|,
name|appsConfig
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|policy
operator|.
name|editSchedule
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|PreemptionCandidatesSelector
argument_list|,
name|Map
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|Set
argument_list|<
name|RMContainer
argument_list|>
argument_list|>
argument_list|>
name|pcps
init|=
name|policy
operator|.
name|getToPreemptCandidatesPerSelector
argument_list|()
decl_stmt|;
name|String
name|FIFO_CANDIDATE_SELECTOR
init|=
literal|"FifoCandidatesSelector"
decl_stmt|;
name|boolean
name|hasFifoSelector
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|PreemptionCandidatesSelector
argument_list|,
name|Map
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|Set
argument_list|<
name|RMContainer
argument_list|>
argument_list|>
argument_list|>
name|pc
range|:
name|pcps
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|pc
operator|.
name|getKey
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|.
name|equals
argument_list|(
name|FIFO_CANDIDATE_SELECTOR
argument_list|)
condition|)
block|{
name|FifoCandidatesSelector
name|pcs
init|=
operator|(
name|FifoCandidatesSelector
operator|)
name|pc
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|pcs
operator|.
name|getAllowQueuesBalanceAfterAllQueuesSatisfied
argument_list|()
operator|==
literal|true
condition|)
block|{
name|hasFifoSelector
operator|=
literal|true
expr_stmt|;
name|assertThat
argument_list|(
name|pcs
operator|.
name|getMaximumKillWaitTimeMs
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|FB_MAX_BEFORE_KILL
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|assertEquals
argument_list|(
name|hasFifoSelector
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// 21 containers will be preempted here
name|verify
argument_list|(
name|mDisp
argument_list|,
name|times
argument_list|(
literal|21
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|argThat
argument_list|(
operator|new
name|TestProportionalCapacityPreemptionPolicy
operator|.
name|IsPreemptionRequestFor
argument_list|(
name|getAppAttemptId
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|policy
operator|.
name|getQueuePartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
operator|.
name|get
argument_list|(
literal|""
argument_list|)
operator|.
name|getIdealAssigned
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

