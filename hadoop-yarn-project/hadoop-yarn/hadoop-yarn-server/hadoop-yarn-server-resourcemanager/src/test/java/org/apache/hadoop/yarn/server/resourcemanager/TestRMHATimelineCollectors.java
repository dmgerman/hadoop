begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|AppCollectorData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmapp
operator|.
name|RMApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|FileSystemTimelineWriterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Test if the new active RM could recover collector status on a state  * transition.  */
end_comment

begin_class
DECL|class|TestRMHATimelineCollectors
specifier|public
class|class
name|TestRMHATimelineCollectors
extends|extends
name|RMHATestBase
block|{
annotation|@
name|Before
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setup
argument_list|()
expr_stmt|;
name|confForRM1
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|confForRM2
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|confForRM1
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WRITER_CLASS
argument_list|,
name|FileSystemTimelineWriterImpl
operator|.
name|class
argument_list|,
name|TimelineWriter
operator|.
name|class
argument_list|)
expr_stmt|;
name|confForRM1
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|confForRM2
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|confForRM2
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WRITER_CLASS
argument_list|,
name|FileSystemTimelineWriterImpl
operator|.
name|class
argument_list|,
name|TimelineWriter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRebuildCollectorDataOnFailover ()
specifier|public
name|void
name|testRebuildCollectorDataOnFailover
parameter_list|()
throws|throws
name|Exception
block|{
name|startRMs
argument_list|()
expr_stmt|;
name|MockNM
name|nm1
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:1234"
argument_list|,
literal|15120
argument_list|,
name|rm2
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|MockNM
name|nm2
init|=
operator|new
name|MockNM
argument_list|(
literal|"127.0.0.1:5678"
argument_list|,
literal|15121
argument_list|,
name|rm2
operator|.
name|getResourceTrackerService
argument_list|()
argument_list|)
decl_stmt|;
name|RMApp
name|app1
init|=
name|rm1
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|String
name|collectorAddr1
init|=
literal|"1.2.3.4:5"
decl_stmt|;
name|AppCollectorData
name|data1
init|=
name|AppCollectorData
operator|.
name|newInstance
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|collectorAddr1
argument_list|)
decl_stmt|;
name|nm1
operator|.
name|addRegisteringCollector
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|data1
argument_list|)
expr_stmt|;
name|String
name|collectorAddr2
init|=
literal|"5.4.3.2:1"
decl_stmt|;
name|RMApp
name|app2
init|=
name|rm1
operator|.
name|submitApp
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|AppCollectorData
name|data2
init|=
name|AppCollectorData
operator|.
name|newInstance
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|collectorAddr2
argument_list|,
name|rm1
operator|.
name|getStartTime
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|nm1
operator|.
name|addRegisteringCollector
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|data2
argument_list|)
expr_stmt|;
name|explicitFailover
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ApplicationId
argument_list|>
name|runningApps
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|runningApps
operator|.
name|add
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
name|runningApps
operator|.
name|add
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
name|nm1
operator|.
name|registerNode
argument_list|(
name|runningApps
argument_list|)
expr_stmt|;
name|nm2
operator|.
name|registerNode
argument_list|(
name|runningApps
argument_list|)
expr_stmt|;
name|String
name|collectorAddr12
init|=
literal|"1.2.3.4:56"
decl_stmt|;
name|AppCollectorData
name|data12
init|=
name|AppCollectorData
operator|.
name|newInstance
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|collectorAddr12
argument_list|,
name|rm1
operator|.
name|getStartTime
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|nm2
operator|.
name|addRegisteringCollector
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|data12
argument_list|)
expr_stmt|;
name|String
name|collectorAddr22
init|=
literal|"5.4.3.2:10"
decl_stmt|;
name|AppCollectorData
name|data22
init|=
name|AppCollectorData
operator|.
name|newInstance
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|collectorAddr22
argument_list|,
name|rm1
operator|.
name|getStartTime
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|nm2
operator|.
name|addRegisteringCollector
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|data22
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|ApplicationId
argument_list|,
name|AppCollectorData
argument_list|>
name|results1
init|=
name|nm1
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
operator|.
name|getAppCollectors
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectorAddr1
argument_list|,
name|results1
operator|.
name|get
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|collectorAddr2
argument_list|,
name|results1
operator|.
name|get
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|ApplicationId
argument_list|,
name|AppCollectorData
argument_list|>
name|results2
init|=
name|nm2
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
operator|.
name|getAppCollectors
argument_list|()
decl_stmt|;
comment|// addr of app1 should be collectorAddr1 since it's registering (no time
comment|// stamp).
name|assertEquals
argument_list|(
name|collectorAddr1
argument_list|,
name|results2
operator|.
name|get
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
comment|// addr of app2 should be collectorAddr22 since its version number is
comment|// greater.
name|assertEquals
argument_list|(
name|collectorAddr22
argument_list|,
name|results2
operator|.
name|get
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now nm1 should get updated collector list
name|nm1
operator|.
name|getRegisteringCollectors
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|ApplicationId
argument_list|,
name|AppCollectorData
argument_list|>
name|results12
init|=
name|nm1
operator|.
name|nodeHeartbeat
argument_list|(
literal|true
argument_list|)
operator|.
name|getAppCollectors
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectorAddr1
argument_list|,
name|results12
operator|.
name|get
argument_list|(
name|app1
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|collectorAddr22
argument_list|,
name|results12
operator|.
name|get
argument_list|(
name|app2
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|getCollectorAddr
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

