begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|ResourceScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|TestSchedulerOvercommit
import|;
end_import

begin_comment
comment|/**  * Test changing resources and overcommit in the Capacity Scheduler  * {@link CapacityScheduler}.  */
end_comment

begin_class
DECL|class|TestCapacitySchedulerOvercommit
specifier|public
class|class
name|TestCapacitySchedulerOvercommit
extends|extends
name|TestSchedulerOvercommit
block|{
annotation|@
name|Override
DECL|method|getConfiguration ()
specifier|protected
name|Configuration
name|getConfiguration
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|super
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
argument_list|,
name|ResourceScheduler
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Remove limits on AMs to allow multiple applications running
name|CapacitySchedulerConfiguration
name|csConf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|csConf
operator|.
name|setMaximumApplicationMasterResourcePerQueuePercent
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
literal|100.0f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumAMResourcePercentPerPartition
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
argument_list|,
literal|""
argument_list|,
literal|100.0f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumApplicationMasterResourcePerQueuePercent
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|".default"
argument_list|,
literal|100.0f
argument_list|)
expr_stmt|;
name|csConf
operator|.
name|setMaximumAMResourcePercentPerPartition
argument_list|(
name|CapacitySchedulerConfiguration
operator|.
name|ROOT
operator|+
literal|".default"
argument_list|,
literal|""
argument_list|,
literal|100.0f
argument_list|)
expr_stmt|;
return|return
name|csConf
return|;
block|}
block|}
end_class

end_unit

