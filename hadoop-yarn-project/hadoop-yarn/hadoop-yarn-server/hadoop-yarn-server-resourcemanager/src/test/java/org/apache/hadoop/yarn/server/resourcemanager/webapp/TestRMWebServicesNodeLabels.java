begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|JettyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|MockRM
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|LabelsToNodesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeLabelInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeLabelsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeToLabelsEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeToLabelsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeToLabelsEntryList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|GenericExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|GuiceServletConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|JerseyTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebServicesTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jettison
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Guice
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|servlet
operator|.
name|ServletModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|UniformInterfaceException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|WebResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONJAXBContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|json
operator|.
name|JSONMarshaller
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|guice
operator|.
name|spi
operator|.
name|container
operator|.
name|servlet
operator|.
name|GuiceContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|test
operator|.
name|framework
operator|.
name|WebAppDescriptor
import|;
end_import

begin_class
DECL|class|TestRMWebServicesNodeLabels
specifier|public
class|class
name|TestRMWebServicesNodeLabels
extends|extends
name|JerseyTestBase
block|{
DECL|field|BAD_REQUEST_CODE
specifier|private
specifier|static
specifier|final
name|int
name|BAD_REQUEST_CODE
init|=
literal|400
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestRMWebServicesNodeLabels
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|rm
specifier|private
specifier|static
name|MockRM
name|rm
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|YarnConfiguration
name|conf
decl_stmt|;
DECL|field|userName
specifier|private
specifier|static
name|String
name|userName
decl_stmt|;
DECL|field|notUserName
specifier|private
specifier|static
name|String
name|notUserName
decl_stmt|;
DECL|field|rmWebService
specifier|private
specifier|static
name|RMWebServices
name|rmWebService
decl_stmt|;
DECL|class|WebServletModule
specifier|private
specifier|static
class|class
name|WebServletModule
extends|extends
name|ServletModule
block|{
annotation|@
name|Override
DECL|method|configureServlets ()
specifier|protected
name|void
name|configureServlets
parameter_list|()
block|{
name|bind
argument_list|(
name|JAXBContextResolver
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
name|userName
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unable to get current user name "
operator|+
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
name|notUserName
operator|=
name|userName
operator|+
literal|"abc123"
expr_stmt|;
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ADMIN_ACL
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|rm
operator|=
operator|new
name|MockRM
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|rmWebService
operator|=
operator|new
name|RMWebServices
argument_list|(
name|rm
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|RMWebServices
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|rmWebService
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GenericExceptionHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ResourceManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|rm
argument_list|)
expr_stmt|;
name|filter
argument_list|(
literal|"/*"
argument_list|)
operator|.
name|through
argument_list|(
name|TestRMWebServicesAppsModification
operator|.
name|TestRMCustomAuthFilter
operator|.
name|class
argument_list|)
expr_stmt|;
name|serve
argument_list|(
literal|"/*"
argument_list|)
operator|.
name|with
argument_list|(
name|GuiceContainer
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|GuiceServletConfig
operator|.
name|setInjector
argument_list|(
name|Guice
operator|.
name|createInjector
argument_list|(
operator|new
name|WebServletModule
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|TestRMWebServicesNodeLabels ()
specifier|public
name|TestRMWebServicesNodeLabels
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|WebAppDescriptor
operator|.
name|Builder
argument_list|(
literal|"org.apache.hadoop.yarn.server.resourcemanager.webapp"
argument_list|)
operator|.
name|contextListenerClass
argument_list|(
name|GuiceServletConfig
operator|.
name|class
argument_list|)
operator|.
name|filterClass
argument_list|(
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|servlet
operator|.
name|GuiceFilter
operator|.
name|class
argument_list|)
operator|.
name|contextPath
argument_list|(
literal|"jersey-guice-filter"
argument_list|)
operator|.
name|servletPath
argument_list|(
literal|"/"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNodeLabels ()
specifier|public
name|void
name|testNodeLabels
parameter_list|()
throws|throws
name|JSONException
throws|,
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Add a label
name|NodeLabelsInfo
name|nlsifo
init|=
operator|new
name|NodeLabelsInfo
argument_list|()
decl_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|NodeLabelInfo
name|nl
range|:
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|nl
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nl
operator|.
name|getExclusivity
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Add another
name|nlsifo
operator|=
operator|new
name|NodeLabelsInfo
argument_list|()
expr_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"b"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify exclusivity for 'y' as false
for|for
control|(
name|NodeLabelInfo
name|nl
range|:
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
control|)
block|{
if|if
condition|(
name|nl
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"b"
argument_list|)
condition|)
block|{
name|assertFalse
argument_list|(
name|nl
operator|.
name|getExclusivity
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Add labels to a node
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Add labels to another node
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid1:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Add labels to another node
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid2:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Verify, using get-labels-to-Nodes
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"label-mappings"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LabelsToNodesInfo
name|ltni
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|LabelsToNodesInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ltni
operator|.
name|getLabelsToNodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|NodeIDsInfo
name|nodes
init|=
name|ltni
operator|.
name|getLabelsToNodes
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"b"
argument_list|,
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|nodes
operator|.
name|getNodeIDs
argument_list|()
operator|.
name|contains
argument_list|(
literal|"nid2:0"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nodes
operator|.
name|getNodeIDs
argument_list|()
operator|.
name|contains
argument_list|(
literal|"nid1:0"
argument_list|)
argument_list|)
expr_stmt|;
name|nodes
operator|=
name|ltni
operator|.
name|getLabelsToNodes
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nodes
operator|.
name|getNodeIDs
argument_list|()
operator|.
name|contains
argument_list|(
literal|"nid:0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify, using get-labels-to-Nodes for specified set of labels
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"label-mappings"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ltni
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|LabelsToNodesInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ltni
operator|.
name|getLabelsToNodes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|nodes
operator|=
name|ltni
operator|.
name|getLabelsToNodes
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nodes
operator|.
name|getNodeIDs
argument_list|()
operator|.
name|contains
argument_list|(
literal|"nid:0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"b"
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace labels using node-to-labels
name|NodeToLabelsEntryList
name|ntli
init|=
operator|new
name|NodeToLabelsEntryList
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|labels
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|labels
operator|.
name|add
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|NodeToLabelsEntry
name|nli
init|=
operator|new
name|NodeToLabelsEntry
argument_list|(
literal|"nid:0"
argument_list|,
name|labels
argument_list|)
decl_stmt|;
name|ntli
operator|.
name|getNodeToLabels
argument_list|()
operator|.
name|add
argument_list|(
name|nli
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-node-to-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|ntli
argument_list|,
name|NodeToLabelsEntryList
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify, using node-to-labels
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-to-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|NodeToLabelsInfo
name|ntlinfo
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeToLabelsInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|NodeLabelsInfo
name|nlinfo
init|=
name|ntlinfo
operator|.
name|getNodeToLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"nid:0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlinfo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlinfo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Remove all
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add a label back for auth tests
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Auth fail replace labels on node
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|notUserName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Fail to add a label with post
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|notUserName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
literal|"{\"nodeLabels\":\"c\"}"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Remove cluster label (succeed, we no longer need it)
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"remove-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|NodeLabelInfo
name|nl
range|:
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|nl
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nl
operator|.
name|getExclusivity
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Remove cluster label with post
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"remove-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Following test cases are to test replace when distributed node label
comment|// configuration is on
comment|// Reset for testing : add cluster labels
name|nlsifo
operator|=
operator|new
name|NodeLabelsInfo
argument_list|()
expr_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"x"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"y"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Reset for testing : Add labels to a node
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"y"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|//setting rmWebService for non Centralized NodeLabel Configuration
name|rmWebService
operator|.
name|isCentralizedNodeLabelConfiguration
operator|=
literal|false
expr_stmt|;
comment|// Case1 : Replace labels using node-to-labels
name|ntli
operator|=
operator|new
name|NodeToLabelsEntryList
argument_list|()
expr_stmt|;
name|labels
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|labels
operator|.
name|add
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|nli
operator|=
operator|new
name|NodeToLabelsEntry
argument_list|(
literal|"nid:0"
argument_list|,
name|labels
argument_list|)
expr_stmt|;
name|ntli
operator|.
name|getNodeToLabels
argument_list|()
operator|.
name|add
argument_list|(
name|nli
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-node-to-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|ntli
argument_list|,
name|NodeToLabelsEntryList
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify, using node-to-labels that previous operation has failed
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-to-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ntlinfo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeToLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|nlinfo
operator|=
name|ntlinfo
operator|.
name|getNodeToLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"nid:0"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlinfo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|nlinfo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"x"
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Case2 : failure to Replace labels using replace-labels
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
literal|"{\"nodeLabelName\": [\"x\"]}"
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"posted node nodelabel"
argument_list|)
expr_stmt|;
comment|// Verify, using node-to-labels that previous operation has failed
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-to-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ntlinfo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeToLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|nlinfo
operator|=
name|ntlinfo
operator|.
name|getNodeToLabels
argument_list|()
operator|.
name|get
argument_list|(
literal|"nid:0"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlinfo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|nlinfo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|contains
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"x"
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//  Case3 : Remove cluster label should be successful
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"x"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"remove-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"y"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"y"
argument_list|,
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExclusivity
argument_list|()
argument_list|)
expr_stmt|;
comment|// Remove y
name|params
operator|=
operator|new
name|MultivaluedMapImpl
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"y"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"remove-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// add a new nodelabel with exclusity
name|nlsifo
operator|=
operator|new
name|NodeLabelsInfo
argument_list|()
expr_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"z"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Verify
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"get-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|response
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|nlsifo
operator|=
name|response
operator|.
name|getEntity
argument_list|(
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"z"
argument_list|,
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getExclusivity
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nlsifo
operator|.
name|getNodeLabels
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLabelInvalidAddition ()
specifier|public
name|void
name|testLabelInvalidAddition
parameter_list|()
throws|throws
name|UniformInterfaceException
throws|,
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// Add a invalid label
name|NodeLabelsInfo
name|nlsifo
init|=
operator|new
name|NodeLabelsInfo
argument_list|()
decl_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"a&"
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|String
name|expectedmessage
init|=
literal|"java.io.IOException: label name should only contains"
operator|+
literal|" {0-9, a-z, A-Z, -, _} and should not started with"
operator|+
literal|" {-,_}, now it is=a&"
decl_stmt|;
name|validateJsonExceptionContent
argument_list|(
name|response
argument_list|,
name|expectedmessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLabelChangeExclusivity ()
specifier|public
name|void
name|testLabelChangeExclusivity
parameter_list|()
throws|throws
name|Exception
throws|,
name|JSONException
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|NodeLabelsInfo
name|nlsifo
init|=
operator|new
name|NodeLabelsInfo
argument_list|()
decl_stmt|;
name|nlsifo
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"newlabel"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsifo
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// new info and change exclusivity
name|NodeLabelsInfo
name|nlsinfo2
init|=
operator|new
name|NodeLabelsInfo
argument_list|()
decl_stmt|;
name|nlsinfo2
operator|.
name|getNodeLabelsInfo
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|NodeLabelInfo
argument_list|(
literal|"newlabel"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"add-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|toJson
argument_list|(
name|nlsinfo2
argument_list|,
name|NodeLabelsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|String
name|expectedmessage
init|=
literal|"java.io.IOException: Exclusivity cannot be modified for an existing"
operator|+
literal|" label with :<newlabel:exclusivity=false>"
decl_stmt|;
name|validateJsonExceptionContent
argument_list|(
name|response
argument_list|,
name|expectedmessage
argument_list|)
expr_stmt|;
block|}
DECL|method|validateJsonExceptionContent (ClientResponse response, String expectedmessage)
specifier|private
name|void
name|validateJsonExceptionContent
parameter_list|(
name|ClientResponse
name|response
parameter_list|,
name|String
name|expectedmessage
parameter_list|)
throws|throws
name|JSONException
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BAD_REQUEST_CODE
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|JSONObject
name|msg
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|JSONObject
operator|.
name|class
argument_list|)
decl_stmt|;
name|JSONObject
name|exception
init|=
name|msg
operator|.
name|getJSONObject
argument_list|(
literal|"RemoteException"
argument_list|)
decl_stmt|;
name|String
name|message
init|=
name|exception
operator|.
name|getString
argument_list|(
literal|"message"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"incorrect number of elements"
argument_list|,
literal|3
argument_list|,
name|exception
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|type
init|=
name|exception
operator|.
name|getString
argument_list|(
literal|"exception"
argument_list|)
decl_stmt|;
name|String
name|classname
init|=
name|exception
operator|.
name|getString
argument_list|(
literal|"javaClassName"
argument_list|)
decl_stmt|;
name|WebServicesTestUtils
operator|.
name|checkStringMatch
argument_list|(
literal|"exception type"
argument_list|,
literal|"BadRequestException"
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|WebServicesTestUtils
operator|.
name|checkStringMatch
argument_list|(
literal|"exception classname"
argument_list|,
literal|"org.apache.hadoop.yarn.webapp.BadRequestException"
argument_list|,
name|classname
argument_list|)
expr_stmt|;
name|WebServicesTestUtils
operator|.
name|checkStringContains
argument_list|(
literal|"exception message"
argument_list|,
name|expectedmessage
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLabelInvalidReplace ()
specifier|public
name|void
name|testLabelInvalidReplace
parameter_list|()
throws|throws
name|UniformInterfaceException
throws|,
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
comment|// replace label which doesnt exist
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"idontexist"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nodes"
argument_list|)
operator|.
name|path
argument_list|(
literal|"nid:0"
argument_list|)
operator|.
name|path
argument_list|(
literal|"replace-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|String
name|expectedmessage
init|=
literal|"Not all labels being replaced contained by known label"
operator|+
literal|" collections, please check, new labels=[idontexist]"
decl_stmt|;
name|validateJsonExceptionContent
argument_list|(
name|response
argument_list|,
name|expectedmessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLabelInvalidRemove ()
specifier|public
name|void
name|testLabelInvalidRemove
parameter_list|()
throws|throws
name|UniformInterfaceException
throws|,
name|Exception
block|{
name|WebResource
name|r
init|=
name|resource
argument_list|()
decl_stmt|;
name|ClientResponse
name|response
decl_stmt|;
name|MultivaluedMapImpl
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"labels"
argument_list|,
literal|"irealldontexist"
argument_list|)
expr_stmt|;
name|response
operator|=
name|r
operator|.
name|path
argument_list|(
literal|"ws"
argument_list|)
operator|.
name|path
argument_list|(
literal|"v1"
argument_list|)
operator|.
name|path
argument_list|(
literal|"cluster"
argument_list|)
operator|.
name|path
argument_list|(
literal|"remove-node-labels"
argument_list|)
operator|.
name|queryParam
argument_list|(
literal|"user.name"
argument_list|,
name|userName
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|post
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|String
name|expectedmessage
init|=
literal|"java.io.IOException: Node label=irealldontexist to be"
operator|+
literal|" removed doesn't existed in cluster node labels"
operator|+
literal|" collection."
decl_stmt|;
name|validateJsonExceptionContent
argument_list|(
name|response
argument_list|,
name|expectedmessage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|toJson (Object nsli, Class klass)
specifier|private
name|String
name|toJson
parameter_list|(
name|Object
name|nsli
parameter_list|,
name|Class
name|klass
parameter_list|)
throws|throws
name|Exception
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JSONJAXBContext
name|ctx
init|=
operator|new
name|JSONJAXBContext
argument_list|(
name|klass
argument_list|)
decl_stmt|;
name|JSONMarshaller
name|jm
init|=
name|ctx
operator|.
name|createJSONMarshaller
argument_list|()
decl_stmt|;
name|jm
operator|.
name|marshallToJSON
argument_list|(
name|nsli
argument_list|,
name|sw
argument_list|)
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

