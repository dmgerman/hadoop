begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsCollectorImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsRecords
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsSystemImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|QueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|TestQueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * The test class for {@link FSQueueMetrics}.  */
end_comment

begin_class
DECL|class|TestFSQueueMetrics
specifier|public
class|class
name|TestFSQueueMetrics
block|{
DECL|field|CONF
specifier|private
specifier|static
specifier|final
name|Configuration
name|CONF
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|ms
specifier|private
name|MetricsSystem
name|ms
decl_stmt|;
DECL|field|RESOURCE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|RESOURCE_NAME
init|=
literal|"test1"
decl_stmt|;
DECL|field|QUEUE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|QUEUE_NAME
init|=
literal|"single"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|ms
operator|=
operator|new
name|MetricsSystemImpl
argument_list|()
expr_stmt|;
name|QueueMetrics
operator|.
name|clearQueueMetrics
argument_list|()
expr_stmt|;
block|}
DECL|method|setupMetrics (String resourceName)
specifier|private
name|FSQueueMetrics
name|setupMetrics
parameter_list|(
name|String
name|resourceName
parameter_list|)
block|{
name|CONF
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES
argument_list|,
name|resourceName
argument_list|)
expr_stmt|;
name|ResourceUtils
operator|.
name|resetResourceTypes
argument_list|(
name|CONF
argument_list|)
expr_stmt|;
return|return
name|FSQueueMetrics
operator|.
name|forQueue
argument_list|(
name|ms
argument_list|,
name|QUEUE_NAME
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|CONF
argument_list|)
return|;
block|}
DECL|method|getErrorMessage (String metricsType)
specifier|private
name|String
name|getErrorMessage
parameter_list|(
name|String
name|metricsType
parameter_list|)
block|{
return|return
name|metricsType
operator|+
literal|" is not the expected!"
return|;
block|}
comment|/**    * Test if the metric scheduling policy is set correctly.    */
annotation|@
name|Test
DECL|method|testSchedulingPolicy ()
specifier|public
name|void
name|testSchedulingPolicy
parameter_list|()
block|{
name|String
name|queueName
init|=
literal|"single"
decl_stmt|;
name|FSQueueMetrics
name|metrics
init|=
name|FSQueueMetrics
operator|.
name|forQueue
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|CONF
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setSchedulingPolicy
argument_list|(
literal|"drf"
argument_list|)
expr_stmt|;
name|checkSchedulingPolicy
argument_list|(
name|queueName
argument_list|,
literal|"drf"
argument_list|)
expr_stmt|;
comment|// test resetting the scheduling policy
name|metrics
operator|.
name|setSchedulingPolicy
argument_list|(
literal|"fair"
argument_list|)
expr_stmt|;
name|checkSchedulingPolicy
argument_list|(
name|queueName
argument_list|,
literal|"fair"
argument_list|)
expr_stmt|;
block|}
DECL|method|checkSchedulingPolicy (String queueName, String policy)
specifier|private
name|void
name|checkSchedulingPolicy
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|policy
parameter_list|)
block|{
name|MetricsSource
name|queueSource
init|=
name|TestQueueMetrics
operator|.
name|queueSource
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|)
decl_stmt|;
name|MetricsCollectorImpl
name|collector
init|=
operator|new
name|MetricsCollectorImpl
argument_list|()
decl_stmt|;
name|queueSource
operator|.
name|getMetrics
argument_list|(
name|collector
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MetricsRecords
operator|.
name|assertTag
argument_list|(
name|collector
operator|.
name|getRecords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"SchedulingPolicy"
argument_list|,
name|policy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetFairShare ()
specifier|public
name|void
name|testSetFairShare
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setFairShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getFairShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getFairShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setFairShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getFairShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getFairShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"fairShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|metrics
operator|.
name|getFairShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetSteadyFairShare ()
specifier|public
name|void
name|testSetSteadyFairShare
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setSteadyFairShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getSteadyFairShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getSteadyFairShareVCores
argument_list|()
argument_list|)
expr_stmt|;
name|Resource
name|steadyFairShare
init|=
name|metrics
operator|.
name|getSteadyFairShare
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|steadyFairShare
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|steadyFairShare
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|steadyFairShare
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setSteadyFairShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getSteadyFairShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getSteadyFairShareVCores
argument_list|()
argument_list|)
expr_stmt|;
name|steadyFairShare
operator|=
name|metrics
operator|.
name|getSteadyFairShare
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|steadyFairShare
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|steadyFairShare
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"steadyFairShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|steadyFairShare
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetMinShare ()
specifier|public
name|void
name|testSetMinShare
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setMinShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMinShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMinShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setMinShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMinShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMinShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"minShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|metrics
operator|.
name|getMinShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetMaxShare ()
specifier|public
name|void
name|testSetMaxShare
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setMaxShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMaxShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMaxShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setMaxShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMaxShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMaxShareVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|metrics
operator|.
name|getMaxShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetMaxAMShare ()
specifier|public
name|void
name|testSetMaxAMShare
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setMaxAMShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMaxAMShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMaxAMShareVCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setMaxAMShare
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMaxAMShareMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMaxAMShareVCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShareVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxAMShare for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|metrics
operator|.
name|getMaxAMShare
argument_list|()
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAMResourceUsage ()
specifier|public
name|void
name|testSetAMResourceUsage
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|Resource
name|res
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2048L
argument_list|,
literal|4
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|RESOURCE_NAME
argument_list|,
literal|20L
argument_list|)
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setAMResourceUsage
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|metrics
operator|.
name|getAMResourceUsageMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|metrics
operator|.
name|getAMResourceUsageVCores
argument_list|()
argument_list|)
expr_stmt|;
name|Resource
name|amResourceUsage
init|=
name|metrics
operator|.
name|getAMResourceUsage
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageMB"
argument_list|)
argument_list|,
literal|2048L
argument_list|,
name|amResourceUsage
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageVcores"
argument_list|)
argument_list|,
literal|4L
argument_list|,
name|amResourceUsage
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsage for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|20L
argument_list|,
name|amResourceUsage
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|2049L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|setAMResourceUsage
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|metrics
operator|.
name|getAMResourceUsageMB
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|metrics
operator|.
name|getAMResourceUsageVCores
argument_list|()
argument_list|)
expr_stmt|;
name|amResourceUsage
operator|=
name|metrics
operator|.
name|getAMResourceUsage
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageMB"
argument_list|)
argument_list|,
literal|2049L
argument_list|,
name|amResourceUsage
operator|.
name|getMemorySize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsageVcores"
argument_list|)
argument_list|,
literal|5L
argument_list|,
name|amResourceUsage
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"AMResourceUsage for resource: "
operator|+
name|RESOURCE_NAME
argument_list|)
argument_list|,
literal|0
argument_list|,
name|amResourceUsage
operator|.
name|getResourceValue
argument_list|(
name|RESOURCE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetMaxApps ()
specifier|public
name|void
name|testSetMaxApps
parameter_list|()
block|{
name|FSQueueMetrics
name|metrics
init|=
name|setupMetrics
argument_list|(
name|RESOURCE_NAME
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setMaxApps
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getErrorMessage
argument_list|(
literal|"maxApps"
argument_list|)
argument_list|,
literal|25L
argument_list|,
name|metrics
operator|.
name|getMaxApps
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

