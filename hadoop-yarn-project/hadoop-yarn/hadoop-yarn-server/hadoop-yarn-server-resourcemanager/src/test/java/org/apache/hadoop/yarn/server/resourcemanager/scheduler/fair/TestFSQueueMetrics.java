begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsCollectorImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsRecords
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsSystemImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|QueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|TestQueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * The test class for {@link FSQueueMetrics}.  */
end_comment

begin_class
DECL|class|TestFSQueueMetrics
specifier|public
class|class
name|TestFSQueueMetrics
block|{
DECL|field|CONF
specifier|private
specifier|static
specifier|final
name|Configuration
name|CONF
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|ms
specifier|private
name|MetricsSystem
name|ms
decl_stmt|;
DECL|method|setUp ()
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|ms
operator|=
operator|new
name|MetricsSystemImpl
argument_list|()
expr_stmt|;
name|QueueMetrics
operator|.
name|clearQueueMetrics
argument_list|()
expr_stmt|;
block|}
comment|/**    * Test if the metric scheduling policy is set correctly.    */
annotation|@
name|Test
DECL|method|testSchedulingPolicy ()
specifier|public
name|void
name|testSchedulingPolicy
parameter_list|()
block|{
name|String
name|queueName
init|=
literal|"single"
decl_stmt|;
name|FSQueueMetrics
name|metrics
init|=
name|FSQueueMetrics
operator|.
name|forQueue
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|CONF
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|setSchedulingPolicy
argument_list|(
literal|"drf"
argument_list|)
expr_stmt|;
name|checkSchedulingPolicy
argument_list|(
name|queueName
argument_list|,
literal|"drf"
argument_list|)
expr_stmt|;
comment|// test resetting the scheduling policy
name|metrics
operator|.
name|setSchedulingPolicy
argument_list|(
literal|"fair"
argument_list|)
expr_stmt|;
name|checkSchedulingPolicy
argument_list|(
name|queueName
argument_list|,
literal|"fair"
argument_list|)
expr_stmt|;
block|}
DECL|method|checkSchedulingPolicy (String queueName, String policy)
specifier|private
name|void
name|checkSchedulingPolicy
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|policy
parameter_list|)
block|{
name|MetricsSource
name|queueSource
init|=
name|TestQueueMetrics
operator|.
name|queueSource
argument_list|(
name|ms
argument_list|,
name|queueName
argument_list|)
decl_stmt|;
name|MetricsCollectorImpl
name|collector
init|=
operator|new
name|MetricsCollectorImpl
argument_list|()
decl_stmt|;
name|queueSource
operator|.
name|getMetrics
argument_list|(
name|collector
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MetricsRecords
operator|.
name|assertTag
argument_list|(
name|collector
operator|.
name|getRecords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"SchedulingPolicy"
argument_list|,
name|policy
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

