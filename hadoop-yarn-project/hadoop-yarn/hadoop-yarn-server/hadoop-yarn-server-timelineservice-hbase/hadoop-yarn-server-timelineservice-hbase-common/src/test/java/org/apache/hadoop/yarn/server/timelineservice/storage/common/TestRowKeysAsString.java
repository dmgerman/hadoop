begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|TimelineReaderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|application
operator|.
name|ApplicationRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|entity
operator|.
name|EntityRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|flow
operator|.
name|FlowActivityRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|flow
operator|.
name|FlowRunRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|subapplication
operator|.
name|SubApplicationRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test for row key as string.  */
end_comment

begin_class
DECL|class|TestRowKeysAsString
specifier|public
class|class
name|TestRowKeysAsString
block|{
DECL|field|CLUSTER
specifier|private
specifier|final
specifier|static
name|String
name|CLUSTER
init|=
literal|"cl"
operator|+
name|TimelineReaderUtils
operator|.
name|DEFAULT_DELIMITER_CHAR
operator|+
literal|"uster"
operator|+
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
decl_stmt|;
DECL|field|USER
specifier|private
specifier|final
specifier|static
name|String
name|USER
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
operator|+
literal|"user"
decl_stmt|;
DECL|field|SUB_APP_USER
specifier|private
specifier|final
specifier|static
name|String
name|SUB_APP_USER
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
operator|+
literal|"subAppUser"
decl_stmt|;
DECL|field|FLOW_NAME
specifier|private
specifier|final
specifier|static
name|String
name|FLOW_NAME
init|=
literal|"dummy_"
operator|+
name|TimelineReaderUtils
operator|.
name|DEFAULT_DELIMITER_CHAR
operator|+
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
operator|+
literal|"flow"
operator|+
name|TimelineReaderUtils
operator|.
name|DEFAULT_DELIMITER_CHAR
decl_stmt|;
DECL|field|FLOW_RUN_ID
specifier|private
specifier|final
specifier|static
name|Long
name|FLOW_RUN_ID
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
DECL|field|APPLICATION_ID
specifier|private
specifier|final
specifier|static
name|String
name|APPLICATION_ID
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testApplicationRow ()
specifier|public
name|void
name|testApplicationRow
parameter_list|()
block|{
name|String
name|rowKeyAsString
init|=
operator|new
name|ApplicationRowKey
argument_list|(
name|CLUSTER
argument_list|,
name|USER
argument_list|,
name|FLOW_NAME
argument_list|,
name|FLOW_RUN_ID
argument_list|,
name|APPLICATION_ID
argument_list|)
operator|.
name|getRowKeyAsString
argument_list|()
decl_stmt|;
name|ApplicationRowKey
name|rowKey
init|=
name|ApplicationRowKey
operator|.
name|parseRowKeyFromString
argument_list|(
name|rowKeyAsString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CLUSTER
argument_list|,
name|rowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|rowKey
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_NAME
argument_list|,
name|rowKey
operator|.
name|getFlowName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_RUN_ID
argument_list|,
name|rowKey
operator|.
name|getFlowRunId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|APPLICATION_ID
argument_list|,
name|rowKey
operator|.
name|getAppId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testEntityRowKey ()
specifier|public
name|void
name|testEntityRowKey
parameter_list|()
block|{
name|char
name|del
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_DELIMITER_CHAR
decl_stmt|;
name|char
name|esc
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
decl_stmt|;
name|String
name|id
init|=
name|del
operator|+
name|esc
operator|+
literal|"ent"
operator|+
name|esc
operator|+
name|del
operator|+
literal|"ity"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
operator|+
literal|"id"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
decl_stmt|;
name|String
name|type
init|=
literal|"entity"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
operator|+
literal|"Type"
decl_stmt|;
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setIdPrefix
argument_list|(
literal|54321
argument_list|)
expr_stmt|;
name|String
name|rowKeyAsString
init|=
operator|new
name|EntityRowKey
argument_list|(
name|CLUSTER
argument_list|,
name|USER
argument_list|,
name|FLOW_NAME
argument_list|,
name|FLOW_RUN_ID
argument_list|,
name|APPLICATION_ID
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|,
name|entity
operator|.
name|getIdPrefix
argument_list|()
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getRowKeyAsString
argument_list|()
decl_stmt|;
name|EntityRowKey
name|rowKey
init|=
name|EntityRowKey
operator|.
name|parseRowKeyFromString
argument_list|(
name|rowKeyAsString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CLUSTER
argument_list|,
name|rowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|rowKey
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_NAME
argument_list|,
name|rowKey
operator|.
name|getFlowName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_RUN_ID
argument_list|,
name|rowKey
operator|.
name|getFlowRunId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|APPLICATION_ID
argument_list|,
name|rowKey
operator|.
name|getAppId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getType
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getIdPrefix
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityIdPrefix
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testFlowActivityRowKey ()
specifier|public
name|void
name|testFlowActivityRowKey
parameter_list|()
block|{
name|Long
name|ts
init|=
literal|1459900830000L
decl_stmt|;
name|Long
name|dayTimestamp
init|=
name|HBaseTimelineSchemaUtils
operator|.
name|getTopOfTheDayTimestamp
argument_list|(
name|ts
argument_list|)
decl_stmt|;
name|String
name|rowKeyAsString
init|=
operator|new
name|FlowActivityRowKey
argument_list|(
name|CLUSTER
argument_list|,
name|ts
argument_list|,
name|USER
argument_list|,
name|FLOW_NAME
argument_list|)
operator|.
name|getRowKeyAsString
argument_list|()
decl_stmt|;
name|FlowActivityRowKey
name|rowKey
init|=
name|FlowActivityRowKey
operator|.
name|parseRowKeyFromString
argument_list|(
name|rowKeyAsString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CLUSTER
argument_list|,
name|rowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dayTimestamp
argument_list|,
name|rowKey
operator|.
name|getDayTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|rowKey
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_NAME
argument_list|,
name|rowKey
operator|.
name|getFlowName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testFlowRunRowKey ()
specifier|public
name|void
name|testFlowRunRowKey
parameter_list|()
block|{
name|String
name|rowKeyAsString
init|=
operator|new
name|FlowRunRowKey
argument_list|(
name|CLUSTER
argument_list|,
name|USER
argument_list|,
name|FLOW_NAME
argument_list|,
name|FLOW_RUN_ID
argument_list|)
operator|.
name|getRowKeyAsString
argument_list|()
decl_stmt|;
name|FlowRunRowKey
name|rowKey
init|=
name|FlowRunRowKey
operator|.
name|parseRowKeyFromString
argument_list|(
name|rowKeyAsString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CLUSTER
argument_list|,
name|rowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|rowKey
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_NAME
argument_list|,
name|rowKey
operator|.
name|getFlowName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FLOW_RUN_ID
argument_list|,
name|rowKey
operator|.
name|getFlowRunId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testSubApplicationRowKey ()
specifier|public
name|void
name|testSubApplicationRowKey
parameter_list|()
block|{
name|char
name|del
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_DELIMITER_CHAR
decl_stmt|;
name|char
name|esc
init|=
name|TimelineReaderUtils
operator|.
name|DEFAULT_ESCAPE_CHAR
decl_stmt|;
name|String
name|id
init|=
name|del
operator|+
name|esc
operator|+
literal|"ent"
operator|+
name|esc
operator|+
name|del
operator|+
literal|"ity"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
operator|+
literal|"id"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
decl_stmt|;
name|String
name|type
init|=
literal|"entity"
operator|+
name|esc
operator|+
name|del
operator|+
name|esc
operator|+
literal|"Type"
decl_stmt|;
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setIdPrefix
argument_list|(
literal|54321
argument_list|)
expr_stmt|;
name|String
name|rowKeyAsString
init|=
operator|new
name|SubApplicationRowKey
argument_list|(
name|SUB_APP_USER
argument_list|,
name|CLUSTER
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|,
name|entity
operator|.
name|getIdPrefix
argument_list|()
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|USER
argument_list|)
operator|.
name|getRowKeyAsString
argument_list|()
decl_stmt|;
name|SubApplicationRowKey
name|rowKey
init|=
name|SubApplicationRowKey
operator|.
name|parseRowKeyFromString
argument_list|(
name|rowKeyAsString
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SUB_APP_USER
argument_list|,
name|rowKey
operator|.
name|getSubAppUserId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CLUSTER
argument_list|,
name|rowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getType
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getIdPrefix
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityIdPrefix
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|rowKey
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|rowKey
operator|.
name|getUserId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

