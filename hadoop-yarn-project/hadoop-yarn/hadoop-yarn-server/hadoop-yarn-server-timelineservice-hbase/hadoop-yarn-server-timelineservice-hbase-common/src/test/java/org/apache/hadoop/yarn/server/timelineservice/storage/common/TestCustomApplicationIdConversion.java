begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test for HBaseTimelineStorageUtils.convertApplicationIdToString(),  * a custom conversion from ApplicationId to String that avoids the  * incompatibility issue caused by mixing hadoop-common 2.5.1 and  * hadoop-yarn-api 3.0. See YARN-6905.  */
end_comment

begin_class
DECL|class|TestCustomApplicationIdConversion
specifier|public
class|class
name|TestCustomApplicationIdConversion
block|{
annotation|@
name|Test
DECL|method|testConvertAplicationIdToString ()
specifier|public
name|void
name|testConvertAplicationIdToString
parameter_list|()
block|{
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|String
name|applicationIdStr
init|=
name|HBaseTimelineSchemaUtils
operator|.
name|convertApplicationIdToString
argument_list|(
name|applicationId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|applicationId
argument_list|,
name|ApplicationId
operator|.
name|fromString
argument_list|(
name|applicationIdStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

