begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ExitUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ApplicationAttemptEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ApplicationEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ClusterEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|ContainerEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|FlowRunEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|QueueEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|UserEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|CollectorNodemanagerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTimelineCollectorContextRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTimelineCollectorContextResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|collector
operator|.
name|NodeTimelineCollectorManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|collector
operator|.
name|PerNodeTimelineCollectorsAuxService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|FileSystemTimelineWriterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestTimelineServiceClientIntegration
specifier|public
class|class
name|TestTimelineServiceClientIntegration
block|{
DECL|field|collectorManager
specifier|private
specifier|static
name|NodeTimelineCollectorManager
name|collectorManager
decl_stmt|;
DECL|field|auxService
specifier|private
specifier|static
name|PerNodeTimelineCollectorsAuxService
name|auxService
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupClass ()
specifier|public
specifier|static
name|void
name|setupClass
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|collectorManager
operator|=
operator|new
name|MockNodeTimelineCollectorManager
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
comment|// enable timeline service v.2
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WRITER_CLASS
argument_list|,
name|FileSystemTimelineWriterImpl
operator|.
name|class
argument_list|,
name|TimelineWriter
operator|.
name|class
argument_list|)
expr_stmt|;
name|auxService
operator|=
name|PerNodeTimelineCollectorsAuxService
operator|.
name|launchServer
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
name|collectorManager
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|auxService
operator|.
name|addApplication
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExitUtil
operator|.
name|ExitException
name|e
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
DECL|method|tearDownClass ()
specifier|public
specifier|static
name|void
name|tearDownClass
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|auxService
operator|!=
literal|null
condition|)
block|{
name|auxService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPutEntities ()
specifier|public
name|void
name|testPutEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|TimelineClient
name|client
init|=
name|TimelineClient
operator|.
name|createTimelineClient
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
comment|// set the timeline service address manually
name|client
operator|.
name|setTimelineServiceAddress
argument_list|(
name|collectorManager
operator|.
name|getRestServerBindAddress
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setType
argument_list|(
literal|"test entity type"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setId
argument_list|(
literal|"test entity id"
argument_list|)
expr_stmt|;
name|TimelineMetric
name|metric
init|=
operator|new
name|TimelineMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|)
decl_stmt|;
name|metric
operator|.
name|setId
argument_list|(
literal|"test metric id"
argument_list|)
expr_stmt|;
name|metric
operator|.
name|addValue
argument_list|(
literal|1L
argument_list|,
literal|1.0D
argument_list|)
expr_stmt|;
name|metric
operator|.
name|addValue
argument_list|(
literal|2L
argument_list|,
literal|2.0D
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addMetric
argument_list|(
name|metric
argument_list|)
expr_stmt|;
name|client
operator|.
name|putEntities
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|client
operator|.
name|putEntitiesAsync
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPutExtendedEntities ()
specifier|public
name|void
name|testPutExtendedEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TimelineClient
name|client
init|=
name|TimelineClient
operator|.
name|createTimelineClient
argument_list|(
name|appId
argument_list|)
decl_stmt|;
try|try
block|{
comment|// set the timeline service address manually
name|client
operator|.
name|setTimelineServiceAddress
argument_list|(
name|collectorManager
operator|.
name|getRestServerBindAddress
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|ClusterEntity
name|cluster
init|=
operator|new
name|ClusterEntity
argument_list|()
decl_stmt|;
name|cluster
operator|.
name|setId
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_RM_CLUSTER_ID
argument_list|)
expr_stmt|;
name|FlowRunEntity
name|flow
init|=
operator|new
name|FlowRunEntity
argument_list|()
decl_stmt|;
name|flow
operator|.
name|setUser
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setName
argument_list|(
literal|"test_flow_name"
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVersion
argument_list|(
literal|"test_flow_version"
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setRunId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setParent
argument_list|(
name|cluster
operator|.
name|getType
argument_list|()
argument_list|,
name|cluster
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|ApplicationEntity
name|app
init|=
operator|new
name|ApplicationEntity
argument_list|()
decl_stmt|;
name|app
operator|.
name|setId
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|addChild
argument_list|(
name|app
operator|.
name|getType
argument_list|()
argument_list|,
name|app
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptEntity
name|appAttempt
init|=
operator|new
name|ApplicationAttemptEntity
argument_list|()
decl_stmt|;
name|appAttempt
operator|.
name|setId
argument_list|(
name|attemptId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|attemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerEntity
name|container
init|=
operator|new
name|ContainerEntity
argument_list|()
decl_stmt|;
name|container
operator|.
name|setId
argument_list|(
name|containerId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|UserEntity
name|user
init|=
operator|new
name|UserEntity
argument_list|()
decl_stmt|;
name|user
operator|.
name|setId
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|)
expr_stmt|;
name|QueueEntity
name|queue
init|=
operator|new
name|QueueEntity
argument_list|()
decl_stmt|;
name|queue
operator|.
name|setId
argument_list|(
literal|"default_queue"
argument_list|)
expr_stmt|;
name|client
operator|.
name|putEntities
argument_list|(
name|cluster
argument_list|,
name|flow
argument_list|,
name|app
argument_list|,
name|appAttempt
argument_list|,
name|container
argument_list|,
name|user
argument_list|,
name|queue
argument_list|)
expr_stmt|;
name|client
operator|.
name|putEntitiesAsync
argument_list|(
name|cluster
argument_list|,
name|flow
argument_list|,
name|app
argument_list|,
name|appAttempt
argument_list|,
name|container
argument_list|,
name|user
argument_list|,
name|queue
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|MockNodeTimelineCollectorManager
specifier|private
specifier|static
class|class
name|MockNodeTimelineCollectorManager
extends|extends
name|NodeTimelineCollectorManager
block|{
DECL|method|MockNodeTimelineCollectorManager ()
specifier|public
name|MockNodeTimelineCollectorManager
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNMCollectorService ()
specifier|protected
name|CollectorNodemanagerProtocol
name|getNMCollectorService
parameter_list|()
block|{
name|CollectorNodemanagerProtocol
name|protocol
init|=
name|mock
argument_list|(
name|CollectorNodemanagerProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|GetTimelineCollectorContextResponse
name|response
init|=
name|GetTimelineCollectorContextResponse
operator|.
name|newInstance
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|,
literal|"test_flow_name"
argument_list|,
literal|"test_flow_version"
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|protocol
operator|.
name|getTimelineCollectorContext
argument_list|(
name|any
argument_list|(
name|GetTimelineCollectorContextRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|YarnException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
return|return
name|protocol
return|;
block|}
block|}
block|}
end_class

end_unit

