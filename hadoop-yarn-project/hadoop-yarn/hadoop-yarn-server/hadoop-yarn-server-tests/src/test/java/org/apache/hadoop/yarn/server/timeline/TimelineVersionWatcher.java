begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|Description
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|TimelineVersionWatcher
specifier|public
class|class
name|TimelineVersionWatcher
extends|extends
name|TestWatcher
block|{
DECL|field|DEFAULT_TIMELINE_VERSION
specifier|static
specifier|final
name|float
name|DEFAULT_TIMELINE_VERSION
init|=
literal|1.0f
decl_stmt|;
DECL|field|version
specifier|private
name|TimelineVersion
name|version
decl_stmt|;
annotation|@
name|Override
DECL|method|starting (Description description)
specifier|protected
name|void
name|starting
parameter_list|(
name|Description
name|description
parameter_list|)
block|{
name|version
operator|=
name|description
operator|.
name|getAnnotation
argument_list|(
name|TimelineVersion
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**    * @return the version number of timeline server for the current test (using    * timeline server v1.0 by default)    */
DECL|method|getTimelineVersion ()
specifier|public
name|float
name|getTimelineVersion
parameter_list|()
block|{
if|if
condition|(
name|version
operator|==
literal|null
condition|)
block|{
return|return
name|DEFAULT_TIMELINE_VERSION
return|;
block|}
return|return
name|version
operator|.
name|value
argument_list|()
return|;
block|}
block|}
end_class

end_unit

