begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore.collection.document.entity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|TimelineContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|TimelineDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|TimelineReaderUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * This is a generic class which contains all the meta information of some  * conceptual entity and its related events. The timeline entity can be an  * application, an attempt, a container or whatever the user-defined object.  */
end_comment

begin_class
DECL|class|TimelineEntityDocument
specifier|public
class|class
name|TimelineEntityDocument
implements|implements
name|TimelineDocument
argument_list|<
name|TimelineEntityDocument
argument_list|>
block|{
DECL|field|timelineEntity
specifier|private
specifier|final
name|TimelineEntity
name|timelineEntity
decl_stmt|;
DECL|field|context
specifier|private
name|TimelineContext
name|context
decl_stmt|;
DECL|field|flowVersion
specifier|private
name|String
name|flowVersion
decl_stmt|;
DECL|field|subApplicationUser
specifier|private
name|String
name|subApplicationUser
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
argument_list|>
DECL|field|metrics
name|metrics
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
argument_list|>
DECL|field|events
name|events
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|TimelineEntityDocument ()
specifier|public
name|TimelineEntityDocument
parameter_list|()
block|{
name|timelineEntity
operator|=
operator|new
name|TimelineEntity
argument_list|()
expr_stmt|;
block|}
DECL|method|TimelineEntityDocument (TimelineEntity timelineEntity)
specifier|public
name|TimelineEntityDocument
parameter_list|(
name|TimelineEntity
name|timelineEntity
parameter_list|)
block|{
name|this
operator|.
name|timelineEntity
operator|=
name|timelineEntity
expr_stmt|;
name|transformEvents
argument_list|(
name|timelineEntity
operator|.
name|getEvents
argument_list|()
argument_list|)
expr_stmt|;
name|timelineMetrics
argument_list|(
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// transforms TimelineMetric to TimelineMetricSubDoc
DECL|method|timelineMetrics (Set<TimelineMetric> timelineMetrics)
specifier|private
name|void
name|timelineMetrics
parameter_list|(
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|timelineMetrics
parameter_list|)
block|{
for|for
control|(
name|TimelineMetric
name|timelineMetric
range|:
name|timelineMetrics
control|)
block|{
if|if
condition|(
name|this
operator|.
name|metrics
operator|.
name|containsKey
argument_list|(
name|timelineMetric
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|this
operator|.
name|metrics
operator|.
name|get
argument_list|(
name|timelineMetric
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TimelineMetricSubDoc
argument_list|(
name|timelineMetric
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
name|metricSet
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|metricSet
operator|.
name|add
argument_list|(
operator|new
name|TimelineMetricSubDoc
argument_list|(
name|timelineMetric
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|metrics
operator|.
name|put
argument_list|(
name|timelineMetric
operator|.
name|getId
argument_list|()
argument_list|,
name|metricSet
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// transforms TimelineEvent to TimelineEventSubDoc
DECL|method|transformEvents (Set<TimelineEvent> timelineEvents)
specifier|private
name|void
name|transformEvents
parameter_list|(
name|Set
argument_list|<
name|TimelineEvent
argument_list|>
name|timelineEvents
parameter_list|)
block|{
for|for
control|(
name|TimelineEvent
name|timelineEvent
range|:
name|timelineEvents
control|)
block|{
if|if
condition|(
name|this
operator|.
name|events
operator|.
name|containsKey
argument_list|(
name|timelineEvent
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|this
operator|.
name|events
operator|.
name|get
argument_list|(
name|timelineEvent
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TimelineEventSubDoc
argument_list|(
name|timelineEvent
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
name|eventSet
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|eventSet
operator|.
name|add
argument_list|(
operator|new
name|TimelineEventSubDoc
argument_list|(
name|timelineEvent
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|events
operator|.
name|put
argument_list|(
name|timelineEvent
operator|.
name|getId
argument_list|()
argument_list|,
name|eventSet
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**    * Merge the TimelineEntityDocument that is passed with the current    * document for upsert.    *    * @param newTimelineDocument    *          that has to be merged    */
annotation|@
name|Override
DECL|method|merge (TimelineEntityDocument newTimelineDocument)
specifier|public
name|void
name|merge
parameter_list|(
name|TimelineEntityDocument
name|newTimelineDocument
parameter_list|)
block|{
if|if
condition|(
name|newTimelineDocument
operator|.
name|getCreatedTime
argument_list|()
operator|>
literal|0
condition|)
block|{
name|timelineEntity
operator|.
name|setCreatedTime
argument_list|(
name|newTimelineDocument
operator|.
name|getCreatedTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setMetrics
argument_list|(
name|newTimelineDocument
operator|.
name|getMetrics
argument_list|()
argument_list|)
expr_stmt|;
name|setEvents
argument_list|(
name|newTimelineDocument
operator|.
name|getEvents
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|putAll
argument_list|(
name|newTimelineDocument
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|putAll
argument_list|(
name|newTimelineDocument
operator|.
name|getConfigs
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|getIsRelatedToEntities
argument_list|()
operator|.
name|putAll
argument_list|(
name|newTimelineDocument
operator|.
name|getIsRelatedToEntities
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|getRelatesToEntities
argument_list|()
operator|.
name|putAll
argument_list|(
name|newTimelineDocument
operator|.
name|getRelatesToEntities
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|timelineEntity
operator|.
name|getId
argument_list|()
return|;
block|}
DECL|method|setId (String key)
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setId
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|timelineEntity
operator|.
name|getType
argument_list|()
return|;
block|}
DECL|method|setType (String type)
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
DECL|method|getInfo ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getInfo
parameter_list|()
block|{
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|put
argument_list|(
name|TimelineReaderUtils
operator|.
name|FROMID_KEY
argument_list|,
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|timelineEntity
operator|.
name|getInfo
argument_list|()
return|;
block|}
DECL|method|setInfo (Map<String, Object> info)
specifier|public
name|void
name|setInfo
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|info
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setInfo
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
DECL|method|getMetrics ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
argument_list|>
name|getMetrics
parameter_list|()
block|{
return|return
name|metrics
return|;
block|}
DECL|method|setMetrics (Map<String, Set<TimelineMetricSubDoc>> metrics)
specifier|public
name|void
name|setMetrics
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
argument_list|>
name|metrics
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
argument_list|>
name|metricEntry
range|:
name|metrics
operator|.
name|entrySet
argument_list|()
control|)
block|{
specifier|final
name|String
name|metricId
init|=
name|metricEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|TimelineMetricSubDoc
argument_list|>
name|metricValue
init|=
name|metricEntry
operator|.
name|getValue
argument_list|()
decl_stmt|;
for|for
control|(
name|TimelineMetricSubDoc
name|metricSubDoc
range|:
name|metricValue
control|)
block|{
name|timelineEntity
operator|.
name|addMetric
argument_list|(
name|metricSubDoc
operator|.
name|fetchTimelineMetric
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|metrics
operator|.
name|containsKey
argument_list|(
name|metricId
argument_list|)
condition|)
block|{
name|this
operator|.
name|metrics
operator|.
name|get
argument_list|(
name|metricId
argument_list|)
operator|.
name|addAll
argument_list|(
name|metricValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|metrics
operator|.
name|put
argument_list|(
name|metricId
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|metricValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getEvents ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
argument_list|>
name|getEvents
parameter_list|()
block|{
return|return
name|events
return|;
block|}
DECL|method|setEvents (Map<String, Set<TimelineEventSubDoc>> events)
specifier|public
name|void
name|setEvents
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
argument_list|>
name|events
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
argument_list|>
name|eventEntry
range|:
name|events
operator|.
name|entrySet
argument_list|()
control|)
block|{
specifier|final
name|String
name|eventId
init|=
name|eventEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|TimelineEventSubDoc
argument_list|>
name|eventValue
init|=
name|eventEntry
operator|.
name|getValue
argument_list|()
decl_stmt|;
for|for
control|(
name|TimelineEventSubDoc
name|eventSubDoc
range|:
name|eventValue
control|)
block|{
name|timelineEntity
operator|.
name|addEvent
argument_list|(
name|eventSubDoc
operator|.
name|fetchTimelineEvent
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|events
operator|.
name|containsKey
argument_list|(
name|eventId
argument_list|)
condition|)
block|{
name|this
operator|.
name|events
operator|.
name|get
argument_list|(
name|eventId
argument_list|)
operator|.
name|addAll
argument_list|(
name|events
operator|.
name|get
argument_list|(
name|eventId
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|events
operator|.
name|put
argument_list|(
name|eventId
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|eventValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getConfigs ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getConfigs
parameter_list|()
block|{
return|return
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
return|;
block|}
DECL|method|setConfigs (Map<String, String> configs)
specifier|public
name|void
name|setConfigs
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configs
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setConfigs
argument_list|(
name|configs
argument_list|)
expr_stmt|;
block|}
DECL|method|getIsRelatedToEntities ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|getIsRelatedToEntities
parameter_list|()
block|{
return|return
name|timelineEntity
operator|.
name|getIsRelatedToEntities
argument_list|()
return|;
block|}
DECL|method|setIsRelatedToEntities (Map<String, Set<String>> isRelatedToEntities)
specifier|public
name|void
name|setIsRelatedToEntities
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|isRelatedToEntities
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setIsRelatedToEntities
argument_list|(
name|isRelatedToEntities
argument_list|)
expr_stmt|;
block|}
DECL|method|getRelatesToEntities ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|getRelatesToEntities
parameter_list|()
block|{
return|return
name|timelineEntity
operator|.
name|getRelatesToEntities
argument_list|()
return|;
block|}
DECL|method|setRelatesToEntities (Map<String, Set<String>> relatesToEntities)
specifier|public
name|void
name|setRelatesToEntities
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|relatesToEntities
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setRelatesToEntities
argument_list|(
name|relatesToEntities
argument_list|)
expr_stmt|;
block|}
DECL|method|getFlowVersion ()
specifier|public
name|String
name|getFlowVersion
parameter_list|()
block|{
return|return
name|flowVersion
return|;
block|}
DECL|method|setFlowVersion (String flowVersion)
specifier|public
name|void
name|setFlowVersion
parameter_list|(
name|String
name|flowVersion
parameter_list|)
block|{
name|this
operator|.
name|flowVersion
operator|=
name|flowVersion
expr_stmt|;
block|}
DECL|method|setIdentifier (TimelineEntity.Identifier identifier)
specifier|public
name|void
name|setIdentifier
parameter_list|(
name|TimelineEntity
operator|.
name|Identifier
name|identifier
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setIdentifier
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
block|}
DECL|method|setIdPrefix (long idPrefix)
specifier|public
name|void
name|setIdPrefix
parameter_list|(
name|long
name|idPrefix
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setIdPrefix
argument_list|(
name|idPrefix
argument_list|)
expr_stmt|;
block|}
DECL|method|getSubApplicationUser ()
specifier|public
name|String
name|getSubApplicationUser
parameter_list|()
block|{
return|return
name|subApplicationUser
return|;
block|}
DECL|method|setSubApplicationUser (String subApplicationUser)
specifier|public
name|void
name|setSubApplicationUser
parameter_list|(
name|String
name|subApplicationUser
parameter_list|)
block|{
name|this
operator|.
name|subApplicationUser
operator|=
name|subApplicationUser
expr_stmt|;
block|}
DECL|method|getCreatedTime ()
specifier|public
name|long
name|getCreatedTime
parameter_list|()
block|{
if|if
condition|(
name|timelineEntity
operator|.
name|getCreatedTime
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
return|return
name|timelineEntity
operator|.
name|getCreatedTime
argument_list|()
return|;
block|}
DECL|method|setCreatedTime (long createdTime)
specifier|public
name|void
name|setCreatedTime
parameter_list|(
name|long
name|createdTime
parameter_list|)
block|{
name|timelineEntity
operator|.
name|setCreatedTime
argument_list|(
name|createdTime
argument_list|)
expr_stmt|;
block|}
DECL|method|getContext ()
specifier|public
name|TimelineContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
DECL|method|setContext (TimelineContext context)
specifier|public
name|void
name|setContext
parameter_list|(
name|TimelineContext
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
DECL|method|fetchTimelineEntity ()
specifier|public
name|TimelineEntity
name|fetchTimelineEntity
parameter_list|()
block|{
return|return
name|timelineEntity
return|;
block|}
block|}
end_class

end_unit

