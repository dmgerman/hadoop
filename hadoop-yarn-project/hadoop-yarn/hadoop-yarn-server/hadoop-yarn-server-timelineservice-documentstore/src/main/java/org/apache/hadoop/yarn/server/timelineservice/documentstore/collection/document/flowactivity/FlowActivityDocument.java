begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore.collection.document.flowactivity
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|flowactivity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|FlowActivityEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|TimelineDocument
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * This doc represents the {@link FlowActivityEntity} which is used for  * showing all the flow runs with limited information.  */
end_comment

begin_class
DECL|class|FlowActivityDocument
specifier|public
class|class
name|FlowActivityDocument
implements|implements
name|TimelineDocument
argument_list|<
name|FlowActivityDocument
argument_list|>
block|{
DECL|field|id
specifier|private
name|String
name|id
decl_stmt|;
DECL|field|type
specifier|private
specifier|final
name|String
name|type
init|=
name|TimelineEntityType
operator|.
name|YARN_FLOW_ACTIVITY
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|flowActivities
specifier|private
name|Set
argument_list|<
name|FlowActivitySubDoc
argument_list|>
name|flowActivities
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|dayTimestamp
specifier|private
name|long
name|dayTimestamp
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|flowName
specifier|private
name|String
name|flowName
decl_stmt|;
DECL|method|FlowActivityDocument ()
specifier|public
name|FlowActivityDocument
parameter_list|()
block|{   }
DECL|method|FlowActivityDocument (String flowName, String flowVersion, long flowRunId)
specifier|public
name|FlowActivityDocument
parameter_list|(
name|String
name|flowName
parameter_list|,
name|String
name|flowVersion
parameter_list|,
name|long
name|flowRunId
parameter_list|)
block|{
name|flowActivities
operator|.
name|add
argument_list|(
operator|new
name|FlowActivitySubDoc
argument_list|(
name|flowName
argument_list|,
name|flowVersion
argument_list|,
name|flowRunId
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Merge the {@link FlowActivityDocument} that is passed with the current    * document for upsert.    *    * @param flowActivityDocument    *          that has to be merged    */
annotation|@
name|Override
DECL|method|merge (FlowActivityDocument flowActivityDocument)
specifier|public
name|void
name|merge
parameter_list|(
name|FlowActivityDocument
name|flowActivityDocument
parameter_list|)
block|{
if|if
condition|(
name|flowActivityDocument
operator|.
name|getDayTimestamp
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|dayTimestamp
operator|=
name|flowActivityDocument
operator|.
name|getDayTimestamp
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|flowName
operator|=
name|flowActivityDocument
operator|.
name|getFlowName
argument_list|()
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|flowActivityDocument
operator|.
name|getUser
argument_list|()
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|flowActivityDocument
operator|.
name|getId
argument_list|()
expr_stmt|;
name|this
operator|.
name|flowActivities
operator|.
name|addAll
argument_list|(
name|flowActivityDocument
operator|.
name|getFlowActivities
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
DECL|method|setId (String id)
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|addFlowActivity (String flowActivityName, String flowVersion, long flowRunId)
specifier|public
name|void
name|addFlowActivity
parameter_list|(
name|String
name|flowActivityName
parameter_list|,
name|String
name|flowVersion
parameter_list|,
name|long
name|flowRunId
parameter_list|)
block|{
name|flowActivities
operator|.
name|add
argument_list|(
operator|new
name|FlowActivitySubDoc
argument_list|(
name|flowActivityName
argument_list|,
name|flowVersion
argument_list|,
name|flowRunId
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getFlowActivities ()
specifier|public
name|Set
argument_list|<
name|FlowActivitySubDoc
argument_list|>
name|getFlowActivities
parameter_list|()
block|{
return|return
name|flowActivities
return|;
block|}
DECL|method|setFlowActivities (Set<FlowActivitySubDoc> flowActivities)
specifier|public
name|void
name|setFlowActivities
parameter_list|(
name|Set
argument_list|<
name|FlowActivitySubDoc
argument_list|>
name|flowActivities
parameter_list|)
block|{
name|this
operator|.
name|flowActivities
operator|=
name|flowActivities
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCreatedTime ()
specifier|public
name|long
name|getCreatedTime
parameter_list|()
block|{
return|return
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toMillis
argument_list|(
name|dayTimestamp
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setCreatedTime (long time)
specifier|public
name|void
name|setCreatedTime
parameter_list|(
name|long
name|time
parameter_list|)
block|{   }
DECL|method|getDayTimestamp ()
specifier|public
name|long
name|getDayTimestamp
parameter_list|()
block|{
return|return
name|dayTimestamp
return|;
block|}
DECL|method|setDayTimestamp (long dayTimestamp)
specifier|public
name|void
name|setDayTimestamp
parameter_list|(
name|long
name|dayTimestamp
parameter_list|)
block|{
name|this
operator|.
name|dayTimestamp
operator|=
name|dayTimestamp
expr_stmt|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|setUser (String user)
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getFlowName ()
specifier|public
name|String
name|getFlowName
parameter_list|()
block|{
return|return
name|flowName
return|;
block|}
DECL|method|setFlowName (String flowName)
specifier|public
name|void
name|setFlowName
parameter_list|(
name|String
name|flowName
parameter_list|)
block|{
name|this
operator|.
name|flowName
operator|=
name|flowName
expr_stmt|;
block|}
block|}
end_class

end_unit

