begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore.lib
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|lib
package|;
end_package

begin_comment
comment|/**  * Represents the different vendors for DocumentStore.  */
end_comment

begin_enum
DECL|enum|DocumentStoreVendor
specifier|public
enum|enum
name|DocumentStoreVendor
block|{
DECL|enumConstant|COSMOS_DB
name|COSMOS_DB
block|,
DECL|enumConstant|MONGO_DB
name|MONGO_DB
block|,
DECL|enumConstant|ELASTIC_SEARCH
name|ELASTIC_SEARCH
block|;
DECL|method|getStoreType (String storeTypeStr)
specifier|public
specifier|static
name|DocumentStoreVendor
name|getStoreType
parameter_list|(
name|String
name|storeTypeStr
parameter_list|)
block|{
for|for
control|(
name|DocumentStoreVendor
name|storeType
range|:
name|DocumentStoreVendor
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|storeType
operator|.
name|name
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|storeTypeStr
argument_list|)
condition|)
block|{
return|return
name|DocumentStoreVendor
operator|.
name|valueOf
argument_list|(
name|storeTypeStr
operator|.
name|toUpperCase
argument_list|()
argument_list|)
return|;
block|}
block|}
throw|throw
operator|new
name|DocumentStoreNotSupportedException
argument_list|(
name|storeTypeStr
operator|+
literal|" is not a valid DocumentStoreVendor"
argument_list|)
throw|;
block|}
block|}
end_enum

end_unit

