begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|DeserializationConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|type
operator|.
name|TypeReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * A simple util class for Json SerDe.  */
end_comment

begin_class
DECL|class|JsonUtils
specifier|public
specifier|final
class|class
name|JsonUtils
block|{
DECL|method|JsonUtils ()
specifier|private
name|JsonUtils
parameter_list|()
block|{}
DECL|field|OBJECT_MAPPER
specifier|private
specifier|static
specifier|final
name|ObjectMapper
name|OBJECT_MAPPER
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
static|static
block|{
name|OBJECT_MAPPER
operator|.
name|configure
argument_list|(
name|DeserializationConfig
operator|.
name|Feature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Deserialize the Json String to JAVA Object.    * @param jsonStr    *               json string that has to be deserialized    * @param type    *              of JAVA Object    * @return JAVA Object after deserialization    * @throws IOException if Json String is not valid or error    *                     while deserialization    */
DECL|method|fromJson (final String jsonStr, final TypeReference type)
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|T
name|fromJson
parameter_list|(
specifier|final
name|String
name|jsonStr
parameter_list|,
specifier|final
name|TypeReference
name|type
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|OBJECT_MAPPER
operator|.
name|readValue
argument_list|(
name|jsonStr
argument_list|,
name|type
argument_list|)
return|;
block|}
DECL|method|getObjectMapper ()
specifier|public
specifier|static
name|ObjectMapper
name|getObjectMapper
parameter_list|()
block|{
return|return
name|OBJECT_MAPPER
return|;
block|}
block|}
end_class

end_unit

