begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|entity
operator|.
name|TimelineEntityDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|flowactivity
operator|.
name|FlowActivityDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|flowrun
operator|.
name|FlowRunDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|type
operator|.
name|TypeReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * This is util class for baking sample TimelineEntities data for test.  */
end_comment

begin_class
DECL|class|DocumentStoreTestUtils
specifier|public
specifier|final
class|class
name|DocumentStoreTestUtils
block|{
DECL|method|DocumentStoreTestUtils ()
specifier|private
name|DocumentStoreTestUtils
parameter_list|()
block|{}
DECL|method|bakeTimelineEntities ()
specifier|public
specifier|static
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|bakeTimelineEntities
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|jsonStr
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|DocumentStoreTestUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"documents/timeline-entities.json"
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
return|return
name|JsonUtils
operator|.
name|fromJson
argument_list|(
name|jsonStr
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|List
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
DECL|method|bakeYarnAppTimelineEntities ()
specifier|public
specifier|static
name|List
argument_list|<
name|TimelineEntityDocument
argument_list|>
name|bakeYarnAppTimelineEntities
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|jsonStr
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|DocumentStoreTestUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"documents/test-timeline-entities-doc.json"
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
return|return
name|JsonUtils
operator|.
name|fromJson
argument_list|(
name|jsonStr
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|List
argument_list|<
name|TimelineEntityDocument
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
DECL|method|bakeTimelineEntityDoc ()
specifier|public
specifier|static
name|TimelineEntityDocument
name|bakeTimelineEntityDoc
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|jsonStr
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|DocumentStoreTestUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"documents/timeline-app-doc.json"
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
return|return
name|JsonUtils
operator|.
name|fromJson
argument_list|(
name|jsonStr
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|TimelineEntityDocument
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
DECL|method|bakeFlowActivityDoc ()
specifier|public
specifier|static
name|FlowActivityDocument
name|bakeFlowActivityDoc
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|jsonStr
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|DocumentStoreTestUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"documents/flowactivity-doc.json"
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
return|return
name|JsonUtils
operator|.
name|fromJson
argument_list|(
name|jsonStr
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|FlowActivityDocument
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
DECL|method|bakeFlowRunDoc ()
specifier|public
specifier|static
name|FlowRunDocument
name|bakeFlowRunDoc
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|jsonStr
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|DocumentStoreTestUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"documents/flowrun-doc.json"
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
return|return
name|JsonUtils
operator|.
name|fromJson
argument_list|(
name|jsonStr
argument_list|,
operator|new
name|TypeReference
argument_list|<
name|FlowRunDocument
argument_list|>
argument_list|()
block|{}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

