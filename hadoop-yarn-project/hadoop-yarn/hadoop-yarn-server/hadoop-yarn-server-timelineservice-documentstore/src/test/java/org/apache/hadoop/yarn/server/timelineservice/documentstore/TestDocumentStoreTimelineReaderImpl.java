begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.documentstore
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|lib
operator|.
name|DocumentStoreFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|reader
operator|.
name|DocumentStoreReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|reader
operator|.
name|DummyDocumentStoreReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|TimelineDataToRetrieve
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|TimelineEntityFilters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|TimelineReaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineCompareFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineCompareOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineExistsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineFilterList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineKeyValueFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelinePrefixFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|TimelineDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|documentstore
operator|.
name|collection
operator|.
name|document
operator|.
name|entity
operator|.
name|TimelineEntityDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|api
operator|.
name|mockito
operator|.
name|PowerMockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|core
operator|.
name|classloader
operator|.
name|annotations
operator|.
name|PrepareForTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|modules
operator|.
name|junit4
operator|.
name|PowerMockRunner
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * Test case for {@link DocumentStoreTimelineReaderImpl}.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|PowerMockRunner
operator|.
name|class
argument_list|)
annotation|@
name|PrepareForTest
argument_list|(
name|DocumentStoreFactory
operator|.
name|class
argument_list|)
DECL|class|TestDocumentStoreTimelineReaderImpl
specifier|public
class|class
name|TestDocumentStoreTimelineReaderImpl
block|{
DECL|field|documentStoreReader
specifier|private
specifier|final
name|DocumentStoreReader
argument_list|<
name|TimelineDocument
argument_list|>
name|documentStoreReader
init|=
operator|new
name|DummyDocumentStoreReader
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|entities
specifier|private
specifier|final
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|DocumentStoreTestUtils
operator|.
name|bakeTimelineEntities
argument_list|()
decl_stmt|;
DECL|field|appTimelineEntity
specifier|private
specifier|final
name|TimelineEntityDocument
name|appTimelineEntity
init|=
name|DocumentStoreTestUtils
operator|.
name|bakeTimelineEntityDoc
argument_list|()
decl_stmt|;
DECL|field|conf
specifier|private
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|TimelineReaderContext
name|context
init|=
operator|new
name|TimelineReaderContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|1L
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
DECL|field|timelineReader
specifier|private
specifier|final
name|DocumentStoreTimelineReaderImpl
name|timelineReader
init|=
operator|new
name|DocumentStoreTimelineReaderImpl
argument_list|()
decl_stmt|;
DECL|method|TestDocumentStoreTimelineReaderImpl ()
specifier|public
name|TestDocumentStoreTimelineReaderImpl
parameter_list|()
throws|throws
name|IOException
block|{   }
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|YarnException
block|{
name|conf
operator|.
name|set
argument_list|(
name|DocumentStoreUtils
operator|.
name|TIMELINE_SERVICE_DOCUMENTSTORE_DATABASE_NAME
argument_list|,
literal|"TestDB"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|DocumentStoreUtils
operator|.
name|TIMELINE_SERVICE_COSMOSDB_ENDPOINT
argument_list|,
literal|"https://localhost:443"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|DocumentStoreUtils
operator|.
name|TIMELINE_SERVICE_COSMOSDB_MASTER_KEY
argument_list|,
literal|"1234567"
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|DocumentStoreFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|DocumentStoreFactory
operator|.
name|createDocumentStoreReader
argument_list|(
name|ArgumentMatchers
operator|.
name|any
argument_list|(
name|Configuration
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|documentStoreReader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|YarnException
operator|.
name|class
argument_list|)
DECL|method|testFailOnNoCosmosDBConfigs ()
specifier|public
name|void
name|testFailOnNoCosmosDBConfigs
parameter_list|()
throws|throws
name|Exception
block|{
name|DocumentStoreUtils
operator|.
name|validateCosmosDBConf
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntity ()
specifier|public
name|void
name|testGetEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|EnumSet
argument_list|<
name|TimelineReader
operator|.
name|Field
argument_list|>
name|fieldsToRetrieve
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|class
argument_list|)
decl_stmt|;
name|dataToRetrieve
operator|.
name|setFieldsToRetrieve
argument_list|(
name|fieldsToRetrieve
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getCreatedTime
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getCreatedTime
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntityCustomField ()
specifier|public
name|void
name|testGetEntityCustomField
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|METRICS
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getCreatedTime
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getCreatedTime
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntityAllFields ()
specifier|public
name|void
name|testGetEntityAllFields
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getCreatedTime
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getCreatedTime
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appTimelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAllEntities ()
specifier|public
name|void
name|testGetAllEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|actualEntities
init|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|entities
operator|.
name|size
argument_list|()
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithLimit ()
specifier|public
name|void
name|testGetEntitiesWithLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|actualEntities
init|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|entityLimit
argument_list|(
literal|2L
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByWindows ()
specifier|public
name|void
name|testGetEntitiesByWindows
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|actualEntities
init|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|createdTimeBegin
argument_list|(
literal|1533985554927L
argument_list|)
operator|.
name|createTimeEnd
argument_list|(
literal|1533985554927L
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFilteredEntities ()
specifier|public
name|void
name|testGetFilteredEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|ALL
argument_list|)
expr_stmt|;
comment|// Get entities based on info filters.
name|TimelineFilterList
name|infoFilterList
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
name|infoFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelineKeyValueFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"YARN_APPLICATION_ATTEMPT_FINAL_STATUS"
argument_list|,
literal|"SUCCEEDED"
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|actualEntities
init|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|infoFilters
argument_list|(
name|infoFilterList
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Only one entity with type YARN_APPLICATION_ATTEMPT should be returned.
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|actualEntities
control|)
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"YARN_APPLICATION_ATTEMPT"
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incorrect filtering based on info filters"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Get entities based on config filters.
name|TimelineFilterList
name|confFilterList
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|confFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelineKeyValueFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"YARN_AM_NODE_LABEL_EXPRESSION"
argument_list|,
literal|"<DEFAULT_PARTITION>"
argument_list|)
argument_list|)
expr_stmt|;
name|actualEntities
operator|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|configFilters
argument_list|(
name|confFilterList
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Only one entity with type YARN_APPLICATION should be returned.
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|actualEntities
control|)
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"YARN_APPLICATION"
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incorrect filtering based on info filters"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Get entities based on event filters.
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineFilterList
name|eventFilters
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
name|eventFilters
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelineExistsFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"CONTAINER_LAUNCHED"
argument_list|)
argument_list|)
expr_stmt|;
name|actualEntities
operator|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|eventFilters
argument_list|(
name|eventFilters
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Only one entity with type YARN_CONTAINER should be returned.
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|actualEntities
control|)
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"YARN_CONTAINER"
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incorrect filtering based on info filters"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Get entities based on metric filters.
name|TimelineFilterList
name|metricFilterList
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
name|metricFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelineCompareFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|GREATER_OR_EQUAL
argument_list|,
literal|"MEMORY"
argument_list|,
literal|150298624L
argument_list|)
argument_list|)
expr_stmt|;
name|actualEntities
operator|=
name|timelineReader
operator|.
name|getEntities
argument_list|(
name|context
argument_list|,
operator|new
name|TimelineEntityFilters
operator|.
name|Builder
argument_list|()
operator|.
name|metricFilters
argument_list|(
name|metricFilterList
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|actualEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Only one entity with type YARN_CONTAINER should be returned.
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|actualEntities
control|)
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"YARN_CONTAINER"
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incorrect filtering based on info filters"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testReadingDifferentEntityTypes ()
specifier|public
name|void
name|testReadingDifferentEntityTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
comment|// reading YARN_FLOW_ACTIVITY
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_ACTIVITY
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_ACTIVITY
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
comment|// reading YARN_FLOW_RUN
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_RUN
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_RUN
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
comment|// reading YARN_APPLICATION
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReadingAllEntityTypes ()
specifier|public
name|void
name|testReadingAllEntityTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|entityTypes
init|=
name|timelineReader
operator|.
name|getEntityTypes
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|entityTypes
operator|.
name|contains
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|entityTypes
operator|.
name|contains
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMetricsToRetrieve ()
specifier|public
name|void
name|testMetricsToRetrieve
parameter_list|()
throws|throws
name|Exception
block|{
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|METRICS
argument_list|)
expr_stmt|;
name|TimelineFilterList
name|timelineFilterList
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
comment|//testing metrics prefix for OR condition
name|timelineFilterList
operator|.
name|setOperator
argument_list|(
name|TimelineFilterList
operator|.
name|Operator
operator|.
name|OR
argument_list|)
expr_stmt|;
name|timelineFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelinePrefixFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"NOTHING"
argument_list|)
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|setMetricsToRetrieve
argument_list|(
name|timelineFilterList
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|timelineFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelinePrefixFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"YARN_APPLICATION_NON_AM_CONTAINER_PREEMPTED"
argument_list|)
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|setMetricsToRetrieve
argument_list|(
name|timelineFilterList
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//testing metrics prefix for AND condition
name|timelineFilterList
operator|.
name|setOperator
argument_list|(
name|TimelineFilterList
operator|.
name|Operator
operator|.
name|AND
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|getMetricsToRetrieve
argument_list|()
operator|.
name|getFilterList
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testConfigsToRetrieve ()
specifier|public
name|void
name|testConfigsToRetrieve
parameter_list|()
throws|throws
name|Exception
block|{
name|timelineReader
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TimelineDataToRetrieve
name|dataToRetrieve
init|=
operator|new
name|TimelineDataToRetrieve
argument_list|()
decl_stmt|;
name|dataToRetrieve
operator|.
name|getFieldsToRetrieve
argument_list|()
operator|.
name|add
argument_list|(
name|TimelineReader
operator|.
name|Field
operator|.
name|CONFIGS
argument_list|)
expr_stmt|;
name|TimelineFilterList
name|timelineFilterList
init|=
operator|new
name|TimelineFilterList
argument_list|()
decl_stmt|;
comment|//testing metrics prefix for OR condition
name|timelineFilterList
operator|.
name|setOperator
argument_list|(
name|TimelineFilterList
operator|.
name|Operator
operator|.
name|OR
argument_list|)
expr_stmt|;
name|timelineFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelinePrefixFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"NOTHING"
argument_list|)
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|setConfsToRetrieve
argument_list|(
name|timelineFilterList
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|timelineEntity
init|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|timelineFilterList
operator|.
name|addFilter
argument_list|(
operator|new
name|TimelinePrefixFilter
argument_list|(
name|TimelineCompareOp
operator|.
name|EQUAL
argument_list|,
literal|"YARN_AM_NODE_LABEL_EXPRESSION"
argument_list|)
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|setConfsToRetrieve
argument_list|(
name|timelineFilterList
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//testing metrics prefix for AND condition
name|timelineFilterList
operator|.
name|setOperator
argument_list|(
name|TimelineFilterList
operator|.
name|Operator
operator|.
name|AND
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|dataToRetrieve
operator|.
name|getConfsToRetrieve
argument_list|()
operator|.
name|getFilterList
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|context
operator|.
name|setEntityType
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|timelineEntity
operator|=
name|timelineReader
operator|.
name|getEntity
argument_list|(
name|context
argument_list|,
name|dataToRetrieve
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

