begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|FederationStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|AddApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|ApplicationHomeSubCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationHomeSubClusterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPolicyConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPolicyConfigurationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SetSubClusterPolicyConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterPolicyConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterRegisterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|MonotonicClock
import|;
end_import

begin_comment
comment|/**  * Utility class for FederationStateStore unit tests.  */
end_comment

begin_class
DECL|class|FederationStateStoreTestUtil
specifier|public
class|class
name|FederationStateStoreTestUtil
block|{
DECL|field|CLOCK
specifier|private
specifier|static
specifier|final
name|MonotonicClock
name|CLOCK
init|=
operator|new
name|MonotonicClock
argument_list|()
decl_stmt|;
DECL|field|SC_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|SC_PREFIX
init|=
literal|"SC-"
decl_stmt|;
DECL|field|Q_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|Q_PREFIX
init|=
literal|"queue-"
decl_stmt|;
DECL|field|POLICY_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_PREFIX
init|=
literal|"policy-"
decl_stmt|;
DECL|field|stateStore
specifier|private
name|FederationStateStore
name|stateStore
decl_stmt|;
DECL|method|FederationStateStoreTestUtil (FederationStateStore stateStore)
specifier|public
name|FederationStateStoreTestUtil
parameter_list|(
name|FederationStateStore
name|stateStore
parameter_list|)
block|{
name|this
operator|.
name|stateStore
operator|=
name|stateStore
expr_stmt|;
block|}
DECL|method|createSubClusterInfo (SubClusterId subClusterId)
specifier|private
name|SubClusterInfo
name|createSubClusterInfo
parameter_list|(
name|SubClusterId
name|subClusterId
parameter_list|)
block|{
name|String
name|amRMAddress
init|=
literal|"1.2.3.4:1"
decl_stmt|;
name|String
name|clientRMAddress
init|=
literal|"1.2.3.4:2"
decl_stmt|;
name|String
name|rmAdminAddress
init|=
literal|"1.2.3.4:3"
decl_stmt|;
name|String
name|webAppAddress
init|=
literal|"1.2.3.4:4"
decl_stmt|;
return|return
name|SubClusterInfo
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|amRMAddress
argument_list|,
name|clientRMAddress
argument_list|,
name|rmAdminAddress
argument_list|,
name|webAppAddress
argument_list|,
name|SubClusterState
operator|.
name|SC_NEW
argument_list|,
name|CLOCK
operator|.
name|getTime
argument_list|()
argument_list|,
literal|"capability"
argument_list|)
return|;
block|}
DECL|method|registerSubCluster (SubClusterId subClusterId)
specifier|private
name|void
name|registerSubCluster
parameter_list|(
name|SubClusterId
name|subClusterId
parameter_list|)
throws|throws
name|YarnException
block|{
name|SubClusterInfo
name|subClusterInfo
init|=
name|createSubClusterInfo
argument_list|(
name|subClusterId
argument_list|)
decl_stmt|;
name|stateStore
operator|.
name|registerSubCluster
argument_list|(
name|SubClusterRegisterRequest
operator|.
name|newInstance
argument_list|(
name|subClusterInfo
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|registerSubClusters (int numSubClusters)
specifier|public
name|void
name|registerSubClusters
parameter_list|(
name|int
name|numSubClusters
parameter_list|)
throws|throws
name|YarnException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numSubClusters
condition|;
name|i
operator|++
control|)
block|{
name|registerSubCluster
argument_list|(
name|SubClusterId
operator|.
name|newInstance
argument_list|(
name|SC_PREFIX
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addApplicationHomeSC (ApplicationId appId, SubClusterId subClusterId)
specifier|private
name|void
name|addApplicationHomeSC
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|SubClusterId
name|subClusterId
parameter_list|)
throws|throws
name|YarnException
block|{
name|ApplicationHomeSubCluster
name|ahsc
init|=
name|ApplicationHomeSubCluster
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
name|subClusterId
argument_list|)
decl_stmt|;
name|AddApplicationHomeSubClusterRequest
name|request
init|=
name|AddApplicationHomeSubClusterRequest
operator|.
name|newInstance
argument_list|(
name|ahsc
argument_list|)
decl_stmt|;
name|stateStore
operator|.
name|addApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
DECL|method|addAppsHomeSC (long clusterTs, int numApps)
specifier|public
name|void
name|addAppsHomeSC
parameter_list|(
name|long
name|clusterTs
parameter_list|,
name|int
name|numApps
parameter_list|)
throws|throws
name|YarnException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numApps
condition|;
name|i
operator|++
control|)
block|{
name|addApplicationHomeSC
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|clusterTs
argument_list|,
name|i
argument_list|)
argument_list|,
name|SubClusterId
operator|.
name|newInstance
argument_list|(
name|SC_PREFIX
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createSCPolicyConf (String queueName, String policyType)
specifier|private
name|SubClusterPolicyConfiguration
name|createSCPolicyConf
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|policyType
parameter_list|)
block|{
return|return
name|SubClusterPolicyConfiguration
operator|.
name|newInstance
argument_list|(
name|queueName
argument_list|,
name|policyType
argument_list|,
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
DECL|method|setPolicyConf (String queue, String policyType)
specifier|private
name|void
name|setPolicyConf
parameter_list|(
name|String
name|queue
parameter_list|,
name|String
name|policyType
parameter_list|)
throws|throws
name|YarnException
block|{
name|SetSubClusterPolicyConfigurationRequest
name|request
init|=
name|SetSubClusterPolicyConfigurationRequest
operator|.
name|newInstance
argument_list|(
name|createSCPolicyConf
argument_list|(
name|queue
argument_list|,
name|policyType
argument_list|)
argument_list|)
decl_stmt|;
name|stateStore
operator|.
name|setPolicyConfiguration
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
DECL|method|addPolicyConfigs (int numQueues)
specifier|public
name|void
name|addPolicyConfigs
parameter_list|(
name|int
name|numQueues
parameter_list|)
throws|throws
name|YarnException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numQueues
condition|;
name|i
operator|++
control|)
block|{
name|setPolicyConf
argument_list|(
name|Q_PREFIX
operator|+
name|i
argument_list|,
name|POLICY_PREFIX
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|querySubClusterInfo (SubClusterId subClusterId)
specifier|public
name|SubClusterInfo
name|querySubClusterInfo
parameter_list|(
name|SubClusterId
name|subClusterId
parameter_list|)
throws|throws
name|YarnException
block|{
name|GetSubClusterInfoRequest
name|request
init|=
name|GetSubClusterInfoRequest
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|)
decl_stmt|;
return|return
name|stateStore
operator|.
name|getSubCluster
argument_list|(
name|request
argument_list|)
operator|.
name|getSubClusterInfo
argument_list|()
return|;
block|}
DECL|method|queryApplicationHomeSC (ApplicationId appId)
specifier|public
name|SubClusterId
name|queryApplicationHomeSC
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|YarnException
block|{
name|GetApplicationHomeSubClusterRequest
name|request
init|=
name|GetApplicationHomeSubClusterRequest
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|)
decl_stmt|;
name|GetApplicationHomeSubClusterResponse
name|response
init|=
name|stateStore
operator|.
name|getApplicationHomeSubCluster
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getApplicationHomeSubCluster
argument_list|()
operator|.
name|getHomeSubCluster
argument_list|()
return|;
block|}
DECL|method|queryPolicyConfiguration (String queue)
specifier|public
name|SubClusterPolicyConfiguration
name|queryPolicyConfiguration
parameter_list|(
name|String
name|queue
parameter_list|)
throws|throws
name|YarnException
block|{
name|GetSubClusterPolicyConfigurationRequest
name|request
init|=
name|GetSubClusterPolicyConfigurationRequest
operator|.
name|newInstance
argument_list|(
name|queue
argument_list|)
decl_stmt|;
name|GetSubClusterPolicyConfigurationResponse
name|result
init|=
name|stateStore
operator|.
name|getPolicyConfiguration
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|result
operator|.
name|getPolicyConfiguration
argument_list|()
return|;
block|}
block|}
end_class

end_unit

