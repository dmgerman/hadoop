begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ApplicationMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ContainerMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * test class for log web service.  */
end_comment

begin_class
DECL|class|TestLogWebService
specifier|public
class|class
name|TestLogWebService
block|{
DECL|field|request
specifier|private
name|HttpServletRequest
name|request
decl_stmt|;
DECL|field|logWebService
specifier|private
name|LogWebServiceTest
name|logWebService
decl_stmt|;
DECL|field|entity
specifier|private
specifier|static
name|TimelineEntity
name|entity
decl_stmt|;
DECL|field|appId
specifier|private
name|ApplicationId
name|appId
decl_stmt|;
DECL|field|cId
specifier|private
name|ContainerId
name|cId
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
init|=
literal|"user1"
decl_stmt|;
DECL|field|entities
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|TimelineEntity
argument_list|>
name|entities
decl_stmt|;
DECL|field|nodeHttpAddress
specifier|private
name|String
name|nodeHttpAddress
init|=
literal|"localhost:0"
decl_stmt|;
DECL|method|setup ()
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|appId
operator|=
name|ApplicationId
operator|.
name|fromString
argument_list|(
literal|"application_1518143905142_509690"
argument_list|)
expr_stmt|;
name|cId
operator|=
name|ContainerId
operator|.
name|fromString
argument_list|(
literal|"container_e138_1518143905142_509690_01_000001"
argument_list|)
expr_stmt|;
name|entities
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|generateEntity
argument_list|()
expr_stmt|;
name|request
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|logWebService
operator|=
operator|new
name|LogWebServiceTest
argument_list|()
expr_stmt|;
block|}
DECL|method|testGetApp ()
annotation|@
name|Test
specifier|public
name|void
name|testGetApp
parameter_list|()
block|{
name|LogWebService
operator|.
name|AppInfo
name|app
init|=
name|logWebService
operator|.
name|getApp
argument_list|(
name|request
argument_list|,
name|appId
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"RUNNING"
argument_list|,
name|app
operator|.
name|getAppState
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|user
argument_list|,
name|app
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetContainer ()
annotation|@
name|Test
specifier|public
name|void
name|testGetContainer
parameter_list|()
block|{
name|LogWebService
operator|.
name|ContainerInfo
name|container
init|=
name|logWebService
operator|.
name|getContainer
argument_list|(
name|request
argument_list|,
name|appId
operator|.
name|toString
argument_list|()
argument_list|,
name|cId
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|nodeHttpAddress
argument_list|,
name|container
operator|.
name|getNodeHttpAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|LogWebServiceTest
class|class
name|LogWebServiceTest
extends|extends
name|LogWebService
block|{
DECL|method|getEntity (String path, MultivaluedMap<String, String> params)
annotation|@
name|Override
specifier|protected
name|TimelineEntity
name|getEntity
parameter_list|(
name|String
name|path
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
name|cId
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|entities
operator|.
name|get
argument_list|(
name|cId
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|entities
operator|.
name|get
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IOException
argument_list|()
throw|;
block|}
block|}
block|}
DECL|method|generateEntity ()
specifier|private
name|void
name|generateEntity
parameter_list|()
block|{
name|createAppEntities
argument_list|()
expr_stmt|;
name|createContainerEntities
argument_list|()
expr_stmt|;
block|}
DECL|method|createContainerEntities ()
specifier|private
name|void
name|createContainerEntities
parameter_list|()
block|{
name|TimelineEntity
name|timelineEntity
init|=
name|generateEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
argument_list|,
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|timelineEntity
operator|.
name|addInfo
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|USER_ENTITY_INFO
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|addInfo
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
literal|"RUNNING"
argument_list|)
expr_stmt|;
name|entities
operator|.
name|put
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
argument_list|)
expr_stmt|;
block|}
DECL|method|createAppEntities ()
specifier|private
name|void
name|createAppEntities
parameter_list|()
block|{
name|TimelineEntity
name|timelineEntity
init|=
name|generateEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
name|cId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|timelineEntity
operator|.
name|addInfo
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_HTTP_ADDRESS_INFO
argument_list|,
name|nodeHttpAddress
argument_list|)
expr_stmt|;
name|entities
operator|.
name|put
argument_list|(
name|cId
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
argument_list|)
expr_stmt|;
block|}
DECL|method|generateEntity (String entityType, String entityId)
specifier|private
name|TimelineEntity
name|generateEntity
parameter_list|(
name|String
name|entityType
parameter_list|,
name|String
name|entityId
parameter_list|)
block|{
name|TimelineEntity
name|timelineEntity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|timelineEntity
operator|.
name|setId
argument_list|(
name|entityId
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|setType
argument_list|(
name|entityType
argument_list|)
expr_stmt|;
name|timelineEntity
operator|.
name|setCreatedTime
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|timelineEntity
return|;
block|}
block|}
end_class

end_unit

