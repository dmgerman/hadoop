begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|FilterContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|security
operator|.
name|TimelineAuthenticationFilterInitializer
operator|.
name|PREFIX
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Tests {@link TimelineAuthenticationFilterInitializer}.  */
end_comment

begin_class
DECL|class|TestTimelineAuthenticationFilterInitializer
specifier|public
class|class
name|TestTimelineAuthenticationFilterInitializer
block|{
annotation|@
name|Test
DECL|method|testProxyUserConfiguration ()
specifier|public
name|void
name|testProxyUserConfiguration
parameter_list|()
block|{
name|FilterContainer
name|container
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterContainer
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
literal|0
case|:
comment|// hadoop.proxyuser prefix
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.hosts"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.users"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.groups"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
comment|// yarn.timeline-service.http-authentication.proxyuser prefix
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.hosts"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.users"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.groups"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// hadoop.proxyuser prefix has been overwritten by
comment|// yarn.timeline-service.http-authentication.proxyuser prefix
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.hosts"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.users"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser.foo.groups"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.hosts"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.users"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PREFIX
operator|+
literal|"proxyuser.foo.groups"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|TimelineAuthenticationFilterInitializer
name|initializer
init|=
operator|new
name|TimelineAuthenticationFilterInitializer
argument_list|()
decl_stmt|;
name|initializer
operator|.
name|initFilter
argument_list|(
name|container
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"*"
argument_list|,
name|initializer
operator|.
name|filterConfig
operator|.
name|get
argument_list|(
literal|"proxyuser.foo.hosts"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"*"
argument_list|,
name|initializer
operator|.
name|filterConfig
operator|.
name|get
argument_list|(
literal|"proxyuser.foo.users"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"*"
argument_list|,
name|initializer
operator|.
name|filterConfig
operator|.
name|get
argument_list|(
literal|"proxyuser.foo.groups"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

