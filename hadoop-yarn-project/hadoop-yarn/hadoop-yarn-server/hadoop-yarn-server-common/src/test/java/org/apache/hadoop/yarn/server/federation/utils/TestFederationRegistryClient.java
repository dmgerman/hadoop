begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|api
operator|.
name|RegistryOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|impl
operator|.
name|FSRegistryOperationsService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|AMRMTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit test for FederationRegistryClient.  */
end_comment

begin_class
DECL|class|TestFederationRegistryClient
specifier|public
class|class
name|TestFederationRegistryClient
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|user
specifier|private
name|UserGroupInformation
name|user
decl_stmt|;
DECL|field|registry
specifier|private
name|RegistryOperations
name|registry
decl_stmt|;
DECL|field|registryClient
specifier|private
name|FederationRegistryClient
name|registryClient
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|this
operator|.
name|registry
operator|=
operator|new
name|FSRegistryOperationsService
argument_list|()
expr_stmt|;
name|this
operator|.
name|registry
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|registry
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
expr_stmt|;
name|this
operator|.
name|registryClient
operator|=
operator|new
name|FederationRegistryClient
argument_list|(
name|this
operator|.
name|conf
argument_list|,
name|this
operator|.
name|registry
argument_list|,
name|this
operator|.
name|user
argument_list|)
expr_stmt|;
name|this
operator|.
name|registryClient
operator|.
name|cleanAllApplications
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|registryClient
operator|.
name|getAllApplications
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|breakDown ()
specifier|public
name|void
name|breakDown
parameter_list|()
block|{
name|registryClient
operator|.
name|cleanAllApplications
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|registryClient
operator|.
name|getAllApplications
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|registry
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicCase ()
specifier|public
name|void
name|testBasicCase
parameter_list|()
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|String
name|scId1
init|=
literal|"subcluster1"
decl_stmt|;
name|String
name|scId2
init|=
literal|"subcluster2"
decl_stmt|;
name|this
operator|.
name|registryClient
operator|.
name|writeAMRMTokenForUAM
argument_list|(
name|appId
argument_list|,
name|scId1
argument_list|,
operator|new
name|Token
argument_list|<
name|AMRMTokenIdentifier
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|registryClient
operator|.
name|writeAMRMTokenForUAM
argument_list|(
name|appId
argument_list|,
name|scId2
argument_list|,
operator|new
name|Token
argument_list|<
name|AMRMTokenIdentifier
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
comment|// Duplicate entry, should overwrite
name|this
operator|.
name|registryClient
operator|.
name|writeAMRMTokenForUAM
argument_list|(
name|appId
argument_list|,
name|scId1
argument_list|,
operator|new
name|Token
argument_list|<
name|AMRMTokenIdentifier
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|registryClient
operator|.
name|getAllApplications
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|this
operator|.
name|registryClient
operator|.
name|loadStateFromRegistry
argument_list|(
name|appId
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|registryClient
operator|.
name|removeAppFromRegistry
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|registryClient
operator|.
name|getAllApplications
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|registryClient
operator|.
name|loadStateFromRegistry
argument_list|(
name|appId
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

