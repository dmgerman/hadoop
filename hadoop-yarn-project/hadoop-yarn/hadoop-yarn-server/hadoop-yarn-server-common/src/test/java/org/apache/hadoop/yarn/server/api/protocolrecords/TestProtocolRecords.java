begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerExitStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NMContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterNodeManagerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
operator|.
name|NMContainerStatusPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
operator|.
name|RegisterNodeManagerRequestPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestProtocolRecords
specifier|public
class|class
name|TestProtocolRecords
block|{
annotation|@
name|Test
DECL|method|testContainerRecoveryReport ()
specifier|public
name|void
name|testContainerRecoveryReport
parameter_list|()
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|123456789
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|attemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Resource
name|resource
init|=
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1000
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|NMContainerStatus
name|report
init|=
name|NMContainerStatus
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
name|resource
argument_list|,
literal|"diagnostics"
argument_list|,
name|ContainerExitStatus
operator|.
name|ABORTED
argument_list|)
decl_stmt|;
name|NMContainerStatus
name|reportProto
init|=
operator|new
name|NMContainerStatusPBImpl
argument_list|(
operator|(
operator|(
name|NMContainerStatusPBImpl
operator|)
name|report
operator|)
operator|.
name|getProto
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"diagnostics"
argument_list|,
name|reportProto
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|resource
argument_list|,
name|reportProto
operator|.
name|getAllocatedResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ContainerExitStatus
operator|.
name|ABORTED
argument_list|,
name|reportProto
operator|.
name|getContainerExitStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
name|reportProto
operator|.
name|getContainerState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|containerId
argument_list|,
name|reportProto
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createContainerRecoveryReport ( ApplicationAttemptId appAttemptId, int id, ContainerState containerState)
specifier|public
specifier|static
name|NMContainerStatus
name|createContainerRecoveryReport
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|,
name|int
name|id
parameter_list|,
name|ContainerState
name|containerState
parameter_list|)
block|{
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|appAttemptId
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|NMContainerStatus
name|containerReport
init|=
name|NMContainerStatus
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
name|containerState
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"diagnostics"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
return|return
name|containerReport
return|;
block|}
annotation|@
name|Test
DECL|method|testRegisterNodeManagerRequest ()
specifier|public
name|void
name|testRegisterNodeManagerRequest
parameter_list|()
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|123456789
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|attemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|NMContainerStatus
name|containerReport
init|=
name|NMContainerStatus
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
name|ContainerState
operator|.
name|RUNNING
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"diagnostics"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|NMContainerStatus
argument_list|>
name|reports
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|containerReport
argument_list|)
decl_stmt|;
name|RegisterNodeManagerRequest
name|request
init|=
name|RegisterNodeManagerRequest
operator|.
name|newInstance
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"1.1.1.1"
argument_list|,
literal|1000
argument_list|)
argument_list|,
literal|8080
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"NM-version-id"
argument_list|,
name|reports
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|appId
argument_list|)
argument_list|)
decl_stmt|;
name|RegisterNodeManagerRequest
name|requestProto
init|=
operator|new
name|RegisterNodeManagerRequestPBImpl
argument_list|(
operator|(
operator|(
name|RegisterNodeManagerRequestPBImpl
operator|)
name|request
operator|)
operator|.
name|getProto
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|containerReport
argument_list|,
name|requestProto
operator|.
name|getNMContainerStatuses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|8080
argument_list|,
name|requestProto
operator|.
name|getHttpPort
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NM-version-id"
argument_list|,
name|requestProto
operator|.
name|getNMVersion
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"1.1.1.1"
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|requestProto
operator|.
name|getNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
name|requestProto
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|requestProto
operator|.
name|getRunningApplications
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appId
argument_list|,
name|requestProto
operator|.
name|getRunningApplications
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

