begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ConnectException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|StandbyException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationMasterProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailApplicationAttemptRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailApplicationAttemptResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceProfilesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceProfilesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceTypeInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceTypeInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetLabelsToNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetLabelsToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewReservationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewReservationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToAttributesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToAttributesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetResourceProfileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetResourceProfileResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|MoveApplicationAcrossQueuesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|MoveApplicationAcrossQueuesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SignalContainerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SignalContainerResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationPriorityRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationPriorityResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationTimeoutsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationTimeoutsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
operator|.
name|SignalContainerResponsePBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|AMCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|FinalApplicationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NMToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationAllocationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|UpdatedContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|AMRMClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|ApplicationMasterNotRegisteredException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|ApplicationNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|InvalidApplicationMasterRequestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|AMRMTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ResourceManagerAdministrationProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AddToClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AddToClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CheckForDecommissioningNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CheckForDecommissioningNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshAdminAclsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshAdminAclsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshClusterMaxPriorityRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshClusterMaxPriorityResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResourcesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResourcesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshQueuesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshQueuesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshServiceAclsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshServiceAclsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshSuperUserGroupsConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshSuperUserGroupsConfigurationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshUserToGroupsMappingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshUserToGroupsMappingsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RemoveFromClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RemoveFromClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReplaceLabelsOnNodeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReplaceLabelsOnNodeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateNodeResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateNodeResourceResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodesToAttributesMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodesToAttributesMappingResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_comment
comment|/**  * Mock Resource Manager facade implementation that exposes all the methods  * implemented by the YARN RM. The behavior and the values returned by this mock  * implementation is expected by the Router/AMRMProxy unit test cases. So please  * change the implementation with care.  */
end_comment

begin_class
DECL|class|MockResourceManagerFacade
specifier|public
class|class
name|MockResourceManagerFacade
implements|implements
name|ApplicationClientProtocol
implements|,
name|ApplicationMasterProtocol
implements|,
name|ResourceManagerAdministrationProtocol
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MockResourceManagerFacade
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|applicationMap
specifier|private
name|HashSet
argument_list|<
name|ApplicationId
argument_list|>
name|applicationMap
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|keepContainerOnUams
specifier|private
name|HashSet
argument_list|<
name|ApplicationId
argument_list|>
name|keepContainerOnUams
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|applicationContainerIdMap
specifier|private
name|HashMap
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|List
argument_list|<
name|ContainerId
argument_list|>
argument_list|>
name|applicationContainerIdMap
init|=
operator|new
name|HashMap
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|List
argument_list|<
name|ContainerId
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|containerIndex
specifier|private
name|AtomicInteger
name|containerIndex
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|subClusterId
specifier|private
name|int
name|subClusterId
decl_stmt|;
DECL|field|applicationCounter
specifier|final
specifier|private
name|AtomicInteger
name|applicationCounter
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// True if the Mock RM is running, false otherwise.
comment|// This property allows us to write tests for specific scenario as Yarn RM
comment|// down e.g. network issue, failover.
DECL|field|isRunning
specifier|private
name|boolean
name|isRunning
decl_stmt|;
DECL|field|shouldReRegisterNext
specifier|private
name|boolean
name|shouldReRegisterNext
init|=
literal|false
decl_stmt|;
comment|// For unit test synchronization
DECL|field|syncObj
specifier|private
specifier|static
name|Object
name|syncObj
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
DECL|method|getSyncObj ()
specifier|public
specifier|static
name|Object
name|getSyncObj
parameter_list|()
block|{
return|return
name|syncObj
return|;
block|}
DECL|method|MockResourceManagerFacade (Configuration conf, int startContainerIndex)
specifier|public
name|MockResourceManagerFacade
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|int
name|startContainerIndex
parameter_list|)
block|{
name|this
argument_list|(
name|conf
argument_list|,
name|startContainerIndex
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|MockResourceManagerFacade (Configuration conf, int startContainerIndex, int subClusterId, boolean isRunning)
specifier|public
name|MockResourceManagerFacade
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|int
name|startContainerIndex
parameter_list|,
name|int
name|subClusterId
parameter_list|,
name|boolean
name|isRunning
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|containerIndex
operator|.
name|set
argument_list|(
name|startContainerIndex
argument_list|)
expr_stmt|;
name|this
operator|.
name|subClusterId
operator|=
name|subClusterId
expr_stmt|;
name|this
operator|.
name|isRunning
operator|=
name|isRunning
expr_stmt|;
block|}
DECL|method|setShouldReRegisterNext ()
specifier|public
name|void
name|setShouldReRegisterNext
parameter_list|()
block|{
name|shouldReRegisterNext
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|setRunningMode (boolean mode)
specifier|public
name|void
name|setRunningMode
parameter_list|(
name|boolean
name|mode
parameter_list|)
block|{
name|this
operator|.
name|isRunning
operator|=
name|mode
expr_stmt|;
block|}
DECL|method|getAppIdentifier ()
specifier|private
specifier|static
name|ApplicationAttemptId
name|getAppIdentifier
parameter_list|()
throws|throws
name|IOException
block|{
name|AMRMTokenIdentifier
name|result
init|=
literal|null
decl_stmt|;
name|UserGroupInformation
name|remoteUgi
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|TokenIdentifier
argument_list|>
name|tokenIds
init|=
name|remoteUgi
operator|.
name|getTokenIdentifiers
argument_list|()
decl_stmt|;
for|for
control|(
name|TokenIdentifier
name|tokenId
range|:
name|tokenIds
control|)
block|{
if|if
condition|(
name|tokenId
operator|instanceof
name|AMRMTokenIdentifier
condition|)
block|{
name|result
operator|=
operator|(
name|AMRMTokenIdentifier
operator|)
name|tokenId
expr_stmt|;
break|break;
block|}
block|}
return|return
name|result
operator|!=
literal|null
condition|?
name|result
operator|.
name|getApplicationAttemptId
argument_list|()
else|:
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|method|validateRunning ()
specifier|private
name|void
name|validateRunning
parameter_list|()
throws|throws
name|ConnectException
block|{
if|if
condition|(
operator|!
name|isRunning
condition|)
block|{
throw|throw
operator|new
name|ConnectException
argument_list|(
literal|"RM is stopped"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|registerApplicationMaster ( RegisterApplicationMasterRequest request)
specifier|public
name|RegisterApplicationMasterResponse
name|registerApplicationMaster
parameter_list|(
name|RegisterApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|getAppIdentifier
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Registering application attempt: "
operator|+
name|attemptId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Container
argument_list|>
name|containersFromPreviousAttempt
init|=
literal|null
decl_stmt|;
synchronized|synchronized
init|(
name|applicationContainerIdMap
init|)
block|{
if|if
condition|(
name|applicationContainerIdMap
operator|.
name|containsKey
argument_list|(
name|attemptId
argument_list|)
condition|)
block|{
if|if
condition|(
name|keepContainerOnUams
operator|.
name|contains
argument_list|(
name|attemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|)
condition|)
block|{
comment|// For UAM with the keepContainersFromPreviousAttempt flag, return all
comment|// running containers
name|containersFromPreviousAttempt
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|ContainerId
name|containerId
range|:
name|applicationContainerIdMap
operator|.
name|get
argument_list|(
name|attemptId
argument_list|)
control|)
block|{
name|containersFromPreviousAttempt
operator|.
name|add
argument_list|(
name|Container
operator|.
name|newInstance
argument_list|(
name|containerId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|shouldReRegisterNext
condition|)
block|{
throw|throw
operator|new
name|InvalidApplicationMasterRequestException
argument_list|(
name|AMRMClientUtils
operator|.
name|APP_ALREADY_REGISTERED_MESSAGE
argument_list|)
throw|;
block|}
block|}
else|else
block|{
comment|// Keep track of the containers that are returned to this application
name|applicationContainerIdMap
operator|.
name|put
argument_list|(
name|attemptId
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|ContainerId
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|shouldReRegisterNext
operator|=
literal|false
expr_stmt|;
comment|// Make sure we wait for certain test cases last in the method
synchronized|synchronized
init|(
name|syncObj
init|)
block|{
name|syncObj
operator|.
name|notifyAll
argument_list|()
expr_stmt|;
comment|// We reuse the port number to indicate whether the unit test want us to
comment|// wait here
if|if
condition|(
name|request
operator|.
name|getRpcPort
argument_list|()
operator|>
literal|1000
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Register call in RM start waiting"
argument_list|)
expr_stmt|;
try|try
block|{
name|syncObj
operator|.
name|wait
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Register call in RM wait finished"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Register call in RM wait interrupted"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|RegisterApplicationMasterResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|containersFromPreviousAttempt
argument_list|,
name|request
operator|.
name|getHost
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|finishApplicationMaster ( FinishApplicationMasterRequest request)
specifier|public
name|FinishApplicationMasterResponse
name|finishApplicationMaster
parameter_list|(
name|FinishApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|getAppIdentifier
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Finishing application attempt: "
operator|+
name|attemptId
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldReRegisterNext
condition|)
block|{
name|String
name|message
init|=
literal|"AM is not registered, should re-register."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|ApplicationMasterNotRegisteredException
argument_list|(
name|message
argument_list|)
throw|;
block|}
synchronized|synchronized
init|(
name|applicationContainerIdMap
init|)
block|{
comment|// Remove the containers that were being tracked for this application
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"The application id is NOT registered: "
operator|+
name|attemptId
argument_list|,
name|applicationContainerIdMap
operator|.
name|containsKey
argument_list|(
name|attemptId
argument_list|)
argument_list|)
expr_stmt|;
name|applicationContainerIdMap
operator|.
name|remove
argument_list|(
name|attemptId
argument_list|)
expr_stmt|;
block|}
return|return
name|FinishApplicationMasterResponse
operator|.
name|newInstance
argument_list|(
name|request
operator|.
name|getFinalApplicationStatus
argument_list|()
operator|==
name|FinalApplicationStatus
operator|.
name|SUCCEEDED
condition|?
literal|true
else|:
literal|false
argument_list|)
return|;
block|}
DECL|method|getApplicationId (int id)
specifier|protected
name|ApplicationId
name|getApplicationId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|12345
argument_list|,
name|id
argument_list|)
return|;
block|}
DECL|method|getApplicationAttemptId (int id)
specifier|protected
name|ApplicationAttemptId
name|getApplicationAttemptId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|getApplicationId
argument_list|(
name|id
argument_list|)
argument_list|,
literal|1
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
DECL|method|allocate (AllocateRequest request)
specifier|public
name|AllocateResponse
name|allocate
parameter_list|(
name|AllocateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|getAppIdentifier
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Allocate from application attempt: "
operator|+
name|attemptId
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldReRegisterNext
condition|)
block|{
name|String
name|message
init|=
literal|"AM is not registered, should re-register."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|ApplicationMasterNotRegisteredException
argument_list|(
name|message
argument_list|)
throw|;
block|}
name|ArrayList
argument_list|<
name|Container
argument_list|>
name|containerList
init|=
operator|new
name|ArrayList
argument_list|<
name|Container
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|getAskList
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ResourceRequest
name|rr
range|:
name|request
operator|.
name|getAskList
argument_list|()
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rr
operator|.
name|getNumContainers
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|getApplicationAttemptId
argument_list|(
literal|1
argument_list|)
argument_list|,
name|containerIndex
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
decl_stmt|;
name|Container
name|container
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|Container
operator|.
name|class
argument_list|)
decl_stmt|;
name|container
operator|.
name|setId
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
name|container
operator|.
name|setPriority
argument_list|(
name|rr
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
comment|// We don't use the node for running containers in the test cases. So
comment|// it is OK to hard code it to some dummy value
name|NodeId
name|nodeId
init|=
name|NodeId
operator|.
name|newInstance
argument_list|(
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|rr
operator|.
name|getResourceName
argument_list|()
argument_list|)
condition|?
name|rr
operator|.
name|getResourceName
argument_list|()
else|:
literal|"dummy"
argument_list|,
literal|1000
argument_list|)
decl_stmt|;
name|container
operator|.
name|setNodeId
argument_list|(
name|nodeId
argument_list|)
expr_stmt|;
name|container
operator|.
name|setResource
argument_list|(
name|rr
operator|.
name|getCapability
argument_list|()
argument_list|)
expr_stmt|;
name|containerList
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|applicationContainerIdMap
init|)
block|{
comment|// Keep track of the containers returned to this application. We
comment|// will need it in future
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"The application id is Not registered before allocate(): "
operator|+
name|attemptId
argument_list|,
name|applicationContainerIdMap
operator|.
name|containsKey
argument_list|(
name|attemptId
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ContainerId
argument_list|>
name|ids
init|=
name|applicationContainerIdMap
operator|.
name|get
argument_list|(
name|attemptId
argument_list|)
decl_stmt|;
name|ids
operator|.
name|add
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|List
argument_list|<
name|ContainerStatus
argument_list|>
name|completedList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|getReleaseList
argument_list|()
operator|!=
literal|null
operator|&&
name|request
operator|.
name|getReleaseList
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Releasing containers: "
operator|+
name|request
operator|.
name|getReleaseList
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|applicationContainerIdMap
init|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"The application id is not registered before allocate(): "
operator|+
name|attemptId
argument_list|,
name|applicationContainerIdMap
operator|.
name|containsKey
argument_list|(
name|attemptId
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ContainerId
argument_list|>
name|ids
init|=
name|applicationContainerIdMap
operator|.
name|get
argument_list|(
name|attemptId
argument_list|)
decl_stmt|;
for|for
control|(
name|ContainerId
name|id
range|:
name|request
operator|.
name|getReleaseList
argument_list|()
control|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ContainerId
name|c
range|:
name|ids
control|)
block|{
if|if
condition|(
name|c
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"ContainerId "
operator|+
name|id
operator|+
literal|" being released is not valid for application: "
operator|+
name|conf
operator|.
name|get
argument_list|(
literal|"AMRMTOKEN"
argument_list|)
argument_list|,
name|found
argument_list|)
expr_stmt|;
name|ids
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|completedList
operator|.
name|add
argument_list|(
name|ContainerStatus
operator|.
name|newInstance
argument_list|(
name|id
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Allocating containers: "
operator|+
name|containerList
operator|.
name|size
argument_list|()
operator|+
literal|" for application attempt: "
operator|+
name|conf
operator|.
name|get
argument_list|(
literal|"AMRMTOKEN"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Always issue a new AMRMToken as if RM rolled master key
name|Token
name|newAMRMToken
init|=
name|Token
operator|.
name|newInstance
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|""
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|""
argument_list|)
decl_stmt|;
return|return
name|AllocateResponse
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|completedList
argument_list|,
name|containerList
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|NodeReport
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
name|AMCommand
operator|.
name|AM_RESYNC
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|NMToken
argument_list|>
argument_list|()
argument_list|,
name|newAMRMToken
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|UpdatedContainer
argument_list|>
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport ( GetApplicationReportRequest request)
specifier|public
name|GetApplicationReportResponse
name|getApplicationReport
parameter_list|(
name|GetApplicationReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|GetApplicationReportResponse
name|response
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetApplicationReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|ApplicationReport
name|report
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|report
operator|.
name|setYarnApplicationState
argument_list|(
name|YarnApplicationState
operator|.
name|ACCEPTED
argument_list|)
expr_stmt|;
name|report
operator|.
name|setApplicationId
argument_list|(
name|request
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
name|report
operator|.
name|setCurrentApplicationAttemptId
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|request
operator|.
name|getApplicationId
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|report
operator|.
name|setAMRMToken
argument_list|(
name|Token
operator|.
name|newInstance
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|""
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setApplicationReport
argument_list|(
name|report
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptReport ( GetApplicationAttemptReportRequest request)
specifier|public
name|GetApplicationAttemptReportResponse
name|getApplicationAttemptReport
parameter_list|(
name|GetApplicationAttemptReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|GetApplicationAttemptReportResponse
name|response
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetApplicationAttemptReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|ApplicationAttemptReport
name|report
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationAttemptReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|report
operator|.
name|setApplicationAttemptId
argument_list|(
name|request
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|)
expr_stmt|;
name|report
operator|.
name|setYarnApplicationAttemptState
argument_list|(
name|YarnApplicationAttemptState
operator|.
name|LAUNCHED
argument_list|)
expr_stmt|;
name|response
operator|.
name|setApplicationAttemptReport
argument_list|(
name|report
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|getNewApplication ( GetNewApplicationRequest request)
specifier|public
name|GetNewApplicationResponse
name|getNewApplication
parameter_list|(
name|GetNewApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetNewApplicationResponse
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|applicationCounter
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|submitApplication ( SubmitApplicationRequest request)
specifier|public
name|SubmitApplicationResponse
name|submitApplication
parameter_list|(
name|SubmitApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationId
name|appId
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|appId
operator|=
name|request
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getApplicationId
argument_list|()
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Application submitted: "
operator|+
name|appId
argument_list|)
expr_stmt|;
name|applicationMap
operator|.
name|add
argument_list|(
name|appId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getUnmanagedAM
argument_list|()
operator|||
name|request
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getKeepContainersAcrossApplicationAttempts
argument_list|()
condition|)
block|{
name|keepContainerOnUams
operator|.
name|add
argument_list|(
name|appId
argument_list|)
expr_stmt|;
block|}
return|return
name|SubmitApplicationResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|forceKillApplication ( KillApplicationRequest request)
specifier|public
name|KillApplicationResponse
name|forceKillApplication
parameter_list|(
name|KillApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationId
name|appId
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|getApplicationId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|appId
operator|=
name|request
operator|.
name|getApplicationId
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|applicationMap
operator|.
name|remove
argument_list|(
name|appId
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|ApplicationNotFoundException
argument_list|(
literal|"Trying to kill an absent application: "
operator|+
name|appId
argument_list|)
throw|;
block|}
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Force killing application: "
operator|+
name|appId
argument_list|)
expr_stmt|;
return|return
name|KillApplicationResponse
operator|.
name|newInstance
argument_list|(
literal|true
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterMetrics ( GetClusterMetricsRequest request)
specifier|public
name|GetClusterMetricsResponse
name|getClusterMetrics
parameter_list|(
name|GetClusterMetricsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|YarnClusterMetrics
name|clusterMetrics
init|=
name|YarnClusterMetrics
operator|.
name|newInstance
argument_list|(
literal|1
argument_list|)
decl_stmt|;
return|return
name|GetClusterMetricsResponse
operator|.
name|newInstance
argument_list|(
name|clusterMetrics
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplications (GetApplicationsRequest request)
specifier|public
name|GetApplicationsResponse
name|getApplications
parameter_list|(
name|GetApplicationsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetApplicationsResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodes (GetClusterNodesRequest request)
specifier|public
name|GetClusterNodesResponse
name|getClusterNodes
parameter_list|(
name|GetClusterNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetClusterNodesResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueInfo (GetQueueInfoRequest request)
specifier|public
name|GetQueueInfoResponse
name|getQueueInfo
parameter_list|(
name|GetQueueInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetQueueInfoResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueUserAcls ( GetQueueUserAclsInfoRequest request)
specifier|public
name|GetQueueUserAclsInfoResponse
name|getQueueUserAcls
parameter_list|(
name|GetQueueUserAclsInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetQueueUserAclsInfoResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDelegationToken ( GetDelegationTokenRequest request)
specifier|public
name|GetDelegationTokenResponse
name|getDelegationToken
parameter_list|(
name|GetDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetDelegationTokenResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|renewDelegationToken ( RenewDelegationTokenRequest request)
specifier|public
name|RenewDelegationTokenResponse
name|renewDelegationToken
parameter_list|(
name|RenewDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RenewDelegationTokenResponse
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|cancelDelegationToken ( CancelDelegationTokenRequest request)
specifier|public
name|CancelDelegationTokenResponse
name|cancelDelegationToken
parameter_list|(
name|CancelDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|CancelDelegationTokenResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|moveApplicationAcrossQueues ( MoveApplicationAcrossQueuesRequest request)
specifier|public
name|MoveApplicationAcrossQueuesResponse
name|moveApplicationAcrossQueues
parameter_list|(
name|MoveApplicationAcrossQueuesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|MoveApplicationAcrossQueuesResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttempts ( GetApplicationAttemptsRequest request)
specifier|public
name|GetApplicationAttemptsResponse
name|getApplicationAttempts
parameter_list|(
name|GetApplicationAttemptsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetApplicationAttemptsResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerReport ( GetContainerReportRequest request)
specifier|public
name|GetContainerReportResponse
name|getContainerReport
parameter_list|(
name|GetContainerReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetContainerReportResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainers (GetContainersRequest request)
specifier|public
name|GetContainersResponse
name|getContainers
parameter_list|(
name|GetContainersRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|request
operator|.
name|getApplicationAttemptId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|containers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|applicationContainerIdMap
init|)
block|{
comment|// Return the list of running containers that were being tracked for this
comment|// application
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"The application id is NOT registered: "
operator|+
name|attemptId
argument_list|,
name|applicationContainerIdMap
operator|.
name|containsKey
argument_list|(
name|attemptId
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ContainerId
argument_list|>
name|ids
init|=
name|applicationContainerIdMap
operator|.
name|get
argument_list|(
name|attemptId
argument_list|)
decl_stmt|;
for|for
control|(
name|ContainerId
name|c
range|:
name|ids
control|)
block|{
name|containers
operator|.
name|add
argument_list|(
name|ContainerReport
operator|.
name|newInstance
argument_list|(
name|c
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|GetContainersResponse
operator|.
name|newInstance
argument_list|(
name|containers
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|submitReservation ( ReservationSubmissionRequest request)
specifier|public
name|ReservationSubmissionResponse
name|submitReservation
parameter_list|(
name|ReservationSubmissionRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|ReservationSubmissionResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|listReservations ( ReservationListRequest request)
specifier|public
name|ReservationListResponse
name|listReservations
parameter_list|(
name|ReservationListRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|ReservationListResponse
operator|.
name|newInstance
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ReservationAllocationState
argument_list|>
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateReservation ( ReservationUpdateRequest request)
specifier|public
name|ReservationUpdateResponse
name|updateReservation
parameter_list|(
name|ReservationUpdateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|ReservationUpdateResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|deleteReservation ( ReservationDeleteRequest request)
specifier|public
name|ReservationDeleteResponse
name|deleteReservation
parameter_list|(
name|ReservationDeleteRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|ReservationDeleteResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getNodeToLabels ( GetNodesToLabelsRequest request)
specifier|public
name|GetNodesToLabelsResponse
name|getNodeToLabels
parameter_list|(
name|GetNodesToLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetNodesToLabelsResponse
operator|.
name|newInstance
argument_list|(
operator|new
name|HashMap
argument_list|<
name|NodeId
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodeLabels ( GetClusterNodeLabelsRequest request)
specifier|public
name|GetClusterNodeLabelsResponse
name|getClusterNodeLabels
parameter_list|(
name|GetClusterNodeLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetClusterNodeLabelsResponse
operator|.
name|newInstance
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|NodeLabel
argument_list|>
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getLabelsToNodes ( GetLabelsToNodesRequest request)
specifier|public
name|GetLabelsToNodesResponse
name|getLabelsToNodes
parameter_list|(
name|GetLabelsToNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetLabelsToNodesResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getNewReservation ( GetNewReservationRequest request)
specifier|public
name|GetNewReservationResponse
name|getNewReservation
parameter_list|(
name|GetNewReservationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|GetNewReservationResponse
operator|.
name|newInstance
argument_list|(
name|ReservationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|failApplicationAttempt ( FailApplicationAttemptRequest request)
specifier|public
name|FailApplicationAttemptResponse
name|failApplicationAttempt
parameter_list|(
name|FailApplicationAttemptRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|FailApplicationAttemptResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|updateApplicationPriority ( UpdateApplicationPriorityRequest request)
specifier|public
name|UpdateApplicationPriorityResponse
name|updateApplicationPriority
parameter_list|(
name|UpdateApplicationPriorityRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|UpdateApplicationPriorityResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|signalToContainer ( SignalContainerRequest request)
specifier|public
name|SignalContainerResponse
name|signalToContainer
parameter_list|(
name|SignalContainerRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
operator|new
name|SignalContainerResponsePBImpl
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|updateApplicationTimeouts ( UpdateApplicationTimeoutsRequest request)
specifier|public
name|UpdateApplicationTimeoutsResponse
name|updateApplicationTimeouts
parameter_list|(
name|UpdateApplicationTimeoutsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|UpdateApplicationTimeoutsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshQueues (RefreshQueuesRequest request)
specifier|public
name|RefreshQueuesResponse
name|refreshQueues
parameter_list|(
name|RefreshQueuesRequest
name|request
parameter_list|)
throws|throws
name|StandbyException
throws|,
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshQueuesResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshNodes (RefreshNodesRequest request)
specifier|public
name|RefreshNodesResponse
name|refreshNodes
parameter_list|(
name|RefreshNodesRequest
name|request
parameter_list|)
throws|throws
name|StandbyException
throws|,
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshNodesResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshSuperUserGroupsConfiguration ( RefreshSuperUserGroupsConfigurationRequest request)
specifier|public
name|RefreshSuperUserGroupsConfigurationResponse
name|refreshSuperUserGroupsConfiguration
parameter_list|(
name|RefreshSuperUserGroupsConfigurationRequest
name|request
parameter_list|)
throws|throws
name|StandbyException
throws|,
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshSuperUserGroupsConfigurationResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshUserToGroupsMappings ( RefreshUserToGroupsMappingsRequest request)
specifier|public
name|RefreshUserToGroupsMappingsResponse
name|refreshUserToGroupsMappings
parameter_list|(
name|RefreshUserToGroupsMappingsRequest
name|request
parameter_list|)
throws|throws
name|StandbyException
throws|,
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshUserToGroupsMappingsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshAdminAcls ( RefreshAdminAclsRequest request)
specifier|public
name|RefreshAdminAclsResponse
name|refreshAdminAcls
parameter_list|(
name|RefreshAdminAclsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshAdminAclsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshServiceAcls ( RefreshServiceAclsRequest request)
specifier|public
name|RefreshServiceAclsResponse
name|refreshServiceAcls
parameter_list|(
name|RefreshServiceAclsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshServiceAclsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|updateNodeResource ( UpdateNodeResourceRequest request)
specifier|public
name|UpdateNodeResourceResponse
name|updateNodeResource
parameter_list|(
name|UpdateNodeResourceRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|UpdateNodeResourceResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|refreshNodesResources ( RefreshNodesResourcesRequest request)
specifier|public
name|RefreshNodesResourcesResponse
name|refreshNodesResources
parameter_list|(
name|RefreshNodesResourcesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshNodesResourcesResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|addToClusterNodeLabels ( AddToClusterNodeLabelsRequest request)
specifier|public
name|AddToClusterNodeLabelsResponse
name|addToClusterNodeLabels
parameter_list|(
name|AddToClusterNodeLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|AddToClusterNodeLabelsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|removeFromClusterNodeLabels ( RemoveFromClusterNodeLabelsRequest request)
specifier|public
name|RemoveFromClusterNodeLabelsResponse
name|removeFromClusterNodeLabels
parameter_list|(
name|RemoveFromClusterNodeLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RemoveFromClusterNodeLabelsResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|replaceLabelsOnNode ( ReplaceLabelsOnNodeRequest request)
specifier|public
name|ReplaceLabelsOnNodeResponse
name|replaceLabelsOnNode
parameter_list|(
name|ReplaceLabelsOnNodeRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|ReplaceLabelsOnNodeResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|checkForDecommissioningNodes ( CheckForDecommissioningNodesRequest checkForDecommissioningNodesRequest)
specifier|public
name|CheckForDecommissioningNodesResponse
name|checkForDecommissioningNodes
parameter_list|(
name|CheckForDecommissioningNodesRequest
name|checkForDecommissioningNodesRequest
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|CheckForDecommissioningNodesResponse
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|refreshClusterMaxPriority ( RefreshClusterMaxPriorityRequest request)
specifier|public
name|RefreshClusterMaxPriorityResponse
name|refreshClusterMaxPriority
parameter_list|(
name|RefreshClusterMaxPriorityRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
name|RefreshClusterMaxPriorityResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getGroupsForUser (String user)
specifier|public
name|String
index|[]
name|getGroupsForUser
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|validateRunning
argument_list|()
expr_stmt|;
return|return
operator|new
name|String
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceProfiles ( GetAllResourceProfilesRequest request)
specifier|public
name|GetAllResourceProfilesResponse
name|getResourceProfiles
parameter_list|(
name|GetAllResourceProfilesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceProfile ( GetResourceProfileRequest request)
specifier|public
name|GetResourceProfileResponse
name|getResourceProfile
parameter_list|(
name|GetResourceProfileRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceTypeInfo ( GetAllResourceTypeInfoRequest request)
specifier|public
name|GetAllResourceTypeInfoResponse
name|getResourceTypeInfo
parameter_list|(
name|GetAllResourceTypeInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributesToNodes ( GetAttributesToNodesRequest request)
specifier|public
name|GetAttributesToNodesResponse
name|getAttributesToNodes
parameter_list|(
name|GetAttributesToNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodeAttributes ( GetClusterNodeAttributesRequest request)
specifier|public
name|GetClusterNodeAttributesResponse
name|getClusterNodeAttributes
parameter_list|(
name|GetClusterNodeAttributesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getNodesToAttributes ( GetNodesToAttributesRequest request)
specifier|public
name|GetNodesToAttributesResponse
name|getNodesToAttributes
parameter_list|(
name|GetNodesToAttributesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|mapAttributesToNodes (NodesToAttributesMappingRequest request)
specifier|public
name|NodesToAttributesMappingResponse
name|mapAttributesToNodes
parameter_list|(
name|NodesToAttributesMappingRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

