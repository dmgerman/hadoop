begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationMasterProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerUpdateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ExecutionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ExecutionTypeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceBlacklistRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|UpdateContainerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|UpdatedContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|ApplicationMasterNotRegisteredException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|AMRMClientRelayer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|AMRMClientRelayerMetrics
operator|.
name|RequestType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Unit test for AMRMClientRelayer.  */
end_comment

begin_class
DECL|class|TestAMRMClientRelayerMetrics
specifier|public
class|class
name|TestAMRMClientRelayerMetrics
block|{
comment|/**    * Mock AMS for easier testing and mocking of request/responses.    */
DECL|class|MockApplicationMasterService
specifier|public
specifier|static
class|class
name|MockApplicationMasterService
implements|implements
name|ApplicationMasterProtocol
block|{
DECL|field|failover
specifier|private
name|boolean
name|failover
init|=
literal|false
decl_stmt|;
DECL|field|exception
specifier|private
name|boolean
name|exception
init|=
literal|false
decl_stmt|;
DECL|field|lastAsk
specifier|private
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|lastAsk
decl_stmt|;
DECL|field|lastRelease
specifier|private
name|List
argument_list|<
name|ContainerId
argument_list|>
name|lastRelease
decl_stmt|;
DECL|field|lastUpdates
specifier|private
name|List
argument_list|<
name|UpdateContainerRequest
argument_list|>
name|lastUpdates
decl_stmt|;
DECL|field|lastBlacklistAdditions
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|lastBlacklistAdditions
decl_stmt|;
DECL|field|lastBlacklistRemovals
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|lastBlacklistRemovals
decl_stmt|;
DECL|field|response
specifier|private
name|AllocateResponse
name|response
init|=
name|AllocateResponse
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|NodeReport
argument_list|>
argument_list|()
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|registerApplicationMaster ( RegisterApplicationMasterRequest request)
specifier|public
name|RegisterApplicationMasterResponse
name|registerApplicationMaster
parameter_list|(
name|RegisterApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|finishApplicationMaster ( FinishApplicationMasterRequest request)
specifier|public
name|FinishApplicationMasterResponse
name|finishApplicationMaster
parameter_list|(
name|FinishApplicationMasterRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|failover
condition|)
block|{
name|this
operator|.
name|failover
operator|=
literal|false
expr_stmt|;
throw|throw
operator|new
name|ApplicationMasterNotRegisteredException
argument_list|(
literal|"Mock RM restarted"
argument_list|)
throw|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|allocate (AllocateRequest request)
specifier|public
name|AllocateResponse
name|allocate
parameter_list|(
name|AllocateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|failover
condition|)
block|{
name|this
operator|.
name|failover
operator|=
literal|false
expr_stmt|;
throw|throw
operator|new
name|ApplicationMasterNotRegisteredException
argument_list|(
literal|"Mock RM restarted"
argument_list|)
throw|;
block|}
if|if
condition|(
name|this
operator|.
name|exception
condition|)
block|{
name|this
operator|.
name|exception
operator|=
literal|false
expr_stmt|;
throw|throw
operator|new
name|YarnException
argument_list|(
literal|"Mock RM encountered exception"
argument_list|)
throw|;
block|}
name|this
operator|.
name|lastAsk
operator|=
name|request
operator|.
name|getAskList
argument_list|()
expr_stmt|;
name|this
operator|.
name|lastRelease
operator|=
name|request
operator|.
name|getReleaseList
argument_list|()
expr_stmt|;
name|this
operator|.
name|lastUpdates
operator|=
name|request
operator|.
name|getUpdateRequests
argument_list|()
expr_stmt|;
name|this
operator|.
name|lastBlacklistAdditions
operator|=
name|request
operator|.
name|getResourceBlacklistRequest
argument_list|()
operator|.
name|getBlacklistAdditions
argument_list|()
expr_stmt|;
name|this
operator|.
name|lastBlacklistRemovals
operator|=
name|request
operator|.
name|getResourceBlacklistRequest
argument_list|()
operator|.
name|getBlacklistRemovals
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
DECL|method|setFailoverFlag ()
specifier|public
name|void
name|setFailoverFlag
parameter_list|()
block|{
name|this
operator|.
name|failover
operator|=
literal|true
expr_stmt|;
block|}
block|}
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|mockAMS
specifier|private
name|MockApplicationMasterService
name|mockAMS
decl_stmt|;
DECL|field|homeID
specifier|private
name|String
name|homeID
init|=
literal|"home"
decl_stmt|;
DECL|field|homeRelayer
specifier|private
name|AMRMClientRelayer
name|homeRelayer
decl_stmt|;
DECL|field|uamID
specifier|private
name|String
name|uamID
init|=
literal|"uam"
decl_stmt|;
DECL|field|uamRelayer
specifier|private
name|AMRMClientRelayer
name|uamRelayer
decl_stmt|;
DECL|field|asks
specifier|private
name|List
argument_list|<
name|ResourceRequest
argument_list|>
name|asks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|releases
specifier|private
name|List
argument_list|<
name|ContainerId
argument_list|>
name|releases
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|updates
specifier|private
name|List
argument_list|<
name|UpdateContainerRequest
argument_list|>
name|updates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|blacklistAdditions
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|blacklistAdditions
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|blacklistRemoval
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|blacklistRemoval
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|this
operator|.
name|mockAMS
operator|=
operator|new
name|MockApplicationMasterService
argument_list|()
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|=
operator|new
name|AMRMClientRelayer
argument_list|(
name|this
operator|.
name|mockAMS
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|this
operator|.
name|homeID
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|registerApplicationMaster
argument_list|(
name|RegisterApplicationMasterRequest
operator|.
name|newInstance
argument_list|(
literal|""
argument_list|,
literal|0
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|uamRelayer
operator|=
operator|new
name|AMRMClientRelayer
argument_list|(
name|this
operator|.
name|mockAMS
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|this
operator|.
name|uamID
argument_list|)
expr_stmt|;
name|this
operator|.
name|uamRelayer
operator|.
name|registerApplicationMaster
argument_list|(
name|RegisterApplicationMasterRequest
operator|.
name|newInstance
argument_list|(
literal|""
argument_list|,
literal|0
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|clearAllocateRequestLists
argument_list|()
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Opportunistic
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Demote
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Opportunistic
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|setClientPending
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Demote
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|getAllocateRequest ()
specifier|private
name|AllocateRequest
name|getAllocateRequest
parameter_list|()
block|{
comment|// Need to create a new one every time because rather than directly
comment|// referring the lists, the protobuf impl makes a copy of the lists
return|return
name|AllocateRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|responseId
argument_list|(
literal|0
argument_list|)
operator|.
name|progress
argument_list|(
literal|0
argument_list|)
operator|.
name|askList
argument_list|(
name|asks
argument_list|)
operator|.
name|releaseList
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|releases
argument_list|)
argument_list|)
operator|.
name|resourceBlacklistRequest
argument_list|(
name|ResourceBlacklistRequest
operator|.
name|newInstance
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|blacklistAdditions
argument_list|)
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|blacklistRemoval
argument_list|)
argument_list|)
argument_list|)
operator|.
name|updateRequests
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|this
operator|.
name|updates
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|clearAllocateRequestLists ()
specifier|private
name|void
name|clearAllocateRequestLists
parameter_list|()
block|{
name|this
operator|.
name|asks
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|releases
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|blacklistAdditions
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|blacklistRemoval
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|createPromote (int id)
specifier|private
specifier|static
name|UpdateContainerRequest
name|createPromote
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|UpdateContainerRequest
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|createContainerId
argument_list|(
name|id
argument_list|)
argument_list|,
name|ContainerUpdateType
operator|.
name|PROMOTE_EXECUTION_TYPE
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|)
return|;
block|}
DECL|method|createDemote (int id)
specifier|private
specifier|static
name|UpdateContainerRequest
name|createDemote
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|UpdateContainerRequest
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|createContainerId
argument_list|(
name|id
argument_list|)
argument_list|,
name|ContainerUpdateType
operator|.
name|DEMOTE_EXECUTION_TYPE
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|ExecutionType
operator|.
name|OPPORTUNISTIC
argument_list|)
return|;
block|}
DECL|method|createContainerId (int id)
specifier|private
specifier|static
name|ContainerId
name|createContainerId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|,
name|id
argument_list|)
return|;
block|}
DECL|method|createResourceRequest (long id, String resource, int memory, int vCores, int priority, ExecutionType execType, int containers)
specifier|public
name|ResourceRequest
name|createResourceRequest
parameter_list|(
name|long
name|id
parameter_list|,
name|String
name|resource
parameter_list|,
name|int
name|memory
parameter_list|,
name|int
name|vCores
parameter_list|,
name|int
name|priority
parameter_list|,
name|ExecutionType
name|execType
parameter_list|,
name|int
name|containers
parameter_list|)
block|{
name|ResourceRequest
name|req
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|req
operator|.
name|setAllocationRequestId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|req
operator|.
name|setResourceName
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|req
operator|.
name|setCapability
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
name|memory
argument_list|,
name|vCores
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|setPriority
argument_list|(
name|Priority
operator|.
name|newInstance
argument_list|(
name|priority
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|setExecutionTypeRequest
argument_list|(
name|ExecutionTypeRequest
operator|.
name|newInstance
argument_list|(
name|execType
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNumContainers
argument_list|(
name|containers
argument_list|)
expr_stmt|;
return|return
name|req
return|;
block|}
annotation|@
name|Test
DECL|method|testGPending ()
specifier|public
name|void
name|testGPending
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// Ask for two containers, one with location preference
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"node"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"rack"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
name|ResourceRequest
operator|.
name|ANY
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Ask from the uam
name|this
operator|.
name|uamRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the any to ask for an extra container
name|this
operator|.
name|asks
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|setNumContainers
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the any to ask to pretend a container was allocated
name|this
operator|.
name|asks
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|setNumContainers
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPromotePending ()
specifier|public
name|void
name|testPromotePending
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// Ask to promote 3 containers
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Demote 2 containers, one of which is pending promote
name|this
operator|.
name|updates
operator|.
name|remove
argument_list|(
name|createPromote
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createDemote
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createDemote
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Let the RM respond with two successful promotions, one of which
comment|// was pending promote
name|List
argument_list|<
name|UpdatedContainer
argument_list|>
name|updated
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|updated
operator|.
name|add
argument_list|(
name|UpdatedContainer
operator|.
name|newInstance
argument_list|(
name|ContainerUpdateType
operator|.
name|PROMOTE_EXECUTION_TYPE
argument_list|,
name|Container
operator|.
name|newInstance
argument_list|(
name|createContainerId
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|updated
operator|.
name|add
argument_list|(
name|UpdatedContainer
operator|.
name|newInstance
argument_list|(
name|ContainerUpdateType
operator|.
name|PROMOTE_EXECUTION_TYPE
argument_list|,
name|Container
operator|.
name|newInstance
argument_list|(
name|createContainerId
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockAMS
operator|.
name|response
operator|.
name|setUpdatedContainers
argument_list|(
name|updated
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Remove the promoted container and clean up response
name|this
operator|.
name|mockAMS
operator|.
name|response
operator|.
name|getUpdatedContainers
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|remove
argument_list|(
name|createPromote
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Let the RM respond with two completed containers, one of which was
comment|// pending promote
name|List
argument_list|<
name|ContainerStatus
argument_list|>
name|completed
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|completed
operator|.
name|add
argument_list|(
name|ContainerStatus
operator|.
name|newInstance
argument_list|(
name|createContainerId
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|completed
operator|.
name|add
argument_list|(
name|ContainerStatus
operator|.
name|newInstance
argument_list|(
name|createContainerId
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|mockAMS
operator|.
name|response
operator|.
name|setCompletedContainersStatuses
argument_list|(
name|completed
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCleanUpOnFinish ()
specifier|public
name|void
name|testCleanUpOnFinish
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// Ask for two containers, one with location preference
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"node"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"rack"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
name|ResourceRequest
operator|.
name|ANY
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Ask to promote 3 containers
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|updates
operator|.
name|add
argument_list|(
name|createPromote
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Run the allocate call to start tracking pending
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
comment|// After finish, the metrics should reset to zero
name|this
operator|.
name|homeRelayer
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Promote
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFailover ()
specifier|public
name|void
name|testFailover
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// Ask for two containers, one with location preference
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"node"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
literal|"rack"
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|0
argument_list|,
name|ResourceRequest
operator|.
name|ANY
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|previousSuccess
init|=
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
name|long
name|previousFailover
init|=
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
comment|// Set failover to trigger
name|mockAMS
operator|.
name|failover
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
comment|// The failover metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailover
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The success metric should be incremented once
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousSuccess
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Ask from the uam
name|this
operator|.
name|uamRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the any to ask for an extra container
name|this
operator|.
name|asks
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|setNumContainers
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|mockAMS
operator|.
name|failover
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
comment|// The failover metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailover
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The success metric should be incremented once
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousSuccess
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the any to ask to pretend a container was allocated
name|this
operator|.
name|asks
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|setNumContainers
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|mockAMS
operator|.
name|failover
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
comment|// The failover metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailover
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The success metric should be incremented once
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousSuccess
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|previousFailure
init|=
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatFailureMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
name|mockAMS
operator|.
name|exception
operator|=
literal|true
expr_stmt|;
try|try
block|{
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|YarnException
name|e
parameter_list|)
block|{     }
comment|// The failover metric should not be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
name|previousFailover
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The success metric should not be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
name|previousSuccess
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The failure metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailure
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatFailureMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|mockAMS
operator|.
name|failover
operator|=
literal|true
expr_stmt|;
name|mockAMS
operator|.
name|exception
operator|=
literal|true
expr_stmt|;
try|try
block|{
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|YarnException
name|e
parameter_list|)
block|{     }
comment|// The failover metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailover
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRMMasterSlaveSwitchMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The success metric should not be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
name|previousSuccess
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatSuccessMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// The failure metric should be incremented
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|++
name|previousFailure
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getHeartbeatFailureMetric
argument_list|(
name|homeID
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNewEmptyRequest ()
specifier|public
name|void
name|testNewEmptyRequest
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// Ask for zero containers
name|this
operator|.
name|asks
operator|.
name|add
argument_list|(
name|createResourceRequest
argument_list|(
literal|1
argument_list|,
name|ResourceRequest
operator|.
name|ANY
argument_list|,
literal|2048
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|ExecutionType
operator|.
name|GUARANTEED
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|homeRelayer
operator|.
name|allocate
argument_list|(
name|getAllocateRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|homeID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|AMRMClientRelayerMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getPendingMetric
argument_list|(
name|uamID
argument_list|,
name|RequestType
operator|.
name|Guaranteed
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

