begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.security.http
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|security
operator|.
name|http
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationFilter
import|;
end_import

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|RMAuthenticationFilter
specifier|public
class|class
name|RMAuthenticationFilter
extends|extends
name|AuthenticationFilter
block|{
DECL|field|AUTH_HANDLER_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|AUTH_HANDLER_PROPERTY
init|=
literal|"yarn.resourcemanager.authentication-handler"
decl_stmt|;
DECL|method|RMAuthenticationFilter ()
specifier|public
name|RMAuthenticationFilter
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|getConfiguration (String configPrefix, FilterConfig filterConfig)
specifier|protected
name|Properties
name|getConfiguration
parameter_list|(
name|String
name|configPrefix
parameter_list|,
name|FilterConfig
name|filterConfig
parameter_list|)
throws|throws
name|ServletException
block|{
comment|// In yarn-site.xml, we can simply set type to "kerberos". However, we need
comment|// to replace the name here to use the customized Kerberos + DT service
comment|// instead of the standard Kerberos handler.
name|Properties
name|properties
init|=
name|super
operator|.
name|getConfiguration
argument_list|(
name|configPrefix
argument_list|,
name|filterConfig
argument_list|)
decl_stmt|;
name|String
name|yarnAuthHandler
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|AUTH_HANDLER_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|yarnAuthHandler
operator|==
literal|null
operator|||
name|yarnAuthHandler
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// if http auth type is simple, the default authentication filter
comment|// will handle it, else throw an exception
if|if
condition|(
operator|!
name|properties
operator|.
name|getProperty
argument_list|(
name|AUTH_TYPE
argument_list|)
operator|.
name|equals
argument_list|(
literal|"simple"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Authentication handler class is empty"
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|properties
operator|.
name|getProperty
argument_list|(
name|AUTH_TYPE
argument_list|)
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"kerberos"
argument_list|)
condition|)
block|{
name|properties
operator|.
name|setProperty
argument_list|(
name|AUTH_TYPE
argument_list|,
name|yarnAuthHandler
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
block|}
end_class

end_unit

