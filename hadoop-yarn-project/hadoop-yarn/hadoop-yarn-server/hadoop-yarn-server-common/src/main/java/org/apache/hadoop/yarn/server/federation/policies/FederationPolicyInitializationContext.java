begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.policies
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|resolver
operator|.
name|SubClusterResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterPolicyConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|utils
operator|.
name|FederationStateStoreFacade
import|;
end_import

begin_comment
comment|/**  * Context to (re)initialize a {@code FederationAMRMProxyPolicy} and {@code  * FederationRouterPolicy}.  */
end_comment

begin_class
DECL|class|FederationPolicyInitializationContext
specifier|public
class|class
name|FederationPolicyInitializationContext
block|{
DECL|field|federationPolicyConfiguration
specifier|private
name|SubClusterPolicyConfiguration
name|federationPolicyConfiguration
decl_stmt|;
DECL|field|federationSubclusterResolver
specifier|private
name|SubClusterResolver
name|federationSubclusterResolver
decl_stmt|;
DECL|field|federationStateStoreFacade
specifier|private
name|FederationStateStoreFacade
name|federationStateStoreFacade
decl_stmt|;
DECL|field|homeSubcluster
specifier|private
name|SubClusterId
name|homeSubcluster
decl_stmt|;
DECL|method|FederationPolicyInitializationContext ()
specifier|public
name|FederationPolicyInitializationContext
parameter_list|()
block|{
name|federationPolicyConfiguration
operator|=
literal|null
expr_stmt|;
name|federationSubclusterResolver
operator|=
literal|null
expr_stmt|;
name|federationStateStoreFacade
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|FederationPolicyInitializationContext ( SubClusterPolicyConfiguration policy, SubClusterResolver resolver, FederationStateStoreFacade storeFacade)
specifier|public
name|FederationPolicyInitializationContext
parameter_list|(
name|SubClusterPolicyConfiguration
name|policy
parameter_list|,
name|SubClusterResolver
name|resolver
parameter_list|,
name|FederationStateStoreFacade
name|storeFacade
parameter_list|)
block|{
name|this
operator|.
name|federationPolicyConfiguration
operator|=
name|policy
expr_stmt|;
name|this
operator|.
name|federationSubclusterResolver
operator|=
name|resolver
expr_stmt|;
name|this
operator|.
name|federationStateStoreFacade
operator|=
name|storeFacade
expr_stmt|;
block|}
comment|/**    * Getter for the {@link SubClusterPolicyConfiguration}.    *    * @return the {@link SubClusterPolicyConfiguration} to be used for    *         initialization.    */
DECL|method|getSubClusterPolicyConfiguration ()
specifier|public
name|SubClusterPolicyConfiguration
name|getSubClusterPolicyConfiguration
parameter_list|()
block|{
return|return
name|federationPolicyConfiguration
return|;
block|}
comment|/**    * Setter for the {@link SubClusterPolicyConfiguration}.    *    * @param fedPolicyConfiguration the {@link SubClusterPolicyConfiguration} to    *          be used for initialization.    */
DECL|method|setSubClusterPolicyConfiguration ( SubClusterPolicyConfiguration fedPolicyConfiguration)
specifier|public
name|void
name|setSubClusterPolicyConfiguration
parameter_list|(
name|SubClusterPolicyConfiguration
name|fedPolicyConfiguration
parameter_list|)
block|{
name|this
operator|.
name|federationPolicyConfiguration
operator|=
name|fedPolicyConfiguration
expr_stmt|;
block|}
comment|/**    * Getter for the {@link SubClusterResolver}.    *    * @return the {@link SubClusterResolver} to be used for initialization.    */
DECL|method|getFederationSubclusterResolver ()
specifier|public
name|SubClusterResolver
name|getFederationSubclusterResolver
parameter_list|()
block|{
return|return
name|federationSubclusterResolver
return|;
block|}
comment|/**    * Setter for the {@link SubClusterResolver}.    *    * @param federationSubclusterResolver the {@link SubClusterResolver} to be    *          used for initialization.    */
DECL|method|setFederationSubclusterResolver ( SubClusterResolver federationSubclusterResolver)
specifier|public
name|void
name|setFederationSubclusterResolver
parameter_list|(
name|SubClusterResolver
name|federationSubclusterResolver
parameter_list|)
block|{
name|this
operator|.
name|federationSubclusterResolver
operator|=
name|federationSubclusterResolver
expr_stmt|;
block|}
comment|/**    * Getter for the {@link FederationStateStoreFacade}.    *    * @return the facade.    */
DECL|method|getFederationStateStoreFacade ()
specifier|public
name|FederationStateStoreFacade
name|getFederationStateStoreFacade
parameter_list|()
block|{
return|return
name|federationStateStoreFacade
return|;
block|}
comment|/**    * Setter for the {@link FederationStateStoreFacade}.    *    * @param federationStateStoreFacade the facade.    */
DECL|method|setFederationStateStoreFacade ( FederationStateStoreFacade federationStateStoreFacade)
specifier|public
name|void
name|setFederationStateStoreFacade
parameter_list|(
name|FederationStateStoreFacade
name|federationStateStoreFacade
parameter_list|)
block|{
name|this
operator|.
name|federationStateStoreFacade
operator|=
name|federationStateStoreFacade
expr_stmt|;
block|}
comment|/**    * Returns the current home sub-cluster. Useful for default policy behaviors.    *    * @return the home sub-cluster.    */
DECL|method|getHomeSubcluster ()
specifier|public
name|SubClusterId
name|getHomeSubcluster
parameter_list|()
block|{
return|return
name|homeSubcluster
return|;
block|}
comment|/**    * Sets in the context the home sub-cluster. Useful for default policy    * behaviors.    *    * @param homeSubcluster value to set.    */
DECL|method|setHomeSubcluster (SubClusterId homeSubcluster)
specifier|public
name|void
name|setHomeSubcluster
parameter_list|(
name|SubClusterId
name|homeSubcluster
parameter_list|)
block|{
name|this
operator|.
name|homeSubcluster
operator|=
name|homeSubcluster
expr_stmt|;
block|}
block|}
end_class

end_unit

