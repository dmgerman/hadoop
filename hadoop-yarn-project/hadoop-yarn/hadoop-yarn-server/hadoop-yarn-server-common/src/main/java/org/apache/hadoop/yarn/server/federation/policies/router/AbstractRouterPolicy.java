begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.policies.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
operator|.
name|router
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
operator|.
name|AbstractConfigurableFederationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
operator|.
name|dao
operator|.
name|WeightedPolicyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
operator|.
name|exceptions
operator|.
name|FederationPolicyException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|policies
operator|.
name|exceptions
operator|.
name|FederationPolicyInitializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterIdInfo
import|;
end_import

begin_comment
comment|/**  * Base abstract class for {@link FederationRouterPolicy} implementations, that  * provides common validation for reinitialization.  */
end_comment

begin_class
DECL|class|AbstractRouterPolicy
specifier|public
specifier|abstract
class|class
name|AbstractRouterPolicy
extends|extends
name|AbstractConfigurableFederationPolicy
implements|implements
name|FederationRouterPolicy
block|{
annotation|@
name|Override
DECL|method|validate (WeightedPolicyInfo newPolicyInfo)
specifier|public
name|void
name|validate
parameter_list|(
name|WeightedPolicyInfo
name|newPolicyInfo
parameter_list|)
throws|throws
name|FederationPolicyInitializationException
block|{
name|super
operator|.
name|validate
argument_list|(
name|newPolicyInfo
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|SubClusterIdInfo
argument_list|,
name|Float
argument_list|>
name|newWeights
init|=
name|newPolicyInfo
operator|.
name|getRouterPolicyWeights
argument_list|()
decl_stmt|;
if|if
condition|(
name|newWeights
operator|==
literal|null
operator|||
name|newWeights
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
throw|throw
operator|new
name|FederationPolicyInitializationException
argument_list|(
literal|"Weight vector cannot be null/empty."
argument_list|)
throw|;
block|}
block|}
DECL|method|validate (ApplicationSubmissionContext appSubmissionContext)
specifier|public
name|void
name|validate
parameter_list|(
name|ApplicationSubmissionContext
name|appSubmissionContext
parameter_list|)
throws|throws
name|FederationPolicyException
block|{
if|if
condition|(
name|appSubmissionContext
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|FederationPolicyException
argument_list|(
literal|"Cannot route an application with null context."
argument_list|)
throw|;
block|}
comment|// if the queue is not specified we set it to default value, to be
comment|// compatible with YARN behavior.
name|String
name|queue
init|=
name|appSubmissionContext
operator|.
name|getQueue
argument_list|()
decl_stmt|;
if|if
condition|(
name|queue
operator|==
literal|null
condition|)
block|{
name|appSubmissionContext
operator|.
name|setQueue
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_QUEUE_NAME
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

