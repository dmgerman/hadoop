begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.store.records.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|federation
operator|.
name|proto
operator|.
name|YarnServerFederationProtos
operator|.
name|GetSubClusterPoliciesConfigurationsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|federation
operator|.
name|proto
operator|.
name|YarnServerFederationProtos
operator|.
name|GetSubClusterPoliciesConfigurationsResponseProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|federation
operator|.
name|proto
operator|.
name|YarnServerFederationProtos
operator|.
name|SubClusterPolicyConfigurationProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetSubClusterPoliciesConfigurationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterPolicyConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|TextFormat
import|;
end_import

begin_comment
comment|/**  * Protocol buffer based implementation of  * {@link GetSubClusterPoliciesConfigurationsResponse}.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|GetSubClusterPoliciesConfigurationsResponsePBImpl
specifier|public
class|class
name|GetSubClusterPoliciesConfigurationsResponsePBImpl
extends|extends
name|GetSubClusterPoliciesConfigurationsResponse
block|{
DECL|field|proto
specifier|private
name|GetSubClusterPoliciesConfigurationsResponseProto
name|proto
init|=
name|GetSubClusterPoliciesConfigurationsResponseProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
specifier|private
name|GetSubClusterPoliciesConfigurationsResponseProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
specifier|private
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|subClusterPolicies
specifier|private
name|List
argument_list|<
name|SubClusterPolicyConfiguration
argument_list|>
name|subClusterPolicies
init|=
literal|null
decl_stmt|;
DECL|method|GetSubClusterPoliciesConfigurationsResponsePBImpl ()
specifier|public
name|GetSubClusterPoliciesConfigurationsResponsePBImpl
parameter_list|()
block|{
name|builder
operator|=
name|GetSubClusterPoliciesConfigurationsResponseProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|GetSubClusterPoliciesConfigurationsResponsePBImpl ( GetSubClusterPoliciesConfigurationsResponseProto proto)
specifier|public
name|GetSubClusterPoliciesConfigurationsResponsePBImpl
parameter_list|(
name|GetSubClusterPoliciesConfigurationsResponseProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|GetSubClusterPoliciesConfigurationsResponseProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
block|}
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|GetSubClusterPoliciesConfigurationsResponseProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|subClusterPolicies
operator|!=
literal|null
condition|)
block|{
name|addSubClusterPoliciesConfigurationsToProto
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getProto
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|this
operator|.
name|getProto
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|cast
argument_list|(
name|other
argument_list|)
operator|.
name|getProto
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|TextFormat
operator|.
name|shortDebugString
argument_list|(
name|getProto
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPoliciesConfigs ()
specifier|public
name|List
argument_list|<
name|SubClusterPolicyConfiguration
argument_list|>
name|getPoliciesConfigs
parameter_list|()
block|{
name|initSubClusterPoliciesConfigurationsList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|subClusterPolicies
return|;
block|}
annotation|@
name|Override
DECL|method|setPoliciesConfigs ( List<SubClusterPolicyConfiguration> policyConfigurations)
specifier|public
name|void
name|setPoliciesConfigs
parameter_list|(
name|List
argument_list|<
name|SubClusterPolicyConfiguration
argument_list|>
name|policyConfigurations
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|policyConfigurations
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearPoliciesConfigurations
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|subClusterPolicies
operator|=
name|policyConfigurations
expr_stmt|;
block|}
DECL|method|initSubClusterPoliciesConfigurationsList ()
specifier|private
name|void
name|initSubClusterPoliciesConfigurationsList
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|subClusterPolicies
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|GetSubClusterPoliciesConfigurationsResponseProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|SubClusterPolicyConfigurationProto
argument_list|>
name|subClusterPoliciesList
init|=
name|p
operator|.
name|getPoliciesConfigurationsList
argument_list|()
decl_stmt|;
name|subClusterPolicies
operator|=
operator|new
name|ArrayList
argument_list|<
name|SubClusterPolicyConfiguration
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|SubClusterPolicyConfigurationProto
name|r
range|:
name|subClusterPoliciesList
control|)
block|{
name|subClusterPolicies
operator|.
name|add
argument_list|(
name|convertFromProtoFormat
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addSubClusterPoliciesConfigurationsToProto ()
specifier|private
name|void
name|addSubClusterPoliciesConfigurationsToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearPoliciesConfigurations
argument_list|()
expr_stmt|;
if|if
condition|(
name|subClusterPolicies
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Iterable
argument_list|<
name|SubClusterPolicyConfigurationProto
argument_list|>
name|iterable
init|=
operator|new
name|Iterable
argument_list|<
name|SubClusterPolicyConfigurationProto
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|SubClusterPolicyConfigurationProto
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|SubClusterPolicyConfigurationProto
argument_list|>
argument_list|()
block|{
specifier|private
name|Iterator
argument_list|<
name|SubClusterPolicyConfiguration
argument_list|>
name|iter
init|=
name|subClusterPolicies
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|iter
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SubClusterPolicyConfigurationProto
name|next
parameter_list|()
block|{
return|return
name|convertToProtoFormat
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|builder
operator|.
name|addAllPoliciesConfigurations
argument_list|(
name|iterable
argument_list|)
expr_stmt|;
block|}
DECL|method|convertFromProtoFormat ( SubClusterPolicyConfigurationProto policy)
specifier|private
name|SubClusterPolicyConfiguration
name|convertFromProtoFormat
parameter_list|(
name|SubClusterPolicyConfigurationProto
name|policy
parameter_list|)
block|{
return|return
operator|new
name|SubClusterPolicyConfigurationPBImpl
argument_list|(
name|policy
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat ( SubClusterPolicyConfiguration policy)
specifier|private
name|SubClusterPolicyConfigurationProto
name|convertToProtoFormat
parameter_list|(
name|SubClusterPolicyConfiguration
name|policy
parameter_list|)
block|{
return|return
operator|(
operator|(
name|SubClusterPolicyConfigurationPBImpl
operator|)
name|policy
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
block|}
end_class

end_unit

