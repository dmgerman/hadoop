begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|crypto
operator|.
name|SecretKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|MasterKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_class
DECL|class|MasterKeyData
specifier|public
class|class
name|MasterKeyData
block|{
DECL|field|masterKeyRecord
specifier|private
specifier|final
name|MasterKey
name|masterKeyRecord
decl_stmt|;
comment|// Underlying secret-key also stored to avoid repetitive encoding and
comment|// decoding the masterKeyRecord bytes.
DECL|field|generatedSecretKey
specifier|private
specifier|final
name|SecretKey
name|generatedSecretKey
decl_stmt|;
DECL|method|MasterKeyData (int serialNo, SecretKey secretKey)
specifier|public
name|MasterKeyData
parameter_list|(
name|int
name|serialNo
parameter_list|,
name|SecretKey
name|secretKey
parameter_list|)
block|{
name|this
operator|.
name|masterKeyRecord
operator|=
name|Records
operator|.
name|newRecord
argument_list|(
name|MasterKey
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|masterKeyRecord
operator|.
name|setKeyId
argument_list|(
name|serialNo
argument_list|)
expr_stmt|;
name|this
operator|.
name|generatedSecretKey
operator|=
name|secretKey
expr_stmt|;
name|this
operator|.
name|masterKeyRecord
operator|.
name|setBytes
argument_list|(
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|generatedSecretKey
operator|.
name|getEncoded
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|MasterKeyData (MasterKey masterKeyRecord, SecretKey secretKey)
specifier|public
name|MasterKeyData
parameter_list|(
name|MasterKey
name|masterKeyRecord
parameter_list|,
name|SecretKey
name|secretKey
parameter_list|)
block|{
name|this
operator|.
name|masterKeyRecord
operator|=
name|masterKeyRecord
expr_stmt|;
name|this
operator|.
name|generatedSecretKey
operator|=
name|secretKey
expr_stmt|;
block|}
DECL|method|getMasterKey ()
specifier|public
name|MasterKey
name|getMasterKey
parameter_list|()
block|{
return|return
name|this
operator|.
name|masterKeyRecord
return|;
block|}
DECL|method|getSecretKey ()
specifier|public
name|SecretKey
name|getSecretKey
parameter_list|()
block|{
return|return
name|this
operator|.
name|generatedSecretKey
return|;
block|}
block|}
end_class

end_unit

