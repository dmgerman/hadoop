begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.federation.store.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|AddApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|ApplicationHomeSubCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|DeleteApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|GetApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|UpdateApplicationHomeSubClusterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Utility class to validate the inputs to  * {@code FederationApplicationHomeSubClusterStore}, allows a fail fast  * mechanism for invalid user inputs.  *  */
end_comment

begin_class
DECL|class|FederationApplicationHomeSubClusterStoreInputValidator
specifier|public
specifier|final
class|class
name|FederationApplicationHomeSubClusterStoreInputValidator
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FederationApplicationHomeSubClusterStoreInputValidator
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|FederationApplicationHomeSubClusterStoreInputValidator ()
specifier|private
name|FederationApplicationHomeSubClusterStoreInputValidator
parameter_list|()
block|{   }
comment|/**    * Quick validation on the input to check some obvious fail conditions (fail    * fast). Check if the provided {@link AddApplicationHomeSubClusterRequest}    * for adding a new application is valid or not.    *    * @param request the {@link AddApplicationHomeSubClusterRequest} to validate    *          against    * @throws FederationStateStoreInvalidInputException if the request is invalid    */
DECL|method|validateAddApplicationHomeSubClusterRequest ( AddApplicationHomeSubClusterRequest request)
specifier|public
specifier|static
name|void
name|validateAddApplicationHomeSubClusterRequest
parameter_list|(
name|AddApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing AddApplicationHomeSubCluster Request."
operator|+
literal|" Please try again by specifying"
operator|+
literal|" an AddApplicationHomeSubCluster information."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
comment|// validate ApplicationHomeSubCluster info
name|checkApplicationHomeSubCluster
argument_list|(
name|request
operator|.
name|getApplicationHomeSubCluster
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Quick validation on the input to check some obvious fail conditions (fail    * fast). Check if the provided {@link UpdateApplicationHomeSubClusterRequest}    * for updating an application is valid or not.    *    * @param request the {@link UpdateApplicationHomeSubClusterRequest} to    *          validate against    * @throws FederationStateStoreInvalidInputException if the request is invalid    */
DECL|method|validateUpdateApplicationHomeSubClusterRequest ( UpdateApplicationHomeSubClusterRequest request)
specifier|public
specifier|static
name|void
name|validateUpdateApplicationHomeSubClusterRequest
parameter_list|(
name|UpdateApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing UpdateApplicationHomeSubCluster Request."
operator|+
literal|" Please try again by specifying"
operator|+
literal|" an ApplicationHomeSubCluster information."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
comment|// validate ApplicationHomeSubCluster info
name|checkApplicationHomeSubCluster
argument_list|(
name|request
operator|.
name|getApplicationHomeSubCluster
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Quick validation on the input to check some obvious fail conditions (fail    * fast). Check if the provided {@link GetApplicationHomeSubClusterRequest}    * for querying application's information is valid or not.    *    * @param request the {@link GetApplicationHomeSubClusterRequest} to validate    *          against    * @throws FederationStateStoreInvalidInputException if the request is invalid    */
DECL|method|validateGetApplicationHomeSubClusterRequest ( GetApplicationHomeSubClusterRequest request)
specifier|public
specifier|static
name|void
name|validateGetApplicationHomeSubClusterRequest
parameter_list|(
name|GetApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing GetApplicationHomeSubCluster Request."
operator|+
literal|" Please try again by specifying an Application Id information."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
comment|// validate application Id
name|checkApplicationId
argument_list|(
name|request
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Quick validation on the input to check some obvious fail conditions (fail    * fast). Check if the provided {@link DeleteApplicationHomeSubClusterRequest}    * for deleting an application is valid or not.    *    * @param request the {@link DeleteApplicationHomeSubClusterRequest} to    *          validate against    * @throws FederationStateStoreInvalidInputException if the request is invalid    */
DECL|method|validateDeleteApplicationHomeSubClusterRequest ( DeleteApplicationHomeSubClusterRequest request)
specifier|public
specifier|static
name|void
name|validateDeleteApplicationHomeSubClusterRequest
parameter_list|(
name|DeleteApplicationHomeSubClusterRequest
name|request
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing DeleteApplicationHomeSubCluster Request."
operator|+
literal|" Please try again by specifying"
operator|+
literal|" an ApplicationHomeSubCluster information."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
comment|// validate application Id
name|checkApplicationId
argument_list|(
name|request
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Validate if the ApplicationHomeSubCluster info are present or not.    *    * @param applicationHomeSubCluster the information of the application to be    *          verified    * @throws FederationStateStoreInvalidInputException if the SubCluster Info    *           are invalid    */
DECL|method|checkApplicationHomeSubCluster ( ApplicationHomeSubCluster applicationHomeSubCluster)
specifier|private
specifier|static
name|void
name|checkApplicationHomeSubCluster
parameter_list|(
name|ApplicationHomeSubCluster
name|applicationHomeSubCluster
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|applicationHomeSubCluster
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing ApplicationHomeSubCluster Info."
operator|+
literal|" Please try again by specifying"
operator|+
literal|" an ApplicationHomeSubCluster information."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
comment|// validate application Id
name|checkApplicationId
argument_list|(
name|applicationHomeSubCluster
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
comment|// validate subcluster Id
name|FederationMembershipStateStoreInputValidator
operator|.
name|checkSubClusterId
argument_list|(
name|applicationHomeSubCluster
operator|.
name|getHomeSubCluster
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Validate if the application id is present or not.    *    * @param appId the id of the application to be verified    * @throws FederationStateStoreInvalidInputException if the application Id is    *           invalid    */
DECL|method|checkApplicationId (ApplicationId appId)
specifier|private
specifier|static
name|void
name|checkApplicationId
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|FederationStateStoreInvalidInputException
block|{
if|if
condition|(
name|appId
operator|==
literal|null
condition|)
block|{
name|String
name|message
init|=
literal|"Missing Application Id."
operator|+
literal|" Please try again by specifying an Application Id."
decl_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|FederationStateStoreInvalidInputException
argument_list|(
name|message
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

