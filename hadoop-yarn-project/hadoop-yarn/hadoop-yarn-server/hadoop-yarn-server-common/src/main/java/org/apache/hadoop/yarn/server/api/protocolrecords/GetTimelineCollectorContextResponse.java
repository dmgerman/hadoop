begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_class
DECL|class|GetTimelineCollectorContextResponse
specifier|public
specifier|abstract
class|class
name|GetTimelineCollectorContextResponse
block|{
DECL|method|newInstance ( String userId, String flowName, String flowVersion, long flowRunId)
specifier|public
specifier|static
name|GetTimelineCollectorContextResponse
name|newInstance
parameter_list|(
name|String
name|userId
parameter_list|,
name|String
name|flowName
parameter_list|,
name|String
name|flowVersion
parameter_list|,
name|long
name|flowRunId
parameter_list|)
block|{
name|GetTimelineCollectorContextResponse
name|response
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetTimelineCollectorContextResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setUserId
argument_list|(
name|userId
argument_list|)
expr_stmt|;
name|response
operator|.
name|setFlowName
argument_list|(
name|flowName
argument_list|)
expr_stmt|;
name|response
operator|.
name|setFlowVersion
argument_list|(
name|flowVersion
argument_list|)
expr_stmt|;
name|response
operator|.
name|setFlowRunId
argument_list|(
name|flowRunId
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
DECL|method|getUserId ()
specifier|public
specifier|abstract
name|String
name|getUserId
parameter_list|()
function_decl|;
DECL|method|setUserId (String userId)
specifier|public
specifier|abstract
name|void
name|setUserId
parameter_list|(
name|String
name|userId
parameter_list|)
function_decl|;
DECL|method|getFlowName ()
specifier|public
specifier|abstract
name|String
name|getFlowName
parameter_list|()
function_decl|;
DECL|method|setFlowName (String flowName)
specifier|public
specifier|abstract
name|void
name|setFlowName
parameter_list|(
name|String
name|flowName
parameter_list|)
function_decl|;
DECL|method|getFlowVersion ()
specifier|public
specifier|abstract
name|String
name|getFlowVersion
parameter_list|()
function_decl|;
DECL|method|setFlowVersion (String flowVersion)
specifier|public
specifier|abstract
name|void
name|setFlowVersion
parameter_list|(
name|String
name|flowVersion
parameter_list|)
function_decl|;
DECL|method|getFlowRunId ()
specifier|public
specifier|abstract
name|long
name|getFlowRunId
parameter_list|()
function_decl|;
DECL|method|setFlowRunId (long flowRunId)
specifier|public
specifier|abstract
name|void
name|setFlowRunId
parameter_list|(
name|long
name|flowRunId
parameter_list|)
function_decl|;
block|}
end_class

end_unit

