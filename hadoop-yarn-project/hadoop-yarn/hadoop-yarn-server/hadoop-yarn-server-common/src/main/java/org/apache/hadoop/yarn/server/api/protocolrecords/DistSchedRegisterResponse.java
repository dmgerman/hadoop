begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RegisterApplicationMasterResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|DistSchedRegisterResponse
specifier|public
specifier|abstract
class|class
name|DistSchedRegisterResponse
block|{
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newInstance (RegisterApplicationMasterResponse regAMResp)
specifier|public
specifier|static
name|DistSchedRegisterResponse
name|newInstance
parameter_list|(
name|RegisterApplicationMasterResponse
name|regAMResp
parameter_list|)
block|{
name|DistSchedRegisterResponse
name|response
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|DistSchedRegisterResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setRegisterResponse
argument_list|(
name|regAMResp
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setRegisterResponse ( RegisterApplicationMasterResponse resp)
specifier|public
specifier|abstract
name|void
name|setRegisterResponse
parameter_list|(
name|RegisterApplicationMasterResponse
name|resp
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getRegisterResponse ()
specifier|public
specifier|abstract
name|RegisterApplicationMasterResponse
name|getRegisterResponse
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setMinAllocatableCapabilty (Resource minResource)
specifier|public
specifier|abstract
name|void
name|setMinAllocatableCapabilty
parameter_list|(
name|Resource
name|minResource
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getMinAllocatableCapabilty ()
specifier|public
specifier|abstract
name|Resource
name|getMinAllocatableCapabilty
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setMaxAllocatableCapabilty (Resource maxResource)
specifier|public
specifier|abstract
name|void
name|setMaxAllocatableCapabilty
parameter_list|(
name|Resource
name|maxResource
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getMaxAllocatableCapabilty ()
specifier|public
specifier|abstract
name|Resource
name|getMaxAllocatableCapabilty
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setIncrAllocatableCapabilty (Resource maxResource)
specifier|public
specifier|abstract
name|void
name|setIncrAllocatableCapabilty
parameter_list|(
name|Resource
name|maxResource
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getIncrAllocatableCapabilty ()
specifier|public
specifier|abstract
name|Resource
name|getIncrAllocatableCapabilty
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setContainerTokenExpiryInterval (int interval)
specifier|public
specifier|abstract
name|void
name|setContainerTokenExpiryInterval
parameter_list|(
name|int
name|interval
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getContainerTokenExpiryInterval ()
specifier|public
specifier|abstract
name|int
name|getContainerTokenExpiryInterval
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setContainerIdStart (long containerIdStart)
specifier|public
specifier|abstract
name|void
name|setContainerIdStart
parameter_list|(
name|long
name|containerIdStart
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getContainerIdStart ()
specifier|public
specifier|abstract
name|long
name|getContainerIdStart
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setNodesForScheduling (List<NodeId> nodesForScheduling)
specifier|public
specifier|abstract
name|void
name|setNodesForScheduling
parameter_list|(
name|List
argument_list|<
name|NodeId
argument_list|>
name|nodesForScheduling
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getNodesForScheduling ()
specifier|public
specifier|abstract
name|List
argument_list|<
name|NodeId
argument_list|>
name|getNodesForScheduling
parameter_list|()
function_decl|;
block|}
end_class

end_unit

