begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Evolving
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Times
import|;
end_import

begin_class
annotation|@
name|Public
annotation|@
name|Evolving
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"container"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ContainerInfo
specifier|public
class|class
name|ContainerInfo
block|{
DECL|field|containerId
specifier|protected
name|String
name|containerId
decl_stmt|;
DECL|field|allocatedMB
specifier|protected
name|long
name|allocatedMB
decl_stmt|;
DECL|field|allocatedVCores
specifier|protected
name|long
name|allocatedVCores
decl_stmt|;
DECL|field|assignedNodeId
specifier|protected
name|String
name|assignedNodeId
decl_stmt|;
DECL|field|priority
specifier|protected
name|int
name|priority
decl_stmt|;
DECL|field|startedTime
specifier|protected
name|long
name|startedTime
decl_stmt|;
DECL|field|finishedTime
specifier|protected
name|long
name|finishedTime
decl_stmt|;
DECL|field|elapsedTime
specifier|protected
name|long
name|elapsedTime
decl_stmt|;
DECL|field|diagnosticsInfo
specifier|protected
name|String
name|diagnosticsInfo
decl_stmt|;
DECL|field|logUrl
specifier|protected
name|String
name|logUrl
decl_stmt|;
DECL|field|containerExitStatus
specifier|protected
name|int
name|containerExitStatus
decl_stmt|;
DECL|field|containerState
specifier|protected
name|ContainerState
name|containerState
decl_stmt|;
DECL|field|nodeHttpAddress
specifier|protected
name|String
name|nodeHttpAddress
decl_stmt|;
DECL|field|nodeId
specifier|protected
name|String
name|nodeId
decl_stmt|;
DECL|field|allocatedResources
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|allocatedResources
decl_stmt|;
DECL|field|exposedPorts
specifier|private
name|String
name|exposedPorts
decl_stmt|;
DECL|method|ContainerInfo ()
specifier|public
name|ContainerInfo
parameter_list|()
block|{
comment|// JAXB needs this
block|}
DECL|method|ContainerInfo (ContainerReport container)
specifier|public
name|ContainerInfo
parameter_list|(
name|ContainerReport
name|container
parameter_list|)
block|{
if|if
condition|(
name|container
operator|.
name|getAssignedNode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|assignedNodeId
operator|=
name|container
operator|.
name|getAssignedNode
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|containerId
operator|=
name|container
operator|.
name|getContainerId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|priority
operator|=
name|container
operator|.
name|getPriority
argument_list|()
operator|.
name|getPriority
argument_list|()
expr_stmt|;
name|startedTime
operator|=
name|container
operator|.
name|getCreationTime
argument_list|()
expr_stmt|;
name|finishedTime
operator|=
name|container
operator|.
name|getFinishTime
argument_list|()
expr_stmt|;
name|elapsedTime
operator|=
name|Times
operator|.
name|elapsed
argument_list|(
name|startedTime
argument_list|,
name|finishedTime
argument_list|)
expr_stmt|;
name|diagnosticsInfo
operator|=
name|container
operator|.
name|getDiagnosticsInfo
argument_list|()
expr_stmt|;
name|logUrl
operator|=
name|container
operator|.
name|getLogUrl
argument_list|()
expr_stmt|;
name|containerExitStatus
operator|=
name|container
operator|.
name|getContainerExitStatus
argument_list|()
expr_stmt|;
name|containerState
operator|=
name|container
operator|.
name|getContainerState
argument_list|()
expr_stmt|;
name|nodeHttpAddress
operator|=
name|container
operator|.
name|getNodeHttpAddress
argument_list|()
expr_stmt|;
name|nodeId
operator|=
name|container
operator|.
name|getAssignedNode
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|exposedPorts
operator|=
name|container
operator|.
name|getExposedPorts
argument_list|()
expr_stmt|;
name|Resource
name|allocated
init|=
name|container
operator|.
name|getAllocatedResource
argument_list|()
decl_stmt|;
if|if
condition|(
name|allocated
operator|!=
literal|null
condition|)
block|{
name|allocatedMB
operator|=
name|allocated
operator|.
name|getMemorySize
argument_list|()
expr_stmt|;
name|allocatedVCores
operator|=
name|allocated
operator|.
name|getVirtualCores
argument_list|()
expr_stmt|;
comment|// Now populate the allocated resources. This map will include memory
comment|// and CPU, because it's where they belong. We still keep allocatedMB
comment|// and allocatedVCores so that we don't break the API.
name|allocatedResources
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|ResourceInformation
name|info
range|:
name|allocated
operator|.
name|getResources
argument_list|()
control|)
block|{
name|allocatedResources
operator|.
name|put
argument_list|(
name|info
operator|.
name|getName
argument_list|()
argument_list|,
name|info
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getContainerId ()
specifier|public
name|String
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
DECL|method|getAllocatedMB ()
specifier|public
name|long
name|getAllocatedMB
parameter_list|()
block|{
return|return
name|allocatedMB
return|;
block|}
DECL|method|getAllocatedVCores ()
specifier|public
name|long
name|getAllocatedVCores
parameter_list|()
block|{
return|return
name|allocatedVCores
return|;
block|}
DECL|method|getAssignedNodeId ()
specifier|public
name|String
name|getAssignedNodeId
parameter_list|()
block|{
return|return
name|assignedNodeId
return|;
block|}
DECL|method|getPriority ()
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
DECL|method|getStartedTime ()
specifier|public
name|long
name|getStartedTime
parameter_list|()
block|{
return|return
name|startedTime
return|;
block|}
DECL|method|getFinishedTime ()
specifier|public
name|long
name|getFinishedTime
parameter_list|()
block|{
return|return
name|finishedTime
return|;
block|}
DECL|method|getElapsedTime ()
specifier|public
name|long
name|getElapsedTime
parameter_list|()
block|{
return|return
name|elapsedTime
return|;
block|}
DECL|method|getDiagnosticsInfo ()
specifier|public
name|String
name|getDiagnosticsInfo
parameter_list|()
block|{
return|return
name|diagnosticsInfo
return|;
block|}
DECL|method|getLogUrl ()
specifier|public
name|String
name|getLogUrl
parameter_list|()
block|{
return|return
name|logUrl
return|;
block|}
DECL|method|getContainerExitStatus ()
specifier|public
name|int
name|getContainerExitStatus
parameter_list|()
block|{
return|return
name|containerExitStatus
return|;
block|}
DECL|method|getContainerState ()
specifier|public
name|ContainerState
name|getContainerState
parameter_list|()
block|{
return|return
name|containerState
return|;
block|}
DECL|method|getNodeHttpAddress ()
specifier|public
name|String
name|getNodeHttpAddress
parameter_list|()
block|{
return|return
name|nodeHttpAddress
return|;
block|}
DECL|method|getNodeId ()
specifier|public
name|String
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
comment|/**    * Return a map of the allocated resources. The map key is the resource name,    * and the value is the resource value.    *    * @return the allocated resources map    */
DECL|method|getAllocatedResources ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|getAllocatedResources
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|allocatedResources
argument_list|)
return|;
block|}
DECL|method|getExposedPorts ()
specifier|public
name|String
name|getExposedPorts
parameter_list|()
block|{
return|return
name|exposedPorts
return|;
block|}
DECL|method|hasCustomResources ()
specifier|public
name|boolean
name|hasCustomResources
parameter_list|()
block|{
return|return
name|allocatedResources
operator|.
name|size
argument_list|()
operator|>
literal|2
return|;
block|}
block|}
end_class

end_unit

