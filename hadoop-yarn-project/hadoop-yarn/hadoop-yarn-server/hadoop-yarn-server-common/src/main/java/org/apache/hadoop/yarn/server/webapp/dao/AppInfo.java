begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|CSV_JOINER
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Evolving
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|FinalApplicationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Times
import|;
end_import

begin_class
annotation|@
name|Public
annotation|@
name|Evolving
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"app"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|AppInfo
specifier|public
class|class
name|AppInfo
block|{
DECL|field|appId
specifier|protected
name|String
name|appId
decl_stmt|;
DECL|field|currentAppAttemptId
specifier|protected
name|String
name|currentAppAttemptId
decl_stmt|;
DECL|field|user
specifier|protected
name|String
name|user
decl_stmt|;
DECL|field|name
specifier|protected
name|String
name|name
decl_stmt|;
DECL|field|queue
specifier|protected
name|String
name|queue
decl_stmt|;
DECL|field|type
specifier|protected
name|String
name|type
decl_stmt|;
DECL|field|host
specifier|protected
name|String
name|host
decl_stmt|;
DECL|field|rpcPort
specifier|protected
name|int
name|rpcPort
decl_stmt|;
DECL|field|appState
specifier|protected
name|YarnApplicationState
name|appState
decl_stmt|;
DECL|field|runningContainers
specifier|protected
name|int
name|runningContainers
decl_stmt|;
DECL|field|progress
specifier|protected
name|float
name|progress
decl_stmt|;
DECL|field|diagnosticsInfo
specifier|protected
name|String
name|diagnosticsInfo
decl_stmt|;
DECL|field|originalTrackingUrl
specifier|protected
name|String
name|originalTrackingUrl
decl_stmt|;
DECL|field|trackingUrl
specifier|protected
name|String
name|trackingUrl
decl_stmt|;
DECL|field|finalAppStatus
specifier|protected
name|FinalApplicationStatus
name|finalAppStatus
decl_stmt|;
DECL|field|submittedTime
specifier|protected
name|long
name|submittedTime
decl_stmt|;
DECL|field|startedTime
specifier|protected
name|long
name|startedTime
decl_stmt|;
DECL|field|finishedTime
specifier|protected
name|long
name|finishedTime
decl_stmt|;
DECL|field|elapsedTime
specifier|protected
name|long
name|elapsedTime
decl_stmt|;
DECL|field|applicationTags
specifier|protected
name|String
name|applicationTags
decl_stmt|;
DECL|field|allocatedCpuVcores
specifier|private
name|int
name|allocatedCpuVcores
decl_stmt|;
DECL|field|allocatedMemoryMB
specifier|private
name|int
name|allocatedMemoryMB
decl_stmt|;
DECL|method|AppInfo ()
specifier|public
name|AppInfo
parameter_list|()
block|{
comment|// JAXB needs this
block|}
DECL|method|AppInfo (ApplicationReport app)
specifier|public
name|AppInfo
parameter_list|(
name|ApplicationReport
name|app
parameter_list|)
block|{
name|appId
operator|=
name|app
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|app
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|currentAppAttemptId
operator|=
name|app
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|user
operator|=
name|app
operator|.
name|getUser
argument_list|()
expr_stmt|;
name|queue
operator|=
name|app
operator|.
name|getQueue
argument_list|()
expr_stmt|;
name|name
operator|=
name|app
operator|.
name|getName
argument_list|()
expr_stmt|;
name|type
operator|=
name|app
operator|.
name|getApplicationType
argument_list|()
expr_stmt|;
name|host
operator|=
name|app
operator|.
name|getHost
argument_list|()
expr_stmt|;
name|rpcPort
operator|=
name|app
operator|.
name|getRpcPort
argument_list|()
expr_stmt|;
name|appState
operator|=
name|app
operator|.
name|getYarnApplicationState
argument_list|()
expr_stmt|;
name|diagnosticsInfo
operator|=
name|app
operator|.
name|getDiagnostics
argument_list|()
expr_stmt|;
name|trackingUrl
operator|=
name|app
operator|.
name|getTrackingUrl
argument_list|()
expr_stmt|;
name|originalTrackingUrl
operator|=
name|app
operator|.
name|getOriginalTrackingUrl
argument_list|()
expr_stmt|;
name|submittedTime
operator|=
name|app
operator|.
name|getStartTime
argument_list|()
expr_stmt|;
name|startedTime
operator|=
name|app
operator|.
name|getStartTime
argument_list|()
expr_stmt|;
name|finishedTime
operator|=
name|app
operator|.
name|getFinishTime
argument_list|()
expr_stmt|;
name|elapsedTime
operator|=
name|Times
operator|.
name|elapsed
argument_list|(
name|startedTime
argument_list|,
name|finishedTime
argument_list|)
expr_stmt|;
name|finalAppStatus
operator|=
name|app
operator|.
name|getFinalApplicationStatus
argument_list|()
expr_stmt|;
if|if
condition|(
name|app
operator|.
name|getApplicationResourceUsageReport
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|runningContainers
operator|=
name|app
operator|.
name|getApplicationResourceUsageReport
argument_list|()
operator|.
name|getNumUsedContainers
argument_list|()
expr_stmt|;
name|allocatedCpuVcores
operator|=
name|app
operator|.
name|getApplicationResourceUsageReport
argument_list|()
operator|.
name|getUsedResources
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
expr_stmt|;
name|allocatedMemoryMB
operator|=
name|app
operator|.
name|getApplicationResourceUsageReport
argument_list|()
operator|.
name|getUsedResources
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
block|}
name|progress
operator|=
name|app
operator|.
name|getProgress
argument_list|()
operator|*
literal|100
expr_stmt|;
comment|// in percent
if|if
condition|(
name|app
operator|.
name|getApplicationTags
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|app
operator|.
name|getApplicationTags
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|applicationTags
operator|=
name|CSV_JOINER
operator|.
name|join
argument_list|(
name|app
operator|.
name|getApplicationTags
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getAppId ()
specifier|public
name|String
name|getAppId
parameter_list|()
block|{
return|return
name|appId
return|;
block|}
DECL|method|getCurrentAppAttemptId ()
specifier|public
name|String
name|getCurrentAppAttemptId
parameter_list|()
block|{
return|return
name|currentAppAttemptId
return|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|getHost ()
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|host
return|;
block|}
DECL|method|getRpcPort ()
specifier|public
name|int
name|getRpcPort
parameter_list|()
block|{
return|return
name|rpcPort
return|;
block|}
DECL|method|getAppState ()
specifier|public
name|YarnApplicationState
name|getAppState
parameter_list|()
block|{
return|return
name|appState
return|;
block|}
DECL|method|getRunningContainers ()
specifier|public
name|int
name|getRunningContainers
parameter_list|()
block|{
return|return
name|runningContainers
return|;
block|}
DECL|method|getAllocatedCpuVcores ()
specifier|public
name|int
name|getAllocatedCpuVcores
parameter_list|()
block|{
return|return
name|allocatedCpuVcores
return|;
block|}
DECL|method|getAllocatedMemoryMB ()
specifier|public
name|int
name|getAllocatedMemoryMB
parameter_list|()
block|{
return|return
name|allocatedMemoryMB
return|;
block|}
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
block|{
return|return
name|progress
return|;
block|}
DECL|method|getDiagnosticsInfo ()
specifier|public
name|String
name|getDiagnosticsInfo
parameter_list|()
block|{
return|return
name|diagnosticsInfo
return|;
block|}
DECL|method|getOriginalTrackingUrl ()
specifier|public
name|String
name|getOriginalTrackingUrl
parameter_list|()
block|{
return|return
name|originalTrackingUrl
return|;
block|}
DECL|method|getTrackingUrl ()
specifier|public
name|String
name|getTrackingUrl
parameter_list|()
block|{
return|return
name|trackingUrl
return|;
block|}
DECL|method|getFinalAppStatus ()
specifier|public
name|FinalApplicationStatus
name|getFinalAppStatus
parameter_list|()
block|{
return|return
name|finalAppStatus
return|;
block|}
DECL|method|getSubmittedTime ()
specifier|public
name|long
name|getSubmittedTime
parameter_list|()
block|{
return|return
name|submittedTime
return|;
block|}
DECL|method|getStartedTime ()
specifier|public
name|long
name|getStartedTime
parameter_list|()
block|{
return|return
name|startedTime
return|;
block|}
DECL|method|getFinishedTime ()
specifier|public
name|long
name|getFinishedTime
parameter_list|()
block|{
return|return
name|finishedTime
return|;
block|}
DECL|method|getElapsedTime ()
specifier|public
name|long
name|getElapsedTime
parameter_list|()
block|{
return|return
name|elapsedTime
return|;
block|}
DECL|method|getApplicationTags ()
specifier|public
name|String
name|getApplicationTags
parameter_list|()
block|{
return|return
name|applicationTags
return|;
block|}
block|}
end_class

end_unit

