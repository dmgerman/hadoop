begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerCommonServiceProtos
operator|.
name|AppAggregatorsMapProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerCommonServiceProtos
operator|.
name|ReportNewAggregatorsInfoRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerCommonServiceProtos
operator|.
name|ReportNewAggregatorsInfoRequestProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReportNewAggregatorsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|AppAggregatorsMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|AppAggregatorsMapPBImpl
import|;
end_import

begin_class
DECL|class|ReportNewAggregatorsInfoRequestPBImpl
specifier|public
class|class
name|ReportNewAggregatorsInfoRequestPBImpl
extends|extends
name|ReportNewAggregatorsInfoRequest
block|{
DECL|field|proto
name|ReportNewAggregatorsInfoRequestProto
name|proto
init|=
name|ReportNewAggregatorsInfoRequestProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|ReportNewAggregatorsInfoRequestProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|aggregatorsList
specifier|private
name|List
argument_list|<
name|AppAggregatorsMap
argument_list|>
name|aggregatorsList
init|=
literal|null
decl_stmt|;
DECL|method|ReportNewAggregatorsInfoRequestPBImpl ()
specifier|public
name|ReportNewAggregatorsInfoRequestPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|ReportNewAggregatorsInfoRequestProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|ReportNewAggregatorsInfoRequestPBImpl ( ReportNewAggregatorsInfoRequestProto proto)
specifier|public
name|ReportNewAggregatorsInfoRequestPBImpl
parameter_list|(
name|ReportNewAggregatorsInfoRequestProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|ReportNewAggregatorsInfoRequestProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getProto
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|this
operator|.
name|getProto
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|cast
argument_list|(
name|other
argument_list|)
operator|.
name|getProto
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|aggregatorsList
operator|!=
literal|null
condition|)
block|{
name|addLocalAggregatorsToProto
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|ReportNewAggregatorsInfoRequestProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
DECL|method|addLocalAggregatorsToProto ()
specifier|private
name|void
name|addLocalAggregatorsToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearAppAggregators
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|AppAggregatorsMapProto
argument_list|>
name|protoList
init|=
operator|new
name|ArrayList
argument_list|<
name|AppAggregatorsMapProto
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|AppAggregatorsMap
name|m
range|:
name|this
operator|.
name|aggregatorsList
control|)
block|{
name|protoList
operator|.
name|add
argument_list|(
name|convertToProtoFormat
argument_list|(
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|addAllAppAggregators
argument_list|(
name|protoList
argument_list|)
expr_stmt|;
block|}
DECL|method|initLocalAggregatorsList ()
specifier|private
name|void
name|initLocalAggregatorsList
parameter_list|()
block|{
name|ReportNewAggregatorsInfoRequestProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|AppAggregatorsMapProto
argument_list|>
name|aggregatorsList
init|=
name|p
operator|.
name|getAppAggregatorsList
argument_list|()
decl_stmt|;
name|this
operator|.
name|aggregatorsList
operator|=
operator|new
name|ArrayList
argument_list|<
name|AppAggregatorsMap
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|AppAggregatorsMapProto
name|m
range|:
name|aggregatorsList
control|)
block|{
name|this
operator|.
name|aggregatorsList
operator|.
name|add
argument_list|(
name|convertFromProtoFormat
argument_list|(
name|m
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getAppAggregatorsList ()
specifier|public
name|List
argument_list|<
name|AppAggregatorsMap
argument_list|>
name|getAppAggregatorsList
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|aggregatorsList
operator|==
literal|null
condition|)
block|{
name|initLocalAggregatorsList
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|aggregatorsList
return|;
block|}
annotation|@
name|Override
DECL|method|setAppAggregatorsList (List<AppAggregatorsMap> appAggregatorsList)
specifier|public
name|void
name|setAppAggregatorsList
parameter_list|(
name|List
argument_list|<
name|AppAggregatorsMap
argument_list|>
name|appAggregatorsList
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|appAggregatorsList
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearAppAggregators
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|aggregatorsList
operator|=
name|appAggregatorsList
expr_stmt|;
block|}
DECL|method|convertFromProtoFormat ( AppAggregatorsMapProto p)
specifier|private
name|AppAggregatorsMapPBImpl
name|convertFromProtoFormat
parameter_list|(
name|AppAggregatorsMapProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|AppAggregatorsMapPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat ( AppAggregatorsMap m)
specifier|private
name|AppAggregatorsMapProto
name|convertToProtoFormat
parameter_list|(
name|AppAggregatorsMap
name|m
parameter_list|)
block|{
return|return
operator|(
operator|(
name|AppAggregatorsMapPBImpl
operator|)
name|m
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
block|}
end_class

end_unit

