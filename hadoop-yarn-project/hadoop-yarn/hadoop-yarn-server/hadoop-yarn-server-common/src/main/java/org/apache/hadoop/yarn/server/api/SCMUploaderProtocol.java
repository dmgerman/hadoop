begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderCanUploadRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderCanUploadResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderNotifyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderNotifyResponse
import|;
end_import

begin_comment
comment|/**  *<p>  * The protocol between a<code>NodeManager's</code>  *<code>SharedCacheUploadService</code> and the  *<code>SharedCacheManager.</code>  *</p>  */
end_comment

begin_interface
annotation|@
name|Private
annotation|@
name|Unstable
DECL|interface|SCMUploaderProtocol
specifier|public
interface|interface
name|SCMUploaderProtocol
block|{
comment|/**    *<p>    * The method used by the NodeManager's<code>SharedCacheUploadService</code>    * to notify the shared cache manager of a newly cached resource.    *</p>    *    *<p>    * The<code>SharedCacheManager</code> responds with whether or not the    * NodeManager should delete the uploaded file.    *</p>    *    * @param request notify the shared cache manager of a newly uploaded resource    *          to the shared cache    * @return response indicating if the newly uploaded resource should be    *         deleted    * @throws YarnException    * @throws IOException    */
specifier|public
name|SCMUploaderNotifyResponse
DECL|method|notify (SCMUploaderNotifyRequest request)
name|notify
parameter_list|(
name|SCMUploaderNotifyRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The method used by the NodeManager's<code>SharedCacheUploadService</code>    * to request whether a resource can be uploaded.    *</p>    *    *<p>    * The<code>SharedCacheManager</code> responds with whether or not the    * NodeManager can upload the file.    *</p>    *    * @param request whether the resource can be uploaded to the shared cache    * @return response indicating if resource can be uploaded to the shared cache    * @throws YarnException    * @throws IOException    */
specifier|public
name|SCMUploaderCanUploadResponse
DECL|method|canUpload (SCMUploaderCanUploadRequest request)
name|canUpload
parameter_list|(
name|SCMUploaderCanUploadRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
block|}
end_interface

end_unit

