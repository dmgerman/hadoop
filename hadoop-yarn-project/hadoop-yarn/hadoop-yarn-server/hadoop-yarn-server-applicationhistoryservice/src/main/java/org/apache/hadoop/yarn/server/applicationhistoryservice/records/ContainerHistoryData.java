begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * The class contains all the fields that are stored persistently for  *<code>RMContainer</code>.  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|ContainerHistoryData
specifier|public
class|class
name|ContainerHistoryData
block|{
DECL|field|containerId
specifier|private
name|ContainerId
name|containerId
decl_stmt|;
DECL|field|allocatedResource
specifier|private
name|Resource
name|allocatedResource
decl_stmt|;
DECL|field|assignedNode
specifier|private
name|NodeId
name|assignedNode
decl_stmt|;
DECL|field|priority
specifier|private
name|Priority
name|priority
decl_stmt|;
DECL|field|startTime
specifier|private
name|long
name|startTime
decl_stmt|;
DECL|field|finishTime
specifier|private
name|long
name|finishTime
decl_stmt|;
DECL|field|diagnosticsInfo
specifier|private
name|String
name|diagnosticsInfo
decl_stmt|;
DECL|field|containerExitStatus
specifier|private
name|int
name|containerExitStatus
decl_stmt|;
DECL|field|containerState
specifier|private
name|ContainerState
name|containerState
decl_stmt|;
DECL|field|exposedPorts
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|>
name|exposedPorts
decl_stmt|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newInstance (ContainerId containerId, Resource allocatedResource, NodeId assignedNode, Priority priority, long startTime, long finishTime, String diagnosticsInfo, int containerExitCode, ContainerState containerState)
specifier|public
specifier|static
name|ContainerHistoryData
name|newInstance
parameter_list|(
name|ContainerId
name|containerId
parameter_list|,
name|Resource
name|allocatedResource
parameter_list|,
name|NodeId
name|assignedNode
parameter_list|,
name|Priority
name|priority
parameter_list|,
name|long
name|startTime
parameter_list|,
name|long
name|finishTime
parameter_list|,
name|String
name|diagnosticsInfo
parameter_list|,
name|int
name|containerExitCode
parameter_list|,
name|ContainerState
name|containerState
parameter_list|)
block|{
name|ContainerHistoryData
name|containerHD
init|=
operator|new
name|ContainerHistoryData
argument_list|()
decl_stmt|;
name|containerHD
operator|.
name|setContainerId
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setAllocatedResource
argument_list|(
name|allocatedResource
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setAssignedNode
argument_list|(
name|assignedNode
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setStartTime
argument_list|(
name|startTime
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setFinishTime
argument_list|(
name|finishTime
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setDiagnosticsInfo
argument_list|(
name|diagnosticsInfo
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setContainerExitStatus
argument_list|(
name|containerExitCode
argument_list|)
expr_stmt|;
name|containerHD
operator|.
name|setContainerState
argument_list|(
name|containerState
argument_list|)
expr_stmt|;
return|return
name|containerHD
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getContainerId ()
specifier|public
name|ContainerId
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setContainerId (ContainerId containerId)
specifier|public
name|void
name|setContainerId
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
block|{
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getAllocatedResource ()
specifier|public
name|Resource
name|getAllocatedResource
parameter_list|()
block|{
return|return
name|allocatedResource
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setAllocatedResource (Resource resource)
specifier|public
name|void
name|setAllocatedResource
parameter_list|(
name|Resource
name|resource
parameter_list|)
block|{
name|this
operator|.
name|allocatedResource
operator|=
name|resource
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getAssignedNode ()
specifier|public
name|NodeId
name|getAssignedNode
parameter_list|()
block|{
return|return
name|assignedNode
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setAssignedNode (NodeId nodeId)
specifier|public
name|void
name|setAssignedNode
parameter_list|(
name|NodeId
name|nodeId
parameter_list|)
block|{
name|this
operator|.
name|assignedNode
operator|=
name|nodeId
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getPriority ()
specifier|public
name|Priority
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setPriority (Priority priority)
specifier|public
name|void
name|setPriority
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getStartTime ()
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|startTime
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setStartTime (long startTime)
specifier|public
name|void
name|setStartTime
parameter_list|(
name|long
name|startTime
parameter_list|)
block|{
name|this
operator|.
name|startTime
operator|=
name|startTime
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getFinishTime ()
specifier|public
name|long
name|getFinishTime
parameter_list|()
block|{
return|return
name|finishTime
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setFinishTime (long finishTime)
specifier|public
name|void
name|setFinishTime
parameter_list|(
name|long
name|finishTime
parameter_list|)
block|{
name|this
operator|.
name|finishTime
operator|=
name|finishTime
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getDiagnosticsInfo ()
specifier|public
name|String
name|getDiagnosticsInfo
parameter_list|()
block|{
return|return
name|diagnosticsInfo
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setDiagnosticsInfo (String diagnosticsInfo)
specifier|public
name|void
name|setDiagnosticsInfo
parameter_list|(
name|String
name|diagnosticsInfo
parameter_list|)
block|{
name|this
operator|.
name|diagnosticsInfo
operator|=
name|diagnosticsInfo
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getContainerExitStatus ()
specifier|public
name|int
name|getContainerExitStatus
parameter_list|()
block|{
return|return
name|containerExitStatus
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setContainerExitStatus (int containerExitStatus)
specifier|public
name|void
name|setContainerExitStatus
parameter_list|(
name|int
name|containerExitStatus
parameter_list|)
block|{
name|this
operator|.
name|containerExitStatus
operator|=
name|containerExitStatus
expr_stmt|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getContainerState ()
specifier|public
name|ContainerState
name|getContainerState
parameter_list|()
block|{
return|return
name|containerState
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setContainerState (ContainerState containerState)
specifier|public
name|void
name|setContainerState
parameter_list|(
name|ContainerState
name|containerState
parameter_list|)
block|{
name|this
operator|.
name|containerState
operator|=
name|containerState
expr_stmt|;
block|}
DECL|method|getExposedPorts ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|>
name|getExposedPorts
parameter_list|()
block|{
return|return
name|exposedPorts
return|;
block|}
DECL|method|setExposedPorts (Map<String, List<Map<String, String>>> ports)
specifier|public
name|void
name|setExposedPorts
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|>
name|ports
parameter_list|)
block|{
name|this
operator|.
name|exposedPorts
operator|=
name|ports
expr_stmt|;
block|}
block|}
end_class

end_unit

