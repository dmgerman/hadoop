begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|WebServices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppAttemptInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppAttemptsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ContainerInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ContainersInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_class
annotation|@
name|Singleton
annotation|@
name|Path
argument_list|(
literal|"/ws/v1/applicationhistory"
argument_list|)
DECL|class|AHSWebServices
specifier|public
class|class
name|AHSWebServices
extends|extends
name|WebServices
block|{
annotation|@
name|Inject
DECL|method|AHSWebServices (ApplicationContext appContext)
specifier|public
name|AHSWebServices
parameter_list|(
name|ApplicationContext
name|appContext
parameter_list|)
block|{
name|super
argument_list|(
name|appContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
DECL|method|get (@ontext HttpServletRequest req, @Context HttpServletResponse res)
specifier|public
name|AppsInfo
name|get
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|)
block|{
return|return
name|getApps
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptySet
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getApps (@ontext HttpServletRequest req, @Context HttpServletResponse res, @QueryParam(R) String stateQuery, @QueryParam(R) Set<String> statesQuery, @QueryParam(R) String finalStatusQuery, @QueryParam(R) String userQuery, @QueryParam(R) String queueQuery, @QueryParam(R) String count, @QueryParam(R) String startedBegin, @QueryParam(R) String startedEnd, @QueryParam(R) String finishBegin, @QueryParam(R) String finishEnd, @QueryParam(R) Set<String> applicationTypes)
specifier|public
name|AppsInfo
name|getApps
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"state"
argument_list|)
name|String
name|stateQuery
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"states"
argument_list|)
name|Set
argument_list|<
name|String
argument_list|>
name|statesQuery
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"finalStatus"
argument_list|)
name|String
name|finalStatusQuery
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"user"
argument_list|)
name|String
name|userQuery
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"queue"
argument_list|)
name|String
name|queueQuery
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"limit"
argument_list|)
name|String
name|count
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"startedTimeBegin"
argument_list|)
name|String
name|startedBegin
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"startedTimeEnd"
argument_list|)
name|String
name|startedEnd
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"finishedTimeBegin"
argument_list|)
name|String
name|finishBegin
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"finishedTimeEnd"
argument_list|)
name|String
name|finishEnd
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"applicationTypes"
argument_list|)
name|Set
argument_list|<
name|String
argument_list|>
name|applicationTypes
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|validateStates
argument_list|(
name|stateQuery
argument_list|,
name|statesQuery
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApps
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|stateQuery
argument_list|,
name|statesQuery
argument_list|,
name|finalStatusQuery
argument_list|,
name|userQuery
argument_list|,
name|queueQuery
argument_list|,
name|count
argument_list|,
name|startedBegin
argument_list|,
name|startedEnd
argument_list|,
name|finishBegin
argument_list|,
name|finishEnd
argument_list|,
name|applicationTypes
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps/{appid}"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getApp (@ontext HttpServletRequest req, @Context HttpServletResponse res, @PathParam(R) String appId)
specifier|public
name|AppInfo
name|getApp
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appid"
argument_list|)
name|String
name|appId
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApp
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|appId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps/{appid}/appattempts"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getAppAttempts (@ontext HttpServletRequest req, @Context HttpServletResponse res, @PathParam(R) String appId)
specifier|public
name|AppAttemptsInfo
name|getAppAttempts
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appid"
argument_list|)
name|String
name|appId
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getAppAttempts
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|appId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps/{appid}/appattempts/{appattemptid}"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getAppAttempt (@ontext HttpServletRequest req, @Context HttpServletResponse res, @PathParam(R) String appId, @PathParam(R) String appAttemptId)
specifier|public
name|AppAttemptInfo
name|getAppAttempt
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appid"
argument_list|)
name|String
name|appId
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appattemptid"
argument_list|)
name|String
name|appAttemptId
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getAppAttempt
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|appId
argument_list|,
name|appAttemptId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps/{appid}/appattempts/{appattemptid}/containers"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getContainers (@ontext HttpServletRequest req, @Context HttpServletResponse res, @PathParam(R) String appId, @PathParam(R) String appAttemptId)
specifier|public
name|ContainersInfo
name|getContainers
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appid"
argument_list|)
name|String
name|appId
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appattemptid"
argument_list|)
name|String
name|appAttemptId
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getContainers
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|appId
argument_list|,
name|appAttemptId
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/apps/{appid}/appattempts/{appattemptid}/containers/{containerid}"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
annotation|@
name|Override
DECL|method|getContainer (@ontext HttpServletRequest req, @Context HttpServletResponse res, @PathParam(R) String appId, @PathParam(R) String appAttemptId, @PathParam(R) String containerId)
specifier|public
name|ContainerInfo
name|getContainer
parameter_list|(
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appid"
argument_list|)
name|String
name|appId
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"appattemptid"
argument_list|)
name|String
name|appAttemptId
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"containerid"
argument_list|)
name|String
name|containerId
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getContainer
argument_list|(
name|req
argument_list|,
name|res
argument_list|,
name|appId
argument_list|,
name|appAttemptId
argument_list|,
name|containerId
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|void
DECL|method|validateStates (String stateQuery, Set<String> statesQuery)
name|validateStates
parameter_list|(
name|String
name|stateQuery
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|statesQuery
parameter_list|)
block|{
comment|// stateQuery is deprecated.
if|if
condition|(
name|stateQuery
operator|!=
literal|null
operator|&&
operator|!
name|stateQuery
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|statesQuery
operator|.
name|add
argument_list|(
name|stateQuery
argument_list|)
expr_stmt|;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|appStates
init|=
name|parseQueries
argument_list|(
name|statesQuery
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|appState
range|:
name|appStates
control|)
block|{
switch|switch
condition|(
name|YarnApplicationState
operator|.
name|valueOf
argument_list|(
name|appState
operator|.
name|toUpperCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
argument_list|)
condition|)
block|{
case|case
name|FINISHED
case|:
case|case
name|FAILED
case|:
case|case
name|KILLED
case|:
continue|continue;
default|default:
throw|throw
operator|new
name|BadRequestException
argument_list|(
literal|"Invalid application-state "
operator|+
name|appState
operator|+
literal|" specified. It should be a final state"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

