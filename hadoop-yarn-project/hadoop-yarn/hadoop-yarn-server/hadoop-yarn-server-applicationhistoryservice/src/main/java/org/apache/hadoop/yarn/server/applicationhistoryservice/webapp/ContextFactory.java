begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_comment
comment|/**  * ContextFactory to reuse JAXBContextImpl for DAO Classes.  */
end_comment

begin_class
DECL|class|ContextFactory
specifier|public
specifier|final
class|class
name|ContextFactory
block|{
DECL|field|jaxbContext
specifier|private
specifier|static
name|JAXBContext
name|jaxbContext
decl_stmt|;
DECL|method|ContextFactory ()
specifier|private
name|ContextFactory
parameter_list|()
block|{   }
comment|// Called from WebComponent.service
DECL|method|createContext (Class[] classes, Map<String, Object> properties)
specifier|public
specifier|static
name|JAXBContext
name|createContext
parameter_list|(
name|Class
index|[]
name|classes
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
throws|throws
name|Exception
block|{
synchronized|synchronized
init|(
name|ContextFactory
operator|.
name|class
init|)
block|{
if|if
condition|(
name|jaxbContext
operator|==
literal|null
condition|)
block|{
name|Class
name|spFactory
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"com.sun.xml.internal.bind.v2.ContextFactory"
argument_list|)
decl_stmt|;
name|Method
name|m
init|=
name|spFactory
operator|.
name|getMethod
argument_list|(
literal|"createContext"
argument_list|,
name|Class
index|[]
operator|.
expr|class
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|jaxbContext
operator|=
operator|(
name|JAXBContext
operator|)
name|m
operator|.
name|invoke
argument_list|(
operator|(
name|Object
operator|)
literal|null
argument_list|,
name|classes
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|jaxbContext
return|;
block|}
comment|// Called from WebComponent.init
DECL|method|createContext (String contextPath, ClassLoader classLoader, Map<String, Object> properties)
specifier|public
specifier|static
name|JAXBContext
name|createContext
parameter_list|(
name|String
name|contextPath
parameter_list|,
name|ClassLoader
name|classLoader
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|properties
parameter_list|)
throws|throws
name|Exception
block|{
name|Class
name|spFactory
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"com.sun.xml.internal.bind.v2.ContextFactory"
argument_list|)
decl_stmt|;
name|Method
name|m
init|=
name|spFactory
operator|.
name|getMethod
argument_list|(
literal|"createContext"
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|ClassLoader
operator|.
name|class
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
operator|(
name|JAXBContext
operator|)
name|m
operator|.
name|invoke
argument_list|(
literal|null
argument_list|,
name|contextPath
argument_list|,
name|classLoader
argument_list|,
name|properties
argument_list|)
return|;
block|}
block|}
end_class

end_unit

