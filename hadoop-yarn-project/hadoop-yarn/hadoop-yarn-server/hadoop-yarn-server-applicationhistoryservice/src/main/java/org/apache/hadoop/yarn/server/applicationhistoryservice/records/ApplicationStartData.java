begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * The class contains the fields that can be determined when<code>RMApp</code>  * starts, and that need to be stored persistently.  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|ApplicationStartData
specifier|public
specifier|abstract
class|class
name|ApplicationStartData
block|{
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newInstance (ApplicationId applicationId, String applicationName, String applicationType, String queue, String user, long submitTime, long startTime)
specifier|public
specifier|static
name|ApplicationStartData
name|newInstance
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|,
name|String
name|applicationName
parameter_list|,
name|String
name|applicationType
parameter_list|,
name|String
name|queue
parameter_list|,
name|String
name|user
parameter_list|,
name|long
name|submitTime
parameter_list|,
name|long
name|startTime
parameter_list|)
block|{
name|ApplicationStartData
name|appSD
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationStartData
operator|.
name|class
argument_list|)
decl_stmt|;
name|appSD
operator|.
name|setApplicationId
argument_list|(
name|applicationId
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setApplicationName
argument_list|(
name|applicationName
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setApplicationType
argument_list|(
name|applicationType
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setQueue
argument_list|(
name|queue
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setSubmitTime
argument_list|(
name|submitTime
argument_list|)
expr_stmt|;
name|appSD
operator|.
name|setStartTime
argument_list|(
name|startTime
argument_list|)
expr_stmt|;
return|return
name|appSD
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getApplicationId ()
specifier|public
specifier|abstract
name|ApplicationId
name|getApplicationId
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setApplicationId (ApplicationId applicationId)
specifier|public
specifier|abstract
name|void
name|setApplicationId
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getApplicationName ()
specifier|public
specifier|abstract
name|String
name|getApplicationName
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setApplicationName (String applicationName)
specifier|public
specifier|abstract
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getApplicationType ()
specifier|public
specifier|abstract
name|String
name|getApplicationType
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setApplicationType (String applicationType)
specifier|public
specifier|abstract
name|void
name|setApplicationType
parameter_list|(
name|String
name|applicationType
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getUser ()
specifier|public
specifier|abstract
name|String
name|getUser
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setUser (String user)
specifier|public
specifier|abstract
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getQueue ()
specifier|public
specifier|abstract
name|String
name|getQueue
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setQueue (String queue)
specifier|public
specifier|abstract
name|void
name|setQueue
parameter_list|(
name|String
name|queue
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getSubmitTime ()
specifier|public
specifier|abstract
name|long
name|getSubmitTime
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setSubmitTime (long submitTime)
specifier|public
specifier|abstract
name|void
name|setSubmitTime
parameter_list|(
name|long
name|submitTime
parameter_list|)
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getStartTime ()
specifier|public
specifier|abstract
name|long
name|getStartTime
parameter_list|()
function_decl|;
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setStartTime (long startTime)
specifier|public
specifier|abstract
name|void
name|setStartTime
parameter_list|(
name|long
name|startTime
parameter_list|)
function_decl|;
block|}
end_class

end_unit

