begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_comment
comment|/**  * In-memory implementation of {@link TimelineStore}. This  * implementation is for test purpose only. If users improperly instantiate it,  * they may encounter reading and writing history data in different memory  * store.  *   * The methods are synchronized to avoid concurrent modification on the memory.  *   */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|MemoryTimelineStore
specifier|public
class|class
name|MemoryTimelineStore
extends|extends
name|KeyValueBasedTimelineStore
block|{
DECL|class|HashMapStoreAdapter
specifier|static
class|class
name|HashMapStoreAdapter
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
implements|implements
name|TimelineStoreMapAdapter
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
block|{
DECL|field|internalMap
name|Map
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|internalMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|get (K key)
specifier|public
name|V
name|get
parameter_list|(
name|K
name|key
parameter_list|)
block|{
return|return
name|internalMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|put (K key, V value)
specifier|public
name|void
name|put
parameter_list|(
name|K
name|key
parameter_list|,
name|V
name|value
parameter_list|)
block|{
name|internalMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|remove (K key)
specifier|public
name|void
name|remove
parameter_list|(
name|K
name|key
parameter_list|)
block|{
name|internalMap
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|V
argument_list|>
DECL|method|valueSetIterator ()
name|valueSetIterator
parameter_list|()
block|{
return|return
operator|new
name|TreeSet
argument_list|<>
argument_list|(
name|internalMap
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|valueSetIterator (V minV)
specifier|public
name|Iterator
argument_list|<
name|V
argument_list|>
name|valueSetIterator
parameter_list|(
name|V
name|minV
parameter_list|)
block|{
if|if
condition|(
name|minV
operator|instanceof
name|Comparable
condition|)
block|{
name|TreeSet
argument_list|<
name|V
argument_list|>
name|tempTreeSet
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|V
name|value
range|:
name|internalMap
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
operator|(
operator|(
name|Comparable
operator|)
name|value
operator|)
operator|.
name|compareTo
argument_list|(
name|minV
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|tempTreeSet
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|tempTreeSet
operator|.
name|iterator
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|valueSetIterator
argument_list|()
return|;
block|}
block|}
block|}
DECL|method|MemoryTimelineStore ()
specifier|public
name|MemoryTimelineStore
parameter_list|()
block|{
name|this
argument_list|(
name|MemoryTimelineStore
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|MemoryTimelineStore (String name)
specifier|public
name|MemoryTimelineStore
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|entities
operator|=
operator|new
name|HashMapStoreAdapter
argument_list|<>
argument_list|()
expr_stmt|;
name|entityInsertTimes
operator|=
operator|new
name|HashMapStoreAdapter
argument_list|<>
argument_list|()
expr_stmt|;
name|domainById
operator|=
operator|new
name|HashMapStoreAdapter
argument_list|<>
argument_list|()
expr_stmt|;
name|domainsByOwner
operator|=
operator|new
name|HashMapStoreAdapter
argument_list|<>
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

