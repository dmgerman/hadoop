begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationAttemptFinishData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationAttemptHistoryData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationAttemptStartData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationFinishData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationHistoryData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ApplicationStartData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ContainerFinishData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ContainerHistoryData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|records
operator|.
name|ContainerStartData
import|;
end_import

begin_comment
comment|/**  * Dummy implementation of {@link ApplicationHistoryStore}. If this  * implementation is used, no history data will be persisted.  *   */
end_comment

begin_class
annotation|@
name|Unstable
annotation|@
name|Private
DECL|class|NullApplicationHistoryStore
specifier|public
class|class
name|NullApplicationHistoryStore
extends|extends
name|AbstractService
implements|implements
name|ApplicationHistoryStore
block|{
DECL|method|NullApplicationHistoryStore ()
specifier|public
name|NullApplicationHistoryStore
parameter_list|()
block|{
name|super
argument_list|(
name|NullApplicationHistoryStore
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|applicationStarted (ApplicationStartData appStart)
specifier|public
name|void
name|applicationStarted
parameter_list|(
name|ApplicationStartData
name|appStart
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|applicationFinished (ApplicationFinishData appFinish)
specifier|public
name|void
name|applicationFinished
parameter_list|(
name|ApplicationFinishData
name|appFinish
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|applicationAttemptStarted ( ApplicationAttemptStartData appAttemptStart)
specifier|public
name|void
name|applicationAttemptStarted
parameter_list|(
name|ApplicationAttemptStartData
name|appAttemptStart
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|applicationAttemptFinished ( ApplicationAttemptFinishData appAttemptFinish)
specifier|public
name|void
name|applicationAttemptFinished
parameter_list|(
name|ApplicationAttemptFinishData
name|appAttemptFinish
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|containerStarted (ContainerStartData containerStart)
specifier|public
name|void
name|containerStarted
parameter_list|(
name|ContainerStartData
name|containerStart
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|containerFinished (ContainerFinishData containerFinish)
specifier|public
name|void
name|containerFinished
parameter_list|(
name|ContainerFinishData
name|containerFinish
parameter_list|)
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|getApplication (ApplicationId appId)
specifier|public
name|ApplicationHistoryData
name|getApplication
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getAllApplications ()
specifier|public
name|Map
argument_list|<
name|ApplicationId
argument_list|,
name|ApplicationHistoryData
argument_list|>
name|getAllApplications
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|Collections
operator|.
name|emptyMap
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|ApplicationAttemptHistoryData
argument_list|>
DECL|method|getApplicationAttempts (ApplicationId appId)
name|getApplicationAttempts
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Collections
operator|.
name|emptyMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttempt ( ApplicationAttemptId appAttemptId)
specifier|public
name|ApplicationAttemptHistoryData
name|getApplicationAttempt
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getContainer (ContainerId containerId)
specifier|public
name|ContainerHistoryData
name|getContainer
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getAMContainer (ApplicationAttemptId appAttemptId)
specifier|public
name|ContainerHistoryData
name|getAMContainer
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getContainers ( ApplicationAttemptId appAttemptId)
specifier|public
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|ContainerHistoryData
argument_list|>
name|getContainers
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|Collections
operator|.
name|emptyMap
argument_list|()
return|;
block|}
block|}
end_class

end_unit

