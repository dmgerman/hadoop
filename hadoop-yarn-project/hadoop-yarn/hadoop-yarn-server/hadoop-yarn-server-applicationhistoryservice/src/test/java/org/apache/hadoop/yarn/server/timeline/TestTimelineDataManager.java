begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelinePutResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|AdminACLsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|security
operator|.
name|TimelineACLsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestTimelineDataManager
specifier|public
class|class
name|TestTimelineDataManager
extends|extends
name|TimelineStoreTestUtils
block|{
DECL|field|fsContext
specifier|private
name|FileContext
name|fsContext
decl_stmt|;
DECL|field|fsPath
specifier|private
name|File
name|fsPath
decl_stmt|;
DECL|field|dataManaer
specifier|private
name|TimelineDataManager
name|dataManaer
decl_stmt|;
DECL|field|aclsManager
specifier|private
specifier|static
name|TimelineACLsManager
name|aclsManager
decl_stmt|;
DECL|field|adminACLsManager
specifier|private
specifier|static
name|AdminACLsManager
name|adminACLsManager
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|fsPath
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"-tmpDir"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|fsContext
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_PATH
argument_list|,
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_TTL_ENABLE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|=
operator|new
name|LeveldbTimelineStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
name|loadVerificationEntityData
argument_list|()
expr_stmt|;
name|loadTestDomainData
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ACL_ENABLE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|aclsManager
operator|=
operator|new
name|TimelineACLsManager
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|aclsManager
operator|.
name|setTimelineStore
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|dataManaer
operator|=
operator|new
name|TimelineDataManager
argument_list|(
name|store
argument_list|,
name|aclsManager
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ACL_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_ADMIN_ACL
argument_list|,
literal|"admin"
argument_list|)
expr_stmt|;
name|dataManaer
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|adminACLsManager
operator|=
operator|new
name|AdminACLsManager
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|fsContext
operator|!=
literal|null
condition|)
block|{
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetOldEntityWithOutDomainId ()
specifier|public
name|void
name|testGetOldEntityWithOutDomainId
parameter_list|()
throws|throws
name|Exception
block|{
name|TimelineEntity
name|entity
init|=
name|dataManaer
operator|.
name|getEntity
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|"OLD_ENTITY_ID_1"
argument_list|,
literal|null
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|,
name|entity
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
name|entity
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|,
name|entity
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesAclEnabled ()
specifier|public
name|void
name|testGetEntitiesAclEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|AdminACLsManager
name|oldAdminACLsManager
init|=
name|aclsManager
operator|.
name|setAdminACLsManager
argument_list|(
name|adminACLsManager
argument_list|)
decl_stmt|;
try|try
block|{
name|TimelineEntities
name|entities
init|=
name|dataManaer
operator|.
name|getEntities
argument_list|(
literal|"ACL_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|1l
argument_list|,
literal|null
argument_list|,
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
literal|"owner_1"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"group1"
block|}
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ACL_ENTITY_ID_11"
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|aclsManager
operator|.
name|setAdminACLsManager
argument_list|(
name|oldAdminACLsManager
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetOldEntitiesWithOutDomainId ()
specifier|public
name|void
name|testGetOldEntitiesWithOutDomainId
parameter_list|()
throws|throws
name|Exception
block|{
name|TimelineEntities
name|entities
init|=
name|dataManaer
operator|.
name|getEntities
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_ID_2"
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatingOldEntityWithoutDomainId ()
specifier|public
name|void
name|testUpdatingOldEntityWithoutDomainId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Set the domain to the default domain when updating
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setDomainId
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addOtherInfo
argument_list|(
literal|"NEW_OTHER_INFO_KEY"
argument_list|,
literal|"NEW_OTHER_INFO_VALUE"
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|TimelinePutResponse
name|response
init|=
name|dataManaer
operator|.
name|postEntities
argument_list|(
name|entities
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|,
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
comment|// Even in leveldb, the domain is updated to the default domain Id
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|,
name|entity
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entity
operator|.
name|getOtherInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NEW_OTHER_INFO_KEY"
argument_list|,
name|entity
operator|.
name|getOtherInfo
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NEW_OTHER_INFO_VALUE"
argument_list|,
name|entity
operator|.
name|getOtherInfo
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set the domain to the non-default domain when updating
name|entity
operator|=
operator|new
name|TimelineEntity
argument_list|()
expr_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
literal|"OLD_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setDomainId
argument_list|(
literal|"NON_DEFAULT"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addOtherInfo
argument_list|(
literal|"NEW_OTHER_INFO_KEY"
argument_list|,
literal|"NEW_OTHER_INFO_VALUE"
argument_list|)
expr_stmt|;
name|entities
operator|=
operator|new
name|TimelineEntities
argument_list|()
expr_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|response
operator|=
name|dataManaer
operator|.
name|postEntities
argument_list|(
name|entities
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelinePutResponse
operator|.
name|TimelinePutError
operator|.
name|ACCESS_DENIED
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"OLD_ENTITY_ID_2"
argument_list|,
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
comment|// In leveldb, the domain Id is still null
name|Assert
operator|.
name|assertNull
argument_list|(
name|entity
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Updating is not executed
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getOtherInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

