begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestCrossOriginFilterInitializer
specifier|public
class|class
name|TestCrossOriginFilterInitializer
block|{
annotation|@
name|Test
DECL|method|testGetFilterParameters ()
specifier|public
name|void
name|testGetFilterParameters
parameter_list|()
block|{
comment|// Initialize configuration object
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CrossOriginFilterInitializer
operator|.
name|PREFIX
operator|+
literal|"rootparam"
argument_list|,
literal|"rootvalue"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CrossOriginFilterInitializer
operator|.
name|PREFIX
operator|+
literal|"nested.param"
argument_list|,
literal|"nestedvalue"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"outofscopeparam"
argument_list|,
literal|"outofscopevalue"
argument_list|)
expr_stmt|;
comment|// call function under test
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filterParameters
init|=
name|CrossOriginFilterInitializer
operator|.
name|getFilterParameters
argument_list|(
name|conf
argument_list|)
decl_stmt|;
comment|// retrieve values
name|String
name|rootvalue
init|=
name|filterParameters
operator|.
name|get
argument_list|(
literal|"rootparam"
argument_list|)
decl_stmt|;
name|String
name|nestedvalue
init|=
name|filterParameters
operator|.
name|get
argument_list|(
literal|"nested.param"
argument_list|)
decl_stmt|;
name|String
name|outofscopeparam
init|=
name|filterParameters
operator|.
name|get
argument_list|(
literal|"outofscopeparam"
argument_list|)
decl_stmt|;
comment|// verify expected values are in place
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Could not find filter parameter"
argument_list|,
literal|"rootvalue"
argument_list|,
name|rootvalue
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Could not find filter parameter"
argument_list|,
literal|"nestedvalue"
argument_list|,
name|nestedvalue
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
literal|"Found unexpected value in filter parameters"
argument_list|,
name|outofscopeparam
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

