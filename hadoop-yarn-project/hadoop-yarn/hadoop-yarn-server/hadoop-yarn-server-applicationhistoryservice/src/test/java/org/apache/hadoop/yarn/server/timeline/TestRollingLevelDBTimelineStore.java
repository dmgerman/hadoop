begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|ServiceStateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelinePutResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelinePutResponse
operator|.
name|TimelinePutError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|records
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|log
operator|.
name|Log
import|;
end_import

begin_comment
comment|/** Test class to verify RollingLevelDBTimelineStore. */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|TestRollingLevelDBTimelineStore
specifier|public
class|class
name|TestRollingLevelDBTimelineStore
extends|extends
name|TimelineStoreTestUtils
block|{
DECL|field|fsContext
specifier|private
name|FileContext
name|fsContext
decl_stmt|;
DECL|field|fsPath
specifier|private
name|File
name|fsPath
decl_stmt|;
DECL|field|config
specifier|private
name|Configuration
name|config
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|fsContext
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|fsPath
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"-tmpDir"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_PATH
argument_list|,
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_TTL_ENABLE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|=
operator|new
name|RollingLevelDBTimelineStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
name|loadVerificationEntityData
argument_list|()
expr_stmt|;
name|loadTestDomainData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|store
operator|.
name|stop
argument_list|()
expr_stmt|;
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRootDirPermission ()
specifier|public
name|void
name|testRootDirPermission
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
operator|new
name|YarnConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|FileStatus
name|file
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|RollingLevelDBTimelineStore
operator|.
name|FILENAME
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RollingLevelDBTimelineStore
operator|.
name|LEVELDB_DIR_UMASK
argument_list|,
name|file
operator|.
name|getPermission
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSingleEntity ()
specifier|public
name|void
name|testGetSingleEntity
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetSingleEntity
argument_list|()
expr_stmt|;
operator|(
operator|(
name|RollingLevelDBTimelineStore
operator|)
name|store
operator|)
operator|.
name|clearStartTimeCache
argument_list|()
expr_stmt|;
name|super
operator|.
name|testGetSingleEntity
argument_list|()
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntities ()
specifier|public
name|void
name|testGetEntities
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntities
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithFromId ()
specifier|public
name|void
name|testGetEntitiesWithFromId
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithFromId
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithFromTs ()
specifier|public
name|void
name|testGetEntitiesWithFromTs
parameter_list|()
throws|throws
name|IOException
block|{
comment|// feature not supported
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithPrimaryFilters ()
specifier|public
name|void
name|testGetEntitiesWithPrimaryFilters
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithPrimaryFilters
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithSecondaryFilters ()
specifier|public
name|void
name|testGetEntitiesWithSecondaryFilters
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithSecondaryFilters
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEvents ()
specifier|public
name|void
name|testGetEvents
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheSizes ()
specifier|public
name|void
name|testCacheSizes
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|RollingLevelDBTimelineStore
operator|.
name|getStartTimeReadCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|RollingLevelDBTimelineStore
operator|.
name|getStartTimeWriteCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_READ_CACHE_SIZE
argument_list|,
literal|10001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10001
argument_list|,
name|RollingLevelDBTimelineStore
operator|.
name|getStartTimeReadCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_WRITE_CACHE_SIZE
argument_list|,
literal|10002
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10002
argument_list|,
name|RollingLevelDBTimelineStore
operator|.
name|getStartTimeWriteCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCheckVersion ()
specifier|public
name|void
name|testCheckVersion
parameter_list|()
throws|throws
name|IOException
block|{
name|RollingLevelDBTimelineStore
name|dbStore
init|=
operator|(
name|RollingLevelDBTimelineStore
operator|)
name|store
decl_stmt|;
comment|// default version
name|Version
name|defaultVersion
init|=
name|dbStore
operator|.
name|getCurrentVersion
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|defaultVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
comment|// compatible version
name|Version
name|compatibleVersion
init|=
name|Version
operator|.
name|newInstance
argument_list|(
name|defaultVersion
operator|.
name|getMajorVersion
argument_list|()
argument_list|,
name|defaultVersion
operator|.
name|getMinorVersion
argument_list|()
operator|+
literal|2
argument_list|)
decl_stmt|;
name|dbStore
operator|.
name|storeVersion
argument_list|(
name|compatibleVersion
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|compatibleVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|dbStore
operator|=
operator|(
name|RollingLevelDBTimelineStore
operator|)
name|store
expr_stmt|;
comment|// overwrite the compatible version
name|Assert
operator|.
name|assertEquals
argument_list|(
name|defaultVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
comment|// incompatible version
name|Version
name|incompatibleVersion
init|=
name|Version
operator|.
name|newInstance
argument_list|(
name|defaultVersion
operator|.
name|getMajorVersion
argument_list|()
operator|+
literal|1
argument_list|,
name|defaultVersion
operator|.
name|getMinorVersion
argument_list|()
argument_list|)
decl_stmt|;
name|dbStore
operator|.
name|storeVersion
argument_list|(
name|incompatibleVersion
argument_list|)
expr_stmt|;
try|try
block|{
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incompatible version, should expect fail here."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceStateException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Exception message mismatch"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Incompatible version for timeline store"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testValidateConfig ()
specifier|public
name|void
name|testValidateConfig
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|copyConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|config
argument_list|)
decl_stmt|;
try|try
block|{
name|Configuration
name|newConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|copyConfig
argument_list|)
decl_stmt|;
name|newConfig
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_TTL_MS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|config
operator|=
name|newConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_TTL_MS
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|Configuration
name|newConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|copyConfig
argument_list|)
decl_stmt|;
name|newConfig
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_TTL_INTERVAL_MS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|config
operator|=
name|newConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_TTL_INTERVAL_MS
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|Configuration
name|newConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|copyConfig
argument_list|)
decl_stmt|;
name|newConfig
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|=
name|newConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|Configuration
name|newConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|copyConfig
argument_list|)
decl_stmt|;
name|newConfig
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_READ_CACHE_SIZE
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|config
operator|=
name|newConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_READ_CACHE_SIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|Configuration
name|newConfig
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|copyConfig
argument_list|)
decl_stmt|;
name|newConfig
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_WRITE_CACHE_SIZE
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|config
operator|=
name|newConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_WRITE_CACHE_SIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|config
operator|=
name|copyConfig
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
block|}
DECL|method|restartTimelineStore ()
specifier|private
name|void
name|restartTimelineStore
parameter_list|()
throws|throws
name|IOException
block|{
comment|// need to close so leveldb releases database lock
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|store
operator|=
operator|new
name|RollingLevelDBTimelineStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDomain ()
specifier|public
name|void
name|testGetDomain
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetDomain
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDomains ()
specifier|public
name|void
name|testGetDomains
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetDomains
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelatingToNonExistingEntity ()
specifier|public
name|void
name|testRelatingToNonExistingEntity
parameter_list|()
throws|throws
name|IOException
block|{
name|TimelineEntity
name|entityToStore
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entityToStore
operator|.
name|setEntityType
argument_list|(
literal|"TEST_ENTITY_TYPE_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setEntityId
argument_list|(
literal|"TEST_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setDomainId
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addRelatedEntity
argument_list|(
literal|"TEST_ENTITY_TYPE_2"
argument_list|,
literal|"TEST_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToStore
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entityToGet
init|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"TEST_ENTITY_ID_2"
argument_list|,
literal|"TEST_ENTITY_TYPE_2"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entityToGet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"DEFAULT"
argument_list|,
name|entityToGet
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"TEST_ENTITY_TYPE_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"TEST_ENTITY_ID_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelatingToEntityInSamePut ()
specifier|public
name|void
name|testRelatingToEntityInSamePut
parameter_list|()
throws|throws
name|IOException
block|{
name|TimelineEntity
name|entityToRelate
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entityToRelate
operator|.
name|setEntityType
argument_list|(
literal|"TEST_ENTITY_TYPE_2"
argument_list|)
expr_stmt|;
name|entityToRelate
operator|.
name|setEntityId
argument_list|(
literal|"TEST_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|entityToRelate
operator|.
name|setDomainId
argument_list|(
literal|"TEST_DOMAIN"
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entityToStore
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entityToStore
operator|.
name|setEntityType
argument_list|(
literal|"TEST_ENTITY_TYPE_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setEntityId
argument_list|(
literal|"TEST_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setDomainId
argument_list|(
literal|"TEST_DOMAIN"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addRelatedEntity
argument_list|(
literal|"TEST_ENTITY_TYPE_2"
argument_list|,
literal|"TEST_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToStore
argument_list|)
expr_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToRelate
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entityToGet
init|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"TEST_ENTITY_ID_2"
argument_list|,
literal|"TEST_ENTITY_TYPE_2"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entityToGet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"TEST_DOMAIN"
argument_list|,
name|entityToGet
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"TEST_ENTITY_TYPE_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"TEST_ENTITY_ID_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelatingToOldEntityWithoutDomainId ()
specifier|public
name|void
name|testRelatingToOldEntityWithoutDomainId
parameter_list|()
throws|throws
name|IOException
block|{
comment|// New entity is put in the default domain
name|TimelineEntity
name|entityToStore
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entityToStore
operator|.
name|setEntityType
argument_list|(
literal|"NEW_ENTITY_TYPE_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setEntityId
argument_list|(
literal|"NEW_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setDomainId
argument_list|(
name|TimelineDataManager
operator|.
name|DEFAULT_DOMAIN_ID
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addRelatedEntity
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|"OLD_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToStore
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entityToGet
init|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|,
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entityToGet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"DEFAULT"
argument_list|,
name|entityToGet
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NEW_ENTITY_TYPE_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NEW_ENTITY_ID_1"
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
comment|// New entity is not put in the default domain
name|entityToStore
operator|=
operator|new
name|TimelineEntity
argument_list|()
expr_stmt|;
name|entityToStore
operator|.
name|setEntityType
argument_list|(
literal|"NEW_ENTITY_TYPE_2"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setEntityId
argument_list|(
literal|"NEW_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setDomainId
argument_list|(
literal|"NON_DEFAULT"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addRelatedEntity
argument_list|(
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|"OLD_ENTITY_ID_1"
argument_list|)
expr_stmt|;
name|entities
operator|=
operator|new
name|TimelineEntities
argument_list|()
expr_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToStore
argument_list|)
expr_stmt|;
name|TimelinePutResponse
name|response
init|=
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelinePutError
operator|.
name|FORBIDDEN_RELATION
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
name|entityToGet
operator|=
name|store
operator|.
name|getEntity
argument_list|(
literal|"OLD_ENTITY_ID_1"
argument_list|,
literal|"OLD_ENTITY_TYPE_1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|entityToGet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"DEFAULT"
argument_list|,
name|entityToGet
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Still have one related entity
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entityToGet
operator|.
name|getRelatedEntities
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testStorePerformance ()
specifier|public
name|void
name|testStorePerformance
parameter_list|()
throws|throws
name|IOException
block|{
name|TimelineEntity
name|entityToStorePrep
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entityToStorePrep
operator|.
name|setEntityType
argument_list|(
literal|"TEST_ENTITY_TYPE_PREP"
argument_list|)
expr_stmt|;
name|entityToStorePrep
operator|.
name|setEntityId
argument_list|(
literal|"TEST_ENTITY_ID_PREP"
argument_list|)
expr_stmt|;
name|entityToStorePrep
operator|.
name|setDomainId
argument_list|(
literal|"TEST_DOMAIN"
argument_list|)
expr_stmt|;
name|entityToStorePrep
operator|.
name|addRelatedEntity
argument_list|(
literal|"TEST_ENTITY_TYPE_2"
argument_list|,
literal|"TEST_ENTITY_ID_2"
argument_list|)
expr_stmt|;
name|entityToStorePrep
operator|.
name|setStartTime
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entitiesPrep
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entitiesPrep
operator|.
name|addEntity
argument_list|(
name|entityToStorePrep
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entitiesPrep
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|int
name|num
init|=
literal|1000000
decl_stmt|;
name|Log
operator|.
name|info
argument_list|(
literal|"Start test for "
operator|+
name|num
argument_list|)
expr_stmt|;
specifier|final
name|String
name|tezTaskAttemptId
init|=
literal|"TEZ_TA"
decl_stmt|;
specifier|final
name|String
name|tezEntityId
init|=
literal|"attempt_1429158534256_0001_1_00_000000_"
decl_stmt|;
specifier|final
name|String
name|tezTaskId
init|=
literal|"TEZ_T"
decl_stmt|;
specifier|final
name|String
name|tezDomainId
init|=
literal|"Tez_ATS_application_1429158534256_0001"
decl_stmt|;
name|TimelineEntity
name|entityToStore
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|TimelineEvent
name|startEvt
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|entityToStore
operator|.
name|setEntityType
argument_list|(
name|tezTaskAttemptId
argument_list|)
expr_stmt|;
name|startEvt
operator|.
name|setEventType
argument_list|(
literal|"TASK_ATTEMPT_STARTED"
argument_list|)
expr_stmt|;
name|startEvt
operator|.
name|setTimestamp
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addEvent
argument_list|(
name|startEvt
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setDomainId
argument_list|(
name|tezDomainId
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addPrimaryFilter
argument_list|(
literal|"status"
argument_list|,
literal|"SUCCEEDED"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addPrimaryFilter
argument_list|(
literal|"applicationId"
argument_list|,
literal|"application_1429158534256_0001"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addPrimaryFilter
argument_list|(
literal|"TEZ_VERTEX_ID"
argument_list|,
literal|"vertex_1429158534256_0001_1_00"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addPrimaryFilter
argument_list|(
literal|"TEZ_DAG_ID"
argument_list|,
literal|"dag_1429158534256_0001_1"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addPrimaryFilter
argument_list|(
literal|"TEZ_TASK_ID"
argument_list|,
literal|"task_1429158534256_0001_1_00_000000"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|setStartTime
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"startTime"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"inProgressLogsURL"
argument_list|,
literal|"localhost:8042/inProgressLogsURL"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"completedLogsURL"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"nodeId"
argument_list|,
literal|"localhost:54450"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"nodeHttpAddress"
argument_list|,
literal|"localhost:8042"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"containerId"
argument_list|,
literal|"container_1429158534256_0001_01_000002"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addOtherInfo
argument_list|(
literal|"status"
argument_list|,
literal|"RUNNING"
argument_list|)
expr_stmt|;
name|entityToStore
operator|.
name|addRelatedEntity
argument_list|(
name|tezTaskId
argument_list|,
literal|"TEZ_TASK_ID_1"
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|entityToStore
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
operator|++
name|i
control|)
block|{
name|entityToStore
operator|.
name|setEntityId
argument_list|(
name|tezEntityId
operator|+
name|i
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
block|}
name|long
name|duration
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
decl_stmt|;
name|Log
operator|.
name|info
argument_list|(
literal|"Duration for "
operator|+
name|num
operator|+
literal|": "
operator|+
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|TestRollingLevelDBTimelineStore
name|store
init|=
operator|new
name|TestRollingLevelDBTimelineStore
argument_list|()
decl_stmt|;
name|store
operator|.
name|setup
argument_list|()
expr_stmt|;
name|store
operator|.
name|testStorePerformance
argument_list|()
expr_stmt|;
name|store
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

