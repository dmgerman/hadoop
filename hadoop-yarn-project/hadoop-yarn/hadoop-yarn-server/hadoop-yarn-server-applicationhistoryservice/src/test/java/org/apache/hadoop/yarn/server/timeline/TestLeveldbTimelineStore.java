begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|GenericObjectMapper
operator|.
name|writeReverseOrderedLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|ServiceStateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelinePutResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|records
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|LeveldbTimelineStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|NameValuePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|iq80
operator|.
name|leveldb
operator|.
name|DBIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|TestLeveldbTimelineStore
specifier|public
class|class
name|TestLeveldbTimelineStore
extends|extends
name|TimelineStoreTestUtils
block|{
DECL|field|fsContext
specifier|private
name|FileContext
name|fsContext
decl_stmt|;
DECL|field|fsPath
specifier|private
name|File
name|fsPath
decl_stmt|;
DECL|field|config
specifier|private
name|Configuration
name|config
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|fsContext
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|fsPath
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"-tmpDir"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_PATH
argument_list|,
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_TTL_ENABLE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|=
operator|new
name|LeveldbTimelineStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
name|loadVerificationEntityData
argument_list|()
expr_stmt|;
name|loadTestDomainData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|store
operator|.
name|stop
argument_list|()
expr_stmt|;
name|fsContext
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRootDirPermission ()
specifier|public
name|void
name|testRootDirPermission
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
operator|new
name|YarnConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|FileStatus
name|file
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
operator|new
name|Path
argument_list|(
name|fsPath
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|LeveldbTimelineStore
operator|.
name|FILENAME
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LeveldbTimelineStore
operator|.
name|LEVELDB_DIR_UMASK
argument_list|,
name|file
operator|.
name|getPermission
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetSingleEntity ()
specifier|public
name|void
name|testGetSingleEntity
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetSingleEntity
argument_list|()
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|clearStartTimeCache
argument_list|()
expr_stmt|;
name|super
operator|.
name|testGetSingleEntity
argument_list|()
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntities ()
specifier|public
name|void
name|testGetEntities
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntities
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithFromId ()
specifier|public
name|void
name|testGetEntitiesWithFromId
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithFromId
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithFromTs ()
specifier|public
name|void
name|testGetEntitiesWithFromTs
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithFromTs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithPrimaryFilters ()
specifier|public
name|void
name|testGetEntitiesWithPrimaryFilters
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithPrimaryFilters
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithSecondaryFilters ()
specifier|public
name|void
name|testGetEntitiesWithSecondaryFilters
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEntitiesWithSecondaryFilters
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetEvents ()
specifier|public
name|void
name|testGetEvents
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetEvents
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCacheSizes ()
specifier|public
name|void
name|testCacheSizes
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|LeveldbTimelineStore
operator|.
name|getStartTimeReadCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|LeveldbTimelineStore
operator|.
name|getStartTimeWriteCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_READ_CACHE_SIZE
argument_list|,
literal|10001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10001
argument_list|,
name|LeveldbTimelineStore
operator|.
name|getStartTimeReadCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_LEVELDB_START_TIME_WRITE_CACHE_SIZE
argument_list|,
literal|10002
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10002
argument_list|,
name|LeveldbTimelineStore
operator|.
name|getStartTimeWriteCacheSize
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteNextEntity (String entityType, byte[] ts)
specifier|private
name|boolean
name|deleteNextEntity
parameter_list|(
name|String
name|entityType
parameter_list|,
name|byte
index|[]
name|ts
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|DBIterator
name|iterator
init|=
literal|null
decl_stmt|;
name|DBIterator
name|pfIterator
init|=
literal|null
decl_stmt|;
try|try
block|{
name|iterator
operator|=
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getDbIterator
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pfIterator
operator|=
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getDbIterator
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|deleteNextEntity
argument_list|(
name|entityType
argument_list|,
name|ts
argument_list|,
name|iterator
argument_list|,
name|pfIterator
argument_list|,
literal|false
argument_list|)
return|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|cleanup
argument_list|(
literal|null
argument_list|,
name|iterator
argument_list|,
name|pfIterator
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityTypes ()
specifier|public
name|void
name|testGetEntityTypes
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|entityTypes
init|=
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getEntityTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|entityTypes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entityType1
argument_list|,
name|entityTypes
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entityType2
argument_list|,
name|entityTypes
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entityType4
argument_list|,
name|entityTypes
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entityType5
argument_list|,
name|entityTypes
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteEntities ()
specifier|public
name|void
name|testDeleteEntities
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|deleteNextEntity
argument_list|(
name|entityType1
argument_list|,
name|writeReverseOrderedLong
argument_list|(
literal|122l
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|deleteNextEntity
argument_list|(
name|entityType1
argument_list|,
name|writeReverseOrderedLong
argument_list|(
literal|123l
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyEntityInfo
argument_list|(
name|entityId2
argument_list|,
name|entityType2
argument_list|,
name|events2
argument_list|,
name|Collections
operator|.
name|singletonMap
argument_list|(
name|entityType1
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
name|entityId1b
argument_list|)
argument_list|)
argument_list|,
name|EMPTY_PRIMARY_FILTERS
argument_list|,
name|EMPTY_MAP
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|entities
operator|=
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyEntityInfo
argument_list|(
name|entityId1b
argument_list|,
name|entityType1
argument_list|,
name|events1
argument_list|,
name|EMPTY_REL_ENTITIES
argument_list|,
name|primaryFilters
argument_list|,
name|otherInfo
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|discardOldEntities
argument_list|(
operator|-
literal|123l
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getEntityTypes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|discardOldEntities
argument_list|(
literal|123l
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getEntityTypes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteEntitiesPrimaryFilters ()
specifier|public
name|void
name|testDeleteEntitiesPrimaryFilters
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Object
argument_list|>
argument_list|>
name|primaryFilter
init|=
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"user"
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
operator|(
name|Object
operator|)
literal|"otheruser"
argument_list|)
argument_list|)
decl_stmt|;
name|TimelineEntities
name|atsEntities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|atsEntities
operator|.
name|setEntities
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|createEntity
argument_list|(
name|entityId1b
argument_list|,
name|entityType1
argument_list|,
literal|789l
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|ev2
argument_list|)
argument_list|,
literal|null
argument_list|,
name|primaryFilter
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|TimelinePutResponse
name|response
init|=
name|store
operator|.
name|put
argument_list|(
name|atsEntities
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|response
operator|.
name|getErrors
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|NameValuePair
name|pfPair
init|=
operator|new
name|NameValuePair
argument_list|(
literal|"user"
argument_list|,
literal|"otheruser"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|pfPair
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyEntityInfo
argument_list|(
name|entityId1b
argument_list|,
name|entityType1
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|ev2
argument_list|)
argument_list|,
name|EMPTY_REL_ENTITIES
argument_list|,
name|primaryFilter
argument_list|,
name|EMPTY_MAP
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|entities
operator|=
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyEntityInfo
argument_list|(
name|entityId1
argument_list|,
name|entityType1
argument_list|,
name|events1
argument_list|,
name|EMPTY_REL_ENTITIES
argument_list|,
name|primaryFilters
argument_list|,
name|otherInfo
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|verifyEntityInfo
argument_list|(
name|entityId1b
argument_list|,
name|entityType1
argument_list|,
name|events1
argument_list|,
name|EMPTY_REL_ENTITIES
argument_list|,
name|primaryFilters
argument_list|,
name|otherInfo
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|discardOldEntities
argument_list|(
operator|-
literal|123l
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|pfPair
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|discardOldEntities
argument_list|(
literal|123l
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|getEntityTypes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|pfPair
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFromTsWithDeletion ()
specifier|public
name|void
name|testFromTsWithDeletion
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|long
name|l
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_1"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_2"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntitiesFromTsWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|LeveldbTimelineStore
operator|)
name|store
operator|)
operator|.
name|discardOldEntities
argument_list|(
literal|123l
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_1"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_2"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTsWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTsWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|loadTestEntityData
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_1"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTs
argument_list|(
literal|"type_2"
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|getEntitiesFromTsWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|,
name|l
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntities
argument_list|(
literal|"type_1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|getEntities
argument_list|(
literal|"type_2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|getEntitiesWithPrimaryFilter
argument_list|(
literal|"type_1"
argument_list|,
name|userFilter
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCheckVersion ()
specifier|public
name|void
name|testCheckVersion
parameter_list|()
throws|throws
name|IOException
block|{
name|LeveldbTimelineStore
name|dbStore
init|=
operator|(
name|LeveldbTimelineStore
operator|)
name|store
decl_stmt|;
comment|// default version
name|Version
name|defaultVersion
init|=
name|dbStore
operator|.
name|getCurrentVersion
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|defaultVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
comment|// compatible version
name|Version
name|compatibleVersion
init|=
name|Version
operator|.
name|newInstance
argument_list|(
name|defaultVersion
operator|.
name|getMajorVersion
argument_list|()
argument_list|,
name|defaultVersion
operator|.
name|getMinorVersion
argument_list|()
operator|+
literal|2
argument_list|)
decl_stmt|;
name|dbStore
operator|.
name|storeVersion
argument_list|(
name|compatibleVersion
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|compatibleVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|dbStore
operator|=
operator|(
name|LeveldbTimelineStore
operator|)
name|store
expr_stmt|;
comment|// overwrite the compatible version
name|Assert
operator|.
name|assertEquals
argument_list|(
name|defaultVersion
argument_list|,
name|dbStore
operator|.
name|loadVersion
argument_list|()
argument_list|)
expr_stmt|;
comment|// incompatible version
name|Version
name|incompatibleVersion
init|=
name|Version
operator|.
name|newInstance
argument_list|(
name|defaultVersion
operator|.
name|getMajorVersion
argument_list|()
operator|+
literal|1
argument_list|,
name|defaultVersion
operator|.
name|getMinorVersion
argument_list|()
argument_list|)
decl_stmt|;
name|dbStore
operator|.
name|storeVersion
argument_list|(
name|incompatibleVersion
argument_list|)
expr_stmt|;
try|try
block|{
name|restartTimelineStore
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Incompatible version, should expect fail here."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceStateException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Exception message mismatch"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Incompatible version for timeline store"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|restartTimelineStore ()
specifier|private
name|void
name|restartTimelineStore
parameter_list|()
throws|throws
name|IOException
block|{
comment|// need to close so leveldb releases database lock
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|store
operator|=
operator|new
name|LeveldbTimelineStore
argument_list|()
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDomain ()
specifier|public
name|void
name|testGetDomain
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetDomain
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDomains ()
specifier|public
name|void
name|testGetDomains
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|testGetDomains
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

