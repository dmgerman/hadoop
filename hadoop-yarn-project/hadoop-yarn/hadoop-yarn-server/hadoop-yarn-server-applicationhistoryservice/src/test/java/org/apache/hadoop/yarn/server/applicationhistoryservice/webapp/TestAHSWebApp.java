begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|Params
operator|.
name|TITLE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|ApplicationHistoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|ApplicationHistoryManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|ApplicationHistoryStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|ApplicationHistoryStoreTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
operator|.
name|MemoryApplicationHistoryStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|test
operator|.
name|WebAppTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_class
DECL|class|TestAHSWebApp
specifier|public
class|class
name|TestAHSWebApp
extends|extends
name|ApplicationHistoryStoreTestUtils
block|{
DECL|method|setApplicationHistoryStore (ApplicationHistoryStore store)
specifier|public
name|void
name|setApplicationHistoryStore
parameter_list|(
name|ApplicationHistoryStore
name|store
parameter_list|)
block|{
name|this
operator|.
name|store
operator|=
name|store
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|store
operator|=
operator|new
name|MemoryApplicationHistoryStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAppControllerIndex ()
specifier|public
name|void
name|testAppControllerIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationHistoryManager
name|ahManager
init|=
name|mock
argument_list|(
name|ApplicationHistoryManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|Injector
name|injector
init|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|ApplicationHistoryManager
operator|.
name|class
argument_list|,
name|ahManager
argument_list|)
decl_stmt|;
name|AHSController
name|controller
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|AHSController
operator|.
name|class
argument_list|)
decl_stmt|;
name|controller
operator|.
name|index
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Application History"
argument_list|,
name|controller
operator|.
name|get
argument_list|(
name|TITLE
argument_list|,
literal|"unknown"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testView ()
specifier|public
name|void
name|testView
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|ApplicationContext
operator|.
name|class
argument_list|,
name|mockApplicationHistoryManager
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|AHSView
name|ahsViewInstance
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|AHSView
operator|.
name|class
argument_list|)
decl_stmt|;
name|ahsViewInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
name|ahsViewInstance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|APP_STATE
argument_list|,
name|YarnApplicationState
operator|.
name|FAILED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ahsViewInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
name|ahsViewInstance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|APP_STATE
argument_list|,
name|StringHelper
operator|.
name|cjoin
argument_list|(
name|YarnApplicationState
operator|.
name|FAILED
operator|.
name|toString
argument_list|()
argument_list|,
name|YarnApplicationState
operator|.
name|KILLED
argument_list|)
argument_list|)
expr_stmt|;
name|ahsViewInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAppPage ()
specifier|public
name|void
name|testAppPage
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|ApplicationContext
operator|.
name|class
argument_list|,
name|mockApplicationHistoryManager
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|AppPage
name|appPageInstance
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|AppPage
operator|.
name|class
argument_list|)
decl_stmt|;
name|appPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
name|appPageInstance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|APPLICATION_ID
argument_list|,
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|appPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAppAttemptPage ()
specifier|public
name|void
name|testAppAttemptPage
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|ApplicationContext
operator|.
name|class
argument_list|,
name|mockApplicationHistoryManager
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
decl_stmt|;
name|AppAttemptPage
name|appAttemptPageInstance
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|AppAttemptPage
operator|.
name|class
argument_list|)
decl_stmt|;
name|appAttemptPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
name|appAttemptPageInstance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|APPLICATION_ATTEMPT_ID
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|appAttemptPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContainerPage ()
specifier|public
name|void
name|testContainerPage
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|WebAppTests
operator|.
name|createMockInjector
argument_list|(
name|ApplicationContext
operator|.
name|class
argument_list|,
name|mockApplicationHistoryManager
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|ContainerPage
name|containerPageInstance
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|ContainerPage
operator|.
name|class
argument_list|)
decl_stmt|;
name|containerPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
name|containerPageInstance
operator|.
name|set
argument_list|(
name|YarnWebParams
operator|.
name|CONTAINER_ID
argument_list|,
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|containerPageInstance
operator|.
name|render
argument_list|()
expr_stmt|;
name|WebAppTests
operator|.
name|flushOutput
argument_list|(
name|injector
argument_list|)
expr_stmt|;
block|}
DECL|method|mockApplicationHistoryManager (int numApps, int numAppAttempts, int numContainers)
name|ApplicationHistoryManager
name|mockApplicationHistoryManager
parameter_list|(
name|int
name|numApps
parameter_list|,
name|int
name|numAppAttempts
parameter_list|,
name|int
name|numContainers
parameter_list|)
throws|throws
name|Exception
block|{
name|ApplicationHistoryManager
name|ahManager
init|=
operator|new
name|MockApplicationHistoryManagerImpl
argument_list|(
name|store
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|numApps
condition|;
operator|++
name|i
control|)
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|writeApplicationStartData
argument_list|(
name|appId
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<=
name|numAppAttempts
condition|;
operator|++
name|j
control|)
block|{
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
name|j
argument_list|)
decl_stmt|;
name|writeApplicationAttemptStartData
argument_list|(
name|appAttemptId
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|1
init|;
name|k
operator|<=
name|numContainers
condition|;
operator|++
name|k
control|)
block|{
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|appAttemptId
argument_list|,
name|k
argument_list|)
decl_stmt|;
name|writeContainerStartData
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
name|writeContainerFinishData
argument_list|(
name|containerId
argument_list|)
expr_stmt|;
block|}
name|writeApplicationAttemptFinishData
argument_list|(
name|appAttemptId
argument_list|)
expr_stmt|;
block|}
name|writeApplicationFinishData
argument_list|(
name|appId
argument_list|)
expr_stmt|;
block|}
return|return
name|ahManager
return|;
block|}
DECL|class|MockApplicationHistoryManagerImpl
class|class
name|MockApplicationHistoryManagerImpl
extends|extends
name|ApplicationHistoryManagerImpl
block|{
DECL|method|MockApplicationHistoryManagerImpl (ApplicationHistoryStore store)
specifier|public
name|MockApplicationHistoryManagerImpl
parameter_list|(
name|ApplicationHistoryStore
name|store
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|init
argument_list|(
operator|new
name|YarnConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createApplicationHistoryStore ( Configuration conf)
specifier|protected
name|ApplicationHistoryStore
name|createApplicationHistoryStore
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|store
return|;
block|}
block|}
empty_stmt|;
block|}
end_class

end_unit

