begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.applicationhistoryservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|applicationhistoryservice
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|FinalApplicationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|AppAttemptMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ApplicationMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ContainerMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|MemoryTimelineStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|TimelineDataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|TimelineStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|security
operator|.
name|TimelineACLsManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestApplicationHistoryManagerOnTimelineStore
specifier|public
class|class
name|TestApplicationHistoryManagerOnTimelineStore
block|{
DECL|field|historyManager
specifier|private
specifier|static
name|ApplicationHistoryManagerOnTimelineStore
name|historyManager
decl_stmt|;
DECL|field|SCALE
specifier|private
specifier|static
specifier|final
name|int
name|SCALE
init|=
literal|5
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|TimelineStore
name|store
init|=
operator|new
name|MemoryTimelineStore
argument_list|()
decl_stmt|;
name|prepareTimelineStore
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|TimelineACLsManager
name|aclsManager
init|=
operator|new
name|TimelineACLsManager
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|TimelineDataManager
name|dataManager
init|=
operator|new
name|TimelineDataManager
argument_list|(
name|store
argument_list|,
name|aclsManager
argument_list|)
decl_stmt|;
name|historyManager
operator|=
operator|new
name|ApplicationHistoryManagerOnTimelineStore
argument_list|(
name|dataManager
argument_list|)
expr_stmt|;
name|historyManager
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|historyManager
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|tearDown ()
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|historyManager
operator|!=
literal|null
condition|)
block|{
name|historyManager
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|prepareTimelineStore (TimelineStore store)
specifier|private
specifier|static
name|void
name|prepareTimelineStore
parameter_list|(
name|TimelineStore
name|store
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|SCALE
condition|;
operator|++
name|i
control|)
block|{
name|TimelineEntities
name|entities
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|createApplicationTimelineEntity
argument_list|(
name|appId
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<=
name|SCALE
condition|;
operator|++
name|j
control|)
block|{
name|entities
operator|=
operator|new
name|TimelineEntities
argument_list|()
expr_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
name|j
argument_list|)
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|createAppAttemptTimelineEntity
argument_list|(
name|appAttemptId
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|1
init|;
name|k
operator|<=
name|SCALE
condition|;
operator|++
name|k
control|)
block|{
name|entities
operator|=
operator|new
name|TimelineEntities
argument_list|()
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|appAttemptId
argument_list|,
name|k
argument_list|)
decl_stmt|;
name|entities
operator|.
name|addEntity
argument_list|(
name|createContainerEntity
argument_list|(
name|containerId
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|entities
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testGetApplicationReport ()
specifier|public
name|void
name|testGetApplicationReport
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationReport
name|app
init|=
name|historyManager
operator|.
name|getApplication
argument_list|(
name|appId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|app
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appId
argument_list|,
name|app
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test app"
argument_list|,
name|app
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test app type"
argument_list|,
name|app
operator|.
name|getApplicationType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test user"
argument_list|,
name|app
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test queue"
argument_list|,
name|app
operator|.
name|getQueue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|,
name|app
operator|.
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|3L
argument_list|,
name|app
operator|.
name|getFinishTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Math
operator|.
name|abs
argument_list|(
name|app
operator|.
name|getProgress
argument_list|()
operator|-
literal|1.0F
argument_list|)
operator|<
literal|0.0001
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test host"
argument_list|,
name|app
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|100
argument_list|,
name|app
operator|.
name|getRpcPort
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test tracking url"
argument_list|,
name|app
operator|.
name|getTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test original tracking url"
argument_list|,
name|app
operator|.
name|getOriginalTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test diagnostics info"
argument_list|,
name|app
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|FinalApplicationStatus
operator|.
name|UNDEFINED
argument_list|,
name|app
operator|.
name|getFinalApplicationStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|YarnApplicationState
operator|.
name|FINISHED
argument_list|,
name|app
operator|.
name|getYarnApplicationState
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetApplicationAttemptReport ()
specifier|public
name|void
name|testGetApplicationAttemptReport
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptReport
name|appAttempt
init|=
name|historyManager
operator|.
name|getApplicationAttempt
argument_list|(
name|appAttemptId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|appAttempt
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appAttemptId
argument_list|,
name|appAttempt
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
argument_list|,
name|appAttempt
operator|.
name|getAMContainerId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test host"
argument_list|,
name|appAttempt
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|100
argument_list|,
name|appAttempt
operator|.
name|getRpcPort
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test tracking url"
argument_list|,
name|appAttempt
operator|.
name|getTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test original tracking url"
argument_list|,
name|appAttempt
operator|.
name|getOriginalTrackingUrl
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test diagnostics info"
argument_list|,
name|appAttempt
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|YarnApplicationAttemptState
operator|.
name|FINISHED
argument_list|,
name|appAttempt
operator|.
name|getYarnApplicationAttemptState
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainerReport ()
specifier|public
name|void
name|testGetContainerReport
parameter_list|()
throws|throws
name|Exception
block|{
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerReport
name|container
init|=
name|historyManager
operator|.
name|getContainer
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|,
name|container
operator|.
name|getCreationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|,
name|container
operator|.
name|getFinishTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|container
operator|.
name|getAllocatedResource
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"test host"
argument_list|,
operator|-
literal|100
argument_list|)
argument_list|,
name|container
operator|.
name|getAssignedNode
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Priority
operator|.
name|UNDEFINED
argument_list|,
name|container
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test diagnostics info"
argument_list|,
name|container
operator|.
name|getDiagnosticsInfo
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
name|container
operator|.
name|getContainerState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|container
operator|.
name|getContainerExitStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"http://0.0.0.0:8188/applicationhistory/logs/"
operator|+
literal|"test host:-100/container_0_0001_01_000001/"
operator|+
literal|"container_0_0001_01_000001/test user"
argument_list|,
name|container
operator|.
name|getLogUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetApplications ()
specifier|public
name|void
name|testGetApplications
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ApplicationReport
argument_list|>
name|apps
init|=
name|historyManager
operator|.
name|getAllApplications
argument_list|()
operator|.
name|values
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|apps
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SCALE
argument_list|,
name|apps
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetApplicationAttempts ()
specifier|public
name|void
name|testGetApplicationAttempts
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|appAttempts
init|=
name|historyManager
operator|.
name|getApplicationAttempts
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|values
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|appAttempts
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SCALE
argument_list|,
name|appAttempts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainers ()
specifier|public
name|void
name|testGetContainers
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|ContainerReport
argument_list|>
name|containers
init|=
name|historyManager
operator|.
name|getContainers
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|values
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|containers
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SCALE
argument_list|,
name|containers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAMContainer ()
specifier|public
name|void
name|testGetAMContainer
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerReport
name|container
init|=
name|historyManager
operator|.
name|getAMContainer
argument_list|(
name|appAttemptId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|appAttemptId
argument_list|,
name|container
operator|.
name|getContainerId
argument_list|()
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createApplicationTimelineEntity ( ApplicationId appId)
specifier|private
specifier|static
name|TimelineEntity
name|createApplicationTimelineEntity
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|NAME_ENTITY_INFO
argument_list|,
literal|"test app"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|TYPE_ENTITY_INFO
argument_list|,
literal|"test app type"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|USER_ENTITY_INFO
argument_list|,
literal|"test user"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|QUEUE_ENTITY_INFO
argument_list|,
literal|"test queue"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|SUBMITTED_TIME_ENTITY_INFO
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setOtherInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|tEvent
operator|=
operator|new
name|TimelineEvent
argument_list|()
expr_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|3L
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|DIAGNOSTICS_INFO_EVENT_INFO
argument_list|,
literal|"test diagnostics info"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINAL_STATUS_EVENT_INFO
argument_list|,
name|FinalApplicationStatus
operator|.
name|UNDEFINED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|YarnApplicationState
operator|.
name|FINISHED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|LATEST_APP_ATTEMPT_EVENT_INFO
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setEventInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createAppAttemptTimelineEntity ( ApplicationAttemptId appAttemptId)
specifier|private
specifier|static
name|TimelineEntity
name|createAppAttemptTimelineEntity
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
name|appAttemptId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addPrimaryFilter
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|PARENT_PRIMARY_FILTER
argument_list|,
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|REGISTERED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|TRACKING_URL_EVENT_INFO
argument_list|,
literal|"test tracking url"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ORIGINAL_TRACKING_URL_EVENT_INFO
argument_list|,
literal|"test original tracking url"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|HOST_EVENT_INFO
argument_list|,
literal|"test host"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|RPC_PORT_EVENT_INFO
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|MASTER_CONTAINER_EVENT_INFO
argument_list|,
name|ContainerId
operator|.
name|newInstance
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setEventInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|tEvent
operator|=
operator|new
name|TimelineEvent
argument_list|()
expr_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|)
expr_stmt|;
name|eventInfo
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|TRACKING_URL_EVENT_INFO
argument_list|,
literal|"test tracking url"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ORIGINAL_TRACKING_URL_EVENT_INFO
argument_list|,
literal|"test original tracking url"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|DIAGNOSTICS_INFO_EVENT_INFO
argument_list|,
literal|"test diagnostics info"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|FINAL_STATUS_EVENT_INFO
argument_list|,
name|FinalApplicationStatus
operator|.
name|UNDEFINED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|YarnApplicationAttemptState
operator|.
name|FINISHED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setEventInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createContainerEntity (ContainerId containerId)
specifier|private
specifier|static
name|TimelineEntity
name|createContainerEntity
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
name|containerId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addPrimaryFilter
argument_list|(
name|ContainerMetricsConstants
operator|.
name|PARENT_PRIMARIY_FILTER
argument_list|,
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_MEMORY_ENTITY_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_VCORE_ENTITY_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_ENTITY_INFO
argument_list|,
literal|"test host"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PORT_ENTITY_INFO
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PRIORITY_ENTITY_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setOtherInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|ContainerMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
empty_stmt|;
name|tEvent
operator|=
operator|new
name|TimelineEvent
argument_list|()
expr_stmt|;
name|tEvent
operator|.
name|setEventType
argument_list|(
name|ContainerMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|DIAGNOSTICS_INFO_EVENT_INFO
argument_list|,
literal|"test diagnostics info"
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|EXIT_STATUS_EVENT_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setEventInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
block|}
end_class

end_unit

