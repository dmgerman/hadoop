begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router.rmadmin
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|rmadmin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|AsyncDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AddToClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AddToClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CheckForDecommissioningNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CheckForDecommissioningNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshAdminAclsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshAdminAclsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshClusterMaxPriorityRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshClusterMaxPriorityResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResourcesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResourcesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshQueuesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshQueuesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshServiceAclsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshServiceAclsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshSuperUserGroupsConfigurationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshSuperUserGroupsConfigurationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshUserToGroupsMappingsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RefreshUserToGroupsMappingsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RemoveFromClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RemoveFromClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReplaceLabelsOnNodeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReplaceLabelsOnNodeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateNodeResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateNodeResourceResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_comment
comment|/**  * Base class for all the RouterRMAdminService test cases. It provides utility  * methods that can be used by the concrete test case classes.  *  */
end_comment

begin_class
DECL|class|BaseRouterRMAdminTest
specifier|public
specifier|abstract
class|class
name|BaseRouterRMAdminTest
block|{
comment|/**    * The RouterRMAdminService instance that will be used by all the test cases.    */
DECL|field|rmAdminService
specifier|private
name|MockRouterRMAdminService
name|rmAdminService
decl_stmt|;
comment|/**    * Thread pool used for asynchronous operations.    */
DECL|field|threadpool
specifier|private
specifier|static
name|ExecutorService
name|threadpool
init|=
name|Executors
operator|.
name|newCachedThreadPool
argument_list|()
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|dispatcher
specifier|private
name|AsyncDispatcher
name|dispatcher
decl_stmt|;
DECL|field|TEST_MAX_CACHE_SIZE
specifier|public
specifier|final
specifier|static
name|int
name|TEST_MAX_CACHE_SIZE
init|=
literal|10
decl_stmt|;
DECL|method|getRouterRMAdminService ()
specifier|protected
name|MockRouterRMAdminService
name|getRouterRMAdminService
parameter_list|()
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|this
operator|.
name|rmAdminService
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|rmAdminService
return|;
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|String
name|mockPassThroughInterceptorClass
init|=
name|PassThroughRMAdminRequestInterceptor
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|// Create a request intercepter pipeline for testing. The last one in the
comment|// chain will call the mock resource manager. The others in the chain will
comment|// simply forward it to the next one in the chain
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_RMADMIN_INTERCEPTOR_CLASS_PIPELINE
argument_list|,
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|MockRMAdminRequestInterceptor
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_PIPELINE_CACHE_MAX_SIZE
argument_list|,
name|TEST_MAX_CACHE_SIZE
argument_list|)
expr_stmt|;
name|this
operator|.
name|dispatcher
operator|=
operator|new
name|AsyncDispatcher
argument_list|()
expr_stmt|;
name|this
operator|.
name|dispatcher
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|dispatcher
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|rmAdminService
operator|=
name|createAndStartRouterRMAdminService
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|rmAdminService
operator|!=
literal|null
condition|)
block|{
name|rmAdminService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|rmAdminService
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|dispatcher
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|dispatcher
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getThreadPool ()
specifier|protected
name|ExecutorService
name|getThreadPool
parameter_list|()
block|{
return|return
name|threadpool
return|;
block|}
DECL|method|createAndStartRouterRMAdminService ()
specifier|protected
name|MockRouterRMAdminService
name|createAndStartRouterRMAdminService
parameter_list|()
block|{
name|MockRouterRMAdminService
name|svc
init|=
operator|new
name|MockRouterRMAdminService
argument_list|()
decl_stmt|;
name|svc
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|svc
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|svc
return|;
block|}
DECL|class|MockRouterRMAdminService
specifier|protected
specifier|static
class|class
name|MockRouterRMAdminService
extends|extends
name|RouterRMAdminService
block|{
DECL|method|MockRouterRMAdminService ()
specifier|public
name|MockRouterRMAdminService
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|refreshQueues (String user)
specifier|protected
name|RefreshQueuesResponse
name|refreshQueues
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshQueuesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshQueuesResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshQueuesRequest
name|req
init|=
name|RefreshQueuesRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshQueuesResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshQueues
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshNodes (String user)
specifier|protected
name|RefreshNodesResponse
name|refreshNodes
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshNodesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshNodesResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshNodesRequest
name|req
init|=
name|RefreshNodesRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshNodesResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshNodes
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshSuperUserGroupsConfiguration ( String user)
specifier|protected
name|RefreshSuperUserGroupsConfigurationResponse
name|refreshSuperUserGroupsConfiguration
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshSuperUserGroupsConfigurationResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshSuperUserGroupsConfigurationResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshSuperUserGroupsConfigurationRequest
name|req
init|=
name|RefreshSuperUserGroupsConfigurationRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshSuperUserGroupsConfigurationResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshSuperUserGroupsConfiguration
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshUserToGroupsMappings ( String user)
specifier|protected
name|RefreshUserToGroupsMappingsResponse
name|refreshUserToGroupsMappings
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshUserToGroupsMappingsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshUserToGroupsMappingsResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshUserToGroupsMappingsRequest
name|req
init|=
name|RefreshUserToGroupsMappingsRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshUserToGroupsMappingsResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshUserToGroupsMappings
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshAdminAcls (String user)
specifier|protected
name|RefreshAdminAclsResponse
name|refreshAdminAcls
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshAdminAclsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshAdminAclsResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshAdminAclsRequest
name|req
init|=
name|RefreshAdminAclsRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshAdminAclsResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshAdminAcls
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshServiceAcls (String user)
specifier|protected
name|RefreshServiceAclsResponse
name|refreshServiceAcls
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshServiceAclsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshServiceAclsResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshServiceAclsRequest
name|req
init|=
name|RefreshServiceAclsRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshServiceAclsResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshServiceAcls
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|updateNodeResource (String user)
specifier|protected
name|UpdateNodeResourceResponse
name|updateNodeResource
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|UpdateNodeResourceResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|UpdateNodeResourceResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|UpdateNodeResourceRequest
name|req
init|=
name|UpdateNodeResourceRequest
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|UpdateNodeResourceResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|updateNodeResource
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshNodesResources (String user)
specifier|protected
name|RefreshNodesResourcesResponse
name|refreshNodesResources
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshNodesResourcesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshNodesResourcesResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshNodesResourcesRequest
name|req
init|=
name|RefreshNodesResourcesRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshNodesResourcesResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshNodesResources
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|addToClusterNodeLabels (String user)
specifier|protected
name|AddToClusterNodeLabelsResponse
name|addToClusterNodeLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|AddToClusterNodeLabelsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|AddToClusterNodeLabelsResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|AddToClusterNodeLabelsRequest
name|req
init|=
name|AddToClusterNodeLabelsRequest
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|AddToClusterNodeLabelsResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|addToClusterNodeLabels
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|removeFromClusterNodeLabels ( String user)
specifier|protected
name|RemoveFromClusterNodeLabelsResponse
name|removeFromClusterNodeLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RemoveFromClusterNodeLabelsResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RemoveFromClusterNodeLabelsResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RemoveFromClusterNodeLabelsRequest
name|req
init|=
name|RemoveFromClusterNodeLabelsRequest
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|RemoveFromClusterNodeLabelsResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|removeFromClusterNodeLabels
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|replaceLabelsOnNode (String user)
specifier|protected
name|ReplaceLabelsOnNodeResponse
name|replaceLabelsOnNode
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|ReplaceLabelsOnNodeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ReplaceLabelsOnNodeResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|ReplaceLabelsOnNodeRequest
name|req
init|=
name|ReplaceLabelsOnNodeRequest
operator|.
name|newInstance
argument_list|(
operator|new
name|HashMap
argument_list|<
name|NodeId
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|ReplaceLabelsOnNodeResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|replaceLabelsOnNode
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|checkForDecommissioningNodes ( String user)
specifier|protected
name|CheckForDecommissioningNodesResponse
name|checkForDecommissioningNodes
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|CheckForDecommissioningNodesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CheckForDecommissioningNodesResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|CheckForDecommissioningNodesRequest
name|req
init|=
name|CheckForDecommissioningNodesRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|CheckForDecommissioningNodesResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|checkForDecommissioningNodes
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|refreshClusterMaxPriority ( String user)
specifier|protected
name|RefreshClusterMaxPriorityResponse
name|refreshClusterMaxPriority
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|RefreshClusterMaxPriorityResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshClusterMaxPriorityResponse
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|RefreshClusterMaxPriorityRequest
name|req
init|=
name|RefreshClusterMaxPriorityRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|RefreshClusterMaxPriorityResponse
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|refreshClusterMaxPriority
argument_list|(
name|req
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|getGroupsForUser (String user)
specifier|protected
name|String
index|[]
name|getGroupsForUser
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|user
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|String
index|[]
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
index|[]
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|response
init|=
name|getRouterRMAdminService
argument_list|()
operator|.
name|getGroupsForUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
block|}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

