begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ActivitiesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppActivitiesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppAttemptsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppPriority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppTimeoutInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppTimeoutsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ApplicationStatisticsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ClusterInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ClusterMetricsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|LabelsToNodesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeLabelsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeToLabelsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|SchedulerTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|Router
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|webapp
operator|.
name|RouterWebServices
operator|.
name|RequestInterceptorChainWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|AppAttemptInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ContainerInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|webapp
operator|.
name|dao
operator|.
name|ContainersInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Base class for all the RouterRMAdminService test cases. It provides utility  * methods that can be used by the concrete test case classes.  *  */
end_comment

begin_class
DECL|class|BaseRouterWebServicesTest
specifier|public
specifier|abstract
class|class
name|BaseRouterWebServicesTest
block|{
DECL|field|conf
specifier|private
name|YarnConfiguration
name|conf
decl_stmt|;
DECL|field|router
specifier|private
name|Router
name|router
decl_stmt|;
DECL|field|TEST_MAX_CACHE_SIZE
specifier|public
specifier|final
specifier|static
name|int
name|TEST_MAX_CACHE_SIZE
init|=
literal|10
decl_stmt|;
DECL|field|routerWebService
specifier|private
name|RouterWebServices
name|routerWebService
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|this
operator|.
name|conf
operator|=
name|createConfiguration
argument_list|()
expr_stmt|;
name|router
operator|=
name|spy
argument_list|(
operator|new
name|Router
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|router
argument_list|)
operator|.
name|startWepApp
argument_list|()
expr_stmt|;
name|routerWebService
operator|=
operator|new
name|RouterWebServices
argument_list|(
name|router
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|routerWebService
operator|.
name|setResponse
argument_list|(
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|router
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|router
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|createConfiguration ()
specifier|protected
name|YarnConfiguration
name|createConfiguration
parameter_list|()
block|{
name|YarnConfiguration
name|config
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|String
name|mockPassThroughInterceptorClass
init|=
name|PassThroughRESTRequestInterceptor
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|// Create a request intercepter pipeline for testing. The last one in the
comment|// chain will call the mock resource manager. The others in the chain will
comment|// simply forward it to the next one in the chain
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_WEBAPP_INTERCEPTOR_CLASS_PIPELINE
argument_list|,
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|mockPassThroughInterceptorClass
operator|+
literal|","
operator|+
name|MockRESTRequestInterceptor
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setInt
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_PIPELINE_CACHE_MAX_SIZE
argument_list|,
name|TEST_MAX_CACHE_SIZE
argument_list|)
expr_stmt|;
return|return
name|config
return|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|router
operator|!=
literal|null
condition|)
block|{
name|router
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|setUpConfig ()
specifier|public
name|void
name|setUpConfig
parameter_list|()
block|{
name|this
operator|.
name|conf
operator|=
name|createConfiguration
argument_list|()
expr_stmt|;
block|}
DECL|method|getConf ()
specifier|protected
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
name|this
operator|.
name|conf
return|;
block|}
DECL|method|getRouterWebServices ()
specifier|protected
name|RouterWebServices
name|getRouterWebServices
parameter_list|()
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|this
operator|.
name|routerWebService
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|routerWebService
return|;
block|}
DECL|method|get (String user)
specifier|protected
name|ClusterInfo
name|get
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
comment|// HSR is not used here
return|return
name|routerWebService
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|getClusterInfo (String user)
specifier|protected
name|ClusterInfo
name|getClusterInfo
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
comment|// HSR is not used here
return|return
name|routerWebService
operator|.
name|getClusterInfo
argument_list|()
return|;
block|}
DECL|method|getClusterMetricsInfo (String user)
specifier|protected
name|ClusterMetricsInfo
name|getClusterMetricsInfo
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
comment|// HSR is not used here
return|return
name|routerWebService
operator|.
name|getClusterMetricsInfo
argument_list|()
return|;
block|}
DECL|method|getSchedulerInfo (String user)
specifier|protected
name|SchedulerTypeInfo
name|getSchedulerInfo
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
comment|// HSR is not used here
return|return
name|routerWebService
operator|.
name|getSchedulerInfo
argument_list|()
return|;
block|}
DECL|method|dumpSchedulerLogs (String user)
specifier|protected
name|String
name|dumpSchedulerLogs
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|dumpSchedulerLogs
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getNodes (String user)
specifier|protected
name|NodesInfo
name|getNodes
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getNodes
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|getNode (String user)
specifier|protected
name|NodeInfo
name|getNode
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getNode
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|getApps (String user)
specifier|protected
name|AppsInfo
name|getApps
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getApps
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getActivities (String user)
specifier|protected
name|ActivitiesInfo
name|getActivities
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getActivities
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppActivities (String user)
specifier|protected
name|AppActivitiesInfo
name|getAppActivities
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppActivities
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppStatistics (String user)
specifier|protected
name|ApplicationStatisticsInfo
name|getAppStatistics
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppStatistics
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getApp (String user)
specifier|protected
name|AppInfo
name|getApp
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getApp
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppState (String user)
specifier|protected
name|AppState
name|getAppState
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppState
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|updateAppState (String user)
specifier|protected
name|Response
name|updateAppState
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|YarnException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
return|return
name|routerWebService
operator|.
name|updateAppState
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getNodeToLabels (String user)
specifier|protected
name|NodeToLabelsInfo
name|getNodeToLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getNodeToLabels
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getLabelsToNodes (String user)
specifier|protected
name|LabelsToNodesInfo
name|getLabelsToNodes
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getLabelsToNodes
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|replaceLabelsOnNodes (String user)
specifier|protected
name|Response
name|replaceLabelsOnNodes
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|replaceLabelsOnNodes
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|replaceLabelsOnNode (String user)
specifier|protected
name|Response
name|replaceLabelsOnNode
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|replaceLabelsOnNode
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getClusterNodeLabels (String user)
specifier|protected
name|NodeLabelsInfo
name|getClusterNodeLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getClusterNodeLabels
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|addToClusterNodeLabels (String user)
specifier|protected
name|Response
name|addToClusterNodeLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|addToClusterNodeLabels
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|removeFromCluserNodeLabels (String user)
specifier|protected
name|Response
name|removeFromCluserNodeLabels
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|removeFromCluserNodeLabels
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getLabelsOnNode (String user)
specifier|protected
name|NodeLabelsInfo
name|getLabelsOnNode
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getLabelsOnNode
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppPriority (String user)
specifier|protected
name|AppPriority
name|getAppPriority
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppPriority
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|updateApplicationPriority (String user)
specifier|protected
name|Response
name|updateApplicationPriority
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|YarnException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
return|return
name|routerWebService
operator|.
name|updateApplicationPriority
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppQueue (String user)
specifier|protected
name|AppQueue
name|getAppQueue
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppQueue
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|updateAppQueue (String user)
specifier|protected
name|Response
name|updateAppQueue
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|YarnException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
return|return
name|routerWebService
operator|.
name|updateAppQueue
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|createNewApplication (String user)
specifier|protected
name|Response
name|createNewApplication
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|createNewApplication
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|submitApplication (String user)
specifier|protected
name|Response
name|submitApplication
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|submitApplication
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|postDelegationToken (String user)
specifier|protected
name|Response
name|postDelegationToken
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
throws|,
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|postDelegationToken
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|postDelegationTokenExpiration (String user)
specifier|protected
name|Response
name|postDelegationTokenExpiration
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|postDelegationTokenExpiration
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|cancelDelegationToken (String user)
specifier|protected
name|Response
name|cancelDelegationToken
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
throws|,
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|cancelDelegationToken
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createNewReservation (String user)
specifier|protected
name|Response
name|createNewReservation
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|createNewReservation
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|submitReservation (String user)
specifier|protected
name|Response
name|submitReservation
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|submitReservation
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|updateReservation (String user)
specifier|protected
name|Response
name|updateReservation
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|updateReservation
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|deleteReservation (String user)
specifier|protected
name|Response
name|deleteReservation
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|deleteReservation
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|listReservation (String user)
specifier|protected
name|Response
name|listReservation
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|routerWebService
operator|.
name|listReservation
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getAppTimeout (String user)
specifier|protected
name|AppTimeoutInfo
name|getAppTimeout
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppTimeout
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppTimeouts (String user)
specifier|protected
name|AppTimeoutsInfo
name|getAppTimeouts
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppTimeouts
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|updateApplicationTimeout (String user)
specifier|protected
name|Response
name|updateApplicationTimeout
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|AuthorizationException
throws|,
name|YarnException
throws|,
name|InterruptedException
throws|,
name|IOException
block|{
return|return
name|routerWebService
operator|.
name|updateApplicationTimeout
argument_list|(
literal|null
argument_list|,
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppAttempts (String user)
specifier|protected
name|AppAttemptsInfo
name|getAppAttempts
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppAttempts
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getAppAttempt (String user)
specifier|protected
name|AppAttemptInfo
name|getAppAttempt
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getAppAttempt
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getContainers (String user)
specifier|protected
name|ContainersInfo
name|getContainers
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getContainers
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getContainer (String user)
specifier|protected
name|ContainerInfo
name|getContainer
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|routerWebService
operator|.
name|getContainer
argument_list|(
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getInterceptorChain (String user)
specifier|protected
name|RequestInterceptorChainWrapper
name|getInterceptorChain
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|HttpServletRequest
name|request
init|=
name|createHttpServletRequest
argument_list|(
name|user
argument_list|)
decl_stmt|;
return|return
name|routerWebService
operator|.
name|getInterceptorChain
argument_list|(
name|request
argument_list|)
return|;
block|}
DECL|method|createHttpServletRequest (String user)
specifier|private
name|HttpServletRequest
name|createHttpServletRequest
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|HttpServletRequest
name|request
init|=
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|request
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|user
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
end_class

end_unit

