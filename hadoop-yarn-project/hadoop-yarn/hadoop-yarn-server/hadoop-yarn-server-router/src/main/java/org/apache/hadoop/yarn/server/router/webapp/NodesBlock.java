begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|RMWSConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
operator|.
name|NodesInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|Router
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Times
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet2
operator|.
name|Hamlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet2
operator|.
name|Hamlet
operator|.
name|TABLE
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet2
operator|.
name|Hamlet
operator|.
name|TBODY
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet2
operator|.
name|Hamlet
operator|.
name|TR
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|util
operator|.
name|WebAppUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|HtmlBlock
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_comment
comment|/**  * Nodes block for the Router Web UI.  */
end_comment

begin_class
DECL|class|NodesBlock
specifier|public
class|class
name|NodesBlock
extends|extends
name|HtmlBlock
block|{
DECL|field|BYTES_IN_MB
specifier|private
specifier|static
specifier|final
name|long
name|BYTES_IN_MB
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|router
specifier|private
specifier|final
name|Router
name|router
decl_stmt|;
annotation|@
name|Inject
DECL|method|NodesBlock (Router router, ViewContext ctx)
name|NodesBlock
parameter_list|(
name|Router
name|router
parameter_list|,
name|ViewContext
name|ctx
parameter_list|)
block|{
name|super
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|this
operator|.
name|router
operator|=
name|router
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|render (Block html)
specifier|protected
name|void
name|render
parameter_list|(
name|Block
name|html
parameter_list|)
block|{
comment|// Get the node info from the federation
name|Configuration
name|conf
init|=
name|this
operator|.
name|router
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|String
name|webAppAddress
init|=
name|WebAppUtils
operator|.
name|getRouterWebAppURLWithScheme
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|NodesInfo
name|nodes
init|=
name|RouterWebServiceUtil
operator|.
name|genericForward
argument_list|(
name|webAppAddress
argument_list|,
literal|null
argument_list|,
name|NodesInfo
operator|.
name|class
argument_list|,
name|HTTPMethods
operator|.
name|GET
argument_list|,
name|RMWSConsts
operator|.
name|RM_WEB_SERVICE_PATH
operator|+
name|RMWSConsts
operator|.
name|NODES
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|setTitle
argument_list|(
literal|"Nodes"
argument_list|)
expr_stmt|;
name|TBODY
argument_list|<
name|TABLE
argument_list|<
name|Hamlet
argument_list|>
argument_list|>
name|tbody
init|=
name|html
operator|.
name|table
argument_list|(
literal|"#nodes"
argument_list|)
operator|.
name|thead
argument_list|()
operator|.
name|tr
argument_list|()
operator|.
name|th
argument_list|(
literal|".nodelabels"
argument_list|,
literal|"Node Labels"
argument_list|)
operator|.
name|th
argument_list|(
literal|".rack"
argument_list|,
literal|"Rack"
argument_list|)
operator|.
name|th
argument_list|(
literal|".state"
argument_list|,
literal|"Node State"
argument_list|)
operator|.
name|th
argument_list|(
literal|".nodeaddress"
argument_list|,
literal|"Node Address"
argument_list|)
operator|.
name|th
argument_list|(
literal|".nodehttpaddress"
argument_list|,
literal|"Node HTTP Address"
argument_list|)
operator|.
name|th
argument_list|(
literal|".lastHealthUpdate"
argument_list|,
literal|"Last health-update"
argument_list|)
operator|.
name|th
argument_list|(
literal|".healthReport"
argument_list|,
literal|"Health-report"
argument_list|)
operator|.
name|th
argument_list|(
literal|".containers"
argument_list|,
literal|"Containers"
argument_list|)
operator|.
name|th
argument_list|(
literal|".mem"
argument_list|,
literal|"Mem Used"
argument_list|)
operator|.
name|th
argument_list|(
literal|".mem"
argument_list|,
literal|"Mem Avail"
argument_list|)
operator|.
name|th
argument_list|(
literal|".vcores"
argument_list|,
literal|"VCores Used"
argument_list|)
operator|.
name|th
argument_list|(
literal|".vcores"
argument_list|,
literal|"VCores Avail"
argument_list|)
operator|.
name|th
argument_list|(
literal|".nodeManagerVersion"
argument_list|,
literal|"Version"
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|__
argument_list|()
operator|.
name|tbody
argument_list|()
decl_stmt|;
comment|// Add nodes to the web UI
for|for
control|(
name|NodeInfo
name|info
range|:
name|nodes
operator|.
name|getNodes
argument_list|()
control|)
block|{
name|int
name|usedMemory
init|=
operator|(
name|int
operator|)
name|info
operator|.
name|getUsedMemory
argument_list|()
decl_stmt|;
name|int
name|availableMemory
init|=
operator|(
name|int
operator|)
name|info
operator|.
name|getAvailableMemory
argument_list|()
decl_stmt|;
name|TR
argument_list|<
name|TBODY
argument_list|<
name|TABLE
argument_list|<
name|Hamlet
argument_list|>
argument_list|>
argument_list|>
name|row
init|=
name|tbody
operator|.
name|tr
argument_list|()
decl_stmt|;
name|row
operator|.
name|td
argument_list|()
operator|.
name|__
argument_list|(
name|StringUtils
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|info
operator|.
name|getNodeLabels
argument_list|()
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
name|row
operator|.
name|td
argument_list|()
operator|.
name|__
argument_list|(
name|info
operator|.
name|getRack
argument_list|()
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
name|row
operator|.
name|td
argument_list|()
operator|.
name|__
argument_list|(
name|info
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
name|row
operator|.
name|td
argument_list|()
operator|.
name|__
argument_list|(
name|info
operator|.
name|getNodeId
argument_list|()
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
name|boolean
name|isInactive
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|isInactive
condition|)
block|{
name|row
operator|.
name|td
argument_list|()
operator|.
name|__
argument_list|(
literal|"N/A"
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|String
name|httpAddress
init|=
name|info
operator|.
name|getNodeHTTPAddress
argument_list|()
decl_stmt|;
name|row
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
literal|"//"
operator|+
name|httpAddress
argument_list|,
name|httpAddress
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
block|}
name|row
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|getLastHealthUpdate
argument_list|()
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|__
argument_list|(
name|Times
operator|.
name|format
argument_list|(
name|info
operator|.
name|getLastHealthUpdate
argument_list|()
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|td
argument_list|(
name|info
operator|.
name|getHealthReport
argument_list|()
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|getNumContainers
argument_list|()
argument_list|)
argument_list|)
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|usedMemory
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|__
argument_list|(
name|StringUtils
operator|.
name|byteDesc
argument_list|(
name|usedMemory
operator|*
name|BYTES_IN_MB
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|availableMemory
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|__
argument_list|(
name|StringUtils
operator|.
name|byteDesc
argument_list|(
name|availableMemory
operator|*
name|BYTES_IN_MB
argument_list|)
argument_list|)
operator|.
name|__
argument_list|()
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|getUsedVirtualCores
argument_list|()
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|getAvailableVirtualCores
argument_list|()
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|info
operator|.
name|getVersion
argument_list|()
argument_list|)
operator|.
name|__
argument_list|()
expr_stmt|;
block|}
name|tbody
operator|.
name|__
argument_list|()
operator|.
name|__
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

