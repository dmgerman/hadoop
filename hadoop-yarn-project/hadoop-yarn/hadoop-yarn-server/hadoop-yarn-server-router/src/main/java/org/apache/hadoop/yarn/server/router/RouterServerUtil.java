begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Common utility methods used by the Router server.  *  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|RouterServerUtil
specifier|public
specifier|final
class|class
name|RouterServerUtil
block|{
comment|/** Disable constructor. */
DECL|method|RouterServerUtil ()
specifier|private
name|RouterServerUtil
parameter_list|()
block|{   }
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RouterServerUtil
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Throws an exception due to an error.    *    * @param errMsg the error message    * @param t the throwable raised in the called class.    * @throws YarnException on failure    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|logAndThrowException (String errMsg, Throwable t)
specifier|public
specifier|static
name|void
name|logAndThrowException
parameter_list|(
name|String
name|errMsg
parameter_list|,
name|Throwable
name|t
parameter_list|)
throws|throws
name|YarnException
block|{
if|if
condition|(
name|t
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|errMsg
argument_list|,
name|t
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|YarnException
argument_list|(
name|errMsg
argument_list|,
name|t
argument_list|)
throw|;
block|}
else|else
block|{
name|LOG
operator|.
name|error
argument_list|(
name|errMsg
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|YarnException
argument_list|(
name|errMsg
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

