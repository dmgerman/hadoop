begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
operator|.
name|info
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining the various Router Federation Interceptor  * activity statistics and publishing them through the metrics interfaces.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"Metrics for Router Federation Interceptor"
argument_list|,
name|context
operator|=
literal|"fedr"
argument_list|)
DECL|class|RouterMetrics
specifier|public
specifier|final
class|class
name|RouterMetrics
block|{
DECL|field|RECORD_INFO
specifier|private
specifier|static
specifier|final
name|MetricsInfo
name|RECORD_INFO
init|=
name|info
argument_list|(
literal|"RouterMetrics"
argument_list|,
literal|"Router Federation Interceptor"
argument_list|)
decl_stmt|;
DECL|field|isInitialized
specifier|private
specifier|static
name|AtomicBoolean
name|isInitialized
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
comment|// Metrics for operation failed
annotation|@
name|Metric
argument_list|(
literal|"# of applications failed to be submitted"
argument_list|)
DECL|field|numAppsFailedSubmitted
specifier|private
name|MutableGaugeInt
name|numAppsFailedSubmitted
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"# of applications failed to be created"
argument_list|)
DECL|field|numAppsFailedCreated
specifier|private
name|MutableGaugeInt
name|numAppsFailedCreated
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"# of applications failed to be killed"
argument_list|)
DECL|field|numAppsFailedKilled
specifier|private
name|MutableGaugeInt
name|numAppsFailedKilled
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"# of application reports failed to be retrieved"
argument_list|)
DECL|field|numAppsFailedRetrieved
specifier|private
name|MutableGaugeInt
name|numAppsFailedRetrieved
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"# of multiple applications reports failed to be retrieved"
argument_list|)
DECL|field|numMultipleAppsFailedRetrieved
specifier|private
name|MutableGaugeInt
name|numMultipleAppsFailedRetrieved
decl_stmt|;
comment|// Aggregate metrics are shared, and don't have to be looked up per call
annotation|@
name|Metric
argument_list|(
literal|"Total number of successful Submitted apps and latency(ms)"
argument_list|)
DECL|field|totalSucceededAppsSubmitted
specifier|private
name|MutableRate
name|totalSucceededAppsSubmitted
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Total number of successful Killed apps and latency(ms)"
argument_list|)
DECL|field|totalSucceededAppsKilled
specifier|private
name|MutableRate
name|totalSucceededAppsKilled
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Total number of successful Created apps and latency(ms)"
argument_list|)
DECL|field|totalSucceededAppsCreated
specifier|private
name|MutableRate
name|totalSucceededAppsCreated
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Total number of successful Retrieved app reports and latency(ms)"
argument_list|)
DECL|field|totalSucceededAppsRetrieved
specifier|private
name|MutableRate
name|totalSucceededAppsRetrieved
decl_stmt|;
annotation|@
name|Metric
argument_list|(
literal|"Total number of successful Retrieved multiple apps reports and "
operator|+
literal|"latency(ms)"
argument_list|)
DECL|field|totalSucceededMultipleAppsRetrieved
specifier|private
name|MutableRate
name|totalSucceededMultipleAppsRetrieved
decl_stmt|;
comment|/**    * Provide quantile counters for all latencies.    */
DECL|field|submitApplicationLatency
specifier|private
name|MutableQuantiles
name|submitApplicationLatency
decl_stmt|;
DECL|field|getNewApplicationLatency
specifier|private
name|MutableQuantiles
name|getNewApplicationLatency
decl_stmt|;
DECL|field|killApplicationLatency
specifier|private
name|MutableQuantiles
name|killApplicationLatency
decl_stmt|;
DECL|field|getApplicationReportLatency
specifier|private
name|MutableQuantiles
name|getApplicationReportLatency
decl_stmt|;
DECL|field|getApplicationsReportLatency
specifier|private
name|MutableQuantiles
name|getApplicationsReportLatency
decl_stmt|;
DECL|field|INSTANCE
specifier|private
specifier|static
specifier|volatile
name|RouterMetrics
name|INSTANCE
init|=
literal|null
decl_stmt|;
DECL|field|registry
specifier|private
specifier|static
name|MetricsRegistry
name|registry
decl_stmt|;
DECL|method|RouterMetrics ()
specifier|private
name|RouterMetrics
parameter_list|()
block|{
name|registry
operator|=
operator|new
name|MetricsRegistry
argument_list|(
name|RECORD_INFO
argument_list|)
expr_stmt|;
name|registry
operator|.
name|tag
argument_list|(
name|RECORD_INFO
argument_list|,
literal|"Router"
argument_list|)
expr_stmt|;
name|getNewApplicationLatency
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"getNewApplicationLatency"
argument_list|,
literal|"latency of get new application"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|submitApplicationLatency
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"submitApplicationLatency"
argument_list|,
literal|"latency of submit application"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|killApplicationLatency
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"killApplicationLatency"
argument_list|,
literal|"latency of kill application"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|getApplicationReportLatency
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"getApplicationReportLatency"
argument_list|,
literal|"latency of get application report"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|getApplicationsReportLatency
operator|=
name|registry
operator|.
name|newQuantiles
argument_list|(
literal|"getApplicationsReportLatency"
argument_list|,
literal|"latency of get applications report"
argument_list|,
literal|"ops"
argument_list|,
literal|"latency"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
DECL|method|getMetrics ()
specifier|public
specifier|static
name|RouterMetrics
name|getMetrics
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isInitialized
operator|.
name|get
argument_list|()
condition|)
block|{
synchronized|synchronized
init|(
name|RouterMetrics
operator|.
name|class
init|)
block|{
if|if
condition|(
name|INSTANCE
operator|==
literal|null
condition|)
block|{
name|INSTANCE
operator|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
operator|.
name|register
argument_list|(
literal|"RouterMetrics"
argument_list|,
literal|"Metrics for the Yarn Router"
argument_list|,
operator|new
name|RouterMetrics
argument_list|()
argument_list|)
expr_stmt|;
name|isInitialized
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|INSTANCE
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|destroy ()
specifier|synchronized
specifier|static
name|void
name|destroy
parameter_list|()
block|{
name|isInitialized
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|INSTANCE
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumSucceededAppsCreated ()
specifier|public
name|long
name|getNumSucceededAppsCreated
parameter_list|()
block|{
return|return
name|totalSucceededAppsCreated
operator|.
name|lastStat
argument_list|()
operator|.
name|numSamples
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumSucceededAppsSubmitted ()
specifier|public
name|long
name|getNumSucceededAppsSubmitted
parameter_list|()
block|{
return|return
name|totalSucceededAppsSubmitted
operator|.
name|lastStat
argument_list|()
operator|.
name|numSamples
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumSucceededAppsKilled ()
specifier|public
name|long
name|getNumSucceededAppsKilled
parameter_list|()
block|{
return|return
name|totalSucceededAppsKilled
operator|.
name|lastStat
argument_list|()
operator|.
name|numSamples
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumSucceededAppsRetrieved ()
specifier|public
name|long
name|getNumSucceededAppsRetrieved
parameter_list|()
block|{
return|return
name|totalSucceededAppsRetrieved
operator|.
name|lastStat
argument_list|()
operator|.
name|numSamples
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getNumSucceededMultipleAppsRetrieved ()
specifier|public
name|long
name|getNumSucceededMultipleAppsRetrieved
parameter_list|()
block|{
return|return
name|totalSucceededMultipleAppsRetrieved
operator|.
name|lastStat
argument_list|()
operator|.
name|numSamples
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getLatencySucceededAppsCreated ()
specifier|public
name|double
name|getLatencySucceededAppsCreated
parameter_list|()
block|{
return|return
name|totalSucceededAppsCreated
operator|.
name|lastStat
argument_list|()
operator|.
name|mean
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getLatencySucceededAppsSubmitted ()
specifier|public
name|double
name|getLatencySucceededAppsSubmitted
parameter_list|()
block|{
return|return
name|totalSucceededAppsSubmitted
operator|.
name|lastStat
argument_list|()
operator|.
name|mean
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getLatencySucceededAppsKilled ()
specifier|public
name|double
name|getLatencySucceededAppsKilled
parameter_list|()
block|{
return|return
name|totalSucceededAppsKilled
operator|.
name|lastStat
argument_list|()
operator|.
name|mean
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getLatencySucceededGetAppReport ()
specifier|public
name|double
name|getLatencySucceededGetAppReport
parameter_list|()
block|{
return|return
name|totalSucceededAppsRetrieved
operator|.
name|lastStat
argument_list|()
operator|.
name|mean
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getLatencySucceededMultipleGetAppReport ()
specifier|public
name|double
name|getLatencySucceededMultipleGetAppReport
parameter_list|()
block|{
return|return
name|totalSucceededMultipleAppsRetrieved
operator|.
name|lastStat
argument_list|()
operator|.
name|mean
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getAppsFailedCreated ()
specifier|public
name|int
name|getAppsFailedCreated
parameter_list|()
block|{
return|return
name|numAppsFailedCreated
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getAppsFailedSubmitted ()
specifier|public
name|int
name|getAppsFailedSubmitted
parameter_list|()
block|{
return|return
name|numAppsFailedSubmitted
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getAppsFailedKilled ()
specifier|public
name|int
name|getAppsFailedKilled
parameter_list|()
block|{
return|return
name|numAppsFailedKilled
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getAppsFailedRetrieved ()
specifier|public
name|int
name|getAppsFailedRetrieved
parameter_list|()
block|{
return|return
name|numAppsFailedRetrieved
operator|.
name|value
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getMultipleAppsFailedRetrieved ()
specifier|public
name|int
name|getMultipleAppsFailedRetrieved
parameter_list|()
block|{
return|return
name|numMultipleAppsFailedRetrieved
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|succeededAppsCreated (long duration)
specifier|public
name|void
name|succeededAppsCreated
parameter_list|(
name|long
name|duration
parameter_list|)
block|{
name|totalSucceededAppsCreated
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|getNewApplicationLatency
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|succeededAppsSubmitted (long duration)
specifier|public
name|void
name|succeededAppsSubmitted
parameter_list|(
name|long
name|duration
parameter_list|)
block|{
name|totalSucceededAppsSubmitted
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|submitApplicationLatency
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|succeededAppsKilled (long duration)
specifier|public
name|void
name|succeededAppsKilled
parameter_list|(
name|long
name|duration
parameter_list|)
block|{
name|totalSucceededAppsKilled
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|killApplicationLatency
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|succeededAppsRetrieved (long duration)
specifier|public
name|void
name|succeededAppsRetrieved
parameter_list|(
name|long
name|duration
parameter_list|)
block|{
name|totalSucceededAppsRetrieved
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|getApplicationReportLatency
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|succeededMultipleAppsRetrieved (long duration)
specifier|public
name|void
name|succeededMultipleAppsRetrieved
parameter_list|(
name|long
name|duration
parameter_list|)
block|{
name|totalSucceededMultipleAppsRetrieved
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|getApplicationsReportLatency
operator|.
name|add
argument_list|(
name|duration
argument_list|)
expr_stmt|;
block|}
DECL|method|incrAppsFailedCreated ()
specifier|public
name|void
name|incrAppsFailedCreated
parameter_list|()
block|{
name|numAppsFailedCreated
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrAppsFailedSubmitted ()
specifier|public
name|void
name|incrAppsFailedSubmitted
parameter_list|()
block|{
name|numAppsFailedSubmitted
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrAppsFailedKilled ()
specifier|public
name|void
name|incrAppsFailedKilled
parameter_list|()
block|{
name|numAppsFailedKilled
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrAppsFailedRetrieved ()
specifier|public
name|void
name|incrAppsFailedRetrieved
parameter_list|()
block|{
name|numAppsFailedRetrieved
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incrMultipleAppsFailedRetrieved ()
specifier|public
name|void
name|incrMultipleAppsFailedRetrieved
parameter_list|()
block|{
name|numMultipleAppsFailedRetrieved
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

