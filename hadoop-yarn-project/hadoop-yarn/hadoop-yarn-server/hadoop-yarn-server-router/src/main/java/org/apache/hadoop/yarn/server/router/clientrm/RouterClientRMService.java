begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.router.clientrm
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|router
operator|.
name|clientrm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailApplicationAttemptRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailApplicationAttemptResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceProfilesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceProfilesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceTypeInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllResourceTypeInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetLabelsToNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetLabelsToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewReservationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewReservationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetResourceProfileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetResourceProfileResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|MoveApplicationAcrossQueuesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|MoveApplicationAcrossQueuesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SignalContainerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SignalContainerResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationPriorityRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationPriorityResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationTimeoutsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateApplicationTimeoutsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|LRUCacheHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * RouterClientRMService is a service that runs on each router that can be used  * to intercept and inspect {@link ApplicationClientProtocol} messages from  * client to the cluster resource manager. It listens  * {@link ApplicationClientProtocol} messages from the client and creates a  * request intercepting pipeline instance for each client. The pipeline is a  * chain of {@link ClientRequestInterceptor} instances that can inspect and  * modify the request/response as needed. The main difference with  * AMRMProxyService is the protocol they implement.  */
end_comment

begin_class
DECL|class|RouterClientRMService
specifier|public
class|class
name|RouterClientRMService
extends|extends
name|AbstractService
implements|implements
name|ApplicationClientProtocol
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RouterClientRMService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|server
specifier|private
name|Server
name|server
decl_stmt|;
DECL|field|listenerEndpoint
specifier|private
name|InetSocketAddress
name|listenerEndpoint
decl_stmt|;
comment|// For each user we store an interceptors' pipeline.
comment|// For performance issue we use LRU cache to keep in memory the newest ones
comment|// and remove the oldest used ones.
DECL|field|userPipelineMap
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|RequestInterceptorChainWrapper
argument_list|>
name|userPipelineMap
decl_stmt|;
DECL|method|RouterClientRMService ()
specifier|public
name|RouterClientRMService
parameter_list|()
block|{
name|super
argument_list|(
name|RouterClientRMService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting Router ClientRMService"
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
name|getConfig
argument_list|()
decl_stmt|;
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|listenerEndpoint
operator|=
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_BIND_HOST
argument_list|,
name|YarnConfiguration
operator|.
name|ROUTER_CLIENTRM_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_ROUTER_CLIENTRM_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_ROUTER_CLIENTRM_PORT
argument_list|)
expr_stmt|;
name|int
name|maxCacheSize
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_PIPELINE_CACHE_MAX_SIZE
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_ROUTER_PIPELINE_CACHE_MAX_SIZE
argument_list|)
decl_stmt|;
name|this
operator|.
name|userPipelineMap
operator|=
name|Collections
operator|.
name|synchronizedMap
argument_list|(
operator|new
name|LRUCacheHashMap
argument_list|<
name|String
argument_list|,
name|RequestInterceptorChainWrapper
argument_list|>
argument_list|(
name|maxCacheSize
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|Configuration
name|serverConf
init|=
operator|new
name|Configuration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|int
name|numWorkerThreads
init|=
name|serverConf
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CLIENT_THREAD_COUNT
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_CLIENT_THREAD_COUNT
argument_list|)
decl_stmt|;
name|this
operator|.
name|server
operator|=
name|rpc
operator|.
name|getServer
argument_list|(
name|ApplicationClientProtocol
operator|.
name|class
argument_list|,
name|this
argument_list|,
name|listenerEndpoint
argument_list|,
name|serverConf
argument_list|,
literal|null
argument_list|,
name|numWorkerThreads
argument_list|)
expr_stmt|;
name|this
operator|.
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Router ClientRMService listening on address: "
operator|+
name|this
operator|.
name|server
operator|.
name|getListenerAddress
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceStart
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Stopping Router ClientRMService"
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|server
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|userPipelineMap
operator|.
name|clear
argument_list|()
expr_stmt|;
name|super
operator|.
name|serviceStop
argument_list|()
expr_stmt|;
block|}
comment|/**    * Returns the comma separated intercepter class names from the configuration.    *    * @param conf    * @return the intercepter class names as an instance of ArrayList    */
DECL|method|getInterceptorClassNames (Configuration conf)
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getInterceptorClassNames
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|String
name|configuredInterceptorClassNames
init|=
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|ROUTER_CLIENTRM_INTERCEPTOR_CLASS_PIPELINE
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_ROUTER_CLIENTRM_INTERCEPTOR_CLASS
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|interceptorClassNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|tempList
init|=
name|StringUtils
operator|.
name|getStringCollection
argument_list|(
name|configuredInterceptorClassNames
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|item
range|:
name|tempList
control|)
block|{
name|interceptorClassNames
operator|.
name|add
argument_list|(
name|item
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|interceptorClassNames
return|;
block|}
annotation|@
name|Override
DECL|method|getNewApplication ( GetNewApplicationRequest request)
specifier|public
name|GetNewApplicationResponse
name|getNewApplication
parameter_list|(
name|GetNewApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getNewApplication
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|submitApplication ( SubmitApplicationRequest request)
specifier|public
name|SubmitApplicationResponse
name|submitApplication
parameter_list|(
name|SubmitApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|submitApplication
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|forceKillApplication ( KillApplicationRequest request)
specifier|public
name|KillApplicationResponse
name|forceKillApplication
parameter_list|(
name|KillApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|forceKillApplication
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterMetrics ( GetClusterMetricsRequest request)
specifier|public
name|GetClusterMetricsResponse
name|getClusterMetrics
parameter_list|(
name|GetClusterMetricsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getClusterMetrics
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodes (GetClusterNodesRequest request)
specifier|public
name|GetClusterNodesResponse
name|getClusterNodes
parameter_list|(
name|GetClusterNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getClusterNodes
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueInfo (GetQueueInfoRequest request)
specifier|public
name|GetQueueInfoResponse
name|getQueueInfo
parameter_list|(
name|GetQueueInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getQueueInfo
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueUserAcls ( GetQueueUserAclsInfoRequest request)
specifier|public
name|GetQueueUserAclsInfoResponse
name|getQueueUserAcls
parameter_list|(
name|GetQueueUserAclsInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getQueueUserAcls
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|moveApplicationAcrossQueues ( MoveApplicationAcrossQueuesRequest request)
specifier|public
name|MoveApplicationAcrossQueuesResponse
name|moveApplicationAcrossQueues
parameter_list|(
name|MoveApplicationAcrossQueuesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|moveApplicationAcrossQueues
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getNewReservation ( GetNewReservationRequest request)
specifier|public
name|GetNewReservationResponse
name|getNewReservation
parameter_list|(
name|GetNewReservationRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getNewReservation
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|submitReservation ( ReservationSubmissionRequest request)
specifier|public
name|ReservationSubmissionResponse
name|submitReservation
parameter_list|(
name|ReservationSubmissionRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|submitReservation
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|listReservations ( ReservationListRequest request)
specifier|public
name|ReservationListResponse
name|listReservations
parameter_list|(
name|ReservationListRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateReservation ( ReservationUpdateRequest request)
specifier|public
name|ReservationUpdateResponse
name|updateReservation
parameter_list|(
name|ReservationUpdateRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|updateReservation
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteReservation ( ReservationDeleteRequest request)
specifier|public
name|ReservationDeleteResponse
name|deleteReservation
parameter_list|(
name|ReservationDeleteRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|deleteReservation
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getNodeToLabels ( GetNodesToLabelsRequest request)
specifier|public
name|GetNodesToLabelsResponse
name|getNodeToLabels
parameter_list|(
name|GetNodesToLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getNodeToLabels
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getLabelsToNodes ( GetLabelsToNodesRequest request)
specifier|public
name|GetLabelsToNodesResponse
name|getLabelsToNodes
parameter_list|(
name|GetLabelsToNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getLabelsToNodes
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodeLabels ( GetClusterNodeLabelsRequest request)
specifier|public
name|GetClusterNodeLabelsResponse
name|getClusterNodeLabels
parameter_list|(
name|GetClusterNodeLabelsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getClusterNodeLabels
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport ( GetApplicationReportRequest request)
specifier|public
name|GetApplicationReportResponse
name|getApplicationReport
parameter_list|(
name|GetApplicationReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getApplicationReport
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplications (GetApplicationsRequest request)
specifier|public
name|GetApplicationsResponse
name|getApplications
parameter_list|(
name|GetApplicationsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getApplications
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptReport ( GetApplicationAttemptReportRequest request)
specifier|public
name|GetApplicationAttemptReportResponse
name|getApplicationAttemptReport
parameter_list|(
name|GetApplicationAttemptReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getApplicationAttemptReport
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttempts ( GetApplicationAttemptsRequest request)
specifier|public
name|GetApplicationAttemptsResponse
name|getApplicationAttempts
parameter_list|(
name|GetApplicationAttemptsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getApplicationAttempts
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerReport ( GetContainerReportRequest request)
specifier|public
name|GetContainerReportResponse
name|getContainerReport
parameter_list|(
name|GetContainerReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getContainerReport
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainers (GetContainersRequest request)
specifier|public
name|GetContainersResponse
name|getContainers
parameter_list|(
name|GetContainersRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getContainers
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDelegationToken ( GetDelegationTokenRequest request)
specifier|public
name|GetDelegationTokenResponse
name|getDelegationToken
parameter_list|(
name|GetDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getDelegationToken
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|renewDelegationToken ( RenewDelegationTokenRequest request)
specifier|public
name|RenewDelegationTokenResponse
name|renewDelegationToken
parameter_list|(
name|RenewDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|renewDelegationToken
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|cancelDelegationToken ( CancelDelegationTokenRequest request)
specifier|public
name|CancelDelegationTokenResponse
name|cancelDelegationToken
parameter_list|(
name|CancelDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|cancelDelegationToken
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|failApplicationAttempt ( FailApplicationAttemptRequest request)
specifier|public
name|FailApplicationAttemptResponse
name|failApplicationAttempt
parameter_list|(
name|FailApplicationAttemptRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|failApplicationAttempt
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateApplicationPriority ( UpdateApplicationPriorityRequest request)
specifier|public
name|UpdateApplicationPriorityResponse
name|updateApplicationPriority
parameter_list|(
name|UpdateApplicationPriorityRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|updateApplicationPriority
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|signalToContainer ( SignalContainerRequest request)
specifier|public
name|SignalContainerResponse
name|signalToContainer
parameter_list|(
name|SignalContainerRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|signalToContainer
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|updateApplicationTimeouts ( UpdateApplicationTimeoutsRequest request)
specifier|public
name|UpdateApplicationTimeoutsResponse
name|updateApplicationTimeouts
parameter_list|(
name|UpdateApplicationTimeoutsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|updateApplicationTimeouts
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceProfiles ( GetAllResourceProfilesRequest request)
specifier|public
name|GetAllResourceProfilesResponse
name|getResourceProfiles
parameter_list|(
name|GetAllResourceProfilesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getResourceProfiles
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceProfile ( GetResourceProfileRequest request)
specifier|public
name|GetResourceProfileResponse
name|getResourceProfile
parameter_list|(
name|GetResourceProfileRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getResourceProfile
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceTypeInfo ( GetAllResourceTypeInfoRequest request)
specifier|public
name|GetAllResourceTypeInfoResponse
name|getResourceTypeInfo
parameter_list|(
name|GetAllResourceTypeInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getResourceTypeInfo
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributesToNodes ( GetAttributesToNodesRequest request)
specifier|public
name|GetAttributesToNodesResponse
name|getAttributesToNodes
parameter_list|(
name|GetAttributesToNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getAttributesToNodes
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodeAttributes ( GetClusterNodeAttributesRequest request)
specifier|public
name|GetClusterNodeAttributesResponse
name|getClusterNodeAttributes
parameter_list|(
name|GetClusterNodeAttributesRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|RequestInterceptorChainWrapper
name|pipeline
init|=
name|getInterceptorChain
argument_list|()
decl_stmt|;
return|return
name|pipeline
operator|.
name|getRootInterceptor
argument_list|()
operator|.
name|getClusterNodeAttributes
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getInterceptorChain ()
specifier|protected
name|RequestInterceptorChainWrapper
name|getInterceptorChain
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|user
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getUserName
argument_list|()
decl_stmt|;
name|RequestInterceptorChainWrapper
name|chain
init|=
name|userPipelineMap
operator|.
name|get
argument_list|(
name|user
argument_list|)
decl_stmt|;
if|if
condition|(
name|chain
operator|!=
literal|null
operator|&&
name|chain
operator|.
name|getRootInterceptor
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|chain
return|;
block|}
return|return
name|initializePipeline
argument_list|(
name|user
argument_list|)
return|;
block|}
comment|/**    * Gets the Request intercepter chains for all the users.    *    * @return the request intercepter chains.    */
annotation|@
name|VisibleForTesting
DECL|method|getPipelines ()
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|RequestInterceptorChainWrapper
argument_list|>
name|getPipelines
parameter_list|()
block|{
return|return
name|this
operator|.
name|userPipelineMap
return|;
block|}
comment|/**    * This method creates and returns reference of the first intercepter in the    * chain of request intercepter instances.    *    * @return the reference of the first intercepter in the chain    */
annotation|@
name|VisibleForTesting
DECL|method|createRequestInterceptorChain ()
specifier|protected
name|ClientRequestInterceptor
name|createRequestInterceptorChain
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|getConfig
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|interceptorClassNames
init|=
name|getInterceptorClassNames
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|ClientRequestInterceptor
name|pipeline
init|=
literal|null
decl_stmt|;
name|ClientRequestInterceptor
name|current
init|=
literal|null
decl_stmt|;
for|for
control|(
name|String
name|interceptorClassName
range|:
name|interceptorClassNames
control|)
block|{
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|interceptorClass
init|=
name|conf
operator|.
name|getClassByName
argument_list|(
name|interceptorClassName
argument_list|)
decl_stmt|;
if|if
condition|(
name|ClientRequestInterceptor
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|interceptorClass
argument_list|)
condition|)
block|{
name|ClientRequestInterceptor
name|interceptorInstance
init|=
operator|(
name|ClientRequestInterceptor
operator|)
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|interceptorClass
argument_list|,
name|conf
argument_list|)
decl_stmt|;
if|if
condition|(
name|pipeline
operator|==
literal|null
condition|)
block|{
name|pipeline
operator|=
name|interceptorInstance
expr_stmt|;
name|current
operator|=
name|interceptorInstance
expr_stmt|;
continue|continue;
block|}
else|else
block|{
name|current
operator|.
name|setNextInterceptor
argument_list|(
name|interceptorInstance
argument_list|)
expr_stmt|;
name|current
operator|=
name|interceptorInstance
expr_stmt|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|YarnRuntimeException
argument_list|(
literal|"Class: "
operator|+
name|interceptorClassName
operator|+
literal|" not instance of "
operator|+
name|ClientRequestInterceptor
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|YarnRuntimeException
argument_list|(
literal|"Could not instantiate ApplicationClientRequestInterceptor: "
operator|+
name|interceptorClassName
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|pipeline
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|YarnRuntimeException
argument_list|(
literal|"RequestInterceptor pipeline is not configured in the system"
argument_list|)
throw|;
block|}
return|return
name|pipeline
return|;
block|}
comment|/**    * Initializes the request intercepter pipeline for the specified application.    *    * @param user    */
DECL|method|initializePipeline (String user)
specifier|private
name|RequestInterceptorChainWrapper
name|initializePipeline
parameter_list|(
name|String
name|user
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
operator|.
name|userPipelineMap
init|)
block|{
if|if
condition|(
name|this
operator|.
name|userPipelineMap
operator|.
name|containsKey
argument_list|(
name|user
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Request to start an already existing user: {}"
operator|+
literal|" was received, so ignoring."
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|userPipelineMap
operator|.
name|get
argument_list|(
name|user
argument_list|)
return|;
block|}
name|RequestInterceptorChainWrapper
name|chainWrapper
init|=
operator|new
name|RequestInterceptorChainWrapper
argument_list|()
decl_stmt|;
try|try
block|{
comment|// We should init the pipeline instance after it is created and then
comment|// add to the map, to ensure thread safe.
name|LOG
operator|.
name|info
argument_list|(
literal|"Initializing request processing pipeline for application "
operator|+
literal|"for the user: {}"
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|ClientRequestInterceptor
name|interceptorChain
init|=
name|this
operator|.
name|createRequestInterceptorChain
argument_list|()
decl_stmt|;
name|interceptorChain
operator|.
name|init
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|chainWrapper
operator|.
name|init
argument_list|(
name|interceptorChain
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Init ClientRequestInterceptor error for user: "
operator|+
name|user
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
name|this
operator|.
name|userPipelineMap
operator|.
name|put
argument_list|(
name|user
argument_list|,
name|chainWrapper
argument_list|)
expr_stmt|;
return|return
name|chainWrapper
return|;
block|}
block|}
comment|/**    * Private structure for encapsulating RequestInterceptor and user instances.    *    */
annotation|@
name|Private
DECL|class|RequestInterceptorChainWrapper
specifier|public
specifier|static
class|class
name|RequestInterceptorChainWrapper
block|{
DECL|field|rootInterceptor
specifier|private
name|ClientRequestInterceptor
name|rootInterceptor
decl_stmt|;
comment|/**      * Initializes the wrapper with the specified parameters.      *      * @param interceptor the first interceptor in the pipeline      */
DECL|method|init (ClientRequestInterceptor interceptor)
specifier|public
specifier|synchronized
name|void
name|init
parameter_list|(
name|ClientRequestInterceptor
name|interceptor
parameter_list|)
block|{
name|this
operator|.
name|rootInterceptor
operator|=
name|interceptor
expr_stmt|;
block|}
comment|/**      * Gets the root request intercepter.      *      * @return the root request intercepter      */
DECL|method|getRootInterceptor ()
specifier|public
specifier|synchronized
name|ClientRequestInterceptor
name|getRootInterceptor
parameter_list|()
block|{
return|return
name|rootInterceptor
return|;
block|}
comment|/**      * Shutdown the chain of interceptors when the object is destroyed.      */
annotation|@
name|Override
DECL|method|finalize ()
specifier|protected
name|void
name|finalize
parameter_list|()
block|{
name|rootInterceptor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

