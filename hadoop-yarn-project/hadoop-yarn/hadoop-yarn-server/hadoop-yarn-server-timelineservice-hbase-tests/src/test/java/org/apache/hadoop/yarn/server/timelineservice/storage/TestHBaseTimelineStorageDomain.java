begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|collector
operator|.
name|TimelineCollectorContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
operator|.
name|BaseTableRW
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
operator|.
name|ColumnRWHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|domain
operator|.
name|DomainColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|domain
operator|.
name|DomainRowKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|domain
operator|.
name|DomainTableRW
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test for timeline domain.  */
end_comment

begin_class
DECL|class|TestHBaseTimelineStorageDomain
specifier|public
class|class
name|TestHBaseTimelineStorageDomain
block|{
DECL|field|util
specifier|private
specifier|static
name|HBaseTestingUtility
name|util
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupBeforeClass ()
specifier|public
specifier|static
name|void
name|setupBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|util
operator|=
operator|new
name|HBaseTestingUtility
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"hfile.format.version"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|util
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
name|DataGeneratorForTest
operator|.
name|createSchema
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDomainIdTable ()
specifier|public
name|void
name|testDomainIdTable
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|l
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|HBaseTimelineWriterImpl
name|hbi
init|=
literal|null
decl_stmt|;
name|Configuration
name|c1
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|String
name|clusterId
init|=
literal|"yarn-cluster"
decl_stmt|;
name|TimelineCollectorContext
name|context
init|=
operator|new
name|TimelineCollectorContext
argument_list|(
name|clusterId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|TimelineDomain
name|domain2
decl_stmt|;
try|try
block|{
name|hbi
operator|=
operator|new
name|HBaseTimelineWriterImpl
argument_list|()
expr_stmt|;
name|hbi
operator|.
name|init
argument_list|(
name|c1
argument_list|)
expr_stmt|;
comment|// write empty domain
name|domain2
operator|=
operator|new
name|TimelineDomain
argument_list|()
expr_stmt|;
name|domain2
operator|.
name|setCreatedTime
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setDescription
argument_list|(
literal|"domain-2"
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setId
argument_list|(
literal|"domain-2"
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setModifiedTime
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setOwner
argument_list|(
literal|"owner1"
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setReaders
argument_list|(
literal|"user1,user2 group1,group2"
argument_list|)
expr_stmt|;
name|domain2
operator|.
name|setWriters
argument_list|(
literal|"writer1,writer2"
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|context
argument_list|,
name|domain2
argument_list|)
expr_stmt|;
comment|// flush everything to hbase
name|hbi
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|hbi
operator|!=
literal|null
condition|)
block|{
name|hbi
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
name|Connection
name|conn
init|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|c1
argument_list|)
decl_stmt|;
name|Table
name|table1
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|BaseTableRW
operator|.
name|getTableName
argument_list|(
name|c1
argument_list|,
name|DomainTableRW
operator|.
name|TABLE_NAME_CONF_NAME
argument_list|,
name|DomainTableRW
operator|.
name|DEFAULT_TABLE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|byte
index|[]
name|startRow
init|=
operator|new
name|DomainRowKey
argument_list|(
name|clusterId
argument_list|,
name|domain2
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getRowKey
argument_list|()
decl_stmt|;
name|Get
name|g
init|=
operator|new
name|Get
argument_list|(
name|startRow
argument_list|)
decl_stmt|;
name|Result
name|result
init|=
name|table1
operator|.
name|get
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|row
init|=
name|result
operator|.
name|getRow
argument_list|()
decl_stmt|;
name|DomainRowKey
name|domainRowKey
init|=
name|DomainRowKey
operator|.
name|parseRowKey
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|domain2
operator|.
name|getId
argument_list|()
argument_list|,
name|domainRowKey
operator|.
name|getDomainId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|clusterId
argument_list|,
name|domainRowKey
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|cTime
init|=
operator|(
name|Long
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|CREATED_TIME
argument_list|)
decl_stmt|;
name|String
name|description
init|=
operator|(
name|String
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|DESCRIPTION
argument_list|)
decl_stmt|;
name|Long
name|mTime
init|=
operator|(
name|Long
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|MODIFICATION_TIME
argument_list|)
decl_stmt|;
name|String
name|owners
init|=
operator|(
name|String
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|OWNER
argument_list|)
decl_stmt|;
name|String
name|readers
init|=
operator|(
name|String
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|READERS
argument_list|)
decl_stmt|;
name|String
name|writers
init|=
operator|(
name|String
operator|)
name|ColumnRWHelper
operator|.
name|readResult
argument_list|(
name|result
argument_list|,
name|DomainColumn
operator|.
name|WRITERS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|l
argument_list|,
name|cTime
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|l
argument_list|,
name|mTime
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"domain-2"
argument_list|,
name|description
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"owner1"
argument_list|,
name|owners
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user1,user2 group1,group2"
argument_list|,
name|readers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"writer1,writer2"
argument_list|,
name|writers
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

