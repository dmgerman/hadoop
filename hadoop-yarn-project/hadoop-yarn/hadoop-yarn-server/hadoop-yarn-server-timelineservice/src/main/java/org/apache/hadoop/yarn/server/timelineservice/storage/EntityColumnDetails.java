begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|BufferedMutator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  * Contains the Info Column Family details like Column names, types and byte  * representations for  * {@link org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity}  * object that is stored in hbase Also has utility functions for storing each of  * these to the backend  */
end_comment

begin_enum
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|enum|EntityColumnDetails
enum|enum
name|EntityColumnDetails
block|{
DECL|enumConstant|ID
name|ID
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"id"
argument_list|)
block|,
DECL|enumConstant|TYPE
name|TYPE
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"type"
argument_list|)
block|,
DECL|enumConstant|CREATED_TIME
name|CREATED_TIME
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"created_time"
argument_list|)
block|,
DECL|enumConstant|MODIFIED_TIME
name|MODIFIED_TIME
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"modified_time"
argument_list|)
block|,
DECL|enumConstant|FLOW_VERSION
name|FLOW_VERSION
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"flow_version"
argument_list|)
block|,
DECL|enumConstant|PREFIX_IS_RELATED_TO
name|PREFIX_IS_RELATED_TO
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"r"
argument_list|)
block|,
DECL|enumConstant|PREFIX_RELATES_TO
name|PREFIX_RELATES_TO
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"s"
argument_list|)
block|,
DECL|enumConstant|PREFIX_EVENTS
name|PREFIX_EVENTS
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
argument_list|,
literal|"e"
argument_list|)
block|;
DECL|field|columnFamily
specifier|private
specifier|final
name|EntityColumnFamily
name|columnFamily
decl_stmt|;
DECL|field|value
specifier|private
specifier|final
name|String
name|value
decl_stmt|;
DECL|field|inBytes
specifier|private
specifier|final
name|byte
index|[]
name|inBytes
decl_stmt|;
DECL|method|EntityColumnDetails (EntityColumnFamily columnFamily, String value)
specifier|private
name|EntityColumnDetails
parameter_list|(
name|EntityColumnFamily
name|columnFamily
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|columnFamily
operator|=
name|columnFamily
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
name|this
operator|.
name|inBytes
operator|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|this
operator|.
name|value
operator|.
name|toLowerCase
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getValue ()
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
DECL|method|getInBytes ()
name|byte
index|[]
name|getInBytes
parameter_list|()
block|{
return|return
name|inBytes
return|;
block|}
DECL|method|store (byte[] rowKey, BufferedMutator entityTable, Object inputValue)
name|void
name|store
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|BufferedMutator
name|entityTable
parameter_list|,
name|Object
name|inputValue
parameter_list|)
throws|throws
name|IOException
block|{
name|TimelineWriterUtils
operator|.
name|store
argument_list|(
name|rowKey
argument_list|,
name|entityTable
argument_list|,
name|this
operator|.
name|columnFamily
operator|.
name|getInBytes
argument_list|()
argument_list|,
literal|null
argument_list|,
name|this
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|inputValue
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * stores events data with column prefix    */
DECL|method|store (byte[] rowKey, BufferedMutator entityTable, byte[] idBytes, String key, Object inputValue)
name|void
name|store
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|BufferedMutator
name|entityTable
parameter_list|,
name|byte
index|[]
name|idBytes
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|inputValue
parameter_list|)
throws|throws
name|IOException
block|{
name|TimelineWriterUtils
operator|.
name|store
argument_list|(
name|rowKey
argument_list|,
name|entityTable
argument_list|,
name|this
operator|.
name|columnFamily
operator|.
name|getInBytes
argument_list|()
argument_list|,
comment|// column prefix
name|TimelineWriterUtils
operator|.
name|join
argument_list|(
name|TimelineEntitySchemaConstants
operator|.
name|ROW_KEY_SEPARATOR_BYTES
argument_list|,
name|this
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|idBytes
argument_list|)
argument_list|,
comment|// column qualifier
name|Bytes
operator|.
name|toBytes
argument_list|(
name|key
argument_list|)
argument_list|,
name|inputValue
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * stores relation entities with a column prefix    */
DECL|method|store (byte[] rowKey, BufferedMutator entityTable, String key, Set<String> inputValue)
name|void
name|store
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|BufferedMutator
name|entityTable
parameter_list|,
name|String
name|key
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|inputValue
parameter_list|)
throws|throws
name|IOException
block|{
name|TimelineWriterUtils
operator|.
name|store
argument_list|(
name|rowKey
argument_list|,
name|entityTable
argument_list|,
name|this
operator|.
name|columnFamily
operator|.
name|getInBytes
argument_list|()
argument_list|,
comment|// column prefix
name|this
operator|.
name|getInBytes
argument_list|()
argument_list|,
comment|// column qualifier
name|Bytes
operator|.
name|toBytes
argument_list|(
name|key
argument_list|)
argument_list|,
comment|// value
name|TimelineWriterUtils
operator|.
name|getValueAsString
argument_list|(
name|TimelineEntitySchemaConstants
operator|.
name|ROW_KEY_SEPARATOR
argument_list|,
name|inputValue
argument_list|)
argument_list|,
comment|// cell timestamp
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// TODO add a method that accepts a byte array,
comment|// iterates over the enum and returns an enum from those bytes
block|}
end_enum

end_unit

