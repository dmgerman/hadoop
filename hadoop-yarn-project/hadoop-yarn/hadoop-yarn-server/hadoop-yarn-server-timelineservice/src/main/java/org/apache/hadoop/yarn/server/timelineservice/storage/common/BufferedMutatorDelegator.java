begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|BufferedMutator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_comment
comment|/**  * To be used to wrap an actual {@link BufferedMutator} in a type safe manner  *  * @param<T> The class referring to the table to be written to.  */
end_comment

begin_class
DECL|class|BufferedMutatorDelegator
class|class
name|BufferedMutatorDelegator
parameter_list|<
name|T
parameter_list|>
implements|implements
name|TypedBufferedMutator
argument_list|<
name|T
argument_list|>
block|{
DECL|field|bufferedMutator
specifier|private
specifier|final
name|BufferedMutator
name|bufferedMutator
decl_stmt|;
comment|/**    * @param bufferedMutator the mutator to be wrapped for delegation. Shall not    *          be null.    */
DECL|method|BufferedMutatorDelegator (BufferedMutator bufferedMutator)
specifier|public
name|BufferedMutatorDelegator
parameter_list|(
name|BufferedMutator
name|bufferedMutator
parameter_list|)
block|{
name|this
operator|.
name|bufferedMutator
operator|=
name|bufferedMutator
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|TableName
name|getName
parameter_list|()
block|{
return|return
name|bufferedMutator
operator|.
name|getName
argument_list|()
return|;
block|}
DECL|method|getConfiguration ()
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|bufferedMutator
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
DECL|method|mutate (Mutation mutation)
specifier|public
name|void
name|mutate
parameter_list|(
name|Mutation
name|mutation
parameter_list|)
throws|throws
name|IOException
block|{
name|bufferedMutator
operator|.
name|mutate
argument_list|(
name|mutation
argument_list|)
expr_stmt|;
block|}
DECL|method|mutate (List<? extends Mutation> mutations)
specifier|public
name|void
name|mutate
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Mutation
argument_list|>
name|mutations
parameter_list|)
throws|throws
name|IOException
block|{
name|bufferedMutator
operator|.
name|mutate
argument_list|(
name|mutations
argument_list|)
expr_stmt|;
block|}
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|bufferedMutator
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|flush ()
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
name|bufferedMutator
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
DECL|method|getWriteBufferSize ()
specifier|public
name|long
name|getWriteBufferSize
parameter_list|()
block|{
return|return
name|bufferedMutator
operator|.
name|getWriteBufferSize
argument_list|()
return|;
block|}
block|}
end_class

end_unit

