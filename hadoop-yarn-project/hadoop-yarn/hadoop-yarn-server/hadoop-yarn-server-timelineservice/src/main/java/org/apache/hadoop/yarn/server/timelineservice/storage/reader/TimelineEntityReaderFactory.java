begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage.reader
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|reader
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineFilterList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineReader
operator|.
name|Field
import|;
end_import

begin_comment
comment|/**  * Factory methods for instantiating a timeline entity reader.  */
end_comment

begin_class
DECL|class|TimelineEntityReaderFactory
specifier|public
class|class
name|TimelineEntityReaderFactory
block|{
comment|/**    * Creates a timeline entity reader instance for reading a single entity with    * the specified input.    */
DECL|method|createSingleEntityReader (String userId, String clusterId, String flowName, Long flowRunId, String appId, String entityType, String entityId, TimelineFilterList confs, TimelineFilterList metrics, EnumSet<Field> fieldsToRetrieve)
specifier|public
specifier|static
name|TimelineEntityReader
name|createSingleEntityReader
parameter_list|(
name|String
name|userId
parameter_list|,
name|String
name|clusterId
parameter_list|,
name|String
name|flowName
parameter_list|,
name|Long
name|flowRunId
parameter_list|,
name|String
name|appId
parameter_list|,
name|String
name|entityType
parameter_list|,
name|String
name|entityId
parameter_list|,
name|TimelineFilterList
name|confs
parameter_list|,
name|TimelineFilterList
name|metrics
parameter_list|,
name|EnumSet
argument_list|<
name|Field
argument_list|>
name|fieldsToRetrieve
parameter_list|)
block|{
comment|// currently the types that are handled separate from the generic entity
comment|// table are application, flow run, and flow activity entities
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|ApplicationEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|entityId
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_RUN
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|FlowRunEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|entityId
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_ACTIVITY
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|FlowActivityEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|entityId
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
else|else
block|{
comment|// assume we're dealing with a generic entity read
return|return
operator|new
name|GenericEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|entityId
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
block|}
comment|/**    * Creates a timeline entity reader instance for reading set of entities with    * the specified input and predicates.    */
DECL|method|createMultipleEntitiesReader (String userId, String clusterId, String flowName, Long flowRunId, String appId, String entityType, Long limit, Long createdTimeBegin, Long createdTimeEnd, Map<String, Set<String>> relatesTo, Map<String, Set<String>> isRelatedTo, Map<String, Object> infoFilters, Map<String, String> configFilters, Set<String> metricFilters, Set<String> eventFilters, TimelineFilterList confs, TimelineFilterList metrics, EnumSet<Field> fieldsToRetrieve)
specifier|public
specifier|static
name|TimelineEntityReader
name|createMultipleEntitiesReader
parameter_list|(
name|String
name|userId
parameter_list|,
name|String
name|clusterId
parameter_list|,
name|String
name|flowName
parameter_list|,
name|Long
name|flowRunId
parameter_list|,
name|String
name|appId
parameter_list|,
name|String
name|entityType
parameter_list|,
name|Long
name|limit
parameter_list|,
name|Long
name|createdTimeBegin
parameter_list|,
name|Long
name|createdTimeEnd
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|relatesTo
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|isRelatedTo
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|infoFilters
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configFilters
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|metricFilters
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|eventFilters
parameter_list|,
name|TimelineFilterList
name|confs
parameter_list|,
name|TimelineFilterList
name|metrics
parameter_list|,
name|EnumSet
argument_list|<
name|Field
argument_list|>
name|fieldsToRetrieve
parameter_list|)
block|{
comment|// currently the types that are handled separate from the generic entity
comment|// table are application, flow run, and flow activity entities
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|ApplicationEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|limit
argument_list|,
name|createdTimeBegin
argument_list|,
name|createdTimeEnd
argument_list|,
name|relatesTo
argument_list|,
name|isRelatedTo
argument_list|,
name|infoFilters
argument_list|,
name|configFilters
argument_list|,
name|metricFilters
argument_list|,
name|eventFilters
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_ACTIVITY
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|FlowActivityEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|limit
argument_list|,
name|createdTimeBegin
argument_list|,
name|createdTimeEnd
argument_list|,
name|relatesTo
argument_list|,
name|isRelatedTo
argument_list|,
name|infoFilters
argument_list|,
name|configFilters
argument_list|,
name|metricFilters
argument_list|,
name|eventFilters
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|TimelineEntityType
operator|.
name|YARN_FLOW_RUN
operator|.
name|matches
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
return|return
operator|new
name|FlowRunEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|limit
argument_list|,
name|createdTimeBegin
argument_list|,
name|createdTimeEnd
argument_list|,
name|relatesTo
argument_list|,
name|isRelatedTo
argument_list|,
name|infoFilters
argument_list|,
name|configFilters
argument_list|,
name|metricFilters
argument_list|,
name|eventFilters
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|)
return|;
block|}
else|else
block|{
comment|// assume we're dealing with a generic entity read
return|return
operator|new
name|GenericEntityReader
argument_list|(
name|userId
argument_list|,
name|clusterId
argument_list|,
name|flowName
argument_list|,
name|flowRunId
argument_list|,
name|appId
argument_list|,
name|entityType
argument_list|,
name|limit
argument_list|,
name|createdTimeBegin
argument_list|,
name|createdTimeEnd
argument_list|,
name|relatesTo
argument_list|,
name|isRelatedTo
argument_list|,
name|infoFilters
argument_list|,
name|configFilters
argument_list|,
name|metricFilters
argument_list|,
name|eventFilters
argument_list|,
name|confs
argument_list|,
name|metrics
argument_list|,
name|fieldsToRetrieve
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

