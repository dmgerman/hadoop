begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|timeline
operator|.
name|TimelineUtils
import|;
end_import

begin_comment
comment|/**  * Encapsulates timeline context information.  */
end_comment

begin_class
DECL|class|TimelineContext
specifier|public
class|class
name|TimelineContext
block|{
DECL|field|clusterId
specifier|private
name|String
name|clusterId
decl_stmt|;
DECL|field|userId
specifier|private
name|String
name|userId
decl_stmt|;
DECL|field|flowName
specifier|private
name|String
name|flowName
decl_stmt|;
DECL|field|flowRunId
specifier|private
name|Long
name|flowRunId
decl_stmt|;
DECL|field|appId
specifier|private
name|String
name|appId
decl_stmt|;
DECL|field|DEFAULT_CONF
specifier|private
specifier|static
specifier|final
name|Configuration
name|DEFAULT_CONF
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
DECL|method|TimelineContext ()
specifier|public
name|TimelineContext
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0L
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|31
decl_stmt|;
name|int
name|result
init|=
literal|1
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|appId
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|appId
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|clusterId
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|clusterId
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|flowName
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|flowName
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|flowRunId
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|flowRunId
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|userId
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|userId
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|getClass
argument_list|()
operator|!=
name|obj
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|TimelineContext
name|other
init|=
operator|(
name|TimelineContext
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|appId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|appId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|appId
operator|.
name|equals
argument_list|(
name|other
operator|.
name|appId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|clusterId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|clusterId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|clusterId
operator|.
name|equals
argument_list|(
name|other
operator|.
name|clusterId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|flowName
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|flowName
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|flowName
operator|.
name|equals
argument_list|(
name|other
operator|.
name|flowName
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|flowRunId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|flowRunId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|flowRunId
operator|.
name|equals
argument_list|(
name|other
operator|.
name|flowRunId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|userId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|userId
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|userId
operator|.
name|equals
argument_list|(
name|other
operator|.
name|userId
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|TimelineContext (String clusterId, String userId, String flowName, Long flowRunId, String appId)
specifier|public
name|TimelineContext
parameter_list|(
name|String
name|clusterId
parameter_list|,
name|String
name|userId
parameter_list|,
name|String
name|flowName
parameter_list|,
name|Long
name|flowRunId
parameter_list|,
name|String
name|appId
parameter_list|)
block|{
name|this
operator|.
name|clusterId
operator|=
name|clusterId
expr_stmt|;
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
name|this
operator|.
name|flowName
operator|=
name|TimelineUtils
operator|.
name|shortenFlowName
argument_list|(
name|flowName
argument_list|,
name|DEFAULT_CONF
argument_list|)
expr_stmt|;
name|this
operator|.
name|flowRunId
operator|=
name|flowRunId
expr_stmt|;
name|this
operator|.
name|appId
operator|=
name|appId
expr_stmt|;
block|}
DECL|method|getClusterId ()
specifier|public
name|String
name|getClusterId
parameter_list|()
block|{
return|return
name|clusterId
return|;
block|}
DECL|method|setClusterId (String cluster)
specifier|public
name|void
name|setClusterId
parameter_list|(
name|String
name|cluster
parameter_list|)
block|{
name|this
operator|.
name|clusterId
operator|=
name|cluster
expr_stmt|;
block|}
DECL|method|getUserId ()
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
DECL|method|setUserId (String user)
specifier|public
name|void
name|setUserId
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getFlowName ()
specifier|public
name|String
name|getFlowName
parameter_list|()
block|{
return|return
name|flowName
return|;
block|}
DECL|method|setFlowName (String flow)
specifier|public
name|void
name|setFlowName
parameter_list|(
name|String
name|flow
parameter_list|)
block|{
name|this
operator|.
name|flowName
operator|=
name|TimelineUtils
operator|.
name|shortenFlowName
argument_list|(
name|flow
argument_list|,
name|DEFAULT_CONF
argument_list|)
expr_stmt|;
block|}
DECL|method|getFlowRunId ()
specifier|public
name|Long
name|getFlowRunId
parameter_list|()
block|{
return|return
name|flowRunId
return|;
block|}
DECL|method|setFlowRunId (long runId)
specifier|public
name|void
name|setFlowRunId
parameter_list|(
name|long
name|runId
parameter_list|)
block|{
name|this
operator|.
name|flowRunId
operator|=
name|runId
expr_stmt|;
block|}
DECL|method|getAppId ()
specifier|public
name|String
name|getAppId
parameter_list|()
block|{
return|return
name|appId
return|;
block|}
DECL|method|setAppId (String app)
specifier|public
name|void
name|setAppId
parameter_list|(
name|String
name|app
parameter_list|)
block|{
name|this
operator|.
name|appId
operator|=
name|app
expr_stmt|;
block|}
block|}
end_class

end_unit

