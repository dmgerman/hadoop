begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|AbstractDelegationTokenSecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
operator|.
name|TimelineDelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|security
operator|.
name|TimelineDelgationTokenSecretManagerService
import|;
end_import

begin_comment
comment|/**  * The service wrapper of {@link TimelineV2DelegationTokenSecretManager}.  */
end_comment

begin_class
DECL|class|TimelineV2DelegationTokenSecretManagerService
specifier|public
class|class
name|TimelineV2DelegationTokenSecretManagerService
extends|extends
name|TimelineDelgationTokenSecretManagerService
block|{
DECL|method|TimelineV2DelegationTokenSecretManagerService ()
specifier|public
name|TimelineV2DelegationTokenSecretManagerService
parameter_list|()
block|{
name|super
argument_list|(
name|TimelineV2DelegationTokenSecretManagerService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|AbstractDelegationTokenSecretManager
argument_list|<
name|TimelineDelegationTokenIdentifier
argument_list|>
DECL|method|createTimelineDelegationTokenSecretManager (long secretKeyInterval, long tokenMaxLifetime, long tokenRenewInterval, long tokenRemovalScanInterval)
name|createTimelineDelegationTokenSecretManager
parameter_list|(
name|long
name|secretKeyInterval
parameter_list|,
name|long
name|tokenMaxLifetime
parameter_list|,
name|long
name|tokenRenewInterval
parameter_list|,
name|long
name|tokenRemovalScanInterval
parameter_list|)
block|{
return|return
operator|new
name|TimelineV2DelegationTokenSecretManager
argument_list|(
name|secretKeyInterval
argument_list|,
name|tokenMaxLifetime
argument_list|,
name|tokenRenewInterval
argument_list|,
name|tokenRemovalScanInterval
argument_list|)
return|;
block|}
comment|/**    * Delegation token secret manager for ATSv2.    */
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|TimelineV2DelegationTokenSecretManager
specifier|public
specifier|static
class|class
name|TimelineV2DelegationTokenSecretManager
extends|extends
name|AbstractDelegationTokenSecretManager
argument_list|<
name|TimelineDelegationTokenIdentifier
argument_list|>
block|{
comment|/**      * Create a timeline v2 secret manager.      * @param delegationKeyUpdateInterval the number of milliseconds for rolling      *        new secret keys.      * @param delegationTokenMaxLifetime the maximum lifetime of the delegation      *        tokens in milliseconds      * @param delegationTokenRenewInterval how often the tokens must be renewed      *        in milliseconds      * @param delegationTokenRemoverScanInterval how often the tokens are      *        scanned for expired tokens in milliseconds      */
DECL|method|TimelineV2DelegationTokenSecretManager ( long delegationKeyUpdateInterval, long delegationTokenMaxLifetime, long delegationTokenRenewInterval, long delegationTokenRemoverScanInterval)
specifier|public
name|TimelineV2DelegationTokenSecretManager
parameter_list|(
name|long
name|delegationKeyUpdateInterval
parameter_list|,
name|long
name|delegationTokenMaxLifetime
parameter_list|,
name|long
name|delegationTokenRenewInterval
parameter_list|,
name|long
name|delegationTokenRemoverScanInterval
parameter_list|)
block|{
name|super
argument_list|(
name|delegationKeyUpdateInterval
argument_list|,
name|delegationTokenMaxLifetime
argument_list|,
name|delegationTokenRenewInterval
argument_list|,
name|delegationTokenRemoverScanInterval
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createIdentifier ()
specifier|public
name|TimelineDelegationTokenIdentifier
name|createIdentifier
parameter_list|()
block|{
return|return
operator|new
name|TimelineDelegationTokenIdentifier
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

