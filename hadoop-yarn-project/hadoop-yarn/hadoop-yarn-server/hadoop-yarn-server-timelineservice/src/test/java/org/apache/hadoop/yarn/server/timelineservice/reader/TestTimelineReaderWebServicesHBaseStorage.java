begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.reader
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|UndeclaredThrowableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|FlowActivityEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|FlowRunEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ApplicationMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|HBaseTimelineWriterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineSchemaCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
operator|.
name|TimelineStorageUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnJacksonJaxbJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|ClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|DefaultClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|client
operator|.
name|urlconnection
operator|.
name|HttpURLConnectionFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|client
operator|.
name|urlconnection
operator|.
name|URLConnectionClientHandler
import|;
end_import

begin_class
DECL|class|TestTimelineReaderWebServicesHBaseStorage
specifier|public
class|class
name|TestTimelineReaderWebServicesHBaseStorage
block|{
DECL|field|serverPort
specifier|private
name|int
name|serverPort
decl_stmt|;
DECL|field|server
specifier|private
name|TimelineReaderServer
name|server
decl_stmt|;
DECL|field|util
specifier|private
specifier|static
name|HBaseTestingUtility
name|util
decl_stmt|;
DECL|field|ts
specifier|private
specifier|static
name|long
name|ts
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
DECL|field|dayTs
specifier|private
specifier|static
name|long
name|dayTs
init|=
name|TimelineStorageUtils
operator|.
name|getTopOfTheDayTimestamp
argument_list|(
name|ts
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|util
operator|=
operator|new
name|HBaseTestingUtility
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"hfile.format.version"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|util
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
name|TimelineSchemaCreator
operator|.
name|createAllTables
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|loadData
argument_list|()
expr_stmt|;
block|}
DECL|method|loadData ()
specifier|private
specifier|static
name|void
name|loadData
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|cluster
init|=
literal|"cluster1"
decl_stmt|;
name|String
name|user
init|=
literal|"user1"
decl_stmt|;
name|String
name|flow
init|=
literal|"flow_name"
decl_stmt|;
name|String
name|flowVersion
init|=
literal|"CF7022C10F1354"
decl_stmt|;
name|Long
name|runid
init|=
literal|1002345678919L
decl_stmt|;
name|Long
name|runid1
init|=
literal|1002345678920L
decl_stmt|;
name|TimelineEntities
name|te
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|String
name|id
init|=
literal|"application_1111111111_1111"
decl_stmt|;
name|String
name|type
init|=
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Long
name|cTime
init|=
literal|1425016501000L
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|cTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addConfig
argument_list|(
literal|"cfg2"
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
comment|// add metrics
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|metrics
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|TimelineMetric
name|m1
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|m1
operator|.
name|setId
argument_list|(
literal|"MAP_SLOT_MILLIS"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|metricValues
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
argument_list|()
decl_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|100000
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|TIME_SERIES
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|m1
operator|=
operator|new
name|TimelineMetric
argument_list|()
expr_stmt|;
name|m1
operator|.
name|setId
argument_list|(
literal|"HDFS_BYTES_READ"
argument_list|)
expr_stmt|;
name|metricValues
operator|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
argument_list|()
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|100000
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|57
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|TIME_SERIES
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addMetrics
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|Long
name|expTs
init|=
literal|1436512802000L
decl_stmt|;
name|event
operator|.
name|setTimestamp
argument_list|(
name|expTs
argument_list|)
expr_stmt|;
name|String
name|expKey
init|=
literal|"foo_event"
decl_stmt|;
name|Object
name|expVal
init|=
literal|"test"
decl_stmt|;
name|event
operator|.
name|addInfo
argument_list|(
name|expKey
argument_list|,
name|expVal
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event11
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event11
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|expTs
operator|=
literal|1436512802010L
expr_stmt|;
name|event11
operator|.
name|setTimestamp
argument_list|(
name|expTs
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|event11
argument_list|)
expr_stmt|;
name|te
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
comment|// write another application with same metric to this flow
name|TimelineEntities
name|te1
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity1
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|id
operator|=
literal|"application_1111111111_2222"
expr_stmt|;
name|type
operator|=
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
expr_stmt|;
name|entity1
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity1
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|cTime
operator|=
literal|1425016501000L
expr_stmt|;
name|entity1
operator|.
name|setCreatedTime
argument_list|(
name|cTime
argument_list|)
expr_stmt|;
name|entity1
operator|.
name|addConfig
argument_list|(
literal|"cfg1"
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
comment|// add metrics
name|metrics
operator|.
name|clear
argument_list|()
expr_stmt|;
name|TimelineMetric
name|m2
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|m2
operator|.
name|setId
argument_list|(
literal|"MAP_SLOT_MILLIS"
argument_list|)
expr_stmt|;
name|metricValues
operator|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
argument_list|()
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|100000
argument_list|,
literal|5L
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|101L
argument_list|)
expr_stmt|;
name|m2
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|TIME_SERIES
argument_list|)
expr_stmt|;
name|m2
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|entity1
operator|.
name|addMetrics
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event1
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event1
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|event1
operator|.
name|setTimestamp
argument_list|(
name|expTs
argument_list|)
expr_stmt|;
name|event1
operator|.
name|addInfo
argument_list|(
name|expKey
argument_list|,
name|expVal
argument_list|)
expr_stmt|;
name|entity1
operator|.
name|addEvent
argument_list|(
name|event1
argument_list|)
expr_stmt|;
name|te1
operator|.
name|addEntity
argument_list|(
name|entity1
argument_list|)
expr_stmt|;
name|String
name|flow2
init|=
literal|"flow_name2"
decl_stmt|;
name|String
name|flowVersion2
init|=
literal|"CF7022C10F1454"
decl_stmt|;
name|Long
name|runid2
init|=
literal|2102356789046L
decl_stmt|;
name|TimelineEntities
name|te3
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity3
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|id
operator|=
literal|"application_11111111111111_2223"
expr_stmt|;
name|entity3
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity3
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|cTime
operator|=
literal|1425016501037L
expr_stmt|;
name|entity3
operator|.
name|setCreatedTime
argument_list|(
name|cTime
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event2
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event2
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|event2
operator|.
name|setTimestamp
argument_list|(
literal|1436512802037L
argument_list|)
expr_stmt|;
name|event2
operator|.
name|addInfo
argument_list|(
literal|"foo_event"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|entity3
operator|.
name|addEvent
argument_list|(
name|event2
argument_list|)
expr_stmt|;
name|te3
operator|.
name|addEntity
argument_list|(
name|entity3
argument_list|)
expr_stmt|;
name|TimelineEntities
name|te4
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity4
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|id
operator|=
literal|"application_1111111111_2224"
expr_stmt|;
name|entity4
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity4
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|cTime
operator|=
literal|1425016501034L
expr_stmt|;
name|entity4
operator|.
name|setCreatedTime
argument_list|(
name|cTime
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event4
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event4
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|CREATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|event4
operator|.
name|setTimestamp
argument_list|(
literal|1436512802037L
argument_list|)
expr_stmt|;
name|event4
operator|.
name|addInfo
argument_list|(
literal|"foo_event"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|entity4
operator|.
name|addEvent
argument_list|(
name|event4
argument_list|)
expr_stmt|;
name|te4
operator|.
name|addEntity
argument_list|(
name|entity4
argument_list|)
expr_stmt|;
name|TimelineEntities
name|te5
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity5
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity5
operator|.
name|setId
argument_list|(
literal|"entity1"
argument_list|)
expr_stmt|;
name|entity5
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
expr_stmt|;
name|entity5
operator|.
name|setCreatedTime
argument_list|(
literal|1425016501034L
argument_list|)
expr_stmt|;
name|te5
operator|.
name|addEntity
argument_list|(
name|entity5
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entity6
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity6
operator|.
name|setId
argument_list|(
literal|"entity2"
argument_list|)
expr_stmt|;
name|entity6
operator|.
name|setType
argument_list|(
literal|"type1"
argument_list|)
expr_stmt|;
name|entity6
operator|.
name|setCreatedTime
argument_list|(
literal|1425016501034L
argument_list|)
expr_stmt|;
name|te5
operator|.
name|addEntity
argument_list|(
name|entity6
argument_list|)
expr_stmt|;
name|HBaseTimelineWriterImpl
name|hbi
init|=
literal|null
decl_stmt|;
name|Configuration
name|c1
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
try|try
block|{
name|hbi
operator|=
operator|new
name|HBaseTimelineWriterImpl
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|init
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|flowVersion
argument_list|,
name|runid
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|te
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|flowVersion
argument_list|,
name|runid
argument_list|,
name|entity1
operator|.
name|getId
argument_list|()
argument_list|,
name|te1
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|flowVersion
argument_list|,
name|runid1
argument_list|,
name|entity4
operator|.
name|getId
argument_list|()
argument_list|,
name|te4
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow2
argument_list|,
name|flowVersion2
argument_list|,
name|runid2
argument_list|,
name|entity3
operator|.
name|getId
argument_list|()
argument_list|,
name|te3
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|flowVersion
argument_list|,
name|runid
argument_list|,
literal|"application_1111111111_1111"
argument_list|,
name|te5
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|hbi
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
DECL|method|tearDown ()
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|util
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Configuration
name|config
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WEBAPP_ADDRESS
argument_list|,
literal|"localhost:0"
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CLUSTER_ID
argument_list|,
literal|"cluster1"
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_READER_CLASS
argument_list|,
literal|"org.apache.hadoop.yarn.server.timelineservice.storage."
operator|+
literal|"HBaseTimelineReaderImpl"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setInt
argument_list|(
literal|"hfile.format.version"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|server
operator|=
operator|new
name|TimelineReaderServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|serverPort
operator|=
name|server
operator|.
name|getWebServerPort
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Web server failed to start"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createClient ()
specifier|private
specifier|static
name|Client
name|createClient
parameter_list|()
block|{
name|ClientConfig
name|cfg
init|=
operator|new
name|DefaultClientConfig
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|getClasses
argument_list|()
operator|.
name|add
argument_list|(
name|YarnJacksonJaxbJsonProvider
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
operator|new
name|Client
argument_list|(
operator|new
name|URLConnectionClientHandler
argument_list|(
operator|new
name|DummyURLConnectionFactory
argument_list|()
argument_list|)
argument_list|,
name|cfg
argument_list|)
return|;
block|}
DECL|method|getResponse (Client client, URI uri)
specifier|private
specifier|static
name|ClientResponse
name|getResponse
parameter_list|(
name|Client
name|client
parameter_list|,
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|ClientResponse
name|resp
init|=
name|client
operator|.
name|resource
argument_list|(
name|uri
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|resp
operator|==
literal|null
operator|||
name|resp
operator|.
name|getClientResponseStatus
argument_list|()
operator|!=
name|ClientResponse
operator|.
name|Status
operator|.
name|OK
condition|)
block|{
name|String
name|msg
init|=
operator|new
name|String
argument_list|()
decl_stmt|;
if|if
condition|(
name|resp
operator|!=
literal|null
condition|)
block|{
name|msg
operator|=
name|resp
operator|.
name|getClientResponseStatus
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect response from timeline reader. "
operator|+
literal|"Status="
operator|+
name|msg
argument_list|)
throw|;
block|}
return|return
name|resp
return|;
block|}
DECL|class|DummyURLConnectionFactory
specifier|private
specifier|static
class|class
name|DummyURLConnectionFactory
implements|implements
name|HttpURLConnectionFactory
block|{
annotation|@
name|Override
DECL|method|getHttpURLConnection (final URL url)
specifier|public
name|HttpURLConnection
name|getHttpURLConnection
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
DECL|method|newEntity (String type, String id)
specifier|private
specifier|static
name|TimelineEntity
name|newEntity
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setIdentifier
argument_list|(
operator|new
name|TimelineEntity
operator|.
name|Identifier
argument_list|(
name|type
argument_list|,
name|id
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|newMetric (TimelineMetric.Type type, String id, long ts, Number value)
specifier|private
specifier|static
name|TimelineMetric
name|newMetric
parameter_list|(
name|TimelineMetric
operator|.
name|Type
name|type
parameter_list|,
name|String
name|id
parameter_list|,
name|long
name|ts
parameter_list|,
name|Number
name|value
parameter_list|)
block|{
name|TimelineMetric
name|metric
init|=
operator|new
name|TimelineMetric
argument_list|(
name|type
argument_list|)
decl_stmt|;
name|metric
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|metric
operator|.
name|addValue
argument_list|(
name|ts
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|metric
return|;
block|}
DECL|method|verifyMetricValues (Map<Long, Number> m1, Map<Long, Number> m2)
specifier|private
specifier|static
name|boolean
name|verifyMetricValues
parameter_list|(
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|m1
parameter_list|,
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|m2
parameter_list|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|entry
range|:
name|m1
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|m2
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|m2
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
DECL|method|verifyMetrics ( TimelineMetric m, TimelineMetric... metrics)
specifier|private
specifier|static
name|boolean
name|verifyMetrics
parameter_list|(
name|TimelineMetric
name|m
parameter_list|,
name|TimelineMetric
modifier|...
name|metrics
parameter_list|)
block|{
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|metrics
control|)
block|{
if|if
condition|(
operator|!
name|metric
operator|.
name|equals
argument_list|(
name|m
argument_list|)
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
operator|!
name|verifyMetricValues
argument_list|(
name|metric
operator|.
name|getValues
argument_list|()
argument_list|,
name|m
operator|.
name|getValues
argument_list|()
argument_list|)
condition|)
block|{
continue|continue;
block|}
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|method|verifyHttpResponse (Client client, URI uri, Status status)
specifier|private
specifier|static
name|void
name|verifyHttpResponse
parameter_list|(
name|Client
name|client
parameter_list|,
name|URI
name|uri
parameter_list|,
name|Status
name|status
parameter_list|)
block|{
name|ClientResponse
name|resp
init|=
name|client
operator|.
name|resource
argument_list|(
name|uri
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resp
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Response from server should have been "
operator|+
name|status
argument_list|,
name|resp
operator|.
name|getClientResponseStatus
argument_list|()
operator|.
name|equals
argument_list|(
name|status
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFlowRun ()
specifier|public
name|void
name|testGetFlowRun
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrun/user1/cluster1/flow_name/1002345678919"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|FlowRunEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|FlowRunEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m1
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|SINGLE_VALUE
argument_list|,
literal|"HDFS_BYTES_READ"
argument_list|,
name|ts
operator|-
literal|80000
argument_list|,
literal|57L
argument_list|)
decl_stmt|;
name|TimelineMetric
name|m2
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|SINGLE_VALUE
argument_list|,
literal|"MAP_SLOT_MILLIS"
argument_list|,
name|ts
operator|-
literal|80000
argument_list|,
literal|141L
argument_list|)
decl_stmt|;
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|entity
operator|.
name|getMetrics
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|verifyMetrics
argument_list|(
name|metric
argument_list|,
name|m1
argument_list|,
name|m2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Query without specifying cluster ID.
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrun/user1/flow_name/1002345678919"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entity
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
name|FlowRunEntity
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|m1
operator|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|SINGLE_VALUE
argument_list|,
literal|"HDFS_BYTES_READ"
argument_list|,
name|ts
operator|-
literal|80000
argument_list|,
literal|57L
argument_list|)
expr_stmt|;
name|m2
operator|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|SINGLE_VALUE
argument_list|,
literal|"MAP_SLOT_MILLIS"
argument_list|,
name|ts
operator|-
literal|80000
argument_list|,
literal|141L
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|entity
operator|.
name|getMetrics
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|verifyMetrics
argument_list|(
name|metric
argument_list|,
name|m1
argument_list|,
name|m2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowRuns ()
specifier|public
name|void
name|testGetFlowRuns
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678919L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501000L
operator|)
operator|)
operator|||
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678920"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678920L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501034L
operator|)
operator|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name?limit=1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678920"
argument_list|)
operator|&&
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678920L
operator|&&
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501034L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name?"
operator|+
literal|"createdtimestart=1425016501030"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678920"
argument_list|)
operator|&&
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678920L
operator|&&
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501034L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name?"
operator|+
literal|"createdtimestart=1425016500999&createdtimeend=1425016501035"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678919L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501000L
operator|)
operator|)
operator|||
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678920"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678920L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501034L
operator|)
operator|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name?"
operator|+
literal|"createdtimeend=1425016501030"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|)
operator|&&
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678919L
operator|&&
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501000L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowruns/user1/cluster1/flow_name?fields=metrics"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowRunEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowRunEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Id, run id or start time does not match."
argument_list|,
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678919"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678919L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501000L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
operator|)
operator|)
operator|||
operator|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"user1@flow_name/1002345678920"
argument_list|)
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getRunId
argument_list|()
operator|==
literal|1002345678920L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getStartTime
argument_list|()
operator|==
literal|1425016501034L
operator|)
operator|&&
operator|(
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|)
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlows ()
specifier|public
name|void
name|testGetFlows
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowActivityEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"@flow_name"
argument_list|)
operator|&&
name|entity
operator|.
name|getFlowRuns
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
operator|)
operator|||
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"@flow_name2"
argument_list|)
operator|&&
name|entity
operator|.
name|getFlowRuns
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// Query without specifying cluster ID.
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?limit=1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DateFormat
name|fmt
init|=
name|TimelineReaderWebServices
operator|.
name|DATE_FORMAT
operator|.
name|get
argument_list|()
decl_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange="
operator|+
name|fmt
operator|.
name|format
argument_list|(
name|dayTs
argument_list|)
operator|+
literal|"-"
operator|+
name|fmt
operator|.
name|format
argument_list|(
name|dayTs
operator|+
operator|(
literal|2
operator|*
literal|86400000L
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|FlowActivityEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"@flow_name"
argument_list|)
operator|&&
name|entity
operator|.
name|getFlowRuns
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
operator|)
operator|||
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"@flow_name2"
argument_list|)
operator|&&
name|entity
operator|.
name|getFlowRuns
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange="
operator|+
name|fmt
operator|.
name|format
argument_list|(
name|dayTs
operator|+
operator|(
literal|4
operator|*
literal|86400000L
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange=-"
operator|+
name|fmt
operator|.
name|format
argument_list|(
name|dayTs
operator|+
operator|(
literal|2
operator|*
literal|86400000L
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange="
operator|+
name|fmt
operator|.
name|format
argument_list|(
name|dayTs
operator|-
operator|(
literal|2
operator|*
literal|86400000L
operator|)
argument_list|)
operator|+
literal|"-"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange=20150711:20150714"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange=20150714-20150711"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange=2015071129-20150712"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster1?daterange=20150711-2015071243"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetApp ()
specifier|public
name|void
name|testGetApp
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/app/cluster1/application_1111111111_1111?"
operator|+
literal|"userid=user1&fields=ALL&flowid=flow_name&flowrunid=1002345678919"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application_1111111111_1111"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m1
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|,
literal|"HDFS_BYTES_READ"
argument_list|,
name|ts
operator|-
literal|100000
argument_list|,
literal|31L
argument_list|)
decl_stmt|;
name|m1
operator|.
name|addValue
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|57L
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m2
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|,
literal|"MAP_SLOT_MILLIS"
argument_list|,
name|ts
operator|-
literal|100000
argument_list|,
literal|2L
argument_list|)
decl_stmt|;
name|m2
operator|.
name|addValue
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|40L
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|entity
operator|.
name|getMetrics
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|verifyMetrics
argument_list|(
name|metric
argument_list|,
name|m1
argument_list|,
name|m2
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/app/application_1111111111_2222?userid=user1"
operator|+
literal|"&fields=metrics&flowid=flow_name&flowrunid=1002345678919"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entity
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application_1111111111_2222"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m3
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|,
literal|"MAP_SLOT_MILLIS"
argument_list|,
name|ts
operator|-
literal|100000
argument_list|,
literal|5L
argument_list|)
decl_stmt|;
name|m2
operator|.
name|addValue
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|101L
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|entity
operator|.
name|getMetrics
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|verifyMetrics
argument_list|(
name|metric
argument_list|,
name|m3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetAppWithoutFlowInfo ()
specifier|public
name|void
name|testGetAppWithoutFlowInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/app/cluster1/application_1111111111_1111?"
operator|+
literal|"fields=ALL"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application_1111111111_1111"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m1
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|,
literal|"HDFS_BYTES_READ"
argument_list|,
name|ts
operator|-
literal|100000
argument_list|,
literal|31L
argument_list|)
decl_stmt|;
name|m1
operator|.
name|addValue
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|57L
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m2
init|=
name|newMetric
argument_list|(
name|TimelineMetric
operator|.
name|Type
operator|.
name|TIME_SERIES
argument_list|,
literal|"MAP_SLOT_MILLIS"
argument_list|,
name|ts
operator|-
literal|100000
argument_list|,
literal|2L
argument_list|)
decl_stmt|;
name|m2
operator|.
name|addValue
argument_list|(
name|ts
operator|-
literal|80000
argument_list|,
literal|40L
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineMetric
name|metric
range|:
name|entity
operator|.
name|getMetrics
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
name|verifyMetrics
argument_list|(
name|metric
argument_list|,
name|m1
argument_list|,
name|m2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityWithoutFlowInfo ()
specifier|public
name|void
name|testGetEntityWithoutFlowInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/entity/cluster1/application_1111111111_1111/type1/entity1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"type1"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithoutFlowInfo ()
specifier|public
name|void
name|testGetEntitiesWithoutFlowInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/entities/cluster1/application_1111111111_1111/type1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"entity1"
argument_list|)
operator|||
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"entity2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowRunApps ()
specifier|public
name|void
name|testGetFlowRunApps
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrunapps/user1/cluster1/flow_name/1002345678919?"
operator|+
literal|"fields=ALL"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Unexpected app in result"
argument_list|,
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application_1111111111_1111"
argument_list|)
operator|&&
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
operator|)
operator|||
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application_1111111111_2222"
argument_list|)
operator|&&
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// Query without specifying cluster ID.
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrunapps/user1/flow_name/1002345678919"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrunapps/user1/flow_name/1002345678919?limit=1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowApps ()
specifier|public
name|void
name|testGetFlowApps
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/cluster1/flow_name?fields=ALL"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|entities
control|)
block|{
name|assertTrue
argument_list|(
literal|"Unexpected app in result"
argument_list|,
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application_1111111111_1111"
argument_list|)
operator|&&
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
operator|)
operator|||
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application_1111111111_2222"
argument_list|)
operator|&&
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|)
operator|||
operator|(
name|entity
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"application_1111111111_2224"
argument_list|)
operator|&&
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// Query without specifying cluster ID.
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/flow_name"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/flow_name?limit=1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowAppsFilters ()
specifier|public
name|void
name|testGetFlowAppsFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|String
name|entityType
init|=
name|TimelineEntityType
operator|.
name|YARN_APPLICATION
operator|.
name|toString
argument_list|()
decl_stmt|;
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/cluster1/flow_name?eventfilters="
operator|+
name|ApplicationMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Unexpected app in result"
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|entityType
argument_list|,
literal|"application_1111111111_1111"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/cluster1/flow_name?metricfilters="
operator|+
literal|"HDFS_BYTES_READ"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Unexpected app in result"
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|entityType
argument_list|,
literal|"application_1111111111_1111"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/cluster1/flow_name?conffilters="
operator|+
literal|"cfg1:value1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Unexpected app in result"
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|entityType
argument_list|,
literal|"application_1111111111_2222"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowRunNotPresent ()
specifier|public
name|void
name|testGetFlowRunNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrun/user1/cluster1/flow_name/1002345678929"
argument_list|)
decl_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|NOT_FOUND
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowsNotPresent ()
specifier|public
name|void
name|testGetFlowsNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flows/cluster2"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|FlowActivityEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetAppNotPresent ()
specifier|public
name|void
name|testGetAppNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/app/user1/cluster1/flow_name/1002345678919/"
operator|+
literal|"application_1111111111_1378"
argument_list|)
decl_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|NOT_FOUND
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowRunAppsNotPresent ()
specifier|public
name|void
name|testGetFlowRunAppsNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowrunapps/user1/cluster2/flow_name/1002345678919"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetFlowAppsNotPresent ()
specifier|public
name|void
name|testGetFlowAppsNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/flowapps/user1/cluster2/flow_name55"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|After
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

