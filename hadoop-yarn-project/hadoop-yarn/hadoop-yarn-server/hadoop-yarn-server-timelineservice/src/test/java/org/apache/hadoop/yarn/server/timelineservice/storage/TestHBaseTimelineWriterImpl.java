begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NavigableMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ResultScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|GenericObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit test HBaseTimelineWriterImpl  * YARN 3411  *  * @throws Exception  */
end_comment

begin_class
DECL|class|TestHBaseTimelineWriterImpl
specifier|public
class|class
name|TestHBaseTimelineWriterImpl
block|{
DECL|field|util
specifier|private
specifier|static
name|HBaseTestingUtility
name|util
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupBeforeClass ()
specifier|public
specifier|static
name|void
name|setupBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|util
operator|=
operator|new
name|HBaseTestingUtility
argument_list|()
expr_stmt|;
name|util
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
name|createSchema
argument_list|()
expr_stmt|;
block|}
DECL|method|createSchema ()
specifier|private
specifier|static
name|void
name|createSchema
parameter_list|()
throws|throws
name|IOException
block|{
name|byte
index|[]
index|[]
name|families
init|=
operator|new
name|byte
index|[
literal|3
index|]
index|[]
decl_stmt|;
name|families
index|[
literal|0
index|]
operator|=
name|EntityColumnFamily
operator|.
name|INFO
operator|.
name|getInBytes
argument_list|()
expr_stmt|;
name|families
index|[
literal|1
index|]
operator|=
name|EntityColumnFamily
operator|.
name|CONFIG
operator|.
name|getInBytes
argument_list|()
expr_stmt|;
name|families
index|[
literal|2
index|]
operator|=
name|EntityColumnFamily
operator|.
name|METRICS
operator|.
name|getInBytes
argument_list|()
expr_stmt|;
name|TimelineSchemaCreator
operator|.
name|createTimelineEntityTable
argument_list|(
name|util
operator|.
name|getHBaseAdmin
argument_list|()
argument_list|,
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWriteEntityToHBase ()
specifier|public
name|void
name|testWriteEntityToHBase
parameter_list|()
throws|throws
name|Exception
block|{
name|TimelineEntities
name|te
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|String
name|id
init|=
literal|"hello"
decl_stmt|;
name|String
name|type
init|=
literal|"world"
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Long
name|cTime
init|=
literal|1425016501000L
decl_stmt|;
name|Long
name|mTime
init|=
literal|1425026901000L
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|cTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setModifiedTime
argument_list|(
name|mTime
argument_list|)
expr_stmt|;
comment|// add the isRelatedToEntity info
name|String
name|key
init|=
literal|"task"
decl_stmt|;
name|String
name|value
init|=
literal|"is_related_to_entity_id_here"
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|isRelatedToSet
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|isRelatedToSet
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|isRelatedTo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|isRelatedTo
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|isRelatedToSet
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setIsRelatedToEntities
argument_list|(
name|isRelatedTo
argument_list|)
expr_stmt|;
comment|// add the relatesTo info
name|key
operator|=
literal|"container"
expr_stmt|;
name|value
operator|=
literal|"relates_to_entity_id_here"
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|relatesToSet
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|relatesToSet
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|value
operator|=
literal|"relates_to_entity_id_here_Second"
expr_stmt|;
name|relatesToSet
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|relatesTo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|relatesTo
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|relatesToSet
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setRelatesToEntities
argument_list|(
name|relatesTo
argument_list|)
expr_stmt|;
comment|// add some config entries
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|conf
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|conf
operator|.
name|put
argument_list|(
literal|"config_param1"
argument_list|,
literal|"value1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|put
argument_list|(
literal|"config_param2"
argument_list|,
literal|"value2"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addConfigs
argument_list|(
name|conf
argument_list|)
expr_stmt|;
comment|// add metrics
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|metrics
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|TimelineMetric
name|m1
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|m1
operator|.
name|setId
argument_list|(
literal|"MAP_SLOT_MILLIS"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|metricValues
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
argument_list|()
decl_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429741609000L
argument_list|,
literal|100000000
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429742609000L
argument_list|,
literal|200000000
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429743609000L
argument_list|,
literal|300000000
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429744609000L
argument_list|,
literal|400000000
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429745609000L
argument_list|,
literal|50000000000L
argument_list|)
expr_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
literal|1429746609000L
argument_list|,
literal|60000000000L
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|TIME_SERIES
argument_list|)
expr_stmt|;
name|m1
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addMetrics
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
name|te
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|HBaseTimelineWriterImpl
name|hbi
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Configuration
name|c1
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|hbi
operator|=
operator|new
name|HBaseTimelineWriterImpl
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|init
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|String
name|cluster
init|=
literal|"cluster1"
decl_stmt|;
name|String
name|user
init|=
literal|"user1"
decl_stmt|;
name|String
name|flow
init|=
literal|"some_flow_name"
decl_stmt|;
name|String
name|flowVersion
init|=
literal|"AB7822C10F1111"
decl_stmt|;
name|long
name|runid
init|=
literal|1002345678919L
decl_stmt|;
name|String
name|appName
init|=
literal|"some app name"
decl_stmt|;
name|hbi
operator|.
name|write
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|flowVersion
argument_list|,
name|runid
argument_list|,
name|appName
argument_list|,
name|te
argument_list|)
expr_stmt|;
name|hbi
operator|.
name|stop
argument_list|()
expr_stmt|;
comment|// scan the table and see that entity exists
name|Scan
name|s
init|=
operator|new
name|Scan
argument_list|()
decl_stmt|;
name|byte
index|[]
name|startRow
init|=
name|TimelineWriterUtils
operator|.
name|getRowKeyPrefix
argument_list|(
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|runid
argument_list|,
name|appName
argument_list|)
decl_stmt|;
name|s
operator|.
name|setStartRow
argument_list|(
name|startRow
argument_list|)
expr_stmt|;
name|s
operator|.
name|setMaxVersions
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|ResultScanner
name|scanner
init|=
literal|null
decl_stmt|;
name|TableName
name|entityTableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|TimelineEntitySchemaConstants
operator|.
name|DEFAULT_ENTITY_TABLE_NAME
argument_list|)
decl_stmt|;
name|Connection
name|conn
init|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|c1
argument_list|)
decl_stmt|;
name|Table
name|entityTable
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|entityTableName
argument_list|)
decl_stmt|;
name|int
name|rowCount
init|=
literal|0
decl_stmt|;
name|int
name|colCount
init|=
literal|0
decl_stmt|;
name|scanner
operator|=
name|entityTable
operator|.
name|getScanner
argument_list|(
name|s
argument_list|)
expr_stmt|;
for|for
control|(
name|Result
name|result
range|:
name|scanner
control|)
block|{
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|rowCount
operator|++
expr_stmt|;
name|colCount
operator|+=
name|result
operator|.
name|size
argument_list|()
expr_stmt|;
name|byte
index|[]
name|row1
init|=
name|result
operator|.
name|getRow
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|isRowKeyCorrect
argument_list|(
name|row1
argument_list|,
name|cluster
argument_list|,
name|user
argument_list|,
name|flow
argument_list|,
name|runid
argument_list|,
name|appName
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
comment|// check info column family
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|infoValues
init|=
name|result
operator|.
name|getFamilyMap
argument_list|(
name|EntityColumnFamily
operator|.
name|INFO
operator|.
name|getInBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|id1
init|=
name|TimelineWriterUtils
operator|.
name|getValueAsString
argument_list|(
name|EntityColumnDetails
operator|.
name|ID
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|infoValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|id
argument_list|,
name|id1
argument_list|)
expr_stmt|;
name|String
name|type1
init|=
name|TimelineWriterUtils
operator|.
name|getValueAsString
argument_list|(
name|EntityColumnDetails
operator|.
name|TYPE
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|infoValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|type
argument_list|,
name|type1
argument_list|)
expr_stmt|;
name|Long
name|cTime1
init|=
name|TimelineWriterUtils
operator|.
name|getValueAsLong
argument_list|(
name|EntityColumnDetails
operator|.
name|CREATED_TIME
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|infoValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|cTime1
argument_list|,
name|cTime
argument_list|)
expr_stmt|;
name|Long
name|mTime1
init|=
name|TimelineWriterUtils
operator|.
name|getValueAsLong
argument_list|(
name|EntityColumnDetails
operator|.
name|MODIFIED_TIME
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|infoValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mTime1
argument_list|,
name|mTime
argument_list|)
expr_stmt|;
name|checkRelatedEntities
argument_list|(
name|isRelatedTo
argument_list|,
name|infoValues
argument_list|,
name|EntityColumnDetails
operator|.
name|PREFIX_IS_RELATED_TO
operator|.
name|getInBytes
argument_list|()
argument_list|)
expr_stmt|;
name|checkRelatedEntities
argument_list|(
name|relatesTo
argument_list|,
name|infoValues
argument_list|,
name|EntityColumnDetails
operator|.
name|PREFIX_RELATES_TO
operator|.
name|getInBytes
argument_list|()
argument_list|)
expr_stmt|;
comment|// check config column family
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|configValuesResult
init|=
name|result
operator|.
name|getFamilyMap
argument_list|(
name|EntityColumnFamily
operator|.
name|CONFIG
operator|.
name|getInBytes
argument_list|()
argument_list|)
decl_stmt|;
name|checkConfigs
argument_list|(
name|configValuesResult
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|metricsResult
init|=
name|result
operator|.
name|getFamilyMap
argument_list|(
name|EntityColumnFamily
operator|.
name|METRICS
operator|.
name|getInBytes
argument_list|()
argument_list|)
decl_stmt|;
name|checkMetricsSizeAndKey
argument_list|(
name|metricsResult
argument_list|,
name|metrics
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Cell
argument_list|>
name|metricCells
init|=
name|result
operator|.
name|getColumnCells
argument_list|(
name|EntityColumnFamily
operator|.
name|METRICS
operator|.
name|getInBytes
argument_list|()
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|m1
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkMetricsTimeseries
argument_list|(
name|metricCells
argument_list|,
name|m1
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|colCount
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|hbi
operator|.
name|stop
argument_list|()
expr_stmt|;
name|hbi
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|checkMetricsTimeseries (List<Cell> metricCells, TimelineMetric m1)
specifier|private
name|void
name|checkMetricsTimeseries
parameter_list|(
name|List
argument_list|<
name|Cell
argument_list|>
name|metricCells
parameter_list|,
name|TimelineMetric
name|m1
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|timeseries
init|=
name|m1
operator|.
name|getValues
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|metricCells
operator|.
name|size
argument_list|()
argument_list|,
name|timeseries
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Cell
name|c1
range|:
name|metricCells
control|)
block|{
name|assertTrue
argument_list|(
name|timeseries
operator|.
name|containsKey
argument_list|(
name|c1
operator|.
name|getTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GenericObjectMapper
operator|.
name|read
argument_list|(
name|CellUtil
operator|.
name|cloneValue
argument_list|(
name|c1
argument_list|)
argument_list|)
argument_list|,
name|timeseries
operator|.
name|get
argument_list|(
name|c1
operator|.
name|getTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|checkMetricsSizeAndKey ( NavigableMap<byte[], byte[]> metricsResult, Set<TimelineMetric> metrics)
specifier|private
name|void
name|checkMetricsSizeAndKey
parameter_list|(
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|metricsResult
parameter_list|,
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|metrics
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|metrics
operator|.
name|size
argument_list|()
argument_list|,
name|metricsResult
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineMetric
name|m1
range|:
name|metrics
control|)
block|{
name|byte
index|[]
name|key
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|m1
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|metricsResult
operator|.
name|containsKey
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|checkConfigs (NavigableMap<byte[], byte[]> configValuesResult, Map<String, String> conf)
specifier|private
name|void
name|checkConfigs
parameter_list|(
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|configValuesResult
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|conf
operator|.
name|size
argument_list|()
argument_list|,
name|configValuesResult
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|columnName
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|conf
operator|.
name|keySet
argument_list|()
control|)
block|{
name|columnName
operator|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|configValuesResult
operator|.
name|containsKey
argument_list|(
name|columnName
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|value
init|=
name|configValuesResult
operator|.
name|get
argument_list|(
name|columnName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|GenericObjectMapper
operator|.
name|read
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|checkRelatedEntities (Map<String, Set<String>> isRelatedTo, NavigableMap<byte[], byte[]> infoValues, byte[] columnPrefix)
specifier|private
name|void
name|checkRelatedEntities
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|isRelatedTo
parameter_list|,
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|infoValues
parameter_list|,
name|byte
index|[]
name|columnPrefix
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|String
name|key
range|:
name|isRelatedTo
operator|.
name|keySet
argument_list|()
control|)
block|{
name|byte
index|[]
name|columnName
init|=
name|TimelineWriterUtils
operator|.
name|join
argument_list|(
name|TimelineEntitySchemaConstants
operator|.
name|ROW_KEY_SEPARATOR_BYTES
argument_list|,
name|columnPrefix
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|key
argument_list|)
argument_list|)
decl_stmt|;
name|byte
index|[]
name|value
init|=
name|infoValues
operator|.
name|get
argument_list|(
name|columnName
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|String
name|isRelatedToEntities
init|=
name|GenericObjectMapper
operator|.
name|read
argument_list|(
name|value
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|isRelatedToEntities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimelineWriterUtils
operator|.
name|getValueAsString
argument_list|(
name|TimelineEntitySchemaConstants
operator|.
name|ROW_KEY_SEPARATOR
argument_list|,
name|isRelatedTo
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
argument_list|,
name|isRelatedToEntities
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isRowKeyCorrect (byte[] rowKey, String cluster, String user, String flow, Long runid, String appName, TimelineEntity te)
specifier|private
name|boolean
name|isRowKeyCorrect
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|String
name|cluster
parameter_list|,
name|String
name|user
parameter_list|,
name|String
name|flow
parameter_list|,
name|Long
name|runid
parameter_list|,
name|String
name|appName
parameter_list|,
name|TimelineEntity
name|te
parameter_list|)
block|{
name|byte
index|[]
index|[]
name|rowKeyComponents
init|=
name|TimelineWriterUtils
operator|.
name|split
argument_list|(
name|rowKey
argument_list|,
name|TimelineEntitySchemaConstants
operator|.
name|ROW_KEY_SEPARATOR_BYTES
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|rowKeyComponents
operator|.
name|length
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|user
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|cluster
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|flow
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimelineWriterUtils
operator|.
name|encodeRunId
argument_list|(
name|runid
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toLong
argument_list|(
name|rowKeyComponents
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimelineWriterUtils
operator|.
name|cleanse
argument_list|(
name|appName
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|te
operator|.
name|getType
argument_list|()
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|5
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|te
operator|.
name|getId
argument_list|()
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|rowKeyComponents
index|[
literal|6
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|AfterClass
DECL|method|tearDownAfterClass ()
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|util
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

