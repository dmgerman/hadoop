begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_class
DECL|class|TestTimelineWriterImpl
specifier|public
class|class
name|TestTimelineWriterImpl
block|{
DECL|method|getStandardTestTimelineEntities (int listSize)
specifier|static
name|TimelineEntities
name|getStandardTestTimelineEntities
parameter_list|(
name|int
name|listSize
parameter_list|)
block|{
name|TimelineEntities
name|te
init|=
operator|new
name|TimelineEntities
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|listSize
condition|;
name|i
operator|++
control|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|String
name|id
init|=
literal|"hello"
operator|+
name|i
decl_stmt|;
name|String
name|type
init|=
literal|"testType"
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
literal|1425016501000L
operator|+
name|i
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setModifiedTime
argument_list|(
literal|1425016502000L
operator|+
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|entity
operator|.
name|addRelatesToEntity
argument_list|(
name|type
argument_list|,
literal|"hello"
operator|+
name|i
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelatesToEntity
argument_list|(
name|type
argument_list|,
literal|"hello"
operator|+
operator|(
name|i
operator|-
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|<
name|listSize
operator|-
literal|1
condition|)
block|{
name|entity
operator|.
name|addIsRelatedToEntity
argument_list|(
name|type
argument_list|,
literal|"hello"
operator|+
name|i
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addIsRelatedToEntity
argument_list|(
name|type
argument_list|,
literal|"hello"
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
name|int
name|category
init|=
name|i
operator|%
literal|4
decl_stmt|;
switch|switch
condition|(
name|category
condition|)
block|{
case|case
literal|0
case|:
name|entity
operator|.
name|addConfig
argument_list|(
literal|"config"
argument_list|,
literal|"config"
operator|+
name|i
argument_list|)
expr_stmt|;
comment|// Fall through deliberately
case|case
literal|1
case|:
name|entity
operator|.
name|addInfo
argument_list|(
literal|"info1"
argument_list|,
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
literal|"info2"
argument_list|,
literal|"helloworld"
argument_list|)
expr_stmt|;
comment|// Fall through deliberately
case|case
literal|2
case|:
break|break;
case|case
literal|3
case|:
name|entity
operator|.
name|addConfig
argument_list|(
literal|"config"
argument_list|,
literal|"config"
operator|+
name|i
argument_list|)
expr_stmt|;
name|TimelineEvent
name|event
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|event
operator|.
name|setId
argument_list|(
literal|"test event"
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTimestamp
argument_list|(
literal|1425016501100L
operator|+
name|i
argument_list|)
expr_stmt|;
name|event
operator|.
name|addInfo
argument_list|(
literal|"test_info"
argument_list|,
literal|"content for "
operator|+
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|addInfo
argument_list|(
literal|"test_info1"
argument_list|,
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|TimelineMetric
name|metric
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|metric
operator|.
name|setId
argument_list|(
literal|"HDFS_BYTES_READ"
argument_list|)
expr_stmt|;
name|metric
operator|.
name|addValue
argument_list|(
literal|1425016501100L
operator|+
name|i
argument_list|,
literal|8000
operator|+
name|i
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addMetric
argument_list|(
name|metric
argument_list|)
expr_stmt|;
break|break;
block|}
name|te
operator|.
name|addEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
return|return
name|te
return|;
block|}
block|}
end_class

end_unit

