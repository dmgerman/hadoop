begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.reader
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|UndeclaredThrowableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|JettyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineAbout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineHealth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|FileSystemTimelineReaderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TestFileSystemTimelineReaderImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|TimelineReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnJacksonJaxbJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|GenericType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|ClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|config
operator|.
name|DefaultClientConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|client
operator|.
name|urlconnection
operator|.
name|HttpURLConnectionFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|client
operator|.
name|urlconnection
operator|.
name|URLConnectionClientHandler
import|;
end_import

begin_class
DECL|class|TestTimelineReaderWebServices
specifier|public
class|class
name|TestTimelineReaderWebServices
block|{
DECL|field|ROOT_DIR
specifier|private
specifier|static
specifier|final
name|String
name|ROOT_DIR
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|TestTimelineReaderWebServices
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|field|serverPort
specifier|private
name|int
name|serverPort
decl_stmt|;
DECL|field|server
specifier|private
name|TimelineReaderServer
name|server
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|TestFileSystemTimelineReaderImpl
operator|.
name|initializeDataDirectory
argument_list|(
name|ROOT_DIR
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|tearDown ()
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|ROOT_DIR
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Configuration
name|config
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_READER_WEBAPP_ADDRESS
argument_list|,
literal|"localhost:0"
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CLUSTER_ID
argument_list|,
literal|"cluster1"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setClass
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_READER_CLASS
argument_list|,
name|FileSystemTimelineReaderImpl
operator|.
name|class
argument_list|,
name|TimelineReader
operator|.
name|class
argument_list|)
expr_stmt|;
name|config
operator|.
name|set
argument_list|(
name|FileSystemTimelineReaderImpl
operator|.
name|TIMELINE_SERVICE_STORAGE_DIR_ROOT
argument_list|,
name|ROOT_DIR
argument_list|)
expr_stmt|;
name|server
operator|=
operator|new
name|TimelineReaderServer
argument_list|()
expr_stmt|;
name|server
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|serverPort
operator|=
name|server
operator|.
name|getWebServerPort
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Web server failed to start"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|newEntity (String type, String id)
specifier|private
specifier|static
name|TimelineEntity
name|newEntity
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setIdentifier
argument_list|(
operator|new
name|TimelineEntity
operator|.
name|Identifier
argument_list|(
name|type
argument_list|,
name|id
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|verifyHttpResponse (Client client, URI uri, Status expectedStatus)
specifier|private
specifier|static
name|void
name|verifyHttpResponse
parameter_list|(
name|Client
name|client
parameter_list|,
name|URI
name|uri
parameter_list|,
name|Status
name|expectedStatus
parameter_list|)
block|{
name|ClientResponse
name|resp
init|=
name|client
operator|.
name|resource
argument_list|(
name|uri
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|resp
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|resp
operator|.
name|getStatusInfo
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|expectedStatus
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createClient ()
specifier|private
specifier|static
name|Client
name|createClient
parameter_list|()
block|{
name|ClientConfig
name|cfg
init|=
operator|new
name|DefaultClientConfig
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|getClasses
argument_list|()
operator|.
name|add
argument_list|(
name|YarnJacksonJaxbJsonProvider
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
operator|new
name|Client
argument_list|(
operator|new
name|URLConnectionClientHandler
argument_list|(
operator|new
name|DummyURLConnectionFactory
argument_list|()
argument_list|)
argument_list|,
name|cfg
argument_list|)
return|;
block|}
DECL|method|getResponse (Client client, URI uri)
specifier|private
specifier|static
name|ClientResponse
name|getResponse
parameter_list|(
name|Client
name|client
parameter_list|,
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|ClientResponse
name|resp
init|=
name|client
operator|.
name|resource
argument_list|(
name|uri
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|resp
operator|==
literal|null
operator|||
name|resp
operator|.
name|getStatusInfo
argument_list|()
operator|.
name|getStatusCode
argument_list|()
operator|!=
name|ClientResponse
operator|.
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
condition|)
block|{
name|String
name|msg
init|=
operator|new
name|String
argument_list|()
decl_stmt|;
if|if
condition|(
name|resp
operator|!=
literal|null
condition|)
block|{
name|msg
operator|=
name|String
operator|.
name|valueOf
argument_list|(
name|resp
operator|.
name|getStatusInfo
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Incorrect response from timeline reader. "
operator|+
literal|"Status="
operator|+
name|msg
argument_list|)
throw|;
block|}
return|return
name|resp
return|;
block|}
DECL|class|DummyURLConnectionFactory
specifier|private
specifier|static
class|class
name|DummyURLConnectionFactory
implements|implements
name|HttpURLConnectionFactory
block|{
annotation|@
name|Override
DECL|method|getHttpURLConnection (final URL url)
specifier|public
name|HttpURLConnection
name|getHttpURLConnection
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testAbout ()
specifier|public
name|void
name|testAbout
parameter_list|()
throws|throws
name|Exception
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
argument_list|)
decl_stmt|;
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineAbout
name|about
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineAbout
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|about
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Timeline Reader API"
argument_list|,
name|about
operator|.
name|getAbout
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityDefaultView ()
specifier|public
name|void
name|testGetEntityDefaultView
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app/id_1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"app"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|Long
operator|)
literal|1425016502000L
argument_list|,
name|entity
operator|.
name|getCreatedTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Default view i.e. when no fields are specified, entity contains only
comment|// entity id, entity type and created time.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityWithUserAndFlowInfo ()
specifier|public
name|void
name|testGetEntityWithUserAndFlowInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app/id_1?"
operator|+
literal|"userid=user1&flowname=flow1&flowrunid=1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"app"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|Long
operator|)
literal|1425016502000L
argument_list|,
name|entity
operator|.
name|getCreatedTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityCustomFields ()
specifier|public
name|void
name|testGetEntityCustomFields
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
comment|// Fields are case insensitive.
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app/id_1?"
operator|+
literal|"fields=CONFIGS,Metrics,info"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"app"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"UID should be present"
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|containsKey
argument_list|(
name|TimelineReaderUtils
operator|.
name|UID_KEY
argument_list|)
argument_list|)
expr_stmt|;
comment|// Includes UID.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// No events will be returned as events are not part of fields.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityAllFields ()
specifier|public
name|void
name|testGetEntityAllFields
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app/id_1?"
operator|+
literal|"fields=ALL"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"app"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"UID should be present"
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|containsKey
argument_list|(
name|TimelineReaderUtils
operator|.
name|UID_KEY
argument_list|)
argument_list|)
expr_stmt|;
comment|// Includes UID.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntityNotPresent ()
specifier|public
name|void
name|testGetEntityNotPresent
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app/id_10"
argument_list|)
decl_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|NOT_FOUND
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testQueryWithoutCluster ()
specifier|public
name|void
name|testQueryWithoutCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/apps/app1/entities/app/id_1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|resp
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"app"
argument_list|,
name|entity
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/apps/app1/entities/app"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntities ()
specifier|public
name|void
name|testGetEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entities id_1, id_2, id_3 and id_4 should have been"
operator|+
literal|" present in response"
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
operator|&&
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_2"
argument_list|)
argument_list|)
operator|&&
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_3"
argument_list|)
argument_list|)
operator|&&
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesWithLimit ()
specifier|public
name|void
name|testGetEntitiesWithLimit
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?limit=2"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Entities returned are based on most recent created time.
name|assertTrue
argument_list|(
literal|"Entities with id_1 and id_4 should have been present "
operator|+
literal|"in response based on entity created time."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
operator|&&
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?limit=3"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
comment|// Even though 2 entities out of 4 have same created time, one entity
comment|// is left out due to limit
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesBasedOnCreatedTime ()
specifier|public
name|void
name|testGetEntitiesBasedOnCreatedTime
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"createdtimestart=1425016502030&createdtimeend=1425016502060"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_4 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?createdtimeend"
operator|+
literal|"=1425016502010"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Entity with id_4 should not have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?createdtimestart="
operator|+
literal|"1425016502010"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_4 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByRelations ()
specifier|public
name|void
name|testGetEntitiesByRelations
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?relatesto="
operator|+
literal|"flow:flow1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?isrelatedto="
operator|+
literal|"type1:tid1_2,type2:tid2_1%60"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?isrelatedto="
operator|+
literal|"type1:tid1_1:tid1_2,type2:tid2_1%60"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByConfigFilters ()
specifier|public
name|void
name|testGetEntitiesByConfigFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"conffilters=config_1%20eq%20123%20AND%20config_3%20eq%20abc"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_3 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByInfoFilters ()
specifier|public
name|void
name|testGetEntitiesByInfoFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"infofilters=info2%20eq%203.5"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_3 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByMetricFilters ()
specifier|public
name|void
name|testGetEntitiesByMetricFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"metricfilters=metric3%20ge%200"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entities with id_1 and id_2 should have been present"
operator|+
literal|" in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_1"
argument_list|)
argument_list|)
operator|&&
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesByEventFilters ()
specifier|public
name|void
name|testGetEntitiesByEventFilters
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"eventfilters=event_2,event_4"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with id_3 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
literal|"app"
argument_list|,
literal|"id_3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetEntitiesNoMatch ()
specifier|public
name|void
name|testGetEntitiesNoMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?"
operator|+
literal|"metricfilters=metric7%20ge%200&isrelatedto=type1:tid1_1:tid1_2,"
operator|+
literal|"type2:tid2_1%60&relatesto=flow:flow1&eventfilters=event_2,event_4"
operator|+
literal|"&infofilters=info2%20eq%203.5&createdtimestart=1425016502030&"
operator|+
literal|"createdtimeend=1425016502060"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testInvalidValuesHandling ()
specifier|public
name|void
name|testInvalidValuesHandling
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/app?flowrunid=a23b"
argument_list|)
decl_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app/id_1?flowrunid=2ab15"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/timeline/"
operator|+
literal|"clusters/cluster1/apps/app1/entities/app?limit=#$561av"
argument_list|)
expr_stmt|;
name|verifyHttpResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|,
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetAppAttempts ()
specifier|public
name|void
name|testGetAppAttempts
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/"
operator|+
literal|"entities/YARN_APPLICATION_ATTEMPT"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|int
name|totalEntities
init|=
name|entities
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|totalEntities
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with app-attempt-2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|,
literal|"app-attempt-1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with app-attempt-2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|,
literal|"app-attempt-2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/appattempts"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{       }
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|int
name|retrievedEntity
init|=
name|entities
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|retrievedEntity
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with app-attempt-2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|,
literal|"app-attempt-1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with app-attempt-2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|,
literal|"app-attempt-2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|totalEntities
argument_list|,
name|retrievedEntity
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetAppAttempt ()
specifier|public
name|void
name|testGetAppAttempt
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/"
operator|+
literal|"YARN_APPLICATION_ATTEMPT/app-attempt-1"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entities1
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities1
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/appattempts/app-attempt-1"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entities2
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entities1
argument_list|,
name|entities2
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetContainers ()
specifier|public
name|void
name|testGetContainers
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
comment|// total 3 containers in a application.
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/entities/YARN_CONTAINER"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|int
name|totalEntities
init|=
name|entities
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|totalEntities
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_1_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_1_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_2_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_2_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_2_2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_2_2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// for app-attempt1 1 container has run
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/"
operator|+
literal|"appattempts/app-attempt-1/containers"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{       }
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|int
name|retrievedEntity
init|=
name|entities
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|retrievedEntity
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_1_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_1_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// for app-attempt2 2 containers has run
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/"
operator|+
literal|"appattempts/app-attempt-2/containers"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|entities
operator|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|Set
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|>
argument_list|()
block|{       }
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|retrievedEntity
operator|+=
name|entities
operator|.
name|size
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_2_1 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_2_1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Entity with container_2_2 should have been present in response."
argument_list|,
name|entities
operator|.
name|contains
argument_list|(
name|newEntity
argument_list|(
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|,
literal|"container_2_2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|totalEntities
argument_list|,
name|retrievedEntity
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetContainer ()
specifier|public
name|void
name|testGetContainer
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/"
operator|+
literal|"entities/YARN_CONTAINER/container_2_2"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entities1
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
operator|+
literal|"; "
operator|+
name|JettyUtils
operator|.
name|UTF_8
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities1
argument_list|)
expr_stmt|;
name|uri
operator|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/clusters/cluster1/apps/app1/containers/container_2_2"
argument_list|)
expr_stmt|;
name|resp
operator|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entities2
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|TimelineEntity
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|,
name|resp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entities2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entities1
argument_list|,
name|entities2
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testHealthCheck ()
specifier|public
name|void
name|testHealthCheck
parameter_list|()
throws|throws
name|Exception
block|{
name|Client
name|client
init|=
name|createClient
argument_list|()
decl_stmt|;
try|try
block|{
name|URI
name|uri
init|=
name|URI
operator|.
name|create
argument_list|(
literal|"http://localhost:"
operator|+
name|serverPort
operator|+
literal|"/ws/v2/"
operator|+
literal|"timeline/health"
argument_list|)
decl_stmt|;
name|ClientResponse
name|resp
init|=
name|getResponse
argument_list|(
name|client
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|TimelineHealth
name|timelineHealth
init|=
name|resp
operator|.
name|getEntity
argument_list|(
operator|new
name|GenericType
argument_list|<
name|TimelineHealth
argument_list|>
argument_list|()
block|{           }
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimelineHealth
operator|.
name|TimelineHealthStatus
operator|.
name|RUNNING
argument_list|,
name|timelineHealth
operator|.
name|getHealthStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|client
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

