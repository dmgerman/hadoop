begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.sharedcachemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|SCMUploaderProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderNotifyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|metrics
operator|.
name|SharedCacheUploaderMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|InMemorySCMStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|SCMStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|SharedCacheResourceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Basic unit tests for the NodeManger to SCM Protocol Service.  */
end_comment

begin_class
DECL|class|TestSharedCacheUploaderService
specifier|public
class|class
name|TestSharedCacheUploaderService
block|{
DECL|field|testDir
specifier|private
specifier|static
name|File
name|testDir
init|=
literal|null
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupTestDirs ()
specifier|public
specifier|static
name|void
name|setupTestDirs
parameter_list|()
throws|throws
name|IOException
block|{
name|testDir
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|TestSharedCacheUploaderService
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
name|testDir
operator|.
name|delete
argument_list|()
expr_stmt|;
name|testDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|testDir
operator|=
name|testDir
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|cleanupTestDirs ()
specifier|public
specifier|static
name|void
name|cleanupTestDirs
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|testDir
operator|!=
literal|null
condition|)
block|{
name|testDir
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
DECL|field|service
specifier|private
name|SharedCacheUploaderService
name|service
decl_stmt|;
DECL|field|proxy
specifier|private
name|SCMUploaderProtocol
name|proxy
decl_stmt|;
DECL|field|store
specifier|private
name|SCMStore
name|store
decl_stmt|;
DECL|field|recordFactory
specifier|private
specifier|final
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|startUp ()
specifier|public
name|void
name|startUp
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_STORE_CLASS
argument_list|,
name|InMemorySCMStore
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|SHARED_CACHE_ROOT
argument_list|,
name|testDir
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|AppChecker
name|appChecker
init|=
name|spy
argument_list|(
operator|new
name|DummyAppChecker
argument_list|()
argument_list|)
decl_stmt|;
name|store
operator|=
operator|new
name|InMemorySCMStore
argument_list|(
name|appChecker
argument_list|)
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
name|service
operator|=
operator|new
name|SharedCacheUploaderService
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|service
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|service
operator|.
name|start
argument_list|()
expr_stmt|;
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|scmAddress
init|=
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_UPLOADER_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_UPLOADER_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_UPLOADER_SERVER_PORT
argument_list|)
decl_stmt|;
name|proxy
operator|=
operator|(
name|SCMUploaderProtocol
operator|)
name|rpc
operator|.
name|getProxy
argument_list|(
name|SCMUploaderProtocol
operator|.
name|class
argument_list|,
name|scmAddress
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanUp ()
specifier|public
name|void
name|cleanUp
parameter_list|()
block|{
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|service
operator|!=
literal|null
condition|)
block|{
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|proxy
operator|!=
literal|null
condition|)
block|{
name|RPC
operator|.
name|stopProxy
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testNotify_noEntry ()
specifier|public
name|void
name|testNotify_noEntry
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|accepted
init|=
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getAcceptedUploads
argument_list|()
decl_stmt|;
name|SCMUploaderNotifyRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|SCMUploaderNotifyRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFilename
argument_list|(
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|proxy
operator|.
name|notify
argument_list|(
name|request
argument_list|)
operator|.
name|getAccepted
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|SharedCacheResourceReference
argument_list|>
name|set
init|=
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|set
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|set
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NM upload metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getAcceptedUploads
argument_list|()
operator|-
name|accepted
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotify_entryExists_differentName ()
specifier|public
name|void
name|testNotify_entryExists_differentName
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|rejected
init|=
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRejectUploads
argument_list|()
decl_stmt|;
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|SCMUploaderNotifyRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|SCMUploaderNotifyRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFilename
argument_list|(
literal|"foobar.jar"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|proxy
operator|.
name|notify
argument_list|(
name|request
argument_list|)
operator|.
name|getAccepted
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|SharedCacheResourceReference
argument_list|>
name|set
init|=
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|set
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|set
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NM upload metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getRejectUploads
argument_list|()
operator|-
name|rejected
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotify_entryExists_sameName ()
specifier|public
name|void
name|testNotify_entryExists_sameName
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|accepted
init|=
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getAcceptedUploads
argument_list|()
decl_stmt|;
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|SCMUploaderNotifyRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|SCMUploaderNotifyRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFilename
argument_list|(
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|proxy
operator|.
name|notify
argument_list|(
name|request
argument_list|)
operator|.
name|getAccepted
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|SharedCacheResourceReference
argument_list|>
name|set
init|=
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|set
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|set
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NM upload metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|SharedCacheUploaderMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getAcceptedUploads
argument_list|()
operator|-
name|accepted
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

