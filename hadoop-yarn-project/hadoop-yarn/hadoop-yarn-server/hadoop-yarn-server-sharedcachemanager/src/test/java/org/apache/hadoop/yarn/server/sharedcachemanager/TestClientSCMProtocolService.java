begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.sharedcachemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ClientSCMProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReleaseSharedCacheResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UseSharedCacheResourceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|metrics
operator|.
name|ClientSCMMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|InMemorySCMStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|SCMStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|SharedCacheResourceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Basic unit tests for the Client to SCM Protocol Service.  */
end_comment

begin_class
DECL|class|TestClientSCMProtocolService
specifier|public
class|class
name|TestClientSCMProtocolService
block|{
DECL|field|testDir
specifier|private
specifier|static
name|File
name|testDir
init|=
literal|null
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setupTestDirs ()
specifier|public
specifier|static
name|void
name|setupTestDirs
parameter_list|()
throws|throws
name|IOException
block|{
name|testDir
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|TestSharedCacheUploaderService
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
name|testDir
operator|.
name|delete
argument_list|()
expr_stmt|;
name|testDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|testDir
operator|=
name|testDir
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|cleanupTestDirs ()
specifier|public
specifier|static
name|void
name|cleanupTestDirs
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|testDir
operator|!=
literal|null
condition|)
block|{
name|testDir
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
DECL|field|service
specifier|private
name|ClientProtocolService
name|service
decl_stmt|;
DECL|field|clientSCMProxy
specifier|private
name|ClientSCMProtocol
name|clientSCMProxy
decl_stmt|;
DECL|field|store
specifier|private
name|SCMStore
name|store
decl_stmt|;
DECL|field|recordFactory
specifier|private
specifier|final
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|startUp ()
specifier|public
name|void
name|startUp
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_STORE_CLASS
argument_list|,
name|InMemorySCMStore
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|SHARED_CACHE_ROOT
argument_list|,
name|testDir
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|AppChecker
name|appChecker
init|=
name|spy
argument_list|(
operator|new
name|DummyAppChecker
argument_list|()
argument_list|)
decl_stmt|;
name|store
operator|=
operator|new
name|InMemorySCMStore
argument_list|(
name|appChecker
argument_list|)
expr_stmt|;
name|store
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|store
operator|.
name|start
argument_list|()
expr_stmt|;
name|service
operator|=
operator|new
name|ClientProtocolService
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|service
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|service
operator|.
name|start
argument_list|()
expr_stmt|;
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|scmAddress
init|=
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_CLIENT_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_CLIENT_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_CLIENT_SERVER_PORT
argument_list|)
decl_stmt|;
name|clientSCMProxy
operator|=
operator|(
name|ClientSCMProtocol
operator|)
name|rpc
operator|.
name|getProxy
argument_list|(
name|ClientSCMProtocol
operator|.
name|class
argument_list|,
name|scmAddress
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanUp ()
specifier|public
name|void
name|cleanUp
parameter_list|()
block|{
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|stop
argument_list|()
expr_stmt|;
name|store
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|service
operator|!=
literal|null
condition|)
block|{
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
name|service
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|clientSCMProxy
operator|!=
literal|null
condition|)
block|{
name|RPC
operator|.
name|stopProxy
argument_list|(
name|clientSCMProxy
argument_list|)
expr_stmt|;
name|clientSCMProxy
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUse_MissingEntry ()
specifier|public
name|void
name|testUse_MissingEntry
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|misses
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheMisses
argument_list|()
decl_stmt|;
name|UseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|UseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|clientSCMProxy
operator|.
name|use
argument_list|(
name|request
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheMisses
argument_list|()
operator|-
name|misses
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUse_ExistingEntry_NoAppIds ()
specifier|public
name|void
name|testUse_ExistingEntry_NoAppIds
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Pre-populate the SCM with one cache entry
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|long
name|hits
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
decl_stmt|;
name|UseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|UseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|2
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expecting default depth of 3 and under the shared cache root dir
name|String
name|expectedPath
init|=
name|testDir
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/k/e/y/key1/foo.jar"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedPath
argument_list|,
name|clientSCMProxy
operator|.
name|use
argument_list|(
name|request
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
operator|-
name|hits
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUse_ExistingEntry_OneId ()
specifier|public
name|void
name|testUse_ExistingEntry_OneId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Pre-populate the SCM with one cache entry
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResourceReference
argument_list|(
literal|"key1"
argument_list|,
operator|new
name|SharedCacheResourceReference
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|,
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|hits
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
decl_stmt|;
comment|// Add a new distinct appId
name|UseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|UseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|2
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expecting default depth of 3 under the shared cache root dir
name|String
name|expectedPath
init|=
name|testDir
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/k/e/y/key1/foo.jar"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedPath
argument_list|,
name|clientSCMProxy
operator|.
name|use
argument_list|(
name|request
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
operator|-
name|hits
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUse_ExistingEntry_DupId ()
specifier|public
name|void
name|testUse_ExistingEntry_DupId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Pre-populate the SCM with one cache entry
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|testUGI
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|store
operator|.
name|addResourceReference
argument_list|(
literal|"key1"
argument_list|,
operator|new
name|SharedCacheResourceReference
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|,
name|testUGI
operator|.
name|getShortUserName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|hits
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
decl_stmt|;
comment|// Add a new duplicate appId
name|UseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|UseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
comment|// Expecting default depth of 3 under the shared cache root dir
name|String
name|expectedPath
init|=
name|testDir
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/k/e/y/key1/foo.jar"
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedPath
argument_list|,
name|clientSCMProxy
operator|.
name|use
argument_list|(
name|request
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheHits
argument_list|()
operator|-
name|hits
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelease_ExistingEntry_NonExistantAppId ()
specifier|public
name|void
name|testRelease_ExistingEntry_NonExistantAppId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Pre-populate the SCM with one cache entry
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResourceReference
argument_list|(
literal|"key1"
argument_list|,
operator|new
name|SharedCacheResourceReference
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|,
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|releases
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
decl_stmt|;
name|ReleaseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ReleaseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|2
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|clientSCMProxy
operator|.
name|release
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics were updated when a release did not happen"
argument_list|,
literal|0
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
operator|-
name|releases
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelease_ExistingEntry_WithAppId ()
specifier|public
name|void
name|testRelease_ExistingEntry_WithAppId
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Pre-populate the SCM with one cache entry
name|store
operator|.
name|addResource
argument_list|(
literal|"key1"
argument_list|,
literal|"foo.jar"
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|testUGI
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|store
operator|.
name|addResourceReference
argument_list|(
literal|"key1"
argument_list|,
operator|new
name|SharedCacheResourceReference
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|,
name|testUGI
operator|.
name|getShortUserName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|releases
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
decl_stmt|;
name|ReleaseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ReleaseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|1
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|clientSCMProxy
operator|.
name|release
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics aren't updated."
argument_list|,
literal|1
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
operator|-
name|releases
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRelease_MissingEntry ()
specifier|public
name|void
name|testRelease_MissingEntry
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|releases
init|=
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
decl_stmt|;
name|ReleaseSharedCacheResourceRequest
name|request
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ReleaseSharedCacheResourceRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setResourceKey
argument_list|(
literal|"key2"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAppId
argument_list|(
name|createAppId
argument_list|(
literal|2
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|clientSCMProxy
operator|.
name|release
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|store
operator|.
name|getResourceReferences
argument_list|(
literal|"key2"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Client SCM metrics were updated when a release did not happen."
argument_list|,
literal|0
argument_list|,
name|ClientSCMMetrics
operator|.
name|getInstance
argument_list|()
operator|.
name|getCacheReleases
argument_list|()
operator|-
name|releases
argument_list|)
expr_stmt|;
block|}
DECL|method|createAppId (int id, long timestamp)
specifier|private
name|ApplicationId
name|createAppId
parameter_list|(
name|int
name|id
parameter_list|,
name|long
name|timestamp
parameter_list|)
block|{
return|return
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|timestamp
argument_list|,
name|id
argument_list|)
return|;
block|}
block|}
end_class

end_unit

