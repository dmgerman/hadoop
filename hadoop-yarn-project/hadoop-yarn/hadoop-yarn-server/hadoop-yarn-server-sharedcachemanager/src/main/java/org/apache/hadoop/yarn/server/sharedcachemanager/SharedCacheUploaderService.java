begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.sharedcachemanager
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|SCMUploaderProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderCanUploadRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderCanUploadResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderNotifyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SCMUploaderNotifyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|metrics
operator|.
name|SharedCacheUploaderMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
operator|.
name|SCMStore
import|;
end_import

begin_comment
comment|/**  * This service handles all rpc calls from the NodeManager uploader to the  * shared cache manager.  */
end_comment

begin_class
DECL|class|SharedCacheUploaderService
specifier|public
class|class
name|SharedCacheUploaderService
extends|extends
name|AbstractService
implements|implements
name|SCMUploaderProtocol
block|{
DECL|field|recordFactory
specifier|private
specifier|final
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|server
specifier|private
name|Server
name|server
decl_stmt|;
DECL|field|bindAddress
name|InetSocketAddress
name|bindAddress
decl_stmt|;
DECL|field|store
specifier|private
specifier|final
name|SCMStore
name|store
decl_stmt|;
DECL|field|metrics
specifier|private
name|SharedCacheUploaderMetrics
name|metrics
decl_stmt|;
DECL|method|SharedCacheUploaderService (SCMStore store)
specifier|public
name|SharedCacheUploaderService
parameter_list|(
name|SCMStore
name|store
parameter_list|)
block|{
name|super
argument_list|(
name|SharedCacheUploaderService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|store
operator|=
name|store
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|bindAddress
operator|=
name|getBindAddress
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|getBindAddress (Configuration conf)
name|InetSocketAddress
name|getBindAddress
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_UPLOADER_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_UPLOADER_SERVER_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_UPLOADER_SERVER_PORT
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|getConfig
argument_list|()
decl_stmt|;
name|this
operator|.
name|metrics
operator|=
name|SharedCacheUploaderMetrics
operator|.
name|initSingleton
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|this
operator|.
name|server
operator|=
name|rpc
operator|.
name|getServer
argument_list|(
name|SCMUploaderProtocol
operator|.
name|class
argument_list|,
name|this
argument_list|,
name|bindAddress
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
comment|// Secret manager null for now (security not supported)
name|conf
operator|.
name|getInt
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_UPLOADER_SERVER_THREAD_COUNT
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_UPLOADER_SERVER_THREAD_COUNT
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO (YARN-2774): Enable service authorization
name|this
operator|.
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|bindAddress
operator|=
name|conf
operator|.
name|updateConnectAddr
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_UPLOADER_SERVER_ADDRESS
argument_list|,
name|server
operator|.
name|getListenerAddress
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceStart
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|server
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
name|this
operator|.
name|server
operator|=
literal|null
expr_stmt|;
block|}
name|super
operator|.
name|serviceStop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|notify (SCMUploaderNotifyRequest request)
specifier|public
name|SCMUploaderNotifyResponse
name|notify
parameter_list|(
name|SCMUploaderNotifyRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|SCMUploaderNotifyResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|SCMUploaderNotifyResponse
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// TODO (YARN-2774): proper security/authorization needs to be implemented
name|String
name|filename
init|=
name|store
operator|.
name|addResource
argument_list|(
name|request
operator|.
name|getResourceKey
argument_list|()
argument_list|,
name|request
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|accepted
init|=
name|filename
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|accepted
condition|)
block|{
name|this
operator|.
name|metrics
operator|.
name|incAcceptedUploads
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|metrics
operator|.
name|incRejectedUploads
argument_list|()
expr_stmt|;
block|}
name|response
operator|.
name|setAccepted
argument_list|(
name|accepted
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|canUpload ( SCMUploaderCanUploadRequest request)
specifier|public
name|SCMUploaderCanUploadResponse
name|canUpload
parameter_list|(
name|SCMUploaderCanUploadRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
comment|// TODO (YARN-2781): we may want to have a more flexible policy of
comment|// instructing the node manager to upload only if it meets a certain
comment|// criteria
comment|// until then we return true for now
name|SCMUploaderCanUploadResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|SCMUploaderCanUploadResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setUploadable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

