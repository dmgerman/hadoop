begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.sharedcachemanager.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|SharedCacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApps
import|;
end_import

begin_comment
comment|/**  * A very simple web interface for the metrics reported by  * {@link org.apache.hadoop.yarn.server.sharedcachemanager.SharedCacheManager}  * TODO: Security for web ui (See YARN-2774)  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|SCMWebServer
specifier|public
class|class
name|SCMWebServer
extends|extends
name|AbstractService
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SCMWebServer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|scm
specifier|private
specifier|final
name|SharedCacheManager
name|scm
decl_stmt|;
DECL|field|webApp
specifier|private
name|WebApp
name|webApp
decl_stmt|;
DECL|field|bindAddress
specifier|private
name|String
name|bindAddress
decl_stmt|;
DECL|method|SCMWebServer (SharedCacheManager scm)
specifier|public
name|SCMWebServer
parameter_list|(
name|SharedCacheManager
name|scm
parameter_list|)
block|{
name|super
argument_list|(
name|SCMWebServer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|scm
operator|=
name|scm
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|bindAddress
operator|=
name|getBindAddress
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|getBindAddress (Configuration conf)
specifier|private
name|String
name|getBindAddress
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|SCM_WEBAPP_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_SCM_WEBAPP_ADDRESS
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|SCMWebApp
name|scmWebApp
init|=
operator|new
name|SCMWebApp
argument_list|(
name|scm
argument_list|)
decl_stmt|;
name|this
operator|.
name|webApp
operator|=
name|WebApps
operator|.
name|$for
argument_list|(
literal|"sharedcache"
argument_list|)
operator|.
name|at
argument_list|(
name|bindAddress
argument_list|)
operator|.
name|start
argument_list|(
name|scmWebApp
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Instantiated "
operator|+
name|SCMWebApp
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|" at "
operator|+
name|bindAddress
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|webApp
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|webApp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|SCMWebApp
specifier|private
class|class
name|SCMWebApp
extends|extends
name|WebApp
block|{
DECL|field|scm
specifier|private
specifier|final
name|SharedCacheManager
name|scm
decl_stmt|;
DECL|method|SCMWebApp (SharedCacheManager scm)
specifier|public
name|SCMWebApp
parameter_list|(
name|SharedCacheManager
name|scm
parameter_list|)
block|{
name|this
operator|.
name|scm
operator|=
name|scm
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
if|if
condition|(
name|scm
operator|!=
literal|null
condition|)
block|{
name|bind
argument_list|(
name|SharedCacheManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|scm
argument_list|)
expr_stmt|;
block|}
name|route
argument_list|(
literal|"/"
argument_list|,
name|SCMController
operator|.
name|class
argument_list|,
literal|"overview"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

