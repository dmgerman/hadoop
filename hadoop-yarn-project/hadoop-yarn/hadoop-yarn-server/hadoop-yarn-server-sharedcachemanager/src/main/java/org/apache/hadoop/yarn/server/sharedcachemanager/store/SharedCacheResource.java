begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.sharedcachemanager.store
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|sharedcachemanager
operator|.
name|store
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Evolving
import|;
end_import

begin_comment
comment|/**  * Class that encapsulates the cache resource. The instances are not thread  * safe. Any operation that uses the resource must use thread-safe mechanisms to  * ensure safe access with the only exception of the filename.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Evolving
DECL|class|SharedCacheResource
class|class
name|SharedCacheResource
block|{
DECL|field|accessTime
specifier|private
name|long
name|accessTime
decl_stmt|;
DECL|field|refs
specifier|private
specifier|final
name|Set
argument_list|<
name|SharedCacheResourceReference
argument_list|>
name|refs
decl_stmt|;
DECL|field|fileName
specifier|private
specifier|final
name|String
name|fileName
decl_stmt|;
DECL|method|SharedCacheResource (String fileName)
name|SharedCacheResource
parameter_list|(
name|String
name|fileName
parameter_list|)
block|{
name|this
operator|.
name|accessTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|this
operator|.
name|refs
operator|=
operator|new
name|HashSet
argument_list|<
name|SharedCacheResourceReference
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|fileName
operator|=
name|fileName
expr_stmt|;
block|}
DECL|method|getAccessTime ()
name|long
name|getAccessTime
parameter_list|()
block|{
return|return
name|accessTime
return|;
block|}
DECL|method|updateAccessTime ()
name|void
name|updateAccessTime
parameter_list|()
block|{
name|accessTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
DECL|method|getFileName ()
name|String
name|getFileName
parameter_list|()
block|{
return|return
name|this
operator|.
name|fileName
return|;
block|}
DECL|method|getResourceReferences ()
name|Set
argument_list|<
name|SharedCacheResourceReference
argument_list|>
name|getResourceReferences
parameter_list|()
block|{
return|return
name|this
operator|.
name|refs
return|;
block|}
DECL|method|addReference (SharedCacheResourceReference ref)
name|boolean
name|addReference
parameter_list|(
name|SharedCacheResourceReference
name|ref
parameter_list|)
block|{
return|return
name|this
operator|.
name|refs
operator|.
name|add
argument_list|(
name|ref
argument_list|)
return|;
block|}
block|}
end_class

end_unit

