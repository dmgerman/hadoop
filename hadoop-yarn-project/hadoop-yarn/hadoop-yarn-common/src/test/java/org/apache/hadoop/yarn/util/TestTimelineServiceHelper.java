begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestTimelineServiceHelper
specifier|public
class|class
name|TestTimelineServiceHelper
block|{
annotation|@
name|Test
DECL|method|testMapCastToHashMap ()
specifier|public
name|void
name|testMapCastToHashMap
parameter_list|()
block|{
comment|// Test null map be casted to null
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|nullMap
init|=
literal|null
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|nullMap
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test empty hashmap be casted to a empty hashmap
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|emptyHashMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|emptyHashMap
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Test empty non-hashmap be casted to a empty hashmap
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|emptyTreeMap
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|emptyTreeMap
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Test non-empty hashmap be casted to hashmap correctly
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|firstHashMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|key
init|=
literal|"KEY"
decl_stmt|;
name|String
name|value
init|=
literal|"VALUE"
decl_stmt|;
name|firstHashMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|firstHashMap
argument_list|)
argument_list|,
name|firstHashMap
argument_list|)
expr_stmt|;
comment|// Test non-empty non-hashmap is casted correctly.
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|firstTreeMap
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|firstTreeMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|alternateHashMap
init|=
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|firstTreeMap
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|firstTreeMap
operator|.
name|size
argument_list|()
argument_list|,
name|alternateHashMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|alternateHashMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
comment|// Test complicated hashmap be casted correctly
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|complicatedHashMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|hashSet
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hashSet
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|complicatedHashMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|hashSet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|complicatedHashMap
argument_list|)
argument_list|,
name|complicatedHashMap
argument_list|)
expr_stmt|;
comment|// Test complicated non-hashmap get casted correctly
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|complicatedTreeMap
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|complicatedTreeMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|hashSet
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TimelineServiceHelper
operator|.
name|mapCastToHashMap
argument_list|(
name|complicatedTreeMap
argument_list|)
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|hashSet
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

