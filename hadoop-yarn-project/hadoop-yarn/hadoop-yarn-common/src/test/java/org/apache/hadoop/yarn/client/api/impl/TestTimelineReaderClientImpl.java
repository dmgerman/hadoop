begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineReaderClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Test class for Timeline Reader Client.  */
end_comment

begin_class
DECL|class|TestTimelineReaderClientImpl
specifier|public
class|class
name|TestTimelineReaderClientImpl
block|{
DECL|field|client
specifier|private
name|TimelineReaderClient
name|client
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|client
operator|=
operator|new
name|MockTimelineReaderClient
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetApplication ()
specifier|public
name|void
name|testGetApplication
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|fromString
argument_list|(
literal|"application_1234_0001"
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|client
operator|.
name|getApplicationEntity
argument_list|(
name|applicationId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mockApp1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getApplicationAttemptEntity ()
specifier|public
name|void
name|getApplicationAttemptEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationAttemptId
name|attemptId
init|=
name|ApplicationAttemptId
operator|.
name|fromString
argument_list|(
literal|"appattempt_1234_0001_000001"
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|client
operator|.
name|getApplicationAttemptEntity
argument_list|(
name|attemptId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mockAppAttempt1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getApplicationAttemptEntities ()
specifier|public
name|void
name|getApplicationAttemptEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|fromString
argument_list|(
literal|"application_1234_0001"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|client
operator|.
name|getApplicationAttemptEntities
argument_list|(
name|applicationId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mockAppAttempt2"
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainer ()
specifier|public
name|void
name|testGetContainer
parameter_list|()
throws|throws
name|Exception
block|{
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|fromString
argument_list|(
literal|"container_1234_0001_01_000001"
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|client
operator|.
name|getContainerEntity
argument_list|(
name|containerId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mockContainer1"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainers ()
specifier|public
name|void
name|testGetContainers
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|fromString
argument_list|(
literal|"application_1234_0001"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|client
operator|.
name|getContainerEntities
argument_list|(
name|appId
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mockContainer2"
argument_list|,
name|entities
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|createTimelineEntity (String id)
specifier|private
specifier|static
name|TimelineEntity
name|createTimelineEntity
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createTimelineEntities (String... ids)
specifier|private
specifier|static
name|TimelineEntity
index|[]
name|createTimelineEntities
parameter_list|(
name|String
modifier|...
name|ids
parameter_list|)
block|{
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|entities
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
return|return
name|entities
operator|.
name|toArray
argument_list|(
operator|new
name|TimelineEntity
index|[
name|entities
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
DECL|class|MockTimelineReaderClient
specifier|private
class|class
name|MockTimelineReaderClient
extends|extends
name|TimelineReaderClientImpl
block|{
annotation|@
name|Override
DECL|method|doGetUri (URI base, String path, MultivaluedMap<String, String> params)
specifier|protected
name|ClientResponse
name|doGetUri
parameter_list|(
name|URI
name|base
parameter_list|,
name|String
name|path
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|ClientResponse
name|mockClientResponse
init|=
name|mock
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|contains
argument_list|(
name|YARN_CONTAINER
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntity
argument_list|(
literal|"mockContainer1"
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntities
argument_list|(
literal|"mockContainer1"
argument_list|,
literal|"mockContainer2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|path
operator|.
name|contains
argument_list|(
name|YARN_APPLICATION_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntity
argument_list|(
literal|"mockAppAttempt1"
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntities
argument_list|(
literal|"mockAppAttempt1"
argument_list|,
literal|"mockAppAttempt2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntity
argument_list|(
literal|"mockApp1"
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockClientResponse
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createTimelineEntities
argument_list|(
literal|"mockApp1"
argument_list|,
literal|"mockApp2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|mockClientResponse
return|;
block|}
block|}
block|}
end_class

end_unit

