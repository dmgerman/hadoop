begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.util.resource
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|LocalConfigurationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ResourceTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|IntStream
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_comment
comment|/**  * This class can generate an XML configuration file of custom resource types.  * See createInitial ResourceTypes for the default values. All custom resource  * type is prefixed with CUSTOM_RESOURCE_PREFIX. Please use the  * getConfigurationInputStream method to get an InputStream of the XML.  *  */
end_comment

begin_class
DECL|class|CustomResourceTypesConfigurationProvider
specifier|public
class|class
name|CustomResourceTypesConfigurationProvider
extends|extends
name|LocalConfigurationProvider
block|{
annotation|@
name|Override
DECL|method|getConfigurationInputStream (Configuration bootstrapConf, String name)
specifier|public
name|InputStream
name|getConfigurationInputStream
parameter_list|(
name|Configuration
name|bootstrapConf
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
if|if
condition|(
name|YarnConfiguration
operator|.
name|RESOURCE_TYPES_CONFIGURATION_FILE
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|customResourceTypes
operator|.
name|getXml
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|getConfigurationInputStream
argument_list|(
name|bootstrapConf
argument_list|,
name|name
argument_list|)
return|;
block|}
block|}
DECL|field|CUSTOM_RESOURCE_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|CUSTOM_RESOURCE_PREFIX
init|=
literal|"custom-resource-"
decl_stmt|;
DECL|field|UNIT_KILO
specifier|private
specifier|static
specifier|final
name|String
name|UNIT_KILO
init|=
literal|"k"
decl_stmt|;
DECL|field|customResourceTypes
specifier|private
specifier|static
name|CustomResourceTypes
name|customResourceTypes
init|=
name|createCustomResourceTypes
argument_list|(
literal|2
argument_list|,
name|UNIT_KILO
argument_list|)
decl_stmt|;
DECL|method|initResourceTypes (Map<String, String> resourcesWithUnits)
specifier|public
specifier|static
name|void
name|initResourceTypes
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resourcesWithUnits
parameter_list|)
block|{
name|CustomResourceTypesConfigurationProvider
operator|.
name|setResourceTypes
argument_list|(
name|resourcesWithUnits
argument_list|)
expr_stmt|;
name|initResourceTypesInternal
argument_list|()
expr_stmt|;
block|}
DECL|method|initResourceTypes (int count, String units)
specifier|public
specifier|static
name|void
name|initResourceTypes
parameter_list|(
name|int
name|count
parameter_list|,
name|String
name|units
parameter_list|)
block|{
name|CustomResourceTypesConfigurationProvider
operator|.
name|setResourceTypes
argument_list|(
name|count
argument_list|,
name|units
argument_list|)
expr_stmt|;
name|initResourceTypesInternal
argument_list|()
expr_stmt|;
block|}
DECL|method|initResourceTypes (String... resourceTypes)
specifier|public
specifier|static
name|void
name|initResourceTypes
parameter_list|(
name|String
modifier|...
name|resourceTypes
parameter_list|)
block|{
comment|// Initialize resource map
name|Map
argument_list|<
name|String
argument_list|,
name|ResourceInformation
argument_list|>
name|riMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// Initialize mandatory resources
name|riMap
operator|.
name|put
argument_list|(
name|ResourceInformation
operator|.
name|MEMORY_URI
argument_list|,
name|ResourceInformation
operator|.
name|MEMORY_MB
argument_list|)
expr_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|ResourceInformation
operator|.
name|VCORES_URI
argument_list|,
name|ResourceInformation
operator|.
name|VCORES
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|newResource
range|:
name|resourceTypes
control|)
block|{
name|riMap
operator|.
name|put
argument_list|(
name|newResource
argument_list|,
name|ResourceInformation
operator|.
name|newInstance
argument_list|(
name|newResource
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|,
name|ResourceTypes
operator|.
name|COUNTABLE
argument_list|,
literal|0
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ResourceUtils
operator|.
name|initializeResourcesFromResourceInformationMap
argument_list|(
name|riMap
argument_list|)
expr_stmt|;
block|}
DECL|method|initResourceTypesInternal ()
specifier|private
specifier|static
name|void
name|initResourceTypesInternal
parameter_list|()
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CONFIGURATION_PROVIDER_CLASS
argument_list|,
name|CustomResourceTypesConfigurationProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ResourceUtils
operator|.
name|resetResourceTypes
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
block|}
DECL|method|createCustomResourceTypes ( int count, String units)
specifier|private
specifier|static
name|CustomResourceTypes
name|createCustomResourceTypes
parameter_list|(
name|int
name|count
parameter_list|,
name|String
name|units
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|resourceNames
init|=
name|generateResourceTypeNames
argument_list|(
name|count
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resourcesWithUnits
init|=
name|resourceNames
operator|.
name|stream
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toMap
argument_list|(
name|e
lambda|->
name|e
argument_list|,
name|e
lambda|->
name|units
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|createCustomResourceTypes
argument_list|(
name|resourcesWithUnits
argument_list|)
return|;
block|}
DECL|method|createCustomResourceTypes ( Map<String, String> resourcesWithUnits)
specifier|private
specifier|static
name|CustomResourceTypes
name|createCustomResourceTypes
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resourcesWithUnits
parameter_list|)
block|{
name|int
name|count
init|=
name|resourcesWithUnits
operator|.
name|size
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|resourceNames
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|resourcesWithUnits
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|resourceUnitXmlElements
init|=
name|IntStream
operator|.
name|range
argument_list|(
literal|0
argument_list|,
name|count
argument_list|)
operator|.
name|boxed
argument_list|()
operator|.
name|map
argument_list|(
name|i
lambda|->
name|getResourceUnitsXml
argument_list|(
name|resourceNames
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|resourcesWithUnits
operator|.
name|get
argument_list|(
name|resourceNames
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"<configuration>\n"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getResourceTypesXml
argument_list|(
name|resourceNames
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|resourceUnitXml
range|:
name|resourceUnitXmlElements
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|resourceUnitXml
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"</configuration>"
argument_list|)
expr_stmt|;
return|return
operator|new
name|CustomResourceTypes
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|,
name|count
argument_list|)
return|;
block|}
DECL|method|generateResourceTypeNames (int count)
specifier|private
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|generateResourceTypeNames
parameter_list|(
name|int
name|count
parameter_list|)
block|{
return|return
name|IntStream
operator|.
name|range
argument_list|(
literal|0
argument_list|,
name|count
argument_list|)
operator|.
name|boxed
argument_list|()
operator|.
name|map
argument_list|(
name|i
lambda|->
name|CUSTOM_RESOURCE_PREFIX
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getResourceUnitsXml (String resource, String units)
specifier|private
specifier|static
name|String
name|getResourceUnitsXml
parameter_list|(
name|String
name|resource
parameter_list|,
name|String
name|units
parameter_list|)
block|{
return|return
literal|"<property>\n"
operator|+
literal|"<name>yarn.resource-types."
operator|+
name|resource
operator|+
literal|".units</name>\n"
operator|+
literal|"<value>"
operator|+
name|units
operator|+
literal|"</value>\n"
operator|+
literal|"</property>\n"
return|;
block|}
DECL|method|getResourceTypesXml (List<String> resources)
specifier|private
specifier|static
name|String
name|getResourceTypesXml
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|resources
parameter_list|)
block|{
specifier|final
name|String
name|resourceTypes
init|=
name|String
operator|.
name|join
argument_list|(
literal|","
argument_list|,
name|resources
argument_list|)
decl_stmt|;
return|return
literal|"<property>\n"
operator|+
literal|"<name>yarn.resource-types</name>\n"
operator|+
literal|"<value>"
operator|+
name|resourceTypes
operator|+
literal|"</value>\n"
operator|+
literal|"</property>\n"
return|;
block|}
DECL|method|reset ()
specifier|public
specifier|static
name|void
name|reset
parameter_list|()
block|{
name|customResourceTypes
operator|=
name|createCustomResourceTypes
argument_list|(
literal|2
argument_list|,
name|UNIT_KILO
argument_list|)
expr_stmt|;
block|}
DECL|method|setResourceTypes (int count, String units)
specifier|public
specifier|static
name|void
name|setResourceTypes
parameter_list|(
name|int
name|count
parameter_list|,
name|String
name|units
parameter_list|)
block|{
name|customResourceTypes
operator|=
name|createCustomResourceTypes
argument_list|(
name|count
argument_list|,
name|units
argument_list|)
expr_stmt|;
block|}
DECL|method|setResourceTypes (Map<String, String> resourcesWithUnits)
specifier|public
specifier|static
name|void
name|setResourceTypes
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resourcesWithUnits
parameter_list|)
block|{
name|customResourceTypes
operator|=
name|createCustomResourceTypes
argument_list|(
name|resourcesWithUnits
argument_list|)
expr_stmt|;
block|}
DECL|method|getCustomResourceTypes ()
specifier|public
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|getCustomResourceTypes
parameter_list|()
block|{
return|return
name|generateResourceTypeNames
argument_list|(
name|customResourceTypes
operator|.
name|getCount
argument_list|()
argument_list|)
return|;
block|}
DECL|class|CustomResourceTypes
specifier|private
specifier|static
class|class
name|CustomResourceTypes
block|{
DECL|field|count
specifier|private
name|int
name|count
decl_stmt|;
DECL|field|xml
specifier|private
name|String
name|xml
decl_stmt|;
DECL|method|CustomResourceTypes (String xml, int count)
name|CustomResourceTypes
parameter_list|(
name|String
name|xml
parameter_list|,
name|int
name|count
parameter_list|)
block|{
name|this
operator|.
name|xml
operator|=
name|xml
expr_stmt|;
name|this
operator|.
name|count
operator|=
name|count
expr_stmt|;
block|}
DECL|method|getCount ()
specifier|public
name|int
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
DECL|method|getXml ()
specifier|public
name|String
name|getXml
parameter_list|()
block|{
return|return
name|xml
return|;
block|}
block|}
block|}
end_class

end_unit

