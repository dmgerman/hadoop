begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|reset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntityGroupId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_class
DECL|class|TestTimelineClientForATS1_5
specifier|public
class|class
name|TestTimelineClientForATS1_5
block|{
DECL|field|LOG
specifier|protected
specifier|static
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestTimelineClientForATS1_5
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|client
specifier|private
name|TimelineClientImpl
name|client
decl_stmt|;
DECL|field|localFS
specifier|private
specifier|static
name|FileContext
name|localFS
decl_stmt|;
DECL|field|localActiveDir
specifier|private
specifier|static
name|File
name|localActiveDir
decl_stmt|;
DECL|field|spyTimelineWriter
specifier|private
name|TimelineWriter
name|spyTimelineWriter
decl_stmt|;
DECL|field|authUgi
specifier|private
name|UserGroupInformation
name|authUgi
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|localFS
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|localActiveDir
operator|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"-activeDir"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
expr_stmt|;
name|localFS
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|localActiveDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Created activeDir in "
operator|+
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|authUgi
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
expr_stmt|;
block|}
DECL|method|getConfigurations ()
specifier|private
name|YarnConfiguration
name|getConfigurations
parameter_list|()
block|{
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|1.5f
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENTITYGROUP_FS_STORE_ACTIVE_DIR
argument_list|,
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENTITYGROUP_FS_STORE_SUMMARY_ENTITY_TYPES
argument_list|,
literal|"summary_type"
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|localFS
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPostEntities ()
specifier|public
name|void
name|testPostEntities
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|=
name|createTimelineClient
argument_list|(
name|getConfigurations
argument_list|()
argument_list|)
expr_stmt|;
name|verifyForPostEntities
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPostEntitiesToKeepUnderUserDir ()
specifier|public
name|void
name|testPostEntitiesToKeepUnderUserDir
parameter_list|()
throws|throws
name|Exception
block|{
name|YarnConfiguration
name|conf
init|=
name|getConfigurations
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENTITYGROUP_FS_STORE_WITH_USER_DIR
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
operator|=
name|createTimelineClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|verifyForPostEntities
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyForPostEntities (boolean storeInsideUserDir)
specifier|private
name|void
name|verifyForPostEntities
parameter_list|(
name|boolean
name|storeInsideUserDir
parameter_list|)
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TimelineEntityGroupId
name|groupId
init|=
name|TimelineEntityGroupId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
name|TimelineEntityGroupId
name|groupId2
init|=
name|TimelineEntityGroupId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|"2"
argument_list|)
decl_stmt|;
comment|// Create two entities, includes an entity type and a summary type
name|TimelineEntity
index|[]
name|entities
init|=
operator|new
name|TimelineEntity
index|[
literal|2
index|]
decl_stmt|;
name|entities
index|[
literal|0
index|]
operator|=
name|generateEntity
argument_list|(
literal|"entity_type"
argument_list|)
expr_stmt|;
name|entities
index|[
literal|1
index|]
operator|=
name|generateEntity
argument_list|(
literal|"summary_type"
argument_list|)
expr_stmt|;
try|try
block|{
comment|// if attemptid is null, fall back to the original putEntities call, and
comment|// save the entity
comment|// into configured levelDB store
name|client
operator|.
name|putEntities
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|entities
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|spyTimelineWriter
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|putEntities
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|spyTimelineWriter
argument_list|)
expr_stmt|;
comment|// if the attemptId is specified, but groupId is given as null, it would
comment|// fall back to the original putEntities call if we have the entity type.
comment|// the entity which is summary type would be written into FS
name|ApplicationAttemptId
name|attemptId1
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|putEntities
argument_list|(
name|attemptId1
argument_list|,
literal|null
argument_list|,
name|entities
argument_list|)
expr_stmt|;
name|TimelineEntity
index|[]
name|entityTDB
init|=
operator|new
name|TimelineEntity
index|[
literal|1
index|]
decl_stmt|;
name|entityTDB
index|[
literal|0
index|]
operator|=
name|entities
index|[
literal|0
index|]
expr_stmt|;
name|verify
argument_list|(
name|spyTimelineWriter
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|putEntities
argument_list|(
name|entityTDB
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|localFS
operator|.
name|util
argument_list|()
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|getAppAttemptDir
argument_list|(
name|attemptId1
argument_list|,
name|storeInsideUserDir
argument_list|)
argument_list|,
literal|"summarylog-"
operator|+
name|attemptId1
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|spyTimelineWriter
argument_list|)
expr_stmt|;
comment|// if we specified attemptId as well as groupId, it would save the entity
comment|// into
comment|// FileSystem instead of levelDB store
name|ApplicationAttemptId
name|attemptId2
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|client
operator|.
name|putEntities
argument_list|(
name|attemptId2
argument_list|,
name|groupId
argument_list|,
name|entities
argument_list|)
expr_stmt|;
name|client
operator|.
name|putEntities
argument_list|(
name|attemptId2
argument_list|,
name|groupId2
argument_list|,
name|entities
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|spyTimelineWriter
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|putEntities
argument_list|(
name|any
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|localFS
operator|.
name|util
argument_list|()
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|getAppAttemptDir
argument_list|(
name|attemptId2
argument_list|,
name|storeInsideUserDir
argument_list|)
argument_list|,
literal|"summarylog-"
operator|+
name|attemptId2
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|localFS
operator|.
name|util
argument_list|()
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|getAppAttemptDir
argument_list|(
name|attemptId2
argument_list|,
name|storeInsideUserDir
argument_list|)
argument_list|,
literal|"entitylog-"
operator|+
name|groupId
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|localFS
operator|.
name|util
argument_list|()
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|getAppAttemptDir
argument_list|(
name|attemptId2
argument_list|,
name|storeInsideUserDir
argument_list|)
argument_list|,
literal|"entitylog-"
operator|+
name|groupId2
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|spyTimelineWriter
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception is not expected. "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPutDomain ()
specifier|public
name|void
name|testPutDomain
parameter_list|()
block|{
name|client
operator|=
name|createTimelineClient
argument_list|(
name|getConfigurations
argument_list|()
argument_list|)
expr_stmt|;
name|verifyForPutDomain
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutDomainToKeepUnderUserDir ()
specifier|public
name|void
name|testPutDomainToKeepUnderUserDir
parameter_list|()
block|{
name|YarnConfiguration
name|conf
init|=
name|getConfigurations
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENTITYGROUP_FS_STORE_WITH_USER_DIR
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
operator|=
name|createTimelineClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|verifyForPutDomain
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyForPutDomain (boolean storeInsideUserDir)
specifier|private
name|void
name|verifyForPutDomain
parameter_list|(
name|boolean
name|storeInsideUserDir
parameter_list|)
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|attemptId1
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|TimelineDomain
name|domain
init|=
name|generateDomain
argument_list|()
decl_stmt|;
name|client
operator|.
name|putDomain
argument_list|(
literal|null
argument_list|,
name|domain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|spyTimelineWriter
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|putDomain
argument_list|(
name|domain
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|spyTimelineWriter
argument_list|)
expr_stmt|;
name|client
operator|.
name|putDomain
argument_list|(
name|attemptId1
argument_list|,
name|domain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|spyTimelineWriter
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|putDomain
argument_list|(
name|domain
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|localFS
operator|.
name|util
argument_list|()
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|getAppAttemptDir
argument_list|(
name|attemptId1
argument_list|,
name|storeInsideUserDir
argument_list|)
argument_list|,
literal|"domainlog-"
operator|+
name|attemptId1
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|reset
argument_list|(
name|spyTimelineWriter
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception is not expected."
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getAppAttemptDir (ApplicationAttemptId appAttemptId, boolean storeInsideUserDir)
specifier|private
name|Path
name|getAppAttemptDir
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|,
name|boolean
name|storeInsideUserDir
parameter_list|)
block|{
name|Path
name|userDir
init|=
name|getUserDir
argument_list|(
name|appAttemptId
argument_list|,
name|storeInsideUserDir
argument_list|)
decl_stmt|;
name|Path
name|appDir
init|=
operator|new
name|Path
argument_list|(
name|userDir
argument_list|,
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|attemptDir
init|=
operator|new
name|Path
argument_list|(
name|appDir
argument_list|,
name|appAttemptId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|attemptDir
return|;
block|}
DECL|method|getUserDir (ApplicationAttemptId appAttemptId, boolean storeInsideUserDir)
specifier|private
name|Path
name|getUserDir
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|,
name|boolean
name|storeInsideUserDir
parameter_list|)
block|{
if|if
condition|(
operator|!
name|storeInsideUserDir
condition|)
block|{
return|return
operator|new
name|Path
argument_list|(
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
return|;
block|}
name|Path
name|userDir
init|=
operator|new
name|Path
argument_list|(
name|localActiveDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|authUgi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|userDir
return|;
block|}
DECL|method|generateEntity (String type)
specifier|private
specifier|static
name|TimelineEntity
name|generateEntity
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setEntityId
argument_list|(
literal|"entity id"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setEntityType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setStartTime
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|generateDomain ()
specifier|private
specifier|static
name|TimelineDomain
name|generateDomain
parameter_list|()
block|{
name|TimelineDomain
name|domain
init|=
operator|new
name|TimelineDomain
argument_list|()
decl_stmt|;
name|domain
operator|.
name|setId
argument_list|(
literal|"namesapce id"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setDescription
argument_list|(
literal|"domain description"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setOwner
argument_list|(
literal|"domain owner"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setReaders
argument_list|(
literal|"domain_reader"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setWriters
argument_list|(
literal|"domain_writer"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setCreatedTime
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setModifiedTime
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
return|return
name|domain
return|;
block|}
DECL|method|createTimelineClient (YarnConfiguration conf)
specifier|private
name|TimelineClientImpl
name|createTimelineClient
parameter_list|(
name|YarnConfiguration
name|conf
parameter_list|)
block|{
name|TimelineClientImpl
name|client
init|=
operator|new
name|TimelineClientImpl
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|TimelineWriter
name|createTimelineWriter
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|UserGroupInformation
name|authUgi
parameter_list|,
name|Client
name|client
parameter_list|,
name|URI
name|resURI
parameter_list|)
throws|throws
name|IOException
block|{
name|TimelineWriter
name|timelineWriter
init|=
operator|new
name|FileSystemTimelineWriter
argument_list|(
name|conf
argument_list|,
name|authUgi
argument_list|,
name|client
argument_list|,
name|resURI
argument_list|)
block|{
specifier|public
name|ClientResponse
name|doPostingObject
parameter_list|(
name|Object
name|object
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|ClientResponse
name|response
init|=
name|mock
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|response
operator|.
name|getStatusInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ClientResponse
operator|.
name|Status
operator|.
name|OK
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
decl_stmt|;
name|spyTimelineWriter
operator|=
name|spy
argument_list|(
name|timelineWriter
argument_list|)
expr_stmt|;
return|return
name|spyTimelineWriter
return|;
block|}
block|}
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|client
return|;
block|}
block|}
end_class

end_unit

