begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AllocateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
operator|.
name|AllocateRequestPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerResourceIncreaseRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|AllocateRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAllocateRequest
specifier|public
class|class
name|TestAllocateRequest
block|{
annotation|@
name|Test
DECL|method|testAllcoateRequestWithIncrease ()
specifier|public
name|void
name|testAllcoateRequestWithIncrease
parameter_list|()
block|{
name|List
argument_list|<
name|ContainerResourceIncreaseRequest
argument_list|>
name|incRequests
init|=
operator|new
name|ArrayList
argument_list|<
name|ContainerResourceIncreaseRequest
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|incRequests
operator|.
name|add
argument_list|(
name|ContainerResourceIncreaseRequest
operator|.
name|newInstance
argument_list|(
literal|null
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|AllocateRequest
name|r
init|=
name|AllocateRequest
operator|.
name|newInstance
argument_list|(
literal|123
argument_list|,
literal|0f
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|incRequests
argument_list|)
decl_stmt|;
comment|// serde
name|AllocateRequestProto
name|p
init|=
operator|(
operator|(
name|AllocateRequestPBImpl
operator|)
name|r
operator|)
operator|.
name|getProto
argument_list|()
decl_stmt|;
name|r
operator|=
operator|new
name|AllocateRequestPBImpl
argument_list|(
name|p
argument_list|)
expr_stmt|;
comment|// check value
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|r
operator|.
name|getResponseId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|incRequests
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|getIncreaseRequests
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|incRequests
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|r
operator|.
name|getIncreaseRequests
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getCapability
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
name|incRequests
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getCapability
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAllcoateRequestWithoutIncrease ()
specifier|public
name|void
name|testAllcoateRequestWithoutIncrease
parameter_list|()
block|{
name|AllocateRequest
name|r
init|=
name|AllocateRequest
operator|.
name|newInstance
argument_list|(
literal|123
argument_list|,
literal|0f
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// serde
name|AllocateRequestProto
name|p
init|=
operator|(
operator|(
name|AllocateRequestPBImpl
operator|)
name|r
operator|)
operator|.
name|getProto
argument_list|()
decl_stmt|;
name|r
operator|=
operator|new
name|AllocateRequestPBImpl
argument_list|(
name|p
argument_list|)
expr_stmt|;
comment|// check value
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|r
operator|.
name|getResponseId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|r
operator|.
name|getIncreaseRequests
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

