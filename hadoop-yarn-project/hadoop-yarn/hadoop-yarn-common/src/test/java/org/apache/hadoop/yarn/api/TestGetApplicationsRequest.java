begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|Range
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ApplicationsRequestScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
operator|.
name|GetApplicationsRequestPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestGetApplicationsRequest
specifier|public
class|class
name|TestGetApplicationsRequest
block|{
annotation|@
name|Test
DECL|method|testGetApplicationsRequest ()
specifier|public
name|void
name|testGetApplicationsRequest
parameter_list|()
block|{
name|GetApplicationsRequest
name|request
init|=
name|GetApplicationsRequest
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|EnumSet
argument_list|<
name|YarnApplicationState
argument_list|>
name|appStates
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|YarnApplicationState
operator|.
name|ACCEPTED
argument_list|)
decl_stmt|;
name|request
operator|.
name|setApplicationStates
argument_list|(
name|appStates
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|tags
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|tags
operator|.
name|add
argument_list|(
literal|"tag1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setApplicationTags
argument_list|(
name|tags
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|types
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|"type1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setApplicationTypes
argument_list|(
name|types
argument_list|)
expr_stmt|;
name|long
name|startBegin
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|startEnd
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1
decl_stmt|;
name|request
operator|.
name|setStartRange
argument_list|(
name|startBegin
argument_list|,
name|startEnd
argument_list|)
expr_stmt|;
name|long
name|finishBegin
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|2
decl_stmt|;
name|long
name|finishEnd
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|3
decl_stmt|;
name|request
operator|.
name|setFinishRange
argument_list|(
name|finishBegin
argument_list|,
name|finishEnd
argument_list|)
expr_stmt|;
name|long
name|limit
init|=
literal|100L
decl_stmt|;
name|request
operator|.
name|setLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|queues
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|queues
operator|.
name|add
argument_list|(
literal|"queue1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setQueues
argument_list|(
name|queues
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|users
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|users
operator|.
name|add
argument_list|(
literal|"user1"
argument_list|)
expr_stmt|;
name|request
operator|.
name|setUsers
argument_list|(
name|users
argument_list|)
expr_stmt|;
name|ApplicationsRequestScope
name|scope
init|=
name|ApplicationsRequestScope
operator|.
name|ALL
decl_stmt|;
name|request
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
expr_stmt|;
name|GetApplicationsRequest
name|requestFromProto
init|=
operator|new
name|GetApplicationsRequestPBImpl
argument_list|(
operator|(
operator|(
name|GetApplicationsRequestPBImpl
operator|)
name|request
operator|)
operator|.
name|getProto
argument_list|()
argument_list|)
decl_stmt|;
comment|// verify the whole record equals with original record
name|Assert
operator|.
name|assertEquals
argument_list|(
name|requestFromProto
argument_list|,
name|request
argument_list|)
expr_stmt|;
comment|// verify all properties are the same as original request
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ApplicationStates from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getApplicationStates
argument_list|()
argument_list|,
name|appStates
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ApplicationTags from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getApplicationTags
argument_list|()
argument_list|,
name|tags
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ApplicationTypes from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getApplicationTypes
argument_list|()
argument_list|,
name|types
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"StartRange from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getStartRange
argument_list|()
argument_list|,
name|Range
operator|.
name|between
argument_list|(
name|startBegin
argument_list|,
name|startEnd
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"FinishRange from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getFinishRange
argument_list|()
argument_list|,
name|Range
operator|.
name|between
argument_list|(
name|finishBegin
argument_list|,
name|finishEnd
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Limit from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getLimit
argument_list|()
argument_list|,
name|limit
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Queues from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getQueues
argument_list|()
argument_list|,
name|queues
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Users from proto is not the same with original request"
argument_list|,
name|requestFromProto
operator|.
name|getUsers
argument_list|()
argument_list|,
name|users
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

