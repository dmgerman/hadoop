begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.security.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPut
import|;
end_import

begin_comment
comment|/**  * DelegationToken operations.  */
end_comment

begin_enum
annotation|@
name|Unstable
annotation|@
name|Private
DECL|enum|TimelineDelegationTokenOperation
specifier|public
enum|enum
name|TimelineDelegationTokenOperation
block|{
comment|// TODO: need think about which ops can be done without kerberos
comment|// credentials, for safety, we enforces all need kerberos credentials now.
DECL|enumConstant|GETDELEGATIONTOKEN
name|GETDELEGATIONTOKEN
argument_list|(
name|HttpGet
operator|.
name|METHOD_NAME
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|RENEWDELEGATIONTOKEN
name|RENEWDELEGATIONTOKEN
argument_list|(
name|HttpPut
operator|.
name|METHOD_NAME
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|CANCELDELEGATIONTOKEN
name|CANCELDELEGATIONTOKEN
argument_list|(
name|HttpPut
operator|.
name|METHOD_NAME
argument_list|,
literal|true
argument_list|)
block|;
DECL|field|httpMethod
specifier|private
name|String
name|httpMethod
decl_stmt|;
DECL|field|requiresKerberosCredentials
specifier|private
name|boolean
name|requiresKerberosCredentials
decl_stmt|;
DECL|method|TimelineDelegationTokenOperation (String httpMethod, boolean requiresKerberosCredentials)
specifier|private
name|TimelineDelegationTokenOperation
parameter_list|(
name|String
name|httpMethod
parameter_list|,
name|boolean
name|requiresKerberosCredentials
parameter_list|)
block|{
name|this
operator|.
name|httpMethod
operator|=
name|httpMethod
expr_stmt|;
name|this
operator|.
name|requiresKerberosCredentials
operator|=
name|requiresKerberosCredentials
expr_stmt|;
block|}
DECL|method|getHttpMethod ()
specifier|public
name|String
name|getHttpMethod
parameter_list|()
block|{
return|return
name|httpMethod
return|;
block|}
DECL|method|requiresKerberosCredentials ()
specifier|public
name|boolean
name|requiresKerberosCredentials
parameter_list|()
block|{
return|return
name|requiresKerberosCredentials
return|;
block|}
block|}
end_enum

end_unit

