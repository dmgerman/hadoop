begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|core
operator|.
name|util
operator|.
name|MultivaluedMapImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|web
operator|.
name|DelegationTokenAuthenticatedURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineReaderClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|api
operator|.
name|client
operator|.
name|ClientResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|util
operator|.
name|WebAppUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
operator|.
name|YARN_APPLICATION_ATTEMPT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntityType
operator|.
name|YARN_CONTAINER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|PATH_JOINER
import|;
end_import

begin_comment
comment|/**  * Implementation of TimelineReaderClient interface.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|TimelineReaderClientImpl
specifier|public
class|class
name|TimelineReaderClientImpl
extends|extends
name|TimelineReaderClient
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TimelineReaderClientImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|RESOURCE_URI_STR_V2
specifier|private
specifier|static
specifier|final
name|String
name|RESOURCE_URI_STR_V2
init|=
literal|"/ws/v2/timeline/"
decl_stmt|;
DECL|field|connector
specifier|private
name|TimelineConnector
name|connector
decl_stmt|;
DECL|field|baseUri
specifier|private
name|URI
name|baseUri
decl_stmt|;
DECL|field|clusterId
specifier|private
name|String
name|clusterId
decl_stmt|;
DECL|method|TimelineReaderClientImpl ()
specifier|public
name|TimelineReaderClientImpl
parameter_list|()
block|{
name|super
argument_list|(
name|TimelineReaderClientImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|YarnConfiguration
operator|.
name|timelineServiceV2Enabled
argument_list|(
name|conf
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Timeline V2 client is not properly configured. "
operator|+
literal|"Either timeline service is not enabled or version is not set to"
operator|+
literal|" 2"
argument_list|)
throw|;
block|}
name|UserGroupInformation
name|ugi
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|UserGroupInformation
name|realUgi
init|=
name|ugi
operator|.
name|getRealUser
argument_list|()
decl_stmt|;
name|String
name|doAsUser
decl_stmt|;
name|UserGroupInformation
name|authUgi
decl_stmt|;
if|if
condition|(
name|realUgi
operator|!=
literal|null
condition|)
block|{
name|authUgi
operator|=
name|realUgi
expr_stmt|;
name|doAsUser
operator|=
name|ugi
operator|.
name|getShortUserName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|authUgi
operator|=
name|ugi
expr_stmt|;
name|doAsUser
operator|=
literal|null
expr_stmt|;
block|}
name|DelegationTokenAuthenticatedURL
operator|.
name|Token
name|token
init|=
operator|new
name|DelegationTokenAuthenticatedURL
operator|.
name|Token
argument_list|()
decl_stmt|;
name|connector
operator|=
operator|new
name|TimelineConnector
argument_list|(
literal|false
argument_list|,
name|authUgi
argument_list|,
name|doAsUser
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|addIfService
argument_list|(
name|connector
argument_list|)
expr_stmt|;
name|String
name|timelineReaderWebAppAddress
init|=
name|WebAppUtils
operator|.
name|getTimelineReaderWebAppURLWithoutScheme
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|baseUri
operator|=
name|TimelineConnector
operator|.
name|constructResURI
argument_list|(
name|conf
argument_list|,
name|timelineReaderWebAppAddress
argument_list|,
name|RESOURCE_URI_STR_V2
argument_list|)
expr_stmt|;
name|clusterId
operator|=
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CLUSTER_ID
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_CLUSTER_ID
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceInit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationEntity (ApplicationId appId, String fields, Map<String, String> filters)
specifier|public
name|TimelineEntity
name|getApplicationEntity
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|String
name|fields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|path
init|=
name|PATH_JOINER
operator|.
name|join
argument_list|(
literal|"clusters"
argument_list|,
name|clusterId
argument_list|,
literal|"apps"
argument_list|,
name|appId
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|==
literal|null
operator|||
name|fields
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fields
operator|=
literal|"INFO"
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
name|mergeFilters
argument_list|(
name|params
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|doGetUri
argument_list|(
name|baseUri
argument_list|,
name|path
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptEntity ( ApplicationAttemptId appAttemptId, String fields, Map<String, String> filters)
specifier|public
name|TimelineEntity
name|getApplicationAttemptEntity
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|,
name|String
name|fields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|)
throws|throws
name|IOException
block|{
name|ApplicationId
name|appId
init|=
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|PATH_JOINER
operator|.
name|join
argument_list|(
literal|"clusters"
argument_list|,
name|clusterId
argument_list|,
literal|"apps"
argument_list|,
name|appId
argument_list|,
literal|"entities"
argument_list|,
name|YARN_APPLICATION_ATTEMPT
argument_list|,
name|appAttemptId
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|==
literal|null
operator|||
name|fields
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fields
operator|=
literal|"INFO"
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
name|mergeFilters
argument_list|(
name|params
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|doGetUri
argument_list|(
name|baseUri
argument_list|,
name|path
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptEntities ( ApplicationId appId, String fields, Map<String, String> filters, long limit, String fromId)
specifier|public
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|getApplicationAttemptEntities
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|String
name|fields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|,
name|long
name|limit
parameter_list|,
name|String
name|fromId
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|path
init|=
name|PATH_JOINER
operator|.
name|join
argument_list|(
literal|"clusters"
argument_list|,
name|clusterId
argument_list|,
literal|"apps"
argument_list|,
name|appId
argument_list|,
literal|"entities"
argument_list|,
name|YARN_APPLICATION_ATTEMPT
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|==
literal|null
operator|||
name|fields
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fields
operator|=
literal|"INFO"
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
if|if
condition|(
name|limit
operator|>
literal|0
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"limit"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|limit
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fromId
operator|!=
literal|null
operator|&&
operator|!
name|fromId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"fromid"
argument_list|,
name|fromId
argument_list|)
expr_stmt|;
block|}
name|mergeFilters
argument_list|(
name|params
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|doGetUri
argument_list|(
name|baseUri
argument_list|,
name|path
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|TimelineEntity
index|[]
name|entities
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|entities
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerEntity (ContainerId containerId, String fields, Map<String, String> filters)
specifier|public
name|TimelineEntity
name|getContainerEntity
parameter_list|(
name|ContainerId
name|containerId
parameter_list|,
name|String
name|fields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|)
throws|throws
name|IOException
block|{
name|ApplicationId
name|appId
init|=
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|PATH_JOINER
operator|.
name|join
argument_list|(
literal|"clusters"
argument_list|,
name|clusterId
argument_list|,
literal|"apps"
argument_list|,
name|appId
argument_list|,
literal|"entities"
argument_list|,
name|YARN_CONTAINER
argument_list|,
name|containerId
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|==
literal|null
operator|||
name|fields
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fields
operator|=
literal|"INFO"
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
name|mergeFilters
argument_list|(
name|params
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|doGetUri
argument_list|(
name|baseUri
argument_list|,
name|path
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerEntities ( ApplicationId appId, String fields, Map<String, String> filters, long limit, String fromId)
specifier|public
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|getContainerEntities
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|String
name|fields
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|,
name|long
name|limit
parameter_list|,
name|String
name|fromId
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|path
init|=
name|PATH_JOINER
operator|.
name|join
argument_list|(
literal|"clusters"
argument_list|,
name|clusterId
argument_list|,
literal|"apps"
argument_list|,
name|appId
argument_list|,
literal|"entities"
argument_list|,
name|YARN_CONTAINER
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|==
literal|null
operator|||
name|fields
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fields
operator|=
literal|"INFO"
expr_stmt|;
block|}
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|MultivaluedMapImpl
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"fields"
argument_list|,
name|fields
argument_list|)
expr_stmt|;
if|if
condition|(
name|limit
operator|>
literal|0
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"limit"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|limit
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fromId
operator|!=
literal|null
operator|&&
operator|!
name|fromId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"fromid"
argument_list|,
name|fromId
argument_list|)
expr_stmt|;
block|}
name|mergeFilters
argument_list|(
name|params
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|ClientResponse
name|response
init|=
name|doGetUri
argument_list|(
name|baseUri
argument_list|,
name|path
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|TimelineEntity
index|[]
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|(
name|TimelineEntity
index|[]
operator|.
expr|class
argument_list|)
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|entity
argument_list|)
return|;
block|}
DECL|method|mergeFilters (MultivaluedMap<String, String> defaults, Map<String, String> filters)
specifier|private
name|void
name|mergeFilters
parameter_list|(
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|defaults
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
parameter_list|)
block|{
if|if
condition|(
name|filters
operator|!=
literal|null
operator|&&
operator|!
name|filters
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|filters
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|defaults
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|defaults
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|filters
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|VisibleForTesting
DECL|method|doGetUri (URI base, String path, MultivaluedMap<String, String> params)
specifier|protected
name|ClientResponse
name|doGetUri
parameter_list|(
name|URI
name|base
parameter_list|,
name|String
name|path
parameter_list|,
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
throws|throws
name|IOException
block|{
name|ClientResponse
name|resp
init|=
name|connector
operator|.
name|getClient
argument_list|()
operator|.
name|resource
argument_list|(
name|base
argument_list|)
operator|.
name|path
argument_list|(
name|path
argument_list|)
operator|.
name|queryParams
argument_list|(
name|params
argument_list|)
operator|.
name|accept
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|get
argument_list|(
name|ClientResponse
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|resp
operator|==
literal|null
operator|||
name|resp
operator|.
name|getStatusInfo
argument_list|()
operator|.
name|getStatusCode
argument_list|()
operator|!=
name|ClientResponse
operator|.
name|Status
operator|.
name|OK
operator|.
name|getStatusCode
argument_list|()
condition|)
block|{
name|String
name|msg
init|=
literal|"Response from the timeline reader server is "
operator|+
operator|(
operator|(
name|resp
operator|==
literal|null
operator|)
condition|?
literal|"null"
else|:
literal|"not successful,"
operator|+
literal|" HTTP error code: "
operator|+
name|resp
operator|.
name|getStatus
argument_list|()
operator|+
literal|", Server response:\n"
operator|+
name|resp
operator|.
name|getEntity
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|)
decl_stmt|;
name|LOG
operator|.
name|error
argument_list|(
name|msg
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
return|return
name|resp
return|;
block|}
block|}
end_class

end_unit

