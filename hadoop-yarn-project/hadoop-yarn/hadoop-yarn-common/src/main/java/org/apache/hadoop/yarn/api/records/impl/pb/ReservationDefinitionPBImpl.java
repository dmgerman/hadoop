begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ReservationDefinitionProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ReservationDefinitionProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ReservationRequestsProto
import|;
end_import

begin_class
DECL|class|ReservationDefinitionPBImpl
specifier|public
class|class
name|ReservationDefinitionPBImpl
extends|extends
name|ReservationDefinition
block|{
DECL|field|proto
name|ReservationDefinitionProto
name|proto
init|=
name|ReservationDefinitionProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|ReservationDefinitionProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|reservationReqs
specifier|private
name|ReservationRequests
name|reservationReqs
decl_stmt|;
DECL|method|ReservationDefinitionPBImpl ()
specifier|public
name|ReservationDefinitionPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|ReservationDefinitionProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|ReservationDefinitionPBImpl (ReservationDefinitionProto proto)
specifier|public
name|ReservationDefinitionPBImpl
parameter_list|(
name|ReservationDefinitionProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|ReservationDefinitionProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|reservationReqs
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setReservationRequests
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|reservationReqs
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|ReservationDefinitionProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getArrival ()
specifier|public
name|long
name|getArrival
parameter_list|()
block|{
name|ReservationDefinitionProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasArrival
argument_list|()
condition|)
block|{
return|return
literal|0
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getArrival
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setArrival (long earliestStartTime)
specifier|public
name|void
name|setArrival
parameter_list|(
name|long
name|earliestStartTime
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|earliestStartTime
operator|<=
literal|0
condition|)
block|{
name|builder
operator|.
name|clearArrival
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setArrival
argument_list|(
name|earliestStartTime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDeadline ()
specifier|public
name|long
name|getDeadline
parameter_list|()
block|{
name|ReservationDefinitionProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasDeadline
argument_list|()
condition|)
block|{
return|return
literal|0
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getDeadline
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setDeadline (long latestEndTime)
specifier|public
name|void
name|setDeadline
parameter_list|(
name|long
name|latestEndTime
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|latestEndTime
operator|<=
literal|0
condition|)
block|{
name|builder
operator|.
name|clearDeadline
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setDeadline
argument_list|(
name|latestEndTime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getReservationRequests ()
specifier|public
name|ReservationRequests
name|getReservationRequests
parameter_list|()
block|{
name|ReservationDefinitionProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|reservationReqs
operator|!=
literal|null
condition|)
block|{
return|return
name|reservationReqs
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasReservationRequests
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|reservationReqs
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getReservationRequests
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|reservationReqs
return|;
block|}
annotation|@
name|Override
DECL|method|setReservationRequests (ReservationRequests reservationRequests)
specifier|public
name|void
name|setReservationRequests
parameter_list|(
name|ReservationRequests
name|reservationRequests
parameter_list|)
block|{
if|if
condition|(
name|reservationRequests
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearReservationRequests
argument_list|()
expr_stmt|;
return|return;
block|}
name|this
operator|.
name|reservationReqs
operator|=
name|reservationRequests
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getReservationName ()
specifier|public
name|String
name|getReservationName
parameter_list|()
block|{
name|ReservationDefinitionProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasReservationName
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getReservationName
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setReservationName (String name)
specifier|public
name|void
name|setReservationName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearReservationName
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setReservationName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|convertFromProtoFormat ( ReservationRequestsProto p)
specifier|private
name|ReservationRequestsPBImpl
name|convertFromProtoFormat
parameter_list|(
name|ReservationRequestsProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|ReservationRequestsPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (ReservationRequests t)
specifier|private
name|ReservationRequestsProto
name|convertToProtoFormat
parameter_list|(
name|ReservationRequests
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ReservationRequestsPBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{Arrival: "
operator|+
name|getArrival
argument_list|()
operator|+
literal|", Deadline: "
operator|+
name|getDeadline
argument_list|()
operator|+
literal|", Reservation Name: "
operator|+
name|getReservationName
argument_list|()
operator|+
literal|", Recurrence expression: "
operator|+
name|getRecurrenceExpression
argument_list|()
operator|+
literal|", Resources: "
operator|+
name|getReservationRequests
argument_list|()
operator|+
literal|"}"
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getProto
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|this
operator|.
name|getProto
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|cast
argument_list|(
name|other
argument_list|)
operator|.
name|getProto
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|getRecurrenceExpression ()
specifier|public
name|String
name|getRecurrenceExpression
parameter_list|()
block|{
name|ReservationDefinitionProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|p
operator|.
name|hasRecurrenceExpression
argument_list|()
condition|)
block|{
name|String
name|recurrenceExpression
init|=
name|p
operator|.
name|getRecurrenceExpression
argument_list|()
decl_stmt|;
return|return
name|recurrenceExpression
return|;
block|}
else|else
block|{
return|return
literal|"0"
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|setRecurrenceExpression (String recurrenceExpression)
specifier|public
name|void
name|setRecurrenceExpression
parameter_list|(
name|String
name|recurrenceExpression
parameter_list|)
block|{
name|builder
operator|.
name|setRecurrenceExpression
argument_list|(
name|recurrenceExpression
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

