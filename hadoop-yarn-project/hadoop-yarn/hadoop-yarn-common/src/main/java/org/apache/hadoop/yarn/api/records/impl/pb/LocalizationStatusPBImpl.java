begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalizationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalizationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|LocalizationStateProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|LocalizationStatusProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|LocalizationStatusProtoOrBuilder
import|;
end_import

begin_comment
comment|/**  * PB Impl of {@link LocalizationStatus}.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|LocalizationStatusPBImpl
specifier|public
class|class
name|LocalizationStatusPBImpl
extends|extends
name|LocalizationStatus
block|{
DECL|field|proto
specifier|private
name|LocalizationStatusProto
name|proto
init|=
name|LocalizationStatusProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
specifier|private
name|LocalizationStatusProto
operator|.
name|Builder
name|builder
decl_stmt|;
DECL|field|viaProto
specifier|private
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|resourceKey
specifier|private
name|String
name|resourceKey
decl_stmt|;
DECL|field|localizationState
specifier|private
name|LocalizationState
name|localizationState
decl_stmt|;
DECL|field|diagnostics
specifier|private
name|String
name|diagnostics
decl_stmt|;
DECL|method|LocalizationStatusPBImpl ()
specifier|public
name|LocalizationStatusPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|LocalizationStatusProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|LocalizationStatusPBImpl (LocalizationStatusProto proto)
specifier|public
name|LocalizationStatusPBImpl
parameter_list|(
name|LocalizationStatusProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
specifier|synchronized
name|LocalizationStatusProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getProto
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|this
operator|.
name|getProto
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|cast
argument_list|(
name|other
argument_list|)
operator|.
name|getProto
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"LocalizationStatus: ["
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"ResourceKey: "
argument_list|)
operator|.
name|append
argument_list|(
name|getResourceKey
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"LocalizationState: "
argument_list|)
operator|.
name|append
argument_list|(
name|getLocalizationState
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Diagnostics: "
argument_list|)
operator|.
name|append
argument_list|(
name|getDiagnostics
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|resourceKey
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setResourceKey
argument_list|(
name|this
operator|.
name|resourceKey
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|localizationState
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setLocalizationState
argument_list|(
name|convertToProtoFormat
argument_list|(
name|localizationState
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|diagnostics
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDiagnostics
argument_list|(
name|diagnostics
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
specifier|synchronized
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
block|}
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
specifier|synchronized
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|LocalizationStatusProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResourceKey ()
specifier|public
specifier|synchronized
name|String
name|getResourceKey
parameter_list|()
block|{
name|LocalizationStatusProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|resourceKey
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|resourceKey
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasResourceKey
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|resourceKey
operator|=
name|p
operator|.
name|getResourceKey
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|resourceKey
return|;
block|}
annotation|@
name|Override
DECL|method|setResourceKey (String resourceKey)
specifier|public
specifier|synchronized
name|void
name|setResourceKey
parameter_list|(
name|String
name|resourceKey
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|resourceKey
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearResourceKey
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|resourceKey
operator|=
name|resourceKey
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLocalizationState ()
specifier|public
specifier|synchronized
name|LocalizationState
name|getLocalizationState
parameter_list|()
block|{
name|LocalizationStatusProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|localizationState
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|localizationState
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasLocalizationState
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|localizationState
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getLocalizationState
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|localizationState
return|;
block|}
annotation|@
name|Override
DECL|method|setLocalizationState ( LocalizationState localizationState)
specifier|public
specifier|synchronized
name|void
name|setLocalizationState
parameter_list|(
name|LocalizationState
name|localizationState
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|localizationState
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearLocalizationState
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|localizationState
operator|=
name|localizationState
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDiagnostics ()
specifier|public
specifier|synchronized
name|String
name|getDiagnostics
parameter_list|()
block|{
name|LocalizationStatusProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|diagnostics
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|diagnostics
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasDiagnostics
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|diagnostics
operator|=
name|p
operator|.
name|getDiagnostics
argument_list|()
expr_stmt|;
return|return
name|diagnostics
return|;
block|}
annotation|@
name|Override
DECL|method|setDiagnostics (String diagnostics)
specifier|public
specifier|synchronized
name|void
name|setDiagnostics
parameter_list|(
name|String
name|diagnostics
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|diagnostics
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearDiagnostics
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|diagnostics
operator|=
name|diagnostics
expr_stmt|;
block|}
DECL|method|convertToProtoFormat (LocalizationState e)
specifier|private
name|LocalizationStateProto
name|convertToProtoFormat
parameter_list|(
name|LocalizationState
name|e
parameter_list|)
block|{
return|return
name|ProtoUtils
operator|.
name|convertToProtoFormat
argument_list|(
name|e
argument_list|)
return|;
block|}
DECL|method|convertFromProtoFormat (LocalizationStateProto e)
specifier|private
name|LocalizationState
name|convertFromProtoFormat
parameter_list|(
name|LocalizationStateProto
name|e
parameter_list|)
block|{
return|return
name|ProtoUtils
operator|.
name|convertFromProtoFormat
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
end_class

end_unit

