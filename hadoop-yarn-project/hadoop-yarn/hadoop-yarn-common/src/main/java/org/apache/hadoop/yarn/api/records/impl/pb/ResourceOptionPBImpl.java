begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ResourceProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ResourceOptionProto
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_class
DECL|class|ResourceOptionPBImpl
specifier|public
class|class
name|ResourceOptionPBImpl
extends|extends
name|ResourceOption
block|{
DECL|field|proto
name|ResourceOptionProto
name|proto
init|=
literal|null
decl_stmt|;
DECL|field|builder
name|ResourceOptionProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|resource
specifier|private
name|Resource
name|resource
init|=
literal|null
decl_stmt|;
DECL|method|ResourceOptionPBImpl ()
specifier|public
name|ResourceOptionPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|ResourceOptionProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|ResourceOptionPBImpl (ResourceOptionProto proto)
specifier|public
name|ResourceOptionPBImpl
parameter_list|(
name|ResourceOptionProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|convertFromProtoFormat
argument_list|(
name|proto
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|ResourceOptionProto
name|getProto
parameter_list|()
block|{
return|return
name|proto
return|;
block|}
annotation|@
name|Override
DECL|method|getResource ()
specifier|public
name|Resource
name|getResource
parameter_list|()
block|{
return|return
name|this
operator|.
name|resource
return|;
block|}
annotation|@
name|Override
DECL|method|setResource (Resource resource)
specifier|protected
name|void
name|setResource
parameter_list|(
name|Resource
name|resource
parameter_list|)
block|{
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setResource
argument_list|(
name|convertToProtoFormat
argument_list|(
name|resource
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getOverCommitTimeout ()
specifier|public
name|int
name|getOverCommitTimeout
parameter_list|()
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|proto
argument_list|)
expr_stmt|;
return|return
name|proto
operator|.
name|getOverCommitTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setOverCommitTimeout (int overCommitTimeout)
specifier|protected
name|void
name|setOverCommitTimeout
parameter_list|(
name|int
name|overCommitTimeout
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setOverCommitTimeout
argument_list|(
name|overCommitTimeout
argument_list|)
expr_stmt|;
block|}
DECL|method|convertToProtoFormat ( Resource resource)
specifier|private
name|ResourceProto
name|convertToProtoFormat
parameter_list|(
name|Resource
name|resource
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ResourcePBImpl
operator|)
name|resource
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat ( ResourceProto p)
specifier|private
name|ResourcePBImpl
name|convertFromProtoFormat
parameter_list|(
name|ResourceProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|ResourcePBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|build ()
specifier|protected
name|void
name|build
parameter_list|()
block|{
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|builder
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

