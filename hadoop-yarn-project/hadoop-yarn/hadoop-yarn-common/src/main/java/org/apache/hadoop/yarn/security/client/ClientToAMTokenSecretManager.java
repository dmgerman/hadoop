begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.security.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|crypto
operator|.
name|SecretKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Evolving
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|SecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_comment
comment|/**  * A simple {@link SecretManager} for AMs to validate Client-RM tokens issued to  * clients by the RM using the underlying master-key shared by RM to the AMs on  * their launch. All the methods are called by either Hadoop RPC or YARN, so  * this class is strictly for the purpose of inherit/extend and register with  * Hadoop RPC.  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Evolving
DECL|class|ClientToAMTokenSecretManager
specifier|public
class|class
name|ClientToAMTokenSecretManager
extends|extends
name|BaseClientToAMTokenSecretManager
block|{
comment|// Only one client-token and one master-key for AM
DECL|field|masterKey
specifier|private
specifier|final
name|SecretKey
name|masterKey
decl_stmt|;
DECL|method|ClientToAMTokenSecretManager ( ApplicationAttemptId applicationAttemptID, byte[] secretKeyBytes)
specifier|public
name|ClientToAMTokenSecretManager
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptID
parameter_list|,
name|byte
index|[]
name|secretKeyBytes
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|masterKey
operator|=
name|SecretManager
operator|.
name|createSecretKey
argument_list|(
name|secretKeyBytes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMasterKey (ApplicationAttemptId applicationAttemptID)
specifier|public
name|SecretKey
name|getMasterKey
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptID
parameter_list|)
block|{
comment|// Only one client-token and one master-key for AM, just return that.
return|return
name|this
operator|.
name|masterKey
return|;
block|}
block|}
end_class

end_unit

