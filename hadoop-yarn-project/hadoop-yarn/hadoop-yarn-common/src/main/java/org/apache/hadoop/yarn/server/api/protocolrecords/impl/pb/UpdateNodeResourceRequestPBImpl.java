begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|NodeIdPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|ResourceOptionPBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|NodeIdProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|NodeResourceMapProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ResourceOptionProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerResourceManagerServiceProtos
operator|.
name|UpdateNodeResourceRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServerResourceManagerServiceProtos
operator|.
name|UpdateNodeResourceRequestProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|UpdateNodeResourceRequest
import|;
end_import

begin_class
DECL|class|UpdateNodeResourceRequestPBImpl
specifier|public
class|class
name|UpdateNodeResourceRequestPBImpl
extends|extends
name|UpdateNodeResourceRequest
block|{
DECL|field|proto
name|UpdateNodeResourceRequestProto
name|proto
init|=
name|UpdateNodeResourceRequestProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|UpdateNodeResourceRequestProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|nodeResourceMap
name|Map
argument_list|<
name|NodeId
argument_list|,
name|ResourceOption
argument_list|>
name|nodeResourceMap
init|=
literal|null
decl_stmt|;
DECL|method|UpdateNodeResourceRequestPBImpl ()
specifier|public
name|UpdateNodeResourceRequestPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|UpdateNodeResourceRequestProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|UpdateNodeResourceRequestPBImpl (UpdateNodeResourceRequestProto proto)
specifier|public
name|UpdateNodeResourceRequestPBImpl
parameter_list|(
name|UpdateNodeResourceRequestProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNodeResourceMap ()
specifier|public
name|Map
argument_list|<
name|NodeId
argument_list|,
name|ResourceOption
argument_list|>
name|getNodeResourceMap
parameter_list|()
block|{
name|initNodeResourceMap
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|nodeResourceMap
return|;
block|}
annotation|@
name|Override
DECL|method|setNodeResourceMap (Map<NodeId, ResourceOption> nodeResourceMap)
specifier|public
name|void
name|setNodeResourceMap
parameter_list|(
name|Map
argument_list|<
name|NodeId
argument_list|,
name|ResourceOption
argument_list|>
name|nodeResourceMap
parameter_list|)
block|{
if|if
condition|(
name|nodeResourceMap
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|initNodeResourceMap
argument_list|()
expr_stmt|;
name|this
operator|.
name|nodeResourceMap
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|nodeResourceMap
operator|.
name|putAll
argument_list|(
name|nodeResourceMap
argument_list|)
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|UpdateNodeResourceRequestProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|nodeResourceMap
operator|!=
literal|null
condition|)
block|{
name|addNodeResourceMap
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|initNodeResourceMap ()
specifier|private
name|void
name|initNodeResourceMap
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|nodeResourceMap
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|UpdateNodeResourceRequestProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|NodeResourceMapProto
argument_list|>
name|list
init|=
name|p
operator|.
name|getNodeResourceMapList
argument_list|()
decl_stmt|;
name|this
operator|.
name|nodeResourceMap
operator|=
operator|new
name|HashMap
argument_list|<
name|NodeId
argument_list|,
name|ResourceOption
argument_list|>
argument_list|(
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|NodeResourceMapProto
name|nodeResourceProto
range|:
name|list
control|)
block|{
name|this
operator|.
name|nodeResourceMap
operator|.
name|put
argument_list|(
name|convertFromProtoFormat
argument_list|(
name|nodeResourceProto
operator|.
name|getNodeId
argument_list|()
argument_list|)
argument_list|,
name|convertFromProtoFormat
argument_list|(
name|nodeResourceProto
operator|.
name|getResourceOption
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|UpdateNodeResourceRequestProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
DECL|method|convertToProtoFormat (NodeId nodeId)
specifier|private
name|NodeIdProto
name|convertToProtoFormat
parameter_list|(
name|NodeId
name|nodeId
parameter_list|)
block|{
return|return
operator|(
operator|(
name|NodeIdPBImpl
operator|)
name|nodeId
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat (NodeIdProto proto)
specifier|private
name|NodeId
name|convertFromProtoFormat
parameter_list|(
name|NodeIdProto
name|proto
parameter_list|)
block|{
return|return
operator|new
name|NodeIdPBImpl
argument_list|(
name|proto
argument_list|)
return|;
block|}
DECL|method|convertFromProtoFormat (ResourceOptionProto c)
specifier|private
name|ResourceOptionPBImpl
name|convertFromProtoFormat
parameter_list|(
name|ResourceOptionProto
name|c
parameter_list|)
block|{
return|return
operator|new
name|ResourceOptionPBImpl
argument_list|(
name|c
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (ResourceOption c)
specifier|private
name|ResourceOptionProto
name|convertToProtoFormat
parameter_list|(
name|ResourceOption
name|c
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ResourceOptionPBImpl
operator|)
name|c
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|addNodeResourceMap ()
specifier|private
name|void
name|addNodeResourceMap
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearNodeResourceMap
argument_list|()
expr_stmt|;
if|if
condition|(
name|nodeResourceMap
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Iterable
argument_list|<
name|?
extends|extends
name|NodeResourceMapProto
argument_list|>
name|values
init|=
operator|new
name|Iterable
argument_list|<
name|NodeResourceMapProto
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|NodeResourceMapProto
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|NodeResourceMapProto
argument_list|>
argument_list|()
block|{
name|Iterator
argument_list|<
name|NodeId
argument_list|>
name|nodeIterator
init|=
name|nodeResourceMap
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|nodeIterator
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|NodeResourceMapProto
name|next
parameter_list|()
block|{
name|NodeId
name|nodeId
init|=
name|nodeIterator
operator|.
name|next
argument_list|()
decl_stmt|;
return|return
name|NodeResourceMapProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNodeId
argument_list|(
name|convertToProtoFormat
argument_list|(
name|nodeId
argument_list|)
argument_list|)
operator|.
name|setResourceOption
argument_list|(
name|convertToProtoFormat
argument_list|(
name|nodeResourceMap
operator|.
name|get
argument_list|(
name|nodeId
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|this
operator|.
name|builder
operator|.
name|addAllNodeResourceMap
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

