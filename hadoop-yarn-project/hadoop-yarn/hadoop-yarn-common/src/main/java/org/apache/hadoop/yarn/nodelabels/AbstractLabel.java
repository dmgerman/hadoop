begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.nodelabels
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_comment
comment|/**  * Generic class capturing the information required commonly across Partitions  * and Attributes.  */
end_comment

begin_class
DECL|class|AbstractLabel
specifier|public
specifier|abstract
class|class
name|AbstractLabel
block|{
DECL|field|resource
specifier|private
name|Resource
name|resource
decl_stmt|;
DECL|field|numActiveNMs
specifier|private
name|int
name|numActiveNMs
decl_stmt|;
DECL|field|labelName
specifier|private
name|String
name|labelName
decl_stmt|;
DECL|method|AbstractLabel ()
specifier|public
name|AbstractLabel
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|AbstractLabel (String labelName)
specifier|public
name|AbstractLabel
parameter_list|(
name|String
name|labelName
parameter_list|)
block|{
name|this
argument_list|(
name|labelName
argument_list|,
name|Resource
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|AbstractLabel (String labelName, Resource resource, int numActiveNMs)
specifier|public
name|AbstractLabel
parameter_list|(
name|String
name|labelName
parameter_list|,
name|Resource
name|resource
parameter_list|,
name|int
name|numActiveNMs
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
name|this
operator|.
name|numActiveNMs
operator|=
name|numActiveNMs
expr_stmt|;
name|this
operator|.
name|labelName
operator|=
name|labelName
expr_stmt|;
block|}
DECL|method|addNode (Resource nodeRes)
specifier|public
name|void
name|addNode
parameter_list|(
name|Resource
name|nodeRes
parameter_list|)
block|{
name|Resources
operator|.
name|addTo
argument_list|(
name|resource
argument_list|,
name|nodeRes
argument_list|)
expr_stmt|;
name|numActiveNMs
operator|++
expr_stmt|;
block|}
DECL|method|removeNode (Resource nodeRes)
specifier|public
name|void
name|removeNode
parameter_list|(
name|Resource
name|nodeRes
parameter_list|)
block|{
name|Resources
operator|.
name|subtractFrom
argument_list|(
name|resource
argument_list|,
name|nodeRes
argument_list|)
expr_stmt|;
name|numActiveNMs
operator|--
expr_stmt|;
block|}
DECL|method|getResource ()
specifier|public
name|Resource
name|getResource
parameter_list|()
block|{
return|return
name|Resource
operator|.
name|newInstance
argument_list|(
name|this
operator|.
name|resource
argument_list|)
return|;
block|}
DECL|method|getNumActiveNMs ()
specifier|public
name|int
name|getNumActiveNMs
parameter_list|()
block|{
return|return
name|numActiveNMs
return|;
block|}
DECL|method|getLabelName ()
specifier|public
name|String
name|getLabelName
parameter_list|()
block|{
return|return
name|labelName
return|;
block|}
block|}
end_class

end_unit

