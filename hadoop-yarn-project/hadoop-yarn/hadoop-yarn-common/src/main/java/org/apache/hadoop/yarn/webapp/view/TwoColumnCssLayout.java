begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.webapp.view
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|SubView
import|;
end_import

begin_comment
comment|/**  * A reusable, pure-css, cross-browser, left nav, 2 column,  * supposedly liquid layout.  * Doesn't quite work with resizable themes, kept as an example of the  * sad state of css (v2/3 anyway) layout.  * @see TwoColumnLayout  */
end_comment

begin_class
DECL|class|TwoColumnCssLayout
specifier|public
class|class
name|TwoColumnCssLayout
extends|extends
name|HtmlPage
block|{
DECL|method|render (Page.HTML<_> html)
annotation|@
name|Override
specifier|protected
name|void
name|render
parameter_list|(
name|Page
operator|.
name|HTML
argument_list|<
name|_
argument_list|>
name|html
parameter_list|)
block|{
name|preHead
argument_list|(
name|html
argument_list|)
expr_stmt|;
name|html
operator|.
name|title
argument_list|(
name|$
argument_list|(
literal|"title"
argument_list|)
argument_list|)
operator|.
name|link
argument_list|(
name|root_url
argument_list|(
literal|"static"
argument_list|,
literal|"yarn.css"
argument_list|)
argument_list|)
operator|.
name|style
argument_list|(
literal|".main { min-height: 100%; height: auto !important; height: 100%;"
argument_list|,
literal|"  margin: 0 auto -4em; border: 0; }"
argument_list|,
literal|".footer, .push { height: 4em; clear: both; border: 0 }"
argument_list|,
literal|".main.ui-widget-content, .footer.ui-widget-content { border: 0; }"
argument_list|,
literal|".cmask { position: relative; clear: both; float: left;"
argument_list|,
literal|"  width: 100%; overflow: hidden; }"
argument_list|,
literal|".leftnav .c1right { float: left; width: 200%; position: relative;"
argument_list|,
literal|"  left: 13em; border: 0; /* background: #fff; */ }"
argument_list|,
literal|".leftnav .c1wrap { float: right; width: 50%; position: relative;"
argument_list|,
literal|"  right: 13em; padding-bottom: 1em; }"
argument_list|,
literal|".leftnav .content { margin: 0 1em 0 14em; position: relative;"
argument_list|,
literal|"  right: 100%; overflow: hidden; }"
argument_list|,
literal|".leftnav .nav { float: left; width: 11em; position: relative;"
argument_list|,
literal|"  right: 12em; overflow: hidden; }"
argument_list|)
operator|.
name|_
argument_list|(
name|JQueryUI
operator|.
name|class
argument_list|)
expr_stmt|;
name|postHead
argument_list|(
name|html
argument_list|)
expr_stmt|;
name|JQueryUI
operator|.
name|jsnotice
argument_list|(
name|html
argument_list|)
expr_stmt|;
name|html
operator|.
name|div
argument_list|(
literal|".main.ui-widget-content"
argument_list|)
operator|.
name|_
argument_list|(
name|header
argument_list|()
argument_list|)
operator|.
name|div
argument_list|(
literal|".cmask.leftnav"
argument_list|)
operator|.
name|div
argument_list|(
literal|".c1right"
argument_list|)
operator|.
name|div
argument_list|(
literal|".c1wrap"
argument_list|)
operator|.
name|div
argument_list|(
literal|".content"
argument_list|)
operator|.
name|_
argument_list|(
name|content
argument_list|()
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|div
argument_list|(
literal|".nav"
argument_list|)
operator|.
name|_
argument_list|(
name|nav
argument_list|()
argument_list|)
operator|.
name|div
argument_list|(
literal|".push"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|div
argument_list|(
literal|".footer.ui-widget-content"
argument_list|)
operator|.
name|_
argument_list|(
name|footer
argument_list|()
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
expr_stmt|;
block|}
DECL|method|preHead (Page.HTML<_> html)
specifier|protected
name|void
name|preHead
parameter_list|(
name|Page
operator|.
name|HTML
argument_list|<
name|_
argument_list|>
name|html
parameter_list|)
block|{   }
DECL|method|postHead (Page.HTML<_> html)
specifier|protected
name|void
name|postHead
parameter_list|(
name|Page
operator|.
name|HTML
argument_list|<
name|_
argument_list|>
name|html
parameter_list|)
block|{   }
DECL|method|header ()
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|SubView
argument_list|>
name|header
parameter_list|()
block|{
return|return
name|HeaderBlock
operator|.
name|class
return|;
block|}
DECL|method|content ()
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|SubView
argument_list|>
name|content
parameter_list|()
block|{
return|return
name|LipsumBlock
operator|.
name|class
return|;
block|}
DECL|method|nav ()
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|SubView
argument_list|>
name|nav
parameter_list|()
block|{
return|return
name|NavBlock
operator|.
name|class
return|;
block|}
DECL|method|footer ()
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|SubView
argument_list|>
name|footer
parameter_list|()
block|{
return|return
name|FooterBlock
operator|.
name|class
return|;
block|}
block|}
end_class

end_unit

