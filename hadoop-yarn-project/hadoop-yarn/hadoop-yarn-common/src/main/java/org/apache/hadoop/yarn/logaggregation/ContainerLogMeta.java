begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.logaggregation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * The ContainerLogMeta includes:  *<ul>  *<li>The Container Id.</li>  *<li>The NodeManager Id.</li>  *<li>A list of {@link ContainerLogFileInfo}.</li>  *</ul>  *  */
end_comment

begin_class
DECL|class|ContainerLogMeta
specifier|public
class|class
name|ContainerLogMeta
block|{
DECL|field|containerId
specifier|private
name|String
name|containerId
decl_stmt|;
DECL|field|nodeId
specifier|private
name|String
name|nodeId
decl_stmt|;
DECL|field|logMeta
specifier|private
name|List
argument_list|<
name|ContainerLogFileInfo
argument_list|>
name|logMeta
decl_stmt|;
DECL|method|ContainerLogMeta (String containerId, String nodeId)
specifier|public
name|ContainerLogMeta
parameter_list|(
name|String
name|containerId
parameter_list|,
name|String
name|nodeId
parameter_list|)
block|{
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|logMeta
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|getNodeId ()
specifier|public
name|String
name|getNodeId
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeId
return|;
block|}
DECL|method|getContainerId ()
specifier|public
name|String
name|getContainerId
parameter_list|()
block|{
return|return
name|this
operator|.
name|containerId
return|;
block|}
DECL|method|addLogMeta (String fileName, String fileSize, String lastModificationTime)
specifier|public
name|void
name|addLogMeta
parameter_list|(
name|String
name|fileName
parameter_list|,
name|String
name|fileSize
parameter_list|,
name|String
name|lastModificationTime
parameter_list|)
block|{
name|logMeta
operator|.
name|add
argument_list|(
operator|new
name|ContainerLogFileInfo
argument_list|(
name|fileName
argument_list|,
name|fileSize
argument_list|,
name|lastModificationTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getContainerLogMeta ()
specifier|public
name|List
argument_list|<
name|ContainerLogFileInfo
argument_list|>
name|getContainerLogMeta
parameter_list|()
block|{
return|return
name|this
operator|.
name|logMeta
return|;
block|}
block|}
end_class

end_unit

