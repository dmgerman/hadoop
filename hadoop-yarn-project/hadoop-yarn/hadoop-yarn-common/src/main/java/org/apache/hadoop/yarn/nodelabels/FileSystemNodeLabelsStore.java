begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.nodelabels
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|AbstractFSNodeStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|FSStoreOpHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|op
operator|.
name|AddClusterLabelOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|FSStoreOpHandler
operator|.
name|StoreType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|op
operator|.
name|NodeToLabelOp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|nodelabels
operator|.
name|store
operator|.
name|op
operator|.
name|RemoveClusterLabelOp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|FileSystemNodeLabelsStore
specifier|public
class|class
name|FileSystemNodeLabelsStore
extends|extends
name|AbstractFSNodeStore
argument_list|<
name|CommonNodeLabelsManager
argument_list|>
implements|implements
name|NodeLabelsStore
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FileSystemNodeLabelsStore
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_DIR_NAME
specifier|protected
specifier|static
specifier|final
name|String
name|DEFAULT_DIR_NAME
init|=
literal|"node-labels"
decl_stmt|;
DECL|field|MIRROR_FILENAME
specifier|protected
specifier|static
specifier|final
name|String
name|MIRROR_FILENAME
init|=
literal|"nodelabel.mirror"
decl_stmt|;
DECL|field|EDITLOG_FILENAME
specifier|protected
specifier|static
specifier|final
name|String
name|EDITLOG_FILENAME
init|=
literal|"nodelabel.editlog"
decl_stmt|;
DECL|method|FileSystemNodeLabelsStore ()
name|FileSystemNodeLabelsStore
parameter_list|()
block|{
name|super
argument_list|(
name|StoreType
operator|.
name|NODE_LABEL_STORE
argument_list|)
expr_stmt|;
block|}
DECL|method|getDefaultFSNodeLabelsRootDir ()
specifier|private
name|String
name|getDefaultFSNodeLabelsRootDir
parameter_list|()
throws|throws
name|IOException
block|{
comment|// default is in local: /tmp/hadoop-yarn-${user}/node-labels/
return|return
literal|"file:///tmp/hadoop-yarn-"
operator|+
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
operator|+
literal|"/"
operator|+
name|DEFAULT_DIR_NAME
return|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf, CommonNodeLabelsManager mgr)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|CommonNodeLabelsManager
name|mgr
parameter_list|)
throws|throws
name|Exception
block|{
name|StoreSchema
name|schema
init|=
operator|new
name|StoreSchema
argument_list|(
name|EDITLOG_FILENAME
argument_list|,
name|MIRROR_FILENAME
argument_list|)
decl_stmt|;
name|initStore
argument_list|(
name|conf
argument_list|,
operator|new
name|Path
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|FS_NODE_LABELS_STORE_ROOT_DIR
argument_list|,
name|getDefaultFSNodeLabelsRootDir
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|schema
argument_list|,
name|mgr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|super
operator|.
name|closeFSStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|updateNodeToLabelsMappings (Map<NodeId, Set<String>> nodeToLabels)
specifier|public
name|void
name|updateNodeToLabelsMappings
parameter_list|(
name|Map
argument_list|<
name|NodeId
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|nodeToLabels
parameter_list|)
throws|throws
name|IOException
block|{
name|NodeToLabelOp
name|op
init|=
operator|new
name|NodeToLabelOp
argument_list|()
decl_stmt|;
name|writeToLog
argument_list|(
name|op
operator|.
name|setNodeToLabels
argument_list|(
name|nodeToLabels
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|storeNewClusterNodeLabels (List<NodeLabel> labels)
specifier|public
name|void
name|storeNewClusterNodeLabels
parameter_list|(
name|List
argument_list|<
name|NodeLabel
argument_list|>
name|labels
parameter_list|)
throws|throws
name|IOException
block|{
name|AddClusterLabelOp
name|op
init|=
operator|new
name|AddClusterLabelOp
argument_list|()
decl_stmt|;
name|writeToLog
argument_list|(
name|op
operator|.
name|setLabels
argument_list|(
name|labels
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeClusterNodeLabels (Collection<String> labels)
specifier|public
name|void
name|removeClusterNodeLabels
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|labels
parameter_list|)
throws|throws
name|IOException
block|{
name|RemoveClusterLabelOp
name|op
init|=
operator|new
name|RemoveClusterLabelOp
argument_list|()
decl_stmt|;
name|writeToLog
argument_list|(
name|op
operator|.
name|setLabels
argument_list|(
name|labels
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.hadoop.yarn.nodelabels.NodeLabelsStore#recover(boolean)      */
annotation|@
name|Override
DECL|method|recover ()
specifier|public
name|void
name|recover
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|super
operator|.
name|recoverFromStore
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

