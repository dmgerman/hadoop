begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.webapp.example
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|example
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|Controller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|HtmlPage
import|;
end_import

begin_comment
comment|/**  * The obligatory example. No xml/jsp/templates/config files! No  * proliferation of strange annotations either :)  *  *<p>3 in 1 example. Check results at  *<br>http://localhost:8888/hello and  *<br>http://localhost:8888/hello/html  *<br>http://localhost:8888/hello/json  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"YARN"
block|,
literal|"MapReduce"
block|}
argument_list|)
DECL|class|HelloWorld
specifier|public
class|class
name|HelloWorld
block|{
DECL|class|Hello
specifier|public
specifier|static
class|class
name|Hello
extends|extends
name|Controller
block|{
DECL|method|index ()
annotation|@
name|Override
specifier|public
name|void
name|index
parameter_list|()
block|{
name|renderText
argument_list|(
literal|"Hello world!"
argument_list|)
expr_stmt|;
block|}
DECL|method|html ()
specifier|public
name|void
name|html
parameter_list|()
block|{
name|setTitle
argument_list|(
literal|"Hello world!"
argument_list|)
expr_stmt|;
block|}
DECL|method|json ()
specifier|public
name|void
name|json
parameter_list|()
block|{
name|renderJSON
argument_list|(
literal|"Hello world!"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|HelloView
specifier|public
specifier|static
class|class
name|HelloView
extends|extends
name|HtmlPage
block|{
DECL|method|render (Page.HTML<_> html)
annotation|@
name|Override
specifier|protected
name|void
name|render
parameter_list|(
name|Page
operator|.
name|HTML
argument_list|<
name|_
argument_list|>
name|html
parameter_list|)
block|{
name|html
operator|.
comment|// produces valid html 4.01 strict
name|title
argument_list|(
name|$
argument_list|(
literal|"title"
argument_list|)
argument_list|)
operator|.
name|p
argument_list|(
literal|"#hello-for-css"
argument_list|)
operator|.
name|_
argument_list|(
name|$
argument_list|(
literal|"title"
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|WebApps
operator|.
name|$for
argument_list|(
operator|new
name|HelloWorld
argument_list|()
argument_list|)
operator|.
name|at
argument_list|(
literal|8888
argument_list|)
operator|.
name|inDevMode
argument_list|()
operator|.
name|start
argument_list|()
operator|.
name|joinThread
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

