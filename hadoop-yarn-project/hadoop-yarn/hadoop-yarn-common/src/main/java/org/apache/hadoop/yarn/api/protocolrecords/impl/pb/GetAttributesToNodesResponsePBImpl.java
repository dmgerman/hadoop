begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.protocolrecords.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
operator|.
name|NodeAttributePBImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|AttributeToNodesProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|NodeAttributeProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnServiceProtos
operator|.
name|GetAttributesToNodesResponseProto
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Attributes to nodes response.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|GetAttributesToNodesResponsePBImpl
specifier|public
class|class
name|GetAttributesToNodesResponsePBImpl
extends|extends
name|GetAttributesToNodesResponse
block|{
DECL|field|proto
specifier|private
name|GetAttributesToNodesResponseProto
name|proto
init|=
name|GetAttributesToNodesResponseProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
specifier|private
name|GetAttributesToNodesResponseProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
specifier|private
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|attributesToNodes
specifier|private
name|Map
argument_list|<
name|NodeAttribute
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|attributesToNodes
decl_stmt|;
DECL|method|GetAttributesToNodesResponsePBImpl ()
specifier|public
name|GetAttributesToNodesResponsePBImpl
parameter_list|()
block|{
name|this
operator|.
name|builder
operator|=
name|GetAttributesToNodesResponseProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|GetAttributesToNodesResponsePBImpl ( GetAttributesToNodesResponseProto proto)
specifier|public
name|GetAttributesToNodesResponsePBImpl
parameter_list|(
name|GetAttributesToNodesResponseProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|this
operator|.
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|initAttributesToNodes ()
specifier|private
name|void
name|initAttributesToNodes
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|attributesToNodes
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|YarnServiceProtos
operator|.
name|GetAttributesToNodesResponseProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|AttributeToNodesProto
argument_list|>
name|list
init|=
name|p
operator|.
name|getAttributeToNodesList
argument_list|()
decl_stmt|;
name|this
operator|.
name|attributesToNodes
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|AttributeToNodesProto
name|c
range|:
name|list
control|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|setNodes
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|c
operator|.
name|getHostnamesList
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|setNodes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|attributesToNodes
operator|.
name|put
argument_list|(
name|convertFromProtoFormat
argument_list|(
name|c
operator|.
name|getNodeAttribute
argument_list|()
argument_list|)
argument_list|,
name|setNodes
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|GetAttributesToNodesResponseProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
DECL|method|addAttributesToNodesToProto ()
specifier|private
name|void
name|addAttributesToNodesToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearAttributeToNodes
argument_list|()
expr_stmt|;
if|if
condition|(
name|attributesToNodes
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Iterable
argument_list|<
name|AttributeToNodesProto
argument_list|>
name|iterable
init|=
parameter_list|()
lambda|->
operator|new
name|Iterator
argument_list|<
name|AttributeToNodesProto
argument_list|>
argument_list|()
block|{
specifier|private
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|NodeAttribute
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|iter
operator|=
name|attributesToNodes
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|AttributeToNodesProto
name|next
parameter_list|()
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|NodeAttribute
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|now
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|hostNames
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|host
range|:
name|now
operator|.
name|getValue
argument_list|()
control|)
block|{
name|hostNames
operator|.
name|add
argument_list|(
name|host
argument_list|)
expr_stmt|;
block|}
return|return
name|AttributeToNodesProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNodeAttribute
argument_list|(
name|convertToProtoFormat
argument_list|(
name|now
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addAllHostnames
argument_list|(
name|hostNames
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|iter
operator|.
name|hasNext
argument_list|()
return|;
block|}
block|}
empty_stmt|;
name|builder
operator|.
name|addAllAttributeToNodes
parameter_list|(
name|iterable
parameter_list|)
constructor_decl|;
block|}
end_class

begin_function
DECL|method|convertFromProtoFormat (NodeAttributeProto p)
specifier|private
name|NodeAttributePBImpl
name|convertFromProtoFormat
parameter_list|(
name|NodeAttributeProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|NodeAttributePBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
end_function

begin_function
DECL|method|convertToProtoFormat (NodeAttribute t)
specifier|private
name|NodeAttributeProto
name|convertToProtoFormat
parameter_list|(
name|NodeAttribute
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|NodeAttributePBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
end_function

begin_function
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|attributesToNodes
operator|!=
literal|null
condition|)
block|{
name|addAttributesToNodesToProto
argument_list|()
expr_stmt|;
block|}
block|}
end_function

begin_function
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
block|}
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
end_function

begin_function
DECL|method|getProto ()
specifier|public
name|GetAttributesToNodesResponseProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
assert|assert
literal|false
operator|:
literal|"hashCode not designed"
assert|;
return|return
literal|0
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|this
operator|.
name|getProto
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|cast
argument_list|(
name|other
argument_list|)
operator|.
name|getProto
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|setAttributeToNodes (Map<NodeAttribute, Set<String>> map)
specifier|public
name|void
name|setAttributeToNodes
parameter_list|(
name|Map
argument_list|<
name|NodeAttribute
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|map
parameter_list|)
block|{
name|initAttributesToNodes
argument_list|()
expr_stmt|;
name|attributesToNodes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|attributesToNodes
operator|.
name|putAll
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|getAttributesToNodes ()
specifier|public
name|Map
argument_list|<
name|NodeAttribute
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|getAttributesToNodes
parameter_list|()
block|{
name|initAttributesToNodes
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|attributesToNodes
return|;
block|}
end_function

unit|}
end_unit

