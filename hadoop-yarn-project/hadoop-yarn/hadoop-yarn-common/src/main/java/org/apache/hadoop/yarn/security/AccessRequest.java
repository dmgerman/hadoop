begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * This request object contains all the context information to determine whether  * a user has permission to access the target entity.  * user       : the user who's currently accessing  * accessType : the access type against the entity.  * entity     : the target object user is accessing.  * appId      : the associated app Id for current access. This could be null  *              if no app is associated.  * appName    : the associated app name for current access. This could be null if  *              no app is associated.  * remoteAddress : The caller's remote ip address.  * forwardedAddresses : In case this is an http request, this contains the  *                    originating IP address of a client connecting to a web  *                    server through an HTTP proxy or load balancer. This  *                    parameter is null, if it's a RPC request.  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|AccessRequest
specifier|public
class|class
name|AccessRequest
block|{
DECL|field|entity
specifier|private
name|PrivilegedEntity
name|entity
decl_stmt|;
DECL|field|user
specifier|private
name|UserGroupInformation
name|user
decl_stmt|;
DECL|field|accessType
specifier|private
name|AccessType
name|accessType
decl_stmt|;
DECL|field|appId
specifier|private
name|String
name|appId
decl_stmt|;
DECL|field|appName
specifier|private
name|String
name|appName
decl_stmt|;
DECL|field|remoteAddress
specifier|private
name|String
name|remoteAddress
decl_stmt|;
DECL|field|forwardedAddresses
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|forwardedAddresses
decl_stmt|;
DECL|method|AccessRequest (PrivilegedEntity entity, UserGroupInformation user, AccessType accessType, String appId, String appName, String remoteAddress, List<String> forwardedAddresses)
specifier|public
name|AccessRequest
parameter_list|(
name|PrivilegedEntity
name|entity
parameter_list|,
name|UserGroupInformation
name|user
parameter_list|,
name|AccessType
name|accessType
parameter_list|,
name|String
name|appId
parameter_list|,
name|String
name|appName
parameter_list|,
name|String
name|remoteAddress
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|forwardedAddresses
parameter_list|)
block|{
name|this
operator|.
name|entity
operator|=
name|entity
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|accessType
operator|=
name|accessType
expr_stmt|;
name|this
operator|.
name|appId
operator|=
name|appId
expr_stmt|;
name|this
operator|.
name|appName
operator|=
name|appName
expr_stmt|;
name|this
operator|.
name|remoteAddress
operator|=
name|remoteAddress
expr_stmt|;
name|this
operator|.
name|forwardedAddresses
operator|=
name|forwardedAddresses
expr_stmt|;
block|}
DECL|method|getUser ()
specifier|public
name|UserGroupInformation
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|getAccessType ()
specifier|public
name|AccessType
name|getAccessType
parameter_list|()
block|{
return|return
name|accessType
return|;
block|}
DECL|method|getAppId ()
specifier|public
name|String
name|getAppId
parameter_list|()
block|{
return|return
name|appId
return|;
block|}
DECL|method|getAppName ()
specifier|public
name|String
name|getAppName
parameter_list|()
block|{
return|return
name|appName
return|;
block|}
DECL|method|getEntity ()
specifier|public
name|PrivilegedEntity
name|getEntity
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
DECL|method|getForwardedAddresses ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getForwardedAddresses
parameter_list|()
block|{
return|return
name|forwardedAddresses
return|;
block|}
DECL|method|getRemoteAddress ()
specifier|public
name|String
name|getRemoteAddress
parameter_list|()
block|{
return|return
name|remoteAddress
return|;
block|}
block|}
end_class

end_unit

