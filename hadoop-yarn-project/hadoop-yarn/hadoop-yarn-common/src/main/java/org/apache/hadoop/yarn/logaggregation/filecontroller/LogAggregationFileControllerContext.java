begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.logaggregation.filecontroller
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
operator|.
name|filecontroller
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAccessType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_comment
comment|/**  * {@code LogAggregationFileControllerContext} is a record used in  * the log aggregation process.  */
end_comment

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|LogAggregationFileControllerContext
specifier|public
class|class
name|LogAggregationFileControllerContext
block|{
DECL|field|logAggregationInRolling
specifier|private
specifier|final
name|boolean
name|logAggregationInRolling
decl_stmt|;
DECL|field|rollingMonitorInterval
specifier|private
specifier|final
name|long
name|rollingMonitorInterval
decl_stmt|;
DECL|field|remoteNodeLogFileForApp
specifier|private
specifier|final
name|Path
name|remoteNodeLogFileForApp
decl_stmt|;
DECL|field|nodeId
specifier|private
specifier|final
name|NodeId
name|nodeId
decl_stmt|;
DECL|field|userUgi
specifier|private
specifier|final
name|UserGroupInformation
name|userUgi
decl_stmt|;
DECL|field|appId
specifier|private
specifier|final
name|ApplicationId
name|appId
decl_stmt|;
DECL|field|remoteNodeTmpLogFileForApp
specifier|private
specifier|final
name|Path
name|remoteNodeTmpLogFileForApp
decl_stmt|;
DECL|field|appAcls
specifier|private
specifier|final
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
decl_stmt|;
DECL|field|logAggregationTimes
specifier|private
name|int
name|logAggregationTimes
init|=
literal|0
decl_stmt|;
DECL|field|cleanOldLogsTimes
specifier|private
name|int
name|cleanOldLogsTimes
init|=
literal|0
decl_stmt|;
DECL|field|uploadedLogsInThisCycle
specifier|private
name|boolean
name|uploadedLogsInThisCycle
decl_stmt|;
DECL|field|logUploadedTimeStamp
specifier|private
name|long
name|logUploadedTimeStamp
decl_stmt|;
DECL|method|LogAggregationFileControllerContext (Path remoteNodeLogFileForApp, Path remoteNodeTmpLogFileForApp, boolean logAggregationInRolling, long rollingMonitorInterval, ApplicationId appId, Map<ApplicationAccessType, String> appAcls, NodeId nodeId, UserGroupInformation userUgi)
specifier|public
name|LogAggregationFileControllerContext
parameter_list|(
name|Path
name|remoteNodeLogFileForApp
parameter_list|,
name|Path
name|remoteNodeTmpLogFileForApp
parameter_list|,
name|boolean
name|logAggregationInRolling
parameter_list|,
name|long
name|rollingMonitorInterval
parameter_list|,
name|ApplicationId
name|appId
parameter_list|,
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
parameter_list|,
name|NodeId
name|nodeId
parameter_list|,
name|UserGroupInformation
name|userUgi
parameter_list|)
block|{
name|this
operator|.
name|remoteNodeLogFileForApp
operator|=
name|remoteNodeLogFileForApp
expr_stmt|;
name|this
operator|.
name|remoteNodeTmpLogFileForApp
operator|=
name|remoteNodeTmpLogFileForApp
expr_stmt|;
name|this
operator|.
name|logAggregationInRolling
operator|=
name|logAggregationInRolling
expr_stmt|;
name|this
operator|.
name|rollingMonitorInterval
operator|=
name|rollingMonitorInterval
expr_stmt|;
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|this
operator|.
name|appId
operator|=
name|appId
expr_stmt|;
name|this
operator|.
name|appAcls
operator|=
name|appAcls
expr_stmt|;
name|this
operator|.
name|userUgi
operator|=
name|userUgi
expr_stmt|;
block|}
DECL|method|isUploadedLogsInThisCycle ()
specifier|public
name|boolean
name|isUploadedLogsInThisCycle
parameter_list|()
block|{
return|return
name|uploadedLogsInThisCycle
return|;
block|}
DECL|method|setUploadedLogsInThisCycle (boolean uploadedLogsInThisCycle)
specifier|public
name|void
name|setUploadedLogsInThisCycle
parameter_list|(
name|boolean
name|uploadedLogsInThisCycle
parameter_list|)
block|{
name|this
operator|.
name|uploadedLogsInThisCycle
operator|=
name|uploadedLogsInThisCycle
expr_stmt|;
block|}
DECL|method|getRemoteNodeLogFileForApp ()
specifier|public
name|Path
name|getRemoteNodeLogFileForApp
parameter_list|()
block|{
return|return
name|remoteNodeLogFileForApp
return|;
block|}
DECL|method|getRollingMonitorInterval ()
specifier|public
name|long
name|getRollingMonitorInterval
parameter_list|()
block|{
return|return
name|rollingMonitorInterval
return|;
block|}
DECL|method|isLogAggregationInRolling ()
specifier|public
name|boolean
name|isLogAggregationInRolling
parameter_list|()
block|{
return|return
name|logAggregationInRolling
return|;
block|}
DECL|method|getLogUploadTimeStamp ()
specifier|public
name|long
name|getLogUploadTimeStamp
parameter_list|()
block|{
return|return
name|logUploadedTimeStamp
return|;
block|}
DECL|method|setLogUploadTimeStamp (long uploadTimeStamp)
specifier|public
name|void
name|setLogUploadTimeStamp
parameter_list|(
name|long
name|uploadTimeStamp
parameter_list|)
block|{
name|this
operator|.
name|logUploadedTimeStamp
operator|=
name|uploadTimeStamp
expr_stmt|;
block|}
DECL|method|getNodeId ()
specifier|public
name|NodeId
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
DECL|method|getUserUgi ()
specifier|public
name|UserGroupInformation
name|getUserUgi
parameter_list|()
block|{
return|return
name|userUgi
return|;
block|}
DECL|method|getAppId ()
specifier|public
name|ApplicationId
name|getAppId
parameter_list|()
block|{
return|return
name|appId
return|;
block|}
DECL|method|getRemoteNodeTmpLogFileForApp ()
specifier|public
name|Path
name|getRemoteNodeTmpLogFileForApp
parameter_list|()
block|{
return|return
name|remoteNodeTmpLogFileForApp
return|;
block|}
DECL|method|increLogAggregationTimes ()
specifier|public
name|void
name|increLogAggregationTimes
parameter_list|()
block|{
name|this
operator|.
name|logAggregationTimes
operator|++
expr_stmt|;
block|}
DECL|method|increcleanupOldLogTimes ()
specifier|public
name|void
name|increcleanupOldLogTimes
parameter_list|()
block|{
name|this
operator|.
name|cleanOldLogsTimes
operator|++
expr_stmt|;
block|}
DECL|method|getLogAggregationTimes ()
specifier|public
name|int
name|getLogAggregationTimes
parameter_list|()
block|{
return|return
name|logAggregationTimes
return|;
block|}
DECL|method|getCleanOldLogsTimes ()
specifier|public
name|int
name|getCleanOldLogsTimes
parameter_list|()
block|{
return|return
name|cleanOldLogsTimes
return|;
block|}
DECL|method|getAppAcls ()
specifier|public
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|getAppAcls
parameter_list|()
block|{
return|return
name|appAcls
return|;
block|}
block|}
end_class

end_unit

