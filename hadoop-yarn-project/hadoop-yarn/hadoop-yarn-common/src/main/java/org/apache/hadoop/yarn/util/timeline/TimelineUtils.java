begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.util.timeline
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|timeline
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonGenerationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonMappingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Evolving
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|SecurityUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|VersionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineAbout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|YarnVersionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnJacksonJaxbJsonProvider
import|;
end_import

begin_comment
comment|/**  * The helper class for the timeline module.  *   */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Evolving
DECL|class|TimelineUtils
specifier|public
class|class
name|TimelineUtils
block|{
DECL|field|FLOW_NAME_TAG_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|FLOW_NAME_TAG_PREFIX
init|=
literal|"TIMELINE_FLOW_NAME_TAG"
decl_stmt|;
DECL|field|FLOW_VERSION_TAG_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|FLOW_VERSION_TAG_PREFIX
init|=
literal|"TIMELINE_FLOW_VERSION_TAG"
decl_stmt|;
DECL|field|FLOW_RUN_ID_TAG_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|FLOW_RUN_ID_TAG_PREFIX
init|=
literal|"TIMELINE_FLOW_RUN_ID_TAG"
decl_stmt|;
DECL|field|DEFAULT_FLOW_VERSION
specifier|public
specifier|final
specifier|static
name|String
name|DEFAULT_FLOW_VERSION
init|=
literal|"1"
decl_stmt|;
DECL|field|mapper
specifier|private
specifier|static
name|ObjectMapper
name|mapper
decl_stmt|;
static|static
block|{
name|mapper
operator|=
operator|new
name|ObjectMapper
argument_list|()
expr_stmt|;
name|YarnJacksonJaxbJsonProvider
operator|.
name|configObjectMapper
argument_list|(
name|mapper
argument_list|)
expr_stmt|;
block|}
comment|/**    * Serialize a POJO object into a JSON string not in a pretty format    *     * @param o    *          an object to serialize    * @return a JSON string    * @throws IOException    * @throws JsonMappingException    * @throws JsonGenerationException    */
DECL|method|dumpTimelineRecordtoJSON (Object o)
specifier|public
specifier|static
name|String
name|dumpTimelineRecordtoJSON
parameter_list|(
name|Object
name|o
parameter_list|)
throws|throws
name|JsonGenerationException
throws|,
name|JsonMappingException
throws|,
name|IOException
block|{
return|return
name|dumpTimelineRecordtoJSON
argument_list|(
name|o
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**    * Serialize a POJO object into a JSON string    *     * @param o    *          an object to serialize    * @param pretty    *          whether in a pretty format or not    * @return a JSON string    * @throws IOException    * @throws JsonMappingException    * @throws JsonGenerationException    */
DECL|method|dumpTimelineRecordtoJSON (Object o, boolean pretty)
specifier|public
specifier|static
name|String
name|dumpTimelineRecordtoJSON
parameter_list|(
name|Object
name|o
parameter_list|,
name|boolean
name|pretty
parameter_list|)
throws|throws
name|JsonGenerationException
throws|,
name|JsonMappingException
throws|,
name|IOException
block|{
if|if
condition|(
name|pretty
condition|)
block|{
return|return
name|mapper
operator|.
name|writerWithDefaultPrettyPrinter
argument_list|()
operator|.
name|writeValueAsString
argument_list|(
name|o
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|o
argument_list|)
return|;
block|}
block|}
comment|/**    * Returns whether the timeline service is enabled via configuration.    *    * @param conf the configuration    * @return whether the timeline service is enabled.    */
DECL|method|timelineServiceEnabled (Configuration conf)
specifier|public
specifier|static
name|boolean
name|timelineServiceEnabled
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_ENABLED
argument_list|)
return|;
block|}
comment|/**    * Returns the timeline service version. It does not check whether the    * timeline service itself is enabled.    *    * @param conf the configuration    * @return the timeline service version as a float.    */
DECL|method|getTimelineServiceVersion (Configuration conf)
specifier|public
specifier|static
name|float
name|getTimelineServiceVersion
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_VERSION
argument_list|)
return|;
block|}
comment|/**    * Returns whether the timeline service v.1.5 is enabled via configuration.    *    * @param conf the configuration    * @return whether the timeline service v.1.5 is enabled. V.1.5 refers to a    * version equal to 1.5.    */
DECL|method|timelineServiceV1_5Enabled (Configuration conf)
specifier|public
specifier|static
name|boolean
name|timelineServiceV1_5Enabled
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|timelineServiceEnabled
argument_list|(
name|conf
argument_list|)
operator|&&
name|Math
operator|.
name|abs
argument_list|(
name|getTimelineServiceVersion
argument_list|(
name|conf
argument_list|)
operator|-
literal|1.5
argument_list|)
operator|<
literal|0.00001
return|;
block|}
DECL|method|createTimelineAbout (String about)
specifier|public
specifier|static
name|TimelineAbout
name|createTimelineAbout
parameter_list|(
name|String
name|about
parameter_list|)
block|{
name|TimelineAbout
name|tsInfo
init|=
operator|new
name|TimelineAbout
argument_list|(
name|about
argument_list|)
decl_stmt|;
name|tsInfo
operator|.
name|setHadoopBuildVersion
argument_list|(
name|VersionInfo
operator|.
name|getBuildVersion
argument_list|()
argument_list|)
expr_stmt|;
name|tsInfo
operator|.
name|setHadoopVersion
argument_list|(
name|VersionInfo
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|tsInfo
operator|.
name|setHadoopVersionBuiltOn
argument_list|(
name|VersionInfo
operator|.
name|getDate
argument_list|()
argument_list|)
expr_stmt|;
name|tsInfo
operator|.
name|setTimelineServiceBuildVersion
argument_list|(
name|YarnVersionInfo
operator|.
name|getBuildVersion
argument_list|()
argument_list|)
expr_stmt|;
name|tsInfo
operator|.
name|setTimelineServiceVersion
argument_list|(
name|YarnVersionInfo
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|tsInfo
operator|.
name|setTimelineServiceVersionBuiltOn
argument_list|(
name|YarnVersionInfo
operator|.
name|getDate
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tsInfo
return|;
block|}
DECL|method|getTimelineTokenServiceAddress ( Configuration conf)
specifier|public
specifier|static
name|InetSocketAddress
name|getTimelineTokenServiceAddress
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|InetSocketAddress
name|timelineServiceAddr
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|YarnConfiguration
operator|.
name|useHttps
argument_list|(
name|conf
argument_list|)
condition|)
block|{
name|timelineServiceAddr
operator|=
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|timelineServiceAddr
operator|=
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_WEBAPP_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_TIMELINE_SERVICE_WEBAPP_PORT
argument_list|)
expr_stmt|;
block|}
return|return
name|timelineServiceAddr
return|;
block|}
DECL|method|buildTimelineTokenService (Configuration conf)
specifier|public
specifier|static
name|Text
name|buildTimelineTokenService
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|InetSocketAddress
name|timelineServiceAddr
init|=
name|getTimelineTokenServiceAddress
argument_list|(
name|conf
argument_list|)
decl_stmt|;
return|return
name|SecurityUtil
operator|.
name|buildTokenService
argument_list|(
name|timelineServiceAddr
argument_list|)
return|;
block|}
DECL|method|generateDefaultFlowName (String appName, ApplicationId appId)
specifier|public
specifier|static
name|String
name|generateDefaultFlowName
parameter_list|(
name|String
name|appName
parameter_list|,
name|ApplicationId
name|appId
parameter_list|)
block|{
return|return
operator|(
name|appName
operator|!=
literal|null
operator|&&
operator|!
name|appName
operator|.
name|equals
argument_list|(
name|YarnConfiguration
operator|.
name|DEFAULT_APPLICATION_NAME
argument_list|)
operator|)
condition|?
name|appName
else|:
literal|"flow_"
operator|+
name|appId
operator|.
name|getClusterTimestamp
argument_list|()
operator|+
literal|"_"
operator|+
name|appId
operator|.
name|getId
argument_list|()
return|;
block|}
comment|/**    * Generate flow name tag.    *    * @param flowName flow name that identifies a distinct flow application which    *                 can be run repeatedly over time    * @return flow name tag.    */
DECL|method|generateFlowNameTag (String flowName)
specifier|public
specifier|static
name|String
name|generateFlowNameTag
parameter_list|(
name|String
name|flowName
parameter_list|)
block|{
return|return
name|FLOW_NAME_TAG_PREFIX
operator|+
literal|":"
operator|+
name|flowName
return|;
block|}
comment|/**    * Generate flow version tag.    *    * @param flowVersion flow version that keeps track of the changes made to the    *                    flow    * @return flow version tag.    */
DECL|method|generateFlowVersionTag (String flowVersion)
specifier|public
specifier|static
name|String
name|generateFlowVersionTag
parameter_list|(
name|String
name|flowVersion
parameter_list|)
block|{
return|return
name|FLOW_VERSION_TAG_PREFIX
operator|+
literal|":"
operator|+
name|flowVersion
return|;
block|}
comment|/**    * Generate flow run ID tag.    *    * @param flowRunId flow run ID that identifies one instance (or specific    *                  execution) of that flow    * @return flow run id tag.    */
DECL|method|generateFlowRunIdTag (long flowRunId)
specifier|public
specifier|static
name|String
name|generateFlowRunIdTag
parameter_list|(
name|long
name|flowRunId
parameter_list|)
block|{
return|return
name|FLOW_RUN_ID_TAG_PREFIX
operator|+
literal|":"
operator|+
name|flowRunId
return|;
block|}
block|}
end_class

end_unit

