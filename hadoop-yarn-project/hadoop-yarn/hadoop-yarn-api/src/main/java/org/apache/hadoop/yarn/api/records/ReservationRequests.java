begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * {@link ReservationRequests} captures the set of resource and constraints the  * user cares about regarding a reservation.  *   * @see ReservationRequest  *   */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|ReservationRequests
specifier|public
specifier|abstract
class|class
name|ReservationRequests
block|{
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newInstance ( List<ReservationRequest> reservationResources, ReservationRequestInterpreter type)
specifier|public
specifier|static
name|ReservationRequests
name|newInstance
parameter_list|(
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|reservationResources
parameter_list|,
name|ReservationRequestInterpreter
name|type
parameter_list|)
block|{
name|ReservationRequests
name|reservationRequests
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ReservationRequests
operator|.
name|class
argument_list|)
decl_stmt|;
name|reservationRequests
operator|.
name|setReservationResources
argument_list|(
name|reservationResources
argument_list|)
expr_stmt|;
name|reservationRequests
operator|.
name|setInterpreter
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|reservationRequests
return|;
block|}
comment|/**    * Get the list of {@link ReservationRequest} representing the resources    * required by the application    *     * @return the list of {@link ReservationRequest}    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getReservationResources ()
specifier|public
specifier|abstract
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|getReservationResources
parameter_list|()
function_decl|;
comment|/**    * Set the list of {@link ReservationRequest} representing the resources    * required by the application    *     * @param reservationResources the list of {@link ReservationRequest}    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setReservationResources ( List<ReservationRequest> reservationResources)
specifier|public
specifier|abstract
name|void
name|setReservationResources
parameter_list|(
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|reservationResources
parameter_list|)
function_decl|;
comment|/**    * Get the {@link ReservationRequestInterpreter}, representing how the list of    * resources should be allocated, this captures temporal ordering and other    * constraints.    *     * @return the list of {@link ReservationRequestInterpreter}    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|getInterpreter ()
specifier|public
specifier|abstract
name|ReservationRequestInterpreter
name|getInterpreter
parameter_list|()
function_decl|;
comment|/**    * Set the {@link ReservationRequestInterpreter}, representing how the list of    * resources should be allocated, this captures temporal ordering and other    * constraints.    *     * @param interpreter the {@link ReservationRequestInterpreter} for this    *          reservation    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|setInterpreter (ReservationRequestInterpreter interpreter)
specifier|public
specifier|abstract
name|void
name|setInterpreter
parameter_list|(
name|ReservationRequestInterpreter
name|interpreter
parameter_list|)
function_decl|;
block|}
end_class

end_unit

