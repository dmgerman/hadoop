begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * {@code UpdateContainerError} is used by the Scheduler to notify the  * ApplicationMaster of an UpdateContainerRequest it cannot satisfy due to  * an error in the request. It includes the update request as well as  * a reason for why the request was not satisfiable.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|UpdateContainerError
specifier|public
specifier|abstract
class|class
name|UpdateContainerError
block|{
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|newInstance (String reason, UpdateContainerRequest updateContainerRequest)
specifier|public
specifier|static
name|UpdateContainerError
name|newInstance
parameter_list|(
name|String
name|reason
parameter_list|,
name|UpdateContainerRequest
name|updateContainerRequest
parameter_list|)
block|{
name|UpdateContainerError
name|error
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|UpdateContainerError
operator|.
name|class
argument_list|)
decl_stmt|;
name|error
operator|.
name|setReason
argument_list|(
name|reason
argument_list|)
expr_stmt|;
name|error
operator|.
name|setUpdateContainerRequest
argument_list|(
name|updateContainerRequest
argument_list|)
expr_stmt|;
return|return
name|error
return|;
block|}
comment|/**    * Get reason why the update request was not satisfiable.    * @return Reason    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|getReason ()
specifier|public
specifier|abstract
name|String
name|getReason
parameter_list|()
function_decl|;
comment|/**    * Set reason why the update request was not satisfiable.    * @param reason Reason    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|setReason (String reason)
specifier|public
specifier|abstract
name|void
name|setReason
parameter_list|(
name|String
name|reason
parameter_list|)
function_decl|;
comment|/**    * Get current container version.    * @return Current container Version.    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|getCurrentContainerVersion ()
specifier|public
specifier|abstract
name|int
name|getCurrentContainerVersion
parameter_list|()
function_decl|;
comment|/**    * Set current container version.    * @param currentVersion Current container version.    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|setCurrentContainerVersion (int currentVersion)
specifier|public
specifier|abstract
name|void
name|setCurrentContainerVersion
parameter_list|(
name|int
name|currentVersion
parameter_list|)
function_decl|;
comment|/**    * Get the {@code UpdateContainerRequest} that was not satisfiable.    * @return UpdateContainerRequest    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|getUpdateContainerRequest ()
specifier|public
specifier|abstract
name|UpdateContainerRequest
name|getUpdateContainerRequest
parameter_list|()
function_decl|;
comment|/**    * Set the {@code UpdateContainerRequest} that was not satisfiable.    * @param updateContainerRequest Update Container Request    */
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|method|setUpdateContainerRequest ( UpdateContainerRequest updateContainerRequest)
specifier|public
specifier|abstract
name|void
name|setUpdateContainerRequest
parameter_list|(
name|UpdateContainerRequest
name|updateContainerRequest
parameter_list|)
function_decl|;
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|2153
decl_stmt|;
name|int
name|result
init|=
literal|2459
decl_stmt|;
name|String
name|reason
init|=
name|getReason
argument_list|()
decl_stmt|;
name|UpdateContainerRequest
name|updateReq
init|=
name|getUpdateContainerRequest
argument_list|()
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|reason
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|reason
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|updateReq
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|updateReq
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"UpdateContainerError{reason="
operator|+
name|getReason
argument_list|()
operator|+
literal|", "
operator|+
literal|"currentVersion="
operator|+
name|getCurrentContainerVersion
argument_list|()
operator|+
literal|", "
operator|+
literal|"req="
operator|+
name|getUpdateContainerRequest
argument_list|()
operator|+
literal|"}"
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|getClass
argument_list|()
operator|!=
name|obj
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|UpdateContainerError
name|other
init|=
operator|(
name|UpdateContainerError
operator|)
name|obj
decl_stmt|;
name|String
name|reason
init|=
name|getReason
argument_list|()
decl_stmt|;
if|if
condition|(
name|reason
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|getReason
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|reason
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReason
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|UpdateContainerRequest
name|req
init|=
name|getUpdateContainerRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|getUpdateContainerRequest
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|req
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUpdateContainerRequest
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|getCurrentContainerVersion
argument_list|()
operator|==
name|other
operator|.
name|getCurrentContainerVersion
argument_list|()
return|;
block|}
block|}
end_class

end_unit

