begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.api.protocolrecords
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Stable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|DecommissionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_class
annotation|@
name|Private
annotation|@
name|Unstable
DECL|class|RefreshNodesRequest
specifier|public
specifier|abstract
class|class
name|RefreshNodesRequest
block|{
annotation|@
name|Private
annotation|@
name|Stable
DECL|method|newInstance ()
specifier|public
specifier|static
name|RefreshNodesRequest
name|newInstance
parameter_list|()
block|{
name|RefreshNodesRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|RefreshNodesRequest
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Private
annotation|@
name|Unstable
DECL|method|newInstance ( DecommissionType decommissionType)
specifier|public
specifier|static
name|RefreshNodesRequest
name|newInstance
parameter_list|(
name|DecommissionType
name|decommissionType
parameter_list|)
block|{
name|RefreshNodesRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|RefreshNodesRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setDecommissionType
argument_list|(
name|decommissionType
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Private
annotation|@
name|Unstable
DECL|method|newInstance ( DecommissionType decommissionType, Integer timeout)
specifier|public
specifier|static
name|RefreshNodesRequest
name|newInstance
parameter_list|(
name|DecommissionType
name|decommissionType
parameter_list|,
name|Integer
name|timeout
parameter_list|)
block|{
name|RefreshNodesRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|RefreshNodesRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setDecommissionType
argument_list|(
name|decommissionType
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDecommissionTimeout
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
comment|/**    * Set the DecommissionType    *     * @param decommissionType    */
DECL|method|setDecommissionType (DecommissionType decommissionType)
specifier|public
specifier|abstract
name|void
name|setDecommissionType
parameter_list|(
name|DecommissionType
name|decommissionType
parameter_list|)
function_decl|;
comment|/**    * Get the DecommissionType    *     * @return decommissionType    */
DECL|method|getDecommissionType ()
specifier|public
specifier|abstract
name|DecommissionType
name|getDecommissionType
parameter_list|()
function_decl|;
comment|/**    * Set the DecommissionTimeout.    *    * @param timeout graceful decommission timeout in seconds    */
DECL|method|setDecommissionTimeout (Integer timeout)
specifier|public
specifier|abstract
name|void
name|setDecommissionTimeout
parameter_list|(
name|Integer
name|timeout
parameter_list|)
function_decl|;
comment|/**    * Get the DecommissionTimeout.    *    * @return decommissionTimeout    */
DECL|method|getDecommissionTimeout ()
specifier|public
specifier|abstract
name|Integer
name|getDecommissionTimeout
parameter_list|()
function_decl|;
block|}
end_class

end_unit

