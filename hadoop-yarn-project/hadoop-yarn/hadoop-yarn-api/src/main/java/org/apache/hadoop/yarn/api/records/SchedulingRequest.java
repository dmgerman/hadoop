begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|resource
operator|.
name|PlacementConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_comment
comment|/**  * {@code SchedulingRequest} represents a request made by an application to the  * {@code ResourceManager} to obtain an allocation. It is similar to the  * {@link ResourceRequest}. However, it is more complete than the latter, as it  * allows applications to specify allocation tags (e.g., to express that an  * allocation belongs to {@code Spark} or is an {@code HBase-master}), as well  * as involved {@link PlacementConstraint}s (e.g., anti-affinity between Spark  * and HBase allocations).  *  * The size specification of the allocation is in {@code ResourceSizing}.  */
end_comment

begin_class
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|SchedulingRequest
specifier|public
specifier|abstract
class|class
name|SchedulingRequest
block|{
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newInstance (long allocationRequestId, Priority priority, ExecutionTypeRequest executionType, Set<String> allocationTags, ResourceSizing resourceSizing, PlacementConstraint placementConstraintExpression)
specifier|public
specifier|static
name|SchedulingRequest
name|newInstance
parameter_list|(
name|long
name|allocationRequestId
parameter_list|,
name|Priority
name|priority
parameter_list|,
name|ExecutionTypeRequest
name|executionType
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|allocationTags
parameter_list|,
name|ResourceSizing
name|resourceSizing
parameter_list|,
name|PlacementConstraint
name|placementConstraintExpression
parameter_list|)
block|{
return|return
name|SchedulingRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|allocationRequestId
argument_list|(
name|allocationRequestId
argument_list|)
operator|.
name|priority
argument_list|(
name|priority
argument_list|)
operator|.
name|executionType
argument_list|(
name|executionType
argument_list|)
operator|.
name|allocationTags
argument_list|(
name|allocationTags
argument_list|)
operator|.
name|resourceSizing
argument_list|(
name|resourceSizing
argument_list|)
operator|.
name|placementConstraintExpression
argument_list|(
name|placementConstraintExpression
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|newBuilder ()
specifier|public
specifier|static
name|SchedulingRequestBuilder
name|newBuilder
parameter_list|()
block|{
return|return
operator|new
name|SchedulingRequestBuilder
argument_list|()
return|;
block|}
comment|/**    * Class to construct instances of {@link SchedulingRequest} with specific    * options.    */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|class|SchedulingRequestBuilder
specifier|public
specifier|static
specifier|final
class|class
name|SchedulingRequestBuilder
block|{
DECL|field|schedulingRequest
specifier|private
name|SchedulingRequest
name|schedulingRequest
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|SchedulingRequest
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|SchedulingRequestBuilder ()
specifier|private
name|SchedulingRequestBuilder
parameter_list|()
block|{
name|schedulingRequest
operator|.
name|setAllocationRequestId
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|schedulingRequest
operator|.
name|setPriority
argument_list|(
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|schedulingRequest
operator|.
name|setExecutionType
argument_list|(
name|ExecutionTypeRequest
operator|.
name|newInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Set the<code>allocationRequestId</code> of the request.      *      * @see SchedulingRequest#setAllocationRequestId(long)      * @param allocationRequestId<code>allocationRequestId</code> of the      *          request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|allocationRequestId ( long allocationRequestId)
specifier|public
name|SchedulingRequestBuilder
name|allocationRequestId
parameter_list|(
name|long
name|allocationRequestId
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setAllocationRequestId
argument_list|(
name|allocationRequestId
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the<code>priority</code> of the request.      *      * @param priority<code>priority</code> of the request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      * @see SchedulingRequest#setPriority(Priority)      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|priority (Priority priority)
specifier|public
name|SchedulingRequestBuilder
name|priority
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the<code>executionType</code> of the request.      *      * @see SchedulingRequest#setExecutionType(ExecutionTypeRequest)      * @param executionType<code>executionType</code> of the request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|executionType ( ExecutionTypeRequest executionType)
specifier|public
name|SchedulingRequestBuilder
name|executionType
parameter_list|(
name|ExecutionTypeRequest
name|executionType
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setExecutionType
argument_list|(
name|executionType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the<code>allocationTags</code> of the request.      *      * @see SchedulingRequest#setAllocationTags(Set)      * @param allocationTags<code>allocationsTags</code> of the request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|allocationTags (Set<String> allocationTags)
specifier|public
name|SchedulingRequestBuilder
name|allocationTags
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|allocationTags
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setAllocationTags
argument_list|(
name|allocationTags
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the<code>executionType</code> of the request.      *      * @see SchedulingRequest#setResourceSizing(ResourceSizing)      * @param resourceSizing<code>resourceSizing</code> of the request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|resourceSizing ( ResourceSizing resourceSizing)
specifier|public
name|SchedulingRequestBuilder
name|resourceSizing
parameter_list|(
name|ResourceSizing
name|resourceSizing
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setResourceSizing
argument_list|(
name|resourceSizing
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Set the<code>placementConstraintExpression</code> of the request.      *      * @see SchedulingRequest#setPlacementConstraint(      *      PlacementConstraint)      * @param placementConstraintExpression<code>placementConstraints</code> of      *          the request      * @return {@link SchedulingRequest.SchedulingRequestBuilder}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|placementConstraintExpression ( PlacementConstraint placementConstraintExpression)
specifier|public
name|SchedulingRequestBuilder
name|placementConstraintExpression
parameter_list|(
name|PlacementConstraint
name|placementConstraintExpression
parameter_list|)
block|{
name|schedulingRequest
operator|.
name|setPlacementConstraint
argument_list|(
name|placementConstraintExpression
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Return generated {@link SchedulingRequest} object.      *      * @return {@link SchedulingRequest}      */
annotation|@
name|Public
annotation|@
name|Unstable
DECL|method|build ()
specifier|public
name|SchedulingRequest
name|build
parameter_list|()
block|{
return|return
name|schedulingRequest
return|;
block|}
block|}
DECL|method|getAllocationRequestId ()
specifier|public
specifier|abstract
name|long
name|getAllocationRequestId
parameter_list|()
function_decl|;
DECL|method|setAllocationRequestId (long allocationRequestId)
specifier|public
specifier|abstract
name|void
name|setAllocationRequestId
parameter_list|(
name|long
name|allocationRequestId
parameter_list|)
function_decl|;
DECL|method|getPriority ()
specifier|public
specifier|abstract
name|Priority
name|getPriority
parameter_list|()
function_decl|;
DECL|method|setPriority (Priority priority)
specifier|public
specifier|abstract
name|void
name|setPriority
parameter_list|(
name|Priority
name|priority
parameter_list|)
function_decl|;
DECL|method|getExecutionType ()
specifier|public
specifier|abstract
name|ExecutionTypeRequest
name|getExecutionType
parameter_list|()
function_decl|;
DECL|method|setExecutionType (ExecutionTypeRequest executionType)
specifier|public
specifier|abstract
name|void
name|setExecutionType
parameter_list|(
name|ExecutionTypeRequest
name|executionType
parameter_list|)
function_decl|;
DECL|method|getAllocationTags ()
specifier|public
specifier|abstract
name|Set
argument_list|<
name|String
argument_list|>
name|getAllocationTags
parameter_list|()
function_decl|;
DECL|method|setAllocationTags (Set<String> allocationTags)
specifier|public
specifier|abstract
name|void
name|setAllocationTags
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|allocationTags
parameter_list|)
function_decl|;
DECL|method|getResourceSizing ()
specifier|public
specifier|abstract
name|ResourceSizing
name|getResourceSizing
parameter_list|()
function_decl|;
DECL|method|setResourceSizing (ResourceSizing resourceSizing)
specifier|public
specifier|abstract
name|void
name|setResourceSizing
parameter_list|(
name|ResourceSizing
name|resourceSizing
parameter_list|)
function_decl|;
DECL|method|getPlacementConstraint ()
specifier|public
specifier|abstract
name|PlacementConstraint
name|getPlacementConstraint
parameter_list|()
function_decl|;
DECL|method|setPlacementConstraint ( PlacementConstraint placementConstraint)
specifier|public
specifier|abstract
name|void
name|setPlacementConstraint
parameter_list|(
name|PlacementConstraint
name|placementConstraint
parameter_list|)
function_decl|;
block|}
end_class

end_unit

