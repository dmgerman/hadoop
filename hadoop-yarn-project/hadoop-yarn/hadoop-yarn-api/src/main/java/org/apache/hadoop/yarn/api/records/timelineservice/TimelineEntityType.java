begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_enum
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|enum|TimelineEntityType
specifier|public
enum|enum
name|TimelineEntityType
block|{
DECL|enumConstant|YARN_CLUSTER
name|YARN_CLUSTER
block|,
DECL|enumConstant|YARN_FLOW
name|YARN_FLOW
block|,
DECL|enumConstant|YARN_APPLICATION
name|YARN_APPLICATION
block|,
DECL|enumConstant|YARN_APPLICATION_ATTEMPT
name|YARN_APPLICATION_ATTEMPT
block|,
DECL|enumConstant|YARN_CONTAINER
name|YARN_CONTAINER
block|,
DECL|enumConstant|YARN_USER
name|YARN_USER
block|,
DECL|enumConstant|YARN_QUEUE
name|YARN_QUEUE
block|;
DECL|method|isParent (TimelineEntityType type)
specifier|public
name|boolean
name|isParent
parameter_list|(
name|TimelineEntityType
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|this
condition|)
block|{
case|case
name|YARN_CLUSTER
case|:
return|return
literal|false
return|;
case|case
name|YARN_FLOW
case|:
return|return
name|YARN_FLOW
operator|==
name|type
operator|||
name|YARN_CLUSTER
operator|==
name|type
return|;
case|case
name|YARN_APPLICATION
case|:
return|return
name|YARN_FLOW
operator|==
name|type
operator|||
name|YARN_CLUSTER
operator|==
name|type
return|;
case|case
name|YARN_APPLICATION_ATTEMPT
case|:
return|return
name|YARN_APPLICATION
operator|==
name|type
return|;
case|case
name|YARN_CONTAINER
case|:
return|return
name|YARN_APPLICATION_ATTEMPT
operator|==
name|type
return|;
case|case
name|YARN_QUEUE
case|:
return|return
name|YARN_QUEUE
operator|==
name|type
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
DECL|method|isChild (TimelineEntityType type)
specifier|public
name|boolean
name|isChild
parameter_list|(
name|TimelineEntityType
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|this
condition|)
block|{
case|case
name|YARN_CLUSTER
case|:
return|return
name|YARN_FLOW
operator|==
name|type
operator|||
name|YARN_APPLICATION
operator|==
name|type
return|;
case|case
name|YARN_FLOW
case|:
return|return
name|YARN_FLOW
operator|==
name|type
operator|||
name|YARN_APPLICATION
operator|==
name|type
return|;
case|case
name|YARN_APPLICATION
case|:
return|return
name|YARN_APPLICATION_ATTEMPT
operator|==
name|type
return|;
case|case
name|YARN_APPLICATION_ATTEMPT
case|:
return|return
name|YARN_CONTAINER
operator|==
name|type
return|;
case|case
name|YARN_CONTAINER
case|:
return|return
literal|false
return|;
case|case
name|YARN_QUEUE
case|:
return|return
name|YARN_QUEUE
operator|==
name|type
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
block|}
end_enum

end_unit

