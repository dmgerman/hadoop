begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.protocolrecords
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ContainerManagementProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalizationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|SerializedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * The response sent by the node manager to an application master when  * localization statuses are requested.  *  * @see ContainerManagementProtocol#getLocalizationStatuses(  *        GetLocalizationStatusesRequest)  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|GetLocalizationStatusesResponse
specifier|public
specifier|abstract
class|class
name|GetLocalizationStatusesResponse
block|{
DECL|method|newInstance ( Map<ContainerId, List<LocalizationStatus>> statuses, Map<ContainerId, SerializedException> failedRequests)
specifier|public
specifier|static
name|GetLocalizationStatusesResponse
name|newInstance
parameter_list|(
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|List
argument_list|<
name|LocalizationStatus
argument_list|>
argument_list|>
name|statuses
parameter_list|,
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|SerializedException
argument_list|>
name|failedRequests
parameter_list|)
block|{
name|GetLocalizationStatusesResponse
name|response
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetLocalizationStatusesResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setLocalizationStatuses
argument_list|(
name|statuses
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
comment|/**    * Get all the container localization statuses.    *    * @return container localization statuses.    */
specifier|public
specifier|abstract
name|Map
argument_list|<
name|ContainerId
argument_list|,
DECL|method|getLocalizationStatuses ()
name|List
argument_list|<
name|LocalizationStatus
argument_list|>
argument_list|>
name|getLocalizationStatuses
parameter_list|()
function_decl|;
comment|/**    * Sets the container localization statuses.    *    * @param statuses container localization statuses.    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|method|setLocalizationStatuses ( Map<ContainerId, List<LocalizationStatus>> statuses)
specifier|public
specifier|abstract
name|void
name|setLocalizationStatuses
parameter_list|(
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|List
argument_list|<
name|LocalizationStatus
argument_list|>
argument_list|>
name|statuses
parameter_list|)
function_decl|;
comment|/**    * Get the containerId-to-exception map in which the exception indicates error    * from per container for failed requests.    *    * @return map of containerId-to-exception    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|method|getFailedRequests ()
specifier|public
specifier|abstract
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|SerializedException
argument_list|>
name|getFailedRequests
parameter_list|()
function_decl|;
comment|/**    * Set the containerId-to-exception map in which the exception indicates error    * from per container for failed request.    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|method|setFailedRequests ( Map<ContainerId, SerializedException> failedContainers)
specifier|public
specifier|abstract
name|void
name|setFailedRequests
parameter_list|(
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|SerializedException
argument_list|>
name|failedContainers
parameter_list|)
function_decl|;
block|}
end_class

end_unit

