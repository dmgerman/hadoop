begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_comment
comment|/**  * Class to describe all supported forms of namespaces for an allocation tag.  */
end_comment

begin_enum
DECL|enum|AllocationTagNamespaceType
specifier|public
enum|enum
name|AllocationTagNamespaceType
block|{
DECL|enumConstant|SELF
name|SELF
argument_list|(
literal|"self"
argument_list|)
block|,
DECL|enumConstant|NOT_SELF
name|NOT_SELF
argument_list|(
literal|"not-self"
argument_list|)
block|,
DECL|enumConstant|APP_ID
name|APP_ID
argument_list|(
literal|"app-id"
argument_list|)
block|,
DECL|enumConstant|APP_TAG
name|APP_TAG
argument_list|(
literal|"app-tag"
argument_list|)
block|,
DECL|enumConstant|ALL
name|ALL
argument_list|(
literal|"all"
argument_list|)
block|;
DECL|field|typeKeyword
specifier|private
name|String
name|typeKeyword
decl_stmt|;
DECL|method|AllocationTagNamespaceType (String keyword)
name|AllocationTagNamespaceType
parameter_list|(
name|String
name|keyword
parameter_list|)
block|{
name|this
operator|.
name|typeKeyword
operator|=
name|keyword
expr_stmt|;
block|}
DECL|method|getTypeKeyword ()
specifier|public
name|String
name|getTypeKeyword
parameter_list|()
block|{
return|return
name|this
operator|.
name|typeKeyword
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|this
operator|.
name|getTypeKeyword
argument_list|()
return|;
block|}
block|}
end_enum

end_unit

