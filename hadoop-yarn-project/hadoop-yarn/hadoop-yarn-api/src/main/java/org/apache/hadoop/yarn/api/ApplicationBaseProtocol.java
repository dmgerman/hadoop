begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Public
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Stable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|retry
operator|.
name|Idempotent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_comment
comment|/**  *<p>  * The protocol between clients and the<code>ResourceManager</code> or  *<code>ApplicationHistoryServer</code> to get information on applications,  * application attempts and containers.  *</p>  *  */
end_comment

begin_interface
annotation|@
name|Private
annotation|@
name|Unstable
DECL|interface|ApplicationBaseProtocol
specifier|public
interface|interface
name|ApplicationBaseProtocol
block|{
comment|/**    *<p>    * The interface used by clients to get a report of an Application from the    *<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>.    *</p>    *    *<p>    * The client, via {@link GetApplicationReportRequest} provides the    * {@link ApplicationId} of the application.    *</p>    *    *<p>    * In secure mode,the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code> verifies access to the application,    * queue etc. before accepting the request.    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetApplicationReportResponse} which includes the    * {@link ApplicationReport} for the application.    *</p>    *    *<p>    * If the user does not have<code>VIEW_APP</code> access then the following    * fields in the report will be set to stubbed values:    *<ul>    *<li>host - set to "N/A"</li>    *<li>RPC port - set to -1</li>    *<li>client token - set to "N/A"</li>    *<li>diagnostics - set to "N/A"</li>    *<li>tracking URL - set to "N/A"</li>    *<li>original tracking URL - set to "N/A"</li>    *<li>resource usage report - all values are -1</li>    *</ul>    *</p>    *    * @param request    *          request for an application report    * @return application report    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Stable
annotation|@
name|Idempotent
DECL|method|getApplicationReport ( GetApplicationReportRequest request)
specifier|public
name|GetApplicationReportResponse
name|getApplicationReport
parameter_list|(
name|GetApplicationReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get a report of Applications matching the    * filters defined by {@link GetApplicationsRequest} in the cluster from the    *<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>.    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetApplicationsResponse} which includes the    * {@link ApplicationReport} for the applications.    *</p>    *    *<p>    * If the user does not have<code>VIEW_APP</code> access for an application    * then the corresponding report will be filtered as described in    * {@link #getApplicationReport(GetApplicationReportRequest)}.    *</p>    *    * @param request    *          request for report on applications    * @return report on applications matching the given application types defined    *         in the request    * @throws YarnException    * @throws IOException    * @see GetApplicationsRequest    */
annotation|@
name|Public
annotation|@
name|Stable
annotation|@
name|Idempotent
specifier|public
name|GetApplicationsResponse
DECL|method|getApplications (GetApplicationsRequest request)
name|getApplications
parameter_list|(
name|GetApplicationsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get a report of an Application Attempt    * from the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code>    *</p>    *    *<p>    * The client, via {@link GetApplicationAttemptReportRequest} provides the    * {@link ApplicationAttemptId} of the application attempt.    *</p>    *    *<p>    * In secure mode,the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code> verifies access to the method before    * accepting the request.    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetApplicationAttemptReportResponse} which includes    * the {@link ApplicationAttemptReport} for the application attempt.    *</p>    *    *<p>    * If the user does not have<code>VIEW_APP</code> access then the following    * fields in the report will be set to stubbed values:    *<ul>    *<li>host</li>    *<li>RPC port</li>    *<li>client token</li>    *<li>diagnostics - set to "N/A"</li>    *<li>tracking URL</li>    *</ul>    *</p>    *    * @param request    *          request for an application attempt report    * @return application attempt report    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|getApplicationAttemptReport ( GetApplicationAttemptReportRequest request)
specifier|public
name|GetApplicationAttemptReportResponse
name|getApplicationAttemptReport
parameter_list|(
name|GetApplicationAttemptReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get a report of all Application attempts    * in the cluster from the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code>    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetApplicationAttemptsRequest} which includes the    * {@link ApplicationAttemptReport} for all the applications attempts of a    * specified application attempt.    *</p>    *    *<p>    * If the user does not have<code>VIEW_APP</code> access for an application    * then the corresponding report will be filtered as described in    * {@link #getApplicationAttemptReport(GetApplicationAttemptReportRequest)}.    *</p>    *    * @param request    *          request for reports on all application attempts of an application    * @return reports on all application attempts of an application    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|getApplicationAttempts ( GetApplicationAttemptsRequest request)
specifier|public
name|GetApplicationAttemptsResponse
name|getApplicationAttempts
parameter_list|(
name|GetApplicationAttemptsRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get a report of an Container from the    *<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    *</p>    *    *<p>    * The client, via {@link GetContainerReportRequest} provides the    * {@link ContainerId} of the container.    *</p>    *    *<p>    * In secure mode,the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code> verifies access to the method before    * accepting the request.    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetContainerReportResponse} which includes the    * {@link ContainerReport} for the container.    *</p>    *    * @param request    *          request for a container report    * @return container report    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|getContainerReport ( GetContainerReportRequest request)
specifier|public
name|GetContainerReportResponse
name|getContainerReport
parameter_list|(
name|GetContainerReportRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get a report of Containers for an    * application attempt from the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code>    *</p>    *    *<p>    * The client, via {@link GetContainersRequest} provides the    * {@link ApplicationAttemptId} of the application attempt.    *</p>    *    *<p>    * In secure mode,the<code>ResourceManager</code> or    *<code>ApplicationHistoryServer</code> verifies access to the method before    * accepting the request.    *</p>    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with a {@link GetContainersResponse} which includes a list of    * {@link ContainerReport} for all the containers of a specific application    * attempt.    *</p>    *    * @param request    *          request for a list of container reports of an application attempt.    * @return reports on all containers of an application attempt    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|getContainers (GetContainersRequest request)
specifier|public
name|GetContainersResponse
name|getContainers
parameter_list|(
name|GetContainersRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    *<p>    * The interface used by clients to get delegation token, enabling the    * containers to be able to talk to the service using those tokens.    *    *<p>    * The<code>ResourceManager</code> or<code>ApplicationHistoryServer</code>    * responds with the delegation {@link Token} that can be used by the client    * to speak to this service.    *    * @param request    *          request to get a delegation token for the client.    * @return delegation token that can be used to talk to this service    * @throws YarnException    * @throws IOException    */
annotation|@
name|Public
annotation|@
name|Stable
annotation|@
name|Idempotent
DECL|method|getDelegationToken ( GetDelegationTokenRequest request)
specifier|public
name|GetDelegationTokenResponse
name|getDelegationToken
parameter_list|(
name|GetDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    * Renew an existing delegation {@link Token}.    *    * @param request    *          the delegation token to be renewed.    * @return the new expiry time for the delegation token.    * @throws YarnException    * @throws IOException    */
annotation|@
name|Private
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|renewDelegationToken ( RenewDelegationTokenRequest request)
specifier|public
name|RenewDelegationTokenResponse
name|renewDelegationToken
parameter_list|(
name|RenewDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
comment|/**    * Cancel an existing delegation {@link Token}.    *    * @param request    *          the delegation token to be cancelled.    * @return an empty response.    * @throws YarnException    * @throws IOException    */
annotation|@
name|Private
annotation|@
name|Unstable
annotation|@
name|Idempotent
DECL|method|cancelDelegationToken ( CancelDelegationTokenRequest request)
specifier|public
name|CancelDelegationTokenResponse
name|cancelDelegationToken
parameter_list|(
name|CancelDelegationTokenRequest
name|request
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
function_decl|;
block|}
end_interface

end_unit

