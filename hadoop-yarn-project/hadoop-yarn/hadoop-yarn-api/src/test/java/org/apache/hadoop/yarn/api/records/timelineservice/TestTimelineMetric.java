begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestTimelineMetric
class|class
name|TestTimelineMetric
block|{
annotation|@
name|Test
DECL|method|testTimelineMetricAggregation ()
name|void
name|testTimelineMetricAggregation
parameter_list|()
block|{
name|long
name|ts
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
comment|// single_value metric add against null metric
name|TimelineMetric
name|m1
init|=
name|getSingleValueMetric
argument_list|(
literal|"MEGA_BYTES_MILLIS"
argument_list|,
name|TimelineMetricOperation
operator|.
name|SUM
argument_list|,
name|ts
argument_list|,
literal|10000L
argument_list|)
decl_stmt|;
name|TimelineMetric
name|aggregatedMetric
init|=
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10000L
argument_list|,
name|aggregatedMetric
operator|.
name|getSingleDataValue
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m2
init|=
name|getSingleValueMetric
argument_list|(
literal|"MEGA_BYTES_MILLIS"
argument_list|,
name|TimelineMetricOperation
operator|.
name|SUM
argument_list|,
name|ts
argument_list|,
literal|20000L
argument_list|)
decl_stmt|;
name|aggregatedMetric
operator|=
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m2
argument_list|,
name|aggregatedMetric
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|30000L
argument_list|,
name|aggregatedMetric
operator|.
name|getSingleDataValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// stateful sum test
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|state
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|state
operator|.
name|put
argument_list|(
name|TimelineMetricOperation
operator|.
name|PREV_METRIC_STATE_KEY
argument_list|,
name|m2
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m2New
init|=
name|getSingleValueMetric
argument_list|(
literal|"MEGA_BYTES_MILLIS"
argument_list|,
name|TimelineMetricOperation
operator|.
name|SUM
argument_list|,
name|ts
argument_list|,
literal|10000L
argument_list|)
decl_stmt|;
name|aggregatedMetric
operator|=
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m2New
argument_list|,
name|aggregatedMetric
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20000L
argument_list|,
name|aggregatedMetric
operator|.
name|getSingleDataValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// single_value metric max against single_value metric
name|TimelineMetric
name|m3
init|=
name|getSingleValueMetric
argument_list|(
literal|"TRANSFER_RATE"
argument_list|,
name|TimelineMetricOperation
operator|.
name|MAX
argument_list|,
name|ts
argument_list|,
literal|150L
argument_list|)
decl_stmt|;
name|TimelineMetric
name|aggregatedMax
init|=
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m3
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|150L
argument_list|,
name|aggregatedMax
operator|.
name|getSingleDataValue
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineMetric
name|m4
init|=
name|getSingleValueMetric
argument_list|(
literal|"TRANSFER_RATE"
argument_list|,
name|TimelineMetricOperation
operator|.
name|MAX
argument_list|,
name|ts
argument_list|,
literal|170L
argument_list|)
decl_stmt|;
name|aggregatedMax
operator|=
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m4
argument_list|,
name|aggregatedMax
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|170L
argument_list|,
name|aggregatedMax
operator|.
name|getSingleDataValue
argument_list|()
argument_list|)
expr_stmt|;
comment|// single_value metric avg against single_value metric
name|TimelineMetric
name|m5
init|=
name|getSingleValueMetric
argument_list|(
literal|"TRANSFER_RATE"
argument_list|,
name|TimelineMetricOperation
operator|.
name|AVG
argument_list|,
name|ts
argument_list|,
literal|150L
argument_list|)
decl_stmt|;
try|try
block|{
name|TimelineMetric
operator|.
name|aggregateTo
argument_list|(
name|m5
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Taking average among metrics is not supported! "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|e
parameter_list|)
block|{
comment|// Expected
block|}
block|}
DECL|method|getSingleValueMetric (String id, TimelineMetricOperation op, long timestamp, long value)
specifier|private
specifier|static
name|TimelineMetric
name|getSingleValueMetric
parameter_list|(
name|String
name|id
parameter_list|,
name|TimelineMetricOperation
name|op
parameter_list|,
name|long
name|timestamp
parameter_list|,
name|long
name|value
parameter_list|)
block|{
name|TimelineMetric
name|m
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|m
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|m
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|SINGLE_VALUE
argument_list|)
expr_stmt|;
name|m
operator|.
name|setRealtimeAggregationOp
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|metricValues
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
argument_list|()
decl_stmt|;
name|metricValues
operator|.
name|put
argument_list|(
name|timestamp
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|m
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
DECL|method|getTimeSeriesMetric (String id, TimelineMetricOperation op, Map<Long, Number> metricValues)
specifier|private
specifier|static
name|TimelineMetric
name|getTimeSeriesMetric
parameter_list|(
name|String
name|id
parameter_list|,
name|TimelineMetricOperation
name|op
parameter_list|,
name|Map
argument_list|<
name|Long
argument_list|,
name|Number
argument_list|>
name|metricValues
parameter_list|)
block|{
name|TimelineMetric
name|m
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|m
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|m
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|TIME_SERIES
argument_list|)
expr_stmt|;
name|m
operator|.
name|setRealtimeAggregationOp
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|m
operator|.
name|setValues
argument_list|(
name|metricValues
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
block|}
end_class

end_unit

