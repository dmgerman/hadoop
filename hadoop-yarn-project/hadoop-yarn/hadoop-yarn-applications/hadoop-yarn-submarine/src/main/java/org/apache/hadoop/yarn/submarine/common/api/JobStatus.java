begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.common.api
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Status of training job.  */
end_comment

begin_class
DECL|class|JobStatus
specifier|public
class|class
name|JobStatus
block|{
DECL|field|jobName
specifier|protected
name|String
name|jobName
decl_stmt|;
DECL|field|state
specifier|protected
name|JobState
name|state
decl_stmt|;
DECL|field|tensorboardLink
specifier|protected
name|String
name|tensorboardLink
init|=
literal|"N/A"
decl_stmt|;
DECL|field|componentStatus
specifier|protected
name|List
argument_list|<
name|JobComponentStatus
argument_list|>
name|componentStatus
decl_stmt|;
DECL|method|nicePrint (PrintStream out)
specifier|public
name|void
name|nicePrint
parameter_list|(
name|PrintStream
name|out
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"Job Name="
operator|+
name|this
operator|.
name|jobName
operator|+
literal|", status="
operator|+
name|state
operator|.
name|name
argument_list|()
operator|+
literal|" time="
operator|+
name|LocalDateTime
operator|.
name|now
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|JobState
operator|.
name|isFinal
argument_list|(
name|this
operator|.
name|state
argument_list|)
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|tensorboardLink
operator|.
name|startsWith
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"  Tensorboard link: "
operator|+
name|tensorboardLink
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"  Components:"
argument_list|)
expr_stmt|;
for|for
control|(
name|JobComponentStatus
name|comp
range|:
name|componentStatus
control|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"    ["
operator|+
name|comp
operator|.
name|getCompName
argument_list|()
operator|+
literal|"] Ready="
operator|+
name|comp
operator|.
name|getNumReadyContainers
argument_list|()
operator|+
literal|" + Running-But-Non-Ready="
operator|+
name|comp
operator|.
name|getNumRunningButUnreadyContainers
argument_list|()
operator|+
literal|" | Asked="
operator|+
name|comp
operator|.
name|getTotalAskedContainers
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"------------------"
argument_list|)
expr_stmt|;
block|}
DECL|method|getState ()
specifier|public
name|JobState
name|getState
parameter_list|()
block|{
return|return
name|state
return|;
block|}
DECL|method|getTensorboardLink ()
specifier|public
name|String
name|getTensorboardLink
parameter_list|()
block|{
return|return
name|tensorboardLink
return|;
block|}
DECL|method|getComponentStatus ()
specifier|public
name|List
argument_list|<
name|JobComponentStatus
argument_list|>
name|getComponentStatus
parameter_list|()
block|{
return|return
name|componentStatus
return|;
block|}
DECL|method|getJobName ()
specifier|public
name|String
name|getJobName
parameter_list|()
block|{
return|return
name|jobName
return|;
block|}
DECL|method|setJobName (String jobName)
specifier|public
name|void
name|setJobName
parameter_list|(
name|String
name|jobName
parameter_list|)
block|{
name|this
operator|.
name|jobName
operator|=
name|jobName
expr_stmt|;
block|}
DECL|method|setState (JobState state)
specifier|public
name|void
name|setState
parameter_list|(
name|JobState
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
block|}
DECL|method|setTensorboardLink (String tensorboardLink)
specifier|public
name|void
name|setTensorboardLink
parameter_list|(
name|String
name|tensorboardLink
parameter_list|)
block|{
name|this
operator|.
name|tensorboardLink
operator|=
name|tensorboardLink
expr_stmt|;
block|}
DECL|method|setComponentStatus (List<JobComponentStatus> componentStatus)
specifier|public
name|void
name|setComponentStatus
parameter_list|(
name|List
argument_list|<
name|JobComponentStatus
argument_list|>
name|componentStatus
parameter_list|)
block|{
name|this
operator|.
name|componentStatus
operator|=
name|componentStatus
expr_stmt|;
block|}
block|}
end_class

end_unit

