begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.common.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_class
DECL|class|SubmarineConfiguration
specifier|public
class|class
name|SubmarineConfiguration
extends|extends
name|Configuration
block|{
DECL|field|SUBMARINE_CONFIGURATION_FILE
specifier|private
specifier|static
specifier|final
name|String
name|SUBMARINE_CONFIGURATION_FILE
init|=
literal|"submarine.xml"
decl_stmt|;
DECL|method|SubmarineConfiguration ()
specifier|public
name|SubmarineConfiguration
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|SubmarineConfiguration (Configuration configuration)
specifier|public
name|SubmarineConfiguration
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|this
argument_list|(
name|configuration
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|SubmarineConfiguration (Configuration configuration, boolean loadLocalConfig)
specifier|public
name|SubmarineConfiguration
parameter_list|(
name|Configuration
name|configuration
parameter_list|,
name|boolean
name|loadLocalConfig
parameter_list|)
block|{
name|super
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
if|if
condition|(
name|loadLocalConfig
condition|)
block|{
name|addResource
argument_list|(
name|SUBMARINE_CONFIGURATION_FILE
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*    * Runtime of submarine    */
DECL|field|PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|PREFIX
init|=
literal|"submarine."
decl_stmt|;
DECL|field|RUNTIME_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|RUNTIME_CLASS
init|=
name|PREFIX
operator|+
literal|"runtime.class"
decl_stmt|;
DECL|field|DEFAULT_RUNTIME_CLASS
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_RUNTIME_CLASS
init|=
literal|"org.apache.hadoop.yarn.submarine.runtimes.yarnservice.YarnServiceRuntimeFactory"
decl_stmt|;
DECL|method|setSubmarineRuntimeClass (String runtimeClass)
specifier|public
name|void
name|setSubmarineRuntimeClass
parameter_list|(
name|String
name|runtimeClass
parameter_list|)
block|{
name|set
argument_list|(
name|RUNTIME_CLASS
argument_list|,
name|runtimeClass
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

