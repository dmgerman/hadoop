begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.client.cli.yarnservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|yarnservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
operator|.
name|ServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|RunJobCli
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|MockClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|conf
operator|.
name|SubmarineLogs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobSubmitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|StorageKeyConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|SubmarineStorage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|YarnServiceJobSubmitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|YarnServiceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|TestYarnServiceRunJobCli
specifier|public
class|class
name|TestYarnServiceRunJobCli
block|{
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|SubmarineLogs
operator|.
name|verboseOff
argument_list|()
expr_stmt|;
name|ServiceClient
name|serviceClient
init|=
name|mock
argument_list|(
name|ServiceClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|serviceClient
operator|.
name|actionCreate
argument_list|(
name|any
argument_list|(
name|Service
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234L
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|YarnServiceUtils
operator|.
name|setStubServiceClient
argument_list|(
name|serviceClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrintHelp ()
specifier|public
name|void
name|testPrintHelp
parameter_list|()
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|runJobCli
operator|.
name|printUsages
argument_list|()
expr_stmt|;
block|}
DECL|method|getServiceSpecFromJobSubmitter (JobSubmitter jobSubmitter)
specifier|private
name|Service
name|getServiceSpecFromJobSubmitter
parameter_list|(
name|JobSubmitter
name|jobSubmitter
parameter_list|)
block|{
return|return
operator|(
operator|(
name|YarnServiceJobSubmitter
operator|)
name|jobSubmitter
operator|)
operator|.
name|getServiceSpec
argument_list|()
return|;
block|}
DECL|method|commonVerifyDistributedTrainingSpec (Service serviceSpec)
specifier|private
name|void
name|commonVerifyDistributedTrainingSpec
parameter_list|(
name|Service
name|serviceSpec
parameter_list|)
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PRIMARY_WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PS
operator|.
name|getComponentName
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Component
name|primaryWorkerComp
init|=
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PRIMARY_WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|primaryWorkerComp
operator|.
name|getResource
argument_list|()
operator|.
name|calcMemoryMB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|primaryWorkerComp
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Component
name|workerComp
init|=
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|workerComp
operator|.
name|getResource
argument_list|()
operator|.
name|calcMemoryMB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|workerComp
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Component
name|psComp
init|=
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PS
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4096
argument_list|,
name|psComp
operator|.
name|getResource
argument_list|()
operator|.
name|calcMemoryMB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|psComp
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"worker.image"
argument_list|,
name|workerComp
operator|.
name|getArtifact
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ps.image"
argument_list|,
name|psComp
operator|.
name|getArtifact
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicRunJobForDistributedTraining ()
specifier|public
name|void
name|testBasicRunJobForDistributedTraining
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"3"
block|,
literal|"--num_ps"
block|,
literal|"2"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2048M,vcores=2"
block|,
literal|"--ps_resources"
block|,
literal|"memory=4096M,vcores=4"
block|,
literal|"--ps_docker_image"
block|,
literal|"ps.image"
block|,
literal|"--worker_docker_image"
block|,
literal|"worker.image"
block|,
literal|"--ps_launch_cmd"
block|,
literal|"python run-ps.py"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|commonVerifyDistributedTrainingSpec
argument_list|(
name|serviceSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicRunJobForDistributedTrainingWithTensorboard ()
specifier|public
name|void
name|testBasicRunJobForDistributedTrainingWithTensorboard
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"3"
block|,
literal|"--num_ps"
block|,
literal|"2"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2048M,vcores=2"
block|,
literal|"--ps_resources"
block|,
literal|"memory=4096M,vcores=4"
block|,
literal|"--ps_docker_image"
block|,
literal|"ps.image"
block|,
literal|"--worker_docker_image"
block|,
literal|"worker.image"
block|,
literal|"--tensorboard"
block|,
literal|"--ps_launch_cmd"
block|,
literal|"python run-ps.py"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|commonVerifyDistributedTrainingSpec
argument_list|(
name|serviceSpec
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicRunJobForSingleNodeTraining ()
specifier|public
name|void
name|testBasicRunJobForSingleNodeTraining
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"1"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|commonTestSingleNodeTraining
argument_list|(
name|serviceSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTensorboardOnlyService ()
specifier|public
name|void
name|testTensorboardOnlyService
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"0"
block|,
literal|"--tensorboard"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTensorboardOnlyServiceWithCustomizedDockerImageAndResourceCkptPath ()
specifier|public
name|void
name|testTensorboardOnlyServiceWithCustomizedDockerImageAndResourceCkptPath
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"0"
block|,
literal|"--tensorboard"
block|,
literal|"--verbose"
block|,
literal|"--tensorboard_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--tensorboard_docker_image"
block|,
literal|"tb_docker_image:001"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTensorboardOnlyServiceWithCustomizedDockerImageAndResource ()
specifier|public
name|void
name|testTensorboardOnlyServiceWithCustomizedDockerImageAndResource
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--num_workers"
block|,
literal|"0"
block|,
literal|"--tensorboard"
block|,
literal|"--verbose"
block|,
literal|"--tensorboard_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--tensorboard_docker_image"
block|,
literal|"tb_docker_image:001"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|2048
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|commonTestSingleNodeTraining (Service serviceSpec)
specifier|private
name|void
name|commonTestSingleNodeTraining
parameter_list|(
name|Service
name|serviceSpec
parameter_list|)
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PRIMARY_WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Component
name|primaryWorkerComp
init|=
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|PRIMARY_WORKER
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|primaryWorkerComp
operator|.
name|getResource
argument_list|()
operator|.
name|calcMemoryMB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|primaryWorkerComp
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyTensorboardComponent (RunJobCli runJobCli, Service serviceSpec, Resource resource)
specifier|private
name|void
name|verifyTensorboardComponent
parameter_list|(
name|RunJobCli
name|runJobCli
parameter_list|,
name|Service
name|serviceSpec
parameter_list|,
name|Resource
name|resource
parameter_list|)
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|TENSORBOARD
operator|.
name|getComponentName
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Component
name|tensorboardComp
init|=
name|serviceSpec
operator|.
name|getComponent
argument_list|(
name|TaskType
operator|.
name|TENSORBOARD
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tensorboardComp
operator|.
name|getNumberOfContainers
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|resource
operator|.
name|getMemorySize
argument_list|()
argument_list|,
name|tensorboardComp
operator|.
name|getResource
argument_list|()
operator|.
name|calcMemoryMB
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|resource
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
name|tensorboardComp
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"./run-TENSORBOARD.sh"
argument_list|,
name|tensorboardComp
operator|.
name|getLaunchCommand
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check docker image
if|if
condition|(
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
operator|.
name|getTensorboardDockerImage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
operator|.
name|getTensorboardDockerImage
argument_list|()
argument_list|,
name|tensorboardComp
operator|.
name|getArtifact
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Assert
operator|.
name|assertNull
argument_list|(
name|tensorboardComp
operator|.
name|getArtifact
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|YarnServiceJobSubmitter
name|yarnServiceJobSubmitter
init|=
operator|(
name|YarnServiceJobSubmitter
operator|)
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
decl_stmt|;
name|String
name|expectedLaunchScript
init|=
literal|"#!/bin/bash\n"
operator|+
literal|"echo \"CLASSPATH:$CLASSPATH\"\n"
operator|+
literal|"echo \"HADOOP_CONF_DIR:$HADOOP_CONF_DIR\"\n"
operator|+
literal|"echo \"HADOOP_TOKEN_FILE_LOCATION:$HADOOP_TOKEN_FILE_LOCATION\"\n"
operator|+
literal|"echo \"JAVA_HOME:$JAVA_HOME\"\n"
operator|+
literal|"echo \"LD_LIBRARY_PATH:$LD_LIBRARY_PATH\"\n"
operator|+
literal|"echo \"HADOOP_HDFS_HOME:$HADOOP_HDFS_HOME\"\n"
operator|+
literal|"export LC_ALL=C&& tensorboard --logdir="
operator|+
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
operator|.
name|getCheckpointPath
argument_list|()
operator|+
literal|"\n"
decl_stmt|;
name|verifyLaunchScriptForComponet
argument_list|(
name|yarnServiceJobSubmitter
argument_list|,
name|serviceSpec
argument_list|,
name|TaskType
operator|.
name|TENSORBOARD
argument_list|,
name|expectedLaunchScript
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyLaunchScriptForComponet ( YarnServiceJobSubmitter yarnServiceJobSubmitter, Service serviceSpec, TaskType taskType, String expectedLaunchScriptContent)
specifier|private
name|void
name|verifyLaunchScriptForComponet
parameter_list|(
name|YarnServiceJobSubmitter
name|yarnServiceJobSubmitter
parameter_list|,
name|Service
name|serviceSpec
parameter_list|,
name|TaskType
name|taskType
parameter_list|,
name|String
name|expectedLaunchScriptContent
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|componentToLocalLaunchScriptMap
init|=
name|yarnServiceJobSubmitter
operator|.
name|getComponentToLocalLaunchScriptPath
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|componentToLocalLaunchScriptMap
operator|.
name|get
argument_list|(
name|taskType
operator|.
name|getComponentName
argument_list|()
argument_list|)
decl_stmt|;
name|byte
index|[]
name|encoded
init|=
name|Files
operator|.
name|readAllBytes
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|scriptContent
init|=
operator|new
name|String
argument_list|(
name|encoded
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedLaunchScriptContent
argument_list|,
name|scriptContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicRunJobForSingleNodeTrainingWithTensorboard ()
specifier|public
name|void
name|testBasicRunJobForSingleNodeTrainingWithTensorboard
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"1"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--tensorboard"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|commonTestSingleNodeTraining
argument_list|(
name|serviceSpec
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBasicRunJobForSingleNodeTrainingWithGeneratedCheckpoint ()
specifier|public
name|void
name|testBasicRunJobForSingleNodeTrainingWithGeneratedCheckpoint
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--num_workers"
block|,
literal|"1"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--tensorboard"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|Service
name|serviceSpec
init|=
name|getServiceSpecFromJobSubmitter
argument_list|(
name|runJobCli
operator|.
name|getJobSubmitter
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|serviceSpec
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|commonTestSingleNodeTraining
argument_list|(
name|serviceSpec
argument_list|)
expr_stmt|;
name|verifyTensorboardComponent
argument_list|(
name|runJobCli
argument_list|,
name|serviceSpec
argument_list|,
name|Resources
operator|.
name|createResource
argument_list|(
literal|4096
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParameterStorageForTrainingJob ()
specifier|public
name|void
name|testParameterStorageForTrainingJob
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientContext
name|mockClientContext
init|=
name|YarnServiceCliTestUtils
operator|.
name|getMockClientContext
argument_list|()
decl_stmt|;
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"s3://input"
block|,
literal|"--checkpoint_path"
block|,
literal|"s3://output"
block|,
literal|"--num_workers"
block|,
literal|"1"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2G,vcores=2"
block|,
literal|"--tensorboard"
block|,
literal|"true"
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|SubmarineStorage
name|storage
init|=
name|mockClientContext
operator|.
name|getRuntimeFactory
argument_list|()
operator|.
name|getSubmarineStorage
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobInfo
init|=
name|storage
operator|.
name|getJobInfoByName
argument_list|(
literal|"my-job"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobInfo
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|jobInfo
operator|.
name|get
argument_list|(
name|StorageKeyConstants
operator|.
name|INPUT_PATH
argument_list|)
argument_list|,
literal|"s3://input"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

