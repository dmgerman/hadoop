begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|YarnClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|ClientAMProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|ServiceTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|utils
operator|.
name|ServiceApiUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Tests for {@link ServiceClient}.  */
end_comment

begin_class
DECL|class|TestServiceClient
specifier|public
class|class
name|TestServiceClient
block|{
annotation|@
name|Rule
DECL|field|rule
specifier|public
name|ServiceTestUtils
operator|.
name|ServiceFSWatcher
name|rule
init|=
operator|new
name|ServiceTestUtils
operator|.
name|ServiceFSWatcher
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testActionUpgrade ()
specifier|public
name|void
name|testActionUpgrade
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ServiceClient
name|client
init|=
name|createServiceClient
argument_list|(
name|applicationId
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|ServiceTestUtils
operator|.
name|createExampleApplication
argument_list|()
decl_stmt|;
name|service
operator|.
name|setVersion
argument_list|(
literal|"v1"
argument_list|)
expr_stmt|;
name|client
operator|.
name|actionCreate
argument_list|(
name|service
argument_list|)
expr_stmt|;
comment|//upgrade the service
name|service
operator|.
name|setVersion
argument_list|(
literal|"v2"
argument_list|)
expr_stmt|;
name|client
operator|.
name|actionUpgrade
argument_list|(
name|service
argument_list|)
expr_stmt|;
comment|//wait for service to be in upgrade state
name|Service
name|fromFs
init|=
name|ServiceApiUtil
operator|.
name|loadServiceUpgrade
argument_list|(
name|rule
operator|.
name|getFs
argument_list|()
argument_list|,
name|service
operator|.
name|getName
argument_list|()
argument_list|,
name|service
operator|.
name|getVersion
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|service
operator|.
name|getName
argument_list|()
argument_list|,
name|fromFs
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|service
operator|.
name|getVersion
argument_list|()
argument_list|,
name|fromFs
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createServiceClient (ApplicationId applicationId)
specifier|private
name|ServiceClient
name|createServiceClient
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
throws|throws
name|Exception
block|{
name|ClientAMProtocol
name|amProxy
init|=
name|mock
argument_list|(
name|ClientAMProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|YarnClient
name|yarnClient
init|=
name|createMockYarnClient
argument_list|()
decl_stmt|;
name|ApplicationAttemptId
name|attemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptReport
name|attemptReport
init|=
name|ApplicationAttemptReport
operator|.
name|newInstance
argument_list|(
name|attemptId
argument_list|,
literal|"localhost"
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|YarnApplicationAttemptState
operator|.
name|RUNNING
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ApplicationReport
name|appReport
init|=
name|mock
argument_list|(
name|ApplicationReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|appReport
operator|.
name|getHost
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"localhost"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|yarnClient
operator|.
name|getApplicationAttemptReport
argument_list|(
name|Matchers
operator|.
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|attemptReport
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|yarnClient
operator|.
name|getApplicationReport
argument_list|(
name|applicationId
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|appReport
argument_list|)
expr_stmt|;
name|ServiceClient
name|client
init|=
operator|new
name|ServiceClient
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
throws|throws
name|Exception
block|{       }
annotation|@
name|Override
specifier|protected
name|ClientAMProtocol
name|createAMProxy
parameter_list|(
name|String
name|serviceName
parameter_list|,
name|ApplicationReport
name|appReport
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
return|return
name|amProxy
return|;
block|}
annotation|@
name|Override
name|ApplicationId
name|submitApp
parameter_list|(
name|Service
name|app
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
return|return
name|applicationId
return|;
block|}
block|}
decl_stmt|;
name|client
operator|.
name|setFileSystem
argument_list|(
name|rule
operator|.
name|getFs
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|setYarnClient
argument_list|(
name|yarnClient
argument_list|)
expr_stmt|;
name|client
operator|.
name|init
argument_list|(
name|rule
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|client
return|;
block|}
DECL|method|createMockYarnClient ()
specifier|private
name|YarnClient
name|createMockYarnClient
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|YarnClient
name|yarnClient
init|=
name|mock
argument_list|(
name|YarnClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|yarnClient
operator|.
name|getApplications
argument_list|(
name|Matchers
operator|.
name|any
argument_list|(
name|GetApplicationsRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|yarnClient
return|;
block|}
block|}
end_class

end_unit

