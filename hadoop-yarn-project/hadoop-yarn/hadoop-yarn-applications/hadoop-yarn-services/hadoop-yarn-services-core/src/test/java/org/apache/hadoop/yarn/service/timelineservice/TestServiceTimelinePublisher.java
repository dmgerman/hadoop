begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
operator|.
name|Identifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineV2Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
operator|.
name|TimelineV2ClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|ServiceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ServiceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|PlacementConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|PlacementPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|PlacementType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|component
operator|.
name|instance
operator|.
name|ComponentInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|component
operator|.
name|instance
operator|.
name|ComponentInstanceId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Test class for ServiceTimelinePublisher.  */
end_comment

begin_class
DECL|class|TestServiceTimelinePublisher
specifier|public
class|class
name|TestServiceTimelinePublisher
block|{
DECL|field|timelineClient
specifier|private
name|TimelineV2Client
name|timelineClient
decl_stmt|;
DECL|field|config
specifier|private
name|Configuration
name|config
decl_stmt|;
DECL|field|serviceTimelinePublisher
specifier|private
name|ServiceTimelinePublisher
name|serviceTimelinePublisher
decl_stmt|;
DECL|field|SERVICE_NAME
specifier|private
specifier|static
name|String
name|SERVICE_NAME
init|=
literal|"HBASE"
decl_stmt|;
DECL|field|SERVICEID
specifier|private
specifier|static
name|String
name|SERVICEID
init|=
literal|"application_1490093646524_0005"
decl_stmt|;
DECL|field|ARTIFACTID
specifier|private
specifier|static
name|String
name|ARTIFACTID
init|=
literal|"ARTIFACTID"
decl_stmt|;
DECL|field|COMPONENT_NAME
specifier|private
specifier|static
name|String
name|COMPONENT_NAME
init|=
literal|"DEFAULT"
decl_stmt|;
DECL|field|CONTAINER_ID
specifier|private
specifier|static
name|String
name|CONTAINER_ID
init|=
literal|"container_e02_1490093646524_0005_01_000001"
decl_stmt|;
DECL|field|CONTAINER_IP
specifier|private
specifier|static
name|String
name|CONTAINER_IP
init|=
literal|"localhost"
decl_stmt|;
DECL|field|CONTAINER_HOSTNAME
specifier|private
specifier|static
name|String
name|CONTAINER_HOSTNAME
init|=
literal|"cnl124-localhost.site"
decl_stmt|;
DECL|field|CONTAINER_BAREHOST
specifier|private
specifier|static
name|String
name|CONTAINER_BAREHOST
init|=
literal|"localhost.com"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|config
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|config
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|timelineClient
operator|=
operator|new
name|DummyTimelineClient
argument_list|(
name|ApplicationId
operator|.
name|fromString
argument_list|(
name|SERVICEID
argument_list|)
argument_list|)
expr_stmt|;
name|serviceTimelinePublisher
operator|=
operator|new
name|ServiceTimelinePublisher
argument_list|(
name|timelineClient
argument_list|)
expr_stmt|;
name|serviceTimelinePublisher
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|serviceTimelinePublisher
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|serviceTimelinePublisher
operator|!=
literal|null
condition|)
block|{
name|serviceTimelinePublisher
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|timelineClient
operator|!=
literal|null
condition|)
block|{
name|timelineClient
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testServiceAttemptEntity ()
specifier|public
name|void
name|testServiceAttemptEntity
parameter_list|()
block|{
name|Service
name|service
init|=
name|createMockApplication
argument_list|()
decl_stmt|;
name|serviceTimelinePublisher
operator|.
name|serviceAttemptRegistered
argument_list|(
name|service
argument_list|,
operator|new
name|YarnConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|TimelineEntity
argument_list|>
name|lastPublishedEntities
init|=
operator|(
operator|(
name|DummyTimelineClient
operator|)
name|timelineClient
operator|)
operator|.
name|getLastPublishedEntities
argument_list|()
decl_stmt|;
comment|// 2 entities because during registration component also registered.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|lastPublishedEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TimelineEntity
name|timelineEntity
range|:
name|lastPublishedEntities
control|)
block|{
if|if
condition|(
name|timelineEntity
operator|.
name|getType
argument_list|()
operator|==
name|ServiceTimelineEntityType
operator|.
name|COMPONENT
operator|.
name|toString
argument_list|()
condition|)
block|{
name|verifyComponentTimelineEntity
argument_list|(
name|timelineEntity
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|verifyServiceAttemptTimelineEntity
argument_list|(
name|timelineEntity
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|ServiceContext
name|context
init|=
operator|new
name|ServiceContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|attemptId
operator|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|ApplicationId
operator|.
name|fromString
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|String
name|exitDiags
init|=
literal|"service killed"
decl_stmt|;
name|serviceTimelinePublisher
operator|.
name|serviceAttemptUnregistered
argument_list|(
name|context
argument_list|,
name|exitDiags
argument_list|)
expr_stmt|;
name|lastPublishedEntities
operator|=
operator|(
operator|(
name|DummyTimelineClient
operator|)
name|timelineClient
operator|)
operator|.
name|getLastPublishedEntities
argument_list|()
expr_stmt|;
for|for
control|(
name|TimelineEntity
name|timelineEntity
range|:
name|lastPublishedEntities
control|)
block|{
if|if
condition|(
name|timelineEntity
operator|.
name|getType
argument_list|()
operator|==
name|ServiceTimelineEntityType
operator|.
name|SERVICE_ATTEMPT
operator|.
name|toString
argument_list|()
condition|)
block|{
name|verifyServiceAttemptTimelineEntity
argument_list|(
name|timelineEntity
argument_list|,
name|exitDiags
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testComponentInstanceEntity ()
specifier|public
name|void
name|testComponentInstanceEntity
parameter_list|()
block|{
name|Container
name|container
init|=
operator|new
name|Container
argument_list|()
decl_stmt|;
name|container
operator|.
name|id
argument_list|(
name|CONTAINER_ID
argument_list|)
operator|.
name|ip
argument_list|(
name|CONTAINER_IP
argument_list|)
operator|.
name|bareHost
argument_list|(
name|CONTAINER_BAREHOST
argument_list|)
operator|.
name|hostname
argument_list|(
name|CONTAINER_HOSTNAME
argument_list|)
operator|.
name|state
argument_list|(
name|ContainerState
operator|.
name|RUNNING_BUT_UNREADY
argument_list|)
operator|.
name|launchTime
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|ComponentInstanceId
name|id
init|=
operator|new
name|ComponentInstanceId
argument_list|(
literal|0
argument_list|,
name|COMPONENT_NAME
argument_list|)
decl_stmt|;
name|ComponentInstance
name|instance
init|=
name|mock
argument_list|(
name|ComponentInstance
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|instance
operator|.
name|getCompName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|instance
operator|.
name|getCompInstanceName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"comp_instance_name"
argument_list|)
expr_stmt|;
name|serviceTimelinePublisher
operator|.
name|componentInstanceStarted
argument_list|(
name|container
argument_list|,
name|instance
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|TimelineEntity
argument_list|>
name|lastPublishedEntities
init|=
operator|(
operator|(
name|DummyTimelineClient
operator|)
name|timelineClient
operator|)
operator|.
name|getLastPublishedEntities
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|lastPublishedEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entity
init|=
name|lastPublishedEntities
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_ID
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONTAINER_BAREHOST
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|BARE_HOST
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|COMPONENT_NAME
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ContainerState
operator|.
name|RUNNING_BUT_UNREADY
operator|.
name|toString
argument_list|()
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|)
argument_list|)
expr_stmt|;
comment|// updated container state
name|container
operator|.
name|setState
argument_list|(
name|ContainerState
operator|.
name|READY
argument_list|)
expr_stmt|;
name|serviceTimelinePublisher
operator|.
name|componentInstanceIPHostUpdated
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|lastPublishedEntities
operator|=
operator|(
operator|(
name|DummyTimelineClient
operator|)
name|timelineClient
operator|)
operator|.
name|getLastPublishedEntities
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|lastPublishedEntities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|=
name|lastPublishedEntities
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ContainerState
operator|.
name|READY
operator|.
name|toString
argument_list|()
argument_list|,
name|entity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyServiceAttemptTimelineEntity (TimelineEntity timelineEntity, String message, boolean isRegistedEntity)
specifier|private
name|void
name|verifyServiceAttemptTimelineEntity
parameter_list|(
name|TimelineEntity
name|timelineEntity
parameter_list|,
name|String
name|message
parameter_list|,
name|boolean
name|isRegistedEntity
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|SERVICEID
argument_list|,
name|timelineEntity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SERVICE_NAME
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|NAME
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|isRegistedEntity
condition|)
block|{
name|assertEquals
argument_list|(
name|ServiceState
operator|.
name|STARTED
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ServiceTimelineEvent
operator|.
name|SERVICE_ATTEMPT_REGISTERED
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"ENDED"
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|message
argument_list|,
name|timelineEntity
operator|.
name|getInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|DIAGNOSTICS_INFO
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ServiceTimelineEvent
operator|.
name|SERVICE_ATTEMPT_UNREGISTERED
operator|.
name|toString
argument_list|()
argument_list|,
name|timelineEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyComponentTimelineEntity (TimelineEntity entity)
specifier|private
name|void
name|verifyComponentTimelineEntity
parameter_list|(
name|TimelineEntity
name|entity
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|info
init|=
name|entity
operator|.
name|getInfo
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"DEFAULT"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ARTIFACTID
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|ARTIFACT_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DOCKER"
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|ARTIFACT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"medium"
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_PROFILE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_CPU
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1024"
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_MEMORY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sleep 1"
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|LAUNCH_COMMAND
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|info
operator|.
name|get
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RUN_PRIVILEGED_CONTAINER
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createMockApplication ()
specifier|private
specifier|static
name|Service
name|createMockApplication
parameter_list|()
block|{
name|Service
name|service
init|=
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SERVICEID
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getLaunchTime
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SERVICE_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|Component
name|component
init|=
name|mock
argument_list|(
name|Component
operator|.
name|class
argument_list|)
decl_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
name|ARTIFACTID
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|1024
operator|+
literal|""
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setProfile
argument_list|(
literal|"medium"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getArtifact
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getResource
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getLaunchCommand
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"sleep 1"
argument_list|)
expr_stmt|;
name|PlacementPolicy
name|placementPolicy
init|=
operator|new
name|PlacementPolicy
argument_list|()
decl_stmt|;
name|PlacementConstraint
name|placementConstraint
init|=
operator|new
name|PlacementConstraint
argument_list|()
decl_stmt|;
name|placementConstraint
operator|.
name|setType
argument_list|(
name|PlacementType
operator|.
name|ANTI_AFFINITY
argument_list|)
expr_stmt|;
name|placementPolicy
operator|.
name|setConstraints
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|placementConstraint
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getPlacementPolicy
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|placementPolicy
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|component
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|component
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getComponents
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|components
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
DECL|class|DummyTimelineClient
specifier|protected
specifier|static
class|class
name|DummyTimelineClient
extends|extends
name|TimelineV2ClientImpl
block|{
DECL|field|lastPublishedEntities
specifier|private
name|Map
argument_list|<
name|Identifier
argument_list|,
name|TimelineEntity
argument_list|>
name|lastPublishedEntities
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|DummyTimelineClient (ApplicationId appId)
specifier|public
name|DummyTimelineClient
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
block|{
name|super
argument_list|(
name|appId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|putEntitiesAsync (TimelineEntity... entities)
specifier|public
name|void
name|putEntitiesAsync
parameter_list|(
name|TimelineEntity
modifier|...
name|entities
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|putEntities
argument_list|(
name|entities
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|putEntities (TimelineEntity... entities)
specifier|public
name|void
name|putEntities
parameter_list|(
name|TimelineEntity
modifier|...
name|entities
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
for|for
control|(
name|TimelineEntity
name|timelineEntity
range|:
name|entities
control|)
block|{
name|TimelineEntity
name|entity
init|=
name|lastPublishedEntities
operator|.
name|get
argument_list|(
name|timelineEntity
operator|.
name|getIdentifier
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
name|lastPublishedEntities
operator|.
name|put
argument_list|(
name|timelineEntity
operator|.
name|getIdentifier
argument_list|()
argument_list|,
name|timelineEntity
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entity
operator|.
name|addMetrics
argument_list|(
name|timelineEntity
operator|.
name|getMetrics
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvents
argument_list|(
name|timelineEntity
operator|.
name|getEvents
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|timelineEntity
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addConfigs
argument_list|(
name|timelineEntity
operator|.
name|getConfigs
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelatesToEntities
argument_list|(
name|timelineEntity
operator|.
name|getRelatesToEntities
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addIsRelatedToEntities
argument_list|(
name|timelineEntity
operator|.
name|getIsRelatedToEntities
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getLastPublishedEntities ()
specifier|public
name|Collection
argument_list|<
name|TimelineEntity
argument_list|>
name|getLastPublishedEntities
parameter_list|()
block|{
return|return
name|lastPublishedEntities
operator|.
name|values
argument_list|()
return|;
block|}
DECL|method|reset ()
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|lastPublishedEntities
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

