begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests for {@link UpgradeComponentsFinder.DefaultUpgradeComponentsFinder}.  */
end_comment

begin_class
DECL|class|TestDefaultUpgradeComponentsFinder
specifier|public
class|class
name|TestDefaultUpgradeComponentsFinder
block|{
DECL|field|finder
specifier|private
name|UpgradeComponentsFinder
operator|.
name|DefaultUpgradeComponentsFinder
name|finder
init|=
operator|new
name|UpgradeComponentsFinder
operator|.
name|DefaultUpgradeComponentsFinder
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testServiceArtifactChange ()
specifier|public
name|void
name|testServiceArtifactChange
parameter_list|()
block|{
name|Service
name|currentDef
init|=
name|ServiceTestUtils
operator|.
name|createExampleApplication
argument_list|()
decl_stmt|;
name|Service
name|targetDef
init|=
name|ServiceTestUtils
operator|.
name|createExampleApplication
argument_list|()
decl_stmt|;
name|targetDef
operator|.
name|getComponents
argument_list|()
operator|.
name|forEach
argument_list|(
name|x
lambda|->
name|x
operator|.
name|setArtifact
argument_list|(
name|TestServiceManager
operator|.
name|createTestArtifact
argument_list|(
literal|"v1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"all components need upgrade"
argument_list|,
name|targetDef
operator|.
name|getComponents
argument_list|()
argument_list|,
name|finder
operator|.
name|findTargetComponentSpecs
argument_list|(
name|currentDef
argument_list|,
name|targetDef
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testComponentArtifactChange ()
specifier|public
name|void
name|testComponentArtifactChange
parameter_list|()
block|{
name|Service
name|currentDef
init|=
name|TestServiceManager
operator|.
name|createBaseDef
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Service
name|targetDef
init|=
name|TestServiceManager
operator|.
name|createBaseDef
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|targetDef
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setArtifact
argument_list|(
name|TestServiceManager
operator|.
name|createTestArtifact
argument_list|(
literal|"v2"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|expected
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|targetDef
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"single components needs upgrade"
argument_list|,
name|expected
argument_list|,
name|finder
operator|.
name|findTargetComponentSpecs
argument_list|(
name|currentDef
argument_list|,
name|targetDef
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

