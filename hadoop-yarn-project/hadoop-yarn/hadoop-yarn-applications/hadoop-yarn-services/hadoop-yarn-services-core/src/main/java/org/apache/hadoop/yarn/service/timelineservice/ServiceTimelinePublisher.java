begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.timelineservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|timelineservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|AbstractMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|CompositeService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|FinalApplicationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineV2Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|ServiceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ComponentState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|component
operator|.
name|instance
operator|.
name|ComponentInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|timeline
operator|.
name|TimelineUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
operator|.
name|READY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|timelineservice
operator|.
name|ServiceTimelineMetricsConstants
operator|.
name|DIAGNOSTICS_INFO
import|;
end_import

begin_comment
comment|/**  * A single service that publishes all the Timeline Entities.  */
end_comment

begin_class
DECL|class|ServiceTimelinePublisher
specifier|public
class|class
name|ServiceTimelinePublisher
extends|extends
name|CompositeService
block|{
comment|// Number of bytes of config which can be published in one shot to ATSv2.
DECL|field|ATS_CONFIG_PUBLISH_SIZE_BYTES
specifier|public
specifier|static
specifier|final
name|int
name|ATS_CONFIG_PUBLISH_SIZE_BYTES
init|=
literal|10
operator|*
literal|1024
decl_stmt|;
DECL|field|timelineClient
specifier|private
name|TimelineV2Client
name|timelineClient
decl_stmt|;
DECL|field|stopped
specifier|private
specifier|volatile
name|boolean
name|stopped
init|=
literal|false
decl_stmt|;
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ServiceTimelinePublisher
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|serviceInit (org.apache.hadoop.conf.Configuration configuration)
specifier|protected
name|void
name|serviceInit
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|configuration
parameter_list|)
throws|throws
name|Exception
block|{
name|addService
argument_list|(
name|timelineClient
argument_list|)
expr_stmt|;
name|super
operator|.
name|serviceInit
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
name|stopped
operator|=
literal|true
expr_stmt|;
name|super
operator|.
name|serviceStop
argument_list|()
expr_stmt|;
block|}
DECL|method|isStopped ()
specifier|public
name|boolean
name|isStopped
parameter_list|()
block|{
return|return
name|stopped
return|;
block|}
DECL|method|ServiceTimelinePublisher (TimelineV2Client client)
specifier|public
name|ServiceTimelinePublisher
parameter_list|(
name|TimelineV2Client
name|client
parameter_list|)
block|{
name|super
argument_list|(
name|ServiceTimelinePublisher
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|timelineClient
operator|=
name|client
expr_stmt|;
block|}
DECL|method|serviceAttemptRegistered (Service service, org.apache.hadoop.conf.Configuration systemConf)
specifier|public
name|void
name|serviceAttemptRegistered
parameter_list|(
name|Service
name|service
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|systemConf
parameter_list|)
block|{
name|long
name|currentTimeMillis
init|=
name|service
operator|.
name|getLaunchTime
argument_list|()
operator|==
literal|null
condition|?
name|System
operator|.
name|currentTimeMillis
argument_list|()
else|:
name|service
operator|.
name|getLaunchTime
argument_list|()
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|createServiceAttemptEntity
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|currentTimeMillis
argument_list|)
expr_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|NAME
argument_list|,
name|service
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|ServiceState
operator|.
name|STARTED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|LAUNCH_TIME
argument_list|,
name|currentTimeMillis
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|QUICK_LINKS
argument_list|,
name|service
operator|.
name|getQuicklinks
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
comment|// add an event
name|TimelineEvent
name|startEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|startEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|SERVICE_ATTEMPT_REGISTERED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|startEvent
operator|.
name|setTimestamp
argument_list|(
name|currentTimeMillis
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|startEvent
argument_list|)
expr_stmt|;
comment|// publish before configurations published
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
comment|// publish system config - YarnConfiguration
name|populateTimelineEntity
argument_list|(
name|systemConf
operator|.
name|iterator
argument_list|()
argument_list|,
name|service
operator|.
name|getId
argument_list|()
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|SERVICE_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// publish container conf
name|publishContainerConf
argument_list|(
name|service
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|service
operator|.
name|getId
argument_list|()
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|SERVICE_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// publish component as separate entity.
name|publishComponents
argument_list|(
name|service
operator|.
name|getComponents
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|serviceAttemptUpdated (Service service)
specifier|public
name|void
name|serviceAttemptUpdated
parameter_list|(
name|Service
name|service
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createServiceAttemptEntity
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|QUICK_LINKS
argument_list|,
name|service
operator|.
name|getQuicklinks
argument_list|()
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|serviceAttemptUnregistered (ServiceContext context, FinalApplicationStatus status, String diagnostics)
specifier|public
name|void
name|serviceAttemptUnregistered
parameter_list|(
name|ServiceContext
name|context
parameter_list|,
name|FinalApplicationStatus
name|status
parameter_list|,
name|String
name|diagnostics
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createServiceAttemptEntity
argument_list|(
name|context
operator|.
name|attemptId
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|status
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|DIAGNOSTICS_INFO
argument_list|,
name|diagnostics
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
comment|// add an event
name|TimelineEvent
name|finishEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|finishEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|SERVICE_ATTEMPT_UNREGISTERED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|finishEvent
operator|.
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|finishEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|componentInstanceStarted (Container container, ComponentInstance instance)
specifier|public
name|void
name|componentInstanceStarted
parameter_list|(
name|Container
name|container
parameter_list|,
name|ComponentInstance
name|instance
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createComponentInstanceEntity
argument_list|(
name|container
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|container
operator|.
name|getLaunchTime
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|BARE_HOST
argument_list|,
name|container
operator|.
name|getBareHost
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|container
operator|.
name|getState
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|LAUNCH_TIME
argument_list|,
name|container
operator|.
name|getLaunchTime
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|COMPONENT_NAME
argument_list|,
name|instance
operator|.
name|getCompName
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|COMPONENT_INSTANCE_NAME
argument_list|,
name|instance
operator|.
name|getCompInstanceName
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
comment|// add an event
name|TimelineEvent
name|startEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|startEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|COMPONENT_INSTANCE_REGISTERED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|startEvent
operator|.
name|setTimestamp
argument_list|(
name|container
operator|.
name|getLaunchTime
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|startEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|componentInstanceFinished (ContainerId containerId, int exitCode, ContainerState state, String diagnostics)
specifier|public
name|void
name|componentInstanceFinished
parameter_list|(
name|ContainerId
name|containerId
parameter_list|,
name|int
name|exitCode
parameter_list|,
name|ContainerState
name|state
parameter_list|,
name|String
name|diagnostics
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createComponentInstanceEntity
argument_list|(
name|containerId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|EXIT_STATUS_CODE
argument_list|,
name|exitCode
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|DIAGNOSTICS_INFO
argument_list|,
name|diagnostics
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
comment|// add an event
name|TimelineEvent
name|startEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|startEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|COMPONENT_INSTANCE_UNREGISTERED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|startEvent
operator|.
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|startEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|componentInstanceIPHostUpdated (Container container)
specifier|public
name|void
name|componentInstanceIPHostUpdated
parameter_list|(
name|Container
name|container
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createComponentInstanceEntity
argument_list|(
name|container
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|IP
argument_list|,
name|container
operator|.
name|getIp
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|EXPOSED_PORTS
argument_list|,
name|container
operator|.
name|getExposedPorts
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|HOSTNAME
argument_list|,
name|container
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|container
operator|.
name|getState
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
name|TimelineEvent
name|updateEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|updateEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|COMPONENT_INSTANCE_IP_HOST_UPDATE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|updateEvent
operator|.
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|updateEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|componentInstanceBecomeReady (Container container)
specifier|public
name|void
name|componentInstanceBecomeReady
parameter_list|(
name|Container
name|container
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createComponentInstanceEntity
argument_list|(
name|container
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|READY
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|updateEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|updateEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|COMPONENT_INSTANCE_BECOME_READY
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|updateEvent
operator|.
name|setTimestamp
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|updateEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|publishComponents (List<Component> components)
specifier|private
name|void
name|publishComponents
parameter_list|(
name|List
argument_list|<
name|Component
argument_list|>
name|components
parameter_list|)
block|{
name|long
name|currentTimeMillis
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
for|for
control|(
name|Component
name|component
range|:
name|components
control|)
block|{
name|TimelineEntity
name|entity
init|=
name|createComponentEntity
argument_list|(
name|component
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setCreatedTime
argument_list|(
name|currentTimeMillis
argument_list|)
expr_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|component
operator|.
name|getArtifact
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|ARTIFACT_ID
argument_list|,
name|component
operator|.
name|getArtifact
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|ARTIFACT_TYPE
argument_list|,
name|component
operator|.
name|getArtifact
argument_list|()
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|component
operator|.
name|getResource
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_CPU
argument_list|,
name|component
operator|.
name|getResource
argument_list|()
operator|.
name|getCpus
argument_list|()
argument_list|)
expr_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_MEMORY
argument_list|,
name|component
operator|.
name|getResource
argument_list|()
operator|.
name|getMemory
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|component
operator|.
name|getResource
argument_list|()
operator|.
name|getProfile
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RESOURCE_PROFILE
argument_list|,
name|component
operator|.
name|getResource
argument_list|()
operator|.
name|getProfile
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|component
operator|.
name|getLaunchCommand
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|LAUNCH_COMMAND
argument_list|,
name|component
operator|.
name|getLaunchCommand
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|RUN_PRIVILEGED_CONTAINER
argument_list|,
name|component
operator|.
name|getRunPrivilegedContainer
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
comment|// publish container specific configurations
name|publishContainerConf
argument_list|(
name|component
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|component
operator|.
name|getName
argument_list|()
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|COMPONENT
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|publishContainerConf (Configuration configuration, String entityId, String entityType)
specifier|private
name|void
name|publishContainerConf
parameter_list|(
name|Configuration
name|configuration
parameter_list|,
name|String
name|entityId
parameter_list|,
name|String
name|entityType
parameter_list|)
block|{
name|populateTimelineEntity
argument_list|(
name|configuration
operator|.
name|getEnv
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|,
name|entityId
argument_list|,
name|entityType
argument_list|)
expr_stmt|;
for|for
control|(
name|ConfigFile
name|configFile
range|:
name|configuration
operator|.
name|getFiles
argument_list|()
control|)
block|{
name|populateTimelineEntity
argument_list|(
name|configFile
operator|.
name|getProperties
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|,
name|entityId
argument_list|,
name|entityType
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|populateTimelineEntity (Iterator<Entry<String, String>> iterator, String entityId, String entityType)
specifier|private
name|void
name|populateTimelineEntity
parameter_list|(
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|iterator
parameter_list|,
name|String
name|entityId
parameter_list|,
name|String
name|entityType
parameter_list|)
block|{
name|int
name|configSize
init|=
literal|0
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|createTimelineEntity
argument_list|(
name|entityId
argument_list|,
name|entityType
argument_list|)
decl_stmt|;
while|while
condition|(
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|int
name|size
init|=
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|length
argument_list|()
operator|+
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|length
argument_list|()
decl_stmt|;
name|configSize
operator|+=
name|size
expr_stmt|;
comment|// Configs are split into multiple entities if they exceed 100kb in size.
if|if
condition|(
name|configSize
operator|>
name|ATS_CONFIG_PUBLISH_SIZE_BYTES
condition|)
block|{
if|if
condition|(
name|entity
operator|.
name|getConfigs
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|entity
operator|=
name|createTimelineEntity
argument_list|(
name|entityId
argument_list|,
name|entityType
argument_list|)
expr_stmt|;
block|}
name|configSize
operator|=
name|size
expr_stmt|;
block|}
name|entity
operator|.
name|addConfig
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|configSize
operator|>
literal|0
condition|)
block|{
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Called from ServiceMetricsSink at regular interval of time.    * @param metrics of service or components    * @param entityId Id of entity    * @param entityType Type of entity    * @param timestamp    */
DECL|method|publishMetrics (Iterable<AbstractMetric> metrics, String entityId, String entityType, long timestamp)
specifier|public
name|void
name|publishMetrics
parameter_list|(
name|Iterable
argument_list|<
name|AbstractMetric
argument_list|>
name|metrics
parameter_list|,
name|String
name|entityId
parameter_list|,
name|String
name|entityType
parameter_list|,
name|long
name|timestamp
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createTimelineEntity
argument_list|(
name|entityId
argument_list|,
name|entityType
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineMetric
argument_list|>
name|entityMetrics
init|=
operator|new
name|HashSet
argument_list|<
name|TimelineMetric
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|AbstractMetric
name|metric
range|:
name|metrics
control|)
block|{
name|TimelineMetric
name|timelineMetric
init|=
operator|new
name|TimelineMetric
argument_list|()
decl_stmt|;
name|timelineMetric
operator|.
name|setId
argument_list|(
name|metric
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|timelineMetric
operator|.
name|addValue
argument_list|(
name|timestamp
argument_list|,
name|metric
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|entityMetrics
operator|.
name|add
argument_list|(
name|timelineMetric
argument_list|)
expr_stmt|;
block|}
name|entity
operator|.
name|setMetrics
argument_list|(
name|entityMetrics
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
DECL|method|createServiceAttemptEntity (String serviceId)
specifier|private
name|TimelineEntity
name|createServiceAttemptEntity
parameter_list|(
name|String
name|serviceId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createTimelineEntity
argument_list|(
name|serviceId
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|SERVICE_ATTEMPT
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createComponentInstanceEntity (String instanceId)
specifier|private
name|TimelineEntity
name|createComponentInstanceEntity
parameter_list|(
name|String
name|instanceId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createTimelineEntity
argument_list|(
name|instanceId
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|COMPONENT_INSTANCE
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createComponentEntity (String componentId)
specifier|private
name|TimelineEntity
name|createComponentEntity
parameter_list|(
name|String
name|componentId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
name|createTimelineEntity
argument_list|(
name|componentId
argument_list|,
name|ServiceTimelineEntityType
operator|.
name|COMPONENT
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createTimelineEntity (String entityId, String entityType)
specifier|private
name|TimelineEntity
name|createTimelineEntity
parameter_list|(
name|String
name|entityId
parameter_list|,
name|String
name|entityType
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|entityId
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|entityType
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|putEntity (TimelineEntity entity)
specifier|private
name|void
name|putEntity
parameter_list|(
name|TimelineEntity
name|entity
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|log
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Publishing the entity "
operator|+
name|entity
operator|+
literal|", JSON-style content: "
operator|+
name|TimelineUtils
operator|.
name|dumpTimelineRecordtoJSON
argument_list|(
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|timelineClient
operator|!=
literal|null
condition|)
block|{
name|timelineClient
operator|.
name|putEntitiesAsync
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Seems like client has been removed before the entity "
operator|+
literal|"could be published for "
operator|+
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error when publishing entity "
operator|+
name|entity
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|componentFinished ( Component comp, ComponentState state, long finishTime)
specifier|public
name|void
name|componentFinished
parameter_list|(
name|Component
name|comp
parameter_list|,
name|ComponentState
name|state
parameter_list|,
name|long
name|finishTime
parameter_list|)
block|{
name|createComponentEntity
argument_list|(
name|comp
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|entity
init|=
name|createComponentEntity
argument_list|(
name|comp
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
comment|// create info keys
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfos
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfos
operator|.
name|put
argument_list|(
name|ServiceTimelineMetricsConstants
operator|.
name|STATE
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addInfo
argument_list|(
name|entityInfos
argument_list|)
expr_stmt|;
comment|// add an event
name|TimelineEvent
name|startEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|startEvent
operator|.
name|setId
argument_list|(
name|ServiceTimelineEvent
operator|.
name|COMPONENT_FINISHED
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|startEvent
operator|.
name|setTimestamp
argument_list|(
name|finishTime
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|startEvent
argument_list|)
expr_stmt|;
name|putEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

