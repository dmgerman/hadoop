begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonInclude
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiModel
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiModelProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Containers of a component.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Unstable
annotation|@
name|ApiModel
argument_list|(
name|description
operator|=
literal|"Containers of a component."
argument_list|)
annotation|@
name|JsonInclude
argument_list|(
name|JsonInclude
operator|.
name|Include
operator|.
name|NON_NULL
argument_list|)
DECL|class|ComponentContainers
specifier|public
class|class
name|ComponentContainers
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|1456748479118874991L
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"component_name"
argument_list|)
DECL|field|componentName
specifier|private
name|String
name|componentName
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"containers"
argument_list|)
DECL|field|containers
specifier|private
name|List
argument_list|<
name|Container
argument_list|>
name|containers
decl_stmt|;
annotation|@
name|ApiModelProperty
argument_list|(
name|example
operator|=
literal|"null"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|value
operator|=
literal|"Name of the component."
argument_list|)
DECL|method|getComponentName ()
specifier|public
name|String
name|getComponentName
parameter_list|()
block|{
return|return
name|componentName
return|;
block|}
DECL|method|setComponentName (String name)
specifier|public
name|void
name|setComponentName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|componentName
operator|=
name|name
expr_stmt|;
block|}
comment|/**    * Name of the service component.    **/
DECL|method|name (String name)
specifier|public
name|ComponentContainers
name|name
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|componentName
operator|=
name|name
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**    * Returns the containers of the component.    */
annotation|@
name|ApiModelProperty
argument_list|(
name|example
operator|=
literal|"null"
argument_list|,
name|value
operator|=
literal|"Containers of the component."
argument_list|)
DECL|method|getContainers ()
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|getContainers
parameter_list|()
block|{
return|return
name|containers
return|;
block|}
comment|/**    * Sets the containers.    * @param containers containers of the component.    */
DECL|method|setContainers (List<Container> containers)
specifier|public
name|void
name|setContainers
parameter_list|(
name|List
argument_list|<
name|Container
argument_list|>
name|containers
parameter_list|)
block|{
name|this
operator|.
name|containers
operator|=
name|containers
expr_stmt|;
block|}
comment|/**    * Sets the containers.    * @param compContainers containers of the component.    */
DECL|method|containers (List<Container> compContainers)
specifier|public
name|ComponentContainers
name|containers
parameter_list|(
name|List
argument_list|<
name|Container
argument_list|>
name|compContainers
parameter_list|)
block|{
name|this
operator|.
name|containers
operator|=
name|compContainers
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**    * Add a container.    * @param container container    */
DECL|method|addContainer (Container container)
specifier|public
name|void
name|addContainer
parameter_list|(
name|Container
name|container
parameter_list|)
block|{
name|containers
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

