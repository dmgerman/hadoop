begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.applications.mawo.server.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|applications
operator|.
name|mawo
operator|.
name|server
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test MaWo configuration.  */
end_comment

begin_class
DECL|class|TestMaWoConfiguration
specifier|public
class|class
name|TestMaWoConfiguration
block|{
comment|/**    * Validate default MaWo Configurations.    */
annotation|@
name|Test
DECL|method|testMaWoConfiguration ()
specifier|public
name|void
name|testMaWoConfiguration
parameter_list|()
block|{
name|MawoConfiguration
name|mawoConf
init|=
operator|new
name|MawoConfiguration
argument_list|()
decl_stmt|;
comment|// validate Rpc server port
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mawoConf
operator|.
name|getRpcServerPort
argument_list|()
argument_list|,
literal|5120
argument_list|)
expr_stmt|;
comment|// validate Rpc hostname
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"localhost"
operator|.
name|equals
argument_list|(
name|mawoConf
operator|.
name|getRpcHostName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// validate job queue storage conf
name|boolean
name|jobQueueStorage
init|=
name|mawoConf
operator|.
name|getJobQueueStorageEnabled
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobQueueStorage
argument_list|)
expr_stmt|;
comment|// validate default teardownWorkerValidity Interval
name|Assert
operator|.
name|assertEquals
argument_list|(
name|mawoConf
operator|.
name|getTeardownWorkerValidityInterval
argument_list|()
argument_list|,
literal|120000
argument_list|)
expr_stmt|;
comment|// validate Zk related configs
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"/tmp/mawoRoot"
operator|.
name|equals
argument_list|(
name|mawoConf
operator|.
name|getZKParentPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"localhost:2181"
operator|.
name|equals
argument_list|(
name|mawoConf
operator|.
name|getZKAddress
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|mawoConf
operator|.
name|getZKRetryIntervalMS
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|10000
argument_list|,
name|mawoConf
operator|.
name|getZKSessionTimeoutMS
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|mawoConf
operator|.
name|getZKRetriesNum
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

