begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.appcatalog.application
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|application
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|model
operator|.
name|AppEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|model
operator|.
name|AppStoreEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|model
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|utils
operator|.
name|RandomWord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|utils
operator|.
name|WordLengthException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|UpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|DeserializationFeature
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_comment
comment|/**  * Driver class for accessing Solr.  */
end_comment

begin_class
DECL|class|AppCatalogSolrClient
specifier|public
class|class
name|AppCatalogSolrClient
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AppCatalogSolrClient
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|urlString
specifier|private
specifier|static
name|String
name|urlString
decl_stmt|;
DECL|method|AppCatalogSolrClient ()
specifier|public
name|AppCatalogSolrClient
parameter_list|()
block|{
comment|// Locate Solr URL
name|ClassLoader
name|classLoader
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|InputStream
name|input
init|=
name|classLoader
operator|.
name|getResourceAsStream
argument_list|(
literal|"appcatalog.properties"
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|load
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|urlString
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"solr_url"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error reading appcatalog configuration: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getSolrClient ()
specifier|public
name|SolrClient
name|getSolrClient
parameter_list|()
block|{
return|return
operator|new
name|HttpSolrClient
operator|.
name|Builder
argument_list|(
name|urlString
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getRecommendedApps ()
specifier|public
name|List
argument_list|<
name|AppStoreEntry
argument_list|>
name|getRecommendedApps
parameter_list|()
block|{
name|List
argument_list|<
name|AppStoreEntry
argument_list|>
name|apps
init|=
operator|new
name|ArrayList
argument_list|<
name|AppStoreEntry
argument_list|>
argument_list|()
decl_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppStoreEntry"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setRows
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|list
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|list
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|list
operator|.
name|next
argument_list|()
decl_stmt|;
name|AppStoreEntry
name|entry
init|=
operator|new
name|AppStoreEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setOrg
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"org_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDesc
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"desc_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|.
name|get
argument_list|(
literal|"icon_s"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setIcon
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"icon_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|entry
operator|.
name|setLike
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"like_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDownload
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"download_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|apps
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error getting a list of recommended applications: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|apps
return|;
block|}
DECL|method|search (String keyword)
specifier|public
name|List
argument_list|<
name|AppStoreEntry
argument_list|>
name|search
parameter_list|(
name|String
name|keyword
parameter_list|)
block|{
name|List
argument_list|<
name|AppStoreEntry
argument_list|>
name|apps
init|=
operator|new
name|ArrayList
argument_list|<
name|AppStoreEntry
argument_list|>
argument_list|()
decl_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
if|if
condition|(
name|keyword
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|query
operator|.
name|setQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppStoreEntry"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|query
operator|.
name|setQuery
argument_list|(
name|keyword
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppStoreEntry"
argument_list|)
expr_stmt|;
block|}
name|query
operator|.
name|setRows
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|list
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|list
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|list
operator|.
name|next
argument_list|()
decl_stmt|;
name|AppStoreEntry
name|entry
init|=
operator|new
name|AppStoreEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setOrg
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"org_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDesc
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"desc_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setLike
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"like_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDownload
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"download_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|apps
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error in searching for applications: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|apps
return|;
block|}
DECL|method|listAppEntries ()
specifier|public
name|List
argument_list|<
name|AppEntry
argument_list|>
name|listAppEntries
parameter_list|()
block|{
name|List
argument_list|<
name|AppEntry
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|AppEntry
argument_list|>
argument_list|()
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|configure
argument_list|(
name|DeserializationFeature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppEntry"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setRows
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|appList
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|appList
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|appList
operator|.
name|next
argument_list|()
decl_stmt|;
name|AppEntry
name|entry
init|=
operator|new
name|AppEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setApp
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"app_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setYarnfile
argument_list|(
name|mapper
operator|.
name|readValue
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"yarnfile_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|Service
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error in listing deployed applications: "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
DECL|method|findAppStoreEntry (String id)
specifier|public
name|AppStoreEntry
name|findAppStoreEntry
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|AppStoreEntry
name|entry
init|=
operator|new
name|AppStoreEntry
argument_list|()
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|configure
argument_list|(
name|DeserializationFeature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
literal|"id:"
operator|+
name|id
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppStoreEntry"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|appList
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|appList
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|appList
operator|.
name|next
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setOrg
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"org_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDesc
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"desc_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setLike
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"like_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDownload
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"download_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Service
name|yarnApp
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"yarnfile_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|name
decl_stmt|;
try|try
block|{
name|Random
name|r
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|int
name|low
init|=
literal|3
decl_stmt|;
name|int
name|high
init|=
literal|10
decl_stmt|;
name|int
name|seed
init|=
name|r
operator|.
name|nextInt
argument_list|(
name|high
operator|-
name|low
argument_list|)
operator|+
name|low
decl_stmt|;
name|int
name|seed2
init|=
name|r
operator|.
name|nextInt
argument_list|(
name|high
operator|-
name|low
argument_list|)
operator|+
name|low
decl_stmt|;
name|name
operator|=
name|RandomWord
operator|.
name|getNewWord
argument_list|(
name|seed
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|"-"
operator|+
name|RandomWord
operator|.
name|getNewWord
argument_list|(
name|seed2
argument_list|)
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WordLengthException
name|e
parameter_list|)
block|{
name|name
operator|=
literal|"c"
operator|+
name|java
operator|.
name|util
operator|.
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
name|yarnApp
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setApp
argument_list|(
name|yarnApp
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error in finding deployed application: "
operator|+
name|id
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|entry
return|;
block|}
DECL|method|findAppEntry (String id)
specifier|public
name|AppEntry
name|findAppEntry
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|AppEntry
name|entry
init|=
operator|new
name|AppEntry
argument_list|()
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|configure
argument_list|(
name|DeserializationFeature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
literal|"id:"
operator|+
name|id
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppEntry"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
decl_stmt|;
try|try
block|{
name|response
operator|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|appList
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|appList
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|appList
operator|.
name|next
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setApp
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"app_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setYarnfile
argument_list|(
name|mapper
operator|.
name|readValue
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"yarnfile_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|Service
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error in finding deployed application: "
operator|+
name|id
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|entry
return|;
block|}
DECL|method|deployApp (String id, Service service)
specifier|public
name|void
name|deployApp
parameter_list|(
name|String
name|id
parameter_list|,
name|Service
name|service
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|long
name|download
init|=
literal|0
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|configure
argument_list|(
name|DeserializationFeature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|SolrInputDocument
argument_list|>
name|docs
init|=
operator|new
name|HashSet
argument_list|<
name|SolrInputDocument
argument_list|>
argument_list|()
decl_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
comment|// Find application information from AppStore
name|SolrQuery
name|query
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|query
operator|.
name|setQuery
argument_list|(
literal|"id:"
operator|+
name|id
argument_list|)
expr_stmt|;
name|query
operator|.
name|setFilterQueries
argument_list|(
literal|"type_s:AppStoreEntry"
argument_list|)
expr_stmt|;
name|query
operator|.
name|setRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
init|=
name|solr
operator|.
name|query
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|appList
init|=
name|response
operator|.
name|getResults
argument_list|()
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|AppStoreEntry
name|entry
init|=
operator|new
name|AppStoreEntry
argument_list|()
decl_stmt|;
while|while
condition|(
name|appList
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|SolrDocument
name|d
init|=
name|appList
operator|.
name|next
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setOrg
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"org_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setName
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"name_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDesc
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"desc_s"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setLike
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"like_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setDownload
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|d
operator|.
name|get
argument_list|(
literal|"download_i"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|download
operator|=
name|entry
operator|.
name|getDownload
argument_list|()
operator|+
literal|1
expr_stmt|;
comment|// Update download count
name|docs
operator|.
name|add
argument_list|(
name|incrementDownload
argument_list|(
name|d
argument_list|,
name|download
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// increment download count for application
if|if
condition|(
name|service
operator|!=
literal|null
condition|)
block|{
comment|// Register deployed application instance with AppList
name|SolrInputDocument
name|request
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|service
operator|.
name|getName
argument_list|()
decl_stmt|;
name|request
operator|.
name|addField
argument_list|(
literal|"type_s"
argument_list|,
literal|"AppEntry"
argument_list|)
expr_stmt|;
name|request
operator|.
name|addField
argument_list|(
literal|"id"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|request
operator|.
name|addField
argument_list|(
literal|"name_s"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|request
operator|.
name|addField
argument_list|(
literal|"app_s"
argument_list|,
name|entry
operator|.
name|getOrg
argument_list|()
operator|+
literal|"/"
operator|+
name|entry
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|addField
argument_list|(
literal|"yarnfile_s"
argument_list|,
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|service
argument_list|)
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
comment|// Commit Solr changes.
name|UpdateResponse
name|detailsResponse
init|=
name|solr
operator|.
name|add
argument_list|(
name|docs
argument_list|)
decl_stmt|;
if|if
condition|(
name|detailsResponse
operator|.
name|getStatus
argument_list|()
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to register docker instance "
operator|+
literal|"with application entry."
argument_list|)
throw|;
block|}
name|solr
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
DECL|method|incrementDownload (SolrDocument doc, long download)
specifier|private
name|SolrInputDocument
name|incrementDownload
parameter_list|(
name|SolrDocument
name|doc
parameter_list|,
name|long
name|download
parameter_list|)
block|{
name|Collection
argument_list|<
name|String
argument_list|>
name|names
init|=
name|doc
operator|.
name|getFieldNames
argument_list|()
decl_stmt|;
name|SolrInputDocument
name|s
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
if|if
condition|(
operator|!
name|name
operator|.
name|equals
argument_list|(
literal|"_version_"
argument_list|)
condition|)
block|{
name|s
operator|.
name|addField
argument_list|(
name|name
argument_list|,
name|doc
operator|.
name|getFieldValues
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|s
operator|.
name|setField
argument_list|(
literal|"download_i"
argument_list|,
name|download
operator|++
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
DECL|method|deleteApp (String id)
specifier|public
name|void
name|deleteApp
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
try|try
block|{
name|solr
operator|.
name|deleteById
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|solr
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Error in removing deployed application: "
operator|+
name|id
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|register (Application app)
specifier|public
name|void
name|register
parameter_list|(
name|Application
name|app
parameter_list|)
throws|throws
name|IOException
block|{
name|Collection
argument_list|<
name|SolrInputDocument
argument_list|>
name|docs
init|=
operator|new
name|HashSet
argument_list|<
name|SolrInputDocument
argument_list|>
argument_list|()
decl_stmt|;
name|SolrClient
name|solr
init|=
name|getSolrClient
argument_list|()
decl_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|configure
argument_list|(
name|DeserializationFeature
operator|.
name|FAIL_ON_UNKNOWN_PROPERTIES
argument_list|,
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|SolrInputDocument
name|buffer
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"id"
argument_list|,
name|java
operator|.
name|util
operator|.
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"org_s"
argument_list|,
name|app
operator|.
name|getOrganization
argument_list|()
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"name_s"
argument_list|,
name|app
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"desc_s"
argument_list|,
name|app
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|app
operator|.
name|getIcon
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|buffer
operator|.
name|setField
argument_list|(
literal|"icon_s"
argument_list|,
name|app
operator|.
name|getIcon
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|buffer
operator|.
name|setField
argument_list|(
literal|"type_s"
argument_list|,
literal|"AppStoreEntry"
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"like_i"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"download_i"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Keep only YARN data model for yarnfile field
name|String
name|yarnFile
init|=
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|app
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"app:"
operator|+
name|yarnFile
argument_list|)
expr_stmt|;
name|Service
name|yarnApp
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|yarnFile
argument_list|,
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|setField
argument_list|(
literal|"yarnfile_s"
argument_list|,
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|yarnApp
argument_list|)
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
comment|// Commit Solr changes.
name|UpdateResponse
name|detailsResponse
init|=
name|solr
operator|.
name|add
argument_list|(
name|docs
argument_list|)
decl_stmt|;
if|if
condition|(
name|detailsResponse
operator|.
name|getStatus
argument_list|()
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to register application "
operator|+
literal|"in Application Store."
argument_list|)
throw|;
block|}
name|solr
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrServerException
decl||
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to register application "
operator|+
literal|"in Application Store. "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

