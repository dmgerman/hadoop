begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.appcatalog.model
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|appcatalog
operator|.
name|model
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_comment
comment|/**  * Data model for user defined application configuration.  */
end_comment

begin_class
annotation|@
name|XmlRootElement
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|PUBLIC_MEMBER
argument_list|)
DECL|class|AppDetails
specifier|public
class|class
name|AppDetails
block|{
DECL|field|image
specifier|private
name|String
name|image
decl_stmt|;
DECL|field|version
specifier|private
name|String
name|version
decl_stmt|;
DECL|field|ports
specifier|private
name|String
index|[]
name|ports
decl_stmt|;
DECL|field|volumes
specifier|private
name|String
index|[]
name|volumes
decl_stmt|;
DECL|field|env
specifier|private
name|String
index|[]
name|env
decl_stmt|;
DECL|method|getImage ()
specifier|public
name|String
name|getImage
parameter_list|()
block|{
return|return
name|image
return|;
block|}
DECL|method|setImage (String image)
specifier|public
name|void
name|setImage
parameter_list|(
name|String
name|image
parameter_list|)
block|{
name|this
operator|.
name|image
operator|=
name|image
expr_stmt|;
block|}
DECL|method|getVersion ()
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
DECL|method|setVersion (String version)
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
DECL|method|getPorts ()
specifier|public
name|String
index|[]
name|getPorts
parameter_list|()
block|{
return|return
name|ports
return|;
block|}
DECL|method|setPorts (String[] ports2)
specifier|public
name|void
name|setPorts
parameter_list|(
name|String
index|[]
name|ports2
parameter_list|)
block|{
name|this
operator|.
name|ports
operator|=
name|ports2
expr_stmt|;
block|}
DECL|method|getVolumes ()
specifier|public
name|String
index|[]
name|getVolumes
parameter_list|()
block|{
return|return
name|volumes
return|;
block|}
DECL|method|setVolumes (String[] volumes)
specifier|public
name|void
name|setVolumes
parameter_list|(
name|String
index|[]
name|volumes
parameter_list|)
block|{
name|this
operator|.
name|volumes
operator|=
name|volumes
expr_stmt|;
block|}
DECL|method|getEnv ()
specifier|public
name|String
index|[]
name|getEnv
parameter_list|()
block|{
return|return
name|env
return|;
block|}
DECL|method|setEnv (String[] env)
specifier|public
name|void
name|setEnv
parameter_list|(
name|String
index|[]
name|env
parameter_list|)
block|{
name|this
operator|.
name|env
operator|=
name|env
expr_stmt|;
block|}
block|}
end_class

end_unit

