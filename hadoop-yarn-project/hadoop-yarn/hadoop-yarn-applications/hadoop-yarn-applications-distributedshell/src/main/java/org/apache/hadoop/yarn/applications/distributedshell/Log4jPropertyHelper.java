begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.applications.distributedshell
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|applications
operator|.
name|distributedshell
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|PropertyConfigurator
import|;
end_import

begin_class
DECL|class|Log4jPropertyHelper
specifier|public
class|class
name|Log4jPropertyHelper
block|{
DECL|method|updateLog4jConfiguration (Class<?> targetClass, String log4jPath)
specifier|public
specifier|static
name|void
name|updateLog4jConfiguration
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|targetClass
parameter_list|,
name|String
name|log4jPath
parameter_list|)
throws|throws
name|Exception
block|{
name|Properties
name|customProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|FileInputStream
name|fs
init|=
literal|null
decl_stmt|;
name|InputStream
name|is
init|=
literal|null
decl_stmt|;
try|try
block|{
name|fs
operator|=
operator|new
name|FileInputStream
argument_list|(
name|log4jPath
argument_list|)
expr_stmt|;
name|is
operator|=
name|targetClass
operator|.
name|getResourceAsStream
argument_list|(
literal|"/log4j.properties"
argument_list|)
expr_stmt|;
name|customProperties
operator|.
name|load
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|Properties
name|originalProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|originalProperties
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|customProperties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|originalProperties
operator|.
name|setProperty
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|LogManager
operator|.
name|resetConfiguration
argument_list|()
expr_stmt|;
name|PropertyConfigurator
operator|.
name|configure
argument_list|(
name|originalProperties
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|fs
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

