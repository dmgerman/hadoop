begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.applications.distributedshell
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|applications
operator|.
name|distributedshell
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntityGroupId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|NameValuePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|TimelineEntityGroupPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ConverterUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_comment
comment|/**  * Timeline v1.5 reader plugin for YARN distributed shell. It tranlsates an  * incoming getEntity request to a set of related timeline entity groups, via  * the information provided in the primary filter or entity id field.  */
end_comment

begin_class
DECL|class|DistributedShellTimelinePlugin
specifier|public
class|class
name|DistributedShellTimelinePlugin
extends|extends
name|TimelineEntityGroupPlugin
block|{
annotation|@
name|Override
DECL|method|getTimelineEntityGroupId (String entityType, NameValuePair primaryFilter, Collection<NameValuePair> secondaryFilters)
specifier|public
name|Set
argument_list|<
name|TimelineEntityGroupId
argument_list|>
name|getTimelineEntityGroupId
parameter_list|(
name|String
name|entityType
parameter_list|,
name|NameValuePair
name|primaryFilter
parameter_list|,
name|Collection
argument_list|<
name|NameValuePair
argument_list|>
name|secondaryFilters
parameter_list|)
block|{
if|if
condition|(
name|ApplicationMaster
operator|.
name|DSEntity
operator|.
name|DS_CONTAINER
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|entityType
argument_list|)
condition|)
block|{
if|if
condition|(
name|primaryFilter
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|toEntityGroupId
argument_list|(
name|primaryFilter
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getTimelineEntityGroupId (String entityId, String entityType)
specifier|public
name|Set
argument_list|<
name|TimelineEntityGroupId
argument_list|>
name|getTimelineEntityGroupId
parameter_list|(
name|String
name|entityId
parameter_list|,
name|String
name|entityType
parameter_list|)
block|{
if|if
condition|(
name|ApplicationMaster
operator|.
name|DSEntity
operator|.
name|DS_CONTAINER
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|entityId
argument_list|)
condition|)
block|{
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|entityId
argument_list|)
decl_stmt|;
name|ApplicationId
name|appId
init|=
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
return|return
name|toEntityGroupId
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getTimelineEntityGroupId (String entityType, SortedSet<String> entityIds, Set<String> eventTypes)
specifier|public
name|Set
argument_list|<
name|TimelineEntityGroupId
argument_list|>
name|getTimelineEntityGroupId
parameter_list|(
name|String
name|entityType
parameter_list|,
name|SortedSet
argument_list|<
name|String
argument_list|>
name|entityIds
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|eventTypes
parameter_list|)
block|{
comment|// Right now this method is not used by TimelineEntityGroupPlugin
return|return
literal|null
return|;
block|}
DECL|method|toEntityGroupId (String strAppId)
specifier|private
name|Set
argument_list|<
name|TimelineEntityGroupId
argument_list|>
name|toEntityGroupId
parameter_list|(
name|String
name|strAppId
parameter_list|)
block|{
name|ApplicationId
name|appId
init|=
name|ConverterUtils
operator|.
name|toApplicationId
argument_list|(
name|strAppId
argument_list|)
decl_stmt|;
name|TimelineEntityGroupId
name|groupId
init|=
name|TimelineEntityGroupId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
name|ApplicationMaster
operator|.
name|CONTAINER_ENTITY_GROUP_ID
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|TimelineEntityGroupId
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
name|groupId
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

