begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.common.tools
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|utils
operator|.
name|SliderTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|internal
operator|.
name|AssumptionViolatedException
import|;
end_import

begin_comment
comment|/**  * Test slider test utils.  */
end_comment

begin_class
DECL|class|TestSliderTestUtils
specifier|public
class|class
name|TestSliderTestUtils
extends|extends
name|SliderTestUtils
block|{
annotation|@
name|Test
DECL|method|testAssumeTrue ()
specifier|public
name|void
name|testAssumeTrue
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|assume
argument_list|(
literal|true
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAssumeFalse ()
specifier|public
name|void
name|testAssumeFalse
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|assume
argument_list|(
literal|false
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expected an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|ignored
parameter_list|)
block|{
comment|//expected
block|}
block|}
annotation|@
name|Test
DECL|method|testAssumeBoolOptionSetInConf ()
specifier|public
name|void
name|testAssumeBoolOptionSetInConf
parameter_list|()
throws|throws
name|Throwable
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"key"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
try|try
block|{
name|assumeBoolOption
argument_list|(
name|conf
argument_list|,
literal|"key"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAssumeBoolOptionUnsetInConf ()
specifier|public
name|void
name|testAssumeBoolOptionUnsetInConf
parameter_list|()
throws|throws
name|Throwable
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|assumeBoolOption
argument_list|(
name|conf
argument_list|,
literal|"key"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAssumeBoolOptionFalseInConf ()
specifier|public
name|void
name|testAssumeBoolOptionFalseInConf
parameter_list|()
throws|throws
name|Throwable
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"key"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
try|try
block|{
name|assumeBoolOption
argument_list|(
name|conf
argument_list|,
literal|"key"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expected an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|ignored
parameter_list|)
block|{
comment|//expected
block|}
block|}
annotation|@
name|Test
DECL|method|testAssumeBoolOptionFalseUnsetInConf ()
specifier|public
name|void
name|testAssumeBoolOptionFalseUnsetInConf
parameter_list|()
throws|throws
name|Throwable
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
try|try
block|{
name|assumeBoolOption
argument_list|(
name|conf
argument_list|,
literal|"key"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"expected an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssumptionViolatedException
name|ignored
parameter_list|)
block|{
comment|//expected
block|}
block|}
block|}
end_class

end_unit

