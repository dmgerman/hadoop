begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.registry
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|registry
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|binding
operator|.
name|RegistryUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
operator|.
name|SliderRegistryUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|utils
operator|.
name|SliderTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test registry paths.  */
end_comment

begin_class
DECL|class|TestRegistryPaths
specifier|public
class|class
name|TestRegistryPaths
block|{
comment|//@Test
DECL|method|testHomedirKerberos ()
specifier|public
name|void
name|testHomedirKerberos
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|home
init|=
name|RegistryUtils
operator|.
name|homePathForUser
argument_list|(
literal|"hbase@HADOOP.APACHE.ORG"
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"/users/hbase"
argument_list|,
name|home
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssertionError
name|e
parameter_list|)
block|{
name|SliderTestUtils
operator|.
name|skip
argument_list|(
literal|"homedir filtering not yet in hadoop registry "
operator|+
literal|"module"
argument_list|)
expr_stmt|;
block|}
block|}
comment|//@Test
DECL|method|testHomedirKerberosHost ()
specifier|public
name|void
name|testHomedirKerberosHost
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|home
init|=
name|RegistryUtils
operator|.
name|homePathForUser
argument_list|(
literal|"hbase/localhost@HADOOP"
operator|+
literal|".APACHE.ORG"
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|"/users/hbase"
argument_list|,
name|home
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AssertionError
name|e
parameter_list|)
block|{
name|SliderTestUtils
operator|.
name|skip
argument_list|(
literal|"homedir filtering not yet in hadoop registry "
operator|+
literal|"module"
argument_list|)
expr_stmt|;
block|}
block|}
comment|//@Test
DECL|method|testRegistryPathForInstance ()
specifier|public
name|void
name|testRegistryPathForInstance
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|path
init|=
name|SliderRegistryUtils
operator|.
name|registryPathForInstance
argument_list|(
literal|"instance"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|path
operator|.
name|endsWith
argument_list|(
literal|"/instance"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//@Test
DECL|method|testPathResolution ()
specifier|public
name|void
name|testPathResolution
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|home
init|=
name|RegistryUtils
operator|.
name|homePathForCurrentUser
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|home
argument_list|,
name|SliderRegistryUtils
operator|.
name|resolvePath
argument_list|(
literal|"~"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|home
operator|+
literal|"/"
argument_list|,
name|SliderRegistryUtils
operator|.
name|resolvePath
argument_list|(
literal|"~/"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|home
operator|+
literal|"/something"
argument_list|,
name|SliderRegistryUtils
operator|.
name|resolvePath
argument_list|(
literal|"~/something"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"~unresolved"
argument_list|,
name|SliderRegistryUtils
operator|.
name|resolvePath
argument_list|(
literal|"~unresolved"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

