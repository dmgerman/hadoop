begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|client
operator|.
name|SliderClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|params
operator|.
name|SliderActions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|ExampleAppJson
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|main
operator|.
name|ServiceLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|utils
operator|.
name|YarnZKMiniClusterTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|params
operator|.
name|Arguments
operator|.
name|ARG_APPDEF
import|;
end_import

begin_comment
comment|/**  * Simple end-to-end test.  */
end_comment

begin_class
DECL|class|TestDefaultProvider
specifier|public
class|class
name|TestDefaultProvider
extends|extends
name|YarnZKMiniClusterTestBase
block|{
comment|// TODO figure out how to run client commands against minicluster
comment|// (currently errors out unable to find containing jar of AM for upload)
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|testDefaultProvider ()
specifier|public
name|void
name|testDefaultProvider
parameter_list|()
throws|throws
name|Throwable
block|{
name|createMiniCluster
argument_list|(
literal|""
argument_list|,
name|getConfiguration
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
name|appName
init|=
literal|"default-1"
decl_stmt|;
name|describe
argument_list|(
literal|"verify default provider"
argument_list|)
expr_stmt|;
name|String
name|appDef
init|=
name|ExampleAppJson
operator|.
name|resourceName
argument_list|(
name|ExampleAppJson
operator|.
name|DEFAULT_JSON
argument_list|)
decl_stmt|;
name|ServiceLauncher
argument_list|<
name|SliderClient
argument_list|>
name|launcher
init|=
name|createOrBuildCluster
argument_list|(
name|SliderActions
operator|.
name|ACTION_CREATE
argument_list|,
name|appName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|ARG_APPDEF
argument_list|,
name|appDef
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SliderClient
name|sliderClient
init|=
name|launcher
operator|.
name|getService
argument_list|()
decl_stmt|;
name|addToTeardown
argument_list|(
name|sliderClient
argument_list|)
expr_stmt|;
name|Application
name|application
init|=
name|sliderClient
operator|.
name|actionStatus
argument_list|(
name|appName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|application
operator|.
name|getContainers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

