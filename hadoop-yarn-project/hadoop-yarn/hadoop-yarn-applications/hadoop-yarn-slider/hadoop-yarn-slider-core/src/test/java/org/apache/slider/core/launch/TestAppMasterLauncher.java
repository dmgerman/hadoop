begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.launch
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|launch
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LogAggregationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|YarnClientApplication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|ResourceKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|client
operator|.
name|SliderYarnClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|SliderKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAppMasterLauncher
specifier|public
class|class
name|TestAppMasterLauncher
block|{
DECL|field|mockYarnClient
name|SliderYarnClientImpl
name|mockYarnClient
decl_stmt|;
DECL|field|yarnClientApp
name|YarnClientApplication
name|yarnClientApp
decl_stmt|;
DECL|field|appSubmissionContext
name|ApplicationSubmissionContext
name|appSubmissionContext
decl_stmt|;
DECL|field|tags
name|Set
argument_list|<
name|String
argument_list|>
name|tags
init|=
name|Collections
operator|.
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|appMasterLauncher
name|AppMasterLauncher
name|appMasterLauncher
init|=
literal|null
decl_stmt|;
DECL|field|isOldApi
name|boolean
name|isOldApi
init|=
literal|true
decl_stmt|;
DECL|field|rolledLogsIncludeMethod
name|Method
name|rolledLogsIncludeMethod
init|=
literal|null
decl_stmt|;
DECL|field|rolledLogsExcludeMethod
name|Method
name|rolledLogsExcludeMethod
init|=
literal|null
decl_stmt|;
annotation|@
name|Before
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|Exception
block|{
name|mockYarnClient
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|SliderYarnClientImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|yarnClientApp
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|YarnClientApplication
operator|.
name|class
argument_list|)
expr_stmt|;
name|appSubmissionContext
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|yarnClientApp
operator|.
name|getApplicationSubmissionContext
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|appSubmissionContext
argument_list|)
operator|.
name|once
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockYarnClient
operator|.
name|createApplication
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|yarnClientApp
argument_list|)
operator|.
name|once
argument_list|()
expr_stmt|;
try|try
block|{
name|LogAggregationContext
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"newInstance"
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|isOldApi
operator|=
literal|false
expr_stmt|;
name|rolledLogsIncludeMethod
operator|=
name|LogAggregationContext
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getRolledLogsIncludePattern"
argument_list|)
expr_stmt|;
name|rolledLogsExcludeMethod
operator|=
name|LogAggregationContext
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getRolledLogsExcludePattern"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|isOldApi
operator|=
literal|true
expr_stmt|;
block|}
block|}
comment|/**    * These tests will probably fail when compiled against hadoop 2.7+. Please    * refer to SLIDER-810. It has been purposely not modified so that it fails    * and that someone needs to modify the code in    * {@code AbstractLauncher#extractLogAggregationContext(Map)}. Comments are    * provided in that method as to what needs to be done.    *    * @throws Exception    */
annotation|@
name|Test
DECL|method|testExtractLogAggregationContext ()
specifier|public
name|void
name|testExtractLogAggregationContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_INCLUDE_PATTERNS
argument_list|,
literal|" | slider*.txt  |agent.out| |"
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_EXCLUDE_PATTERNS
argument_list|,
literal|"command*.json|  agent.log*        |     "
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
name|appMasterLauncher
operator|=
operator|new
name|AppMasterLauncher
argument_list|(
literal|"cl1"
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mockYarnClient
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|tags
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Verify the include/exclude patterns
name|String
name|expectedInclude
init|=
literal|"slider*.txt|agent.out"
decl_stmt|;
name|String
name|expectedExclude
init|=
literal|"command*.json|agent.log*"
decl_stmt|;
name|assertPatterns
argument_list|(
name|expectedInclude
argument_list|,
name|expectedExclude
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExtractLogAggregationContextEmptyIncludePattern ()
specifier|public
name|void
name|testExtractLogAggregationContextEmptyIncludePattern
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_INCLUDE_PATTERNS
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_EXCLUDE_PATTERNS
argument_list|,
literal|"command*.json|  agent.log*        |     "
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
name|appMasterLauncher
operator|=
operator|new
name|AppMasterLauncher
argument_list|(
literal|"cl1"
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mockYarnClient
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|tags
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Verify the include/exclude patterns
name|String
name|expectedInclude
init|=
name|isOldApi
condition|?
literal|""
else|:
literal|".*"
decl_stmt|;
name|String
name|expectedExclude
init|=
literal|"command*.json|agent.log*"
decl_stmt|;
name|assertPatterns
argument_list|(
name|expectedInclude
argument_list|,
name|expectedExclude
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExtractLogAggregationContextEmptyIncludeAndExcludePattern ()
specifier|public
name|void
name|testExtractLogAggregationContextEmptyIncludeAndExcludePattern
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_INCLUDE_PATTERNS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LOG_EXCLUDE_PATTERNS
argument_list|,
literal|"  "
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
name|appMasterLauncher
operator|=
operator|new
name|AppMasterLauncher
argument_list|(
literal|"cl1"
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mockYarnClient
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|tags
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Verify the include/exclude patterns
name|String
name|expectedInclude
init|=
name|isOldApi
condition|?
literal|""
else|:
literal|".*"
decl_stmt|;
name|String
name|expectedExclude
init|=
literal|""
decl_stmt|;
name|assertPatterns
argument_list|(
name|expectedInclude
argument_list|,
name|expectedExclude
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|mockYarnClient
argument_list|,
name|appSubmissionContext
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
block|}
DECL|method|assertPatterns (String expectedIncludePattern, String expectedExcludePattern)
specifier|private
name|void
name|assertPatterns
parameter_list|(
name|String
name|expectedIncludePattern
parameter_list|,
name|String
name|expectedExcludePattern
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|isOldApi
condition|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedIncludePattern
argument_list|,
name|appMasterLauncher
operator|.
name|logAggregationContext
operator|.
name|getIncludePattern
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedExcludePattern
argument_list|,
name|appMasterLauncher
operator|.
name|logAggregationContext
operator|.
name|getExcludePattern
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedIncludePattern
argument_list|,
operator|(
name|String
operator|)
name|rolledLogsIncludeMethod
operator|.
name|invoke
argument_list|(
name|appMasterLauncher
operator|.
name|logAggregationContext
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedExcludePattern
argument_list|,
operator|(
name|String
operator|)
name|rolledLogsExcludeMethod
operator|.
name|invoke
argument_list|(
name|appMasterLauncher
operator|.
name|logAggregationContext
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

