begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.model.appstate
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|model
operator|.
name|appstate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|ResourceKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|PlacementPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|model
operator|.
name|mock
operator|.
name|BaseMockAppStateTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|model
operator|.
name|mock
operator|.
name|MockRoles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|RoleStatus
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|ResourceKeys
operator|.
name|COMPONENT_PLACEMENT_POLICY
import|;
end_import

begin_comment
comment|/**  * Class for basis of Anti-affine placement tests; sets up role2  * for anti-affinity.  */
end_comment

begin_class
DECL|class|BaseMockAppStateAATest
specifier|public
class|class
name|BaseMockAppStateAATest
extends|extends
name|BaseMockAppStateTest
implements|implements
name|MockRoles
block|{
comment|/** Role status for the base AA role. */
DECL|field|aaRole
specifier|private
name|RoleStatus
name|aaRole
decl_stmt|;
comment|/** Role status for the AA role requiring a node with the gpu label. */
DECL|field|gpuRole
specifier|private
name|RoleStatus
name|gpuRole
decl_stmt|;
annotation|@
name|Override
DECL|method|buildApplication ()
specifier|public
name|Application
name|buildApplication
parameter_list|()
block|{
name|Application
name|application
init|=
name|factory
operator|.
name|newApplication
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|name
argument_list|(
name|getTestName
argument_list|()
argument_list|)
decl_stmt|;
name|application
operator|.
name|getComponent
argument_list|(
name|ROLE1
argument_list|)
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setProperty
argument_list|(
name|COMPONENT_PLACEMENT_POLICY
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|PlacementPolicy
operator|.
name|ANTI_AFFINITY_REQUIRED
argument_list|)
argument_list|)
expr_stmt|;
name|application
operator|.
name|getComponent
argument_list|(
name|ROLE1
argument_list|)
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ResourceKeys
operator|.
name|YARN_LABEL_EXPRESSION
argument_list|,
name|LABEL_GPU
argument_list|)
expr_stmt|;
name|application
operator|.
name|getComponent
argument_list|(
name|ROLE2
argument_list|)
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setProperty
argument_list|(
name|COMPONENT_PLACEMENT_POLICY
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|PlacementPolicy
operator|.
name|ANTI_AFFINITY_REQUIRED
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|application
return|;
block|}
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setup
argument_list|()
expr_stmt|;
name|aaRole
operator|=
name|lookupRole
argument_list|(
name|ROLE2
argument_list|)
expr_stmt|;
name|gpuRole
operator|=
name|lookupRole
argument_list|(
name|ROLE1
argument_list|)
expr_stmt|;
block|}
DECL|method|getAaRole ()
specifier|protected
name|RoleStatus
name|getAaRole
parameter_list|()
block|{
return|return
name|aaRole
return|;
block|}
DECL|method|getGpuRole ()
specifier|protected
name|RoleStatus
name|getGpuRole
parameter_list|()
block|{
return|return
name|gpuRole
return|;
block|}
block|}
end_class

end_unit

