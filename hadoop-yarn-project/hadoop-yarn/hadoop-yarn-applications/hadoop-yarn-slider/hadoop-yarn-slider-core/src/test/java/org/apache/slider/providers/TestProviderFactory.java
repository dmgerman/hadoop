begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|docker
operator|.
name|DockerKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|docker
operator|.
name|DockerProviderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test provider factories.  */
end_comment

begin_class
DECL|class|TestProviderFactory
specifier|public
class|class
name|TestProviderFactory
block|{
annotation|@
name|Test
DECL|method|testLoadAgentProvider ()
specifier|public
name|void
name|testLoadAgentProvider
parameter_list|()
throws|throws
name|Throwable
block|{
name|SliderProviderFactory
name|factory
init|=
name|SliderProviderFactory
operator|.
name|createSliderProviderFactory
argument_list|(
name|DockerKeys
operator|.
name|PROVIDER_DOCKER
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|factory
operator|instanceof
name|DockerProviderFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateClientProvider ()
specifier|public
name|void
name|testCreateClientProvider
parameter_list|()
throws|throws
name|Throwable
block|{
name|SliderProviderFactory
name|factory
init|=
name|SliderProviderFactory
operator|.
name|createSliderProviderFactory
argument_list|(
name|DockerKeys
operator|.
name|PROVIDER_DOCKER
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|factory
operator|.
name|createClientProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateProviderByClassname ()
specifier|public
name|void
name|testCreateProviderByClassname
parameter_list|()
throws|throws
name|Throwable
block|{
name|SliderProviderFactory
name|factory
init|=
name|SliderProviderFactory
operator|.
name|createSliderProviderFactory
argument_list|(
name|DockerKeys
operator|.
name|PROVIDER_DOCKER
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|factory
operator|.
name|createServerProvider
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|factory
operator|instanceof
name|DockerProviderFactory
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

