begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.conf
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|utils
operator|.
name|SliderTestUtils
operator|.
name|JSON_SER_DESER
import|;
end_import

begin_comment
comment|/**  * Test loading example resources.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|TestConfTreeLoadExamples
specifier|public
class|class
name|TestConfTreeLoadExamples
extends|extends
name|Assert
block|{
DECL|field|resource
specifier|private
name|String
name|resource
decl_stmt|;
DECL|method|TestConfTreeLoadExamples (String resource)
specifier|public
name|TestConfTreeLoadExamples
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
block|}
annotation|@
name|Parameterized
operator|.
name|Parameters
DECL|method|filenames ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|String
index|[]
argument_list|>
name|filenames
parameter_list|()
block|{
name|String
index|[]
index|[]
name|stringArray
init|=
operator|new
name|String
index|[
name|ExampleConfResources
operator|.
name|ALL_EXAMPLE_RESOURCES
operator|.
name|size
argument_list|()
index|]
index|[
literal|1
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|String
name|s
range|:
name|ExampleConfResources
operator|.
name|ALL_EXAMPLE_RESOURCES
control|)
block|{
name|stringArray
index|[
name|i
operator|++
index|]
index|[
literal|0
index|]
operator|=
name|s
expr_stmt|;
block|}
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|stringArray
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testLoadResource ()
specifier|public
name|void
name|testLoadResource
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|Application
name|application
init|=
name|JSON_SER_DESER
operator|.
name|fromResource
argument_list|(
name|resource
argument_list|)
decl_stmt|;
name|SliderUtils
operator|.
name|resolve
argument_list|(
name|application
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"exception loading "
operator|+
name|resource
operator|+
literal|":"
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

