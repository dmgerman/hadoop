begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.launch
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|launch
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|YarnClientApplication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|ResourceKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|client
operator|.
name|SliderYarnClientImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|SliderKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAppMasterLauncherWithAmReset
specifier|public
class|class
name|TestAppMasterLauncherWithAmReset
block|{
DECL|field|mockYarnClient
name|SliderYarnClientImpl
name|mockYarnClient
decl_stmt|;
DECL|field|yarnClientApp
name|YarnClientApplication
name|yarnClientApp
decl_stmt|;
DECL|field|appSubmissionContext
name|ApplicationSubmissionContext
name|appSubmissionContext
decl_stmt|;
DECL|field|newApp
name|GetNewApplicationResponse
name|newApp
decl_stmt|;
DECL|field|tags
name|Set
argument_list|<
name|String
argument_list|>
name|tags
init|=
name|Collections
operator|.
name|emptySet
argument_list|()
decl_stmt|;
DECL|field|appMasterLauncher
name|AppMasterLauncher
name|appMasterLauncher
init|=
literal|null
decl_stmt|;
DECL|field|isOldApi
name|boolean
name|isOldApi
init|=
literal|true
decl_stmt|;
annotation|@
name|Before
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|Exception
block|{
name|mockYarnClient
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|SliderYarnClientImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|yarnClientApp
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|YarnClientApplication
operator|.
name|class
argument_list|)
expr_stmt|;
name|newApp
operator|=
name|EasyMock
operator|.
name|createNiceMock
argument_list|(
name|GetNewApplicationResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|mockYarnClient
operator|.
name|createApplication
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|YarnClientApplication
argument_list|(
name|newApp
argument_list|,
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExtractYarnResourceManagerAmRetryCountWindowMs ()
specifier|public
name|void
name|testExtractYarnResourceManagerAmRetryCountWindowMs
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|String
name|expectedInterval
init|=
name|Integer
operator|.
name|toString
argument_list|(
literal|120000
argument_list|)
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
name|ResourceKeys
operator|.
name|YARN_RESOURCEMANAGER_AM_RETRY_COUNT_WINDOW_MS
argument_list|,
name|expectedInterval
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|mockYarnClient
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
name|appMasterLauncher
operator|=
operator|new
name|AppMasterLauncher
argument_list|(
literal|"am1"
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mockYarnClient
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|tags
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ApplicationSubmissionContext
name|ctx
init|=
name|appMasterLauncher
operator|.
name|application
operator|.
name|getApplicationSubmissionContext
argument_list|()
decl_stmt|;
name|String
name|retryIntervalWindow
init|=
name|Long
operator|.
name|toString
argument_list|(
name|ctx
operator|.
name|getAttemptFailuresValidityInterval
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedInterval
argument_list|,
name|retryIntervalWindow
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExtractYarnResourceManagerAmRetryCountWindowMsDefaultValue ()
specifier|public
name|void
name|testExtractYarnResourceManagerAmRetryCountWindowMsDefaultValue
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|options
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|mockYarnClient
argument_list|,
name|yarnClientApp
argument_list|)
expr_stmt|;
name|appMasterLauncher
operator|=
operator|new
name|AppMasterLauncher
argument_list|(
literal|"am1"
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mockYarnClient
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|tags
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ApplicationSubmissionContext
name|ctx
init|=
name|appMasterLauncher
operator|.
name|application
operator|.
name|getApplicationSubmissionContext
argument_list|()
decl_stmt|;
name|long
name|retryIntervalWindow
init|=
name|ctx
operator|.
name|getAttemptFailuresValidityInterval
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ResourceKeys
operator|.
name|DEFAULT_AM_RETRY_COUNT_WINDOW_MS
argument_list|,
name|retryIntervalWindow
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

