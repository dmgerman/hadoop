begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.model.mock
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|model
operator|.
name|mock
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_comment
comment|/**  * Mock resource.  */
end_comment

begin_class
DECL|class|MockResource
specifier|public
class|class
name|MockResource
extends|extends
name|Resource
block|{
DECL|field|memory
specifier|private
name|int
name|memory
decl_stmt|;
DECL|field|virtualCores
specifier|private
name|int
name|virtualCores
decl_stmt|;
DECL|method|MockResource (int memory, int vcores)
specifier|public
name|MockResource
parameter_list|(
name|int
name|memory
parameter_list|,
name|int
name|vcores
parameter_list|)
block|{
name|this
operator|.
name|memory
operator|=
name|memory
expr_stmt|;
name|this
operator|.
name|virtualCores
operator|=
name|vcores
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|compareTo (Resource other)
specifier|public
name|int
name|compareTo
parameter_list|(
name|Resource
name|other
parameter_list|)
block|{
name|long
name|diff
init|=
name|this
operator|.
name|getMemorySize
argument_list|()
operator|-
name|other
operator|.
name|getMemorySize
argument_list|()
decl_stmt|;
if|if
condition|(
name|diff
operator|==
literal|0
condition|)
block|{
name|diff
operator|=
name|this
operator|.
name|getVirtualCores
argument_list|()
operator|-
name|other
operator|.
name|getVirtualCores
argument_list|()
expr_stmt|;
block|}
return|return
name|diff
operator|==
literal|0
condition|?
literal|0
else|:
operator|(
name|diff
operator|>
literal|0
condition|?
literal|1
else|:
operator|-
literal|1
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|getMemorySize ()
specifier|public
name|long
name|getMemorySize
parameter_list|()
block|{
return|return
name|memory
return|;
block|}
annotation|@
name|Override
DECL|method|setMemorySize (long memorySize)
specifier|public
name|void
name|setMemorySize
parameter_list|(
name|long
name|memorySize
parameter_list|)
block|{
name|memory
operator|=
operator|(
name|int
operator|)
name|memorySize
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getVirtualCores ()
specifier|public
name|int
name|getVirtualCores
parameter_list|()
block|{
return|return
name|virtualCores
return|;
block|}
annotation|@
name|Override
DECL|method|setVirtualCores (int vCores)
specifier|public
name|void
name|setVirtualCores
parameter_list|(
name|int
name|vCores
parameter_list|)
block|{
name|this
operator|.
name|virtualCores
operator|=
name|vCores
expr_stmt|;
block|}
annotation|@
name|Deprecated
annotation|@
name|Override
DECL|method|getMemory ()
specifier|public
name|int
name|getMemory
parameter_list|()
block|{
return|return
name|memory
return|;
block|}
annotation|@
name|Deprecated
annotation|@
name|Override
DECL|method|setMemory (int memory)
specifier|public
name|void
name|setMemory
parameter_list|(
name|int
name|memory
parameter_list|)
block|{
name|this
operator|.
name|memory
operator|=
name|memory
expr_stmt|;
block|}
block|}
end_class

end_unit

