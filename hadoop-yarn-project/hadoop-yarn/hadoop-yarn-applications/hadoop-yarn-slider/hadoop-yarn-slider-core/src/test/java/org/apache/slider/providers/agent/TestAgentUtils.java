begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|Metainfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|tools
operator|.
name|TestUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TestAgentUtils
specifier|public
class|class
name|TestAgentUtils
block|{
DECL|field|log
specifier|protected
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestAgentUtils
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Rule
DECL|field|folder
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
DECL|field|metainfo_str
specifier|private
specifier|static
specifier|final
name|String
name|metainfo_str
init|=
literal|"<metainfo>\n"
operator|+
literal|"<schemaVersion>2.0</schemaVersion>\n"
operator|+
literal|"<application>\n"
operator|+
literal|"<name>MYTESTAPPLICATION</name>\n"
operator|+
literal|"<comment>\n"
operator|+
literal|"        My Test Application\n"
operator|+
literal|"</comment>\n"
operator|+
literal|"<version>1.0</version>\n"
operator|+
literal|"<type>YARN-APP</type>\n"
operator|+
literal|"<components>\n"
operator|+
literal|"<component>\n"
operator|+
literal|"<name>REST</name>\n"
operator|+
literal|"<category>MASTER</category>\n"
operator|+
literal|"<commandScript>\n"
operator|+
literal|"<script>scripts/rest.py</script>\n"
operator|+
literal|"<scriptType>PYTHON</scriptType>\n"
operator|+
literal|"<timeout>600</timeout>\n"
operator|+
literal|"</commandScript>\n"
operator|+
literal|"</component>\n"
operator|+
literal|"</components>\n"
operator|+
literal|"</application>\n"
operator|+
literal|"</metainfo>"
decl_stmt|;
annotation|@
name|Test
DECL|method|testGetApplicationMetainfo ()
specifier|public
name|void
name|testGetApplicationMetainfo
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|zipFileName
init|=
name|TestUtility
operator|.
name|createAppPackage
argument_list|(
name|folder
argument_list|,
literal|"testpkg"
argument_list|,
literal|"test.zip"
argument_list|,
literal|"target/test-classes/org/apache/slider/common/tools/test"
argument_list|)
decl_stmt|;
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"fs working dir is {}"
argument_list|,
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|SliderFileSystem
name|sliderFileSystem
init|=
operator|new
name|SliderFileSystem
argument_list|(
name|fs
argument_list|,
name|configuration
argument_list|)
decl_stmt|;
comment|// Without accompany metainfo file, read metainfo from the zip file
name|Metainfo
name|metainfo
init|=
name|AgentUtils
operator|.
name|getApplicationMetainfo
argument_list|(
name|sliderFileSystem
argument_list|,
name|zipFileName
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|metainfo
operator|.
name|getApplication
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"STORM"
argument_list|,
name|metainfo
operator|.
name|getApplication
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// With accompany metainfo file, read metainfo from the accompany file
name|String
name|acompanyFileName
init|=
name|zipFileName
operator|+
literal|".metainfo.xml"
decl_stmt|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|acompanyFileName
argument_list|)
decl_stmt|;
try|try
init|(
name|BufferedWriter
name|writer
init|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|f
argument_list|)
argument_list|)
init|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|metainfo_str
argument_list|)
expr_stmt|;
block|}
name|metainfo
operator|=
name|AgentUtils
operator|.
name|getApplicationMetainfo
argument_list|(
name|sliderFileSystem
argument_list|,
name|zipFileName
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|metainfo
operator|.
name|getApplication
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"MYTESTAPPLICATION"
argument_list|,
name|metainfo
operator|.
name|getApplication
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

