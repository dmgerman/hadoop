begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TestComponentTagProvider
specifier|public
class|class
name|TestComponentTagProvider
block|{
DECL|field|log
specifier|protected
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestComponentTagProvider
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testTagProvider ()
specifier|public
name|void
name|testTagProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|ComponentTagProvider
name|ctp
init|=
operator|new
name|ComponentTagProvider
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|null
argument_list|,
literal|"cid"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid3"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid2"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid22"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid4"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid5"
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid4"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid4"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"6"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid6"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid55"
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"5"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid55"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb3"
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb4"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|"six"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|"-55"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|"tags"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb5"
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"6"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp2"
argument_list|,
literal|"cidb6"
argument_list|)
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|"comp2"
argument_list|,
literal|null
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|recordAssignedTag
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|"comp1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|null
argument_list|,
literal|"cid4"
argument_list|)
expr_stmt|;
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTagProviderWithThread ()
specifier|public
name|void
name|testTagProviderWithThread
parameter_list|()
throws|throws
name|Exception
block|{
name|ComponentTagProvider
name|ctp
init|=
operator|new
name|ComponentTagProvider
argument_list|()
decl_stmt|;
name|Thread
name|thread
init|=
operator|new
name|Thread
argument_list|(
operator|new
name|Taggged
argument_list|(
name|ctp
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
name|thread2
init|=
operator|new
name|Thread
argument_list|(
operator|new
name|Taggged
argument_list|(
name|ctp
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
name|thread3
init|=
operator|new
name|Thread
argument_list|(
operator|new
name|Taggged
argument_list|(
name|ctp
argument_list|)
argument_list|)
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|thread2
operator|.
name|start
argument_list|()
expr_stmt|;
name|thread3
operator|.
name|start
argument_list|()
expr_stmt|;
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid50"
argument_list|)
expr_stmt|;
name|thread
operator|.
name|join
argument_list|()
expr_stmt|;
name|thread2
operator|.
name|join
argument_list|()
expr_stmt|;
name|thread3
operator|.
name|join
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"101"
argument_list|,
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
literal|"cid101"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|Taggged
specifier|public
class|class
name|Taggged
implements|implements
name|Runnable
block|{
DECL|field|ctp
specifier|private
specifier|final
name|ComponentTagProvider
name|ctp
decl_stmt|;
DECL|method|Taggged (ComponentTagProvider ctp)
specifier|public
name|Taggged
parameter_list|(
name|ComponentTagProvider
name|ctp
parameter_list|)
block|{
name|this
operator|.
name|ctp
operator|=
name|ctp
expr_stmt|;
block|}
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|String
name|containerId
init|=
literal|"cid"
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
decl_stmt|;
name|this
operator|.
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
name|containerId
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|String
name|containerId
init|=
literal|"cid"
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
decl_stmt|;
name|this
operator|.
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
name|containerId
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|String
name|containerId
init|=
literal|"cid"
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
decl_stmt|;
name|this
operator|.
name|ctp
operator|.
name|releaseTag
argument_list|(
literal|"comp1"
argument_list|,
name|containerId
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|String
name|containerId
init|=
literal|"cid"
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
decl_stmt|;
name|this
operator|.
name|ctp
operator|.
name|getTag
argument_list|(
literal|"comp1"
argument_list|,
name|containerId
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

