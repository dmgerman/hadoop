begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.publisher
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|publisher
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|AgentProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|actions
operator|.
name|QueueAccess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|TestAgentProviderService
specifier|public
class|class
name|TestAgentProviderService
extends|extends
name|AgentProviderService
block|{
DECL|field|log
specifier|protected
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestAgentProviderService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|TestAgentProviderService ()
specifier|public
name|TestAgentProviderService
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"TestAgentProviderService created"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|bind (StateAccessForProviders stateAccessor, QueueAccess queueAccess, List<Container> liveContainers)
specifier|public
name|void
name|bind
parameter_list|(
name|StateAccessForProviders
name|stateAccessor
parameter_list|,
name|QueueAccess
name|queueAccess
parameter_list|,
name|List
argument_list|<
name|Container
argument_list|>
name|liveContainers
parameter_list|)
block|{
name|super
operator|.
name|bind
argument_list|(
name|stateAccessor
argument_list|,
name|queueAccess
argument_list|,
name|liveContainers
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|dummyProps
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|dummyProps
operator|.
name|put
argument_list|(
literal|"prop1"
argument_list|,
literal|"val1"
argument_list|)
expr_stmt|;
name|dummyProps
operator|.
name|put
argument_list|(
literal|"prop2"
argument_list|,
literal|"val2"
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"publishing dummy-site.xml with values {}"
argument_list|,
name|dummyProps
argument_list|)
expr_stmt|;
name|publishApplicationInstanceData
argument_list|(
literal|"dummy-site"
argument_list|,
literal|"dummy configuration"
argument_list|,
name|dummyProps
operator|.
name|entrySet
argument_list|()
argument_list|)
expr_stmt|;
comment|// publishing global config for testing purposes
name|publishApplicationInstanceData
argument_list|(
literal|"global"
argument_list|,
literal|"global configuration"
argument_list|,
name|stateAccessor
operator|.
name|getAppConfSnapshot
argument_list|()
operator|.
name|getGlobalOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

