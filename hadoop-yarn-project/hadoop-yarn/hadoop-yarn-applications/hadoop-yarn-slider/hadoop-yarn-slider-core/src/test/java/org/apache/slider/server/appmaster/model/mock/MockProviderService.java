begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.model.mock
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|model
operator|.
name|mock
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|LifecycleEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|ServiceStateChangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|launch
operator|.
name|ContainerLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|ProviderRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|ProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|RoleInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|timelineservice
operator|.
name|ServiceTimelinePublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|yarnregistry
operator|.
name|YarnRegistryViewForProviders
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Mock provider service.  */
end_comment

begin_class
DECL|class|MockProviderService
specifier|public
class|class
name|MockProviderService
implements|implements
name|ProviderService
block|{
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration config)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|config
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{   }
annotation|@
name|Override
DECL|method|registerServiceListener (ServiceStateChangeListener listener)
specifier|public
name|void
name|registerServiceListener
parameter_list|(
name|ServiceStateChangeListener
name|listener
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|unregisterServiceListener (ServiceStateChangeListener listener)
specifier|public
name|void
name|unregisterServiceListener
parameter_list|(
name|ServiceStateChangeListener
name|listener
parameter_list|)
block|{   }
annotation|@
name|Override
DECL|method|getConfig ()
specifier|public
name|Configuration
name|getConfig
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|getServiceState ()
specifier|public
name|STATE
name|getServiceState
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getStartTime ()
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|isInState (STATE state)
specifier|public
name|boolean
name|isInState
parameter_list|(
name|STATE
name|state
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|getFailureCause ()
specifier|public
name|Throwable
name|getFailureCause
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getFailureState ()
specifier|public
name|STATE
name|getFailureState
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|waitForServiceToStop (long timeout)
specifier|public
name|boolean
name|waitForServiceToStop
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|getLifecycleHistory ()
specifier|public
name|List
argument_list|<
name|LifecycleEvent
argument_list|>
name|getLifecycleHistory
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getBlockers ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getBlockers
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|buildContainerLaunchContext (ContainerLauncher containerLauncher, Application application, Container container, ProviderRole providerRole, SliderFileSystem sliderFileSystem, RoleInstance roleInstance)
specifier|public
name|void
name|buildContainerLaunchContext
parameter_list|(
name|ContainerLauncher
name|containerLauncher
parameter_list|,
name|Application
name|application
parameter_list|,
name|Container
name|container
parameter_list|,
name|ProviderRole
name|providerRole
parameter_list|,
name|SliderFileSystem
name|sliderFileSystem
parameter_list|,
name|RoleInstance
name|roleInstance
parameter_list|)
throws|throws
name|IOException
throws|,
name|SliderException
block|{    }
annotation|@
name|Override
DECL|method|setAMState (StateAccessForProviders stateAccessForProviders)
specifier|public
name|void
name|setAMState
parameter_list|(
name|StateAccessForProviders
name|stateAccessForProviders
parameter_list|)
block|{    }
annotation|@
name|Override
DECL|method|bindToYarnRegistry (YarnRegistryViewForProviders yarnRegistry)
specifier|public
name|void
name|bindToYarnRegistry
parameter_list|(
name|YarnRegistryViewForProviders
name|yarnRegistry
parameter_list|)
block|{    }
annotation|@
name|Override
DECL|method|processContainerStatus (ContainerId containerId, ContainerStatus status)
specifier|public
name|boolean
name|processContainerStatus
parameter_list|(
name|ContainerId
name|containerId
parameter_list|,
name|ContainerStatus
name|status
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|setServiceTimelinePublisher ( ServiceTimelinePublisher serviceTimelinePublisher)
specifier|public
name|void
name|setServiceTimelinePublisher
parameter_list|(
name|ServiceTimelinePublisher
name|serviceTimelinePublisher
parameter_list|)
block|{    }
block|}
end_class

end_unit

