begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.common.tools
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|utils
operator|.
name|YarnMiniClusterTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_comment
comment|/**  * Test config helper loading configuration from HDFS.  */
end_comment

begin_class
DECL|class|TestConfigHelperHDFS
specifier|public
class|class
name|TestConfigHelperHDFS
extends|extends
name|YarnMiniClusterTestBase
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestConfigHelperHDFS
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//@Test
DECL|method|testConfigHelperHDFS ()
specifier|public
name|void
name|testConfigHelperHDFS
parameter_list|()
throws|throws
name|Throwable
block|{
name|YarnConfiguration
name|config
init|=
name|getConfiguration
argument_list|()
decl_stmt|;
name|createMiniHDFSCluster
argument_list|(
literal|"testConfigHelperHDFS"
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|URI
name|fsURI
init|=
operator|new
name|URI
argument_list|(
name|getFsDefaultName
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|fsURI
argument_list|)
decl_stmt|;
name|Path
name|confPath
init|=
operator|new
name|Path
argument_list|(
name|root
argument_list|,
literal|"conf.xml"
argument_list|)
decl_stmt|;
name|FileSystem
name|dfs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|fsURI
argument_list|,
name|config
argument_list|)
decl_stmt|;
name|ConfigHelper
operator|.
name|saveConfig
argument_list|(
name|dfs
argument_list|,
name|confPath
argument_list|,
name|conf
argument_list|)
expr_stmt|;
comment|//load time
name|Configuration
name|loaded
init|=
name|ConfigHelper
operator|.
name|loadConfiguration
argument_list|(
name|dfs
argument_list|,
name|confPath
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|ConfigHelper
operator|.
name|dumpConfigToString
argument_list|(
name|loaded
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|loaded
operator|.
name|get
argument_list|(
literal|"key"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

