begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.services.security
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|SliderKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|AggregateConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|MapOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|TruststoreGenerator
specifier|public
class|class
name|TruststoreGenerator
extends|extends
name|AbstractSecurityStoreGenerator
block|{
DECL|method|TruststoreGenerator (CertificateManager certificateMgr)
specifier|public
name|TruststoreGenerator
parameter_list|(
name|CertificateManager
name|certificateMgr
parameter_list|)
block|{
name|super
argument_list|(
name|certificateMgr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|generate (String hostname, String containerId, AggregateConf instanceDefinition, MapOperations compOps, String role)
specifier|public
name|SecurityStore
name|generate
parameter_list|(
name|String
name|hostname
parameter_list|,
name|String
name|containerId
parameter_list|,
name|AggregateConf
name|instanceDefinition
parameter_list|,
name|MapOperations
name|compOps
parameter_list|,
name|String
name|role
parameter_list|)
throws|throws
name|SliderException
throws|,
name|IOException
block|{
name|SecurityStore
name|truststore
init|=
literal|null
decl_stmt|;
name|String
name|password
init|=
name|getStorePassword
argument_list|(
name|instanceDefinition
operator|.
name|getAppConf
argument_list|()
operator|.
name|credentials
argument_list|,
name|compOps
argument_list|,
name|role
argument_list|)
decl_stmt|;
if|if
condition|(
name|password
operator|!=
literal|null
condition|)
block|{
name|truststore
operator|=
name|certificateMgr
operator|.
name|generateContainerTruststore
argument_list|(
name|containerId
argument_list|,
name|role
argument_list|,
name|password
argument_list|)
expr_stmt|;
block|}
return|return
name|truststore
return|;
block|}
annotation|@
name|Override
DECL|method|getPassword (MapOperations compOps)
name|String
name|getPassword
parameter_list|(
name|MapOperations
name|compOps
parameter_list|)
block|{
return|return
name|compOps
operator|.
name|get
argument_list|(
name|compOps
operator|.
name|get
argument_list|(
name|SliderKeys
operator|.
name|COMP_TRUSTSTORE_PASSWORD_PROPERTY_KEY
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAlias (MapOperations compOps)
name|String
name|getAlias
parameter_list|(
name|MapOperations
name|compOps
parameter_list|)
block|{
return|return
name|compOps
operator|.
name|getOption
argument_list|(
name|SliderKeys
operator|.
name|COMP_TRUSTSTORE_PASSWORD_ALIAS_KEY
argument_list|,
name|SliderKeys
operator|.
name|COMP_TRUSTSTORE_PASSWORD_ALIAS_DEFAULT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

