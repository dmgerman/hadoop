begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.actions
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|SliderAppMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|AppState
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * Asynchronous registration operation  */
end_comment

begin_class
DECL|class|ActionRegisterServiceInstance
specifier|public
class|class
name|ActionRegisterServiceInstance
extends|extends
name|AsyncAction
block|{
DECL|field|instanceName
specifier|private
specifier|final
name|String
name|instanceName
decl_stmt|;
DECL|field|appId
specifier|private
specifier|final
name|ApplicationId
name|appId
decl_stmt|;
DECL|method|ActionRegisterServiceInstance (String instanceName, ApplicationId appId)
specifier|public
name|ActionRegisterServiceInstance
parameter_list|(
name|String
name|instanceName
parameter_list|,
name|ApplicationId
name|appId
parameter_list|)
block|{
name|super
argument_list|(
literal|"ActionRegisterServiceInstance"
argument_list|)
expr_stmt|;
name|this
operator|.
name|instanceName
operator|=
name|instanceName
expr_stmt|;
name|this
operator|.
name|appId
operator|=
name|appId
expr_stmt|;
block|}
DECL|method|ActionRegisterServiceInstance (String instanceName, ApplicationId appId, long delay, TimeUnit timeUnit)
specifier|public
name|ActionRegisterServiceInstance
parameter_list|(
name|String
name|instanceName
parameter_list|,
name|ApplicationId
name|appId
parameter_list|,
name|long
name|delay
parameter_list|,
name|TimeUnit
name|timeUnit
parameter_list|)
block|{
name|super
argument_list|(
literal|"ActionRegisterServiceInstance"
argument_list|,
name|delay
argument_list|,
name|timeUnit
argument_list|)
expr_stmt|;
name|this
operator|.
name|instanceName
operator|=
name|instanceName
expr_stmt|;
name|this
operator|.
name|appId
operator|=
name|appId
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute (SliderAppMaster appMaster, QueueAccess queueService, AppState appState)
specifier|public
name|void
name|execute
parameter_list|(
name|SliderAppMaster
name|appMaster
parameter_list|,
name|QueueAccess
name|queueService
parameter_list|,
name|AppState
name|appState
parameter_list|)
throws|throws
name|Exception
block|{
comment|// YARN Registry do the registration
name|appMaster
operator|.
name|registerServiceInstance
argument_list|(
name|instanceName
argument_list|,
name|appId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

