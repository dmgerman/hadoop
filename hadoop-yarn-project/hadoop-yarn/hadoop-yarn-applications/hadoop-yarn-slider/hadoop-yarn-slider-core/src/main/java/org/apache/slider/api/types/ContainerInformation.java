begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.api.types
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|binding
operator|.
name|JsonSerDeser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_comment
comment|/**  * Serializable version of component instance data  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|ContainerInformation
specifier|public
class|class
name|ContainerInformation
block|{
DECL|field|containerId
specifier|public
name|String
name|containerId
decl_stmt|;
DECL|field|component
specifier|public
name|String
name|component
decl_stmt|;
DECL|field|appVersion
specifier|public
name|String
name|appVersion
decl_stmt|;
DECL|field|released
specifier|public
name|Boolean
name|released
decl_stmt|;
DECL|field|state
specifier|public
name|int
name|state
decl_stmt|;
DECL|field|exitCode
specifier|public
name|Integer
name|exitCode
decl_stmt|;
DECL|field|diagnostics
specifier|public
name|String
name|diagnostics
decl_stmt|;
DECL|field|createTime
specifier|public
name|long
name|createTime
decl_stmt|;
DECL|field|startTime
specifier|public
name|long
name|startTime
decl_stmt|;
DECL|field|host
specifier|public
name|String
name|host
decl_stmt|;
DECL|field|hostURL
specifier|public
name|String
name|hostURL
decl_stmt|;
DECL|field|placement
specifier|public
name|String
name|placement
decl_stmt|;
comment|/**    * What is the tail output from the executed process (or [] if not started    * or the log cannot be picked up    */
DECL|field|output
specifier|public
name|String
index|[]
name|output
decl_stmt|;
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|JsonSerDeser
argument_list|<
name|ContainerInformation
argument_list|>
name|serDeser
init|=
operator|new
name|JsonSerDeser
argument_list|<>
argument_list|(
name|ContainerInformation
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|serDeser
operator|.
name|toString
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class

end_unit

