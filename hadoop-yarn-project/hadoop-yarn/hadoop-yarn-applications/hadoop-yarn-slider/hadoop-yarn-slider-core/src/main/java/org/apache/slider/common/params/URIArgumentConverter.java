begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.common.params
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|params
package|;
end_package

begin_import
import|import
name|com
operator|.
name|beust
operator|.
name|jcommander
operator|.
name|converters
operator|.
name|BaseConverter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_class
DECL|class|URIArgumentConverter
specifier|public
class|class
name|URIArgumentConverter
extends|extends
name|BaseConverter
argument_list|<
name|URI
argument_list|>
block|{
DECL|method|URIArgumentConverter (String optionName)
specifier|public
name|URIArgumentConverter
parameter_list|(
name|String
name|optionName
parameter_list|)
block|{
name|super
argument_list|(
name|optionName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|convert (String value)
specifier|public
name|URI
name|convert
parameter_list|(
name|String
name|value
parameter_list|)
block|{
try|try
block|{
return|return
operator|new
name|URI
argument_list|(
name|value
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Cannot make a URI from "
operator|+
name|value
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

