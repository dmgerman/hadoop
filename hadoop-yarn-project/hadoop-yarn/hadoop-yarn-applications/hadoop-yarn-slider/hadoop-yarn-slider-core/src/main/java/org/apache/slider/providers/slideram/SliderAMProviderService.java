begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers.slideram
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|slideram
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|HdfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|binding
operator|.
name|RegistryTypeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|types
operator|.
name|ServiceRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|SliderKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|ConfigHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|AggregateConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|MapOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|BadCommandArgumentsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|launch
operator|.
name|ContainerLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
operator|.
name|docstore
operator|.
name|PublishedConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
operator|.
name|info
operator|.
name|CustomRegistryConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|AbstractProviderService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|ProviderCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|ProviderRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|AgentKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|PublishedArtifacts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|RestPaths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|RestPaths
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Exists just to move some functionality out of AppMaster into a peer class  * of the actual service provider doing the real work  */
end_comment

begin_class
DECL|class|SliderAMProviderService
specifier|public
class|class
name|SliderAMProviderService
extends|extends
name|AbstractProviderService
implements|implements
name|ProviderCore
implements|,
name|AgentKeys
implements|,
name|SliderKeys
block|{
DECL|method|SliderAMProviderService ()
specifier|public
name|SliderAMProviderService
parameter_list|()
block|{
name|super
argument_list|(
literal|"SliderAMProviderService"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHumanName ()
specifier|public
name|String
name|getHumanName
parameter_list|()
block|{
return|return
literal|"Slider Application"
return|;
block|}
annotation|@
name|Override
DECL|method|loadProviderConfigurationInformation (File confDir)
specifier|public
name|Configuration
name|loadProviderConfigurationInformation
parameter_list|(
name|File
name|confDir
parameter_list|)
throws|throws
name|BadCommandArgumentsException
throws|,
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|buildContainerLaunchContext (ContainerLauncher containerLauncher, AggregateConf instanceDefinition, Container container, ProviderRole role, SliderFileSystem sliderFileSystem, Path generatedConfPath, MapOperations resourceComponent, MapOperations appComponent, Path containerTmpDirPath)
specifier|public
name|void
name|buildContainerLaunchContext
parameter_list|(
name|ContainerLauncher
name|containerLauncher
parameter_list|,
name|AggregateConf
name|instanceDefinition
parameter_list|,
name|Container
name|container
parameter_list|,
name|ProviderRole
name|role
parameter_list|,
name|SliderFileSystem
name|sliderFileSystem
parameter_list|,
name|Path
name|generatedConfPath
parameter_list|,
name|MapOperations
name|resourceComponent
parameter_list|,
name|MapOperations
name|appComponent
parameter_list|,
name|Path
name|containerTmpDirPath
parameter_list|)
throws|throws
name|IOException
throws|,
name|SliderException
block|{   }
annotation|@
name|Override
DECL|method|getRoles ()
specifier|public
name|List
argument_list|<
name|ProviderRole
argument_list|>
name|getRoles
parameter_list|()
block|{
return|return
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|validateInstanceDefinition (AggregateConf instanceDefinition)
specifier|public
name|void
name|validateInstanceDefinition
parameter_list|(
name|AggregateConf
name|instanceDefinition
parameter_list|)
throws|throws
name|SliderException
block|{    }
annotation|@
name|Override
DECL|method|applyInitialRegistryDefinitions (URL amWebURI, URL agentOpsURI, URL agentStatusURI, ServiceRecord serviceRecord)
specifier|public
name|void
name|applyInitialRegistryDefinitions
parameter_list|(
name|URL
name|amWebURI
parameter_list|,
name|URL
name|agentOpsURI
parameter_list|,
name|URL
name|agentStatusURI
parameter_list|,
name|ServiceRecord
name|serviceRecord
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|applyInitialRegistryDefinitions
argument_list|(
name|amWebURI
argument_list|,
name|agentOpsURI
argument_list|,
name|agentStatusURI
argument_list|,
name|serviceRecord
argument_list|)
expr_stmt|;
comment|// now publish site.xml files
name|YarnConfiguration
name|defaultYarnConfig
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|amState
operator|.
name|getPublishedSliderConfigurations
argument_list|()
operator|.
name|put
argument_list|(
name|PublishedArtifacts
operator|.
name|COMPLETE_CONFIG
argument_list|,
operator|new
name|PublishedConfiguration
argument_list|(
literal|"Complete slider application settings"
argument_list|,
name|getConfig
argument_list|()
argument_list|,
name|getConfig
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|amState
operator|.
name|getPublishedSliderConfigurations
argument_list|()
operator|.
name|put
argument_list|(
name|PublishedArtifacts
operator|.
name|YARN_SITE_CONFIG
argument_list|,
operator|new
name|PublishedConfiguration
argument_list|(
literal|"YARN site settings"
argument_list|,
name|ConfigHelper
operator|.
name|loadFromResource
argument_list|(
literal|"yarn-site.xml"
argument_list|)
argument_list|,
name|defaultYarnConfig
argument_list|)
argument_list|)
expr_stmt|;
name|amState
operator|.
name|getPublishedSliderConfigurations
argument_list|()
operator|.
name|put
argument_list|(
name|PublishedArtifacts
operator|.
name|CORE_SITE_CONFIG
argument_list|,
operator|new
name|PublishedConfiguration
argument_list|(
literal|"Core site settings"
argument_list|,
name|ConfigHelper
operator|.
name|loadFromResource
argument_list|(
literal|"core-site.xml"
argument_list|)
argument_list|,
name|defaultYarnConfig
argument_list|)
argument_list|)
expr_stmt|;
name|amState
operator|.
name|getPublishedSliderConfigurations
argument_list|()
operator|.
name|put
argument_list|(
name|PublishedArtifacts
operator|.
name|HDFS_SITE_CONFIG
argument_list|,
operator|new
name|PublishedConfiguration
argument_list|(
literal|"HDFS site settings"
argument_list|,
name|ConfigHelper
operator|.
name|loadFromResource
argument_list|(
literal|"hdfs-site.xml"
argument_list|)
argument_list|,
operator|new
name|HdfsConfiguration
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|URL
name|managementAPI
init|=
operator|new
name|URL
argument_list|(
name|amWebURI
argument_list|,
name|RELATIVE_PATH_MANAGEMENT
argument_list|)
decl_stmt|;
name|URL
name|registryREST
init|=
operator|new
name|URL
argument_list|(
name|amWebURI
argument_list|,
name|RELATIVE_PATH_REGISTRY
argument_list|)
decl_stmt|;
name|URL
name|publisherURL
init|=
operator|new
name|URL
argument_list|(
name|amWebURI
argument_list|,
name|RELATIVE_PATH_PUBLISHER
argument_list|)
decl_stmt|;
comment|// Set the configurations URL.
name|String
name|configurationsURL
init|=
name|SliderUtils
operator|.
name|appendToURL
argument_list|(
name|publisherURL
operator|.
name|toExternalForm
argument_list|()
argument_list|,
name|RestPaths
operator|.
name|SLIDER_CONFIGSET
argument_list|)
decl_stmt|;
name|String
name|exportsURL
init|=
name|SliderUtils
operator|.
name|appendToURL
argument_list|(
name|publisherURL
operator|.
name|toExternalForm
argument_list|()
argument_list|,
name|RestPaths
operator|.
name|SLIDER_EXPORTS
argument_list|)
decl_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|webEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|WEB_UI
argument_list|,
name|amWebURI
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|webEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|AM_REST_BASE
argument_list|,
name|amWebURI
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|restEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|MANAGEMENT_REST_API
argument_list|,
name|managementAPI
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|restEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|PUBLISHER_REST_API
argument_list|,
name|publisherURL
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|restEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|REGISTRY_REST_API
argument_list|,
name|registryREST
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|restEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|PUBLISHER_CONFIGURATIONS_API
argument_list|,
operator|new
name|URI
argument_list|(
name|configurationsURL
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|serviceRecord
operator|.
name|addExternalEndpoint
argument_list|(
name|RegistryTypeUtils
operator|.
name|restEndpoint
argument_list|(
name|CustomRegistryConstants
operator|.
name|PUBLISHER_EXPORTS_API
argument_list|,
operator|new
name|URI
argument_list|(
name|exportsURL
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

