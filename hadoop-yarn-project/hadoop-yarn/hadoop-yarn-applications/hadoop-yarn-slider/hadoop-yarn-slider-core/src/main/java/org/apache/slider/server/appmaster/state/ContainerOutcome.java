begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.state
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerExitStatus
import|;
end_import

begin_comment
comment|/**  * Container outcomes we care about; slightly simplified from  * {@link ContainerExitStatus} -and hopefully able to handle  * any new exit codes.  */
end_comment

begin_enum
DECL|enum|ContainerOutcome
specifier|public
enum|enum
name|ContainerOutcome
block|{
DECL|enumConstant|Completed
name|Completed
block|,
DECL|enumConstant|Failed
name|Failed
block|,
DECL|enumConstant|Failed_limits_exceeded
name|Failed_limits_exceeded
block|,
DECL|enumConstant|Node_failure
name|Node_failure
block|,
DECL|enumConstant|Preempted
name|Preempted
block|;
comment|/**    * Build a container outcome from an exit status.    * The values in {@link ContainerExitStatus} are used    * here.    * @param exitStatus exit status    * @return an enumeration of the outcome.    */
DECL|method|fromExitStatus (int exitStatus)
specifier|public
specifier|static
name|ContainerOutcome
name|fromExitStatus
parameter_list|(
name|int
name|exitStatus
parameter_list|)
block|{
switch|switch
condition|(
name|exitStatus
condition|)
block|{
case|case
name|ContainerExitStatus
operator|.
name|ABORTED
case|:
case|case
name|ContainerExitStatus
operator|.
name|KILLED_BY_APPMASTER
case|:
case|case
name|ContainerExitStatus
operator|.
name|KILLED_BY_RESOURCEMANAGER
case|:
case|case
name|ContainerExitStatus
operator|.
name|KILLED_AFTER_APP_COMPLETION
case|:
comment|// could either be a release or node failure. Treat as completion
return|return
name|Completed
return|;
case|case
name|ContainerExitStatus
operator|.
name|DISKS_FAILED
case|:
return|return
name|Node_failure
return|;
case|case
name|ContainerExitStatus
operator|.
name|PREEMPTED
case|:
return|return
name|Preempted
return|;
case|case
name|ContainerExitStatus
operator|.
name|KILLED_EXCEEDED_PMEM
case|:
case|case
name|ContainerExitStatus
operator|.
name|KILLED_EXCEEDED_VMEM
case|:
return|return
name|Failed_limits_exceeded
return|;
default|default:
return|return
name|exitStatus
operator|==
literal|0
condition|?
name|Completed
else|:
name|Failed
return|;
block|}
block|}
block|}
end_enum

end_unit

