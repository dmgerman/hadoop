begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.application.resources
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|application
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|AggregateConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|ConfTree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|persist
operator|.
name|ConfTreeSerDeser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_comment
comment|/**  * refresher for resources and application configuration  */
end_comment

begin_class
DECL|class|AppconfRefresher
specifier|public
class|class
name|AppconfRefresher
implements|implements
name|ResourceRefresher
argument_list|<
name|ConfTree
argument_list|>
block|{
DECL|field|state
specifier|private
specifier|final
name|StateAccessForProviders
name|state
decl_stmt|;
DECL|field|unresolved
specifier|private
specifier|final
name|boolean
name|unresolved
decl_stmt|;
DECL|field|resources
specifier|private
specifier|final
name|boolean
name|resources
decl_stmt|;
DECL|method|AppconfRefresher (StateAccessForProviders state, boolean unresolved, boolean resources)
specifier|public
name|AppconfRefresher
parameter_list|(
name|StateAccessForProviders
name|state
parameter_list|,
name|boolean
name|unresolved
parameter_list|,
name|boolean
name|resources
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|this
operator|.
name|unresolved
operator|=
name|unresolved
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|refresh ()
specifier|public
name|ConfTree
name|refresh
parameter_list|()
throws|throws
name|Exception
block|{
name|AggregateConf
name|aggregateConf
init|=
name|unresolved
condition|?
name|state
operator|.
name|getUnresolvedInstanceDefinition
argument_list|()
else|:
name|state
operator|.
name|getInstanceDefinitionSnapshot
argument_list|()
decl_stmt|;
name|ConfTree
name|ct
init|=
name|resources
condition|?
name|aggregateConf
operator|.
name|getResources
argument_list|()
else|:
name|aggregateConf
operator|.
name|getAppConf
argument_list|()
decl_stmt|;
return|return
operator|new
name|ConfTreeSerDeser
argument_list|()
operator|.
name|fromInstance
argument_list|(
name|ct
argument_list|)
return|;
block|}
block|}
end_class

end_unit

