begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.application.resources
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|application
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|StatusKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|ConfTree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|ConfTreeOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|RoleStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|LiveResourcesRefresher
specifier|public
class|class
name|LiveResourcesRefresher
implements|implements
name|ResourceRefresher
argument_list|<
name|ConfTree
argument_list|>
block|{
DECL|field|state
specifier|private
specifier|final
name|StateAccessForProviders
name|state
decl_stmt|;
DECL|method|LiveResourcesRefresher (StateAccessForProviders state)
specifier|public
name|LiveResourcesRefresher
parameter_list|(
name|StateAccessForProviders
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|refresh ()
specifier|public
name|ConfTree
name|refresh
parameter_list|()
throws|throws
name|Exception
block|{
comment|// snapshot resources
name|ConfTreeOperations
name|resources
init|=
name|state
operator|.
name|getResourcesSnapshot
argument_list|()
decl_stmt|;
comment|// then add actual values
name|Map
argument_list|<
name|Integer
argument_list|,
name|RoleStatus
argument_list|>
name|roleStatusMap
init|=
name|state
operator|.
name|getRoleStatusMap
argument_list|()
decl_stmt|;
for|for
control|(
name|RoleStatus
name|status
range|:
name|roleStatusMap
operator|.
name|values
argument_list|()
control|)
block|{
name|String
name|name
init|=
name|status
operator|.
name|getName
argument_list|()
decl_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_REQUESTING
argument_list|,
name|status
operator|.
name|getRequested
argument_list|()
argument_list|)
expr_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_ACTUAL
argument_list|,
name|status
operator|.
name|getActual
argument_list|()
argument_list|)
expr_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_RELEASING
argument_list|,
name|status
operator|.
name|getReleasing
argument_list|()
argument_list|)
expr_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_FAILED
argument_list|,
name|status
operator|.
name|getFailed
argument_list|()
argument_list|)
expr_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_COMPLETED
argument_list|,
name|status
operator|.
name|getCompleted
argument_list|()
argument_list|)
expr_stmt|;
name|resources
operator|.
name|setComponentOpt
argument_list|(
name|name
argument_list|,
name|StatusKeys
operator|.
name|COMPONENT_INSTANCES_STARTED
argument_list|,
name|status
operator|.
name|getStarted
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resources
operator|.
name|getConfTree
argument_list|()
return|;
block|}
block|}
end_class

end_unit

