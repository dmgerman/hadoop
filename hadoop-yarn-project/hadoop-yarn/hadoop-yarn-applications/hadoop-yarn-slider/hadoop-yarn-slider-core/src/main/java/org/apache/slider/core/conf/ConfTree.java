begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.conf
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|persist
operator|.
name|ConfTreeSerDeser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|persist
operator|.
name|PersistKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonGenerationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|JsonMappingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * A conf tree represents one of the configuration trees  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|ConfTree
specifier|public
specifier|final
class|class
name|ConfTree
block|{
comment|/**    * Size of an initial map. This is kept low so the cost of having    * many conf trees in a process is low.    */
DECL|field|INITAL_MAP_CAPACITY
specifier|public
specifier|static
specifier|final
name|int
name|INITAL_MAP_CAPACITY
init|=
literal|3
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|Logger
DECL|field|log
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ConfTree
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * version counter    */
DECL|field|schema
specifier|public
name|String
name|schema
init|=
name|PersistKeys
operator|.
name|SCHEMA
decl_stmt|;
comment|/**    * Metadata    */
DECL|field|metadata
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metadata
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|INITAL_MAP_CAPACITY
argument_list|)
decl_stmt|;
comment|/**    * Global options    */
DECL|field|global
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|global
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|INITAL_MAP_CAPACITY
argument_list|)
decl_stmt|;
comment|/**    * Credentials    */
DECL|field|credentials
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|credentials
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|INITAL_MAP_CAPACITY
argument_list|)
decl_stmt|;
comment|/**    * Role options,     * role -> option -> value    */
DECL|field|components
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|components
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|INITAL_MAP_CAPACITY
argument_list|)
decl_stmt|;
comment|/**    * Shallow clone    * @return a shallow clone    * @throws CloneNotSupportedException    */
annotation|@
name|Override
DECL|method|clone ()
specifier|public
name|Object
name|clone
parameter_list|()
throws|throws
name|CloneNotSupportedException
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
try|try
block|{
return|return
name|toJson
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Failed to convert to JSON "
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
comment|/**    * Convert to a JSON string    * @return a JSON string description    * @throws IOException Problems mapping/writing the object    */
DECL|method|toJson ()
specifier|public
name|String
name|toJson
parameter_list|()
throws|throws
name|IOException
throws|,
name|JsonGenerationException
throws|,
name|JsonMappingException
block|{
return|return
name|ConfTreeSerDeser
operator|.
name|toString
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class

end_unit

