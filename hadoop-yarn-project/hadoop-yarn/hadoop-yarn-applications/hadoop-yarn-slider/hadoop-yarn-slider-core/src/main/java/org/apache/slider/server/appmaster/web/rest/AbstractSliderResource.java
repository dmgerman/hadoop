begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|PathNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|exceptions
operator|.
name|AuthenticationFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|exceptions
operator|.
name|NoPathPermissionsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|ForbiddenException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|NotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|management
operator|.
name|MetricsAndMonitoring
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|WebAppApi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_comment
comment|/**  * Abstract resource base class for REST resources  * that use the slider WebAppApi  */
end_comment

begin_class
DECL|class|AbstractSliderResource
specifier|public
specifier|abstract
class|class
name|AbstractSliderResource
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AbstractSliderResource
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|slider
specifier|protected
specifier|final
name|WebAppApi
name|slider
decl_stmt|;
DECL|field|metricsAndMonitoring
specifier|protected
specifier|final
name|MetricsAndMonitoring
name|metricsAndMonitoring
decl_stmt|;
DECL|method|AbstractSliderResource (WebAppApi slider)
specifier|protected
name|AbstractSliderResource
parameter_list|(
name|WebAppApi
name|slider
parameter_list|)
block|{
name|this
operator|.
name|slider
operator|=
name|slider
expr_stmt|;
name|metricsAndMonitoring
operator|=
name|slider
operator|.
name|getMetricsAndMonitoring
argument_list|()
expr_stmt|;
block|}
comment|/**    * Generate a redirect to the WASL    * @param request to base the URL on    * @return a 302 response    */
DECL|method|redirectToAppWadl (HttpServletRequest request)
specifier|protected
name|Response
name|redirectToAppWadl
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
try|try
block|{
name|URI
name|location
init|=
operator|new
name|URL
argument_list|(
name|request
operator|.
name|getScheme
argument_list|()
argument_list|,
name|request
operator|.
name|getServerName
argument_list|()
argument_list|,
name|request
operator|.
name|getServerPort
argument_list|()
argument_list|,
name|RestPaths
operator|.
name|APPLICATION_WADL
argument_list|)
operator|.
name|toURI
argument_list|()
decl_stmt|;
return|return
name|Response
operator|.
name|temporaryRedirect
argument_list|(
name|location
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error during redirect to WADL"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|serverError
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
throw|;
block|}
block|}
comment|/**    * Convert any exception caught into a web application    * exception for rethrowing    * @param path path of request    * @param ex exception    * @return an exception to throw    */
DECL|method|buildException (String path, Exception ex)
specifier|public
name|WebApplicationException
name|buildException
parameter_list|(
name|String
name|path
parameter_list|,
name|Exception
name|ex
parameter_list|)
block|{
try|try
block|{
throw|throw
name|ex
throw|;
block|}
catch|catch
parameter_list|(
name|WebApplicationException
name|e
parameter_list|)
block|{
comment|// rethrow direct
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
return|return
operator|new
name|NotFoundException
argument_list|(
literal|"Not found: "
operator|+
name|path
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|PathNotFoundException
name|e
parameter_list|)
block|{
return|return
operator|new
name|NotFoundException
argument_list|(
literal|"Not found: "
operator|+
name|path
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|AuthenticationFailedException
name|e
parameter_list|)
block|{
return|return
operator|new
name|ForbiddenException
argument_list|(
name|path
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NoPathPermissionsException
name|e
parameter_list|)
block|{
return|return
operator|new
name|ForbiddenException
argument_list|(
name|path
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error during generation of response: {}"
argument_list|,
name|e
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
operator|new
name|WebApplicationException
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
comment|/**    * Mark an GET operation on a path    * @param verb HTTP Verb    * @param path path relative to slider API    */
DECL|method|mark (String verb, String path)
specifier|protected
name|void
name|mark
parameter_list|(
name|String
name|verb
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|metricsAndMonitoring
operator|.
name|markMeterAndCounter
argument_list|(
name|verb
operator|+
literal|"-"
operator|+
name|path
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark an GET operation on a path    * @param verb HTTP Verb    * @param path path relative to slider API    */
DECL|method|mark (String verb, String path, String subpath)
specifier|protected
name|void
name|mark
parameter_list|(
name|String
name|verb
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|subpath
parameter_list|)
block|{
name|metricsAndMonitoring
operator|.
name|markMeterAndCounter
argument_list|(
name|verb
operator|+
literal|"-"
operator|+
name|path
operator|+
name|subpath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark a GET operation on a path    * @param path path relative to slider API    */
DECL|method|markGet (String path)
specifier|protected
name|void
name|markGet
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|mark
argument_list|(
literal|"GET"
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark a GET operation on a path    * @param path path relative to slider API    */
DECL|method|markGet (String path, String subpath)
specifier|protected
name|void
name|markGet
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|subpath
parameter_list|)
block|{
name|mark
argument_list|(
literal|"GET"
argument_list|,
name|path
argument_list|,
name|subpath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark a GET operation on a path    * @param path path relative to slider API    */
DECL|method|markPost (String path, String subpath)
specifier|protected
name|void
name|markPost
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|subpath
parameter_list|)
block|{
name|mark
argument_list|(
literal|"POST"
argument_list|,
name|path
argument_list|,
name|subpath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark a GET operation on a path    * @param path path relative to slider API    */
DECL|method|markPut (String path, String subpath)
specifier|protected
name|void
name|markPut
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|subpath
parameter_list|)
block|{
name|mark
argument_list|(
literal|"PUT"
argument_list|,
name|path
argument_list|,
name|subpath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Mark a GET operation on a path    * @param path path relative to slider API    */
DECL|method|markDelete (String path, String subpath)
specifier|protected
name|void
name|markDelete
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|subpath
parameter_list|)
block|{
name|mark
argument_list|(
literal|"DELETE"
argument_list|,
name|path
argument_list|,
name|subpath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

