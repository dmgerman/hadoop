begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.registry
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|binding
operator|.
name|RegistryUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|SliderKeys
import|;
end_import

begin_comment
comment|/**  * Miscellaneous methods to assist slider registry work  *   */
end_comment

begin_class
DECL|class|SliderRegistryUtils
specifier|public
class|class
name|SliderRegistryUtils
block|{
comment|/**    * Get the registry path for an instance under the user's home node    * @param instanceName application instance    * @return a path to the registry location for this application instance.    */
DECL|method|registryPathForInstance (String instanceName)
specifier|public
specifier|static
name|String
name|registryPathForInstance
parameter_list|(
name|String
name|instanceName
parameter_list|)
block|{
return|return
name|RegistryUtils
operator|.
name|servicePath
argument_list|(
name|RegistryUtils
operator|.
name|currentUser
argument_list|()
argument_list|,
name|SliderKeys
operator|.
name|APP_TYPE
argument_list|,
name|instanceName
argument_list|)
return|;
block|}
comment|/**    * Process a path expanding it if needed.    * Validation is delegated to later as the core registry will need    * to do that anyway    * @param path path    * @return a path maybe with some expansion    */
DECL|method|resolvePath (String path)
specifier|public
specifier|static
name|String
name|resolvePath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkArgument
argument_list|(
name|path
operator|!=
literal|null
argument_list|,
literal|"null path"
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|"empty path"
argument_list|)
expr_stmt|;
name|String
name|newpath
init|=
name|path
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|startsWith
argument_list|(
literal|"~/"
argument_list|)
condition|)
block|{
comment|// add user expansion
name|newpath
operator|=
name|RegistryUtils
operator|.
name|homePathForCurrentUser
argument_list|()
operator|+
name|path
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|path
operator|.
name|equals
argument_list|(
literal|"~"
argument_list|)
condition|)
block|{
name|newpath
operator|=
name|RegistryUtils
operator|.
name|homePathForCurrentUser
argument_list|()
expr_stmt|;
block|}
return|return
name|newpath
return|;
block|}
block|}
end_class

end_unit

