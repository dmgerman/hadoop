begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.state
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderUtils
import|;
end_import

begin_class
DECL|class|RoleHistoryUtils
specifier|public
class|class
name|RoleHistoryUtils
block|{
DECL|method|hostnameOf (Container container)
specifier|public
specifier|static
name|String
name|hostnameOf
parameter_list|(
name|Container
name|container
parameter_list|)
block|{
name|NodeId
name|nodeId
init|=
name|container
operator|.
name|getNodeId
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeId
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Container has no node ID: %s"
operator|+
name|SliderUtils
operator|.
name|containerToString
argument_list|(
name|container
argument_list|)
argument_list|)
throw|;
block|}
return|return
name|nodeId
operator|.
name|getHost
argument_list|()
return|;
block|}
comment|/**    * Decrement a value but hold it at zero. Usually a sanity check    * on counters tracking outstanding operations    * @param val value    * @return decremented value    */
DECL|method|decToFloor (int val)
specifier|public
specifier|static
name|int
name|decToFloor
parameter_list|(
name|int
name|val
parameter_list|)
block|{
name|int
name|v
init|=
name|val
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|v
operator|<
literal|0
condition|)
block|{
name|v
operator|=
literal|0
expr_stmt|;
block|}
return|return
name|v
return|;
block|}
block|}
end_class

end_unit

