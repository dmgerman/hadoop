begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.rest
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|rest
package|;
end_package

begin_comment
comment|/**  * Http verbs with details on what they support in terms of submit and  * response bodies.  *<p>  * Those verbs which do support bodies in the response MAY NOT return it;  * if the response code is 204 then the answer is "no body", but the operation  * is considered a success.  */
end_comment

begin_enum
DECL|enum|HttpVerb
specifier|public
enum|enum
name|HttpVerb
block|{
DECL|enumConstant|GET
name|GET
argument_list|(
literal|"GET"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|POST
name|POST
argument_list|(
literal|"POST"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|PUT
name|PUT
argument_list|(
literal|"PUT"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|DELETE
name|DELETE
argument_list|(
literal|"DELETE"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
block|,
DECL|enumConstant|HEAD
name|HEAD
argument_list|(
literal|"HEAD"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|;
DECL|field|verb
specifier|private
specifier|final
name|String
name|verb
decl_stmt|;
DECL|field|hasUploadBody
specifier|private
specifier|final
name|boolean
name|hasUploadBody
decl_stmt|;
DECL|field|hasResponseBody
specifier|private
specifier|final
name|boolean
name|hasResponseBody
decl_stmt|;
DECL|method|HttpVerb (String verb, boolean hasUploadBody, boolean hasResponseBody)
name|HttpVerb
parameter_list|(
name|String
name|verb
parameter_list|,
name|boolean
name|hasUploadBody
parameter_list|,
name|boolean
name|hasResponseBody
parameter_list|)
block|{
name|this
operator|.
name|verb
operator|=
name|verb
expr_stmt|;
name|this
operator|.
name|hasUploadBody
operator|=
name|hasUploadBody
expr_stmt|;
name|this
operator|.
name|hasResponseBody
operator|=
name|hasResponseBody
expr_stmt|;
block|}
DECL|method|getVerb ()
specifier|public
name|String
name|getVerb
parameter_list|()
block|{
return|return
name|verb
return|;
block|}
DECL|method|hasUploadBody ()
specifier|public
name|boolean
name|hasUploadBody
parameter_list|()
block|{
return|return
name|hasUploadBody
return|;
block|}
DECL|method|hasResponseBody ()
specifier|public
name|boolean
name|hasResponseBody
parameter_list|()
block|{
return|return
name|hasResponseBody
return|;
block|}
block|}
end_enum

end_unit

