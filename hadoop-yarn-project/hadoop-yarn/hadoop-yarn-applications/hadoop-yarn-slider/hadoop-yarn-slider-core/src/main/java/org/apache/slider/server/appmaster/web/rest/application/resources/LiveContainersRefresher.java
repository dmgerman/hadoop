begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.application.resources
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|application
operator|.
name|resources
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
operator|.
name|ContainerInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|RoleInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Refresh the container list.  */
end_comment

begin_class
DECL|class|LiveContainersRefresher
specifier|public
class|class
name|LiveContainersRefresher
implements|implements
name|ResourceRefresher
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|ContainerInformation
argument_list|>
argument_list|>
block|{
DECL|field|state
specifier|private
specifier|final
name|StateAccessForProviders
name|state
decl_stmt|;
DECL|method|LiveContainersRefresher (StateAccessForProviders state)
specifier|public
name|LiveContainersRefresher
parameter_list|(
name|StateAccessForProviders
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|refresh ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|ContainerInformation
argument_list|>
name|refresh
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|containerList
init|=
name|state
operator|.
name|cloneOwnedContainerList
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ContainerInformation
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|RoleInstance
name|instance
range|:
name|containerList
control|)
block|{
name|ContainerInformation
name|serialized
init|=
name|instance
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|serialized
operator|.
name|containerId
argument_list|,
name|serialized
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
block|}
end_class

end_unit

