begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|SliderFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|launch
operator|.
name|ContainerLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|RoleInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
operator|.
name|StateAccessForProviders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|timelineservice
operator|.
name|ServiceTimelinePublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|yarnregistry
operator|.
name|YarnRegistryViewForProviders
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_interface
DECL|interface|ProviderService
specifier|public
interface|interface
name|ProviderService
extends|extends
name|Service
block|{
comment|/**    * Set up the entire container launch context    */
DECL|method|buildContainerLaunchContext (ContainerLauncher containerLauncher, Application application, Container container, ProviderRole providerRole, SliderFileSystem sliderFileSystem, RoleInstance roleInstance)
name|void
name|buildContainerLaunchContext
parameter_list|(
name|ContainerLauncher
name|containerLauncher
parameter_list|,
name|Application
name|application
parameter_list|,
name|Container
name|container
parameter_list|,
name|ProviderRole
name|providerRole
parameter_list|,
name|SliderFileSystem
name|sliderFileSystem
parameter_list|,
name|RoleInstance
name|roleInstance
parameter_list|)
throws|throws
name|IOException
throws|,
name|SliderException
function_decl|;
DECL|method|setAMState (StateAccessForProviders stateAccessForProviders)
name|void
name|setAMState
parameter_list|(
name|StateAccessForProviders
name|stateAccessForProviders
parameter_list|)
function_decl|;
comment|/**    * Bind to the YARN registry    * @param yarnRegistry YARN registry    */
DECL|method|bindToYarnRegistry (YarnRegistryViewForProviders yarnRegistry)
name|void
name|bindToYarnRegistry
parameter_list|(
name|YarnRegistryViewForProviders
name|yarnRegistry
parameter_list|)
function_decl|;
comment|/**    * Process container status    * @return true if status needs to be requested again, false otherwise    */
DECL|method|processContainerStatus (ContainerId containerId, ContainerStatus status)
name|boolean
name|processContainerStatus
parameter_list|(
name|ContainerId
name|containerId
parameter_list|,
name|ContainerStatus
name|status
parameter_list|)
function_decl|;
comment|/**    * Set service publisher.    * @param serviceTimelinePublisher service publisher.    */
DECL|method|setServiceTimelinePublisher ( ServiceTimelinePublisher serviceTimelinePublisher)
name|void
name|setServiceTimelinePublisher
parameter_list|(
name|ServiceTimelinePublisher
name|serviceTimelinePublisher
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

