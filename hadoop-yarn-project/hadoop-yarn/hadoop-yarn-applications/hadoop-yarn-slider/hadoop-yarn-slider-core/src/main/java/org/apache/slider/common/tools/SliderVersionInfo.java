begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.common.tools
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|VersionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Extract the version properties, which will look something like  *<pre>  * application.name=${pom.name}  * application.version=${pom.version}  * application.build=${buildNumber}  * application.build.java.version=${java.version}  * application.build.info=${pom.name}-${pom.version} Built against ${buildNumber} on ${java.version} by ${user.name}  *</pre>  *   * the<code>mvn process-resources</code> target will expand the properties  * and add the resources to target/classes, which will then look something like  *<pre>  *   application.name=Slider Core  *   application.version=0.7.1-SNAPSHOT  *   application.build=1dd69  *   application.build.java.version=1.7.0_45  *   application.build.user=stevel  *   application.build.info=Slider Core-0.7.1-SNAPSHOT Built against 1dd69 on 1.7.0_45 by stevel  *</pre>  *   * Note: the values will change and more properties added.  */
end_comment

begin_class
DECL|class|SliderVersionInfo
specifier|public
class|class
name|SliderVersionInfo
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SliderVersionInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Name of the resource containing the filled-in-at-runtime props    */
DECL|field|VERSION_RESOURCE
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_RESOURCE
init|=
literal|"org/apache/slider/providers/dynamic/application.properties"
decl_stmt|;
DECL|field|APP_NAME
specifier|public
specifier|static
specifier|final
name|String
name|APP_NAME
init|=
literal|"application.name"
decl_stmt|;
DECL|field|APP_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|APP_VERSION
init|=
literal|"application.version"
decl_stmt|;
DECL|field|APP_BUILD
specifier|public
specifier|static
specifier|final
name|String
name|APP_BUILD
init|=
literal|"application.build"
decl_stmt|;
DECL|field|APP_BUILD_JAVA_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|APP_BUILD_JAVA_VERSION
init|=
literal|"application.build.java.version"
decl_stmt|;
DECL|field|APP_BUILD_USER
specifier|public
specifier|static
specifier|final
name|String
name|APP_BUILD_USER
init|=
literal|"application.build.user"
decl_stmt|;
DECL|field|APP_BUILD_INFO
specifier|public
specifier|static
specifier|final
name|String
name|APP_BUILD_INFO
init|=
literal|"application.build.info"
decl_stmt|;
DECL|field|HADOOP_BUILD_INFO
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_BUILD_INFO
init|=
literal|"hadoop.build.info"
decl_stmt|;
DECL|field|HADOOP_DEPLOYED_INFO
specifier|public
specifier|static
specifier|final
name|String
name|HADOOP_DEPLOYED_INFO
init|=
literal|"hadoop.deployed.info"
decl_stmt|;
DECL|method|loadVersionProperties ()
specifier|public
specifier|static
name|Properties
name|loadVersionProperties
parameter_list|()
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|URL
name|resURL
init|=
name|SliderVersionInfo
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|VERSION_RESOURCE
argument_list|)
decl_stmt|;
assert|assert
name|resURL
operator|!=
literal|null
operator|:
literal|"Null resource "
operator|+
name|VERSION_RESOURCE
assert|;
try|try
block|{
name|InputStream
name|inStream
init|=
name|resURL
operator|.
name|openStream
argument_list|()
decl_stmt|;
assert|assert
name|inStream
operator|!=
literal|null
operator|:
literal|"Null input stream from "
operator|+
name|VERSION_RESOURCE
assert|;
name|props
operator|.
name|load
argument_list|(
name|inStream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"IOE loading "
operator|+
name|VERSION_RESOURCE
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|props
return|;
block|}
comment|/**    * Load the version info and print it    * @param logger logger    */
DECL|method|loadAndPrintVersionInfo (Logger logger)
specifier|public
specifier|static
name|void
name|loadAndPrintVersionInfo
parameter_list|(
name|Logger
name|logger
parameter_list|)
block|{
name|Properties
name|props
init|=
name|loadVersionProperties
argument_list|()
decl_stmt|;
name|logger
operator|.
name|info
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|APP_BUILD_INFO
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"Compiled against Hadoop {}"
argument_list|,
name|props
operator|.
name|getProperty
argument_list|(
name|HADOOP_BUILD_INFO
argument_list|)
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
name|getHadoopVersionString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getHadoopVersionString ()
specifier|public
specifier|static
name|String
name|getHadoopVersionString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|,
literal|"Hadoop runtime version %s with source checksum %s and build date %s"
argument_list|,
name|VersionInfo
operator|.
name|getBranch
argument_list|()
argument_list|,
name|VersionInfo
operator|.
name|getSrcChecksum
argument_list|()
argument_list|,
name|VersionInfo
operator|.
name|getDate
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

