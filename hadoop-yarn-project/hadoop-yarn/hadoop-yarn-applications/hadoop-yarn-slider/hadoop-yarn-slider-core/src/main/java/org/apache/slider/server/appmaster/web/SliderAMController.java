begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|Controller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|layout
operator|.
name|AppLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|layout
operator|.
name|ClusterSpecificationView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|layout
operator|.
name|ContainerStatsView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
DECL|class|SliderAMController
specifier|public
class|class
name|SliderAMController
extends|extends
name|Controller
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SliderAMController
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|slider
specifier|private
specifier|final
name|WebAppApi
name|slider
decl_stmt|;
annotation|@
name|Inject
DECL|method|SliderAMController (WebAppApi slider, RequestContext ctx)
specifier|public
name|SliderAMController
parameter_list|(
name|WebAppApi
name|slider
parameter_list|,
name|RequestContext
name|ctx
parameter_list|)
block|{
name|super
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|this
operator|.
name|slider
operator|=
name|slider
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|index ()
specifier|public
name|void
name|index
parameter_list|()
block|{
name|setTitle
argument_list|(
literal|"Slider App Master"
argument_list|)
expr_stmt|;
name|updateAppState
argument_list|()
expr_stmt|;
name|render
argument_list|(
name|AppLayout
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|containerStats ()
specifier|public
name|void
name|containerStats
parameter_list|()
block|{
name|setTitle
argument_list|(
literal|"Container Statistics"
argument_list|)
expr_stmt|;
name|updateAppState
argument_list|()
expr_stmt|;
name|render
argument_list|(
name|ContainerStatsView
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|specification ()
specifier|public
name|void
name|specification
parameter_list|()
block|{
name|setTitle
argument_list|(
literal|"Cluster Specification"
argument_list|)
expr_stmt|;
name|render
argument_list|(
name|ClusterSpecificationView
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|updateAppState ()
specifier|private
name|void
name|updateAppState
parameter_list|()
block|{
comment|//TODO don't do this on every request?
name|slider
operator|.
name|getAppState
argument_list|()
operator|.
name|refreshClusterStatus
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

