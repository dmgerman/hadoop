begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|State
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/** Data model for agent to send heartbeat to ambari and/or app master. */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|Register
specifier|public
class|class
name|Register
block|{
DECL|field|responseId
specifier|private
name|int
name|responseId
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|timestamp
specifier|private
name|long
name|timestamp
decl_stmt|;
DECL|field|label
specifier|private
name|String
name|label
decl_stmt|;
DECL|field|currentPingPort
specifier|private
name|int
name|currentPingPort
decl_stmt|;
DECL|field|hardwareProfile
specifier|private
name|HostInfo
name|hardwareProfile
decl_stmt|;
DECL|field|publicHostname
specifier|private
name|String
name|publicHostname
decl_stmt|;
DECL|field|tags
specifier|private
name|String
name|tags
decl_stmt|;
DECL|field|agentEnv
specifier|private
name|AgentEnv
name|agentEnv
decl_stmt|;
DECL|field|agentVersion
specifier|private
name|String
name|agentVersion
decl_stmt|;
DECL|field|actualState
specifier|private
name|State
name|actualState
decl_stmt|;
DECL|field|expectedState
specifier|private
name|State
name|expectedState
decl_stmt|;
DECL|field|allocatedPorts
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|allocatedPorts
decl_stmt|;
DECL|field|logFolders
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|logFolders
decl_stmt|;
DECL|field|pkg
specifier|private
name|String
name|pkg
decl_stmt|;
DECL|field|appVersion
specifier|private
name|String
name|appVersion
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"responseId"
argument_list|)
DECL|method|getResponseId ()
specifier|public
name|int
name|getResponseId
parameter_list|()
block|{
return|return
name|responseId
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"responseId"
argument_list|)
DECL|method|setResponseId (int responseId)
specifier|public
name|void
name|setResponseId
parameter_list|(
name|int
name|responseId
parameter_list|)
block|{
name|this
operator|.
name|responseId
operator|=
name|responseId
expr_stmt|;
block|}
DECL|method|getTimestamp ()
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|setTimestamp (long timestamp)
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
DECL|method|getLabel ()
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|label
return|;
block|}
DECL|method|setLabel (String label)
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
block|}
DECL|method|getTags ()
specifier|public
name|String
name|getTags
parameter_list|()
block|{
return|return
name|tags
return|;
block|}
DECL|method|setTags (String tags)
specifier|public
name|void
name|setTags
parameter_list|(
name|String
name|tags
parameter_list|)
block|{
name|this
operator|.
name|tags
operator|=
name|tags
expr_stmt|;
block|}
DECL|method|getHardwareProfile ()
specifier|public
name|HostInfo
name|getHardwareProfile
parameter_list|()
block|{
return|return
name|hardwareProfile
return|;
block|}
DECL|method|setHardwareProfile (HostInfo hardwareProfile)
specifier|public
name|void
name|setHardwareProfile
parameter_list|(
name|HostInfo
name|hardwareProfile
parameter_list|)
block|{
name|this
operator|.
name|hardwareProfile
operator|=
name|hardwareProfile
expr_stmt|;
block|}
DECL|method|getPublicHostname ()
specifier|public
name|String
name|getPublicHostname
parameter_list|()
block|{
return|return
name|publicHostname
return|;
block|}
DECL|method|setPublicHostname (String name)
specifier|public
name|void
name|setPublicHostname
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|publicHostname
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getAgentEnv ()
specifier|public
name|AgentEnv
name|getAgentEnv
parameter_list|()
block|{
return|return
name|agentEnv
return|;
block|}
DECL|method|setAgentEnv (AgentEnv env)
specifier|public
name|void
name|setAgentEnv
parameter_list|(
name|AgentEnv
name|env
parameter_list|)
block|{
name|this
operator|.
name|agentEnv
operator|=
name|env
expr_stmt|;
block|}
DECL|method|getAgentVersion ()
specifier|public
name|String
name|getAgentVersion
parameter_list|()
block|{
return|return
name|agentVersion
return|;
block|}
DECL|method|setAgentVersion (String agentVersion)
specifier|public
name|void
name|setAgentVersion
parameter_list|(
name|String
name|agentVersion
parameter_list|)
block|{
name|this
operator|.
name|agentVersion
operator|=
name|agentVersion
expr_stmt|;
block|}
DECL|method|getCurrentPingPort ()
specifier|public
name|int
name|getCurrentPingPort
parameter_list|()
block|{
return|return
name|currentPingPort
return|;
block|}
DECL|method|setCurrentPingPort (int currentPingPort)
specifier|public
name|void
name|setCurrentPingPort
parameter_list|(
name|int
name|currentPingPort
parameter_list|)
block|{
name|this
operator|.
name|currentPingPort
operator|=
name|currentPingPort
expr_stmt|;
block|}
DECL|method|getActualState ()
specifier|public
name|State
name|getActualState
parameter_list|()
block|{
return|return
name|actualState
return|;
block|}
DECL|method|setActualState (State actualState)
specifier|public
name|void
name|setActualState
parameter_list|(
name|State
name|actualState
parameter_list|)
block|{
name|this
operator|.
name|actualState
operator|=
name|actualState
expr_stmt|;
block|}
DECL|method|getExpectedState ()
specifier|public
name|State
name|getExpectedState
parameter_list|()
block|{
return|return
name|expectedState
return|;
block|}
DECL|method|setExpectedState (State expectedState)
specifier|public
name|void
name|setExpectedState
parameter_list|(
name|State
name|expectedState
parameter_list|)
block|{
name|this
operator|.
name|expectedState
operator|=
name|expectedState
expr_stmt|;
block|}
comment|/** @return the allocated ports, or<code>null</code> if none are present */
annotation|@
name|JsonProperty
argument_list|(
literal|"allocatedPorts"
argument_list|)
DECL|method|getAllocatedPorts ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAllocatedPorts
parameter_list|()
block|{
return|return
name|allocatedPorts
return|;
block|}
comment|/** @param ports allocated ports */
annotation|@
name|JsonProperty
argument_list|(
literal|"allocatedPorts"
argument_list|)
DECL|method|setAllocatedPorts (Map<String, String> ports)
specifier|public
name|void
name|setAllocatedPorts
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ports
parameter_list|)
block|{
name|this
operator|.
name|allocatedPorts
operator|=
name|ports
expr_stmt|;
block|}
comment|/** @return the log folders, or<code>null</code> if none are present */
annotation|@
name|JsonProperty
argument_list|(
literal|"logFolders"
argument_list|)
DECL|method|getLogFolders ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getLogFolders
parameter_list|()
block|{
return|return
name|logFolders
return|;
block|}
comment|/** @param logFolders assigned log folders */
annotation|@
name|JsonProperty
argument_list|(
literal|"logFolders"
argument_list|)
DECL|method|setLogFolders (Map<String, String> logFolders)
specifier|public
name|void
name|setLogFolders
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|logFolders
parameter_list|)
block|{
name|this
operator|.
name|logFolders
operator|=
name|logFolders
expr_stmt|;
block|}
DECL|method|getPkg ()
specifier|public
name|String
name|getPkg
parameter_list|()
block|{
return|return
name|pkg
return|;
block|}
DECL|method|setPkg (String pkg)
specifier|public
name|void
name|setPkg
parameter_list|(
name|String
name|pkg
parameter_list|)
block|{
name|this
operator|.
name|pkg
operator|=
name|pkg
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"appVersion"
argument_list|)
DECL|method|getAppVersion ()
specifier|public
name|String
name|getAppVersion
parameter_list|()
block|{
return|return
name|appVersion
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"appVersion"
argument_list|)
DECL|method|setAppVersion (String appVersion)
specifier|public
name|void
name|setAppVersion
parameter_list|(
name|String
name|appVersion
parameter_list|)
block|{
name|this
operator|.
name|appVersion
operator|=
name|appVersion
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|ret
init|=
literal|"responseId="
operator|+
name|responseId
operator|+
literal|"\n"
operator|+
literal|"timestamp="
operator|+
name|timestamp
operator|+
literal|"\n"
operator|+
literal|"label="
operator|+
name|label
operator|+
literal|"\n"
operator|+
literal|"hostname="
operator|+
name|publicHostname
operator|+
literal|"\n"
operator|+
literal|"expectedState="
operator|+
name|expectedState
operator|+
literal|"\n"
operator|+
literal|"actualState="
operator|+
name|actualState
operator|+
literal|"\n"
operator|+
literal|"appVersion="
operator|+
name|appVersion
operator|+
literal|"\n"
decl_stmt|;
if|if
condition|(
name|hardwareProfile
operator|!=
literal|null
condition|)
block|{
name|ret
operator|=
name|ret
operator|+
literal|"hardwareprofile="
operator|+
name|this
operator|.
name|hardwareProfile
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

