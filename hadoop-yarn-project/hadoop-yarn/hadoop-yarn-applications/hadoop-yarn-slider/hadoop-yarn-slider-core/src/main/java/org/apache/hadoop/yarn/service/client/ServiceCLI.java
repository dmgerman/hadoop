begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
operator|.
name|params
operator|.
name|ClientArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|exceptions
operator|.
name|BadCommandArgumentsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
operator|.
name|params
operator|.
name|SliderActions
operator|.
name|*
import|;
end_import

begin_class
DECL|class|ServiceCLI
specifier|public
class|class
name|ServiceCLI
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ServiceClient
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|client
specifier|protected
name|ServiceClient
name|client
decl_stmt|;
DECL|method|exec (ClientArgs args)
name|int
name|exec
parameter_list|(
name|ClientArgs
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
if|if
condition|(
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|args
operator|.
name|getAction
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|args
operator|.
name|usage
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
switch|switch
condition|(
name|args
operator|.
name|getAction
argument_list|()
condition|)
block|{
case|case
name|ACTION_BUILD
case|:
comment|// Upload app json onto hdfs
name|client
operator|.
name|actionBuild
argument_list|(
name|args
operator|.
name|getActionBuildArgs
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_START
case|:
comment|// start the app with the pre-uploaded app json on hdfs
name|client
operator|.
name|actionStart
argument_list|(
name|args
operator|.
name|getClusterName
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_CREATE
case|:
comment|// create == build + start
name|client
operator|.
name|actionCreate
argument_list|(
name|args
operator|.
name|getActionCreateArgs
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_STATUS
case|:
name|Application
name|app
init|=
name|client
operator|.
name|getStatus
argument_list|(
name|args
operator|.
name|getClusterName
argument_list|()
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|app
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_FLEX
case|:
name|client
operator|.
name|actionFlexByCLI
argument_list|(
name|args
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_STOP
case|:
name|client
operator|.
name|actionStop
argument_list|(
name|args
operator|.
name|getClusterName
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_DESTROY
case|:
comment|// Destroy can happen only if app is already stopped
name|client
operator|.
name|actionDestroy
argument_list|(
name|args
operator|.
name|getClusterName
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_DEPENDENCY
case|:
comment|// upload dependency jars
name|client
operator|.
name|actionDependency
argument_list|(
name|args
operator|.
name|getActionDependencyArgs
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_UPDATE
case|:
name|client
operator|.
name|updateLifetime
argument_list|(
name|args
operator|.
name|getClusterName
argument_list|()
argument_list|,
name|args
operator|.
name|getActionUpdateArgs
argument_list|()
operator|.
name|lifetime
argument_list|)
expr_stmt|;
break|break;
case|case
name|ACTION_HELP
case|:
name|LOG
operator|.
name|info
argument_list|(
name|args
operator|.
name|usage
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
name|LOG
operator|.
name|info
argument_list|(
literal|"NOT IMPLEMENTED: "
operator|+
name|args
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
name|args
operator|.
name|usage
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
return|return
literal|0
return|;
block|}
DECL|method|ServiceCLI ()
specifier|public
name|ServiceCLI
parameter_list|()
block|{
name|createServiceClient
argument_list|()
expr_stmt|;
block|}
DECL|method|createServiceClient ()
specifier|protected
name|void
name|createServiceClient
parameter_list|()
block|{
name|client
operator|=
operator|new
name|ServiceClient
argument_list|()
expr_stmt|;
name|client
operator|.
name|init
argument_list|(
operator|new
name|YarnConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
name|ClientArgs
name|clientArgs
init|=
operator|new
name|ClientArgs
argument_list|(
name|args
argument_list|)
decl_stmt|;
try|try
block|{
name|clientArgs
operator|.
name|parse
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadCommandArgumentsException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|ServiceCLI
name|cli
init|=
operator|new
name|ServiceCLI
argument_list|()
decl_stmt|;
name|int
name|res
init|=
name|cli
operator|.
name|exec
argument_list|(
name|clientArgs
argument_list|)
decl_stmt|;
name|System
operator|.
name|exit
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

