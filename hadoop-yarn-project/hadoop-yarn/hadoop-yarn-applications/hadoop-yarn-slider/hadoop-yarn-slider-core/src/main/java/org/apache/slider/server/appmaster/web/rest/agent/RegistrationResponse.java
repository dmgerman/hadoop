begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|RegistrationResponse
specifier|public
class|class
name|RegistrationResponse
block|{
annotation|@
name|JsonProperty
argument_list|(
literal|"response"
argument_list|)
DECL|field|response
specifier|private
name|RegistrationStatus
name|response
decl_stmt|;
comment|/**    * exitstatus is a code of error which was rised on server side. exitstatus    * = 0 (OK - Default) exitstatus = 1 (Registration failed because different    * version of agent and server)    */
annotation|@
name|JsonProperty
argument_list|(
literal|"exitstatus"
argument_list|)
DECL|field|exitstatus
specifier|private
name|int
name|exitstatus
decl_stmt|;
comment|/** log - message, which will be printed to agents log */
annotation|@
name|JsonProperty
argument_list|(
literal|"log"
argument_list|)
DECL|field|log
specifier|private
name|String
name|log
decl_stmt|;
comment|/** tags - tags associated with the container */
annotation|@
name|JsonProperty
argument_list|(
literal|"tags"
argument_list|)
DECL|field|tags
specifier|private
name|String
name|tags
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"package"
argument_list|)
DECL|field|pkg
specifier|private
name|String
name|pkg
decl_stmt|;
comment|//Response id to start with, usually zero.
annotation|@
name|JsonProperty
argument_list|(
literal|"responseId"
argument_list|)
DECL|field|responseId
specifier|private
name|long
name|responseId
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"statusCommands"
argument_list|)
DECL|field|statusCommands
specifier|private
name|List
argument_list|<
name|StatusCommand
argument_list|>
name|statusCommands
init|=
literal|null
decl_stmt|;
DECL|method|RegistrationResponse ()
specifier|public
name|RegistrationResponse
parameter_list|()
block|{   }
DECL|method|getResponse ()
specifier|public
name|RegistrationStatus
name|getResponse
parameter_list|()
block|{
return|return
name|response
return|;
block|}
DECL|method|setResponse (RegistrationStatus response)
specifier|public
name|void
name|setResponse
parameter_list|(
name|RegistrationStatus
name|response
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
block|}
DECL|method|getExitstatus ()
specifier|public
name|int
name|getExitstatus
parameter_list|()
block|{
return|return
name|exitstatus
return|;
block|}
DECL|method|setExitstatus (int exitstatus)
specifier|public
name|void
name|setExitstatus
parameter_list|(
name|int
name|exitstatus
parameter_list|)
block|{
name|this
operator|.
name|exitstatus
operator|=
name|exitstatus
expr_stmt|;
block|}
DECL|method|getResponseStatus ()
specifier|public
name|RegistrationStatus
name|getResponseStatus
parameter_list|()
block|{
return|return
name|response
return|;
block|}
DECL|method|setResponseStatus (RegistrationStatus response)
specifier|public
name|void
name|setResponseStatus
parameter_list|(
name|RegistrationStatus
name|response
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
block|}
DECL|method|getStatusCommands ()
specifier|public
name|List
argument_list|<
name|StatusCommand
argument_list|>
name|getStatusCommands
parameter_list|()
block|{
return|return
name|statusCommands
return|;
block|}
DECL|method|setStatusCommands (List<StatusCommand> statusCommands)
specifier|public
name|void
name|setStatusCommands
parameter_list|(
name|List
argument_list|<
name|StatusCommand
argument_list|>
name|statusCommands
parameter_list|)
block|{
name|this
operator|.
name|statusCommands
operator|=
name|statusCommands
expr_stmt|;
block|}
DECL|method|getResponseId ()
specifier|public
name|long
name|getResponseId
parameter_list|()
block|{
return|return
name|responseId
return|;
block|}
DECL|method|setResponseId (long responseId)
specifier|public
name|void
name|setResponseId
parameter_list|(
name|long
name|responseId
parameter_list|)
block|{
name|this
operator|.
name|responseId
operator|=
name|responseId
expr_stmt|;
block|}
DECL|method|getTags ()
specifier|public
name|String
name|getTags
parameter_list|()
block|{
return|return
name|tags
return|;
block|}
DECL|method|setTags (String tags)
specifier|public
name|void
name|setTags
parameter_list|(
name|String
name|tags
parameter_list|)
block|{
name|this
operator|.
name|tags
operator|=
name|tags
expr_stmt|;
block|}
DECL|method|getLog ()
specifier|public
name|String
name|getLog
parameter_list|()
block|{
return|return
name|log
return|;
block|}
DECL|method|setLog (String log)
specifier|public
name|void
name|setLog
parameter_list|(
name|String
name|log
parameter_list|)
block|{
name|this
operator|.
name|log
operator|=
name|log
expr_stmt|;
block|}
DECL|method|getPkg ()
specifier|public
name|String
name|getPkg
parameter_list|()
block|{
return|return
name|pkg
return|;
block|}
DECL|method|setPkg (String pkg)
specifier|public
name|void
name|setPkg
parameter_list|(
name|String
name|pkg
parameter_list|)
block|{
name|this
operator|.
name|pkg
operator|=
name|pkg
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"RegistrationResponse{"
operator|+
literal|"response="
operator|+
name|response
operator|+
literal|", responseId="
operator|+
name|responseId
operator|+
literal|", statusCommands="
operator|+
name|statusCommands
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

