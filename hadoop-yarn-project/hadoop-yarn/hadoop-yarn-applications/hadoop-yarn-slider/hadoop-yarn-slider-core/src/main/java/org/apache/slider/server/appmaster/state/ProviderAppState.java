begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.state
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|state
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|LoadingCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|ClusterNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|resource
operator|.
name|ConfigFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
operator|.
name|ApplicationLivenessInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
operator|.
name|ComponentInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
operator|.
name|NodeInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
operator|.
name|RoleStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|NoSuchNodeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
operator|.
name|docstore
operator|.
name|PublishedConfigSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|registry
operator|.
name|docstore
operator|.
name|PublishedExportsSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|RestPaths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|utility
operator|.
name|PatternValidator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link StateAccessForProviders}, which means  * state access for providers, web UI and IPC/REST views.  */
end_comment

begin_class
DECL|class|ProviderAppState
specifier|public
class|class
name|ProviderAppState
implements|implements
name|StateAccessForProviders
block|{
DECL|field|publishedConfigSets
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|PublishedConfigSet
argument_list|>
name|publishedConfigSets
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
DECL|field|publishedExportsSets
specifier|private
specifier|final
name|PublishedExportsSet
name|publishedExportsSets
init|=
operator|new
name|PublishedExportsSet
argument_list|()
decl_stmt|;
DECL|field|validator
specifier|private
specifier|static
specifier|final
name|PatternValidator
name|validator
init|=
operator|new
name|PatternValidator
argument_list|(
name|RestPaths
operator|.
name|PUBLISHED_CONFIGURATION_SET_REGEXP
argument_list|)
decl_stmt|;
DECL|field|applicationName
specifier|private
name|String
name|applicationName
decl_stmt|;
DECL|field|appState
specifier|private
specifier|final
name|AppState
name|appState
decl_stmt|;
DECL|method|ProviderAppState (String applicationName, AppState appState)
specifier|public
name|ProviderAppState
parameter_list|(
name|String
name|applicationName
parameter_list|,
name|AppState
name|appState
parameter_list|)
block|{
name|this
operator|.
name|appState
operator|=
name|appState
expr_stmt|;
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
DECL|method|setApplicationName (String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|this
operator|.
name|applicationName
operator|=
name|applicationName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationName ()
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationName
return|;
block|}
annotation|@
name|Override
DECL|method|getPublishedSliderConfigurations ()
specifier|public
name|PublishedConfigSet
name|getPublishedSliderConfigurations
parameter_list|()
block|{
return|return
name|getOrCreatePublishedConfigSet
argument_list|(
name|RestPaths
operator|.
name|SLIDER_CONFIGSET
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPublishedExportsSet ()
specifier|public
name|PublishedExportsSet
name|getPublishedExportsSet
parameter_list|()
block|{
return|return
name|publishedExportsSets
return|;
block|}
annotation|@
name|Override
DECL|method|getPublishedConfigSet (String name)
specifier|public
name|PublishedConfigSet
name|getPublishedConfigSet
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|publishedConfigSets
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getOrCreatePublishedConfigSet (String name)
specifier|public
name|PublishedConfigSet
name|getOrCreatePublishedConfigSet
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|PublishedConfigSet
name|set
init|=
name|publishedConfigSets
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|set
operator|==
literal|null
condition|)
block|{
name|validator
operator|.
name|validate
argument_list|(
name|name
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|publishedConfigSets
init|)
block|{
comment|// synchronized double check to ensure that there is never an overridden
comment|// config set created
name|set
operator|=
name|publishedConfigSets
operator|.
name|get
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|set
operator|==
literal|null
condition|)
block|{
name|set
operator|=
operator|new
name|PublishedConfigSet
argument_list|()
expr_stmt|;
name|publishedConfigSets
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|set
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|set
return|;
block|}
annotation|@
name|Override
DECL|method|listConfigSets ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|listConfigSets
parameter_list|()
block|{
synchronized|synchronized
init|(
name|publishedConfigSets
init|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|sets
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|publishedConfigSets
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|sets
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|getRoleStatusMap ()
specifier|public
name|Map
argument_list|<
name|Integer
argument_list|,
name|RoleStatus
argument_list|>
name|getRoleStatusMap
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getRoleStatusMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getFailedContainers ()
specifier|public
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|RoleInstance
argument_list|>
name|getFailedContainers
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getFailedContainers
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getLiveContainers ()
specifier|public
name|Map
argument_list|<
name|ContainerId
argument_list|,
name|RoleInstance
argument_list|>
name|getLiveContainers
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getLiveContainers
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplication ()
specifier|public
name|Application
name|getApplication
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getClusterStatus
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isApplicationLive ()
specifier|public
name|boolean
name|isApplicationLive
parameter_list|()
block|{
return|return
name|appState
operator|.
name|isApplicationLive
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|lookupRoleStatus (int key)
specifier|public
name|RoleStatus
name|lookupRoleStatus
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|appState
operator|.
name|lookupRoleStatus
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|lookupRoleStatus (Container c)
specifier|public
name|RoleStatus
name|lookupRoleStatus
parameter_list|(
name|Container
name|c
parameter_list|)
throws|throws
name|YarnRuntimeException
block|{
return|return
name|appState
operator|.
name|lookupRoleStatus
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|lookupRoleStatus (String name)
specifier|public
name|RoleStatus
name|lookupRoleStatus
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|YarnRuntimeException
block|{
return|return
name|appState
operator|.
name|lookupRoleStatus
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|cloneOwnedContainerList ()
specifier|public
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|cloneOwnedContainerList
parameter_list|()
block|{
return|return
name|appState
operator|.
name|cloneOwnedContainerList
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getNumOwnedContainers ()
specifier|public
name|int
name|getNumOwnedContainers
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getNumOwnedContainers
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getOwnedContainer (ContainerId id)
specifier|public
name|RoleInstance
name|getOwnedContainer
parameter_list|(
name|ContainerId
name|id
parameter_list|)
block|{
return|return
name|appState
operator|.
name|getOwnedContainer
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getOwnedContainer (String id)
specifier|public
name|RoleInstance
name|getOwnedContainer
parameter_list|(
name|String
name|id
parameter_list|)
throws|throws
name|NoSuchNodeException
block|{
return|return
name|appState
operator|.
name|getOwnedInstanceByContainerID
argument_list|(
name|id
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|cloneLiveContainerInfoList ()
specifier|public
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|cloneLiveContainerInfoList
parameter_list|()
block|{
return|return
name|appState
operator|.
name|cloneLiveContainerInfoList
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getLiveInstanceByContainerID (String containerId)
specifier|public
name|RoleInstance
name|getLiveInstanceByContainerID
parameter_list|(
name|String
name|containerId
parameter_list|)
throws|throws
name|NoSuchNodeException
block|{
return|return
name|appState
operator|.
name|getLiveInstanceByContainerID
argument_list|(
name|containerId
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getLiveInstancesByContainerIDs (Collection<String> containerIDs)
specifier|public
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|getLiveInstancesByContainerIDs
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|containerIDs
parameter_list|)
block|{
return|return
name|appState
operator|.
name|getLiveInstancesByContainerIDs
argument_list|(
name|containerIDs
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|refreshClusterStatus ()
specifier|public
name|Application
name|refreshClusterStatus
parameter_list|()
block|{
return|return
name|appState
operator|.
name|refreshClusterStatus
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationLivenessInformation ()
specifier|public
name|ApplicationLivenessInformation
name|getApplicationLivenessInformation
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getApplicationLivenessInformation
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getComponentInfoSnapshot ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|ComponentInformation
argument_list|>
name|getComponentInfoSnapshot
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getComponentInfoSnapshot
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getRoleClusterNodeMapping ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ClusterNode
argument_list|>
argument_list|>
name|getRoleClusterNodeMapping
parameter_list|()
block|{
return|return
name|appState
operator|.
name|createRoleToClusterNodeMap
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|enumLiveInstancesInRole (String role)
specifier|public
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|enumLiveInstancesInRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|nodes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|RoleInstance
argument_list|>
name|allRoleInstances
init|=
name|cloneLiveContainerInfoList
argument_list|()
decl_stmt|;
for|for
control|(
name|RoleInstance
name|node
range|:
name|allRoleInstances
control|)
block|{
if|if
condition|(
name|role
operator|.
name|isEmpty
argument_list|()
operator|||
name|role
operator|.
name|equals
argument_list|(
name|node
operator|.
name|role
argument_list|)
condition|)
block|{
name|nodes
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|nodes
return|;
block|}
annotation|@
name|Override
DECL|method|lookupRoleContainers (String component)
specifier|public
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|lookupRoleContainers
parameter_list|(
name|String
name|component
parameter_list|)
block|{
name|RoleStatus
name|roleStatus
init|=
name|lookupRoleStatus
argument_list|(
name|component
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|ownedContainerList
init|=
name|cloneOwnedContainerList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|matching
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|ownedContainerList
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|roleId
init|=
name|roleStatus
operator|.
name|getPriority
argument_list|()
decl_stmt|;
for|for
control|(
name|RoleInstance
name|instance
range|:
name|ownedContainerList
control|)
block|{
if|if
condition|(
name|instance
operator|.
name|roleId
operator|==
name|roleId
condition|)
block|{
name|matching
operator|.
name|add
argument_list|(
name|instance
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|matching
return|;
block|}
annotation|@
name|Override
DECL|method|getComponentInformation (String component)
specifier|public
name|ComponentInformation
name|getComponentInformation
parameter_list|(
name|String
name|component
parameter_list|)
block|{
name|RoleStatus
name|roleStatus
init|=
name|lookupRoleStatus
argument_list|(
name|component
argument_list|)
decl_stmt|;
name|ComponentInformation
name|info
init|=
name|roleStatus
operator|.
name|serialize
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|RoleInstance
argument_list|>
name|containers
init|=
name|lookupRoleContainers
argument_list|(
name|component
argument_list|)
decl_stmt|;
name|info
operator|.
name|containers
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|containers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|RoleInstance
name|container
range|:
name|containers
control|)
block|{
name|info
operator|.
name|containers
operator|.
name|add
argument_list|(
name|container
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
return|return
name|info
return|;
block|}
annotation|@
name|Override
DECL|method|getNodeInformationSnapshot ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|NodeInformation
argument_list|>
name|getNodeInformationSnapshot
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getRoleHistory
argument_list|()
operator|.
name|getNodeInformationSnapshot
argument_list|(
name|appState
operator|.
name|buildNamingMap
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getNodeInformation (String hostname)
specifier|public
name|NodeInformation
name|getNodeInformation
parameter_list|(
name|String
name|hostname
parameter_list|)
block|{
return|return
name|appState
operator|.
name|getRoleHistory
argument_list|()
operator|.
name|getNodeInformation
argument_list|(
name|hostname
argument_list|,
name|appState
operator|.
name|buildNamingMap
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getRoleStatistics ()
specifier|public
name|RoleStatistics
name|getRoleStatistics
parameter_list|()
block|{
return|return
name|appState
operator|.
name|getRoleStatistics
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getGlobalSubstitutionTokens ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getGlobalSubstitutionTokens
parameter_list|()
block|{
return|return
name|appState
operator|.
name|globalTokens
return|;
block|}
annotation|@
name|Override
DECL|method|getConfigFileCache ()
specifier|public
name|LoadingCache
argument_list|<
name|ConfigFile
argument_list|,
name|Object
argument_list|>
name|getConfigFileCache
parameter_list|()
block|{
return|return
name|appState
operator|.
name|configFileCache
return|;
block|}
block|}
end_class

end_unit

