begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.api.types
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|api
operator|.
name|types
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Serialized node information. Must be kept in sync with the protobuf equivalent.  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|NodeInformation
specifier|public
class|class
name|NodeInformation
block|{
DECL|field|hostname
specifier|public
name|String
name|hostname
decl_stmt|;
DECL|field|state
specifier|public
name|String
name|state
decl_stmt|;
DECL|field|labels
specifier|public
name|String
name|labels
decl_stmt|;
DECL|field|rackName
specifier|public
name|String
name|rackName
decl_stmt|;
DECL|field|httpAddress
specifier|public
name|String
name|httpAddress
decl_stmt|;
DECL|field|healthReport
specifier|public
name|String
name|healthReport
decl_stmt|;
DECL|field|lastUpdated
specifier|public
name|long
name|lastUpdated
decl_stmt|;
DECL|field|entries
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|NodeEntryInformation
argument_list|>
name|entries
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"NodeInformation{"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"hostname='"
argument_list|)
operator|.
name|append
argument_list|(
name|hostname
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", state='"
argument_list|)
operator|.
name|append
argument_list|(
name|state
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", labels='"
argument_list|)
operator|.
name|append
argument_list|(
name|labels
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", rackName='"
argument_list|)
operator|.
name|append
argument_list|(
name|rackName
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", httpAddress='"
argument_list|)
operator|.
name|append
argument_list|(
name|httpAddress
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", healthReport='"
argument_list|)
operator|.
name|append
argument_list|(
name|healthReport
argument_list|)
operator|.
name|append
argument_list|(
literal|'\''
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", lastUpdated="
argument_list|)
operator|.
name|append
argument_list|(
name|lastUpdated
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

