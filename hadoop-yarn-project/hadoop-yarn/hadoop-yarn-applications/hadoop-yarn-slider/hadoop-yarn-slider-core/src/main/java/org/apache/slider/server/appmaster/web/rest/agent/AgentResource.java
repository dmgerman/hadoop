begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|WebAppApi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|security
operator|.
name|SignCertResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|security
operator|.
name|SignMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|AbstractSliderResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|AgentResource
specifier|public
class|class
name|AgentResource
extends|extends
name|AbstractSliderResource
block|{
DECL|field|agent_name
specifier|private
name|String
name|agent_name
decl_stmt|;
DECL|method|AgentResource (WebAppApi slider)
specifier|public
name|AgentResource
parameter_list|(
name|WebAppApi
name|slider
parameter_list|)
block|{
name|super
argument_list|(
name|slider
argument_list|)
expr_stmt|;
block|}
DECL|method|init (HttpServletResponse res)
specifier|private
name|void
name|init
parameter_list|(
name|HttpServletResponse
name|res
parameter_list|)
block|{
name|res
operator|.
name|setContentType
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/agent/register"
argument_list|)
DECL|method|endpointAgentRegister ()
specifier|public
name|Response
name|endpointAgentRegister
parameter_list|()
block|{
name|Response
name|response
init|=
name|Response
operator|.
name|status
argument_list|(
literal|200
argument_list|)
operator|.
name|entity
argument_list|(
literal|"/agent/register"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/agent"
argument_list|)
DECL|method|endpointAgent ()
specifier|public
name|Response
name|endpointAgent
parameter_list|()
block|{
name|Response
name|response
init|=
name|Response
operator|.
name|status
argument_list|(
literal|200
argument_list|)
operator|.
name|entity
argument_list|(
literal|"/agent"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/"
argument_list|)
DECL|method|endpointRoot ()
specifier|public
name|Response
name|endpointRoot
parameter_list|()
block|{
name|Response
name|response
init|=
name|Response
operator|.
name|status
argument_list|(
literal|200
argument_list|)
operator|.
name|entity
argument_list|(
literal|"/"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/{agent_name: [a-zA-Z][a-zA-Z0-9_-]*}/register"
argument_list|)
annotation|@
name|Consumes
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|register (Register registration, @Context HttpServletResponse res, @PathParam(R) String agent_name)
specifier|public
name|RegistrationResponse
name|register
parameter_list|(
name|Register
name|registration
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"agent_name"
argument_list|)
name|String
name|agent_name
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|this
operator|.
name|agent_name
operator|=
name|agent_name
expr_stmt|;
name|AgentRestOperations
name|ops
init|=
name|slider
operator|.
name|getAgentRestOperations
argument_list|()
decl_stmt|;
return|return
name|ops
operator|.
name|handleRegistration
argument_list|(
name|registration
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
literal|"/{agent_name: [a-zA-Z][a-zA-Z0-9_-]*}/heartbeat"
argument_list|)
annotation|@
name|Consumes
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|}
argument_list|)
DECL|method|heartbeat (HeartBeat message, @Context HttpServletResponse res, @PathParam(R) String agent_name)
specifier|public
name|HeartBeatResponse
name|heartbeat
parameter_list|(
name|HeartBeat
name|message
parameter_list|,
annotation|@
name|Context
name|HttpServletResponse
name|res
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"agent_name"
argument_list|)
name|String
name|agent_name
parameter_list|)
block|{
name|init
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|AgentRestOperations
name|ops
init|=
name|slider
operator|.
name|getAgentRestOperations
argument_list|()
decl_stmt|;
return|return
name|ops
operator|.
name|handleHeartBeat
argument_list|(
name|message
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
literal|"/cert/ca"
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|TEXT_PLAIN
block|}
argument_list|)
DECL|method|downloadSrvrCrt ()
specifier|public
name|String
name|downloadSrvrCrt
parameter_list|()
block|{
return|return
name|slider
operator|.
name|getCertificateManager
argument_list|()
operator|.
name|getServerCert
argument_list|()
return|;
block|}
annotation|@
name|Path
argument_list|(
literal|"/certs/{hostName}"
argument_list|)
annotation|@
name|POST
annotation|@
name|Consumes
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
annotation|@
name|Produces
argument_list|(
block|{
name|MediaType
operator|.
name|APPLICATION_JSON
block|,
name|MediaType
operator|.
name|APPLICATION_XML
block|}
argument_list|)
DECL|method|signAgentCrt (@athParamR) String hostname, SignMessage message, @Context HttpServletRequest req)
specifier|public
name|SignCertResponse
name|signAgentCrt
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"hostName"
argument_list|)
name|String
name|hostname
parameter_list|,
name|SignMessage
name|message
parameter_list|,
annotation|@
name|Context
name|HttpServletRequest
name|req
parameter_list|)
block|{
return|return
name|slider
operator|.
name|getCertificateManager
argument_list|()
operator|.
name|signAgentCrt
argument_list|(
name|hostname
argument_list|,
name|message
operator|.
name|getCsr
argument_list|()
argument_list|,
name|message
operator|.
name|getPassphrase
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

