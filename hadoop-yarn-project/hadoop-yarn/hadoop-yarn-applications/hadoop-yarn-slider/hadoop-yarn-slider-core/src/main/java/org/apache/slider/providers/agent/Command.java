begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
package|;
end_package

begin_comment
comment|/** The states a component instance can be. */
end_comment

begin_enum
DECL|enum|Command
specifier|public
enum|enum
name|Command
block|{
DECL|enumConstant|NOP
name|NOP
block|,
comment|// do nothing
DECL|enumConstant|INSTALL
name|INSTALL
block|,
comment|// Install the component
DECL|enumConstant|INSTALL_ADDON
name|INSTALL_ADDON
block|,
comment|// Install add on packages if any
DECL|enumConstant|START
name|START
block|,
comment|// Start the component
DECL|enumConstant|STOP
name|STOP
block|,
comment|// Stop the component
DECL|enumConstant|UPGRADE
name|UPGRADE
block|,
comment|// The component will undergo upgrade
DECL|enumConstant|TERMINATE
name|TERMINATE
block|;
comment|// Send terminate signal to agent
DECL|method|getCommand (String commandVal)
specifier|public
specifier|static
name|Command
name|getCommand
parameter_list|(
name|String
name|commandVal
parameter_list|)
block|{
if|if
condition|(
name|commandVal
operator|.
name|equals
argument_list|(
name|Command
operator|.
name|START
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Command
operator|.
name|START
return|;
block|}
if|if
condition|(
name|commandVal
operator|.
name|equals
argument_list|(
name|Command
operator|.
name|INSTALL
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Command
operator|.
name|INSTALL
return|;
block|}
if|if
condition|(
name|commandVal
operator|.
name|equals
argument_list|(
name|Command
operator|.
name|STOP
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Command
operator|.
name|STOP
return|;
block|}
if|if
condition|(
name|commandVal
operator|.
name|equals
argument_list|(
name|Command
operator|.
name|UPGRADE
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Command
operator|.
name|UPGRADE
return|;
block|}
if|if
condition|(
name|commandVal
operator|.
name|equals
argument_list|(
name|Command
operator|.
name|TERMINATE
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Command
operator|.
name|TERMINATE
return|;
block|}
return|return
name|Command
operator|.
name|NOP
return|;
block|}
DECL|method|transform (Command command, boolean isUpgrade)
specifier|public
specifier|static
name|String
name|transform
parameter_list|(
name|Command
name|command
parameter_list|,
name|boolean
name|isUpgrade
parameter_list|)
block|{
switch|switch
condition|(
name|command
condition|)
block|{
case|case
name|STOP
case|:
return|return
name|isUpgrade
condition|?
literal|"UPGRADE_STOP"
else|:
name|command
operator|.
name|name
argument_list|()
return|;
default|default:
return|return
name|command
operator|.
name|name
argument_list|()
return|;
block|}
block|}
block|}
end_enum

end_unit

