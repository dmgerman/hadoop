begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|server
operator|.
name|wadl
operator|.
name|ApplicationDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|server
operator|.
name|wadl
operator|.
name|WadlGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|jersey
operator|.
name|server
operator|.
name|wadl
operator|.
name|WadlGeneratorImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|research
operator|.
name|ws
operator|.
name|wadl
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|research
operator|.
name|ws
operator|.
name|wadl
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|research
operator|.
name|ws
operator|.
name|wadl
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|AMWadlGenerator
specifier|public
class|class
name|AMWadlGenerator
extends|extends
name|WadlGeneratorImpl
block|{
annotation|@
name|Override
comment|/**    * This method is called once the WADL application has been assembled, so it    * affords an opportunity to edit the resources presented by the WADL.  In    * this case, we're removing the internal "/agents" resources.    */
DECL|method|attachTypes (ApplicationDescription egd)
specifier|public
name|void
name|attachTypes
parameter_list|(
name|ApplicationDescription
name|egd
parameter_list|)
block|{
name|super
operator|.
name|attachTypes
argument_list|(
name|egd
argument_list|)
expr_stmt|;
name|Application
name|application
init|=
name|egd
operator|.
name|getApplication
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Resources
argument_list|>
name|resources
init|=
name|application
operator|.
name|getResources
argument_list|()
decl_stmt|;
for|for
control|(
name|Resources
name|appResources
range|:
name|resources
control|)
block|{
name|List
argument_list|<
name|Resource
argument_list|>
name|resourceList
init|=
name|appResources
operator|.
name|getResource
argument_list|()
decl_stmt|;
for|for
control|(
name|Resource
name|appResource
range|:
name|resourceList
control|)
block|{
name|String
name|path
init|=
name|appResource
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|RestPaths
operator|.
name|SLIDER_CONTEXT_ROOT
operator|.
name|equals
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|sliderResources
init|=
name|appResource
operator|.
name|getMethodOrResource
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Object
argument_list|>
name|itor
init|=
name|sliderResources
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|itor
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|sliderRes
init|=
name|itor
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|sliderRes
operator|instanceof
name|Resource
condition|)
block|{
name|Resource
name|res
init|=
operator|(
name|Resource
operator|)
name|sliderRes
decl_stmt|;
if|if
condition|(
name|RestPaths
operator|.
name|SLIDER_SUBPATH_AGENTS
operator|.
name|equals
argument_list|(
name|res
operator|.
name|getPath
argument_list|()
argument_list|)
condition|)
block|{
comment|// assuming I'll get a list modification issue if I remove at this
comment|// point
name|itor
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|setWadlGeneratorDelegate (WadlGenerator delegate)
specifier|public
name|void
name|setWadlGeneratorDelegate
parameter_list|(
name|WadlGenerator
name|delegate
parameter_list|)
block|{
comment|// do nothing
block|}
block|}
end_class

end_unit

