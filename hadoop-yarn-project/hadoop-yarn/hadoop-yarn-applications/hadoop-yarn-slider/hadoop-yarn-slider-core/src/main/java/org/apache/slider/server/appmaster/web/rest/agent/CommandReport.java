begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|CommandReport
specifier|public
class|class
name|CommandReport
block|{
DECL|field|exitCode
name|int
name|exitCode
decl_stmt|;
DECL|field|role
specifier|private
name|String
name|role
decl_stmt|;
DECL|field|actionId
specifier|private
name|String
name|actionId
decl_stmt|;
DECL|field|stdout
specifier|private
name|String
name|stdout
decl_stmt|;
DECL|field|stderr
specifier|private
name|String
name|stderr
decl_stmt|;
DECL|field|structuredOut
specifier|private
name|String
name|structuredOut
decl_stmt|;
DECL|field|status
specifier|private
name|String
name|status
decl_stmt|;
DECL|field|clusterName
specifier|private
name|String
name|clusterName
decl_stmt|;
DECL|field|serviceName
specifier|private
name|String
name|serviceName
decl_stmt|;
DECL|field|taskId
specifier|private
name|long
name|taskId
decl_stmt|;
DECL|field|roleCommand
specifier|private
name|String
name|roleCommand
decl_stmt|;
DECL|field|folders
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|folders
decl_stmt|;
DECL|field|allocatedPorts
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|allocatedPorts
decl_stmt|;
DECL|field|configurationTags
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|configurationTags
decl_stmt|;
annotation|@
name|JsonProperty
argument_list|(
literal|"taskId"
argument_list|)
DECL|method|getTaskId ()
specifier|public
name|long
name|getTaskId
parameter_list|()
block|{
return|return
name|taskId
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"taskId"
argument_list|)
DECL|method|setTaskId (long taskId)
specifier|public
name|void
name|setTaskId
parameter_list|(
name|long
name|taskId
parameter_list|)
block|{
name|this
operator|.
name|taskId
operator|=
name|taskId
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"clusterName"
argument_list|)
DECL|method|getClusterName ()
specifier|public
name|String
name|getClusterName
parameter_list|()
block|{
return|return
name|this
operator|.
name|clusterName
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"clusterName"
argument_list|)
DECL|method|setClusterName (String clusterName)
specifier|public
name|void
name|setClusterName
parameter_list|(
name|String
name|clusterName
parameter_list|)
block|{
name|this
operator|.
name|clusterName
operator|=
name|clusterName
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"actionId"
argument_list|)
DECL|method|getActionId ()
specifier|public
name|String
name|getActionId
parameter_list|()
block|{
return|return
name|this
operator|.
name|actionId
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"actionId"
argument_list|)
DECL|method|setActionId (String actionId)
specifier|public
name|void
name|setActionId
parameter_list|(
name|String
name|actionId
parameter_list|)
block|{
name|this
operator|.
name|actionId
operator|=
name|actionId
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"stderr"
argument_list|)
DECL|method|getStdErr ()
specifier|public
name|String
name|getStdErr
parameter_list|()
block|{
return|return
name|this
operator|.
name|stderr
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"stderr"
argument_list|)
DECL|method|setStdErr (String stderr)
specifier|public
name|void
name|setStdErr
parameter_list|(
name|String
name|stderr
parameter_list|)
block|{
name|this
operator|.
name|stderr
operator|=
name|stderr
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"exitcode"
argument_list|)
DECL|method|getExitCode ()
specifier|public
name|int
name|getExitCode
parameter_list|()
block|{
return|return
name|this
operator|.
name|exitCode
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"exitcode"
argument_list|)
DECL|method|setExitCode (int exitCode)
specifier|public
name|void
name|setExitCode
parameter_list|(
name|int
name|exitCode
parameter_list|)
block|{
name|this
operator|.
name|exitCode
operator|=
name|exitCode
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"stdout"
argument_list|)
DECL|method|getStdOut ()
specifier|public
name|String
name|getStdOut
parameter_list|()
block|{
return|return
name|this
operator|.
name|stdout
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"stdout"
argument_list|)
DECL|method|setStdOut (String stdout)
specifier|public
name|void
name|setStdOut
parameter_list|(
name|String
name|stdout
parameter_list|)
block|{
name|this
operator|.
name|stdout
operator|=
name|stdout
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"structuredOut"
argument_list|)
DECL|method|getStructuredOut ()
specifier|public
name|String
name|getStructuredOut
parameter_list|()
block|{
return|return
name|this
operator|.
name|structuredOut
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"structuredOut"
argument_list|)
DECL|method|setStructuredOut (String structuredOut)
specifier|public
name|void
name|setStructuredOut
parameter_list|(
name|String
name|structuredOut
parameter_list|)
block|{
name|this
operator|.
name|structuredOut
operator|=
name|structuredOut
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleCommand"
argument_list|)
DECL|method|getRoleCommand ()
specifier|public
name|String
name|getRoleCommand
parameter_list|()
block|{
return|return
name|this
operator|.
name|roleCommand
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleCommand"
argument_list|)
DECL|method|setRoleCommand (String roleCommand)
specifier|public
name|void
name|setRoleCommand
parameter_list|(
name|String
name|roleCommand
parameter_list|)
block|{
name|this
operator|.
name|roleCommand
operator|=
name|roleCommand
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"role"
argument_list|)
DECL|method|getRole ()
specifier|public
name|String
name|getRole
parameter_list|()
block|{
return|return
name|role
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"role"
argument_list|)
DECL|method|setRole (String role)
specifier|public
name|void
name|setRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|this
operator|.
name|role
operator|=
name|role
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"status"
argument_list|)
DECL|method|getStatus ()
specifier|public
name|String
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"status"
argument_list|)
DECL|method|setStatus (String status)
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"serviceName"
argument_list|)
DECL|method|getServiceName ()
specifier|public
name|String
name|getServiceName
parameter_list|()
block|{
return|return
name|serviceName
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"serviceName"
argument_list|)
DECL|method|setServiceName (String serviceName)
specifier|public
name|void
name|setServiceName
parameter_list|(
name|String
name|serviceName
parameter_list|)
block|{
name|this
operator|.
name|serviceName
operator|=
name|serviceName
expr_stmt|;
block|}
comment|/** @return the config tags that match this command, or<code>null</code> if none are present */
annotation|@
name|JsonProperty
argument_list|(
literal|"configurationTags"
argument_list|)
DECL|method|getConfigurationTags ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getConfigurationTags
parameter_list|()
block|{
return|return
name|configurationTags
return|;
block|}
comment|/** @param tags the config tags that match this command */
annotation|@
name|JsonProperty
argument_list|(
literal|"configurationTags"
argument_list|)
DECL|method|setConfigurationTags (Map<String, Map<String, String>> tags)
specifier|public
name|void
name|setConfigurationTags
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|tags
parameter_list|)
block|{
name|configurationTags
operator|=
name|tags
expr_stmt|;
block|}
comment|/** @return the allocated ports, or<code>null</code> if none are present */
annotation|@
name|JsonProperty
argument_list|(
literal|"allocatedPorts"
argument_list|)
DECL|method|getAllocatedPorts ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAllocatedPorts
parameter_list|()
block|{
return|return
name|allocatedPorts
return|;
block|}
comment|/** @param ports allocated ports */
annotation|@
name|JsonProperty
argument_list|(
literal|"allocatedPorts"
argument_list|)
DECL|method|setAllocatedPorts (Map<String, String> ports)
specifier|public
name|void
name|setAllocatedPorts
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ports
parameter_list|)
block|{
name|this
operator|.
name|allocatedPorts
operator|=
name|ports
expr_stmt|;
block|}
comment|/** @return the folders, or<code>null</code> if none are present */
annotation|@
name|JsonProperty
argument_list|(
literal|"folders"
argument_list|)
DECL|method|getFolders ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getFolders
parameter_list|()
block|{
return|return
name|folders
return|;
block|}
comment|/** @param folders allocated ports */
annotation|@
name|JsonProperty
argument_list|(
literal|"folders"
argument_list|)
DECL|method|setFolders (Map<String, String> folders)
specifier|public
name|void
name|setFolders
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|folders
parameter_list|)
block|{
name|this
operator|.
name|folders
operator|=
name|folders
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CommandReport{"
operator|+
literal|"role='"
operator|+
name|role
operator|+
literal|'\''
operator|+
literal|", actionId='"
operator|+
name|actionId
operator|+
literal|'\''
operator|+
literal|", status='"
operator|+
name|status
operator|+
literal|'\''
operator|+
literal|", exitCode="
operator|+
name|exitCode
operator|+
literal|", clusterName='"
operator|+
name|clusterName
operator|+
literal|'\''
operator|+
literal|", serviceName='"
operator|+
name|serviceName
operator|+
literal|'\''
operator|+
literal|", taskId="
operator|+
name|taskId
operator|+
literal|", roleCommand="
operator|+
name|roleCommand
operator|+
literal|", configurationTags="
operator|+
name|configurationTags
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

