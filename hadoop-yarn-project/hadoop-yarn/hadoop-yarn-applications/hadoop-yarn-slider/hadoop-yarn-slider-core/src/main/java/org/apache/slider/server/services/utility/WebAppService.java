begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.services.utility
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|services
operator|.
name|utility
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApp
import|;
end_import

begin_comment
comment|/**  * Contains a webapp reference and stops it in teardown if non-null  *<p>  * It does not start the application.  * Access to the field is not synchronized across threads; it is the  * responsibility of the caller.  */
end_comment

begin_class
DECL|class|WebAppService
specifier|public
class|class
name|WebAppService
parameter_list|<
name|T
extends|extends
name|WebApp
parameter_list|>
extends|extends
name|AbstractService
block|{
DECL|field|webApp
specifier|private
specifier|volatile
name|T
name|webApp
decl_stmt|;
DECL|method|WebAppService (String name)
specifier|public
name|WebAppService
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|WebAppService (String name, T app)
specifier|public
name|WebAppService
parameter_list|(
name|String
name|name
parameter_list|,
name|T
name|app
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|webApp
operator|=
name|app
expr_stmt|;
block|}
DECL|method|getWebApp ()
specifier|public
name|T
name|getWebApp
parameter_list|()
block|{
return|return
name|webApp
return|;
block|}
DECL|method|setWebApp (T webApp)
specifier|public
name|void
name|setWebApp
parameter_list|(
name|T
name|webApp
parameter_list|)
block|{
name|this
operator|.
name|webApp
operator|=
name|webApp
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{    }
comment|/**    * Stop operation stops the webapp; sets the reference to null    * @throws Exception    */
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|webApp
operator|!=
literal|null
condition|)
block|{
name|webApp
operator|.
name|stop
argument_list|()
expr_stmt|;
name|webApp
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

