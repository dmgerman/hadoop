begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|DiskInfo
specifier|public
class|class
name|DiskInfo
block|{
DECL|field|available
name|String
name|available
decl_stmt|;
DECL|field|mountpoint
name|String
name|mountpoint
decl_stmt|;
DECL|field|device
name|String
name|device
decl_stmt|;
DECL|field|used
name|String
name|used
decl_stmt|;
DECL|field|percent
name|String
name|percent
decl_stmt|;
DECL|field|size
name|String
name|size
decl_stmt|;
DECL|field|type
name|String
name|type
decl_stmt|;
comment|/**    * DiskInfo object that tracks information about a disk.    * @param mountpoint    * @param available    * @param used    * @param percent    * @param size    */
DECL|method|DiskInfo (String device, String mountpoint, String available, String used, String percent, String size, String type)
specifier|public
name|DiskInfo
parameter_list|(
name|String
name|device
parameter_list|,
name|String
name|mountpoint
parameter_list|,
name|String
name|available
parameter_list|,
name|String
name|used
parameter_list|,
name|String
name|percent
parameter_list|,
name|String
name|size
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|device
operator|=
name|device
expr_stmt|;
name|this
operator|.
name|mountpoint
operator|=
name|mountpoint
expr_stmt|;
name|this
operator|.
name|available
operator|=
name|available
expr_stmt|;
name|this
operator|.
name|used
operator|=
name|used
expr_stmt|;
name|this
operator|.
name|percent
operator|=
name|percent
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
comment|/**    * Needed for Serialization    */
DECL|method|DiskInfo ()
specifier|public
name|DiskInfo
parameter_list|()
block|{}
annotation|@
name|JsonProperty
argument_list|(
literal|"available"
argument_list|)
DECL|method|setAvailable (String available)
specifier|public
name|void
name|setAvailable
parameter_list|(
name|String
name|available
parameter_list|)
block|{
name|this
operator|.
name|available
operator|=
name|available
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"available"
argument_list|)
DECL|method|getAvailable ()
specifier|public
name|String
name|getAvailable
parameter_list|()
block|{
return|return
name|this
operator|.
name|available
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"mountpoint"
argument_list|)
DECL|method|getMountPoint ()
specifier|public
name|String
name|getMountPoint
parameter_list|()
block|{
return|return
name|this
operator|.
name|mountpoint
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"mountpoint"
argument_list|)
DECL|method|setMountPoint (String mountpoint)
specifier|public
name|void
name|setMountPoint
parameter_list|(
name|String
name|mountpoint
parameter_list|)
block|{
name|this
operator|.
name|mountpoint
operator|=
name|mountpoint
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"type"
argument_list|)
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|this
operator|.
name|type
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"type"
argument_list|)
DECL|method|setType (String type)
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"used"
argument_list|)
DECL|method|getUsed ()
specifier|public
name|String
name|getUsed
parameter_list|()
block|{
return|return
name|this
operator|.
name|used
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"used"
argument_list|)
DECL|method|setUsed (String used)
specifier|public
name|void
name|setUsed
parameter_list|(
name|String
name|used
parameter_list|)
block|{
name|this
operator|.
name|used
operator|=
name|used
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"percent"
argument_list|)
DECL|method|getPercent ()
specifier|public
name|String
name|getPercent
parameter_list|()
block|{
return|return
name|this
operator|.
name|percent
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"percent"
argument_list|)
DECL|method|setPercent (String percent)
specifier|public
name|void
name|setPercent
parameter_list|(
name|String
name|percent
parameter_list|)
block|{
name|this
operator|.
name|percent
operator|=
name|percent
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"size"
argument_list|)
DECL|method|getSize ()
specifier|public
name|String
name|getSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|size
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"size"
argument_list|)
DECL|method|setSize (String size)
specifier|public
name|void
name|setSize
parameter_list|(
name|String
name|size
parameter_list|)
block|{
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"available="
operator|+
name|this
operator|.
name|available
operator|+
literal|",mountpoint="
operator|+
name|this
operator|.
name|mountpoint
operator|+
literal|",used="
operator|+
name|this
operator|.
name|used
operator|+
literal|",percent="
operator|+
name|this
operator|.
name|percent
operator|+
literal|",size="
operator|+
name|this
operator|.
name|size
operator|+
literal|",device="
operator|+
name|this
operator|.
name|device
operator|+
literal|",type="
operator|+
name|this
operator|.
name|type
return|;
block|}
block|}
end_class

end_unit

