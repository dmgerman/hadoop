begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_class
DECL|class|ProviderCompletedCallable
specifier|public
class|class
name|ProviderCompletedCallable
implements|implements
name|Callable
argument_list|<
name|Object
argument_list|>
block|{
DECL|field|callback
specifier|private
specifier|final
name|ProviderCompleted
name|callback
decl_stmt|;
DECL|field|parameter
specifier|private
specifier|final
name|Object
name|parameter
decl_stmt|;
DECL|method|ProviderCompletedCallable (ProviderCompleted callback, Object parameter)
specifier|public
name|ProviderCompletedCallable
parameter_list|(
name|ProviderCompleted
name|callback
parameter_list|,
name|Object
name|parameter
parameter_list|)
block|{
name|this
operator|.
name|callback
operator|=
name|callback
expr_stmt|;
name|this
operator|.
name|parameter
operator|=
name|parameter
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|call ()
specifier|public
name|Object
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|callback
operator|.
name|eventCallbackEvent
argument_list|(
name|parameter
argument_list|)
expr_stmt|;
return|return
name|parameter
return|;
block|}
block|}
end_class

end_unit

