begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.server.appmaster.web.rest.agent
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|server
operator|.
name|appmaster
operator|.
name|web
operator|.
name|rest
operator|.
name|agent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|DockerContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|DockerContainerInputFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|DockerContainerMount
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|DockerContainerPort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
operator|.
name|Metainfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonIgnoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|annotate
operator|.
name|JsonSerialize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
annotation|@
name|JsonIgnoreProperties
argument_list|(
name|ignoreUnknown
operator|=
literal|true
argument_list|)
annotation|@
name|JsonSerialize
argument_list|(
name|include
operator|=
name|JsonSerialize
operator|.
name|Inclusion
operator|.
name|NON_NULL
argument_list|)
DECL|class|ExecutionCommand
specifier|public
class|class
name|ExecutionCommand
block|{
DECL|field|log
specifier|protected
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ExecutionCommand
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|commandType
specifier|private
name|AgentCommandType
name|commandType
init|=
name|AgentCommandType
operator|.
name|EXECUTION_COMMAND
decl_stmt|;
DECL|field|clusterName
specifier|private
name|String
name|clusterName
decl_stmt|;
DECL|field|taskId
specifier|private
name|long
name|taskId
decl_stmt|;
DECL|field|commandId
specifier|private
name|String
name|commandId
decl_stmt|;
comment|//TODO Remove hostname from being set in the command
DECL|field|hostname
specifier|private
name|String
name|hostname
decl_stmt|;
DECL|field|role
specifier|private
name|String
name|role
decl_stmt|;
DECL|field|hostLevelParams
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|hostLevelParams
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|roleParams
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|roleParams
init|=
literal|null
decl_stmt|;
DECL|field|roleCommand
specifier|private
name|String
name|roleCommand
decl_stmt|;
DECL|field|configurations
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|configurations
decl_stmt|;
DECL|field|componentConfigurations
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|componentConfigurations
decl_stmt|;
DECL|field|commandParams
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|commandParams
decl_stmt|;
DECL|field|serviceName
specifier|private
name|String
name|serviceName
decl_stmt|;
DECL|field|componentName
specifier|private
name|String
name|componentName
decl_stmt|;
DECL|field|componentType
specifier|private
name|String
name|componentType
decl_stmt|;
DECL|field|containers
specifier|private
name|List
argument_list|<
name|DockerContainer
argument_list|>
name|containers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|pkg
specifier|private
name|String
name|pkg
decl_stmt|;
DECL|field|yarnDockerMode
specifier|private
name|boolean
name|yarnDockerMode
init|=
literal|false
decl_stmt|;
DECL|method|ExecutionCommand (AgentCommandType commandType)
specifier|public
name|ExecutionCommand
parameter_list|(
name|AgentCommandType
name|commandType
parameter_list|)
block|{
name|this
operator|.
name|commandType
operator|=
name|commandType
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandType"
argument_list|)
DECL|method|getCommandType ()
specifier|public
name|AgentCommandType
name|getCommandType
parameter_list|()
block|{
return|return
name|commandType
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandType"
argument_list|)
DECL|method|setCommandType (AgentCommandType commandType)
specifier|public
name|void
name|setCommandType
parameter_list|(
name|AgentCommandType
name|commandType
parameter_list|)
block|{
name|this
operator|.
name|commandType
operator|=
name|commandType
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandId"
argument_list|)
DECL|method|getCommandId ()
specifier|public
name|String
name|getCommandId
parameter_list|()
block|{
return|return
name|this
operator|.
name|commandId
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandId"
argument_list|)
DECL|method|setCommandId (String commandId)
specifier|public
name|void
name|setCommandId
parameter_list|(
name|String
name|commandId
parameter_list|)
block|{
name|this
operator|.
name|commandId
operator|=
name|commandId
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"taskId"
argument_list|)
DECL|method|getTaskId ()
specifier|public
name|long
name|getTaskId
parameter_list|()
block|{
return|return
name|taskId
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"taskId"
argument_list|)
DECL|method|setTaskId (long taskId)
specifier|public
name|void
name|setTaskId
parameter_list|(
name|long
name|taskId
parameter_list|)
block|{
name|this
operator|.
name|taskId
operator|=
name|taskId
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"role"
argument_list|)
DECL|method|getRole ()
specifier|public
name|String
name|getRole
parameter_list|()
block|{
return|return
name|role
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"role"
argument_list|)
DECL|method|setRole (String role)
specifier|public
name|void
name|setRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|this
operator|.
name|role
operator|=
name|role
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleParams"
argument_list|)
DECL|method|getRoleParams ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getRoleParams
parameter_list|()
block|{
return|return
name|roleParams
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleParams"
argument_list|)
DECL|method|setRoleParams (Map<String, String> roleParams)
specifier|public
name|void
name|setRoleParams
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|roleParams
parameter_list|)
block|{
name|this
operator|.
name|roleParams
operator|=
name|roleParams
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleCommand"
argument_list|)
DECL|method|getRoleCommand ()
specifier|public
name|String
name|getRoleCommand
parameter_list|()
block|{
return|return
name|roleCommand
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"roleCommand"
argument_list|)
DECL|method|setRoleCommand (String cmd)
specifier|public
name|void
name|setRoleCommand
parameter_list|(
name|String
name|cmd
parameter_list|)
block|{
name|this
operator|.
name|roleCommand
operator|=
name|cmd
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"clusterName"
argument_list|)
DECL|method|getClusterName ()
specifier|public
name|String
name|getClusterName
parameter_list|()
block|{
return|return
name|clusterName
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"clusterName"
argument_list|)
DECL|method|setClusterName (String clusterName)
specifier|public
name|void
name|setClusterName
parameter_list|(
name|String
name|clusterName
parameter_list|)
block|{
name|this
operator|.
name|clusterName
operator|=
name|clusterName
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentType"
argument_list|)
DECL|method|getComponentType ()
specifier|public
name|String
name|getComponentType
parameter_list|()
block|{
return|return
name|componentType
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentType"
argument_list|)
DECL|method|setComponentType (String componentType)
specifier|public
name|void
name|setComponentType
parameter_list|(
name|String
name|componentType
parameter_list|)
block|{
name|this
operator|.
name|componentType
operator|=
name|componentType
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"hostname"
argument_list|)
DECL|method|getHostname ()
specifier|public
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|hostname
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"hostname"
argument_list|)
DECL|method|setHostname (String hostname)
specifier|public
name|void
name|setHostname
parameter_list|(
name|String
name|hostname
parameter_list|)
block|{
name|this
operator|.
name|hostname
operator|=
name|hostname
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"hostLevelParams"
argument_list|)
DECL|method|getHostLevelParams ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getHostLevelParams
parameter_list|()
block|{
return|return
name|hostLevelParams
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"hostLevelParams"
argument_list|)
DECL|method|setHostLevelParams (Map<String, String> params)
specifier|public
name|void
name|setHostLevelParams
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
block|{
name|this
operator|.
name|hostLevelParams
operator|=
name|params
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"configurations"
argument_list|)
DECL|method|getConfigurations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getConfigurations
parameter_list|()
block|{
return|return
name|configurations
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"configurations"
argument_list|)
DECL|method|setConfigurations (Map<String, Map<String, String>> configurations)
specifier|public
name|void
name|setConfigurations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|configurations
parameter_list|)
block|{
name|this
operator|.
name|configurations
operator|=
name|configurations
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandParams"
argument_list|)
DECL|method|getCommandParams ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getCommandParams
parameter_list|()
block|{
return|return
name|commandParams
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"commandParams"
argument_list|)
DECL|method|setCommandParams (Map<String, String> commandParams)
specifier|public
name|void
name|setCommandParams
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|commandParams
parameter_list|)
block|{
name|this
operator|.
name|commandParams
operator|=
name|commandParams
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"serviceName"
argument_list|)
DECL|method|getServiceName ()
specifier|public
name|String
name|getServiceName
parameter_list|()
block|{
return|return
name|serviceName
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"serviceName"
argument_list|)
DECL|method|setServiceName (String serviceName)
specifier|public
name|void
name|setServiceName
parameter_list|(
name|String
name|serviceName
parameter_list|)
block|{
name|this
operator|.
name|serviceName
operator|=
name|serviceName
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentName"
argument_list|)
DECL|method|getComponentName ()
specifier|public
name|String
name|getComponentName
parameter_list|()
block|{
return|return
name|componentName
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentName"
argument_list|)
DECL|method|setComponentName (String componentName)
specifier|public
name|void
name|setComponentName
parameter_list|(
name|String
name|componentName
parameter_list|)
block|{
name|this
operator|.
name|componentName
operator|=
name|componentName
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"package"
argument_list|)
DECL|method|getPkg ()
specifier|public
name|String
name|getPkg
parameter_list|()
block|{
return|return
name|pkg
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"package"
argument_list|)
DECL|method|setPkg (String pkg)
specifier|public
name|void
name|setPkg
parameter_list|(
name|String
name|pkg
parameter_list|)
block|{
name|this
operator|.
name|pkg
operator|=
name|pkg
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentConfig"
argument_list|)
DECL|method|getComponentConfigurations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getComponentConfigurations
parameter_list|()
block|{
return|return
name|componentConfigurations
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"componentConfig"
argument_list|)
DECL|method|setComponentConfigurations ( Map<String, Map<String, String>> componentConfigurations)
specifier|public
name|void
name|setComponentConfigurations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|componentConfigurations
parameter_list|)
block|{
name|this
operator|.
name|componentConfigurations
operator|=
name|componentConfigurations
expr_stmt|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"containers"
argument_list|)
DECL|method|getContainers ()
specifier|public
name|List
argument_list|<
name|DockerContainer
argument_list|>
name|getContainers
parameter_list|()
block|{
return|return
name|containers
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"yarnDockerMode"
argument_list|)
DECL|method|isYarnDockerMode ()
specifier|public
name|boolean
name|isYarnDockerMode
parameter_list|()
block|{
return|return
name|yarnDockerMode
return|;
block|}
annotation|@
name|JsonProperty
argument_list|(
literal|"yarnDockerMode"
argument_list|)
DECL|method|setYarnDockerMode (boolean yarnDockerMode)
specifier|public
name|void
name|setYarnDockerMode
parameter_list|(
name|boolean
name|yarnDockerMode
parameter_list|)
block|{
name|this
operator|.
name|yarnDockerMode
operator|=
name|yarnDockerMode
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"ExecutionCommand [commandType="
argument_list|)
operator|.
name|append
argument_list|(
name|commandType
argument_list|)
operator|.
name|append
argument_list|(
literal|", clusterName="
argument_list|)
operator|.
name|append
argument_list|(
name|clusterName
argument_list|)
operator|.
name|append
argument_list|(
literal|", taskId="
argument_list|)
operator|.
name|append
argument_list|(
name|taskId
argument_list|)
operator|.
name|append
argument_list|(
literal|", commandId="
argument_list|)
operator|.
name|append
argument_list|(
name|commandId
argument_list|)
operator|.
name|append
argument_list|(
literal|", hostname="
argument_list|)
operator|.
name|append
argument_list|(
name|hostname
argument_list|)
operator|.
name|append
argument_list|(
literal|", role="
argument_list|)
operator|.
name|append
argument_list|(
name|role
argument_list|)
operator|.
name|append
argument_list|(
literal|", hostLevelParams="
argument_list|)
operator|.
name|append
argument_list|(
name|hostLevelParams
argument_list|)
operator|.
name|append
argument_list|(
literal|", roleParams="
argument_list|)
operator|.
name|append
argument_list|(
name|roleParams
argument_list|)
operator|.
name|append
argument_list|(
literal|", roleCommand="
argument_list|)
operator|.
name|append
argument_list|(
name|roleCommand
argument_list|)
operator|.
name|append
argument_list|(
literal|", configurations="
argument_list|)
operator|.
name|append
argument_list|(
name|configurations
argument_list|)
operator|.
name|append
argument_list|(
literal|", commandParams="
argument_list|)
operator|.
name|append
argument_list|(
name|commandParams
argument_list|)
operator|.
name|append
argument_list|(
literal|", serviceName="
argument_list|)
operator|.
name|append
argument_list|(
name|serviceName
argument_list|)
operator|.
name|append
argument_list|(
literal|", componentName="
argument_list|)
operator|.
name|append
argument_list|(
name|componentName
argument_list|)
operator|.
name|append
argument_list|(
literal|", componentType="
argument_list|)
operator|.
name|append
argument_list|(
name|componentType
argument_list|)
operator|.
name|append
argument_list|(
literal|", yarnDockerMode="
argument_list|)
operator|.
name|append
argument_list|(
name|yarnDockerMode
argument_list|)
operator|.
name|append
argument_list|(
literal|", pkg="
argument_list|)
operator|.
name|append
argument_list|(
name|pkg
argument_list|)
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|addContainerDetails (String componentGroup, Metainfo metaInfo)
specifier|public
name|void
name|addContainerDetails
parameter_list|(
name|String
name|componentGroup
parameter_list|,
name|Metainfo
name|metaInfo
parameter_list|)
block|{
name|Component
name|component
init|=
name|metaInfo
operator|.
name|getApplicationComponent
argument_list|(
name|componentGroup
argument_list|)
decl_stmt|;
name|this
operator|.
name|setComponentType
argument_list|(
name|component
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Adding container details for {}"
argument_list|,
name|componentGroup
argument_list|,
literal|" from "
argument_list|,
name|metaInfo
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|DockerContainer
name|metaContainer
range|:
name|component
operator|.
name|getDockerContainers
argument_list|()
control|)
block|{
name|DockerContainer
name|container
init|=
operator|new
name|DockerContainer
argument_list|()
decl_stmt|;
name|container
operator|.
name|setImage
argument_list|(
name|metaContainer
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setNetwork
argument_list|(
name|metaContainer
operator|.
name|getNetwork
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setUseNetworkScript
argument_list|(
name|metaContainer
operator|.
name|getUseNetworkScript
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setName
argument_list|(
name|metaContainer
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setOptions
argument_list|(
name|metaContainer
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setAdditionalParam
argument_list|(
name|metaContainer
operator|.
name|getAdditionalParam
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setCommandPath
argument_list|(
name|metaContainer
operator|.
name|getAdditionalParam
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setStatusCommand
argument_list|(
name|metaContainer
operator|.
name|getStatusCommand
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|setStartCommand
argument_list|(
name|metaContainer
operator|.
name|getStartCommand
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|metaContainer
operator|.
name|getMounts
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|DockerContainerMount
name|metaContMount
range|:
name|metaContainer
operator|.
name|getMounts
argument_list|()
control|)
block|{
name|DockerContainerMount
name|contMnt
init|=
operator|new
name|DockerContainerMount
argument_list|()
decl_stmt|;
name|contMnt
operator|.
name|setContainerMount
argument_list|(
name|metaContMount
operator|.
name|getContainerMount
argument_list|()
argument_list|)
expr_stmt|;
name|contMnt
operator|.
name|setHostMount
argument_list|(
name|metaContMount
operator|.
name|getHostMount
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|getMounts
argument_list|()
operator|.
name|add
argument_list|(
name|contMnt
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|metaContainer
operator|.
name|getPorts
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|DockerContainerPort
name|metaCntPort
range|:
name|metaContainer
operator|.
name|getPorts
argument_list|()
control|)
block|{
name|DockerContainerPort
name|cntPort
init|=
operator|new
name|DockerContainerPort
argument_list|()
decl_stmt|;
name|cntPort
operator|.
name|setContainerPort
argument_list|(
name|metaCntPort
operator|.
name|getContainerPort
argument_list|()
argument_list|)
expr_stmt|;
name|cntPort
operator|.
name|setHostPort
argument_list|(
name|metaCntPort
operator|.
name|getHostPort
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|getPorts
argument_list|()
operator|.
name|add
argument_list|(
name|cntPort
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|metaContainer
operator|.
name|getInputFiles
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|DockerContainerInputFile
name|metaInpFile
range|:
name|metaContainer
operator|.
name|getInputFiles
argument_list|()
control|)
block|{
name|DockerContainerInputFile
name|inpFile
init|=
operator|new
name|DockerContainerInputFile
argument_list|()
decl_stmt|;
name|inpFile
operator|.
name|setContainerMount
argument_list|(
name|metaInpFile
operator|.
name|getContainerMount
argument_list|()
argument_list|)
expr_stmt|;
name|inpFile
operator|.
name|setFileLocalPath
argument_list|(
name|metaInpFile
operator|.
name|getFileLocalPath
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|getInputFiles
argument_list|()
operator|.
name|add
argument_list|(
name|inpFile
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|metaContainer
operator|.
name|getConfigFiles
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|container
operator|.
name|setConfigFiles
argument_list|(
name|metaContainer
operator|.
name|getConfigFiles
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|log
operator|.
name|info
argument_list|(
literal|"Docker container meta info ready: "
operator|+
name|container
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|getContainers
argument_list|()
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

