begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.core.buildutils
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|buildutils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|common
operator|.
name|tools
operator|.
name|CoreFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|conf
operator|.
name|AggregateConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|BadClusterStateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|persist
operator|.
name|ConfPersister
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|persist
operator|.
name|LockAcquireFailedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|InstanceIO
specifier|public
class|class
name|InstanceIO
block|{
DECL|field|log
specifier|protected
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|InstanceIO
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Load in an instance definition -but do not resolve it    * @param sliderFileSystem filesystem    * @param clusterDirectory CD    * @return the unresolved aggregate configuration    * @throws IOException    * @throws SliderException    * @throws BadClusterStateException if a lock could not be acquired    */
DECL|method|loadInstanceDefinitionUnresolved ( CoreFileSystem sliderFileSystem, Path clusterDirectory)
specifier|public
specifier|static
name|AggregateConf
name|loadInstanceDefinitionUnresolved
parameter_list|(
name|CoreFileSystem
name|sliderFileSystem
parameter_list|,
name|Path
name|clusterDirectory
parameter_list|)
throws|throws
name|IOException
throws|,
name|SliderException
block|{
name|AggregateConf
name|instanceDefinition
init|=
operator|new
name|AggregateConf
argument_list|()
decl_stmt|;
name|ConfPersister
name|persister
init|=
operator|new
name|ConfPersister
argument_list|(
name|sliderFileSystem
argument_list|,
name|clusterDirectory
argument_list|)
decl_stmt|;
try|try
block|{
name|persister
operator|.
name|load
argument_list|(
name|instanceDefinition
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LockAcquireFailedException
name|e
parameter_list|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Lock acquisition failure of {}"
argument_list|,
name|clusterDirectory
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|BadClusterStateException
argument_list|(
literal|"Application at %s is locked for reading"
argument_list|,
name|clusterDirectory
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|instanceDefinition
return|;
block|}
comment|/**    * Update a persisted instance definition    * @param coreFS filesystem    * @param dir directory to load from    * @param instanceDefinition instance definition to save do    * @throws SliderException    * @throws IOException    * @throws LockAcquireFailedException    */
DECL|method|saveInstanceDefinition (CoreFileSystem coreFS, Path dir, AggregateConf instanceDefinition)
specifier|public
specifier|static
name|void
name|saveInstanceDefinition
parameter_list|(
name|CoreFileSystem
name|coreFS
parameter_list|,
name|Path
name|dir
parameter_list|,
name|AggregateConf
name|instanceDefinition
parameter_list|)
throws|throws
name|SliderException
throws|,
name|IOException
throws|,
name|LockAcquireFailedException
block|{
name|ConfPersister
name|persister
init|=
operator|new
name|ConfPersister
argument_list|(
name|coreFS
argument_list|,
name|dir
argument_list|)
decl_stmt|;
name|persister
operator|.
name|save
argument_list|(
name|instanceDefinition
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

