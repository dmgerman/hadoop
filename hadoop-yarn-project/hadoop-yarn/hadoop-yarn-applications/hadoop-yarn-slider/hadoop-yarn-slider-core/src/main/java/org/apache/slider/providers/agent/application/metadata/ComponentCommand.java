begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.slider.providers.agent.application.metadata
package|package
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|providers
operator|.
name|agent
operator|.
name|application
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|slider
operator|.
name|core
operator|.
name|exceptions
operator|.
name|SliderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Represents the metadata associated with the application.  */
end_comment

begin_class
DECL|class|ComponentCommand
specifier|public
class|class
name|ComponentCommand
implements|implements
name|Validate
block|{
specifier|protected
specifier|static
specifier|final
name|Logger
DECL|field|log
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ComponentCommand
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|exec
specifier|private
name|String
name|exec
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
init|=
literal|"START"
decl_stmt|;
DECL|field|type
specifier|private
name|String
name|type
init|=
literal|"SHELL"
decl_stmt|;
comment|/**    * Creator.    */
DECL|method|ComponentCommand ()
specifier|public
name|ComponentCommand
parameter_list|()
block|{   }
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setExec (String exec)
specifier|public
name|void
name|setExec
parameter_list|(
name|String
name|exec
parameter_list|)
block|{
name|this
operator|.
name|exec
operator|=
name|exec
expr_stmt|;
block|}
DECL|method|getExec ()
specifier|public
name|String
name|getExec
parameter_list|()
block|{
return|return
name|exec
return|;
block|}
DECL|method|setType (String type)
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|validate (String version)
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|version
parameter_list|)
throws|throws
name|SliderException
block|{
name|Metainfo
operator|.
name|checkNonNull
argument_list|(
name|getName
argument_list|()
argument_list|,
literal|"name"
argument_list|,
literal|"componentCommand"
argument_list|)
expr_stmt|;
name|Metainfo
operator|.
name|checkNonNull
argument_list|(
name|getType
argument_list|()
argument_list|,
literal|"version"
argument_list|,
literal|"application"
argument_list|)
expr_stmt|;
block|}
DECL|method|getDefaultComponentCommand ()
specifier|public
specifier|static
name|ComponentCommand
name|getDefaultComponentCommand
parameter_list|()
block|{
name|ComponentCommand
name|cc
init|=
operator|new
name|ComponentCommand
argument_list|()
decl_stmt|;
name|cc
operator|.
name|setExec
argument_list|(
literal|"DEFAULT"
argument_list|)
expr_stmt|;
return|return
name|cc
return|;
block|}
DECL|method|getDefaultComponentCommand (String commandName)
specifier|public
specifier|static
name|ComponentCommand
name|getDefaultComponentCommand
parameter_list|(
name|String
name|commandName
parameter_list|)
block|{
name|ComponentCommand
name|cc
init|=
operator|new
name|ComponentCommand
argument_list|()
decl_stmt|;
name|cc
operator|.
name|setExec
argument_list|(
literal|"DEFAULT"
argument_list|)
expr_stmt|;
name|cc
operator|.
name|setName
argument_list|(
name|commandName
argument_list|)
expr_stmt|;
return|return
name|cc
return|;
block|}
block|}
end_class

end_unit

