begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.services.resource
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|services
operator|.
name|resource
package|;
end_package

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiModel
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiModelProperty
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_comment
comment|/**  * Resource determines the amount of resources (vcores, memory, network, etc.)  * usable by a container. This field determines the resource to be applied for  * all the containers of a component or application. The resource specified at  * the app (or global) level can be overriden at the component level. Only one  * of profile OR cpu&amp; memory are exepected. It raises a validation  * exception otherwise.  **/
end_comment

begin_class
annotation|@
name|ApiModel
argument_list|(
name|description
operator|=
literal|"Resource determines the amount of resources (vcores, memory, network, etc.) usable by a container. This field determines the resource to be applied for all the containers of a component or application. The resource specified at the app (or global) level can be overriden at the component level. Only one of profile OR cpu& memory are exepected. It raises a validation exception otherwise."
argument_list|)
annotation|@
name|javax
operator|.
name|annotation
operator|.
name|Generated
argument_list|(
name|value
operator|=
literal|"class io.swagger.codegen.languages.JavaClientCodegen"
argument_list|,
name|date
operator|=
literal|"2016-06-02T08:15:05.615-07:00"
argument_list|)
DECL|class|Resource
specifier|public
class|class
name|Resource
extends|extends
name|BaseResource
implements|implements
name|Cloneable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|6431667797380250037L
decl_stmt|;
DECL|field|profile
specifier|private
name|String
name|profile
init|=
literal|null
decl_stmt|;
DECL|field|cpus
specifier|private
name|Integer
name|cpus
init|=
literal|null
decl_stmt|;
DECL|field|memory
specifier|private
name|String
name|memory
init|=
literal|null
decl_stmt|;
comment|/**    * Each resource profile has a unique id which is associated with a    * cluster-level predefined memory, cpus, etc.    **/
DECL|method|profile (String profile)
specifier|public
name|Resource
name|profile
parameter_list|(
name|String
name|profile
parameter_list|)
block|{
name|this
operator|.
name|profile
operator|=
name|profile
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|ApiModelProperty
argument_list|(
name|example
operator|=
literal|"null"
argument_list|,
name|value
operator|=
literal|"Each resource profile has a unique id which is associated with a cluster-level predefined memory, cpus, etc."
argument_list|)
annotation|@
name|JsonProperty
argument_list|(
literal|"profile"
argument_list|)
DECL|method|getProfile ()
specifier|public
name|String
name|getProfile
parameter_list|()
block|{
return|return
name|profile
return|;
block|}
DECL|method|setProfile (String profile)
specifier|public
name|void
name|setProfile
parameter_list|(
name|String
name|profile
parameter_list|)
block|{
name|this
operator|.
name|profile
operator|=
name|profile
expr_stmt|;
block|}
comment|/**    * Amount of vcores allocated to each container (optional but overrides cpus    * in profile if specified).    **/
DECL|method|cpus (Integer cpus)
specifier|public
name|Resource
name|cpus
parameter_list|(
name|Integer
name|cpus
parameter_list|)
block|{
name|this
operator|.
name|cpus
operator|=
name|cpus
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|ApiModelProperty
argument_list|(
name|example
operator|=
literal|"null"
argument_list|,
name|value
operator|=
literal|"Amount of vcores allocated to each container (optional but overrides cpus in profile if specified)."
argument_list|)
annotation|@
name|JsonProperty
argument_list|(
literal|"cpus"
argument_list|)
DECL|method|getCpus ()
specifier|public
name|Integer
name|getCpus
parameter_list|()
block|{
return|return
name|cpus
return|;
block|}
DECL|method|setCpus (Integer cpus)
specifier|public
name|void
name|setCpus
parameter_list|(
name|Integer
name|cpus
parameter_list|)
block|{
name|this
operator|.
name|cpus
operator|=
name|cpus
expr_stmt|;
block|}
comment|/**    * Amount of memory allocated to each container (optional but overrides memory    * in profile if specified). Currently accepts only an integer value and    * default unit is in MB.    **/
DECL|method|memory (String memory)
specifier|public
name|Resource
name|memory
parameter_list|(
name|String
name|memory
parameter_list|)
block|{
name|this
operator|.
name|memory
operator|=
name|memory
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|ApiModelProperty
argument_list|(
name|example
operator|=
literal|"null"
argument_list|,
name|value
operator|=
literal|"Amount of memory allocated to each container (optional but overrides memory in profile if specified). Currently accepts only an integer value and default unit is in MB."
argument_list|)
annotation|@
name|JsonProperty
argument_list|(
literal|"memory"
argument_list|)
DECL|method|getMemory ()
specifier|public
name|String
name|getMemory
parameter_list|()
block|{
return|return
name|memory
return|;
block|}
DECL|method|setMemory (String memory)
specifier|public
name|void
name|setMemory
parameter_list|(
name|String
name|memory
parameter_list|)
block|{
name|this
operator|.
name|memory
operator|=
name|memory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|equals (java.lang.Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Resource
name|resource
init|=
operator|(
name|Resource
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|this
operator|.
name|profile
argument_list|,
name|resource
operator|.
name|profile
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|this
operator|.
name|cpus
argument_list|,
name|resource
operator|.
name|cpus
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|this
operator|.
name|memory
argument_list|,
name|resource
operator|.
name|memory
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|profile
argument_list|,
name|cpus
argument_list|,
name|memory
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"class Resource {\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"    profile: "
argument_list|)
operator|.
name|append
argument_list|(
name|toIndentedString
argument_list|(
name|profile
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"    cpus: "
argument_list|)
operator|.
name|append
argument_list|(
name|toIndentedString
argument_list|(
name|cpus
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"    memory: "
argument_list|)
operator|.
name|append
argument_list|(
name|toIndentedString
argument_list|(
name|memory
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"}"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**    * Convert the given object to string with each line indented by 4 spaces    * (except the first line).    */
DECL|method|toIndentedString (java.lang.Object o)
specifier|private
name|String
name|toIndentedString
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|"null"
return|;
block|}
return|return
name|o
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"\n    "
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|clone ()
specifier|public
name|Object
name|clone
parameter_list|()
throws|throws
name|CloneNotSupportedException
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
block|}
end_class

end_unit

