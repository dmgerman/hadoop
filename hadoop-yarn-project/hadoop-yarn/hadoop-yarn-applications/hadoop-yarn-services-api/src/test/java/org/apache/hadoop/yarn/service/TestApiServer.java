begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.service
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Artifact
operator|.
name|TypeEnum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ServiceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ServiceStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|client
operator|.
name|ServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|webapp
operator|.
name|ApiServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Test case for ApiServer REST API.  *  */
end_comment

begin_class
DECL|class|TestApiServer
specifier|public
class|class
name|TestApiServer
block|{
DECL|field|apiServer
specifier|private
name|ApiServer
name|apiServer
decl_stmt|;
DECL|field|request
specifier|private
name|HttpServletRequest
name|request
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|request
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|ServiceClient
name|mockServerClient
init|=
operator|new
name|ServiceClientTest
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"yarn.api-service.service.client.class"
argument_list|,
name|ServiceClientTest
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|apiServer
operator|=
operator|new
name|ApiServer
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|apiServer
operator|.
name|setServiceClient
argument_list|(
name|mockServerClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPathAnnotation ()
specifier|public
name|void
name|testPathAnnotation
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|this
operator|.
name|apiServer
operator|.
name|getClass
argument_list|()
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"The controller has the annotation Path"
argument_list|,
name|this
operator|.
name|apiServer
operator|.
name|getClass
argument_list|()
operator|.
name|isAnnotationPresent
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|path
init|=
name|this
operator|.
name|apiServer
operator|.
name|getClass
argument_list|()
operator|.
name|getAnnotation
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"The path has /v1 annotation"
argument_list|,
name|path
operator|.
name|value
argument_list|()
argument_list|,
literal|"/v1"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetVersion ()
specifier|public
name|void
name|testGetVersion
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|getVersion
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Version number is"
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadCreateService ()
specifier|public
name|void
name|testBadCreateService
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
comment|// Test for invalid argument
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|createService
argument_list|(
name|request
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Create service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGoodCreateService ()
specifier|public
name|void
name|testGoodCreateService
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|createService
argument_list|(
name|request
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Create service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|ACCEPTED
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadGetService ()
specifier|public
name|void
name|testBadGetService
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|getService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadGetService2 ()
specifier|public
name|void
name|testBadGetService2
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|getService
argument_list|(
name|request
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGoodGetService ()
specifier|public
name|void
name|testGoodGetService
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|getService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Get service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadDeleteService ()
specifier|public
name|void
name|testBadDeleteService
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|deleteService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Delete service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadDeleteService2 ()
specifier|public
name|void
name|testBadDeleteService2
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|deleteService
argument_list|(
name|request
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Delete service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGoodDeleteService ()
specifier|public
name|void
name|testGoodDeleteService
parameter_list|()
block|{
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|deleteService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Delete service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDecreaseContainerAndStop ()
specifier|public
name|void
name|testDecreaseContainerAndStop
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STOPPED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"update service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadDecreaseContainerAndStop ()
specifier|public
name|void
name|testBadDecreaseContainerAndStop
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STOPPED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"before stop"
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"flex service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIncreaseContainersAndStart ()
specifier|public
name|void
name|testIncreaseContainersAndStart
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"flex service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadStartServices ()
specifier|public
name|void
name|testBadStartServices
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"start service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGoodStartServices ()
specifier|public
name|void
name|testGoodStartServices
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"start service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBadStopServices ()
specifier|public
name|void
name|testBadStopServices
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STOPPED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"before stop"
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"stop service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGoodStopServices ()
specifier|public
name|void
name|testGoodStopServices
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"before stop"
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"stop service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateService ()
specifier|public
name|void
name|testUpdateService
parameter_list|()
block|{
name|Service
name|service
init|=
operator|new
name|Service
argument_list|()
decl_stmt|;
name|service
operator|.
name|setState
argument_list|(
name|ServiceState
operator|.
name|STARTED
argument_list|)
expr_stmt|;
name|service
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|Artifact
argument_list|()
decl_stmt|;
name|artifact
operator|.
name|setType
argument_list|(
name|TypeEnum
operator|.
name|DOCKER
argument_list|)
expr_stmt|;
name|artifact
operator|.
name|setId
argument_list|(
literal|"jenkins:latest"
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setCpus
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setMemory
argument_list|(
literal|"2048"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|Component
argument_list|>
argument_list|()
decl_stmt|;
name|Component
name|c
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|c
operator|.
name|setName
argument_list|(
literal|"no-jenkins"
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNumberOfContainers
argument_list|(
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|c
operator|.
name|setArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLaunchCommand
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|c
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|service
operator|.
name|setComponents
argument_list|(
name|components
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"before stop"
argument_list|)
expr_stmt|;
specifier|final
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateService
argument_list|(
name|request
argument_list|,
literal|"no-jenkins"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"update service is "
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateComponent ()
specifier|public
name|void
name|testUpdateComponent
parameter_list|()
block|{
name|Response
name|actual
init|=
name|apiServer
operator|.
name|updateComponent
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
literal|"jenkins-master"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ServiceStatus
name|serviceStatus
init|=
operator|(
name|ServiceStatus
operator|)
name|actual
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with 400 bad request"
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with no data error"
argument_list|,
literal|"No component data provided"
argument_list|,
name|serviceStatus
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|Component
name|comp
init|=
operator|new
name|Component
argument_list|()
decl_stmt|;
name|actual
operator|=
name|apiServer
operator|.
name|updateComponent
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
literal|"jenkins-master"
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|serviceStatus
operator|=
operator|(
name|ServiceStatus
operator|)
name|actual
operator|.
name|getEntity
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with 400 bad request"
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with no count error"
argument_list|,
literal|"No container count provided"
argument_list|,
name|serviceStatus
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setNumberOfContainers
argument_list|(
operator|-
literal|1L
argument_list|)
expr_stmt|;
name|actual
operator|=
name|apiServer
operator|.
name|updateComponent
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
literal|"jenkins-master"
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|serviceStatus
operator|=
operator|(
name|ServiceStatus
operator|)
name|actual
operator|.
name|getEntity
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with 400 bad request"
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with no count error"
argument_list|,
literal|"Invalid number of containers specified -1"
argument_list|,
name|serviceStatus
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setName
argument_list|(
literal|"jenkins-slave"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setNumberOfContainers
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|actual
operator|=
name|apiServer
operator|.
name|updateComponent
argument_list|(
name|request
argument_list|,
literal|"jenkins"
argument_list|,
literal|"jenkins-master"
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|serviceStatus
operator|=
operator|(
name|ServiceStatus
operator|)
name|actual
operator|.
name|getEntity
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with 400 bad request"
argument_list|,
name|Response
operator|.
name|status
argument_list|(
name|Status
operator|.
name|BAD_REQUEST
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|,
name|actual
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update component should have failed with component name mismatch "
operator|+
literal|"error"
argument_list|,
literal|"Component name in the request object (jenkins-slave) does not match "
operator|+
literal|"that in the URI path (jenkins-master)"
argument_list|,
name|serviceStatus
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

