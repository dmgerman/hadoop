begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|AHSClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineReaderClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|timeline
operator|.
name|TimelineEntityV2Converter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * This class provides Application History client implementation which uses  * ATS v2 as backend.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|AHSv2ClientImpl
specifier|public
class|class
name|AHSv2ClientImpl
extends|extends
name|AHSClient
block|{
DECL|field|readerClient
specifier|private
name|TimelineReaderClient
name|readerClient
decl_stmt|;
DECL|field|logServerUrl
specifier|private
name|String
name|logServerUrl
decl_stmt|;
DECL|method|AHSv2ClientImpl ()
specifier|public
name|AHSv2ClientImpl
parameter_list|()
block|{
name|super
argument_list|(
name|AHSv2ClientImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceInit (Configuration conf)
specifier|public
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|logServerUrl
operator|=
name|conf
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_LOG_SERVER_URL
argument_list|)
expr_stmt|;
name|readerClient
operator|=
name|TimelineReaderClient
operator|.
name|createTimelineReaderClient
argument_list|()
expr_stmt|;
name|readerClient
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setReaderClient (TimelineReaderClient readerClient)
specifier|protected
name|void
name|setReaderClient
parameter_list|(
name|TimelineReaderClient
name|readerClient
parameter_list|)
block|{
name|this
operator|.
name|readerClient
operator|=
name|readerClient
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStart ()
specifier|public
name|void
name|serviceStart
parameter_list|()
block|{
name|readerClient
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serviceStop ()
specifier|public
name|void
name|serviceStop
parameter_list|()
block|{
name|readerClient
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport (ApplicationId appId)
specifier|public
name|ApplicationReport
name|getApplicationReport
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|TimelineEntity
name|entity
init|=
name|readerClient
operator|.
name|getApplicationEntity
argument_list|(
name|appId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|TimelineEntityV2Converter
operator|.
name|convertToApplicationReport
argument_list|(
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplications ()
specifier|public
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|getApplications
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"ATSv2.0 doesn't support retrieving"
operator|+
literal|" ALL application entities."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptReport ( ApplicationAttemptId applicationAttemptId)
specifier|public
name|ApplicationAttemptReport
name|getApplicationAttemptReport
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|TimelineEntity
name|entity
init|=
name|readerClient
operator|.
name|getApplicationAttemptEntity
argument_list|(
name|applicationAttemptId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|TimelineEntityV2Converter
operator|.
name|convertToApplicationAttemptReport
argument_list|(
name|entity
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttempts ( ApplicationId applicationId)
specifier|public
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|getApplicationAttempts
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|readerClient
operator|.
name|getApplicationAttemptEntities
argument_list|(
name|applicationId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|appAttemptReports
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
operator|&&
operator|!
name|entities
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|entities
control|)
block|{
name|ApplicationAttemptReport
name|container
init|=
name|TimelineEntityV2Converter
operator|.
name|convertToApplicationAttemptReport
argument_list|(
name|entity
argument_list|)
decl_stmt|;
name|appAttemptReports
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|appAttemptReports
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerReport (ContainerId containerId)
specifier|public
name|ContainerReport
name|getContainerReport
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|ApplicationReport
name|appReport
init|=
name|getApplicationReport
argument_list|(
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|getApplicationId
argument_list|()
argument_list|)
decl_stmt|;
name|TimelineEntity
name|entity
init|=
name|readerClient
operator|.
name|getContainerEntity
argument_list|(
name|containerId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|TimelineEntityV2Converter
operator|.
name|convertToContainerReport
argument_list|(
name|entity
argument_list|,
name|logServerUrl
argument_list|,
name|appReport
operator|.
name|getUser
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainers (ApplicationAttemptId applicationAttemptId)
specifier|public
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|getContainers
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|ApplicationId
name|appId
init|=
name|applicationAttemptId
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|ApplicationReport
name|appReport
init|=
name|getApplicationReport
argument_list|(
name|appId
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|filters
operator|.
name|put
argument_list|(
literal|"infofilters"
argument_list|,
literal|"SYSTEM_INFO_PARENT_ENTITY eq {\"id\":\""
operator|+
name|applicationAttemptId
operator|.
name|toString
argument_list|()
operator|+
literal|"\",\"type\":\"YARN_APPLICATION_ATTEMPT\"}"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|TimelineEntity
argument_list|>
name|entities
init|=
name|readerClient
operator|.
name|getContainerEntities
argument_list|(
name|appId
argument_list|,
literal|"ALL"
argument_list|,
name|filters
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|containers
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
operator|&&
operator|!
name|entities
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|TimelineEntity
name|entity
range|:
name|entities
control|)
block|{
name|ContainerReport
name|container
init|=
name|TimelineEntityV2Converter
operator|.
name|convertToContainerReport
argument_list|(
name|entity
argument_list|,
name|logServerUrl
argument_list|,
name|appReport
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
name|containers
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|containers
return|;
block|}
block|}
end_class

end_unit

