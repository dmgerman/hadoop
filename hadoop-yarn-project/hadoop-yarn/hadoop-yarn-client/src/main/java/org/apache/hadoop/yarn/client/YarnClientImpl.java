begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ClientRMProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|DelegationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueUserACLInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnRemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|YarnClientImpl
specifier|public
class|class
name|YarnClientImpl
extends|extends
name|AbstractService
implements|implements
name|YarnClient
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|YarnClientImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|rmClient
specifier|protected
name|ClientRMProtocol
name|rmClient
decl_stmt|;
DECL|field|rmAddress
specifier|protected
name|InetSocketAddress
name|rmAddress
decl_stmt|;
DECL|field|ROOT
specifier|private
specifier|static
specifier|final
name|String
name|ROOT
init|=
literal|"root"
decl_stmt|;
DECL|method|YarnClientImpl ()
specifier|public
name|YarnClientImpl
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|YarnClientImpl (InetSocketAddress rmAddress)
specifier|public
name|YarnClientImpl
parameter_list|(
name|InetSocketAddress
name|rmAddress
parameter_list|)
block|{
name|super
argument_list|(
name|YarnClientImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|rmAddress
operator|=
name|rmAddress
expr_stmt|;
block|}
DECL|method|getRmAddress (Configuration conf)
specifier|private
specifier|static
name|InetSocketAddress
name|getRmAddress
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getSocketAddr
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_ADDRESS
argument_list|,
name|YarnConfiguration
operator|.
name|DEFAULT_RM_PORT
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf)
specifier|public
specifier|synchronized
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|rmAddress
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|rmAddress
operator|=
name|getRmAddress
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
specifier|synchronized
name|void
name|start
parameter_list|()
block|{
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
name|getConfig
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|rmClient
operator|=
operator|(
name|ClientRMProtocol
operator|)
name|rpc
operator|.
name|getProxy
argument_list|(
name|ClientRMProtocol
operator|.
name|class
argument_list|,
name|rmAddress
argument_list|,
name|getConfig
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Connecting to ResourceManager at "
operator|+
name|rmAddress
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
specifier|synchronized
name|void
name|stop
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|rmClient
operator|!=
literal|null
condition|)
block|{
name|RPC
operator|.
name|stopProxy
argument_list|(
name|this
operator|.
name|rmClient
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNewApplication ()
specifier|public
name|GetNewApplicationResponse
name|getNewApplication
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|GetNewApplicationRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetNewApplicationRequest
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|rmClient
operator|.
name|getNewApplication
argument_list|(
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ApplicationId
DECL|method|submitApplication (ApplicationSubmissionContext appContext)
name|submitApplication
parameter_list|(
name|ApplicationSubmissionContext
name|appContext
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|ApplicationId
name|applicationId
init|=
name|appContext
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|appContext
operator|.
name|setApplicationId
argument_list|(
name|applicationId
argument_list|)
expr_stmt|;
name|SubmitApplicationRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|SubmitApplicationRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setApplicationSubmissionContext
argument_list|(
name|appContext
argument_list|)
expr_stmt|;
name|rmClient
operator|.
name|submitApplication
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Submitted application "
operator|+
name|applicationId
operator|+
literal|" to ResourceManager"
operator|+
literal|" at "
operator|+
name|rmAddress
argument_list|)
expr_stmt|;
return|return
name|applicationId
return|;
block|}
annotation|@
name|Override
DECL|method|killApplication (ApplicationId applicationId)
specifier|public
name|void
name|killApplication
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Killing application "
operator|+
name|applicationId
argument_list|)
expr_stmt|;
name|KillApplicationRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|KillApplicationRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setApplicationId
argument_list|(
name|applicationId
argument_list|)
expr_stmt|;
name|rmClient
operator|.
name|forceKillApplication
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport (ApplicationId appId)
specifier|public
name|ApplicationReport
name|getApplicationReport
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|GetApplicationReportRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetApplicationReportRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setApplicationId
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|GetApplicationReportResponse
name|response
init|=
name|rmClient
operator|.
name|getApplicationReport
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getApplicationReport
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationList ()
specifier|public
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|getApplicationList
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|GetAllApplicationsRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetAllApplicationsRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|GetAllApplicationsResponse
name|response
init|=
name|rmClient
operator|.
name|getAllApplications
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getApplicationList
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getYarnClusterMetrics ()
specifier|public
name|YarnClusterMetrics
name|getYarnClusterMetrics
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|GetClusterMetricsRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetClusterMetricsRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|GetClusterMetricsResponse
name|response
init|=
name|rmClient
operator|.
name|getClusterMetrics
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getClusterMetrics
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getNodeReports ()
specifier|public
name|List
argument_list|<
name|NodeReport
argument_list|>
name|getNodeReports
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|GetClusterNodesRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetClusterNodesRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|GetClusterNodesResponse
name|response
init|=
name|rmClient
operator|.
name|getClusterNodes
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getNodeReports
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getRMDelegationToken (Text renewer)
specifier|public
name|DelegationToken
name|getRMDelegationToken
parameter_list|(
name|Text
name|renewer
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
comment|/* get the token from RM */
name|GetDelegationTokenRequest
name|rmDTRequest
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|rmDTRequest
operator|.
name|setRenewer
argument_list|(
name|renewer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|GetDelegationTokenResponse
name|response
init|=
name|rmClient
operator|.
name|getDelegationToken
argument_list|(
name|rmDTRequest
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getRMDelegationToken
argument_list|()
return|;
block|}
comment|// Not part of YarnClient itself. Placed in YarnClientImpl while renew/cancel
comment|// are part of ClientRMProtocol.
annotation|@
name|Private
DECL|method|renewRMDelegationToken (DelegationToken rmToken)
specifier|public
name|long
name|renewRMDelegationToken
parameter_list|(
name|DelegationToken
name|rmToken
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|RenewDelegationTokenRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|RenewDelegationTokenRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setDelegationToken
argument_list|(
name|rmToken
argument_list|)
expr_stmt|;
name|RenewDelegationTokenResponse
name|response
init|=
name|rmClient
operator|.
name|renewDelegationToken
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
name|response
operator|.
name|getNextExpirationTime
argument_list|()
return|;
block|}
comment|// Not part of YarnClient itself. Placed in YarnClientImpl while renew/cancel
comment|// are part of ClietnRMProtocol
annotation|@
name|Private
DECL|method|cancelRMDelegationToken (DelegationToken rmToken)
specifier|public
name|void
name|cancelRMDelegationToken
parameter_list|(
name|DelegationToken
name|rmToken
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|CancelDelegationTokenRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|CancelDelegationTokenRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setDelegationToken
argument_list|(
name|rmToken
argument_list|)
expr_stmt|;
name|rmClient
operator|.
name|cancelDelegationToken
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|private
name|GetQueueInfoRequest
DECL|method|getQueueInfoRequest (String queueName, boolean includeApplications, boolean includeChildQueues, boolean recursive)
name|getQueueInfoRequest
parameter_list|(
name|String
name|queueName
parameter_list|,
name|boolean
name|includeApplications
parameter_list|,
name|boolean
name|includeChildQueues
parameter_list|,
name|boolean
name|recursive
parameter_list|)
block|{
name|GetQueueInfoRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetQueueInfoRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setQueueName
argument_list|(
name|queueName
argument_list|)
expr_stmt|;
name|request
operator|.
name|setIncludeApplications
argument_list|(
name|includeApplications
argument_list|)
expr_stmt|;
name|request
operator|.
name|setIncludeChildQueues
argument_list|(
name|includeChildQueues
argument_list|)
expr_stmt|;
name|request
operator|.
name|setRecursive
argument_list|(
name|recursive
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueInfo (String queueName)
specifier|public
name|QueueInfo
name|getQueueInfo
parameter_list|(
name|String
name|queueName
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|GetQueueInfoRequest
name|request
init|=
name|getQueueInfoRequest
argument_list|(
name|queueName
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Records
operator|.
name|newRecord
argument_list|(
name|GetQueueInfoRequest
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
name|rmClient
operator|.
name|getQueueInfo
argument_list|(
name|request
argument_list|)
operator|.
name|getQueueInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueAclsInfo ()
specifier|public
name|List
argument_list|<
name|QueueUserACLInfo
argument_list|>
name|getQueueAclsInfo
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|GetQueueUserAclsInfoRequest
name|request
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetQueueUserAclsInfoRequest
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|rmClient
operator|.
name|getQueueUserAcls
argument_list|(
name|request
argument_list|)
operator|.
name|getUserAclsInfoList
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getAllQueues ()
specifier|public
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|getAllQueues
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|queues
init|=
operator|new
name|ArrayList
argument_list|<
name|QueueInfo
argument_list|>
argument_list|()
decl_stmt|;
name|QueueInfo
name|rootQueue
init|=
name|rmClient
operator|.
name|getQueueInfo
argument_list|(
name|getQueueInfoRequest
argument_list|(
name|ROOT
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|getQueueInfo
argument_list|()
decl_stmt|;
name|getChildQueues
argument_list|(
name|rootQueue
argument_list|,
name|queues
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|queues
return|;
block|}
annotation|@
name|Override
DECL|method|getRootQueueInfos ()
specifier|public
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|getRootQueueInfos
parameter_list|()
throws|throws
name|YarnRemoteException
block|{
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|queues
init|=
operator|new
name|ArrayList
argument_list|<
name|QueueInfo
argument_list|>
argument_list|()
decl_stmt|;
name|QueueInfo
name|rootQueue
init|=
name|rmClient
operator|.
name|getQueueInfo
argument_list|(
name|getQueueInfoRequest
argument_list|(
name|ROOT
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|getQueueInfo
argument_list|()
decl_stmt|;
name|getChildQueues
argument_list|(
name|rootQueue
argument_list|,
name|queues
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|queues
return|;
block|}
annotation|@
name|Override
DECL|method|getChildQueueInfos (String parent)
specifier|public
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|getChildQueueInfos
parameter_list|(
name|String
name|parent
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|queues
init|=
operator|new
name|ArrayList
argument_list|<
name|QueueInfo
argument_list|>
argument_list|()
decl_stmt|;
name|QueueInfo
name|parentQueue
init|=
name|rmClient
operator|.
name|getQueueInfo
argument_list|(
name|getQueueInfoRequest
argument_list|(
name|parent
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|getQueueInfo
argument_list|()
decl_stmt|;
name|getChildQueues
argument_list|(
name|parentQueue
argument_list|,
name|queues
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|queues
return|;
block|}
DECL|method|getChildQueues (QueueInfo parent, List<QueueInfo> queues, boolean recursive)
specifier|private
name|void
name|getChildQueues
parameter_list|(
name|QueueInfo
name|parent
parameter_list|,
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|queues
parameter_list|,
name|boolean
name|recursive
parameter_list|)
block|{
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|childQueues
init|=
name|parent
operator|.
name|getChildQueues
argument_list|()
decl_stmt|;
for|for
control|(
name|QueueInfo
name|child
range|:
name|childQueues
control|)
block|{
name|queues
operator|.
name|add
argument_list|(
name|child
argument_list|)
expr_stmt|;
if|if
condition|(
name|recursive
condition|)
block|{
name|getChildQueues
argument_list|(
name|child
argument_list|,
name|queues
argument_list|,
name|recursive
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

