begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationDeleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationListResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationUpdateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequestInterpreter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ReservationRequests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|YarnClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|MiniYARNCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|reservation
operator|.
name|ReservationSystemTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|QueueMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacityScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|CapacitySchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairScheduler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fair
operator|.
name|FairSchedulerConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Clock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|UTCClock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * This class is to test class {@link YarnClient) and {@link YarnClientImpl}  * with Reservation.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|TestYarnClientWithReservation
specifier|public
class|class
name|TestYarnClientWithReservation
block|{
DECL|field|TEST_DIR
specifier|protected
specifier|final
specifier|static
name|String
name|TEST_DIR
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.build.data"
argument_list|,
literal|"/tmp"
argument_list|)
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|field|FS_ALLOC_FILE
specifier|protected
specifier|final
specifier|static
name|String
name|FS_ALLOC_FILE
init|=
operator|new
name|File
argument_list|(
name|TEST_DIR
argument_list|,
literal|"test-fs-queues.xml"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|enum|SchedulerType
specifier|public
enum|enum
name|SchedulerType
block|{
DECL|enumConstant|CAPACITY
DECL|enumConstant|FAIR
name|CAPACITY
block|,
name|FAIR
block|}
DECL|field|schedulerType
specifier|private
name|SchedulerType
name|schedulerType
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
DECL|method|getParameters ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|getParameters
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|stream
argument_list|(
name|SchedulerType
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|map
argument_list|(
name|type
lambda|->
operator|new
name|Object
index|[]
block|{
name|type
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
DECL|method|TestYarnClientWithReservation (SchedulerType scheduler)
specifier|public
name|TestYarnClientWithReservation
parameter_list|(
name|SchedulerType
name|scheduler
parameter_list|)
block|{
name|this
operator|.
name|schedulerType
operator|=
name|scheduler
expr_stmt|;
block|}
DECL|method|setupMiniYARNCluster ()
specifier|private
name|MiniYARNCluster
name|setupMiniYARNCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
operator|new
name|MiniYARNCluster
argument_list|(
literal|"testReservationAPIs"
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|cluster
operator|.
name|init
argument_list|(
name|getConfigurationForReservation
argument_list|()
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|start
argument_list|()
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
operator|new
name|Supplier
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|get
parameter_list|()
block|{
return|return
name|cluster
operator|.
name|getResourceManager
argument_list|()
operator|.
name|getRMContext
argument_list|()
operator|.
name|getReservationSystem
argument_list|()
operator|.
name|getPlan
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|)
operator|.
name|getTotalCapacity
argument_list|()
operator|.
name|getMemorySize
argument_list|()
operator|>
literal|6000
return|;
block|}
block|}
argument_list|,
literal|10
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
return|return
name|cluster
return|;
block|}
DECL|method|getConfigurationForReservation ()
specifier|private
name|Configuration
name|getConfigurationForReservation
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
if|if
condition|(
name|schedulerType
operator|==
name|SchedulerType
operator|.
name|FAIR
condition|)
block|{
name|conf
operator|=
name|configureReservationForFairScheduler
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|FairScheduler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|schedulerType
operator|==
name|SchedulerType
operator|.
name|CAPACITY
condition|)
block|{
name|conf
operator|=
name|configureReservationForCapacityScheduler
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_SCHEDULER
argument_list|,
name|CapacityScheduler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_RESERVATION_SYSTEM_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
DECL|method|configureReservationForCapacityScheduler ()
specifier|private
name|Configuration
name|configureReservationForCapacityScheduler
parameter_list|()
block|{
name|CapacitySchedulerConfiguration
name|conf
init|=
operator|new
name|CapacitySchedulerConfiguration
argument_list|()
decl_stmt|;
name|ReservationSystemTestUtil
operator|.
name|setupQueueConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
DECL|method|configureReservationForFairScheduler ()
specifier|private
name|Configuration
name|configureReservationForFairScheduler
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
try|try
block|{
name|PrintWriter
name|out
init|=
operator|new
name|PrintWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|FS_ALLOC_FILE
argument_list|)
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<?xml version=\"1.0\"?>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<allocations>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<queue name=\"root\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<queue name=\"default\"></queue>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<queue name=\"dedicated\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<reservation></reservation>"
argument_list|)
expr_stmt|;
comment|// set weight to 10 to make sure this queue get enough steady fair share
name|out
operator|.
name|println
argument_list|(
literal|"<weight>10</weight>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</queue>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</queue>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<defaultQueueSchedulingPolicy>drf"
operator|+
literal|"</defaultQueueSchedulingPolicy>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</allocations>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|conf
operator|.
name|set
argument_list|(
name|FairSchedulerConfiguration
operator|.
name|ALLOCATION_FILE
argument_list|,
name|FS_ALLOC_FILE
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
DECL|method|setupYarnClient (MiniYARNCluster cluster)
specifier|private
name|YarnClient
name|setupYarnClient
parameter_list|(
name|MiniYARNCluster
name|cluster
parameter_list|)
block|{
specifier|final
name|Configuration
name|yarnConf
init|=
name|cluster
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|YarnClient
operator|.
name|createYarnClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|yarnConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|client
return|;
block|}
DECL|method|submitReservationTestHelper ( YarnClient client, long arrival, long deadline, long duration)
specifier|private
name|ReservationSubmissionRequest
name|submitReservationTestHelper
parameter_list|(
name|YarnClient
name|client
parameter_list|,
name|long
name|arrival
parameter_list|,
name|long
name|deadline
parameter_list|,
name|long
name|duration
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|ReservationId
name|reservationID
init|=
name|client
operator|.
name|createReservation
argument_list|()
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|createSimpleReservationRequest
argument_list|(
name|reservationID
argument_list|,
literal|4
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionResponse
name|sResponse
init|=
name|client
operator|.
name|submitReservation
argument_list|(
name|sRequest
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|sResponse
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reservationID
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Submit reservation response: "
operator|+
name|reservationID
argument_list|)
expr_stmt|;
return|return
name|sRequest
return|;
block|}
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|QueueMetrics
operator|.
name|clearQueueMetrics
argument_list|()
expr_stmt|;
name|DefaultMetricsSystem
operator|.
name|setMiniClusterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateReservation ()
specifier|public
name|void
name|testCreateReservation
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
comment|// Submit the reservation again with the same request and make sure it
comment|// passes.
name|client
operator|.
name|submitReservation
argument_list|(
name|sRequest
argument_list|)
expr_stmt|;
comment|// Submit the reservation with the same reservation id but different
comment|// reservation definition, and ensure YarnException is thrown.
name|arrival
operator|=
name|clock
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|sRequest
operator|.
name|getReservationDefinition
argument_list|()
decl_stmt|;
name|rDef
operator|.
name|setArrival
argument_list|(
name|arrival
operator|+
name|duration
argument_list|)
expr_stmt|;
name|sRequest
operator|.
name|setReservationDefinition
argument_list|(
name|rDef
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|submitReservation
argument_list|(
name|sRequest
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Reservation submission should fail if a duplicate "
operator|+
literal|"reservation id is used, but the reservation definition has been "
operator|+
literal|"updated."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|instanceof
name|YarnException
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUpdateReservation ()
specifier|public
name|void
name|testUpdateReservation
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|sRequest
operator|.
name|getReservationDefinition
argument_list|()
decl_stmt|;
name|ReservationRequest
name|rr
init|=
name|rDef
operator|.
name|getReservationRequests
argument_list|()
operator|.
name|getReservationResources
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|sRequest
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|rr
operator|.
name|setNumContainers
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|arrival
operator|=
name|clock
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|duration
operator|=
literal|30000
expr_stmt|;
name|deadline
operator|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
expr_stmt|;
name|rr
operator|.
name|setDuration
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|rDef
operator|.
name|setArrival
argument_list|(
name|arrival
argument_list|)
expr_stmt|;
name|rDef
operator|.
name|setDeadline
argument_list|(
name|deadline
argument_list|)
expr_stmt|;
name|ReservationUpdateRequest
name|uRequest
init|=
name|ReservationUpdateRequest
operator|.
name|newInstance
argument_list|(
name|rDef
argument_list|,
name|reservationID
argument_list|)
decl_stmt|;
name|ReservationUpdateResponse
name|uResponse
init|=
name|client
operator|.
name|updateReservation
argument_list|(
name|uRequest
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|uResponse
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Update reservation response: "
operator|+
name|uResponse
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|createSimpleReservationRequest ( ReservationId reservationId, int numContainers, long arrival, long deadline, long duration)
specifier|private
name|ReservationSubmissionRequest
name|createSimpleReservationRequest
parameter_list|(
name|ReservationId
name|reservationId
parameter_list|,
name|int
name|numContainers
parameter_list|,
name|long
name|arrival
parameter_list|,
name|long
name|deadline
parameter_list|,
name|long
name|duration
parameter_list|)
block|{
comment|// create a request with a single atomic ask
name|ReservationRequest
name|r
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|Resource
operator|.
name|newInstance
argument_list|(
literal|1024
argument_list|,
literal|1
argument_list|)
argument_list|,
name|numContainers
argument_list|,
literal|1
argument_list|,
name|duration
argument_list|)
decl_stmt|;
name|ReservationRequests
name|reqs
init|=
name|ReservationRequests
operator|.
name|newInstance
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|r
argument_list|)
argument_list|,
name|ReservationRequestInterpreter
operator|.
name|R_ALL
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|rDef
init|=
name|ReservationDefinition
operator|.
name|newInstance
argument_list|(
name|arrival
argument_list|,
name|deadline
argument_list|,
name|reqs
argument_list|,
literal|"testYarnClient#reservation"
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|request
init|=
name|ReservationSubmissionRequest
operator|.
name|newInstance
argument_list|(
name|rDef
argument_list|,
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
name|reservationId
argument_list|)
decl_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Test
DECL|method|testListReservationsByReservationId ()
specifier|public
name|void
name|testListReservationsByReservationId
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|sRequest
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|ReservationListRequest
name|request
init|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
name|reservationID
operator|.
name|toString
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationListResponse
name|response
init|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|reservationID
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getResourceAllocationRequests
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testListReservationsByTimeInterval ()
specifier|public
name|void
name|testListReservationsByTimeInterval
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
comment|// List reservations, search by a point in time within the reservation
comment|// range.
name|arrival
operator|=
name|clock
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|ReservationId
name|reservationID
init|=
name|sRequest
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
name|ReservationListRequest
name|request
init|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
name|arrival
operator|+
name|duration
operator|/
literal|2
argument_list|,
name|arrival
operator|+
name|duration
operator|/
literal|2
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationListResponse
name|response
init|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|reservationID
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// List reservations, search by time within reservation interval.
name|request
operator|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
literal|1
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|reservationID
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify that the full resource allocations exist.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getResourceAllocationRequests
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Verify that the full RDL is returned.
name|ReservationRequests
name|reservationRequests
init|=
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationDefinition
argument_list|()
operator|.
name|getReservationRequests
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"R_ALL"
argument_list|,
name|reservationRequests
operator|.
name|getInterpreter
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|reservationRequests
operator|.
name|getReservationResources
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDuration
argument_list|()
operator|==
name|duration
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testListReservationsByInvalidTimeInterval ()
specifier|public
name|void
name|testListReservationsByInvalidTimeInterval
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
comment|// List reservations, search by invalid end time == -1.
name|ReservationListRequest
name|request
init|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ReservationListResponse
name|response
init|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|sRequest
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// List reservations, search by invalid end time< -1.
name|request
operator|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
literal|1
argument_list|,
operator|-
literal|10
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|sRequest
operator|.
name|getReservationId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testListReservationsByTimeIntervalContainingNoReservations ()
specifier|public
name|void
name|testListReservationsByTimeIntervalContainingNoReservations
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
comment|// List reservations, search by very large start time.
name|ReservationListRequest
name|request
init|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationListResponse
name|response
init|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
decl_stmt|;
comment|// Ensure all reservations are filtered out.
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|duration
operator|=
literal|30000
expr_stmt|;
name|deadline
operator|=
name|sRequest
operator|.
name|getReservationDefinition
argument_list|()
operator|.
name|getDeadline
argument_list|()
expr_stmt|;
comment|// List reservations, search by start time after the reservation
comment|// end time.
name|request
operator|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
name|deadline
operator|+
name|duration
argument_list|,
name|deadline
operator|+
literal|2
operator|*
name|duration
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
expr_stmt|;
comment|// Ensure all reservations are filtered out.
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|arrival
operator|=
name|clock
operator|.
name|getTime
argument_list|()
expr_stmt|;
comment|// List reservations, search by end time before the reservation start
comment|// time.
name|request
operator|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|,
name|arrival
operator|-
name|duration
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
expr_stmt|;
comment|// Ensure all reservations are filtered out.
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// List reservations, search by very small end time.
name|request
operator|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
expr_stmt|;
comment|// Ensure all reservations are filtered out.
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testReservationDelete ()
specifier|public
name|void
name|testReservationDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniYARNCluster
name|cluster
init|=
name|setupMiniYARNCluster
argument_list|()
decl_stmt|;
name|YarnClient
name|client
init|=
name|setupYarnClient
argument_list|(
name|cluster
argument_list|)
decl_stmt|;
try|try
block|{
name|Clock
name|clock
init|=
operator|new
name|UTCClock
argument_list|()
decl_stmt|;
name|long
name|arrival
init|=
name|clock
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|long
name|duration
init|=
literal|60000
decl_stmt|;
name|long
name|deadline
init|=
call|(
name|long
call|)
argument_list|(
name|arrival
operator|+
literal|1.05
operator|*
name|duration
argument_list|)
decl_stmt|;
name|ReservationSubmissionRequest
name|sRequest
init|=
name|submitReservationTestHelper
argument_list|(
name|client
argument_list|,
name|arrival
argument_list|,
name|deadline
argument_list|,
name|duration
argument_list|)
decl_stmt|;
name|ReservationId
name|reservationID
init|=
name|sRequest
operator|.
name|getReservationId
argument_list|()
decl_stmt|;
comment|// Delete the reservation
name|ReservationDeleteRequest
name|dRequest
init|=
name|ReservationDeleteRequest
operator|.
name|newInstance
argument_list|(
name|reservationID
argument_list|)
decl_stmt|;
name|ReservationDeleteResponse
name|dResponse
init|=
name|client
operator|.
name|deleteReservation
argument_list|(
name|dRequest
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|dResponse
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Delete reservation response: "
operator|+
name|dResponse
argument_list|)
expr_stmt|;
comment|// List reservations, search by non-existent reservationID
name|ReservationListRequest
name|request
init|=
name|ReservationListRequest
operator|.
name|newInstance
argument_list|(
name|ReservationSystemTestUtil
operator|.
name|reservationQ
argument_list|,
name|reservationID
operator|.
name|toString
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ReservationListResponse
name|response
init|=
name|client
operator|.
name|listReservations
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|response
operator|.
name|getReservationAllocationState
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// clean-up
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

