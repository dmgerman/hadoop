begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timelineservice
operator|.
name|TimelineEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|TimelineReaderClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|AppAttemptMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ApplicationMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|metrics
operator|.
name|ContainerMetricsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * This class is to test class {@link AHSv2ClientImpl).  */
end_comment

begin_class
DECL|class|TestAHSv2ClientImpl
specifier|public
class|class
name|TestAHSv2ClientImpl
block|{
DECL|field|client
specifier|private
name|AHSv2ClientImpl
name|client
decl_stmt|;
DECL|field|spyTimelineReaderClient
specifier|private
name|TimelineReaderClient
name|spyTimelineReaderClient
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setFloat
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_VERSION
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|AHSv2ClientImpl
argument_list|()
expr_stmt|;
name|spyTimelineReaderClient
operator|=
name|mock
argument_list|(
name|TimelineReaderClient
operator|.
name|class
argument_list|)
expr_stmt|;
name|client
operator|.
name|setReaderClient
argument_list|(
name|spyTimelineReaderClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetContainerReport ()
specifier|public
name|void
name|testGetContainerReport
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
specifier|final
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|spyTimelineReaderClient
operator|.
name|getContainerEntity
argument_list|(
name|containerId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createContainerEntity
argument_list|(
name|containerId
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerReport
name|report
init|=
name|client
operator|.
name|getContainerReport
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getContainerId
argument_list|()
argument_list|,
name|containerId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getAssignedNode
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|,
literal|"test host"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getAssignedNode
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getAllocatedResource
argument_list|()
operator|.
name|getVirtualCores
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAppAttemptReport ()
specifier|public
name|void
name|testGetAppAttemptReport
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
specifier|final
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|spyTimelineReaderClient
operator|.
name|getApplicationAttemptEntity
argument_list|(
name|appAttemptId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createAppAttemptTimelineEntity
argument_list|(
name|appAttemptId
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationAttemptReport
name|report
init|=
name|client
operator|.
name|getApplicationAttemptReport
argument_list|(
name|appAttemptId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
name|appAttemptId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getFinishTime
argument_list|()
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getOriginalTrackingUrl
argument_list|()
argument_list|,
literal|"test original tracking url"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAppReport ()
specifier|public
name|void
name|testGetAppReport
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
specifier|final
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|spyTimelineReaderClient
operator|.
name|getApplicationEntity
argument_list|(
name|appId
argument_list|,
literal|"ALL"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createApplicationTimelineEntity
argument_list|(
name|appId
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationReport
name|report
init|=
name|client
operator|.
name|getApplicationReport
argument_list|(
name|appId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|appId
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getAppNodeLabelExpression
argument_list|()
argument_list|,
literal|"test_node_label"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|report
operator|.
name|getApplicationTags
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Test_APP_TAGS_1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getYarnApplicationState
argument_list|()
argument_list|,
name|YarnApplicationState
operator|.
name|FINISHED
argument_list|)
expr_stmt|;
block|}
DECL|method|createApplicationTimelineEntity ( ApplicationId appId, boolean emptyACLs, boolean wrongAppId)
specifier|private
specifier|static
name|TimelineEntity
name|createApplicationTimelineEntity
parameter_list|(
name|ApplicationId
name|appId
parameter_list|,
name|boolean
name|emptyACLs
parameter_list|,
name|boolean
name|wrongAppId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
if|if
condition|(
name|wrongAppId
condition|)
block|{
name|entity
operator|.
name|setId
argument_list|(
literal|"wrong_app_id"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entity
operator|.
name|setId
argument_list|(
name|appId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|NAME_ENTITY_INFO
argument_list|,
literal|"test app"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|TYPE_ENTITY_INFO
argument_list|,
literal|"test app type"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|USER_ENTITY_INFO
argument_list|,
literal|"user1"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|QUEUE_ENTITY_INFO
argument_list|,
literal|"test queue"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|UNMANAGED_APPLICATION_ENTITY_INFO
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APPLICATION_PRIORITY_INFO
argument_list|,
name|Priority
operator|.
name|newInstance
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|SUBMITTED_TIME_ENTITY_INFO
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_MEM_METRICS
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_CPU_METRICS
argument_list|,
literal|345
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_MEM_PREEMPT_METRICS
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_CPU_PREEMPT_METRICS
argument_list|,
literal|789
argument_list|)
expr_stmt|;
if|if
condition|(
name|emptyACLs
condition|)
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_VIEW_ACLS_ENTITY_INFO
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_VIEW_ACLS_ENTITY_INFO
argument_list|,
literal|"user2"
argument_list|)
expr_stmt|;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|appTags
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appTags
operator|.
name|add
argument_list|(
literal|"Test_APP_TAGS_1"
argument_list|)
expr_stmt|;
name|appTags
operator|.
name|add
argument_list|(
literal|"Test_APP_TAGS_2"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_TAGS_INFO
argument_list|,
name|appTags
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|configs
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|APP_NODE_LABEL_EXPRESSION
argument_list|,
literal|"test_node_label"
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setConfigs
argument_list|(
name|configs
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
operator|+
name|appId
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
comment|// send a YARN_APPLICATION_STATE_UPDATED event
comment|// after YARN_APPLICATION_FINISHED
comment|// The final YarnApplicationState should not be changed
name|tEvent
operator|=
operator|new
name|TimelineEvent
argument_list|()
expr_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_UPDATED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
operator|+
name|appId
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|eventInfo
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|eventInfo
operator|.
name|put
argument_list|(
name|ApplicationMetricsConstants
operator|.
name|STATE_EVENT_INFO
argument_list|,
name|YarnApplicationState
operator|.
name|KILLED
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setInfo
argument_list|(
name|eventInfo
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createAppAttemptTimelineEntity ( ApplicationAttemptId appAttemptId)
specifier|private
specifier|static
name|TimelineEntity
name|createAppAttemptTimelineEntity
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|appAttemptId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|TRACKING_URL_INFO
argument_list|,
literal|"test tracking url"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|ORIGINAL_TRACKING_URL_INFO
argument_list|,
literal|"test original tracking url"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|HOST_INFO
argument_list|,
literal|"test host"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|RPC_PORT_INFO
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|MASTER_CONTAINER_INFO
argument_list|,
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|REGISTERED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|1L
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
name|tEvent
operator|=
operator|new
name|TimelineEvent
argument_list|()
expr_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|AppAttemptMetricsConstants
operator|.
name|FINISHED_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
operator|+
literal|2L
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
DECL|method|createContainerEntity (ContainerId containerId)
specifier|private
specifier|static
name|TimelineEntity
name|createContainerEntity
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
block|{
name|TimelineEntity
name|entity
init|=
operator|new
name|TimelineEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setType
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ENTITY_TYPE
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setId
argument_list|(
name|containerId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entityInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_MEMORY_INFO
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_VCORE_INFO
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_INFO
argument_list|,
literal|"test host"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PORT_INFO
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_PRIORITY_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|ALLOCATED_HOST_HTTP_ADDRESS_INFO
argument_list|,
literal|"http://test:1234"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|DIAGNOSTICS_INFO
argument_list|,
literal|"test diagnostics info"
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|EXIT_STATUS_INFO
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|entityInfo
operator|.
name|put
argument_list|(
name|ContainerMetricsConstants
operator|.
name|STATE_INFO
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setInfo
argument_list|(
name|entityInfo
argument_list|)
expr_stmt|;
name|TimelineEvent
name|tEvent
init|=
operator|new
name|TimelineEvent
argument_list|()
decl_stmt|;
name|tEvent
operator|.
name|setId
argument_list|(
name|ContainerMetricsConstants
operator|.
name|CREATED_IN_RM_EVENT_TYPE
argument_list|)
expr_stmt|;
name|tEvent
operator|.
name|setTimestamp
argument_list|(
literal|123456
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addEvent
argument_list|(
name|tEvent
argument_list|)
expr_stmt|;
return|return
name|entity
return|;
block|}
block|}
end_class

end_unit

