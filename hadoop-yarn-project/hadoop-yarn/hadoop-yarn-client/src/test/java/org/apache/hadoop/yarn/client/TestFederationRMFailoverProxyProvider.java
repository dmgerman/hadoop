begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ha
operator|.
name|HAServiceProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|MiniYARNCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|failover
operator|.
name|FederationProxyProviderUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|FederationStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|impl
operator|.
name|MemoryFederationStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterRegisterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|store
operator|.
name|records
operator|.
name|SubClusterState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|federation
operator|.
name|utils
operator|.
name|FederationStateStoreFacade
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|HATestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit tests for FederationRMFailoverProxyProvider.  */
end_comment

begin_class
DECL|class|TestFederationRMFailoverProxyProvider
specifier|public
class|class
name|TestFederationRMFailoverProxyProvider
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|stateStore
specifier|private
name|FederationStateStore
name|stateStore
decl_stmt|;
DECL|field|dummyCapability
specifier|private
specifier|final
name|String
name|dummyCapability
init|=
literal|"cap"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|stateStore
operator|=
operator|new
name|MemoryFederationStateStore
argument_list|()
expr_stmt|;
name|stateStore
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|FederationStateStoreFacade
operator|.
name|getInstance
argument_list|()
operator|.
name|reinitialize
argument_list|(
name|stateStore
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|stateStore
operator|.
name|close
argument_list|()
expr_stmt|;
name|stateStore
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFederationRMFailoverProxyProvider ()
specifier|public
name|void
name|testFederationRMFailoverProxyProvider
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|SubClusterId
name|subClusterId
init|=
name|SubClusterId
operator|.
name|newInstance
argument_list|(
literal|"SC-1"
argument_list|)
decl_stmt|;
specifier|final
name|MiniYARNCluster
name|cluster
init|=
operator|new
name|MiniYARNCluster
argument_list|(
literal|"testFederationRMFailoverProxyProvider"
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|AUTO_FAILOVER_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_CLUSTER_ID
argument_list|,
literal|"cluster1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_IDS
argument_list|,
literal|"rm1,rm2,rm3"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|YarnConfiguration
operator|.
name|RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|HATestUtil
operator|.
name|setRpcAddressForRM
argument_list|(
literal|"rm1"
argument_list|,
literal|10000
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|HATestUtil
operator|.
name|setRpcAddressForRM
argument_list|(
literal|"rm2"
argument_list|,
literal|20000
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|HATestUtil
operator|.
name|setRpcAddressForRM
argument_list|(
literal|"rm3"
argument_list|,
literal|30000
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_MINICLUSTER_FIXED_PORTS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Transition rm3 to active;
name|makeRMActive
argument_list|(
name|subClusterId
argument_list|,
name|cluster
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ApplicationClientProtocol
name|client
init|=
name|FederationProxyProviderUtil
operator|.
name|createRMProxy
argument_list|(
name|conf
argument_list|,
name|ApplicationClientProtocol
operator|.
name|class
argument_list|,
name|subClusterId
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
decl_stmt|;
comment|// client will retry until the rm becomes active.
name|GetClusterMetricsResponse
name|response
init|=
name|client
operator|.
name|getClusterMetrics
argument_list|(
name|GetClusterMetricsRequest
operator|.
name|newInstance
argument_list|()
argument_list|)
decl_stmt|;
comment|// validate response
name|checkResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
comment|// transition rm3 to standby
name|cluster
operator|.
name|getResourceManager
argument_list|(
literal|2
argument_list|)
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMAdminService
argument_list|()
operator|.
name|transitionToStandby
argument_list|(
operator|new
name|HAServiceProtocol
operator|.
name|StateChangeRequestInfo
argument_list|(
name|HAServiceProtocol
operator|.
name|RequestSource
operator|.
name|REQUEST_BY_USER
argument_list|)
argument_list|)
expr_stmt|;
comment|// Transition rm2 to active;
name|makeRMActive
argument_list|(
name|subClusterId
argument_list|,
name|cluster
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|response
operator|=
name|client
operator|.
name|getClusterMetrics
argument_list|(
name|GetClusterMetricsRequest
operator|.
name|newInstance
argument_list|()
argument_list|)
expr_stmt|;
comment|// validate response
name|checkResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|checkResponse (GetClusterMetricsResponse response)
specifier|private
name|void
name|checkResponse
parameter_list|(
name|GetClusterMetricsResponse
name|response
parameter_list|)
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|response
operator|.
name|getClusterMetrics
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|response
operator|.
name|getClusterMetrics
argument_list|()
operator|.
name|getNumActiveNodeManagers
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|makeRMActive (final SubClusterId subClusterId, final MiniYARNCluster cluster, final int index)
specifier|private
name|void
name|makeRMActive
parameter_list|(
specifier|final
name|SubClusterId
name|subClusterId
parameter_list|,
specifier|final
name|MiniYARNCluster
name|cluster
parameter_list|,
specifier|final
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Transition rm"
operator|+
operator|(
name|index
operator|+
literal|1
operator|)
operator|+
literal|" to active"
argument_list|)
expr_stmt|;
name|String
name|dummyAddress
init|=
literal|"host:"
operator|+
name|index
decl_stmt|;
name|cluster
operator|.
name|getResourceManager
argument_list|(
name|index
argument_list|)
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMAdminService
argument_list|()
operator|.
name|transitionToActive
argument_list|(
operator|new
name|HAServiceProtocol
operator|.
name|StateChangeRequestInfo
argument_list|(
name|HAServiceProtocol
operator|.
name|RequestSource
operator|.
name|REQUEST_BY_USER
argument_list|)
argument_list|)
expr_stmt|;
name|ResourceManager
name|rm
init|=
name|cluster
operator|.
name|getResourceManager
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|amRMAddress
init|=
name|rm
operator|.
name|getApplicationMasterService
argument_list|()
operator|.
name|getBindAddress
argument_list|()
decl_stmt|;
name|InetSocketAddress
name|clientRMAddress
init|=
name|rm
operator|.
name|getClientRMService
argument_list|()
operator|.
name|getBindAddress
argument_list|()
decl_stmt|;
name|SubClusterRegisterRequest
name|request
init|=
name|SubClusterRegisterRequest
operator|.
name|newInstance
argument_list|(
name|SubClusterInfo
operator|.
name|newInstance
argument_list|(
name|subClusterId
argument_list|,
name|amRMAddress
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
operator|+
literal|":"
operator|+
name|amRMAddress
operator|.
name|getPort
argument_list|()
argument_list|,
name|clientRMAddress
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
operator|+
literal|":"
operator|+
name|clientRMAddress
operator|.
name|getPort
argument_list|()
argument_list|,
name|dummyAddress
argument_list|,
name|dummyAddress
argument_list|,
name|SubClusterState
operator|.
name|SC_NEW
argument_list|,
literal|1
argument_list|,
name|dummyCapability
argument_list|)
argument_list|)
decl_stmt|;
name|stateStore
operator|.
name|registerSubCluster
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

