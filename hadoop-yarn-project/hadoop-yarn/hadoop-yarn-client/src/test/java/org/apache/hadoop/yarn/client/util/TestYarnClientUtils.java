begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Tests for the YarnClientUtils class  */
end_comment

begin_class
DECL|class|TestYarnClientUtils
specifier|public
class|class
name|TestYarnClientUtils
block|{
comment|/**    * Test of getRMPrincipal(Configuration) method, of class YarnClientUtils    * when HA is not enabled.    *    * @throws java.io.IOException thrown if stuff breaks    */
annotation|@
name|Test
DECL|method|testGetRMPrincipalStandAlone_Configuration ()
specifier|public
name|void
name|testGetRMPrincipalStandAlone_Configuration
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"The hostname translation did return null when the principal is "
operator|+
literal|"missing from the conf: "
operator|+
name|result
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/_HOST@REALM"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/yourhost@REALM"
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/yourhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of getRMPrincipal(Configuration) method, of class YarnClientUtils    * when HA is enabled.    *    * @throws java.io.IOException thrown if stuff breaks    */
annotation|@
name|Test
DECL|method|testGetRMPrincipalHA_Configuration ()
specifier|public
name|void
name|testGetRMPrincipalHA_Configuration
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"The hostname translation did return null when the principal is "
operator|+
literal|"missing from the conf: "
operator|+
name|result
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/_HOST@REALM"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_IDS
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/_HOST@REALM"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The hostname translation succeeded even though no RM ids were "
operator|+
literal|"set: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/_HOST@REALM"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"test/yourhost@REALM"
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/yourhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of getRMPrincipal(Configuration) method, of class YarnClientUtils    * when HA is not enabled.    *    * @throws java.io.IOException thrown if stuff breaks    */
annotation|@
name|Test
DECL|method|testGetRMPrincipalStandAlone_String ()
specifier|public
name|void
name|testGetRMPrincipalStandAlone_String
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/_HOST@REALM"
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/yourhost@REALM"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/yourhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
try|try
block|{
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|null
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The hostname translation succeeded even though the RM principal "
operator|+
literal|"was null: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
block|}
comment|/**    * Test of getRMPrincipal(Configuration) method, of class YarnClientUtils    * when HA is enabled.    *    * @throws java.io.IOException thrown if stuff breaks    */
annotation|@
name|Test
DECL|method|testGetRMPrincipalHA_String ()
specifier|public
name|void
name|testGetRMPrincipalHA_String
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_IDS
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|String
name|result
init|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/_HOST@REALM"
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
try|try
block|{
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|null
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The hostname translation succeeded even though the RM principal "
operator|+
literal|"was null: "
operator|+
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/_HOST@REALM"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"The hostname translation succeeded even though no RM ids were set"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
operator|+
literal|".rm0"
argument_list|,
literal|"myhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/_HOST@REALM"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/myhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getRmPrincipal
argument_list|(
literal|"test/yourhost@REALM"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The hostname translation did not produce the expected "
operator|+
literal|"results: "
operator|+
name|result
argument_list|,
literal|"test/yourhost@REALM"
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of getRMPrincipal method of class YarnClientUtils.    *    * @throws IOException thrown when something breaks    */
annotation|@
name|Test
DECL|method|testGetYarnConfWithRmHaId ()
specifier|public
name|void
name|testGetYarnConfWithRmHaId
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|YarnConfiguration
name|result
init|=
name|YarnClientUtils
operator|.
name|getYarnConfWithRmHaId
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|assertSameConf
argument_list|(
name|conf
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RM_HA_ID was changed when it shouldn't have been: "
operator|+
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|,
literal|"rm0"
argument_list|,
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|,
literal|"rm0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getYarnConfWithRmHaId
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertSameConf
argument_list|(
name|conf
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RM_HA_ID was changed when it shouldn't have been: "
operator|+
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|,
literal|"rm0"
argument_list|,
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_IDS
argument_list|,
literal|"rm0,rm1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|result
operator|=
name|YarnClientUtils
operator|.
name|getYarnConfWithRmHaId
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertSameConf
argument_list|(
name|conf
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RM_HA_ID was not set correctly: "
operator|+
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|,
literal|"rm0"
argument_list|,
name|result
operator|.
name|get
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|YarnClientUtils
operator|.
name|getYarnConfWithRmHaId
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Allowed invalid HA configuration: HA is enabled, but no RM ID "
operator|+
literal|"is set"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
block|}
comment|/**    * Compare two configurations to see that they both have the same values.    * The YarnConfiguration.RM_HA_ID property is ignored, as it as expected to    * change and be tested external to this method.    *    * @param master the master Configuration    * @param copy the copy Configuration    */
DECL|method|assertSameConf (Configuration master, YarnConfiguration copy)
specifier|private
name|void
name|assertSameConf
parameter_list|(
name|Configuration
name|master
parameter_list|,
name|YarnConfiguration
name|copy
parameter_list|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|seen
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|itr
init|=
name|master
operator|.
name|iterator
argument_list|()
decl_stmt|;
comment|// Always ignore the RM_HA_ID, because we expect it to change
name|seen
operator|.
name|add
argument_list|(
name|YarnConfiguration
operator|.
name|RM_HA_ID
argument_list|)
expr_stmt|;
while|while
condition|(
name|itr
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|property
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|property
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|seen
operator|.
name|add
argument_list|(
name|key
argument_list|)
condition|)
block|{
comment|// Here we use master.get() instead of property.getValue() because
comment|// they're not the same thing.
name|assertEquals
argument_list|(
literal|"New configuration changed the value of "
operator|+
name|key
argument_list|,
name|master
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|copy
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|itr
operator|=
name|copy
operator|.
name|iterator
argument_list|()
expr_stmt|;
while|while
condition|(
name|itr
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|property
init|=
name|itr
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|property
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|seen
operator|.
name|contains
argument_list|(
name|property
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"New configuration changed the value of "
operator|+
name|key
argument_list|,
name|copy
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|master
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

