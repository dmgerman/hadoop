begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|CancelDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|RenewDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueUserACLInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|YarnClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestApplicationClientProtocolOnHA
specifier|public
class|class
name|TestApplicationClientProtocolOnHA
extends|extends
name|ProtocolHATestBase
block|{
DECL|field|client
specifier|private
name|YarnClient
name|client
init|=
literal|null
decl_stmt|;
annotation|@
name|Before
DECL|method|initiate ()
specifier|public
name|void
name|initiate
parameter_list|()
throws|throws
name|Exception
block|{
name|startHACluster
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|(
name|this
operator|.
name|conf
argument_list|)
decl_stmt|;
name|client
operator|=
name|createAndStartYarnClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|shutDown ()
specifier|public
name|void
name|shutDown
parameter_list|()
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetApplicationReportOnHA ()
specifier|public
name|void
name|testGetApplicationReportOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationReport
name|report
init|=
name|client
operator|.
name|getApplicationReport
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|report
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeAppReport
argument_list|()
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetNewApplicationOnHA ()
specifier|public
name|void
name|testGetNewApplicationOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|client
operator|.
name|createApplication
argument_list|()
operator|.
name|getApplicationSubmissionContext
argument_list|()
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|appId
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|,
name|appId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetClusterMetricsOnHA ()
specifier|public
name|void
name|testGetClusterMetricsOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|YarnClusterMetrics
name|clusterMetrics
init|=
name|client
operator|.
name|getYarnClusterMetrics
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|clusterMetrics
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeYarnClusterMetrics
argument_list|()
argument_list|,
name|clusterMetrics
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetApplicationsOnHA ()
specifier|public
name|void
name|testGetApplicationsOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getApplications
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|reports
operator|!=
literal|null
operator|&&
operator|!
name|reports
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeAppReports
argument_list|()
argument_list|,
name|reports
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetClusterNodesOnHA ()
specifier|public
name|void
name|testGetClusterNodesOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|NodeReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getNodeReports
argument_list|(
name|NodeState
operator|.
name|RUNNING
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|reports
operator|!=
literal|null
operator|&&
operator|!
name|reports
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeNodeReports
argument_list|()
argument_list|,
name|reports
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetQueueInfoOnHA ()
specifier|public
name|void
name|testGetQueueInfoOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|QueueInfo
name|queueInfo
init|=
name|client
operator|.
name|getQueueInfo
argument_list|(
literal|"root"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|queueInfo
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeQueueInfo
argument_list|()
argument_list|,
name|queueInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetQueueUserAclsOnHA ()
specifier|public
name|void
name|testGetQueueUserAclsOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|QueueUserACLInfo
argument_list|>
name|queueUserAclsList
init|=
name|client
operator|.
name|getQueueAclsInfo
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|queueUserAclsList
operator|!=
literal|null
operator|&&
operator|!
name|queueUserAclsList
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeQueueUserACLInfoList
argument_list|()
argument_list|,
name|queueUserAclsList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetApplicationAttemptReportOnHA ()
specifier|public
name|void
name|testGetApplicationAttemptReportOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationAttemptReport
name|report
init|=
name|client
operator|.
name|getApplicationAttemptReport
argument_list|(
name|cluster
operator|.
name|createFakeApplicationAttemptId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|report
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeApplicationAttemptReport
argument_list|()
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetApplicationAttemptsOnHA ()
specifier|public
name|void
name|testGetApplicationAttemptsOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getApplicationAttempts
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|reports
operator|!=
literal|null
operator|&&
operator|!
name|reports
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeApplicationAttemptReports
argument_list|()
argument_list|,
name|reports
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetContainerReportOnHA ()
specifier|public
name|void
name|testGetContainerReportOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|ContainerReport
name|report
init|=
name|client
operator|.
name|getContainerReport
argument_list|(
name|cluster
operator|.
name|createFakeContainerId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|report
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeContainerReport
argument_list|()
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetContainersOnHA ()
specifier|public
name|void
name|testGetContainersOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getContainers
argument_list|(
name|cluster
operator|.
name|createFakeApplicationAttemptId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|reports
operator|!=
literal|null
operator|&&
operator|!
name|reports
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|cluster
operator|.
name|createFakeContainerReports
argument_list|()
argument_list|,
name|reports
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testSubmitApplicationOnHA ()
specifier|public
name|void
name|testSubmitApplicationOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationSubmissionContext
name|appContext
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|appContext
operator|.
name|setApplicationId
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerLaunchContext
name|amContainer
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|ContainerLaunchContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|appContext
operator|.
name|setAMContainerSpec
argument_list|(
name|amContainer
argument_list|)
expr_stmt|;
name|Resource
name|capability
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
decl_stmt|;
name|capability
operator|.
name|setMemory
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|capability
operator|.
name|setVirtualCores
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|appContext
operator|.
name|setResource
argument_list|(
name|capability
argument_list|)
expr_stmt|;
name|ApplicationId
name|appId
init|=
name|client
operator|.
name|submitApplication
argument_list|(
name|appContext
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|getActiveRM
argument_list|()
operator|.
name|getRMContext
argument_list|()
operator|.
name|getRMApps
argument_list|()
operator|.
name|containsKey
argument_list|(
name|appId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testMoveApplicationAcrossQueuesOnHA ()
specifier|public
name|void
name|testMoveApplicationAcrossQueuesOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|moveApplicationAcrossQueues
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testForceKillApplicationOnHA ()
specifier|public
name|void
name|testForceKillApplicationOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|killApplication
argument_list|(
name|cluster
operator|.
name|createFakeAppId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testGetDelegationTokenOnHA ()
specifier|public
name|void
name|testGetDelegationTokenOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|Token
name|token
init|=
name|client
operator|.
name|getRMDelegationToken
argument_list|(
operator|new
name|Text
argument_list|(
literal|" "
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|token
argument_list|,
name|cluster
operator|.
name|createFakeToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testRenewDelegationTokenOnHA ()
specifier|public
name|void
name|testRenewDelegationTokenOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|RenewDelegationTokenRequest
name|request
init|=
name|RenewDelegationTokenRequest
operator|.
name|newInstance
argument_list|(
name|cluster
operator|.
name|createFakeToken
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|newExpirationTime
init|=
name|ClientRMProxy
operator|.
name|createRMProxy
argument_list|(
name|this
operator|.
name|conf
argument_list|,
name|ApplicationClientProtocol
operator|.
name|class
argument_list|)
operator|.
name|renewDelegationToken
argument_list|(
name|request
argument_list|)
operator|.
name|getNextExpirationTime
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|newExpirationTime
argument_list|,
name|cluster
operator|.
name|createNextExpirationTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
DECL|method|testCancelDelegationTokenOnHA ()
specifier|public
name|void
name|testCancelDelegationTokenOnHA
parameter_list|()
throws|throws
name|Exception
block|{
name|CancelDelegationTokenRequest
name|request
init|=
name|CancelDelegationTokenRequest
operator|.
name|newInstance
argument_list|(
name|cluster
operator|.
name|createFakeToken
argument_list|()
argument_list|)
decl_stmt|;
name|ClientRMProxy
operator|.
name|createRMProxy
argument_list|(
name|this
operator|.
name|conf
argument_list|,
name|ApplicationClientProtocol
operator|.
name|class
argument_list|)
operator|.
name|cancelDelegationToken
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

