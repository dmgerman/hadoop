begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.cli
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAttributesToNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodeAttributesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToAttributesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNodesToAttributesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttributeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttributeKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeToAttributeValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeAttributeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ResourceManagerAdministrationProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|AttributeMappingOperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodeToAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodesToAttributesMappingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|NodesToAttributesMappingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_comment
comment|/**  * Test class for TestNodeAttributesCLI.  */
end_comment

begin_class
DECL|class|TestNodeAttributesCLI
specifier|public
class|class
name|TestNodeAttributesCLI
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestNodeAttributesCLI
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|admin
specifier|private
name|ResourceManagerAdministrationProtocol
name|admin
decl_stmt|;
DECL|field|client
specifier|private
name|ApplicationClientProtocol
name|client
decl_stmt|;
DECL|field|nodeToAttrRequest
specifier|private
name|NodesToAttributesMappingRequest
name|nodeToAttrRequest
decl_stmt|;
DECL|field|nodeAttributesCLI
specifier|private
name|NodeAttributesCLI
name|nodeAttributesCLI
decl_stmt|;
DECL|field|errOutBytes
specifier|private
name|ByteArrayOutputStream
name|errOutBytes
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
DECL|field|sysOutBytes
specifier|private
name|ByteArrayOutputStream
name|sysOutBytes
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
DECL|field|errOutput
specifier|private
name|String
name|errOutput
decl_stmt|;
DECL|field|sysOutput
specifier|private
name|String
name|sysOutput
decl_stmt|;
annotation|@
name|Before
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|admin
operator|=
name|mock
argument_list|(
name|ResourceManagerAdministrationProtocol
operator|.
name|class
argument_list|)
expr_stmt|;
name|client
operator|=
name|mock
argument_list|(
name|ApplicationClientProtocol
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|admin
operator|.
name|mapAttributesToNodes
argument_list|(
name|any
argument_list|(
name|NodesToAttributesMappingRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|NodesToAttributesMappingResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|NodesToAttributesMappingResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|nodeToAttrRequest
operator|=
operator|(
name|NodesToAttributesMappingRequest
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
return|return
name|NodesToAttributesMappingResponse
operator|.
name|newInstance
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|nodeAttributesCLI
operator|=
operator|new
name|NodeAttributesCLI
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|AdminCommandHandler
name|getAdminCommandHandler
parameter_list|()
block|{
return|return
operator|new
name|AdminCommandHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|ResourceManagerAdministrationProtocol
name|createAdminProtocol
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ClientCommandHandler
name|getClientCommandHandler
parameter_list|()
block|{
name|ClientCommandHandler
name|handler
init|=
operator|new
name|ClientCommandHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|ApplicationClientProtocol
name|createApplicationProtocol
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|client
return|;
block|}
block|}
decl_stmt|;
name|handler
operator|.
name|setSysOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|sysOutBytes
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
block|}
expr_stmt|;
name|nodeAttributesCLI
operator|.
name|setErrOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|errOutBytes
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHelp ()
specifier|public
name|void
name|testHelp
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-replace"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-replace<\"node1:attribute[(type)][=value],attribute1"
operator|+
literal|"[=value],attribute2  node2:attribute2[=value],attribute3\">"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Replace the node to attributes mapping information at"
operator|+
literal|" the ResourceManager with the new mapping. Currently supported"
operator|+
literal|" attribute type. And string is the default type too. Attribute value"
operator|+
literal|" if not specified for string type value will be considered as empty"
operator|+
literal|" string. Replaced node-attributes should not violate the existing"
operator|+
literal|" attribute to attribute type mapping."
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-remove"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-remove<\"node1:attribute,attribute1"
operator|+
literal|" node2:attribute2\">"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Removes the specified node to attributes mapping"
operator|+
literal|" information at the ResourceManager"
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-add"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-add<\"node1:attribute[(type)][=value],"
operator|+
literal|"attribute1[=value],attribute2  node2:attribute2[=value],"
operator|+
literal|"attribute3\">"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Adds or updates the node to attributes mapping"
operator|+
literal|" information at the ResourceManager. Currently supported attribute"
operator|+
literal|" type is string. And string is the default type too. Attribute value"
operator|+
literal|" if not specified for string type value will be considered as empty"
operator|+
literal|" string. Added or updated node-attributes should not violate the"
operator|+
literal|" existing attribute to attribute type mapping."
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-failOnUnknownNodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-failOnUnknownNodes"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Can be used optionally along with [add,remove,"
operator|+
literal|"replace] options. When set, command will fail if specified nodes "
operator|+
literal|"are unknown."
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-list"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-list"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"List all attributes in cluster"
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-nodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-nodes"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Works with [list] to specify node hostnames whose mappings "
operator|+
literal|"are required to be displayed."
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-attributes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-attributes"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Works with [attributestonodes] to specify attributes whose mapping "
operator|+
literal|"are required to be displayed."
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-help"
block|,
literal|"-attributestonodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have succeeded help for replace"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"-attributestonodes"
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Displays mapping of attributes to nodes and attribute "
operator|+
literal|"values grouped by attributes"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplace ()
specifier|public
name|void
name|testReplace
parameter_list|()
throws|throws
name|Exception
block|{
comment|// --------------------------------
comment|// failure scenarios
comment|// --------------------------------
comment|// parenthesis not match
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"x("
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no node is specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|INVALID_MAPPING_ERR_MSG
argument_list|)
expr_stmt|;
comment|// parenthesis not match
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"x:(=abc"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no closing parenthesis is not specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Attribute for node x is not properly configured : (=abc"
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"x:()=abc"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no type specified inside parenthesis"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Attribute for node x is not properly configured : ()=abc"
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|":x(string)"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no node is specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Node name cannot be empty"
argument_list|)
expr_stmt|;
comment|// Not expected key=value specifying inner parenthesis
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"x:(key=value)"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Attribute for node x is not properly configured : (key=value)"
argument_list|)
expr_stmt|;
comment|// Should fail as no attributes specified
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should fail as no attribute mappings specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|MISSING_ARGUMENT
argument_list|)
expr_stmt|;
comment|// no labels, should fail
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"-failOnUnknownNodes"
block|,
literal|"x:key(string)=value,key2=val2"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should fail as no attribute mappings specified for replace"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|MISSING_ARGUMENT
argument_list|)
expr_stmt|;
comment|// no labels, should fail
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|" "
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|NO_MAPPING_ERR_MSG
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|", "
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|INVALID_MAPPING_ERR_MSG
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// success scenarios
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-replace"
block|,
literal|"x:key(string)=value,key2=val2 y:key2=val23,key3 z:key4"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should not fail as attribute has been properly mapped"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|NodeToAttributes
argument_list|>
name|nodeAttributesList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NodeAttribute
argument_list|>
name|attributes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"val2"
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"x"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
comment|// for node y
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"val23"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key3"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"y"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
comment|// for node y
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"val23"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key3"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"y"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
comment|// for node z
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key4"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"z"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
name|NodesToAttributesMappingRequest
name|expected
init|=
name|NodesToAttributesMappingRequest
operator|.
name|newInstance
argument_list|(
name|AttributeMappingOperationType
operator|.
name|REPLACE
argument_list|,
name|nodeAttributesList
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|nodeToAttrRequest
operator|.
name|equals
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemove ()
specifier|public
name|void
name|testRemove
parameter_list|()
throws|throws
name|Exception
block|{
comment|// --------------------------------
comment|// failure scenarios
comment|// --------------------------------
comment|// parenthesis not match
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-remove"
block|,
literal|"x:"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no node is specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Attributes cannot be null or empty for Operation [remove] on the "
operator|+
literal|"node x"
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// success scenarios
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-remove"
block|,
literal|"x:key2,key3 z:key4"
block|,
literal|"-failOnUnknownNodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should not fail as attribute has been properly mapped"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|NodeToAttributes
argument_list|>
name|nodeAttributesList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NodeAttribute
argument_list|>
name|attributes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key3"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"x"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
comment|// for node z
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key4"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"z"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
name|NodesToAttributesMappingRequest
name|expected
init|=
name|NodesToAttributesMappingRequest
operator|.
name|newInstance
argument_list|(
name|AttributeMappingOperationType
operator|.
name|REMOVE
argument_list|,
name|nodeAttributesList
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|nodeToAttrRequest
operator|.
name|equals
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAdd ()
specifier|public
name|void
name|testAdd
parameter_list|()
throws|throws
name|Exception
block|{
comment|// --------------------------------
comment|// failure scenarios
comment|// --------------------------------
comment|// parenthesis not match
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"x:"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should have failed as no node is specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFailureMessageContains
argument_list|(
literal|"Attributes cannot be null or empty for Operation [add] on the node x"
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// success scenarios
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"x:key2=123,key3=abc z:key4(string)"
block|,
literal|"-failOnUnknownNodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should not fail as attribute has been properly mapped"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|NodeToAttributes
argument_list|>
name|nodeAttributesList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NodeAttribute
argument_list|>
name|attributes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key2"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key3"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"x"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
comment|// for node z
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key4"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"z"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
name|NodesToAttributesMappingRequest
name|expected
init|=
name|NodesToAttributesMappingRequest
operator|.
name|newInstance
argument_list|(
name|AttributeMappingOperationType
operator|.
name|ADD
argument_list|,
name|nodeAttributesList
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|nodeToAttrRequest
operator|.
name|equals
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// with Duplicate mappings for a host
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-add"
block|,
literal|"x:key2=123,key3=abc x:key4(string)"
block|,
literal|"-failOnUnknownNodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should not fail as attribute has been properly mapped"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"key4"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|nodeAttributesList
operator|.
name|add
argument_list|(
name|NodeToAttributes
operator|.
name|newInstance
argument_list|(
literal|"x"
argument_list|,
name|attributes
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|NodesToAttributesMappingRequest
operator|.
name|newInstance
argument_list|(
name|AttributeMappingOperationType
operator|.
name|ADD
argument_list|,
name|nodeAttributesList
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|nodeToAttrRequest
operator|.
name|equals
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListAttributes ()
specifier|public
name|void
name|testListAttributes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// GetClusterNodeAttributesRequest
name|when
argument_list|(
name|client
operator|.
name|getClusterNodeAttributes
argument_list|(
name|any
argument_list|(
name|GetClusterNodeAttributesRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|GetClusterNodeAttributesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|GetClusterNodeAttributesResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|GetClusterNodeAttributesRequest
name|nodeAttrReq
init|=
operator|(
name|GetClusterNodeAttributesRequest
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
return|return
name|GetClusterNodeAttributesResponse
operator|.
name|newInstance
argument_list|(
name|ImmutableSet
operator|.
name|of
argument_list|(
name|NodeAttributeInfo
operator|.
name|newInstance
argument_list|(
name|NodeAttributeKey
operator|.
name|newInstance
argument_list|(
literal|"GPU"
argument_list|)
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// Success scenarios
comment|// --------------------------------
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-list"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should be success since it list all attributes"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertSysOutContains
argument_list|(
literal|"Attribute\t           Type"
argument_list|,
literal|"rm.yarn.io/GPU\t         STRING"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNodeToAttributes ()
specifier|public
name|void
name|testNodeToAttributes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// GetNodesToAttributesRequest response
name|when
argument_list|(
name|client
operator|.
name|getNodesToAttributes
argument_list|(
name|any
argument_list|(
name|GetNodesToAttributesRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|GetNodesToAttributesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|GetNodesToAttributesResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|GetNodesToAttributesRequest
name|nodeToAttributes
init|=
operator|(
name|GetNodesToAttributesRequest
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
return|return
name|GetNodesToAttributesResponse
operator|.
name|newInstance
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|Set
argument_list|<
name|NodeAttribute
argument_list|>
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"hostname"
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|NodeAttribute
operator|.
name|newInstance
argument_list|(
literal|"GPU"
argument_list|,
name|NodeAttributeType
operator|.
name|STRING
argument_list|,
literal|"ARM"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// Failure scenarios
comment|// --------------------------------
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-nodetoattributes"
block|,
literal|"-nodes"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should not success since nodes are not specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|INVALID_COMMAND_USAGE
argument_list|)
expr_stmt|;
comment|// Missing argument for nodes
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-nodestoattributes"
block|,
literal|"-nodes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should not success since nodes are not specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|MISSING_ARGUMENT
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// Success with hostname param
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-nodestoattributes"
block|,
literal|"-nodes"
block|,
literal|"hostname"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Should return hostname to attributed list"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertSysOutContains
argument_list|(
literal|"hostname"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAttributesToNodes ()
specifier|public
name|void
name|testAttributesToNodes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// GetAttributesToNodesResponse response
name|when
argument_list|(
name|client
operator|.
name|getAttributesToNodes
argument_list|(
name|any
argument_list|(
name|GetAttributesToNodesRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|GetAttributesToNodesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|GetAttributesToNodesResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|GetAttributesToNodesRequest
name|attrToNodes
init|=
operator|(
name|GetAttributesToNodesRequest
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
return|return
name|GetAttributesToNodesResponse
operator|.
name|newInstance
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|NodeAttributeKey
argument_list|,
name|List
argument_list|<
name|NodeToAttributeValue
argument_list|>
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
name|NodeAttributeKey
operator|.
name|newInstance
argument_list|(
literal|"GPU"
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|NodeToAttributeValue
operator|.
name|newInstance
argument_list|(
literal|"host1"
argument_list|,
literal|"ARM"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// Success scenarios
comment|// --------------------------------
name|String
index|[]
name|args
init|=
operator|new
name|String
index|[]
block|{
literal|"-attributestonodes"
block|}
decl_stmt|;
name|assertTrue
argument_list|(
literal|"It should be success since it list all attributes"
argument_list|,
literal|0
operator|==
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertSysOutContains
argument_list|(
literal|"Hostname\tAttribute-value"
argument_list|,
literal|"rm.yarn.io/GPU :"
argument_list|,
literal|"host1\t            ARM"
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// fail scenario argument filter missing
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-attributestonodes"
block|,
literal|"-attributes"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should not success since attributes for filter are not specified"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|MISSING_ARGUMENT
argument_list|)
expr_stmt|;
comment|// --------------------------------
comment|// fail scenario argument filter missing
comment|// --------------------------------
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-attributestonodes"
block|,
literal|"-attributes"
block|,
literal|"fail/da/fail"
block|}
expr_stmt|;
name|assertTrue
argument_list|(
literal|"It should not success since attributes format is not correct"
argument_list|,
literal|0
operator|!=
name|runTool
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
literal|"Attribute format not correct. Should be<[prefix]/[name]> "
operator|+
literal|":fail/da/fail"
argument_list|)
expr_stmt|;
block|}
DECL|method|assertFailureMessageContains (String... messages)
specifier|private
name|void
name|assertFailureMessageContains
parameter_list|(
name|String
modifier|...
name|messages
parameter_list|)
block|{
name|assertErrorContains
argument_list|(
name|messages
argument_list|)
expr_stmt|;
name|assertErrorContains
argument_list|(
name|NodeAttributesCLI
operator|.
name|USAGE_YARN_NODE_ATTRIBUTES
argument_list|)
expr_stmt|;
block|}
DECL|method|assertErrorContains (String... messages)
specifier|private
name|void
name|assertErrorContains
parameter_list|(
name|String
modifier|...
name|messages
parameter_list|)
block|{
for|for
control|(
name|String
name|message
range|:
name|messages
control|)
block|{
if|if
condition|(
operator|!
name|errOutput
operator|.
name|contains
argument_list|(
name|message
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected output to contain '"
operator|+
name|message
operator|+
literal|"' but err_output was:\n"
operator|+
name|errOutput
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertSysOutContains (String... messages)
specifier|private
name|void
name|assertSysOutContains
parameter_list|(
name|String
modifier|...
name|messages
parameter_list|)
block|{
for|for
control|(
name|String
name|message
range|:
name|messages
control|)
block|{
if|if
condition|(
operator|!
name|sysOutput
operator|.
name|contains
argument_list|(
name|message
argument_list|)
condition|)
block|{
name|fail
argument_list|(
literal|"Expected output to contain '"
operator|+
name|message
operator|+
literal|"' but sys_output was:\n"
operator|+
name|sysOutput
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|runTool (String... args)
specifier|private
name|int
name|runTool
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|errOutBytes
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sysOutBytes
operator|.
name|reset
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Running: NodeAttributesCLI "
operator|+
name|Joiner
operator|.
name|on
argument_list|(
literal|" "
argument_list|)
operator|.
name|join
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|ret
init|=
name|nodeAttributesCLI
operator|.
name|run
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|errOutput
operator|=
operator|new
name|String
argument_list|(
name|errOutBytes
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|Charsets
operator|.
name|UTF_8
argument_list|)
expr_stmt|;
name|sysOutput
operator|=
operator|new
name|String
argument_list|(
name|sysOutBytes
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|Charsets
operator|.
name|UTF_8
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Err_output:\n"
operator|+
name|errOutput
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Sys_output:\n"
operator|+
name|sysOutput
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

