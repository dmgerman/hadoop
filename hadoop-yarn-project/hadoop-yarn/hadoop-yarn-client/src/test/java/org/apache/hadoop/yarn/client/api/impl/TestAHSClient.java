begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.client.api.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ApplicationHistoryProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationAttemptsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainerReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetContainersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|FinalApplicationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|AHSClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAHSClient
specifier|public
class|class
name|TestAHSClient
block|{
annotation|@
name|Test
DECL|method|testClientStop ()
specifier|public
name|void
name|testClientStop
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|AHSClient
name|client
init|=
name|AHSClient
operator|.
name|createAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetApplications ()
specifier|public
name|void
name|testGetApplications
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|expectedReports
init|=
operator|(
operator|(
name|MockAHSClient
operator|)
name|client
operator|)
operator|.
name|getReports
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getApplications
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
argument_list|,
name|expectedReports
argument_list|)
expr_stmt|;
name|reports
operator|=
name|client
operator|.
name|getApplications
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetApplicationReport ()
specifier|public
name|void
name|testGetApplicationReport
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|expectedReports
init|=
operator|(
operator|(
name|MockAHSClient
operator|)
name|client
operator|)
operator|.
name|getReports
argument_list|()
decl_stmt|;
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|ApplicationReport
name|report
init|=
name|client
operator|.
name|getApplicationReport
argument_list|(
name|applicationId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
argument_list|,
name|expectedReports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedReports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getSubmitTime
argument_list|()
argument_list|,
name|expectedReports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSubmitTime
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetApplicationAttempts ()
specifier|public
name|void
name|testGetApplicationAttempts
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getApplicationAttempts
argument_list|(
name|applicationId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reports
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetApplicationAttempt ()
specifier|public
name|void
name|testGetApplicationAttempt
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|expectedReports
init|=
operator|(
operator|(
name|MockAHSClient
operator|)
name|client
operator|)
operator|.
name|getReports
argument_list|()
decl_stmt|;
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ApplicationAttemptReport
name|report
init|=
name|client
operator|.
name|getApplicationAttemptReport
argument_list|(
name|appAttemptId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getApplicationAttemptId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedReports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetContainers ()
specifier|public
name|void
name|testGetContainers
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|reports
init|=
name|client
operator|.
name|getContainers
argument_list|(
name|appAttemptId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|reports
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContainerId
argument_list|()
argument_list|,
operator|(
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|reports
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContainerId
argument_list|()
argument_list|,
operator|(
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|2
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testGetContainerReport ()
specifier|public
name|void
name|testGetContainerReport
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
specifier|final
name|AHSClient
name|client
init|=
operator|new
name|MockAHSClient
argument_list|()
decl_stmt|;
name|client
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|expectedReports
init|=
operator|(
operator|(
name|MockAHSClient
operator|)
name|client
operator|)
operator|.
name|getReports
argument_list|()
decl_stmt|;
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerReport
name|report
init|=
name|client
operator|.
name|getContainerReport
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|report
operator|.
name|getContainerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
operator|(
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|expectedReports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
argument_list|,
literal|1
argument_list|)
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|class|MockAHSClient
specifier|private
specifier|static
class|class
name|MockAHSClient
extends|extends
name|AHSClientImpl
block|{
comment|// private ApplicationReport mockReport;
DECL|field|reports
specifier|private
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|reports
init|=
operator|new
name|ArrayList
argument_list|<
name|ApplicationReport
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|attempts
specifier|private
name|HashMap
argument_list|<
name|ApplicationId
argument_list|,
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
argument_list|>
name|attempts
init|=
operator|new
name|HashMap
argument_list|<
name|ApplicationId
argument_list|,
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|containers
specifier|private
name|HashMap
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|List
argument_list|<
name|ContainerReport
argument_list|>
argument_list|>
name|containers
init|=
operator|new
name|HashMap
argument_list|<
name|ApplicationAttemptId
argument_list|,
name|List
argument_list|<
name|ContainerReport
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|mockAppResponse
name|GetApplicationsResponse
name|mockAppResponse
init|=
name|mock
argument_list|(
name|GetApplicationsResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockResponse
name|GetApplicationReportResponse
name|mockResponse
init|=
name|mock
argument_list|(
name|GetApplicationReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockAppAttemptsResponse
name|GetApplicationAttemptsResponse
name|mockAppAttemptsResponse
init|=
name|mock
argument_list|(
name|GetApplicationAttemptsResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockAttemptResponse
name|GetApplicationAttemptReportResponse
name|mockAttemptResponse
init|=
name|mock
argument_list|(
name|GetApplicationAttemptReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockContainersResponse
name|GetContainersResponse
name|mockContainersResponse
init|=
name|mock
argument_list|(
name|GetContainersResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mockContainerResponse
name|GetContainerReportResponse
name|mockContainerResponse
init|=
name|mock
argument_list|(
name|GetContainerReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|MockAHSClient ()
specifier|public
name|MockAHSClient
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|createAppReports
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
name|ahsClient
operator|=
name|mock
argument_list|(
name|ApplicationHistoryProtocol
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
name|when
argument_list|(
name|ahsClient
operator|.
name|getApplicationReport
argument_list|(
name|any
argument_list|(
name|GetApplicationReportRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ahsClient
operator|.
name|getApplications
argument_list|(
name|any
argument_list|(
name|GetApplicationsRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockAppResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ahsClient
operator|.
name|getApplicationAttemptReport
argument_list|(
name|any
argument_list|(
name|GetApplicationAttemptReportRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockAttemptResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ahsClient
operator|.
name|getApplicationAttempts
argument_list|(
name|any
argument_list|(
name|GetApplicationAttemptsRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockAppAttemptsResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ahsClient
operator|.
name|getContainers
argument_list|(
name|any
argument_list|(
name|GetContainersRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockContainersResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ahsClient
operator|.
name|getContainerReport
argument_list|(
name|any
argument_list|(
name|GetContainerReportRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockContainerResponse
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|YarnException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception is not expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception is not expected."
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getApplications ()
specifier|public
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|getApplications
parameter_list|()
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockAppResponse
operator|.
name|getApplicationList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|reports
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApplications
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport (ApplicationId appId)
specifier|public
name|ApplicationReport
name|getApplicationReport
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockResponse
operator|.
name|getApplicationReport
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getReport
argument_list|(
name|appId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApplicationReport
argument_list|(
name|appId
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttempts ( ApplicationId appId)
specifier|public
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|getApplicationAttempts
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockAppAttemptsResponse
operator|.
name|getApplicationAttemptList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getAttempts
argument_list|(
name|appId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApplicationAttempts
argument_list|(
name|appId
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationAttemptReport ( ApplicationAttemptId appAttemptId)
specifier|public
name|ApplicationAttemptReport
name|getApplicationAttemptReport
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockAttemptResponse
operator|.
name|getApplicationAttemptReport
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getAttempt
argument_list|(
name|appAttemptId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getApplicationAttemptReport
argument_list|(
name|appAttemptId
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ContainerReport
argument_list|>
DECL|method|getContainers (ApplicationAttemptId appAttemptId)
name|getContainers
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockContainersResponse
operator|.
name|getContainerList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getContainersReport
argument_list|(
name|appAttemptId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getContainers
argument_list|(
name|appAttemptId
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerReport (ContainerId containerId)
specifier|public
name|ContainerReport
name|getContainerReport
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
throws|throws
name|YarnException
throws|,
name|IOException
block|{
name|when
argument_list|(
name|mockContainerResponse
operator|.
name|getContainerReport
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|getContainer
argument_list|(
name|containerId
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getContainerReport
argument_list|(
name|containerId
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{     }
DECL|method|getReport (ApplicationId appId)
specifier|public
name|ApplicationReport
name|getReport
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reports
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|appId
operator|.
name|toString
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|reports
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getApplicationId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|reports
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|getAttempts (ApplicationId appId)
specifier|public
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|getAttempts
parameter_list|(
name|ApplicationId
name|appId
parameter_list|)
block|{
return|return
name|attempts
operator|.
name|get
argument_list|(
name|appId
argument_list|)
return|;
block|}
specifier|public
name|ApplicationAttemptReport
DECL|method|getAttempt (ApplicationAttemptId appAttemptId)
name|getAttempt
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
block|{
return|return
name|attempts
operator|.
name|get
argument_list|(
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
DECL|method|getContainersReport ( ApplicationAttemptId appAttemptId)
specifier|public
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|getContainersReport
parameter_list|(
name|ApplicationAttemptId
name|appAttemptId
parameter_list|)
block|{
return|return
name|containers
operator|.
name|get
argument_list|(
name|appAttemptId
argument_list|)
return|;
block|}
DECL|method|getContainer (ContainerId containerId)
specifier|public
name|ContainerReport
name|getContainer
parameter_list|(
name|ContainerId
name|containerId
parameter_list|)
block|{
return|return
name|containers
operator|.
name|get
argument_list|(
name|containerId
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
DECL|method|getReports ()
specifier|public
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|getReports
parameter_list|()
block|{
return|return
name|this
operator|.
name|reports
return|;
block|}
DECL|method|createAppReports ()
specifier|private
name|void
name|createAppReports
parameter_list|()
block|{
name|ApplicationId
name|applicationId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|ApplicationReport
name|newApplicationReport
init|=
name|ApplicationReport
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"user"
argument_list|,
literal|"queue"
argument_list|,
literal|"appname"
argument_list|,
literal|"host"
argument_list|,
literal|124
argument_list|,
literal|null
argument_list|,
name|YarnApplicationState
operator|.
name|RUNNING
argument_list|,
literal|"diagnostics"
argument_list|,
literal|"url"
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
name|FinalApplicationStatus
operator|.
name|SUCCEEDED
argument_list|,
literal|null
argument_list|,
literal|"N/A"
argument_list|,
literal|0.53789f
argument_list|,
literal|"YARN"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ApplicationReport
argument_list|>
name|applicationReports
init|=
operator|new
name|ArrayList
argument_list|<
name|ApplicationReport
argument_list|>
argument_list|()
decl_stmt|;
name|applicationReports
operator|.
name|add
argument_list|(
name|newApplicationReport
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ApplicationAttemptReport
argument_list|>
name|appAttempts
init|=
operator|new
name|ArrayList
argument_list|<
name|ApplicationAttemptReport
argument_list|>
argument_list|()
decl_stmt|;
name|ApplicationAttemptReport
name|attempt
init|=
name|ApplicationAttemptReport
operator|.
name|newInstance
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"host"
argument_list|,
literal|124
argument_list|,
literal|"url"
argument_list|,
literal|"oUrl"
argument_list|,
literal|"diagnostics"
argument_list|,
name|YarnApplicationAttemptState
operator|.
name|FINISHED
argument_list|,
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|newApplicationReport
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|appAttempts
operator|.
name|add
argument_list|(
name|attempt
argument_list|)
expr_stmt|;
name|ApplicationAttemptReport
name|attempt1
init|=
name|ApplicationAttemptReport
operator|.
name|newInstance
argument_list|(
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|"host"
argument_list|,
literal|124
argument_list|,
literal|"url"
argument_list|,
literal|"oUrl"
argument_list|,
literal|"diagnostics"
argument_list|,
name|YarnApplicationAttemptState
operator|.
name|FINISHED
argument_list|,
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|newApplicationReport
operator|.
name|getCurrentApplicationAttemptId
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|appAttempts
operator|.
name|add
argument_list|(
name|attempt1
argument_list|)
expr_stmt|;
name|attempts
operator|.
name|put
argument_list|(
name|applicationId
argument_list|,
name|appAttempts
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ContainerReport
argument_list|>
name|containerReports
init|=
operator|new
name|ArrayList
argument_list|<
name|ContainerReport
argument_list|>
argument_list|()
decl_stmt|;
name|ContainerReport
name|container
init|=
name|ContainerReport
operator|.
name|newInstance
argument_list|(
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|attempt
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host"
argument_list|,
literal|1234
argument_list|)
argument_list|,
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|1234
argument_list|,
literal|5678
argument_list|,
literal|"diagnosticInfo"
argument_list|,
literal|"logURL"
argument_list|,
literal|0
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
literal|"http://"
operator|+
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host"
argument_list|,
literal|2345
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|containerReports
operator|.
name|add
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|ContainerReport
name|container1
init|=
name|ContainerReport
operator|.
name|newInstance
argument_list|(
name|ContainerId
operator|.
name|newContainerId
argument_list|(
name|attempt
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|null
argument_list|,
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host"
argument_list|,
literal|1234
argument_list|)
argument_list|,
name|Priority
operator|.
name|UNDEFINED
argument_list|,
literal|1234
argument_list|,
literal|5678
argument_list|,
literal|"diagnosticInfo"
argument_list|,
literal|"logURL"
argument_list|,
literal|0
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|,
literal|"http://"
operator|+
name|NodeId
operator|.
name|newInstance
argument_list|(
literal|"host"
argument_list|,
literal|2345
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|containerReports
operator|.
name|add
argument_list|(
name|container1
argument_list|)
expr_stmt|;
name|containers
operator|.
name|put
argument_list|(
name|attempt
operator|.
name|getApplicationAttemptId
argument_list|()
argument_list|,
name|containerReports
argument_list|)
expr_stmt|;
name|ApplicationId
name|applicationId2
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|ApplicationReport
name|newApplicationReport2
init|=
name|ApplicationReport
operator|.
name|newInstance
argument_list|(
name|applicationId2
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId2
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|"user2"
argument_list|,
literal|"queue2"
argument_list|,
literal|"appname2"
argument_list|,
literal|"host2"
argument_list|,
literal|125
argument_list|,
literal|null
argument_list|,
name|YarnApplicationState
operator|.
name|FINISHED
argument_list|,
literal|"diagnostics2"
argument_list|,
literal|"url2"
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|FinalApplicationStatus
operator|.
name|SUCCEEDED
argument_list|,
literal|null
argument_list|,
literal|"N/A"
argument_list|,
literal|0.63789f
argument_list|,
literal|"NON-YARN"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|applicationReports
operator|.
name|add
argument_list|(
name|newApplicationReport2
argument_list|)
expr_stmt|;
name|ApplicationId
name|applicationId3
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|ApplicationReport
name|newApplicationReport3
init|=
name|ApplicationReport
operator|.
name|newInstance
argument_list|(
name|applicationId3
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId3
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|"user3"
argument_list|,
literal|"queue3"
argument_list|,
literal|"appname3"
argument_list|,
literal|"host3"
argument_list|,
literal|126
argument_list|,
literal|null
argument_list|,
name|YarnApplicationState
operator|.
name|RUNNING
argument_list|,
literal|"diagnostics3"
argument_list|,
literal|"url3"
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
name|FinalApplicationStatus
operator|.
name|SUCCEEDED
argument_list|,
literal|null
argument_list|,
literal|"N/A"
argument_list|,
literal|0.73789f
argument_list|,
literal|"MAPREDUCE"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|applicationReports
operator|.
name|add
argument_list|(
name|newApplicationReport3
argument_list|)
expr_stmt|;
name|ApplicationId
name|applicationId4
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234
argument_list|,
literal|8
argument_list|)
decl_stmt|;
name|ApplicationReport
name|newApplicationReport4
init|=
name|ApplicationReport
operator|.
name|newInstance
argument_list|(
name|applicationId4
argument_list|,
name|ApplicationAttemptId
operator|.
name|newInstance
argument_list|(
name|applicationId4
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"user4"
argument_list|,
literal|"queue4"
argument_list|,
literal|"appname4"
argument_list|,
literal|"host4"
argument_list|,
literal|127
argument_list|,
literal|null
argument_list|,
name|YarnApplicationState
operator|.
name|FAILED
argument_list|,
literal|"diagnostics4"
argument_list|,
literal|"url4"
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|FinalApplicationStatus
operator|.
name|SUCCEEDED
argument_list|,
literal|null
argument_list|,
literal|"N/A"
argument_list|,
literal|0.83789f
argument_list|,
literal|"NON-MAPREDUCE"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|applicationReports
operator|.
name|add
argument_list|(
name|newApplicationReport4
argument_list|)
expr_stmt|;
name|reports
operator|=
name|applicationReports
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

