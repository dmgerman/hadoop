begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.cblock.meta
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|cblock
operator|.
name|meta
package|;
end_package

begin_comment
comment|/**  * A wrapper class that represents the information about a volume. Used in  * communication between CBlock client and CBlock server only.  */
end_comment

begin_class
DECL|class|VolumeInfo
specifier|public
class|class
name|VolumeInfo
block|{
DECL|field|userName
specifier|private
specifier|final
name|String
name|userName
decl_stmt|;
DECL|field|volumeName
specifier|private
specifier|final
name|String
name|volumeName
decl_stmt|;
DECL|field|volumeSize
specifier|private
specifier|final
name|long
name|volumeSize
decl_stmt|;
DECL|field|blockSize
specifier|private
specifier|final
name|long
name|blockSize
decl_stmt|;
DECL|field|usage
specifier|private
specifier|final
name|long
name|usage
decl_stmt|;
DECL|method|VolumeInfo (String userName, String volumeName, long volumeSize, long blockSize, long usage)
specifier|public
name|VolumeInfo
parameter_list|(
name|String
name|userName
parameter_list|,
name|String
name|volumeName
parameter_list|,
name|long
name|volumeSize
parameter_list|,
name|long
name|blockSize
parameter_list|,
name|long
name|usage
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
name|this
operator|.
name|volumeName
operator|=
name|volumeName
expr_stmt|;
name|this
operator|.
name|volumeSize
operator|=
name|volumeSize
expr_stmt|;
name|this
operator|.
name|blockSize
operator|=
name|blockSize
expr_stmt|;
name|this
operator|.
name|usage
operator|=
name|usage
expr_stmt|;
block|}
comment|// When listing volume, the usage will not be set.
DECL|method|VolumeInfo (String userName, String volumeName, long volumeSize, long blockSize)
specifier|public
name|VolumeInfo
parameter_list|(
name|String
name|userName
parameter_list|,
name|String
name|volumeName
parameter_list|,
name|long
name|volumeSize
parameter_list|,
name|long
name|blockSize
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
name|this
operator|.
name|volumeName
operator|=
name|volumeName
expr_stmt|;
name|this
operator|.
name|volumeSize
operator|=
name|volumeSize
expr_stmt|;
name|this
operator|.
name|blockSize
operator|=
name|blockSize
expr_stmt|;
name|this
operator|.
name|usage
operator|=
operator|-
literal|1
expr_stmt|;
block|}
DECL|method|getVolumeSize ()
specifier|public
name|long
name|getVolumeSize
parameter_list|()
block|{
return|return
name|volumeSize
return|;
block|}
DECL|method|getBlockSize ()
specifier|public
name|long
name|getBlockSize
parameter_list|()
block|{
return|return
name|blockSize
return|;
block|}
DECL|method|getUsage ()
specifier|public
name|long
name|getUsage
parameter_list|()
block|{
return|return
name|usage
return|;
block|}
DECL|method|getUserName ()
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
DECL|method|getVolumeName ()
specifier|public
name|String
name|getVolumeName
parameter_list|()
block|{
return|return
name|volumeName
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|" userName:"
operator|+
name|userName
operator|+
literal|" volumeName:"
operator|+
name|volumeName
operator|+
literal|" volumeSize:"
operator|+
name|volumeSize
operator|+
literal|" blockSize:"
operator|+
name|blockSize
operator|+
literal|" (sizeInBlocks:"
operator|+
name|volumeSize
operator|/
name|blockSize
operator|+
literal|")"
operator|+
literal|" usageInBlocks:"
operator|+
name|usage
return|;
block|}
block|}
end_class

end_unit

