begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContextMainOperationsBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContextTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
operator|.
name|ConfigUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_class
DECL|class|TestFcMainOperationsLocalFs
specifier|public
class|class
name|TestFcMainOperationsLocalFs
extends|extends
name|FileContextMainOperationsBaseTest
block|{
DECL|field|fclocal
name|FileContext
name|fclocal
decl_stmt|;
DECL|field|targetOfTests
name|Path
name|targetOfTests
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|/**      * create the test root on local_fs - the  mount table will point here      */
name|fclocal
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|targetOfTests
operator|=
name|FileContextTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fclocal
argument_list|)
expr_stmt|;
comment|// In case previous test was killed before cleanup
name|fclocal
operator|.
name|delete
argument_list|(
name|targetOfTests
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fclocal
operator|.
name|mkdir
argument_list|(
name|targetOfTests
argument_list|,
name|FileContext
operator|.
name|DEFAULT_PERM
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// We create mount table so that the test root on the viewFs points to
comment|// to the test root on the target.
comment|// DOing this helps verify the FileStatus.path.
comment|//
comment|// The test root by default when running eclipse
comment|// is a test dir below the working directory.
comment|// (see FileContextTestHelper).
comment|// Since viewFs has no built-in wd, its wd is /user/<username>.
comment|// If this test launched via ant (build.xml) the test root is absolute path
name|String
name|srcTestRoot
decl_stmt|;
if|if
condition|(
name|FileContextTestHelper
operator|.
name|TEST_ROOT_DIR
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|srcTestRoot
operator|=
name|FileContextTestHelper
operator|.
name|TEST_ROOT_DIR
expr_stmt|;
block|}
else|else
block|{
name|srcTestRoot
operator|=
literal|"/user/"
operator|+
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
operator|+
literal|"/"
operator|+
name|FileContextTestHelper
operator|.
name|TEST_ROOT_DIR
expr_stmt|;
block|}
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
name|srcTestRoot
argument_list|,
name|targetOfTests
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
name|fc
operator|=
name|FileContext
operator|.
name|getFileContext
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|conf
argument_list|)
expr_stmt|;
comment|//System.out.println("SRCOfTests = "+ FileContextTestHelper.getTestRootPath(fc, "test"));
comment|//System.out.println("TargetOfTests = "+ targetOfTests.toUri());
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|fclocal
operator|.
name|delete
argument_list|(
name|targetOfTests
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

