begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.contrib.failmon
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|contrib
operator|.
name|failmon
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|CRC32
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|CheckedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_class
DECL|class|HDFSMerger
specifier|public
class|class
name|HDFSMerger
block|{
DECL|field|hadoopConf
name|Configuration
name|hadoopConf
decl_stmt|;
DECL|field|hdfs
name|FileSystem
name|hdfs
decl_stmt|;
DECL|field|hdfsDir
name|String
name|hdfsDir
decl_stmt|;
DECL|field|inputFiles
name|FileStatus
index|[]
name|inputFiles
decl_stmt|;
DECL|field|outputFilePath
name|Path
name|outputFilePath
decl_stmt|;
DECL|field|outputFile
name|FSDataOutputStream
name|outputFile
decl_stmt|;
DECL|field|compress
name|boolean
name|compress
decl_stmt|;
DECL|field|fw
name|FileWriter
name|fw
decl_stmt|;
DECL|field|writer
name|BufferedWriter
name|writer
decl_stmt|;
DECL|method|HDFSMerger ()
specifier|public
name|HDFSMerger
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|hadoopConfPath
decl_stmt|;
if|if
condition|(
name|Environment
operator|.
name|getProperty
argument_list|(
literal|"hadoop.conf.path"
argument_list|)
operator|==
literal|null
condition|)
name|hadoopConfPath
operator|=
literal|"../../../conf"
expr_stmt|;
else|else
name|hadoopConfPath
operator|=
name|Environment
operator|.
name|getProperty
argument_list|(
literal|"hadoop.conf.path"
argument_list|)
expr_stmt|;
comment|// Read the configuration for the Hadoop environment
name|Configuration
name|hadoopConf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|hadoopConf
operator|.
name|addResource
argument_list|(
operator|new
name|Path
argument_list|(
name|hadoopConfPath
operator|+
literal|"/hadoop-default.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|hadoopConf
operator|.
name|addResource
argument_list|(
operator|new
name|Path
argument_list|(
name|hadoopConfPath
operator|+
literal|"/hadoop-site.xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|// determine the local output file name
if|if
condition|(
name|Environment
operator|.
name|getProperty
argument_list|(
literal|"local.tmp.filename"
argument_list|)
operator|==
literal|null
condition|)
name|Environment
operator|.
name|setProperty
argument_list|(
literal|"local.tmp.filename"
argument_list|,
literal|"failmon.dat"
argument_list|)
expr_stmt|;
comment|// determine the upload location
name|hdfsDir
operator|=
name|Environment
operator|.
name|getProperty
argument_list|(
literal|"hdfs.upload.dir"
argument_list|)
expr_stmt|;
if|if
condition|(
name|hdfsDir
operator|==
literal|null
condition|)
name|hdfsDir
operator|=
literal|"/failmon"
expr_stmt|;
name|hdfs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|hadoopConf
argument_list|)
expr_stmt|;
name|Path
name|hdfsDirPath
init|=
operator|new
name|Path
argument_list|(
name|hadoopConf
operator|.
name|get
argument_list|(
literal|"fs.default.name"
argument_list|)
operator|+
name|hdfsDir
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
operator|!
name|hdfs
operator|.
name|getFileStatus
argument_list|(
name|hdfsDirPath
argument_list|)
operator|.
name|isDir
argument_list|()
condition|)
block|{
name|Environment
operator|.
name|logInfo
argument_list|(
literal|"HDFSMerger: Not an HDFS directory: "
operator|+
name|hdfsDirPath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Environment
operator|.
name|logInfo
argument_list|(
literal|"HDFSMerger: Directory not found: "
operator|+
name|hdfsDirPath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|inputFiles
operator|=
name|hdfs
operator|.
name|listStatus
argument_list|(
name|hdfsDirPath
argument_list|)
expr_stmt|;
name|outputFilePath
operator|=
operator|new
name|Path
argument_list|(
name|hdfsDirPath
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
literal|"merge-"
operator|+
name|Calendar
operator|.
name|getInstance
argument_list|()
operator|.
name|getTimeInMillis
argument_list|()
operator|+
literal|".dat"
argument_list|)
expr_stmt|;
name|outputFile
operator|=
name|hdfs
operator|.
name|create
argument_list|(
name|outputFilePath
argument_list|)
expr_stmt|;
for|for
control|(
name|FileStatus
name|fstatus
range|:
name|inputFiles
control|)
block|{
name|appendFile
argument_list|(
name|fstatus
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|hdfs
operator|.
name|delete
argument_list|(
name|fstatus
operator|.
name|getPath
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|outputFile
operator|.
name|close
argument_list|()
expr_stmt|;
name|Environment
operator|.
name|logInfo
argument_list|(
literal|"HDFS file merging complete!"
argument_list|)
expr_stmt|;
block|}
DECL|method|appendFile (Path inputPath)
specifier|private
name|void
name|appendFile
parameter_list|(
name|Path
name|inputPath
parameter_list|)
throws|throws
name|IOException
block|{
name|FSDataInputStream
name|anyInputFile
init|=
name|hdfs
operator|.
name|open
argument_list|(
name|inputPath
argument_list|)
decl_stmt|;
name|InputStream
name|inputFile
decl_stmt|;
name|byte
name|buffer
index|[]
init|=
operator|new
name|byte
index|[
literal|4096
index|]
decl_stmt|;
if|if
condition|(
name|inputPath
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
name|LocalStore
operator|.
name|COMPRESSION_SUFFIX
argument_list|)
condition|)
block|{
comment|// the file is compressed
name|inputFile
operator|=
operator|new
name|ZipInputStream
argument_list|(
name|anyInputFile
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ZipInputStream
operator|)
name|inputFile
operator|)
operator|.
name|getNextEntry
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|inputFile
operator|=
name|anyInputFile
expr_stmt|;
block|}
try|try
block|{
name|int
name|bytesRead
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|bytesRead
operator|=
name|inputFile
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|outputFile
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|bytesRead
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Environment
operator|.
name|logInfo
argument_list|(
literal|"Error while copying file:"
operator|+
name|inputPath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|inputFile
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|main (String [] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|Environment
operator|.
name|prepare
argument_list|(
literal|"./conf/failmon.properties"
argument_list|)
expr_stmt|;
try|try
block|{
operator|new
name|HDFSMerger
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

