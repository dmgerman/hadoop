begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ipc.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|util
operator|.
name|MBeanUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|util
operator|.
name|MetricsDynamicMBeanBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|util
operator|.
name|MetricsRegistry
import|;
end_import

begin_comment
comment|/**  *   * This is the JMX MBean for reporting the RPC layer Activity. The MBean is  * register using the name  * "hadoop:service=<RpcServiceName>,name=RpcDetailedActivityForPort<port>"  *   * Many of the activity metrics are sampled and averaged on an interval which  * can be specified in the metrics config file.  *<p>  * For the metrics that are sampled and averaged, one must specify a metrics  * context that does periodic update calls. Most metrics contexts do. The  * default Null metrics context however does NOT. So if you aren't using any  * other metrics context then you can turn on the viewing and averaging of  * sampled metrics by specifying the following two lines in the  * hadoop-meterics.properties file:  *   *<pre>  *        rpc.class=org.apache.hadoop.metrics.spi.NullContextWithUpdateThread  *        rpc.period=10  *</pre>  *<p>  * Note that the metrics are collected regardless of the context used. The  * context with the update thread is used to average the data periodically  *   * Impl details: We use a dynamic mbean that gets the list of the metrics from  * the metrics registry passed as an argument to the constructor  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|RpcDetailedActivityMBean
specifier|public
class|class
name|RpcDetailedActivityMBean
extends|extends
name|MetricsDynamicMBeanBase
block|{
DECL|field|mbeanName
specifier|private
specifier|final
name|ObjectName
name|mbeanName
decl_stmt|;
comment|/**    * @param mr - the metrics registry that has all the metrics    * @param serviceName - the service name for the rpc service    * @param port - the rpc port.    */
DECL|method|RpcDetailedActivityMBean (final MetricsRegistry mr, final String serviceName, final String port)
specifier|public
name|RpcDetailedActivityMBean
parameter_list|(
specifier|final
name|MetricsRegistry
name|mr
parameter_list|,
specifier|final
name|String
name|serviceName
parameter_list|,
specifier|final
name|String
name|port
parameter_list|)
block|{
name|super
argument_list|(
name|mr
argument_list|,
literal|"Rpc layer detailed statistics"
argument_list|)
expr_stmt|;
name|mbeanName
operator|=
name|MBeanUtil
operator|.
name|registerMBean
argument_list|(
name|serviceName
argument_list|,
literal|"RpcDetailedActivityForPort"
operator|+
name|port
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|shutdown ()
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
if|if
condition|(
name|mbeanName
operator|!=
literal|null
condition|)
name|MBeanUtil
operator|.
name|unregisterMBean
argument_list|(
name|mbeanName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

