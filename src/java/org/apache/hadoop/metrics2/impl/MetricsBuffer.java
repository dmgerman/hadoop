begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.metrics2.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * An immutable element for the sink queues.  */
end_comment

begin_class
DECL|class|MetricsBuffer
class|class
name|MetricsBuffer
implements|implements
name|Iterable
argument_list|<
name|MetricsBuffer
operator|.
name|Entry
argument_list|>
block|{
DECL|field|mutable
specifier|private
specifier|final
name|Iterable
argument_list|<
name|Entry
argument_list|>
name|mutable
decl_stmt|;
DECL|method|MetricsBuffer (Iterable<MetricsBuffer.Entry> mutable)
name|MetricsBuffer
parameter_list|(
name|Iterable
argument_list|<
name|MetricsBuffer
operator|.
name|Entry
argument_list|>
name|mutable
parameter_list|)
block|{
name|this
operator|.
name|mutable
operator|=
name|mutable
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|iterator ()
specifier|public
name|Iterator
argument_list|<
name|Entry
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|mutable
operator|.
name|iterator
argument_list|()
return|;
block|}
DECL|class|Entry
specifier|static
class|class
name|Entry
block|{
DECL|field|sourceName
specifier|private
specifier|final
name|String
name|sourceName
decl_stmt|;
DECL|field|records
specifier|private
specifier|final
name|Iterable
argument_list|<
name|MetricsRecordImpl
argument_list|>
name|records
decl_stmt|;
DECL|method|Entry (String name, Iterable<MetricsRecordImpl> records)
name|Entry
parameter_list|(
name|String
name|name
parameter_list|,
name|Iterable
argument_list|<
name|MetricsRecordImpl
argument_list|>
name|records
parameter_list|)
block|{
name|sourceName
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|records
operator|=
name|records
expr_stmt|;
block|}
DECL|method|name ()
name|String
name|name
parameter_list|()
block|{
return|return
name|sourceName
return|;
block|}
DECL|method|records ()
name|Iterable
argument_list|<
name|MetricsRecordImpl
argument_list|>
name|records
parameter_list|()
block|{
return|return
name|records
return|;
block|}
block|}
block|}
end_class

end_unit

