begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.io.serializer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|serializer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|RawComparator
import|;
end_import

begin_comment
comment|/**  *<p>  * Wraps a legacy {@link Serialization} as a {@link SerializationBase}.  *</p>  *   * @param<T>  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|LegacySerialization
class|class
name|LegacySerialization
parameter_list|<
name|T
parameter_list|>
extends|extends
name|SerializationBase
argument_list|<
name|T
argument_list|>
block|{
DECL|field|serialization
specifier|private
name|Serialization
argument_list|<
name|T
argument_list|>
name|serialization
decl_stmt|;
DECL|method|LegacySerialization (Serialization<T> serialization, Configuration conf)
specifier|public
name|LegacySerialization
parameter_list|(
name|Serialization
argument_list|<
name|T
argument_list|>
name|serialization
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|serialization
operator|=
name|serialization
expr_stmt|;
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|getUnderlyingSerialization ()
name|Serialization
argument_list|<
name|T
argument_list|>
name|getUnderlyingSerialization
parameter_list|()
block|{
return|return
name|serialization
return|;
block|}
annotation|@
name|Deprecated
annotation|@
name|Override
DECL|method|accept (Class<?> c)
specifier|public
name|boolean
name|accept
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
return|return
name|serialization
operator|.
name|accept
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Deprecated
annotation|@
name|Override
DECL|method|getDeserializer (Class<T> c)
specifier|public
name|Deserializer
argument_list|<
name|T
argument_list|>
name|getDeserializer
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
return|return
name|serialization
operator|.
name|getDeserializer
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Deprecated
annotation|@
name|Override
DECL|method|getSerializer (Class<T> c)
specifier|public
name|Serializer
argument_list|<
name|T
argument_list|>
name|getSerializer
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|c
parameter_list|)
block|{
return|return
name|serialization
operator|.
name|getSerializer
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|accept (Map<String, String> metadata)
specifier|public
name|boolean
name|accept
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|c
init|=
name|getClassFromMetadata
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
return|return
name|accept
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|getSerializer (Map<String, String> metadata)
specifier|public
name|SerializerBase
argument_list|<
name|T
argument_list|>
name|getSerializer
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
name|Class
argument_list|<
name|T
argument_list|>
name|c
init|=
operator|(
name|Class
argument_list|<
name|T
argument_list|>
operator|)
name|getClassFromMetadata
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
return|return
operator|new
name|LegacySerializer
argument_list|<
name|T
argument_list|>
argument_list|(
name|getSerializer
argument_list|(
name|c
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|getDeserializer (Map<String, String> metadata)
specifier|public
name|DeserializerBase
argument_list|<
name|T
argument_list|>
name|getDeserializer
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
name|Class
argument_list|<
name|T
argument_list|>
name|c
init|=
operator|(
name|Class
argument_list|<
name|T
argument_list|>
operator|)
name|getClassFromMetadata
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
return|return
operator|new
name|LegacyDeserializer
argument_list|<
name|T
argument_list|>
argument_list|(
name|getDeserializer
argument_list|(
name|c
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getRawComparator (Map<String, String> metadata)
specifier|public
name|RawComparator
argument_list|<
name|T
argument_list|>
name|getRawComparator
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
comment|// Since this method is being added to an API meant to provide legacy
comment|// compatability with deprecated serializers, leaving this as an incomplete
comment|// stub.
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"LegacySerialization does not provide raw comparators"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

