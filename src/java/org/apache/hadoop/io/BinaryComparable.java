begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.io
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
package|;
end_package

begin_comment
comment|/**  * Interface supported by {@link org.apache.hadoop.io.WritableComparable}  * types supporting ordering/permutation by a representative set of bytes.  */
end_comment

begin_class
DECL|class|BinaryComparable
specifier|public
specifier|abstract
class|class
name|BinaryComparable
implements|implements
name|Comparable
argument_list|<
name|BinaryComparable
argument_list|>
block|{
comment|/**    * Return n st bytes 0..n-1 from {#getBytes()} are valid.    */
DECL|method|getLength ()
specifier|public
specifier|abstract
name|int
name|getLength
parameter_list|()
function_decl|;
comment|/**    * Return representative byte array for this instance.    */
DECL|method|getBytes ()
specifier|public
specifier|abstract
name|byte
index|[]
name|getBytes
parameter_list|()
function_decl|;
comment|/**    * Compare bytes from {#getBytes()}.    * @see org.apache.hadoop.io.WritableComparator#compareBytes(byte[],int,int,byte[],int,int)    */
DECL|method|compareTo (BinaryComparable other)
specifier|public
name|int
name|compareTo
parameter_list|(
name|BinaryComparable
name|other
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|other
condition|)
return|return
literal|0
return|;
return|return
name|WritableComparator
operator|.
name|compareBytes
argument_list|(
name|getBytes
argument_list|()
argument_list|,
literal|0
argument_list|,
name|getLength
argument_list|()
argument_list|,
name|other
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|0
argument_list|,
name|other
operator|.
name|getLength
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * Compare bytes from {#getBytes()} to those provided.    */
DECL|method|compareTo (byte[] other, int off, int len)
specifier|public
name|int
name|compareTo
parameter_list|(
name|byte
index|[]
name|other
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
block|{
return|return
name|WritableComparator
operator|.
name|compareBytes
argument_list|(
name|getBytes
argument_list|()
argument_list|,
literal|0
argument_list|,
name|getLength
argument_list|()
argument_list|,
name|other
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
return|;
block|}
comment|/**    * Return true if bytes from {#getBytes()} match.    */
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|other
operator|instanceof
name|BinaryComparable
operator|)
condition|)
return|return
literal|false
return|;
name|BinaryComparable
name|that
init|=
operator|(
name|BinaryComparable
operator|)
name|other
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|getLength
argument_list|()
operator|!=
name|that
operator|.
name|getLength
argument_list|()
condition|)
return|return
literal|false
return|;
return|return
name|this
operator|.
name|compareTo
argument_list|(
name|that
argument_list|)
operator|==
literal|0
return|;
block|}
comment|/**    * Return a hash of the bytes returned from {#getBytes()}.    * @see org.apache.hadoop.io.WritableComparator#hashBytes(byte[],int)    */
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|WritableComparator
operator|.
name|hashBytes
argument_list|(
name|getBytes
argument_list|()
argument_list|,
name|getLength
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

