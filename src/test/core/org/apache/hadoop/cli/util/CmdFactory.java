begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.cli.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|cli
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsShell
import|;
end_import

begin_class
DECL|class|CmdFactory
specifier|public
specifier|abstract
class|class
name|CmdFactory
block|{
DECL|method|getCommandExecutor (CLITestData.TestCmd cmd, String tag)
specifier|public
specifier|static
name|CommandExecutor
name|getCommandExecutor
parameter_list|(
name|CLITestData
operator|.
name|TestCmd
name|cmd
parameter_list|,
name|String
name|tag
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
name|CommandExecutor
name|executor
init|=
literal|null
decl_stmt|;
switch|switch
condition|(
name|cmd
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|FS
case|:
name|executor
operator|=
operator|new
name|CLICommands
operator|.
name|FSCmdExecutor
argument_list|(
name|tag
argument_list|,
operator|new
name|FsShell
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown type of Test command:"
operator|+
name|cmd
operator|.
name|getType
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|executor
return|;
block|}
block|}
end_class

end_unit

