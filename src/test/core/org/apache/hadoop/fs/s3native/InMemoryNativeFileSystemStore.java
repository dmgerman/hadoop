begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3native
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3native
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3native
operator|.
name|NativeS3FileSystem
operator|.
name|PATH_DELIMITER
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  *<p>  * A stub implementation of {@link NativeFileSystemStore} for testing  * {@link NativeS3FileSystem} without actually connecting to S3.  *</p>  */
end_comment

begin_class
DECL|class|InMemoryNativeFileSystemStore
class|class
name|InMemoryNativeFileSystemStore
implements|implements
name|NativeFileSystemStore
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|metadataMap
specifier|private
name|SortedMap
argument_list|<
name|String
argument_list|,
name|FileMetadata
argument_list|>
name|metadataMap
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|FileMetadata
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|dataMap
specifier|private
name|SortedMap
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
name|dataMap
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|initialize (URI uri, Configuration conf)
specifier|public
name|void
name|initialize
parameter_list|(
name|URI
name|uri
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
DECL|method|storeEmptyFile (String key)
specifier|public
name|void
name|storeEmptyFile
parameter_list|(
name|String
name|key
parameter_list|)
throws|throws
name|IOException
block|{
name|metadataMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
operator|new
name|FileMetadata
argument_list|(
name|key
argument_list|,
literal|0
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|dataMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
DECL|method|storeFile (String key, File file, byte[] md5Hash)
specifier|public
name|void
name|storeFile
parameter_list|(
name|String
name|key
parameter_list|,
name|File
name|file
parameter_list|,
name|byte
index|[]
name|md5Hash
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|8192
index|]
decl_stmt|;
name|int
name|numRead
decl_stmt|;
name|BufferedInputStream
name|in
init|=
literal|null
decl_stmt|;
try|try
block|{
name|in
operator|=
operator|new
name|BufferedInputStream
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
while|while
condition|(
operator|(
name|numRead
operator|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|numRead
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|in
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
name|metadataMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
operator|new
name|FileMetadata
argument_list|(
name|key
argument_list|,
name|file
operator|.
name|length
argument_list|()
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|dataMap
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|retrieve (String key)
specifier|public
name|InputStream
name|retrieve
parameter_list|(
name|String
name|key
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|retrieve
argument_list|(
name|key
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|method|retrieve (String key, long byteRangeStart)
specifier|public
name|InputStream
name|retrieve
parameter_list|(
name|String
name|key
parameter_list|,
name|long
name|byteRangeStart
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|data
init|=
name|dataMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|File
name|file
init|=
name|createTempFile
argument_list|()
decl_stmt|;
name|BufferedOutputStream
name|out
init|=
literal|null
decl_stmt|;
try|try
block|{
name|out
operator|=
operator|new
name|BufferedOutputStream
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|data
argument_list|,
operator|(
name|int
operator|)
name|byteRangeStart
argument_list|,
name|data
operator|.
name|length
operator|-
operator|(
name|int
operator|)
name|byteRangeStart
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|out
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
return|return
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
return|;
block|}
DECL|method|createTempFile ()
specifier|private
name|File
name|createTempFile
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"fs.s3.buffer.dir"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dir
operator|.
name|exists
argument_list|()
operator|&&
operator|!
name|dir
operator|.
name|mkdirs
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Cannot create S3 buffer directory: "
operator|+
name|dir
argument_list|)
throw|;
block|}
name|File
name|result
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"test-"
argument_list|,
literal|".tmp"
argument_list|,
name|dir
argument_list|)
decl_stmt|;
name|result
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|retrieveMetadata (String key)
specifier|public
name|FileMetadata
name|retrieveMetadata
parameter_list|(
name|String
name|key
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|metadataMap
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|list (String prefix, int maxListingLength)
specifier|public
name|PartialListing
name|list
parameter_list|(
name|String
name|prefix
parameter_list|,
name|int
name|maxListingLength
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|list
argument_list|(
name|prefix
argument_list|,
name|maxListingLength
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
return|;
block|}
DECL|method|list (String prefix, int maxListingLength, String priorLastKey, boolean recursive)
specifier|public
name|PartialListing
name|list
parameter_list|(
name|String
name|prefix
parameter_list|,
name|int
name|maxListingLength
parameter_list|,
name|String
name|priorLastKey
parameter_list|,
name|boolean
name|recursive
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|list
argument_list|(
name|prefix
argument_list|,
name|recursive
condition|?
literal|null
else|:
name|PATH_DELIMITER
argument_list|,
name|maxListingLength
argument_list|,
name|priorLastKey
argument_list|)
return|;
block|}
DECL|method|list (String prefix, String delimiter, int maxListingLength, String priorLastKey)
specifier|private
name|PartialListing
name|list
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|delimiter
parameter_list|,
name|int
name|maxListingLength
parameter_list|,
name|String
name|priorLastKey
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|prefix
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
operator|!
name|prefix
operator|.
name|endsWith
argument_list|(
name|PATH_DELIMITER
argument_list|)
condition|)
block|{
name|prefix
operator|+=
name|PATH_DELIMITER
expr_stmt|;
block|}
name|List
argument_list|<
name|FileMetadata
argument_list|>
name|metadata
init|=
operator|new
name|ArrayList
argument_list|<
name|FileMetadata
argument_list|>
argument_list|()
decl_stmt|;
name|SortedSet
argument_list|<
name|String
argument_list|>
name|commonPrefixes
init|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|dataMap
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|prefix
argument_list|)
condition|)
block|{
if|if
condition|(
name|delimiter
operator|==
literal|null
condition|)
block|{
name|metadata
operator|.
name|add
argument_list|(
name|retrieveMetadata
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|delimIndex
init|=
name|key
operator|.
name|indexOf
argument_list|(
name|delimiter
argument_list|,
name|prefix
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|delimIndex
operator|==
operator|-
literal|1
condition|)
block|{
name|metadata
operator|.
name|add
argument_list|(
name|retrieveMetadata
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|commonPrefix
init|=
name|key
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|delimIndex
argument_list|)
decl_stmt|;
name|commonPrefixes
operator|.
name|add
argument_list|(
name|commonPrefix
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|metadata
operator|.
name|size
argument_list|()
operator|+
name|commonPrefixes
operator|.
name|size
argument_list|()
operator|==
name|maxListingLength
condition|)
block|{
operator|new
name|PartialListing
argument_list|(
name|key
argument_list|,
name|metadata
operator|.
name|toArray
argument_list|(
operator|new
name|FileMetadata
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|commonPrefixes
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|PartialListing
argument_list|(
literal|null
argument_list|,
name|metadata
operator|.
name|toArray
argument_list|(
operator|new
name|FileMetadata
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|commonPrefixes
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
return|;
block|}
DECL|method|delete (String key)
specifier|public
name|void
name|delete
parameter_list|(
name|String
name|key
parameter_list|)
throws|throws
name|IOException
block|{
name|metadataMap
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|dataMap
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
DECL|method|copy (String srcKey, String dstKey)
specifier|public
name|void
name|copy
parameter_list|(
name|String
name|srcKey
parameter_list|,
name|String
name|dstKey
parameter_list|)
throws|throws
name|IOException
block|{
name|metadataMap
operator|.
name|put
argument_list|(
name|dstKey
argument_list|,
name|metadataMap
operator|.
name|get
argument_list|(
name|srcKey
argument_list|)
argument_list|)
expr_stmt|;
name|dataMap
operator|.
name|put
argument_list|(
name|dstKey
argument_list|,
name|dataMap
operator|.
name|get
argument_list|(
name|srcKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|purge (String prefix)
specifier|public
name|void
name|purge
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|IOException
block|{
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|FileMetadata
argument_list|>
argument_list|>
name|i
init|=
name|metadataMap
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|FileMetadata
argument_list|>
name|entry
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
name|prefix
argument_list|)
condition|)
block|{
name|dataMap
operator|.
name|remove
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|method|dump ()
specifier|public
name|void
name|dump
parameter_list|()
throws|throws
name|IOException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|metadataMap
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|dataMap
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

