begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.shell
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
DECL|class|TestPathData
specifier|public
class|class
name|TestPathData
block|{
DECL|field|conf
specifier|protected
specifier|static
name|Configuration
name|conf
decl_stmt|;
DECL|field|fs
specifier|protected
specifier|static
name|FileSystem
name|fs
decl_stmt|;
DECL|field|dir
specifier|protected
specifier|static
name|Path
name|dir
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|initialize ()
specifier|public
specifier|static
name|void
name|initialize
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|dir
operator|=
operator|new
name|Path
argument_list|(
literal|"/tmp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWithPath ()
specifier|public
name|void
name|testWithPath
parameter_list|()
throws|throws
name|Exception
block|{
name|PathData
name|item
init|=
operator|new
name|PathData
argument_list|(
name|fs
argument_list|,
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|fs
argument_list|,
name|item
operator|.
name|fs
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dir
argument_list|,
name|item
operator|.
name|path
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|.
name|stat
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|item
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

