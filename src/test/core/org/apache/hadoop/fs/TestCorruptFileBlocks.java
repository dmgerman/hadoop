begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataOutputBuffer
import|;
end_import

begin_class
DECL|class|TestCorruptFileBlocks
specifier|public
class|class
name|TestCorruptFileBlocks
block|{
comment|/**    * Serialize the cfb given, deserialize and return the result.    */
DECL|method|serializeAndDeserialize (CorruptFileBlocks cfb)
specifier|static
name|CorruptFileBlocks
name|serializeAndDeserialize
parameter_list|(
name|CorruptFileBlocks
name|cfb
parameter_list|)
throws|throws
name|IOException
block|{
name|DataOutputBuffer
name|buf
init|=
operator|new
name|DataOutputBuffer
argument_list|()
decl_stmt|;
name|cfb
operator|.
name|write
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
name|buf
operator|.
name|getData
argument_list|()
decl_stmt|;
name|DataInputStream
name|input
init|=
operator|new
name|DataInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
decl_stmt|;
name|CorruptFileBlocks
name|result
init|=
operator|new
name|CorruptFileBlocks
argument_list|()
decl_stmt|;
name|result
operator|.
name|readFields
argument_list|(
name|input
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/**    * Check whether cfb is unchanged after serialization and deserialization.    */
DECL|method|checkSerialize (CorruptFileBlocks cfb)
specifier|static
name|boolean
name|checkSerialize
parameter_list|(
name|CorruptFileBlocks
name|cfb
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|cfb
operator|.
name|equals
argument_list|(
name|serializeAndDeserialize
argument_list|(
name|cfb
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * Test serialization and deserializaton of CorruptFileBlocks.    */
annotation|@
name|Test
DECL|method|testSerialization ()
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|IOException
block|{
block|{
name|CorruptFileBlocks
name|cfb
init|=
operator|new
name|CorruptFileBlocks
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|checkSerialize
argument_list|(
name|cfb
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|String
index|[]
name|files
init|=
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
name|CorruptFileBlocks
name|cfb
init|=
operator|new
name|CorruptFileBlocks
argument_list|(
name|files
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|checkSerialize
argument_list|(
name|cfb
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|String
index|[]
name|files
init|=
block|{
literal|"a"
block|,
literal|"bb"
block|,
literal|"ccc"
block|}
decl_stmt|;
name|CorruptFileBlocks
name|cfb
init|=
operator|new
name|CorruptFileBlocks
argument_list|(
name|files
argument_list|,
literal|"test"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|checkSerialize
argument_list|(
name|cfb
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

