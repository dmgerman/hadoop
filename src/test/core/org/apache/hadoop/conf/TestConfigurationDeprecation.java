begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestConfigurationDeprecation
specifier|public
class|class
name|TestConfigurationDeprecation
block|{
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|CONFIG
specifier|final
specifier|static
name|String
name|CONFIG
init|=
operator|new
name|File
argument_list|(
literal|"./test-config.xml"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|field|CONFIG2
specifier|final
specifier|static
name|String
name|CONFIG2
init|=
operator|new
name|File
argument_list|(
literal|"./test-config2.xml"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|field|CONFIG3
specifier|final
specifier|static
name|String
name|CONFIG3
init|=
operator|new
name|File
argument_list|(
literal|"./test-config3.xml"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
DECL|field|out
name|BufferedWriter
name|out
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
operator|new
name|File
argument_list|(
name|CONFIG
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
operator|new
name|File
argument_list|(
name|CONFIG2
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
operator|new
name|File
argument_list|(
name|CONFIG3
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
DECL|method|startConfig ()
specifier|private
name|void
name|startConfig
parameter_list|()
throws|throws
name|IOException
block|{
name|out
operator|.
name|write
argument_list|(
literal|"<?xml version=\"1.0\"?>\n"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"<configuration>\n"
argument_list|)
expr_stmt|;
block|}
DECL|method|endConfig ()
specifier|private
name|void
name|endConfig
parameter_list|()
throws|throws
name|IOException
block|{
name|out
operator|.
name|write
argument_list|(
literal|"</configuration>\n"
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|appendProperty (String name, String val)
name|void
name|appendProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|val
parameter_list|)
throws|throws
name|IOException
block|{
name|appendProperty
argument_list|(
name|name
argument_list|,
name|val
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|appendProperty (String name, String val, boolean isFinal)
name|void
name|appendProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|val
parameter_list|,
name|boolean
name|isFinal
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|write
argument_list|(
literal|"<property>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</name>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"<value>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|val
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</value>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isFinal
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
literal|"<final>true</final>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|write
argument_list|(
literal|"</property>\n"
argument_list|)
expr_stmt|;
block|}
DECL|method|addDeprecationToConfiguration ()
specifier|private
name|void
name|addDeprecationToConfiguration
parameter_list|()
block|{
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"B"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"D"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"E"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"F"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"G"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"H"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"I"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"J"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"M"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"N"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"X"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Y"
block|,
literal|"Z"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"P"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Q"
block|,
literal|"R"
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * This test checks the correctness of loading/setting the properties in terms    * of occurrence of deprecated keys.    * @throws IOException     */
annotation|@
name|Test
DECL|method|testDeprecation ()
specifier|public
name|void
name|testDeprecation
parameter_list|()
throws|throws
name|IOException
block|{
name|addDeprecationToConfiguration
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|CONFIG
argument_list|)
argument_list|)
expr_stmt|;
name|startConfig
argument_list|()
expr_stmt|;
comment|// load an old key and a new key.
name|appendProperty
argument_list|(
literal|"A"
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"D"
argument_list|,
literal|"d"
argument_list|)
expr_stmt|;
comment|// load an old key with multiple new-key mappings
name|appendProperty
argument_list|(
literal|"P"
argument_list|,
literal|"p"
argument_list|)
expr_stmt|;
name|endConfig
argument_list|()
expr_stmt|;
name|Path
name|fileResource
init|=
operator|new
name|Path
argument_list|(
name|CONFIG
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource
argument_list|)
expr_stmt|;
comment|// check if loading of old key with multiple new-key mappings actually loads
comment|// the corresponding new keys.
name|assertEquals
argument_list|(
literal|"p"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"P"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"Q"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"R"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|CONFIG2
argument_list|)
argument_list|)
expr_stmt|;
name|startConfig
argument_list|()
expr_stmt|;
comment|// load the old/new keys corresponding to the keys loaded before.
name|appendProperty
argument_list|(
literal|"B"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"C"
argument_list|,
literal|"c"
argument_list|)
expr_stmt|;
name|endConfig
argument_list|()
expr_stmt|;
name|Path
name|fileResource1
init|=
operator|new
name|Path
argument_list|(
name|CONFIG2
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
comment|// set new key
name|conf
operator|.
name|set
argument_list|(
literal|"N"
argument_list|,
literal|"n"
argument_list|)
expr_stmt|;
comment|// get old key
name|assertEquals
argument_list|(
literal|"n"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"M"
argument_list|)
argument_list|)
expr_stmt|;
comment|// check consistency in get of old and new keys
name|assertEquals
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"M"
argument_list|)
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"N"
argument_list|)
argument_list|)
expr_stmt|;
comment|// set old key and then get new key(s).
name|conf
operator|.
name|set
argument_list|(
literal|"M"
argument_list|,
literal|"m"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"m"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"N"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"X"
argument_list|,
literal|"x"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"X"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"Y"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"Z"
argument_list|)
argument_list|)
expr_stmt|;
comment|// set new keys to different values
name|conf
operator|.
name|set
argument_list|(
literal|"Y"
argument_list|,
literal|"y"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"Z"
argument_list|,
literal|"z"
argument_list|)
expr_stmt|;
comment|// get old key
name|assertEquals
argument_list|(
literal|"y"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"X"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * This test is to ensure the correctness of loading of keys with respect to    * being marked as final and that are related to deprecation.    * @throws IOException    */
annotation|@
name|Test
DECL|method|testDeprecationForFinalParameters ()
specifier|public
name|void
name|testDeprecationForFinalParameters
parameter_list|()
throws|throws
name|IOException
block|{
name|addDeprecationToConfiguration
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|CONFIG
argument_list|)
argument_list|)
expr_stmt|;
name|startConfig
argument_list|()
expr_stmt|;
comment|// set the following keys:
comment|// 1.old key and final
comment|// 2.new key whose corresponding old key is final
comment|// 3.old key whose corresponding new key is final
comment|// 4.new key and final
comment|// 5.new key which is final and has null value.
name|appendProperty
argument_list|(
literal|"A"
argument_list|,
literal|"a"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"D"
argument_list|,
literal|"d"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"E"
argument_list|,
literal|"e"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"H"
argument_list|,
literal|"h"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"J"
argument_list|,
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|endConfig
argument_list|()
expr_stmt|;
name|Path
name|fileResource
init|=
operator|new
name|Path
argument_list|(
name|CONFIG
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"E"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"F"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"G"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"H"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"I"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"J"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|CONFIG2
argument_list|)
argument_list|)
expr_stmt|;
name|startConfig
argument_list|()
expr_stmt|;
comment|// add the corresponding old/new keys of those added to CONFIG1
name|appendProperty
argument_list|(
literal|"B"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"C"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"F"
argument_list|,
literal|"f"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"G"
argument_list|,
literal|"g"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"I"
argument_list|,
literal|"i"
argument_list|)
expr_stmt|;
name|endConfig
argument_list|()
expr_stmt|;
name|Path
name|fileResource1
init|=
operator|new
name|Path
argument_list|(
name|CONFIG2
argument_list|)
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"E"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"F"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"G"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"H"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"I"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"J"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|CONFIG3
argument_list|)
argument_list|)
expr_stmt|;
name|startConfig
argument_list|()
expr_stmt|;
comment|// change the values of all the previously loaded
comment|// keys (both deprecated and new)
name|appendProperty
argument_list|(
literal|"A"
argument_list|,
literal|"a1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"B"
argument_list|,
literal|"b1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"C"
argument_list|,
literal|"c1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"D"
argument_list|,
literal|"d1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"E"
argument_list|,
literal|"e1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"F"
argument_list|,
literal|"f1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"G"
argument_list|,
literal|"g1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"H"
argument_list|,
literal|"h1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"I"
argument_list|,
literal|"i1"
argument_list|)
expr_stmt|;
name|appendProperty
argument_list|(
literal|"J"
argument_list|,
literal|"j1"
argument_list|)
expr_stmt|;
name|endConfig
argument_list|()
expr_stmt|;
name|fileResource
operator|=
operator|new
name|Path
argument_list|(
name|CONFIG
argument_list|)
expr_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
name|fileResource
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"C"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"E"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"F"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"G"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"H"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"I"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"J"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Ensure that wasDeprecatedKeySet returns the correct result under
comment|// the three code paths possible
annotation|@
name|Test
DECL|method|testWasDeprecatedKeySet ()
specifier|public
name|void
name|testWasDeprecatedKeySet
parameter_list|()
block|{
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"oldKeyA"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"newKeyA"
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|addDeprecation
argument_list|(
literal|"oldKeyB"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"newKeyB"
block|}
argument_list|)
expr_stmt|;
comment|// Used the deprecated key rather than the new, therefore should trigger
name|conf
operator|.
name|set
argument_list|(
literal|"oldKeyA"
argument_list|,
literal|"AAA"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"newKeyA"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|deprecatedKeyWasSet
argument_list|(
literal|"oldKeyA"
argument_list|)
argument_list|)
expr_stmt|;
comment|// There is a deprecated key, but it wasn't specified. Therefore, don't trigger
name|conf
operator|.
name|set
argument_list|(
literal|"newKeyB"
argument_list|,
literal|"AndrewBird"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AndrewBird"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"newKeyB"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|conf
operator|.
name|deprecatedKeyWasSet
argument_list|(
literal|"oldKeyB"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Not a deprecated key, therefore shouldn't trigger deprecatedKeyWasSet
name|conf
operator|.
name|set
argument_list|(
literal|"BrandNewKey"
argument_list|,
literal|"BrandNewValue"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BrandNewValue"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"BrandNewKey"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|conf
operator|.
name|deprecatedKeyWasSet
argument_list|(
literal|"BrandNewKey"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

