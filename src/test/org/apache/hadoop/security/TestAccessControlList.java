begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|SecurityUtil
operator|.
name|AccessControlList
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
DECL|class|TestAccessControlList
specifier|public
class|class
name|TestAccessControlList
extends|extends
name|TestCase
block|{
DECL|method|testWildCardAccessControlList ()
specifier|public
name|void
name|testWildCardAccessControlList
parameter_list|()
throws|throws
name|Exception
block|{
name|AccessControlList
name|acl
decl_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"*"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acl
operator|.
name|allAllowed
argument_list|()
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"  * "
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acl
operator|.
name|allAllowed
argument_list|()
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|" *"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acl
operator|.
name|allAllowed
argument_list|()
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"*  "
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acl
operator|.
name|allAllowed
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testAccessControlList ()
specifier|public
name|void
name|testAccessControlList
parameter_list|()
throws|throws
name|Exception
block|{
name|AccessControlList
name|acl
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|users
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|groups
decl_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"drwho tardis"
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"drwho"
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"tardis"
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"drwho"
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"drwho"
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"drwho "
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"drwho"
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|" tardis"
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"tardis"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|String
argument_list|>
name|iter
decl_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"drwho,joe tardis,users"
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iter
operator|=
name|users
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"drwho"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"joe"
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iter
operator|=
name|groups
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"tardis"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"users"
argument_list|)
expr_stmt|;
name|acl
operator|=
operator|new
name|AccessControlList
argument_list|(
literal|"drwho,joe tardis, users"
argument_list|)
expr_stmt|;
name|users
operator|=
name|acl
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|users
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iter
operator|=
name|users
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"drwho"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"joe"
argument_list|)
expr_stmt|;
name|groups
operator|=
name|acl
operator|.
name|getGroups
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|groups
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iter
operator|=
name|groups
operator|.
name|iterator
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"tardis"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|iter
operator|.
name|next
argument_list|()
argument_list|,
literal|"users"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

