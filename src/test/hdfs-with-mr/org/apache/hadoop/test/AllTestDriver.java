begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.test
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ProgramDriver
import|;
end_import

begin_class
annotation|@
name|Deprecated
comment|//Class to be removed after the project split
DECL|class|AllTestDriver
specifier|public
class|class
name|AllTestDriver
block|{
comment|/**    * A description of the test program for running all the tests using jar file    */
DECL|method|main (String argv[])
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|argv
index|[]
parameter_list|)
block|{
name|ProgramDriver
name|pd
init|=
operator|new
name|ProgramDriver
argument_list|()
decl_stmt|;
operator|new
name|CoreTestDriver
argument_list|(
name|pd
argument_list|)
expr_stmt|;
operator|new
name|HdfsTestDriver
argument_list|(
name|pd
argument_list|)
expr_stmt|;
operator|new
name|HdfsWithMRTestDriver
argument_list|(
name|pd
argument_list|)
expr_stmt|;
operator|new
name|MapredTestDriver
argument_list|(
name|pd
argument_list|)
expr_stmt|;
try|try
block|{
name|pd
operator|.
name|driver
argument_list|(
name|argv
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

