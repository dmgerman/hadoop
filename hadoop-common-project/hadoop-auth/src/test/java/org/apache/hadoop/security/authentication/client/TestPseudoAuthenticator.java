begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.authentication.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|PseudoAuthenticationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
DECL|class|TestPseudoAuthenticator
specifier|public
class|class
name|TestPseudoAuthenticator
block|{
DECL|method|getAuthenticationHandlerConfiguration (boolean anonymousAllowed)
specifier|private
name|Properties
name|getAuthenticationHandlerConfiguration
parameter_list|(
name|boolean
name|anonymousAllowed
parameter_list|)
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|PseudoAuthenticationHandler
operator|.
name|ANONYMOUS_ALLOWED
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|anonymousAllowed
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|props
return|;
block|}
annotation|@
name|Test
DECL|method|testGetUserName ()
specifier|public
name|void
name|testGetUserName
parameter_list|()
throws|throws
name|Exception
block|{
name|PseudoAuthenticator
name|authenticator
init|=
operator|new
name|PseudoAuthenticator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|,
name|authenticator
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAnonymousAllowed ()
specifier|public
name|void
name|testAnonymousAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|auth
operator|.
name|getBaseURL
argument_list|()
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|conn
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_OK
argument_list|,
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|auth
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAnonymousDisallowed ()
specifier|public
name|void
name|testAnonymousDisallowed
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|auth
operator|.
name|getBaseURL
argument_list|()
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
operator|(
name|HttpURLConnection
operator|)
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|conn
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_UNAUTHORIZED
argument_list|,
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|auth
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAuthenticationAnonymousAllowed ()
specifier|public
name|void
name|testAuthenticationAnonymousAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|_testAuthentication
argument_list|(
operator|new
name|PseudoAuthenticator
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAuthenticationAnonymousDisallowed ()
specifier|public
name|void
name|testAuthenticationAnonymousDisallowed
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|_testAuthentication
argument_list|(
operator|new
name|PseudoAuthenticator
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAuthenticationAnonymousAllowedWithPost ()
specifier|public
name|void
name|testAuthenticationAnonymousAllowedWithPost
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|_testAuthentication
argument_list|(
operator|new
name|PseudoAuthenticator
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAuthenticationAnonymousDisallowedWithPost ()
specifier|public
name|void
name|testAuthenticationAnonymousDisallowedWithPost
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticatorTestCase
name|auth
init|=
operator|new
name|AuthenticatorTestCase
argument_list|()
decl_stmt|;
name|auth
operator|.
name|setAuthenticationHandlerConfig
argument_list|(
name|getAuthenticationHandlerConfiguration
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|auth
operator|.
name|_testAuthentication
argument_list|(
operator|new
name|PseudoAuthenticator
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

