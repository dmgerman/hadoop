begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.authentication.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticatedURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|util
operator|.
name|Signer
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|Cookie
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_class
DECL|class|TestAuthenticationFilter
specifier|public
class|class
name|TestAuthenticationFilter
extends|extends
name|TestCase
block|{
DECL|method|testGetConfiguration ()
specifier|public
name|void
name|testGetConfiguration
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|CONFIG_PREFIX
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
literal|"a"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|Properties
name|props
init|=
name|filter
operator|.
name|getConfiguration
argument_list|(
literal|""
argument_list|,
name|config
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|props
operator|.
name|getProperty
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|config
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|CONFIG_PREFIX
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
literal|"foo.a"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"foo.a"
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|=
name|filter
operator|.
name|getConfiguration
argument_list|(
literal|"foo."
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|props
operator|.
name|getProperty
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testInitEmpty ()
specifier|public
name|void
name|testInitEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|()
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServletException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|DummyAuthenticationHandler
specifier|public
specifier|static
class|class
name|DummyAuthenticationHandler
implements|implements
name|AuthenticationHandler
block|{
DECL|field|init
specifier|public
specifier|static
name|boolean
name|init
decl_stmt|;
DECL|field|destroy
specifier|public
specifier|static
name|boolean
name|destroy
decl_stmt|;
DECL|field|TYPE
specifier|public
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"dummy"
decl_stmt|;
DECL|method|reset ()
specifier|public
specifier|static
name|void
name|reset
parameter_list|()
block|{
name|init
operator|=
literal|false
expr_stmt|;
name|destroy
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Properties config)
specifier|public
name|void
name|init
parameter_list|(
name|Properties
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
name|init
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|destroy ()
specifier|public
name|void
name|destroy
parameter_list|()
block|{
name|destroy
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getType ()
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
annotation|@
name|Override
DECL|method|authenticate (HttpServletRequest request, HttpServletResponse response)
specifier|public
name|AuthenticationToken
name|authenticate
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
name|AuthenticationToken
name|token
init|=
literal|null
decl_stmt|;
name|String
name|param
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"authenticated"
argument_list|)
decl_stmt|;
if|if
condition|(
name|param
operator|!=
literal|null
operator|&&
name|param
operator|.
name|equals
argument_list|(
literal|"true"
argument_list|)
condition|)
block|{
name|token
operator|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
literal|"t"
argument_list|)
expr_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
expr_stmt|;
block|}
return|return
name|token
return|;
block|}
block|}
DECL|method|testInit ()
specifier|public
name|void
name|testInit
parameter_list|()
throws|throws
name|Exception
block|{
comment|// minimal configuration& simple auth handler (Pseudo)
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"simple"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TOKEN_VALIDITY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|AUTH_TOKEN_VALIDITY
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PseudoAuthenticationHandler
operator|.
name|class
argument_list|,
name|filter
operator|.
name|getAuthenticationHandler
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|filter
operator|.
name|isRandomSecret
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|filter
operator|.
name|getCookieDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|filter
operator|.
name|getCookiePath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|filter
operator|.
name|getValidity
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
comment|// custom secret
name|filter
operator|=
operator|new
name|AuthenticationFilter
argument_list|()
expr_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"simple"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|filter
operator|.
name|isRandomSecret
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
comment|// custom cookie domain and cookie path
name|filter
operator|=
operator|new
name|AuthenticationFilter
argument_list|()
expr_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"simple"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|COOKIE_DOMAIN
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|".foo.com"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|COOKIE_PATH
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"/bar"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|COOKIE_DOMAIN
argument_list|,
name|AuthenticationFilter
operator|.
name|COOKIE_PATH
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|".foo.com"
argument_list|,
name|filter
operator|.
name|getCookieDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/bar"
argument_list|,
name|filter
operator|.
name|getCookiePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
comment|// authentication handler lifecycle, and custom impl
name|DummyAuthenticationHandler
operator|.
name|reset
argument_list|()
expr_stmt|;
name|filter
operator|=
operator|new
name|AuthenticationFilter
argument_list|()
expr_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|init
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|destroy
argument_list|)
expr_stmt|;
block|}
comment|// kerberos auth handler
name|filter
operator|=
operator|new
name|AuthenticationFilter
argument_list|()
expr_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"kerberos"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServletException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
finally|finally
block|{
name|assertEquals
argument_list|(
name|KerberosAuthenticationHandler
operator|.
name|class
argument_list|,
name|filter
operator|.
name|getAuthenticationHandler
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testGetRequestURL ()
specifier|public
name|void
name|testGetRequestURL
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"a=A&b=B"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://foo:8080/bar?a=A&b=B"
argument_list|,
name|filter
operator|.
name|getRequestURL
argument_list|(
name|request
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testGetToken ()
specifier|public
name|void
name|testGetToken
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
name|DummyAuthenticationHandler
operator|.
name|TYPE
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|newToken
init|=
name|filter
operator|.
name|getToken
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|,
name|newToken
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testGetTokenExpired ()
specifier|public
name|void
name|testGetTokenExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
literal|"invalidtype"
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
try|try
block|{
name|filter
operator|.
name|getToken
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthenticationException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testGetTokenInvalidType ()
specifier|public
name|void
name|testGetTokenInvalidType
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
literal|"invalidtype"
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
try|try
block|{
name|filter
operator|.
name|getToken
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthenticationException
name|ex
parameter_list|)
block|{
comment|// Expected
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testDoFilterNotAuthenticated ()
specifier|public
name|void
name|testDoFilterNotAuthenticated
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|FilterChain
name|chain
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|fail
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|chain
argument_list|)
operator|.
name|doFilter
argument_list|(
name|Mockito
operator|.
expr|<
name|ServletRequest
operator|>
name|anyObject
argument_list|()
argument_list|,
name|Mockito
operator|.
expr|<
name|ServletResponse
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|_testDoFilterAuthentication (boolean withDomainPath, boolean invalidToken)
specifier|private
name|void
name|_testDoFilterAuthentication
parameter_list|(
name|boolean
name|withDomainPath
parameter_list|,
name|boolean
name|invalidToken
parameter_list|)
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TOKEN_VALIDITY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"secret"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|AUTH_TOKEN_VALIDITY
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|withDomainPath
condition|)
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|COOKIE_DOMAIN
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|".foo.com"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|COOKIE_PATH
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"/bar"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|,
name|AuthenticationFilter
operator|.
name|AUTH_TOKEN_VALIDITY
argument_list|,
name|AuthenticationFilter
operator|.
name|SIGNATURE_SECRET
argument_list|,
name|AuthenticationFilter
operator|.
name|COOKIE_DOMAIN
argument_list|,
name|AuthenticationFilter
operator|.
name|COOKIE_PATH
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"authenticated"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"true"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"authenticated=true"
argument_list|)
expr_stmt|;
if|if
condition|(
name|invalidToken
condition|)
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
literal|"foo"
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|FilterChain
name|chain
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|boolean
index|[]
name|calledDoFilter
init|=
operator|new
name|boolean
index|[
literal|1
index|]
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|calledDoFilter
index|[
literal|0
index|]
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|chain
argument_list|)
operator|.
name|doFilter
argument_list|(
name|Mockito
operator|.
expr|<
name|ServletRequest
operator|>
name|anyObject
argument_list|()
argument_list|,
name|Mockito
operator|.
expr|<
name|ServletResponse
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Cookie
index|[]
name|setCookie
init|=
operator|new
name|Cookie
index|[
literal|1
index|]
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|Object
index|[]
name|args
init|=
name|invocation
operator|.
name|getArguments
argument_list|()
decl_stmt|;
name|setCookie
index|[
literal|0
index|]
operator|=
operator|(
name|Cookie
operator|)
name|args
index|[
literal|0
index|]
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|response
argument_list|)
operator|.
name|addCookie
argument_list|(
name|Mockito
operator|.
expr|<
name|Cookie
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|setCookie
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"u="
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"p="
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"t="
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"e="
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"s="
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|calledDoFilter
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|signer
operator|.
name|verifyAndExtract
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|AuthenticationToken
name|token
init|=
name|AuthenticationToken
operator|.
name|parse
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
operator|*
literal|1000
argument_list|,
name|token
operator|.
name|getExpires
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|withDomainPath
condition|)
block|{
name|assertEquals
argument_list|(
literal|".foo.com"
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/bar"
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNull
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|setCookie
index|[
literal|0
index|]
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testDoFilterAuthentication ()
specifier|public
name|void
name|testDoFilterAuthentication
parameter_list|()
throws|throws
name|Exception
block|{
name|_testDoFilterAuthentication
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testDoFilterAuthenticationWithInvalidToken ()
specifier|public
name|void
name|testDoFilterAuthenticationWithInvalidToken
parameter_list|()
throws|throws
name|Exception
block|{
name|_testDoFilterAuthentication
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|testDoFilterAuthenticationWithDomainPath ()
specifier|public
name|void
name|testDoFilterAuthenticationWithDomainPath
parameter_list|()
throws|throws
name|Exception
block|{
name|_testDoFilterAuthentication
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testDoFilterAuthenticated ()
specifier|public
name|void
name|testDoFilterAuthenticated
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
literal|"t"
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|FilterChain
name|chain
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|Object
index|[]
name|args
init|=
name|invocation
operator|.
name|getArguments
argument_list|()
decl_stmt|;
name|HttpServletRequest
name|request
init|=
operator|(
name|HttpServletRequest
operator|)
name|args
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"u"
argument_list|,
name|request
operator|.
name|getRemoteUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p"
argument_list|,
name|request
operator|.
name|getUserPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|chain
argument_list|)
operator|.
name|doFilter
argument_list|(
name|Mockito
operator|.
expr|<
name|ServletRequest
operator|>
name|anyObject
argument_list|()
argument_list|,
name|Mockito
operator|.
expr|<
name|ServletResponse
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testDoFilterAuthenticatedExpired ()
specifier|public
name|void
name|testDoFilterAuthenticatedExpired
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
name|DummyAuthenticationHandler
operator|.
name|TYPE
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|FilterChain
name|chain
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|fail
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|chain
argument_list|)
operator|.
name|doFilter
argument_list|(
name|Mockito
operator|.
expr|<
name|ServletRequest
operator|>
name|anyObject
argument_list|()
argument_list|,
name|Mockito
operator|.
expr|<
name|ServletResponse
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Cookie
index|[]
name|setCookie
init|=
operator|new
name|Cookie
index|[
literal|1
index|]
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|Object
index|[]
name|args
init|=
name|invocation
operator|.
name|getArguments
argument_list|()
decl_stmt|;
name|setCookie
index|[
literal|0
index|]
operator|=
operator|(
name|Cookie
operator|)
name|args
index|[
literal|0
index|]
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|response
argument_list|)
operator|.
name|addCookie
argument_list|(
name|Mockito
operator|.
expr|<
name|Cookie
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|sendError
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
argument_list|,
name|Mockito
operator|.
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|setCookie
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testDoFilterAuthenticatedInvalidType ()
specifier|public
name|void
name|testDoFilterAuthenticatedInvalidType
parameter_list|()
throws|throws
name|Exception
block|{
name|AuthenticationFilter
name|filter
init|=
operator|new
name|AuthenticationFilter
argument_list|()
decl_stmt|;
try|try
block|{
name|FilterConfig
name|config
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterConfig
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameter
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DummyAuthenticationHandler
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|config
operator|.
name|getInitParameterNames
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|AuthenticationFilter
operator|.
name|AUTH_TYPE
argument_list|)
argument_list|)
operator|.
name|elements
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
literal|"http://foo:8080/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
operator|new
name|AuthenticationToken
argument_list|(
literal|"u"
argument_list|,
literal|"p"
argument_list|,
literal|"invalidtype"
argument_list|)
decl_stmt|;
name|token
operator|.
name|setExpires
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
argument_list|)
expr_stmt|;
name|Signer
name|signer
init|=
operator|new
name|Signer
argument_list|(
literal|"secret"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tokenSigned
init|=
name|signer
operator|.
name|sign
argument_list|(
name|token
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|tokenSigned
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getCookies
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Cookie
index|[]
block|{
name|cookie
block|}
argument_list|)
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|FilterChain
name|chain
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|fail
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|chain
argument_list|)
operator|.
name|doFilter
argument_list|(
name|Mockito
operator|.
expr|<
name|ServletRequest
operator|>
name|anyObject
argument_list|()
argument_list|,
name|Mockito
operator|.
expr|<
name|ServletResponse
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Cookie
index|[]
name|setCookie
init|=
operator|new
name|Cookie
index|[
literal|1
index|]
decl_stmt|;
name|Mockito
operator|.
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|Object
index|[]
name|args
init|=
name|invocation
operator|.
name|getArguments
argument_list|()
decl_stmt|;
name|setCookie
index|[
literal|0
index|]
operator|=
operator|(
name|Cookie
operator|)
name|args
index|[
literal|0
index|]
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|response
argument_list|)
operator|.
name|addCookie
argument_list|(
name|Mockito
operator|.
expr|<
name|Cookie
operator|>
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|sendError
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
argument_list|,
name|Mockito
operator|.
name|anyString
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|setCookie
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|AuthenticatedURL
operator|.
name|AUTH_COOKIE
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|setCookie
index|[
literal|0
index|]
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|filter
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

