begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.authentication.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestAuthenticationToken
specifier|public
class|class
name|TestAuthenticationToken
block|{
annotation|@
name|Test
DECL|method|testAnonymous ()
specifier|public
name|void
name|testAnonymous
parameter_list|()
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|AuthenticationToken
operator|.
name|ANONYMOUS
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|AuthenticationToken
operator|.
name|ANONYMOUS
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|AuthenticationToken
operator|.
name|ANONYMOUS
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|AuthenticationToken
operator|.
name|ANONYMOUS
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|AuthenticationToken
operator|.
name|ANONYMOUS
operator|.
name|getExpires
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|AuthenticationToken
operator|.
name|ANONYMOUS
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

