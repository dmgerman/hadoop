begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.crypto.key.kms.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|kms
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponseWrapper
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Authentication filter that takes the configuration from the KMS configuration  * file.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|KMSAuthenticationFilter
specifier|public
class|class
name|KMSAuthenticationFilter
extends|extends
name|AuthenticationFilter
block|{
DECL|field|CONF_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|CONF_PREFIX
init|=
name|KMSConfiguration
operator|.
name|CONFIG_PREFIX
operator|+
literal|"authentication."
decl_stmt|;
annotation|@
name|Override
DECL|method|getConfiguration (String configPrefix, FilterConfig filterConfig)
specifier|protected
name|Properties
name|getConfiguration
parameter_list|(
name|String
name|configPrefix
parameter_list|,
name|FilterConfig
name|filterConfig
parameter_list|)
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
name|KMSWebApp
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|conf
control|)
block|{
name|String
name|name
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
name|CONF_PREFIX
argument_list|)
condition|)
block|{
name|String
name|value
init|=
name|conf
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
name|CONF_PREFIX
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|props
return|;
block|}
DECL|class|KMSResponse
specifier|private
specifier|static
class|class
name|KMSResponse
extends|extends
name|HttpServletResponseWrapper
block|{
DECL|field|statusCode
specifier|public
name|int
name|statusCode
decl_stmt|;
DECL|field|msg
specifier|public
name|String
name|msg
decl_stmt|;
DECL|method|KMSResponse (ServletResponse response)
specifier|public
name|KMSResponse
parameter_list|(
name|ServletResponse
name|response
parameter_list|)
block|{
name|super
argument_list|(
operator|(
name|HttpServletResponse
operator|)
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setStatus (int sc)
specifier|public
name|void
name|setStatus
parameter_list|(
name|int
name|sc
parameter_list|)
block|{
name|statusCode
operator|=
name|sc
expr_stmt|;
name|super
operator|.
name|setStatus
argument_list|(
name|sc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|sendError (int sc, String msg)
specifier|public
name|void
name|sendError
parameter_list|(
name|int
name|sc
parameter_list|,
name|String
name|msg
parameter_list|)
throws|throws
name|IOException
block|{
name|statusCode
operator|=
name|sc
expr_stmt|;
name|this
operator|.
name|msg
operator|=
name|msg
expr_stmt|;
name|super
operator|.
name|sendError
argument_list|(
name|sc
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|sendError (int sc)
specifier|public
name|void
name|sendError
parameter_list|(
name|int
name|sc
parameter_list|)
throws|throws
name|IOException
block|{
name|statusCode
operator|=
name|sc
expr_stmt|;
name|super
operator|.
name|sendError
argument_list|(
name|sc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setStatus (int sc, String sm)
specifier|public
name|void
name|setStatus
parameter_list|(
name|int
name|sc
parameter_list|,
name|String
name|sm
parameter_list|)
block|{
name|statusCode
operator|=
name|sc
expr_stmt|;
name|msg
operator|=
name|sm
expr_stmt|;
name|super
operator|.
name|setStatus
argument_list|(
name|sc
argument_list|,
name|sm
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doFilter (ServletRequest request, ServletResponse response, FilterChain filterChain)
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|filterChain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|KMSResponse
name|kmsResponse
init|=
operator|new
name|KMSResponse
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|super
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|kmsResponse
argument_list|,
name|filterChain
argument_list|)
expr_stmt|;
if|if
condition|(
name|kmsResponse
operator|.
name|statusCode
operator|!=
name|HttpServletResponse
operator|.
name|SC_OK
operator|&&
name|kmsResponse
operator|.
name|statusCode
operator|!=
name|HttpServletResponse
operator|.
name|SC_CREATED
operator|&&
name|kmsResponse
operator|.
name|statusCode
operator|!=
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
condition|)
block|{
name|KMSWebApp
operator|.
name|getInvalidCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
block|}
comment|// HttpServletResponse.SC_UNAUTHORIZED is because the request does not
comment|// belong to an authenticated user.
if|if
condition|(
name|kmsResponse
operator|.
name|statusCode
operator|==
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
condition|)
block|{
name|KMSWebApp
operator|.
name|getUnauthenticatedCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|String
name|method
init|=
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getMethod
argument_list|()
decl_stmt|;
name|StringBuffer
name|requestURL
init|=
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getRequestURL
argument_list|()
decl_stmt|;
name|String
name|queryString
init|=
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getQueryString
argument_list|()
decl_stmt|;
if|if
condition|(
name|queryString
operator|!=
literal|null
condition|)
block|{
name|requestURL
operator|.
name|append
argument_list|(
literal|"?"
argument_list|)
operator|.
name|append
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
block|}
name|KMSWebApp
operator|.
name|getKMSAudit
argument_list|()
operator|.
name|unauthenticated
argument_list|(
name|request
operator|.
name|getRemoteHost
argument_list|()
argument_list|,
name|method
argument_list|,
name|requestURL
operator|.
name|toString
argument_list|()
argument_list|,
name|kmsResponse
operator|.
name|msg
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

