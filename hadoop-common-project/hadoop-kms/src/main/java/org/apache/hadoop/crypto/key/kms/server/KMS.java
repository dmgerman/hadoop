begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.crypto.key.kms.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|kms
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|KeyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|kms
operator|.
name|KMSRESTConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AccessControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|kms
operator|.
name|KMSClientProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Consumes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|SecurityContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|MessageFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Class providing the REST bindings, via Jersey, for the KMS.  */
end_comment

begin_class
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|SERVICE_VERSION
argument_list|)
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|KMS
specifier|public
class|class
name|KMS
block|{
DECL|field|CREATE_KEY
specifier|private
specifier|static
specifier|final
name|String
name|CREATE_KEY
init|=
literal|"CREATE_KEY"
decl_stmt|;
DECL|field|DELETE_KEY
specifier|private
specifier|static
specifier|final
name|String
name|DELETE_KEY
init|=
literal|"DELETE_KEY"
decl_stmt|;
DECL|field|ROLL_NEW_VERSION
specifier|private
specifier|static
specifier|final
name|String
name|ROLL_NEW_VERSION
init|=
literal|"ROLL_NEW_VERSION"
decl_stmt|;
DECL|field|GET_KEYS
specifier|private
specifier|static
specifier|final
name|String
name|GET_KEYS
init|=
literal|"GET_KEYS"
decl_stmt|;
DECL|field|GET_KEYS_METADATA
specifier|private
specifier|static
specifier|final
name|String
name|GET_KEYS_METADATA
init|=
literal|"GET_KEYS_METADATA"
decl_stmt|;
DECL|field|GET_KEY_VERSION
specifier|private
specifier|static
specifier|final
name|String
name|GET_KEY_VERSION
init|=
literal|"GET_KEY_VERSION"
decl_stmt|;
DECL|field|GET_CURRENT_KEY
specifier|private
specifier|static
specifier|final
name|String
name|GET_CURRENT_KEY
init|=
literal|"GET_CURRENT_KEY"
decl_stmt|;
DECL|field|GET_KEY_VERSIONS
specifier|private
specifier|static
specifier|final
name|String
name|GET_KEY_VERSIONS
init|=
literal|"GET_KEY_VERSIONS"
decl_stmt|;
DECL|field|GET_METADATA
specifier|private
specifier|static
specifier|final
name|String
name|GET_METADATA
init|=
literal|"GET_METADATA"
decl_stmt|;
DECL|field|provider
specifier|private
name|KeyProvider
name|provider
decl_stmt|;
DECL|method|KMS ()
specifier|public
name|KMS
parameter_list|()
throws|throws
name|Exception
block|{
name|provider
operator|=
name|KMSWebApp
operator|.
name|getKeyProvider
argument_list|()
expr_stmt|;
block|}
DECL|method|getPrincipal (SecurityContext securityContext)
specifier|private
specifier|static
name|Principal
name|getPrincipal
parameter_list|(
name|SecurityContext
name|securityContext
parameter_list|)
throws|throws
name|AuthenticationException
block|{
name|Principal
name|user
init|=
name|securityContext
operator|.
name|getUserPrincipal
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|AuthenticationException
argument_list|(
literal|"User must be authenticated"
argument_list|)
throw|;
block|}
return|return
name|user
return|;
block|}
DECL|method|assertAccess (KMSACLs.Type aclType, Principal principal, String operation, String key)
specifier|private
specifier|static
name|void
name|assertAccess
parameter_list|(
name|KMSACLs
operator|.
name|Type
name|aclType
parameter_list|,
name|Principal
name|principal
parameter_list|,
name|String
name|operation
parameter_list|,
name|String
name|key
parameter_list|)
throws|throws
name|AccessControlException
block|{
if|if
condition|(
operator|!
name|KMSWebApp
operator|.
name|getACLs
argument_list|()
operator|.
name|hasAccess
argument_list|(
name|aclType
argument_list|,
name|principal
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|KMSWebApp
operator|.
name|getUnauthorizedCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|KMSAudit
operator|.
name|unauthorized
argument_list|(
name|principal
argument_list|,
name|operation
argument_list|,
name|key
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|AuthorizationException
argument_list|(
name|MessageFormat
operator|.
name|format
argument_list|(
literal|"User:{0} not allowed to do ''{1}'' on ''{2}''"
argument_list|,
name|principal
operator|.
name|getName
argument_list|()
argument_list|,
name|operation
argument_list|,
name|key
argument_list|)
argument_list|)
throw|;
block|}
block|}
DECL|method|removeKeyMaterial ( KeyProvider.KeyVersion keyVersion)
specifier|private
specifier|static
name|KeyProvider
operator|.
name|KeyVersion
name|removeKeyMaterial
parameter_list|(
name|KeyProvider
operator|.
name|KeyVersion
name|keyVersion
parameter_list|)
block|{
return|return
operator|new
name|KMSClientProvider
operator|.
name|KMSKeyVersion
argument_list|(
name|keyVersion
operator|.
name|getVersionName
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|getKeyURI (String name)
specifier|private
specifier|static
name|URI
name|getKeyURI
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|URISyntaxException
block|{
return|return
operator|new
name|URI
argument_list|(
name|KMSRESTConstants
operator|.
name|SERVICE_VERSION
operator|+
literal|"/"
operator|+
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/"
operator|+
name|name
argument_list|)
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEYS_RESOURCE
argument_list|)
annotation|@
name|Consumes
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|createKey (@ontext SecurityContext securityContext, Map jsonKey)
specifier|public
name|Response
name|createKey
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
name|Map
name|jsonKey
parameter_list|)
throws|throws
name|Exception
block|{
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|String
name|name
init|=
operator|(
name|String
operator|)
name|jsonKey
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|NAME_FIELD
argument_list|)
decl_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
name|KMSRESTConstants
operator|.
name|NAME_FIELD
argument_list|)
expr_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|CREATE
argument_list|,
name|user
argument_list|,
name|CREATE_KEY
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|String
name|cipher
init|=
operator|(
name|String
operator|)
name|jsonKey
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|CIPHER_FIELD
argument_list|)
decl_stmt|;
name|String
name|material
init|=
operator|(
name|String
operator|)
name|jsonKey
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|MATERIAL_FIELD
argument_list|)
decl_stmt|;
name|int
name|length
init|=
operator|(
name|jsonKey
operator|.
name|containsKey
argument_list|(
name|KMSRESTConstants
operator|.
name|LENGTH_FIELD
argument_list|)
operator|)
condition|?
operator|(
name|Integer
operator|)
name|jsonKey
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|LENGTH_FIELD
argument_list|)
else|:
literal|0
decl_stmt|;
name|String
name|description
init|=
operator|(
name|String
operator|)
name|jsonKey
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|DESCRIPTION_FIELD
argument_list|)
decl_stmt|;
if|if
condition|(
name|material
operator|!=
literal|null
condition|)
block|{
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|SET_KEY_MATERIAL
argument_list|,
name|user
argument_list|,
name|CREATE_KEY
operator|+
literal|" with user provided material"
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
name|KeyProvider
operator|.
name|Options
name|options
init|=
operator|new
name|KeyProvider
operator|.
name|Options
argument_list|(
name|KMSWebApp
operator|.
name|getConfiguration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cipher
operator|!=
literal|null
condition|)
block|{
name|options
operator|.
name|setCipher
argument_list|(
name|cipher
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|length
operator|!=
literal|0
condition|)
block|{
name|options
operator|.
name|setBitLength
argument_list|(
name|length
argument_list|)
expr_stmt|;
block|}
name|options
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|KeyProvider
operator|.
name|KeyVersion
name|keyVersion
init|=
operator|(
name|material
operator|!=
literal|null
operator|)
condition|?
name|provider
operator|.
name|createKey
argument_list|(
name|name
argument_list|,
name|Base64
operator|.
name|decodeBase64
argument_list|(
name|material
argument_list|)
argument_list|,
name|options
argument_list|)
else|:
name|provider
operator|.
name|createKey
argument_list|(
name|name
argument_list|,
name|options
argument_list|)
decl_stmt|;
name|provider
operator|.
name|flush
argument_list|()
expr_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|CREATE_KEY
argument_list|,
name|name
argument_list|,
literal|"UserProvidedMaterial:"
operator|+
operator|(
name|material
operator|!=
literal|null
operator|)
operator|+
literal|" Description:"
operator|+
name|description
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|KMSWebApp
operator|.
name|getACLs
argument_list|()
operator|.
name|hasAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET
argument_list|,
name|user
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|keyVersion
operator|=
name|removeKeyMaterial
argument_list|(
name|keyVersion
argument_list|)
expr_stmt|;
block|}
name|Map
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|keyVersion
argument_list|)
decl_stmt|;
name|String
name|requestURL
init|=
name|KMSMDCFilter
operator|.
name|getURL
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
name|requestURL
operator|.
name|lastIndexOf
argument_list|(
name|KMSRESTConstants
operator|.
name|KEYS_RESOURCE
argument_list|)
decl_stmt|;
name|requestURL
operator|=
name|requestURL
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|idx
argument_list|)
expr_stmt|;
name|String
name|keyURL
init|=
name|requestURL
operator|+
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/"
operator|+
name|name
decl_stmt|;
return|return
name|Response
operator|.
name|created
argument_list|(
name|getKeyURI
argument_list|(
name|name
argument_list|)
argument_list|)
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|header
argument_list|(
literal|"Location"
argument_list|,
name|keyURL
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|DELETE
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}"
argument_list|)
DECL|method|deleteKey (@ontext SecurityContext securityContext, @PathParam(R) String name)
specifier|public
name|Response
name|deleteKey
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|DELETE
argument_list|,
name|user
argument_list|,
name|DELETE_KEY
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|provider
operator|.
name|deleteKey
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|provider
operator|.
name|flush
argument_list|()
expr_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|DELETE_KEY
argument_list|,
name|name
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|POST
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}"
argument_list|)
annotation|@
name|Consumes
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|rolloverKey (@ontext SecurityContext securityContext, @PathParam(R) String name, Map jsonMaterial)
specifier|public
name|Response
name|rolloverKey
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|,
name|Map
name|jsonMaterial
parameter_list|)
throws|throws
name|Exception
block|{
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|ROLLOVER
argument_list|,
name|user
argument_list|,
name|ROLL_NEW_VERSION
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|String
name|material
init|=
operator|(
name|String
operator|)
name|jsonMaterial
operator|.
name|get
argument_list|(
name|KMSRESTConstants
operator|.
name|MATERIAL_FIELD
argument_list|)
decl_stmt|;
if|if
condition|(
name|material
operator|!=
literal|null
condition|)
block|{
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|SET_KEY_MATERIAL
argument_list|,
name|user
argument_list|,
name|ROLL_NEW_VERSION
operator|+
literal|" with user provided material"
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
name|KeyProvider
operator|.
name|KeyVersion
name|keyVersion
init|=
operator|(
name|material
operator|!=
literal|null
operator|)
condition|?
name|provider
operator|.
name|rollNewVersion
argument_list|(
name|name
argument_list|,
name|Base64
operator|.
name|decodeBase64
argument_list|(
name|material
argument_list|)
argument_list|)
else|:
name|provider
operator|.
name|rollNewVersion
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|provider
operator|.
name|flush
argument_list|()
expr_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|ROLL_NEW_VERSION
argument_list|,
name|name
argument_list|,
literal|"UserProvidedMaterial:"
operator|+
operator|(
name|material
operator|!=
literal|null
operator|)
operator|+
literal|" NewVersion:"
operator|+
name|keyVersion
operator|.
name|getVersionName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|KMSWebApp
operator|.
name|getACLs
argument_list|()
operator|.
name|hasAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET
argument_list|,
name|user
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|keyVersion
operator|=
name|removeKeyMaterial
argument_list|(
name|keyVersion
argument_list|)
expr_stmt|;
block|}
name|Map
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|keyVersion
argument_list|)
decl_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEYS_METADATA_RESOURCE
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getKeysMetadata (@ontext SecurityContext securityContext, @QueryParam(KMSRESTConstants.KEY_OP) List<String> keyNamesList)
specifier|public
name|Response
name|getKeysMetadata
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_OP
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|keyNamesList
parameter_list|)
throws|throws
name|Exception
block|{
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|String
index|[]
name|keyNames
init|=
name|keyNamesList
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|keyNamesList
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|String
name|names
init|=
name|StringUtils
operator|.
name|arrayToString
argument_list|(
name|keyNames
argument_list|)
decl_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET_METADATA
argument_list|,
name|user
argument_list|,
name|GET_KEYS_METADATA
argument_list|,
name|names
argument_list|)
expr_stmt|;
name|KeyProvider
operator|.
name|Metadata
index|[]
name|keysMeta
init|=
name|provider
operator|.
name|getKeysMetadata
argument_list|(
name|keyNames
argument_list|)
decl_stmt|;
name|Object
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|keyNames
argument_list|,
name|keysMeta
argument_list|)
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_KEYS_METADATA
argument_list|,
name|names
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEYS_NAMES_RESOURCE
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getKeyNames (@ontext SecurityContext securityContext)
specifier|public
name|Response
name|getKeyNames
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|)
throws|throws
name|Exception
block|{
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET_KEYS
argument_list|,
name|user
argument_list|,
name|GET_KEYS
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|Object
name|json
init|=
name|provider
operator|.
name|getKeys
argument_list|()
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_KEYS
argument_list|,
literal|"*"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}"
argument_list|)
DECL|method|getKey (@ontext SecurityContext securityContext, @PathParam(R) String name)
specifier|public
name|Response
name|getKey
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getMetadata
argument_list|(
name|securityContext
argument_list|,
name|name
argument_list|)
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}/"
operator|+
name|KMSRESTConstants
operator|.
name|METADATA_SUB_RESOURCE
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getMetadata (@ontext SecurityContext securityContext, @PathParam(R) String name)
specifier|public
name|Response
name|getMetadata
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|KMSWebApp
operator|.
name|getAdminCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET_METADATA
argument_list|,
name|user
argument_list|,
name|GET_METADATA
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|Object
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|name
argument_list|,
name|provider
operator|.
name|getMetadata
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_METADATA
argument_list|,
name|name
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}/"
operator|+
name|KMSRESTConstants
operator|.
name|CURRENT_VERSION_SUB_RESOURCE
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getCurrentVersion (@ontext SecurityContext securityContext, @PathParam(R) String name)
specifier|public
name|Response
name|getCurrentVersion
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|KMSWebApp
operator|.
name|getKeyCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET
argument_list|,
name|user
argument_list|,
name|GET_CURRENT_KEY
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|Object
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|provider
operator|.
name|getCurrentKey
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_CURRENT_KEY
argument_list|,
name|name
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_VERSION_RESOURCE
operator|+
literal|"/{versionName:.*}"
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getKeyVersion (@ontext SecurityContext securityContext, @PathParam(R) String versionName)
specifier|public
name|Response
name|getKeyVersion
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"versionName"
argument_list|)
name|String
name|versionName
parameter_list|)
throws|throws
name|Exception
block|{
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|versionName
argument_list|,
literal|"versionName"
argument_list|)
expr_stmt|;
name|KMSWebApp
operator|.
name|getKeyCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET
argument_list|,
name|user
argument_list|,
name|GET_KEY_VERSION
argument_list|,
name|versionName
argument_list|)
expr_stmt|;
name|Object
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|provider
operator|.
name|getKeyVersion
argument_list|(
name|versionName
argument_list|)
argument_list|)
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_KEY_VERSION
argument_list|,
name|versionName
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|GET
annotation|@
name|Path
argument_list|(
name|KMSRESTConstants
operator|.
name|KEY_RESOURCE
operator|+
literal|"/{name:.*}/"
operator|+
name|KMSRESTConstants
operator|.
name|VERSIONS_SUB_RESOURCE
argument_list|)
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
DECL|method|getKeyVersions (@ontext SecurityContext securityContext, @PathParam(R) String name)
specifier|public
name|Response
name|getKeyVersions
parameter_list|(
annotation|@
name|Context
name|SecurityContext
name|securityContext
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|Principal
name|user
init|=
name|getPrincipal
argument_list|(
name|securityContext
argument_list|)
decl_stmt|;
name|KMSClientProvider
operator|.
name|checkNotEmpty
argument_list|(
name|name
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|KMSWebApp
operator|.
name|getKeyCallsMeter
argument_list|()
operator|.
name|mark
argument_list|()
expr_stmt|;
name|assertAccess
argument_list|(
name|KMSACLs
operator|.
name|Type
operator|.
name|GET
argument_list|,
name|user
argument_list|,
name|GET_KEY_VERSIONS
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|Object
name|json
init|=
name|KMSServerJSONUtils
operator|.
name|toJSON
argument_list|(
name|provider
operator|.
name|getKeyVersions
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
name|KMSAudit
operator|.
name|ok
argument_list|(
name|user
argument_list|,
name|GET_KEY_VERSIONS
argument_list|,
name|name
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|type
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
operator|.
name|entity
argument_list|(
name|json
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

