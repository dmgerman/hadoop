begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.crypto.key.kms.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
operator|.
name|kms
operator|.
name|server
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Test for {@link KMSMDCFilter}.  *  */
end_comment

begin_class
DECL|class|TestKMSMDCFilter
specifier|public
class|class
name|TestKMSMDCFilter
block|{
DECL|field|REMOTE_ADDRESS
specifier|private
specifier|static
specifier|final
name|String
name|REMOTE_ADDRESS
init|=
literal|"192.168.100.100"
decl_stmt|;
DECL|field|URL
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"/admin"
decl_stmt|;
DECL|field|METHOD
specifier|private
specifier|static
specifier|final
name|String
name|METHOD
init|=
literal|"GET"
decl_stmt|;
DECL|field|filter
specifier|private
name|KMSMDCFilter
name|filter
decl_stmt|;
DECL|field|httpRequest
specifier|private
name|HttpServletRequest
name|httpRequest
decl_stmt|;
DECL|field|httpResponse
specifier|private
name|HttpServletResponse
name|httpResponse
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|filter
operator|=
operator|new
name|KMSMDCFilter
argument_list|()
expr_stmt|;
name|httpRequest
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
expr_stmt|;
name|httpResponse
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
expr_stmt|;
name|KMSMDCFilter
operator|.
name|setContext
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFilter ()
specifier|public
name|void
name|testFilter
parameter_list|()
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|when
argument_list|(
name|httpRequest
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|METHOD
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|httpRequest
operator|.
name|getRequestURL
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|StringBuffer
argument_list|(
name|URL
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|httpRequest
operator|.
name|getRemoteAddr
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|REMOTE_ADDRESS
argument_list|)
expr_stmt|;
name|FilterChain
name|filterChain
init|=
operator|new
name|FilterChain
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|assertEquals
argument_list|(
literal|"filter.remoteClientAddress"
argument_list|,
name|REMOTE_ADDRESS
argument_list|,
name|KMSMDCFilter
operator|.
name|getRemoteClientAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"filter.method"
argument_list|,
name|METHOD
argument_list|,
name|KMSMDCFilter
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"filter.url"
argument_list|,
name|URL
argument_list|,
name|KMSMDCFilter
operator|.
name|getURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|checkMDCValuesAreEmpty
argument_list|()
expr_stmt|;
name|filter
operator|.
name|doFilter
argument_list|(
name|httpRequest
argument_list|,
name|httpResponse
argument_list|,
name|filterChain
argument_list|)
expr_stmt|;
name|checkMDCValuesAreEmpty
argument_list|()
expr_stmt|;
block|}
DECL|method|checkMDCValuesAreEmpty ()
specifier|private
name|void
name|checkMDCValuesAreEmpty
parameter_list|()
block|{
name|assertNull
argument_list|(
literal|"getRemoteClientAddress"
argument_list|,
name|KMSMDCFilter
operator|.
name|getRemoteClientAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"getMethod"
argument_list|,
name|KMSMDCFilter
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"getURL"
argument_list|,
name|KMSMDCFilter
operator|.
name|getURL
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"getUgi"
argument_list|,
name|KMSMDCFilter
operator|.
name|getUgi
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

