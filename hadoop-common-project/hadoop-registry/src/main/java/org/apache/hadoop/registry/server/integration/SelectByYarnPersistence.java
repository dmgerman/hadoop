begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.registry.server.integration
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|server
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|types
operator|.
name|RegistryPathStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|types
operator|.
name|ServiceRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|client
operator|.
name|types
operator|.
name|yarn
operator|.
name|YarnRegistryAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|registry
operator|.
name|server
operator|.
name|services
operator|.
name|RegistryAdminService
import|;
end_import

begin_comment
comment|/**  * Select an entry by the YARN persistence policy  */
end_comment

begin_class
DECL|class|SelectByYarnPersistence
specifier|public
class|class
name|SelectByYarnPersistence
implements|implements
name|RegistryAdminService
operator|.
name|NodeSelector
block|{
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|field|targetPolicy
specifier|private
specifier|final
name|String
name|targetPolicy
decl_stmt|;
DECL|method|SelectByYarnPersistence (String id, String targetPolicy)
specifier|public
name|SelectByYarnPersistence
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|targetPolicy
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkArgument
argument_list|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|id
argument_list|)
argument_list|,
literal|"id"
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
operator|!
name|StringUtils
operator|.
name|isEmpty
argument_list|(
name|targetPolicy
argument_list|)
argument_list|,
literal|"targetPolicy"
argument_list|)
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|targetPolicy
operator|=
name|targetPolicy
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|shouldSelect (String path, RegistryPathStatus registryPathStatus, ServiceRecord serviceRecord)
specifier|public
name|boolean
name|shouldSelect
parameter_list|(
name|String
name|path
parameter_list|,
name|RegistryPathStatus
name|registryPathStatus
parameter_list|,
name|ServiceRecord
name|serviceRecord
parameter_list|)
block|{
name|String
name|policy
init|=
name|serviceRecord
operator|.
name|get
argument_list|(
name|YarnRegistryAttributes
operator|.
name|YARN_PERSISTENCE
argument_list|,
literal|""
argument_list|)
decl_stmt|;
return|return
name|id
operator|.
name|equals
argument_list|(
name|serviceRecord
operator|.
name|get
argument_list|(
name|YarnRegistryAttributes
operator|.
name|YARN_ID
argument_list|,
literal|""
argument_list|)
argument_list|)
operator|&&
operator|(
name|targetPolicy
operator|.
name|equals
argument_list|(
name|policy
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"Select by ID %s and policy %s: {}"
argument_list|,
name|id
argument_list|,
name|targetPolicy
argument_list|)
return|;
block|}
block|}
end_class

end_unit

