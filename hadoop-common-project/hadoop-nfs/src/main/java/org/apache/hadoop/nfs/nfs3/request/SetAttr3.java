begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.nfs.nfs3.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|NfsTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_comment
comment|/**  * SetAttr3 contains the file attributes that can be set from the client. The  * fields are the same as the similarly named fields in the NFS3Attributes  * structure.  */
end_comment

begin_class
DECL|class|SetAttr3
specifier|public
class|class
name|SetAttr3
block|{
comment|// Options for time stamp change
DECL|field|TIME_DONT_CHANGE
specifier|public
specifier|static
specifier|final
name|int
name|TIME_DONT_CHANGE
init|=
literal|0
decl_stmt|;
DECL|field|TIME_SET_TO_SERVER_TIME
specifier|public
specifier|static
specifier|final
name|int
name|TIME_SET_TO_SERVER_TIME
init|=
literal|1
decl_stmt|;
DECL|field|TIME_SET_TO_CLIENT_TIME
specifier|public
specifier|static
specifier|final
name|int
name|TIME_SET_TO_CLIENT_TIME
init|=
literal|2
decl_stmt|;
DECL|field|mode
specifier|private
name|int
name|mode
decl_stmt|;
DECL|field|uid
specifier|private
name|int
name|uid
decl_stmt|;
DECL|field|gid
specifier|private
name|int
name|gid
decl_stmt|;
DECL|field|size
specifier|private
name|long
name|size
decl_stmt|;
DECL|field|atime
specifier|private
name|NfsTime
name|atime
decl_stmt|;
DECL|field|mtime
specifier|private
name|NfsTime
name|mtime
decl_stmt|;
DECL|field|updateFields
specifier|private
name|EnumSet
argument_list|<
name|SetAttrField
argument_list|>
name|updateFields
decl_stmt|;
DECL|enum|SetAttrField
specifier|public
enum|enum
name|SetAttrField
block|{
DECL|enumConstant|MODE
DECL|enumConstant|UID
DECL|enumConstant|GID
DECL|enumConstant|SIZE
DECL|enumConstant|ATIME
DECL|enumConstant|MTIME
name|MODE
block|,
name|UID
block|,
name|GID
block|,
name|SIZE
block|,
name|ATIME
block|,
name|MTIME
block|}
empty_stmt|;
DECL|method|SetAttr3 ()
specifier|public
name|SetAttr3
parameter_list|()
block|{
name|mode
operator|=
literal|0
expr_stmt|;
name|uid
operator|=
literal|0
expr_stmt|;
name|gid
operator|=
literal|0
expr_stmt|;
name|size
operator|=
literal|0
expr_stmt|;
name|updateFields
operator|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|SetAttrField
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|SetAttr3 (int mode, int uid, int gid, long size, NfsTime atime, NfsTime mtime, EnumSet<SetAttrField> updateFields)
specifier|public
name|SetAttr3
parameter_list|(
name|int
name|mode
parameter_list|,
name|int
name|uid
parameter_list|,
name|int
name|gid
parameter_list|,
name|long
name|size
parameter_list|,
name|NfsTime
name|atime
parameter_list|,
name|NfsTime
name|mtime
parameter_list|,
name|EnumSet
argument_list|<
name|SetAttrField
argument_list|>
name|updateFields
parameter_list|)
block|{
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|this
operator|.
name|uid
operator|=
name|uid
expr_stmt|;
name|this
operator|.
name|gid
operator|=
name|gid
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|updateFields
operator|=
name|updateFields
expr_stmt|;
block|}
DECL|method|getMode ()
specifier|public
name|int
name|getMode
parameter_list|()
block|{
return|return
name|mode
return|;
block|}
DECL|method|getUid ()
specifier|public
name|int
name|getUid
parameter_list|()
block|{
return|return
name|uid
return|;
block|}
DECL|method|getGid ()
specifier|public
name|int
name|getGid
parameter_list|()
block|{
return|return
name|gid
return|;
block|}
DECL|method|setGid (int gid)
specifier|public
name|void
name|setGid
parameter_list|(
name|int
name|gid
parameter_list|)
block|{
name|this
operator|.
name|gid
operator|=
name|gid
expr_stmt|;
block|}
DECL|method|getSize ()
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
DECL|method|getAtime ()
specifier|public
name|NfsTime
name|getAtime
parameter_list|()
block|{
return|return
name|atime
return|;
block|}
DECL|method|getMtime ()
specifier|public
name|NfsTime
name|getMtime
parameter_list|()
block|{
return|return
name|mtime
return|;
block|}
DECL|method|getUpdateFields ()
specifier|public
name|EnumSet
argument_list|<
name|SetAttrField
argument_list|>
name|getUpdateFields
parameter_list|()
block|{
return|return
name|updateFields
return|;
block|}
DECL|method|setUpdateFields (EnumSet<SetAttrField> updateFields)
specifier|public
name|void
name|setUpdateFields
parameter_list|(
name|EnumSet
argument_list|<
name|SetAttrField
argument_list|>
name|updateFields
parameter_list|)
block|{
name|this
operator|.
name|updateFields
operator|=
name|updateFields
expr_stmt|;
block|}
DECL|method|serialize (XDR xdr)
specifier|public
name|void
name|serialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
block|{
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|MODE
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|UID
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|uid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|GID
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|gid
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|SIZE
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeLongAsHyper
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|ATIME
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|atime
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|updateFields
operator|.
name|contains
argument_list|(
name|SetAttrField
operator|.
name|MTIME
argument_list|)
condition|)
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mtime
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|deserialize (XDR xdr)
specifier|public
name|void
name|deserialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
block|{
if|if
condition|(
name|xdr
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|mode
operator|=
name|xdr
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|MODE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xdr
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|uid
operator|=
name|xdr
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|UID
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xdr
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|gid
operator|=
name|xdr
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|GID
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xdr
operator|.
name|readBoolean
argument_list|()
condition|)
block|{
name|size
operator|=
name|xdr
operator|.
name|readHyper
argument_list|()
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|SIZE
argument_list|)
expr_stmt|;
block|}
name|int
name|timeSetHow
init|=
name|xdr
operator|.
name|readInt
argument_list|()
decl_stmt|;
if|if
condition|(
name|timeSetHow
operator|==
name|TIME_SET_TO_CLIENT_TIME
condition|)
block|{
name|atime
operator|=
name|NfsTime
operator|.
name|deserialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|ATIME
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|timeSetHow
operator|==
name|TIME_SET_TO_SERVER_TIME
condition|)
block|{
name|atime
operator|=
operator|new
name|NfsTime
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|ATIME
argument_list|)
expr_stmt|;
block|}
name|timeSetHow
operator|=
name|xdr
operator|.
name|readInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|timeSetHow
operator|==
name|TIME_SET_TO_CLIENT_TIME
condition|)
block|{
name|mtime
operator|=
name|NfsTime
operator|.
name|deserialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|MTIME
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|timeSetHow
operator|==
name|TIME_SET_TO_SERVER_TIME
condition|)
block|{
name|mtime
operator|=
operator|new
name|NfsTime
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|updateFields
operator|.
name|add
argument_list|(
name|SetAttrField
operator|.
name|MTIME
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

