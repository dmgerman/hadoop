begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.nfs.nfs3.response
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|response
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|FileHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|Nfs3FileAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|Nfs3Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_comment
comment|/**  * READDIRPLUS3 Response  */
end_comment

begin_class
DECL|class|READDIRPLUS3Response
specifier|public
class|class
name|READDIRPLUS3Response
extends|extends
name|NFS3Response
block|{
DECL|field|postOpDirAttr
specifier|private
name|Nfs3FileAttributes
name|postOpDirAttr
decl_stmt|;
DECL|field|cookieVerf
specifier|private
specifier|final
name|long
name|cookieVerf
decl_stmt|;
DECL|field|dirListPlus
specifier|private
specifier|final
name|DirListPlus3
name|dirListPlus
decl_stmt|;
DECL|class|EntryPlus3
specifier|public
specifier|static
class|class
name|EntryPlus3
block|{
DECL|field|fileId
specifier|private
specifier|final
name|long
name|fileId
decl_stmt|;
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|cookie
specifier|private
specifier|final
name|long
name|cookie
decl_stmt|;
DECL|field|nameAttr
specifier|private
specifier|final
name|Nfs3FileAttributes
name|nameAttr
decl_stmt|;
DECL|field|objFileHandle
specifier|private
specifier|final
name|FileHandle
name|objFileHandle
decl_stmt|;
DECL|method|EntryPlus3 (long fileId, String name, long cookie, Nfs3FileAttributes nameAttr, FileHandle objFileHandle)
specifier|public
name|EntryPlus3
parameter_list|(
name|long
name|fileId
parameter_list|,
name|String
name|name
parameter_list|,
name|long
name|cookie
parameter_list|,
name|Nfs3FileAttributes
name|nameAttr
parameter_list|,
name|FileHandle
name|objFileHandle
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|cookie
operator|=
name|cookie
expr_stmt|;
name|this
operator|.
name|nameAttr
operator|=
name|nameAttr
expr_stmt|;
name|this
operator|.
name|objFileHandle
operator|=
name|objFileHandle
expr_stmt|;
block|}
DECL|method|seralize (XDR xdr)
name|void
name|seralize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
block|{
name|xdr
operator|.
name|writeLongAsHyper
argument_list|(
name|fileId
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeString
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeLongAsHyper
argument_list|(
name|cookie
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|nameAttr
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|objFileHandle
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|DirListPlus3
specifier|public
specifier|static
class|class
name|DirListPlus3
block|{
DECL|field|entries
name|List
argument_list|<
name|EntryPlus3
argument_list|>
name|entries
decl_stmt|;
DECL|field|eof
name|boolean
name|eof
decl_stmt|;
DECL|method|DirListPlus3 (EntryPlus3[] entries, boolean eof)
specifier|public
name|DirListPlus3
parameter_list|(
name|EntryPlus3
index|[]
name|entries
parameter_list|,
name|boolean
name|eof
parameter_list|)
block|{
name|this
operator|.
name|entries
operator|=
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|entries
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|eof
operator|=
name|eof
expr_stmt|;
block|}
DECL|method|getEntries ()
name|List
argument_list|<
name|EntryPlus3
argument_list|>
name|getEntries
parameter_list|()
block|{
return|return
name|entries
return|;
block|}
DECL|method|getEof ()
name|boolean
name|getEof
parameter_list|()
block|{
return|return
name|eof
return|;
block|}
block|}
DECL|method|READDIRPLUS3Response (int status)
specifier|public
name|READDIRPLUS3Response
parameter_list|(
name|int
name|status
parameter_list|)
block|{
name|this
argument_list|(
name|status
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|READDIRPLUS3Response (int status, Nfs3FileAttributes postOpDirAttr, final long cookieVerf, final DirListPlus3 dirListPlus)
specifier|public
name|READDIRPLUS3Response
parameter_list|(
name|int
name|status
parameter_list|,
name|Nfs3FileAttributes
name|postOpDirAttr
parameter_list|,
specifier|final
name|long
name|cookieVerf
parameter_list|,
specifier|final
name|DirListPlus3
name|dirListPlus
parameter_list|)
block|{
name|super
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|this
operator|.
name|postOpDirAttr
operator|=
name|postOpDirAttr
expr_stmt|;
name|this
operator|.
name|cookieVerf
operator|=
name|cookieVerf
expr_stmt|;
name|this
operator|.
name|dirListPlus
operator|=
name|dirListPlus
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|send (XDR out, int xid)
specifier|public
name|XDR
name|send
parameter_list|(
name|XDR
name|out
parameter_list|,
name|int
name|xid
parameter_list|)
block|{
name|super
operator|.
name|send
argument_list|(
name|out
argument_list|,
name|xid
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// attributes follow
if|if
condition|(
name|postOpDirAttr
operator|==
literal|null
condition|)
block|{
name|postOpDirAttr
operator|=
operator|new
name|Nfs3FileAttributes
argument_list|()
expr_stmt|;
block|}
name|postOpDirAttr
operator|.
name|serialize
argument_list|(
name|out
argument_list|)
expr_stmt|;
if|if
condition|(
name|getStatus
argument_list|()
operator|==
name|Nfs3Status
operator|.
name|NFS3_OK
condition|)
block|{
name|out
operator|.
name|writeLongAsHyper
argument_list|(
name|cookieVerf
argument_list|)
expr_stmt|;
for|for
control|(
name|EntryPlus3
name|f
range|:
name|dirListPlus
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// next
name|f
operator|.
name|seralize
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|writeBoolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|dirListPlus
operator|.
name|getEof
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|out
return|;
block|}
block|}
end_class

end_unit

