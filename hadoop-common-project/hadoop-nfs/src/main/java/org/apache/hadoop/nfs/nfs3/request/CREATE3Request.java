begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.nfs.nfs3.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|FileHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|Nfs3Constant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_comment
comment|/**  * CREATE3 Request  */
end_comment

begin_class
DECL|class|CREATE3Request
specifier|public
class|class
name|CREATE3Request
extends|extends
name|RequestWithHandle
block|{
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|mode
specifier|private
specifier|final
name|int
name|mode
decl_stmt|;
DECL|field|objAttr
specifier|private
specifier|final
name|SetAttr3
name|objAttr
decl_stmt|;
DECL|field|verf
specifier|private
name|long
name|verf
init|=
literal|0
decl_stmt|;
DECL|method|CREATE3Request (FileHandle handle, String name, int mode, SetAttr3 objAttr, long verf)
specifier|public
name|CREATE3Request
parameter_list|(
name|FileHandle
name|handle
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|mode
parameter_list|,
name|SetAttr3
name|objAttr
parameter_list|,
name|long
name|verf
parameter_list|)
block|{
name|super
argument_list|(
name|handle
argument_list|)
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|this
operator|.
name|objAttr
operator|=
name|objAttr
expr_stmt|;
name|this
operator|.
name|verf
operator|=
name|verf
expr_stmt|;
block|}
DECL|method|deserialize (XDR xdr)
specifier|public
specifier|static
name|CREATE3Request
name|deserialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
throws|throws
name|IOException
block|{
name|FileHandle
name|handle
init|=
name|readHandle
argument_list|(
name|xdr
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|xdr
operator|.
name|readString
argument_list|()
decl_stmt|;
name|int
name|mode
init|=
name|xdr
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|SetAttr3
name|objAttr
init|=
operator|new
name|SetAttr3
argument_list|()
decl_stmt|;
name|long
name|verf
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
name|mode
operator|==
name|Nfs3Constant
operator|.
name|CREATE_UNCHECKED
operator|)
operator|||
operator|(
name|mode
operator|==
name|Nfs3Constant
operator|.
name|CREATE_GUARDED
operator|)
condition|)
block|{
name|objAttr
operator|.
name|deserialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mode
operator|==
name|Nfs3Constant
operator|.
name|CREATE_EXCLUSIVE
condition|)
block|{
name|verf
operator|=
name|xdr
operator|.
name|readHyper
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Wrong create mode:"
operator|+
name|mode
argument_list|)
throw|;
block|}
return|return
operator|new
name|CREATE3Request
argument_list|(
name|handle
argument_list|,
name|name
argument_list|,
name|mode
argument_list|,
name|objAttr
argument_list|,
name|verf
argument_list|)
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getMode ()
specifier|public
name|int
name|getMode
parameter_list|()
block|{
return|return
name|mode
return|;
block|}
DECL|method|getObjAttr ()
specifier|public
name|SetAttr3
name|getObjAttr
parameter_list|()
block|{
return|return
name|objAttr
return|;
block|}
DECL|method|getVerf ()
specifier|public
name|long
name|getVerf
parameter_list|()
block|{
return|return
name|verf
return|;
block|}
annotation|@
name|Override
DECL|method|serialize (XDR xdr)
specifier|public
name|void
name|serialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
block|{
name|handle
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|name
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeFixedOpaque
argument_list|(
name|name
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
name|name
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|objAttr
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

