begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.nfs.nfs3.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|Charsets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|FileHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_comment
comment|/**  * RENAME3 Request  */
end_comment

begin_class
DECL|class|RENAME3Request
specifier|public
class|class
name|RENAME3Request
extends|extends
name|NFS3Request
block|{
DECL|field|fromDirHandle
specifier|private
specifier|final
name|FileHandle
name|fromDirHandle
decl_stmt|;
DECL|field|fromName
specifier|private
specifier|final
name|String
name|fromName
decl_stmt|;
DECL|field|toDirHandle
specifier|private
specifier|final
name|FileHandle
name|toDirHandle
decl_stmt|;
DECL|field|toName
specifier|private
specifier|final
name|String
name|toName
decl_stmt|;
DECL|method|deserialize (XDR xdr)
specifier|public
specifier|static
name|RENAME3Request
name|deserialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
throws|throws
name|IOException
block|{
name|FileHandle
name|fromDirHandle
init|=
name|readHandle
argument_list|(
name|xdr
argument_list|)
decl_stmt|;
name|String
name|fromName
init|=
name|xdr
operator|.
name|readString
argument_list|()
decl_stmt|;
name|FileHandle
name|toDirHandle
init|=
name|readHandle
argument_list|(
name|xdr
argument_list|)
decl_stmt|;
name|String
name|toName
init|=
name|xdr
operator|.
name|readString
argument_list|()
decl_stmt|;
return|return
operator|new
name|RENAME3Request
argument_list|(
name|fromDirHandle
argument_list|,
name|fromName
argument_list|,
name|toDirHandle
argument_list|,
name|toName
argument_list|)
return|;
block|}
DECL|method|RENAME3Request (FileHandle fromDirHandle, String fromName, FileHandle toDirHandle, String toName)
specifier|public
name|RENAME3Request
parameter_list|(
name|FileHandle
name|fromDirHandle
parameter_list|,
name|String
name|fromName
parameter_list|,
name|FileHandle
name|toDirHandle
parameter_list|,
name|String
name|toName
parameter_list|)
block|{
name|this
operator|.
name|fromDirHandle
operator|=
name|fromDirHandle
expr_stmt|;
name|this
operator|.
name|fromName
operator|=
name|fromName
expr_stmt|;
name|this
operator|.
name|toDirHandle
operator|=
name|toDirHandle
expr_stmt|;
name|this
operator|.
name|toName
operator|=
name|toName
expr_stmt|;
block|}
DECL|method|getFromDirHandle ()
specifier|public
name|FileHandle
name|getFromDirHandle
parameter_list|()
block|{
return|return
name|fromDirHandle
return|;
block|}
DECL|method|getFromName ()
specifier|public
name|String
name|getFromName
parameter_list|()
block|{
return|return
name|fromName
return|;
block|}
DECL|method|getToDirHandle ()
specifier|public
name|FileHandle
name|getToDirHandle
parameter_list|()
block|{
return|return
name|toDirHandle
return|;
block|}
DECL|method|getToName ()
specifier|public
name|String
name|getToName
parameter_list|()
block|{
return|return
name|toName
return|;
block|}
annotation|@
name|Override
DECL|method|serialize (XDR xdr)
specifier|public
name|void
name|serialize
parameter_list|(
name|XDR
name|xdr
parameter_list|)
block|{
name|fromDirHandle
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|fromName
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|UTF_8
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeFixedOpaque
argument_list|(
name|fromName
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
name|toDirHandle
operator|.
name|serialize
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeInt
argument_list|(
name|toName
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|UTF_8
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|xdr
operator|.
name|writeFixedOpaque
argument_list|(
name|toName
operator|.
name|getBytes
argument_list|(
name|Charsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

