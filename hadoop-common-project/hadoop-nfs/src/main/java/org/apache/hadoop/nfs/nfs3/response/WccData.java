begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.nfs.nfs3.response
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|response
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|nfs
operator|.
name|nfs3
operator|.
name|Nfs3FileAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_comment
comment|/**  * WccData saved information used by client for weak cache consistency  */
end_comment

begin_class
DECL|class|WccData
specifier|public
class|class
name|WccData
block|{
DECL|field|preOpAttr
specifier|private
name|WccAttr
name|preOpAttr
decl_stmt|;
DECL|field|postOpAttr
specifier|private
name|Nfs3FileAttributes
name|postOpAttr
decl_stmt|;
DECL|method|getPreOpAttr ()
specifier|public
name|WccAttr
name|getPreOpAttr
parameter_list|()
block|{
return|return
name|preOpAttr
return|;
block|}
DECL|method|setPreOpAttr (WccAttr preOpAttr)
specifier|public
name|void
name|setPreOpAttr
parameter_list|(
name|WccAttr
name|preOpAttr
parameter_list|)
block|{
name|this
operator|.
name|preOpAttr
operator|=
name|preOpAttr
expr_stmt|;
block|}
DECL|method|getPostOpAttr ()
specifier|public
name|Nfs3FileAttributes
name|getPostOpAttr
parameter_list|()
block|{
return|return
name|postOpAttr
return|;
block|}
DECL|method|setPostOpAttr (Nfs3FileAttributes postOpAttr)
specifier|public
name|void
name|setPostOpAttr
parameter_list|(
name|Nfs3FileAttributes
name|postOpAttr
parameter_list|)
block|{
name|this
operator|.
name|postOpAttr
operator|=
name|postOpAttr
expr_stmt|;
block|}
DECL|method|WccData (WccAttr preOpAttr, Nfs3FileAttributes postOpAttr)
specifier|public
name|WccData
parameter_list|(
name|WccAttr
name|preOpAttr
parameter_list|,
name|Nfs3FileAttributes
name|postOpAttr
parameter_list|)
block|{
name|this
operator|.
name|preOpAttr
operator|=
operator|(
name|preOpAttr
operator|==
literal|null
operator|)
condition|?
operator|new
name|WccAttr
argument_list|()
else|:
name|preOpAttr
expr_stmt|;
name|this
operator|.
name|postOpAttr
operator|=
operator|(
name|postOpAttr
operator|==
literal|null
operator|)
condition|?
operator|new
name|Nfs3FileAttributes
argument_list|()
else|:
name|postOpAttr
expr_stmt|;
block|}
DECL|method|serialize (XDR out)
specifier|public
name|void
name|serialize
parameter_list|(
name|XDR
name|out
parameter_list|)
block|{
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// attributes follow
name|preOpAttr
operator|.
name|serialize
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// attributes follow
name|postOpAttr
operator|.
name|serialize
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

