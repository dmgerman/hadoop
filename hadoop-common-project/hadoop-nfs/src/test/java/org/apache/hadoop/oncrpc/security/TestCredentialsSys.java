begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.oncrpc.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|security
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|XDR
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|oncrpc
operator|.
name|security
operator|.
name|CredentialsSys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test for {@link CredentialsSys}  */
end_comment

begin_class
DECL|class|TestCredentialsSys
specifier|public
class|class
name|TestCredentialsSys
block|{
annotation|@
name|Test
DECL|method|testReadWrite ()
specifier|public
name|void
name|testReadWrite
parameter_list|()
block|{
name|CredentialsSys
name|credential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|credential
operator|.
name|setUID
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setGID
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setStamp
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|XDR
name|xdr
init|=
operator|new
name|XDR
argument_list|()
decl_stmt|;
name|credential
operator|.
name|write
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|CredentialsSys
name|newCredential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|newCredential
operator|.
name|read
argument_list|(
name|xdr
operator|.
name|asReadOnlyWrap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|newCredential
operator|.
name|getUID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newCredential
operator|.
name|getGID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1234
argument_list|,
name|newCredential
operator|.
name|getStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHostNameNotMultipleOf4 ()
specifier|public
name|void
name|testHostNameNotMultipleOf4
parameter_list|()
block|{
name|CredentialsSys
name|credential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|credential
operator|.
name|setUID
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setGID
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setStamp
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setHostName
argument_list|(
literal|"hadoop-nfs"
argument_list|)
expr_stmt|;
name|XDR
name|xdr
init|=
operator|new
name|XDR
argument_list|()
decl_stmt|;
name|credential
operator|.
name|write
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|CredentialsSys
name|newCredential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|newCredential
operator|.
name|read
argument_list|(
name|xdr
operator|.
name|asReadOnlyWrap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|newCredential
operator|.
name|getUID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newCredential
operator|.
name|getGID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1234
argument_list|,
name|newCredential
operator|.
name|getStamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|32
argument_list|,
name|newCredential
operator|.
name|getCredentialLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHostNameMultipleOf4 ()
specifier|public
name|void
name|testHostNameMultipleOf4
parameter_list|()
block|{
name|CredentialsSys
name|credential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|credential
operator|.
name|setUID
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setGID
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setStamp
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|credential
operator|.
name|setHostName
argument_list|(
literal|"apachehadoop"
argument_list|)
expr_stmt|;
name|XDR
name|xdr
init|=
operator|new
name|XDR
argument_list|()
decl_stmt|;
name|credential
operator|.
name|write
argument_list|(
name|xdr
argument_list|)
expr_stmt|;
name|CredentialsSys
name|newCredential
init|=
operator|new
name|CredentialsSys
argument_list|()
decl_stmt|;
name|newCredential
operator|.
name|read
argument_list|(
name|xdr
operator|.
name|asReadOnlyWrap
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|newCredential
operator|.
name|getUID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newCredential
operator|.
name|getGID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1234
argument_list|,
name|newCredential
operator|.
name|getStamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|32
argument_list|,
name|newCredential
operator|.
name|getCredentialLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

