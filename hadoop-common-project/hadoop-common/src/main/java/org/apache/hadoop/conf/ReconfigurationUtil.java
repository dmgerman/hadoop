begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_class
DECL|class|ReconfigurationUtil
specifier|public
class|class
name|ReconfigurationUtil
block|{
DECL|class|PropertyChange
specifier|public
specifier|static
class|class
name|PropertyChange
block|{
DECL|field|prop
specifier|public
name|String
name|prop
decl_stmt|;
DECL|field|oldVal
specifier|public
name|String
name|oldVal
decl_stmt|;
DECL|field|newVal
specifier|public
name|String
name|newVal
decl_stmt|;
DECL|method|PropertyChange (String prop, String newVal, String oldVal)
specifier|public
name|PropertyChange
parameter_list|(
name|String
name|prop
parameter_list|,
name|String
name|newVal
parameter_list|,
name|String
name|oldVal
parameter_list|)
block|{
name|this
operator|.
name|prop
operator|=
name|prop
expr_stmt|;
name|this
operator|.
name|newVal
operator|=
name|newVal
expr_stmt|;
name|this
operator|.
name|oldVal
operator|=
name|oldVal
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|Collection
argument_list|<
name|PropertyChange
argument_list|>
DECL|method|getChangedProperties (Configuration newConf, Configuration oldConf)
name|getChangedProperties
parameter_list|(
name|Configuration
name|newConf
parameter_list|,
name|Configuration
name|oldConf
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|PropertyChange
argument_list|>
name|changes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|PropertyChange
argument_list|>
argument_list|()
decl_stmt|;
comment|// iterate over old configuration
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|oldEntry
range|:
name|oldConf
control|)
block|{
name|String
name|prop
init|=
name|oldEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|oldVal
init|=
name|oldEntry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|newVal
init|=
name|newConf
operator|.
name|getRaw
argument_list|(
name|prop
argument_list|)
decl_stmt|;
if|if
condition|(
name|newVal
operator|==
literal|null
operator|||
operator|!
name|newVal
operator|.
name|equals
argument_list|(
name|oldVal
argument_list|)
condition|)
block|{
name|changes
operator|.
name|put
argument_list|(
name|prop
argument_list|,
operator|new
name|PropertyChange
argument_list|(
name|prop
argument_list|,
name|newVal
argument_list|,
name|oldVal
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// now iterate over new configuration
comment|// (to look for properties not present in old conf)
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newEntry
range|:
name|newConf
control|)
block|{
name|String
name|prop
init|=
name|newEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|newVal
init|=
name|newEntry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|oldConf
operator|.
name|get
argument_list|(
name|prop
argument_list|)
operator|==
literal|null
condition|)
block|{
name|changes
operator|.
name|put
argument_list|(
name|prop
argument_list|,
operator|new
name|PropertyChange
argument_list|(
name|prop
argument_list|,
name|newVal
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|changes
operator|.
name|values
argument_list|()
return|;
block|}
DECL|method|parseChangedProperties ( Configuration newConf, Configuration oldConf)
specifier|public
name|Collection
argument_list|<
name|PropertyChange
argument_list|>
name|parseChangedProperties
parameter_list|(
name|Configuration
name|newConf
parameter_list|,
name|Configuration
name|oldConf
parameter_list|)
block|{
return|return
name|getChangedProperties
argument_list|(
name|newConf
argument_list|,
name|oldConf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

