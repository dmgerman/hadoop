begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|CallbackHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|Sasl
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|SaslException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|SaslServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|SaslServerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Class for dealing with caching SASL server factories.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"HDFS"
block|,
literal|"MapReduce"
block|}
argument_list|)
DECL|class|FastSaslServerFactory
specifier|public
class|class
name|FastSaslServerFactory
implements|implements
name|SaslServerFactory
block|{
DECL|field|factoryCache
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|SaslServerFactory
argument_list|>
argument_list|>
name|factoryCache
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|SaslServerFactory
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|FastSaslServerFactory (Map<String, ?> props)
specifier|public
name|FastSaslServerFactory
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|props
parameter_list|)
block|{
specifier|final
name|Enumeration
argument_list|<
name|SaslServerFactory
argument_list|>
name|factories
init|=
name|Sasl
operator|.
name|getSaslServerFactories
argument_list|()
decl_stmt|;
while|while
condition|(
name|factories
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|SaslServerFactory
name|factory
init|=
name|factories
operator|.
name|nextElement
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|mech
range|:
name|factory
operator|.
name|getMechanismNames
argument_list|(
name|props
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|factoryCache
operator|.
name|containsKey
argument_list|(
name|mech
argument_list|)
condition|)
block|{
name|factoryCache
operator|.
name|put
argument_list|(
name|mech
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|SaslServerFactory
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|factoryCache
operator|.
name|get
argument_list|(
name|mech
argument_list|)
operator|.
name|add
argument_list|(
name|factory
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|createSaslServer (String mechanism, String protocol, String serverName, Map<String, ?> props, CallbackHandler cbh)
specifier|public
name|SaslServer
name|createSaslServer
parameter_list|(
name|String
name|mechanism
parameter_list|,
name|String
name|protocol
parameter_list|,
name|String
name|serverName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|props
parameter_list|,
name|CallbackHandler
name|cbh
parameter_list|)
throws|throws
name|SaslException
block|{
name|SaslServer
name|saslServer
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|SaslServerFactory
argument_list|>
name|factories
init|=
name|factoryCache
operator|.
name|get
argument_list|(
name|mechanism
argument_list|)
decl_stmt|;
if|if
condition|(
name|factories
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|SaslServerFactory
name|factory
range|:
name|factories
control|)
block|{
name|saslServer
operator|=
name|factory
operator|.
name|createSaslServer
argument_list|(
name|mechanism
argument_list|,
name|protocol
argument_list|,
name|serverName
argument_list|,
name|props
argument_list|,
name|cbh
argument_list|)
expr_stmt|;
if|if
condition|(
name|saslServer
operator|!=
literal|null
condition|)
block|{
break|break;
block|}
block|}
block|}
return|return
name|saslServer
return|;
block|}
annotation|@
name|Override
DECL|method|getMechanismNames (Map<String, ?> props)
specifier|public
name|String
index|[]
name|getMechanismNames
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|props
parameter_list|)
block|{
return|return
name|factoryCache
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
block|}
end_class

end_unit

