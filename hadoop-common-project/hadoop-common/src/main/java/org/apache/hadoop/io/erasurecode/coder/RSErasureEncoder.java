begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.io.erasurecode.coder
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|coder
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|ECBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|ECBlockGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|JRSRawEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureEncoder
import|;
end_import

begin_comment
comment|/**  * Reed-Solomon erasure encoder that encodes a block group.  *  * It implements {@link ErasureEncoder}.  */
end_comment

begin_class
DECL|class|RSErasureEncoder
specifier|public
class|class
name|RSErasureEncoder
extends|extends
name|AbstractErasureEncoder
block|{
DECL|field|rawEncoder
specifier|private
name|RawErasureEncoder
name|rawEncoder
decl_stmt|;
annotation|@
name|Override
DECL|method|prepareEncodingStep (final ECBlockGroup blockGroup)
specifier|protected
name|ErasureCodingStep
name|prepareEncodingStep
parameter_list|(
specifier|final
name|ECBlockGroup
name|blockGroup
parameter_list|)
block|{
name|RawErasureEncoder
name|rawEncoder
init|=
name|checkCreateRSRawEncoder
argument_list|()
decl_stmt|;
name|ECBlock
index|[]
name|inputBlocks
init|=
name|getInputBlocks
argument_list|(
name|blockGroup
argument_list|)
decl_stmt|;
return|return
operator|new
name|ErasureEncodingStep
argument_list|(
name|inputBlocks
argument_list|,
name|getOutputBlocks
argument_list|(
name|blockGroup
argument_list|)
argument_list|,
name|rawEncoder
argument_list|)
return|;
block|}
DECL|method|checkCreateRSRawEncoder ()
specifier|private
name|RawErasureEncoder
name|checkCreateRSRawEncoder
parameter_list|()
block|{
if|if
condition|(
name|rawEncoder
operator|==
literal|null
condition|)
block|{
name|rawEncoder
operator|=
name|createRawEncoder
argument_list|(
name|CommonConfigurationKeys
operator|.
name|IO_ERASURECODE_CODEC_RS_RAWCODER_KEY
argument_list|)
expr_stmt|;
if|if
condition|(
name|rawEncoder
operator|==
literal|null
condition|)
block|{
name|rawEncoder
operator|=
operator|new
name|JRSRawEncoder
argument_list|()
expr_stmt|;
block|}
name|rawEncoder
operator|.
name|initialize
argument_list|(
name|getNumDataUnits
argument_list|()
argument_list|,
name|getNumParityUnits
argument_list|()
argument_list|,
name|getChunkSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|rawEncoder
return|;
block|}
annotation|@
name|Override
DECL|method|release ()
specifier|public
name|void
name|release
parameter_list|()
block|{
if|if
condition|(
name|rawEncoder
operator|!=
literal|null
condition|)
block|{
name|rawEncoder
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

