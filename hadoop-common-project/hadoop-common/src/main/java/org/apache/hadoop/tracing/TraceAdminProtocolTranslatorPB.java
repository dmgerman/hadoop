begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tracing
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtobufHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtocolTranslator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|AddSpanReceiverRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|AddSpanReceiverResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|ListSpanReceiversRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|ListSpanReceiversResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|ConfigPair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|RemoveSpanReceiverRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|TraceAdminPB
operator|.
name|SpanReceiverListInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tracing
operator|.
name|SpanReceiverInfo
operator|.
name|ConfigurationPair
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|TraceAdminProtocolTranslatorPB
specifier|public
class|class
name|TraceAdminProtocolTranslatorPB
implements|implements
name|TraceAdminProtocol
implements|,
name|ProtocolTranslator
implements|,
name|Closeable
block|{
DECL|field|rpcProxy
specifier|private
specifier|final
name|TraceAdminProtocolPB
name|rpcProxy
decl_stmt|;
DECL|method|TraceAdminProtocolTranslatorPB (TraceAdminProtocolPB rpcProxy)
specifier|public
name|TraceAdminProtocolTranslatorPB
parameter_list|(
name|TraceAdminProtocolPB
name|rpcProxy
parameter_list|)
block|{
name|this
operator|.
name|rpcProxy
operator|=
name|rpcProxy
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|RPC
operator|.
name|stopProxy
argument_list|(
name|rpcProxy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|listSpanReceivers ()
specifier|public
name|SpanReceiverInfo
index|[]
name|listSpanReceivers
parameter_list|()
throws|throws
name|IOException
block|{
name|ArrayList
argument_list|<
name|SpanReceiverInfo
argument_list|>
name|infos
init|=
operator|new
name|ArrayList
argument_list|<
name|SpanReceiverInfo
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|ListSpanReceiversRequestProto
name|req
init|=
name|ListSpanReceiversRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|ListSpanReceiversResponseProto
name|resp
init|=
name|rpcProxy
operator|.
name|listSpanReceivers
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
decl_stmt|;
for|for
control|(
name|SpanReceiverListInfo
name|info
range|:
name|resp
operator|.
name|getDescriptionsList
argument_list|()
control|)
block|{
name|infos
operator|.
name|add
argument_list|(
operator|new
name|SpanReceiverInfo
argument_list|(
name|info
operator|.
name|getId
argument_list|()
argument_list|,
name|info
operator|.
name|getClassName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|infos
operator|.
name|toArray
argument_list|(
operator|new
name|SpanReceiverInfo
index|[
name|infos
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addSpanReceiver (SpanReceiverInfo info)
specifier|public
name|long
name|addSpanReceiver
parameter_list|(
name|SpanReceiverInfo
name|info
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|AddSpanReceiverRequestProto
operator|.
name|Builder
name|bld
init|=
name|AddSpanReceiverRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|bld
operator|.
name|setClassName
argument_list|(
name|info
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ConfigurationPair
name|configPair
range|:
name|info
operator|.
name|configPairs
control|)
block|{
name|ConfigPair
name|tuple
init|=
name|ConfigPair
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
name|configPair
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|setValue
argument_list|(
name|configPair
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|bld
operator|.
name|addConfig
argument_list|(
name|tuple
argument_list|)
expr_stmt|;
block|}
name|AddSpanReceiverResponseProto
name|resp
init|=
name|rpcProxy
operator|.
name|addSpanReceiver
argument_list|(
literal|null
argument_list|,
name|bld
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|resp
operator|.
name|getId
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeSpanReceiver (long spanReceiverId)
specifier|public
name|void
name|removeSpanReceiver
parameter_list|(
name|long
name|spanReceiverId
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|RemoveSpanReceiverRequestProto
name|req
init|=
name|RemoveSpanReceiverRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setId
argument_list|(
name|spanReceiverId
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rpcProxy
operator|.
name|removeSpanReceiver
argument_list|(
literal|null
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
throw|throw
name|ProtobufHelper
operator|.
name|getRemoteException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getUnderlyingProxyObject ()
specifier|public
name|Object
name|getUnderlyingProxyObject
parameter_list|()
block|{
return|return
name|rpcProxy
return|;
block|}
block|}
end_class

end_unit

