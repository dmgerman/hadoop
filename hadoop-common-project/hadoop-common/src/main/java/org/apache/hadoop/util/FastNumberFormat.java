begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
package|;
end_package

begin_comment
comment|/**  * Fast thread-safe version of NumberFormat  */
end_comment

begin_class
DECL|class|FastNumberFormat
specifier|public
class|class
name|FastNumberFormat
block|{
DECL|method|format (StringBuilder sb, long value, int minimumDigits)
specifier|public
specifier|static
name|StringBuilder
name|format
parameter_list|(
name|StringBuilder
name|sb
parameter_list|,
name|long
name|value
parameter_list|,
name|int
name|minimumDigits
parameter_list|)
block|{
if|if
condition|(
name|value
operator|<
literal|0
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'-'
argument_list|)
expr_stmt|;
name|value
operator|=
operator|-
name|value
expr_stmt|;
block|}
name|long
name|tmp
init|=
name|value
decl_stmt|;
do|do
block|{
name|tmp
operator|/=
literal|10
expr_stmt|;
block|}
do|while
condition|(
operator|--
name|minimumDigits
operator|>
literal|0
operator|&&
name|tmp
operator|>
literal|0
condition|)
do|;
for|for
control|(
name|int
name|i
init|=
name|minimumDigits
init|;
name|i
operator|>
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|sb
return|;
block|}
block|}
end_class

end_unit

