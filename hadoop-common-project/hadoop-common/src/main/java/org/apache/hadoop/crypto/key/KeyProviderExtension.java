begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.crypto.key
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
operator|.
name|key
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * This is a utility class used to extend the functionality of KeyProvider, that  * takes a KeyProvider and an Extension. It implements all the required methods  * of the KeyProvider by delegating it to the provided KeyProvider.  */
end_comment

begin_class
DECL|class|KeyProviderExtension
specifier|public
specifier|abstract
class|class
name|KeyProviderExtension
parameter_list|<
name|E
extends|extends
name|KeyProviderExtension
operator|.
name|Extension
parameter_list|>
extends|extends
name|KeyProvider
block|{
comment|/**    * A marker interface for the KeyProviderExtension subclass implement.    */
DECL|interface|Extension
specifier|public
specifier|static
interface|interface
name|Extension
block|{   }
DECL|field|keyProvider
specifier|private
name|KeyProvider
name|keyProvider
decl_stmt|;
DECL|field|extension
specifier|private
name|E
name|extension
decl_stmt|;
DECL|method|KeyProviderExtension (KeyProvider keyProvider, E extensions)
specifier|public
name|KeyProviderExtension
parameter_list|(
name|KeyProvider
name|keyProvider
parameter_list|,
name|E
name|extensions
parameter_list|)
block|{
name|this
operator|.
name|keyProvider
operator|=
name|keyProvider
expr_stmt|;
name|this
operator|.
name|extension
operator|=
name|extensions
expr_stmt|;
block|}
DECL|method|getExtension ()
specifier|protected
name|E
name|getExtension
parameter_list|()
block|{
return|return
name|extension
return|;
block|}
DECL|method|getKeyProvider ()
specifier|protected
name|KeyProvider
name|getKeyProvider
parameter_list|()
block|{
return|return
name|keyProvider
return|;
block|}
annotation|@
name|Override
DECL|method|isTransient ()
specifier|public
name|boolean
name|isTransient
parameter_list|()
block|{
return|return
name|keyProvider
operator|.
name|isTransient
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getKeysMetadata (String... names)
specifier|public
name|Metadata
index|[]
name|getKeysMetadata
parameter_list|(
name|String
modifier|...
name|names
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getKeysMetadata
argument_list|(
name|names
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentKey (String name)
specifier|public
name|KeyVersion
name|getCurrentKey
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getCurrentKey
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createKey (String name, Options options)
specifier|public
name|KeyVersion
name|createKey
parameter_list|(
name|String
name|name
parameter_list|,
name|Options
name|options
parameter_list|)
throws|throws
name|NoSuchAlgorithmException
throws|,
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|createKey
argument_list|(
name|name
argument_list|,
name|options
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|rollNewVersion (String name)
specifier|public
name|KeyVersion
name|rollNewVersion
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|NoSuchAlgorithmException
throws|,
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|rollNewVersion
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getKeyVersion (String versionName)
specifier|public
name|KeyVersion
name|getKeyVersion
parameter_list|(
name|String
name|versionName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getKeyVersion
argument_list|(
name|versionName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getKeys ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getKeys
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getKeys
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getKeyVersions (String name)
specifier|public
name|List
argument_list|<
name|KeyVersion
argument_list|>
name|getKeyVersions
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getKeyVersions
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getMetadata (String name)
specifier|public
name|Metadata
name|getMetadata
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|getMetadata
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createKey (String name, byte[] material, Options options)
specifier|public
name|KeyVersion
name|createKey
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
index|[]
name|material
parameter_list|,
name|Options
name|options
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|createKey
argument_list|(
name|name
argument_list|,
name|material
argument_list|,
name|options
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteKey (String name)
specifier|public
name|void
name|deleteKey
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|keyProvider
operator|.
name|deleteKey
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|rollNewVersion (String name, byte[] material)
specifier|public
name|KeyVersion
name|rollNewVersion
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
index|[]
name|material
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|keyProvider
operator|.
name|rollNewVersion
argument_list|(
name|name
argument_list|,
name|material
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|flush ()
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
name|keyProvider
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|": "
operator|+
name|keyProvider
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

