begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.authorize
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_class
DECL|class|ProxyServers
specifier|public
class|class
name|ProxyServers
block|{
DECL|field|CONF_HADOOP_PROXYSERVERS
specifier|public
specifier|static
specifier|final
name|String
name|CONF_HADOOP_PROXYSERVERS
init|=
literal|"hadoop.proxyservers"
decl_stmt|;
DECL|field|proxyServers
specifier|private
specifier|static
specifier|volatile
name|Collection
argument_list|<
name|String
argument_list|>
name|proxyServers
decl_stmt|;
DECL|method|refresh ()
specifier|public
specifier|static
name|void
name|refresh
parameter_list|()
block|{
name|refresh
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|refresh (Configuration conf)
specifier|public
specifier|static
name|void
name|refresh
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|Collection
argument_list|<
name|String
argument_list|>
name|tempServers
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|// trusted proxy servers such as http proxies
for|for
control|(
name|String
name|host
range|:
name|conf
operator|.
name|getTrimmedStrings
argument_list|(
name|CONF_HADOOP_PROXYSERVERS
argument_list|)
control|)
block|{
name|InetSocketAddress
name|addr
init|=
operator|new
name|InetSocketAddress
argument_list|(
name|host
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|addr
operator|.
name|isUnresolved
argument_list|()
condition|)
block|{
name|tempServers
operator|.
name|add
argument_list|(
name|addr
operator|.
name|getAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|proxyServers
operator|=
name|tempServers
expr_stmt|;
block|}
DECL|method|isProxyServer (String remoteAddr)
specifier|public
specifier|static
name|boolean
name|isProxyServer
parameter_list|(
name|String
name|remoteAddr
parameter_list|)
block|{
if|if
condition|(
name|proxyServers
operator|==
literal|null
condition|)
block|{
name|refresh
argument_list|()
expr_stmt|;
block|}
return|return
name|proxyServers
operator|.
name|contains
argument_list|(
name|remoteAddr
argument_list|)
return|;
block|}
block|}
end_class

end_unit

