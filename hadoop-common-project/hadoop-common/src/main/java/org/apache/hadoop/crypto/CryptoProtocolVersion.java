begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.crypto
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|crypto
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Versions of the client/server protocol used for HDFS encryption.  */
end_comment

begin_enum
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|enum|CryptoProtocolVersion
specifier|public
enum|enum
name|CryptoProtocolVersion
block|{
DECL|enumConstant|UNKNOWN
name|UNKNOWN
argument_list|(
literal|"Unknown"
argument_list|,
literal|1
argument_list|)
block|,
DECL|enumConstant|ENCRYPTION_ZONES
name|ENCRYPTION_ZONES
argument_list|(
literal|"Encryption zones"
argument_list|,
literal|2
argument_list|)
block|;
DECL|field|description
specifier|private
specifier|final
name|String
name|description
decl_stmt|;
DECL|field|version
specifier|private
specifier|final
name|int
name|version
decl_stmt|;
DECL|field|unknownValue
specifier|private
name|Integer
name|unknownValue
init|=
literal|null
decl_stmt|;
DECL|field|supported
specifier|private
specifier|static
name|CryptoProtocolVersion
index|[]
name|supported
init|=
block|{
name|ENCRYPTION_ZONES
block|}
decl_stmt|;
comment|/**    * @return Array of supported protocol versions.    */
DECL|method|supported ()
specifier|public
specifier|static
name|CryptoProtocolVersion
index|[]
name|supported
parameter_list|()
block|{
return|return
name|supported
return|;
block|}
DECL|method|CryptoProtocolVersion (String description, int version)
name|CryptoProtocolVersion
parameter_list|(
name|String
name|description
parameter_list|,
name|int
name|version
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
comment|/**    * Returns if a given protocol version is supported.    *    * @param version version number    * @return true if the version is supported, else false    */
DECL|method|supports (CryptoProtocolVersion version)
specifier|public
specifier|static
name|boolean
name|supports
parameter_list|(
name|CryptoProtocolVersion
name|version
parameter_list|)
block|{
if|if
condition|(
name|version
operator|.
name|getVersion
argument_list|()
operator|==
name|UNKNOWN
operator|.
name|getVersion
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|CryptoProtocolVersion
name|v
range|:
name|CryptoProtocolVersion
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|v
operator|.
name|getVersion
argument_list|()
operator|==
name|version
operator|.
name|getVersion
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
DECL|method|setUnknownValue (int unknown)
specifier|public
name|void
name|setUnknownValue
parameter_list|(
name|int
name|unknown
parameter_list|)
block|{
name|this
operator|.
name|unknownValue
operator|=
name|unknown
expr_stmt|;
block|}
DECL|method|getUnknownValue ()
specifier|public
name|int
name|getUnknownValue
parameter_list|()
block|{
return|return
name|unknownValue
return|;
block|}
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
DECL|method|getVersion ()
specifier|public
name|int
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CryptoProtocolVersion{"
operator|+
literal|"description='"
operator|+
name|description
operator|+
literal|'\''
operator|+
literal|", version="
operator|+
name|version
operator|+
literal|", unknownValue="
operator|+
name|unknownValue
operator|+
literal|'}'
return|;
block|}
block|}
end_enum

end_unit

