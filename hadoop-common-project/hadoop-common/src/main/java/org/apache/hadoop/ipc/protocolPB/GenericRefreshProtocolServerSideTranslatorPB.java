begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ipc.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|GenericRefreshProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RefreshResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|proto
operator|.
name|GenericRefreshProtocolProtos
operator|.
name|GenericRefreshRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|proto
operator|.
name|GenericRefreshProtocolProtos
operator|.
name|GenericRefreshResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|proto
operator|.
name|GenericRefreshProtocolProtos
operator|.
name|GenericRefreshResponseCollectionProto
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_class
DECL|class|GenericRefreshProtocolServerSideTranslatorPB
specifier|public
class|class
name|GenericRefreshProtocolServerSideTranslatorPB
implements|implements
name|GenericRefreshProtocolPB
block|{
DECL|field|impl
specifier|private
specifier|final
name|GenericRefreshProtocol
name|impl
decl_stmt|;
DECL|method|GenericRefreshProtocolServerSideTranslatorPB ( GenericRefreshProtocol impl)
specifier|public
name|GenericRefreshProtocolServerSideTranslatorPB
parameter_list|(
name|GenericRefreshProtocol
name|impl
parameter_list|)
block|{
name|this
operator|.
name|impl
operator|=
name|impl
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|refresh ( RpcController controller, GenericRefreshRequestProto request)
specifier|public
name|GenericRefreshResponseCollectionProto
name|refresh
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GenericRefreshRequestProto
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
try|try
block|{
name|List
argument_list|<
name|String
argument_list|>
name|argList
init|=
name|request
operator|.
name|getArgsList
argument_list|()
decl_stmt|;
name|String
index|[]
name|args
init|=
name|argList
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|argList
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|request
operator|.
name|hasIdentifier
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
literal|"Request must contain identifier"
argument_list|)
throw|;
block|}
name|Collection
argument_list|<
name|RefreshResponse
argument_list|>
name|results
init|=
name|impl
operator|.
name|refresh
argument_list|(
name|request
operator|.
name|getIdentifier
argument_list|()
argument_list|,
name|args
argument_list|)
decl_stmt|;
return|return
name|pack
argument_list|(
name|results
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServiceException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|// Convert a collection of RefreshResponse objects to a
comment|// RefreshResponseCollection proto
DECL|method|pack ( Collection<RefreshResponse> responses)
specifier|private
name|GenericRefreshResponseCollectionProto
name|pack
parameter_list|(
name|Collection
argument_list|<
name|RefreshResponse
argument_list|>
name|responses
parameter_list|)
block|{
name|GenericRefreshResponseCollectionProto
operator|.
name|Builder
name|b
init|=
name|GenericRefreshResponseCollectionProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|RefreshResponse
name|response
range|:
name|responses
control|)
block|{
name|GenericRefreshResponseProto
operator|.
name|Builder
name|respBuilder
init|=
name|GenericRefreshResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|respBuilder
operator|.
name|setExitStatus
argument_list|(
name|response
operator|.
name|getReturnCode
argument_list|()
argument_list|)
expr_stmt|;
name|respBuilder
operator|.
name|setUserMessage
argument_list|(
name|response
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|respBuilder
operator|.
name|setSenderName
argument_list|(
name|response
operator|.
name|getSenderName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Add to collection
name|b
operator|.
name|addResponses
argument_list|(
name|respBuilder
argument_list|)
expr_stmt|;
block|}
return|return
name|b
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

