begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.permission
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Store permission related information.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"HDFS"
block|,
literal|"MapReduce"
block|}
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|PermissionStatus
specifier|public
class|class
name|PermissionStatus
implements|implements
name|Writable
block|{
DECL|field|FACTORY
specifier|static
specifier|final
name|WritableFactory
name|FACTORY
init|=
operator|new
name|WritableFactory
argument_list|()
block|{
specifier|public
name|Writable
name|newInstance
parameter_list|()
block|{
return|return
operator|new
name|PermissionStatus
argument_list|()
return|;
block|}
block|}
decl_stmt|;
static|static
block|{
comment|// register a ctor
name|WritableFactories
operator|.
name|setFactory
argument_list|(
name|PermissionStatus
operator|.
name|class
argument_list|,
name|FACTORY
argument_list|)
expr_stmt|;
block|}
comment|/** Create an immutable {@link PermissionStatus} object. */
DECL|method|createImmutable ( String user, String group, FsPermission permission)
specifier|public
specifier|static
name|PermissionStatus
name|createImmutable
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|group
parameter_list|,
name|FsPermission
name|permission
parameter_list|)
block|{
return|return
operator|new
name|PermissionStatus
argument_list|(
name|user
argument_list|,
name|group
argument_list|,
name|permission
argument_list|)
block|{
specifier|public
name|PermissionStatus
name|applyUMask
parameter_list|(
name|FsPermission
name|umask
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
return|;
block|}
DECL|field|username
specifier|private
name|String
name|username
decl_stmt|;
DECL|field|groupname
specifier|private
name|String
name|groupname
decl_stmt|;
DECL|field|permission
specifier|private
name|FsPermission
name|permission
decl_stmt|;
DECL|method|PermissionStatus ()
specifier|private
name|PermissionStatus
parameter_list|()
block|{}
comment|/** Constructor */
DECL|method|PermissionStatus (String user, String group, FsPermission permission)
specifier|public
name|PermissionStatus
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|group
parameter_list|,
name|FsPermission
name|permission
parameter_list|)
block|{
name|username
operator|=
name|user
expr_stmt|;
name|groupname
operator|=
name|group
expr_stmt|;
name|this
operator|.
name|permission
operator|=
name|permission
expr_stmt|;
block|}
comment|/** Return user name */
DECL|method|getUserName ()
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|username
return|;
block|}
comment|/** Return group name */
DECL|method|getGroupName ()
specifier|public
name|String
name|getGroupName
parameter_list|()
block|{
return|return
name|groupname
return|;
block|}
comment|/** Return permission */
DECL|method|getPermission ()
specifier|public
name|FsPermission
name|getPermission
parameter_list|()
block|{
return|return
name|permission
return|;
block|}
comment|/**    * Apply umask.    * @see FsPermission#applyUMask(FsPermission)    */
DECL|method|applyUMask (FsPermission umask)
specifier|public
name|PermissionStatus
name|applyUMask
parameter_list|(
name|FsPermission
name|umask
parameter_list|)
block|{
name|permission
operator|=
name|permission
operator|.
name|applyUMask
argument_list|(
name|umask
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/** {@inheritDoc} */
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|username
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|,
name|Text
operator|.
name|DEFAULT_MAX_LEN
argument_list|)
expr_stmt|;
name|groupname
operator|=
name|Text
operator|.
name|readString
argument_list|(
name|in
argument_list|,
name|Text
operator|.
name|DEFAULT_MAX_LEN
argument_list|)
expr_stmt|;
name|permission
operator|=
name|FsPermission
operator|.
name|read
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc} */
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|write
argument_list|(
name|out
argument_list|,
name|username
argument_list|,
name|groupname
argument_list|,
name|permission
argument_list|)
expr_stmt|;
block|}
comment|/**    * Create and initialize a {@link PermissionStatus} from {@link DataInput}.    */
DECL|method|read (DataInput in)
specifier|public
specifier|static
name|PermissionStatus
name|read
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|PermissionStatus
name|p
init|=
operator|new
name|PermissionStatus
argument_list|()
decl_stmt|;
name|p
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
comment|/**    * Serialize a {@link PermissionStatus} from its base components.    */
DECL|method|write (DataOutput out, String username, String groupname, FsPermission permission)
specifier|public
specifier|static
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|groupname
parameter_list|,
name|FsPermission
name|permission
parameter_list|)
throws|throws
name|IOException
block|{
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|username
argument_list|,
name|Text
operator|.
name|DEFAULT_MAX_LEN
argument_list|)
expr_stmt|;
name|Text
operator|.
name|writeString
argument_list|(
name|out
argument_list|,
name|groupname
argument_list|,
name|Text
operator|.
name|DEFAULT_MAX_LEN
argument_list|)
expr_stmt|;
name|permission
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc} */
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|username
operator|+
literal|":"
operator|+
name|groupname
operator|+
literal|":"
operator|+
name|permission
return|;
block|}
block|}
end_class

end_unit

