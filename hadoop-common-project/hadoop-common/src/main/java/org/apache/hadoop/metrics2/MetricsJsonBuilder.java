begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.metrics2
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|exception
operator|.
name|ExceptionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Build a JSON dump of the metrics.  *  * The {@link #toString()} operator dumps out all values collected.  *  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|MetricsJsonBuilder
specifier|public
class|class
name|MetricsJsonBuilder
extends|extends
name|MetricsRecordBuilder
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MetricsRecordBuilder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|parent
specifier|private
specifier|final
name|MetricsCollector
name|parent
decl_stmt|;
DECL|field|innerMetrics
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|innerMetrics
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**    * Build an instance.    * @param parent parent collector. Unused in this instance; only used for    * the {@link #parent()} method    */
DECL|method|MetricsJsonBuilder (MetricsCollector parent)
specifier|public
name|MetricsJsonBuilder
parameter_list|(
name|MetricsCollector
name|parent
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
block|}
DECL|method|tuple (String key, Object value)
specifier|private
name|MetricsRecordBuilder
name|tuple
parameter_list|(
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|innerMetrics
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|tag (MetricsInfo info, String value)
specifier|public
name|MetricsRecordBuilder
name|tag
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|add (MetricsTag tag)
specifier|public
name|MetricsRecordBuilder
name|add
parameter_list|(
name|MetricsTag
name|tag
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|tag
operator|.
name|name
argument_list|()
argument_list|,
name|tag
operator|.
name|value
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|add (AbstractMetric metric)
specifier|public
name|MetricsRecordBuilder
name|add
parameter_list|(
name|AbstractMetric
name|metric
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|metric
operator|.
name|info
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|metric
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setContext (String value)
specifier|public
name|MetricsRecordBuilder
name|setContext
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
literal|"context"
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addCounter (MetricsInfo info, int value)
specifier|public
name|MetricsRecordBuilder
name|addCounter
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|int
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addCounter (MetricsInfo info, long value)
specifier|public
name|MetricsRecordBuilder
name|addCounter
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, int value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|int
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, long value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, float value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|float
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, double value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|double
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|parent ()
specifier|public
name|MetricsCollector
name|parent
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|writeValueAsString
argument_list|(
name|innerMetrics
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to dump to Json."
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
name|ExceptionUtils
operator|.
name|getStackTrace
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

