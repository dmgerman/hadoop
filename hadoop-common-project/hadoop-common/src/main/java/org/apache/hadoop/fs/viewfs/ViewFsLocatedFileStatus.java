begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|BlockLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocatedFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|ViewFsLocatedFileStatus
class|class
name|ViewFsLocatedFileStatus
extends|extends
name|LocatedFileStatus
block|{
DECL|field|myFs
specifier|final
name|LocatedFileStatus
name|myFs
decl_stmt|;
DECL|field|modifiedPath
name|Path
name|modifiedPath
decl_stmt|;
DECL|method|ViewFsLocatedFileStatus (LocatedFileStatus locatedFileStatus, Path path)
name|ViewFsLocatedFileStatus
parameter_list|(
name|LocatedFileStatus
name|locatedFileStatus
parameter_list|,
name|Path
name|path
parameter_list|)
block|{
name|myFs
operator|=
name|locatedFileStatus
expr_stmt|;
name|modifiedPath
operator|=
name|path
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLen ()
specifier|public
name|long
name|getLen
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getLen
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isFile ()
specifier|public
name|boolean
name|isFile
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|isFile
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isDirectory ()
specifier|public
name|boolean
name|isDirectory
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|isDirectory
argument_list|()
return|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|isDir ()
specifier|public
name|boolean
name|isDir
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|isDirectory
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|isSymlink ()
specifier|public
name|boolean
name|isSymlink
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|isSymlink
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getBlockSize ()
specifier|public
name|long
name|getBlockSize
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getBlockSize
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getReplication ()
specifier|public
name|short
name|getReplication
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getReplication
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getModificationTime ()
specifier|public
name|long
name|getModificationTime
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getModificationTime
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getAccessTime ()
specifier|public
name|long
name|getAccessTime
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getAccessTime
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPermission ()
specifier|public
name|FsPermission
name|getPermission
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getPermission
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getOwner ()
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getOwner
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getGroup ()
specifier|public
name|String
name|getGroup
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getGroup
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getPath ()
specifier|public
name|Path
name|getPath
parameter_list|()
block|{
return|return
name|modifiedPath
return|;
block|}
annotation|@
name|Override
DECL|method|setPath (final Path p)
specifier|public
name|void
name|setPath
parameter_list|(
specifier|final
name|Path
name|p
parameter_list|)
block|{
name|modifiedPath
operator|=
name|p
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getSymlink ()
specifier|public
name|Path
name|getSymlink
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|myFs
operator|.
name|getSymlink
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setSymlink (Path p)
specifier|public
name|void
name|setSymlink
parameter_list|(
name|Path
name|p
parameter_list|)
block|{
name|myFs
operator|.
name|setSymlink
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBlockLocations ()
specifier|public
name|BlockLocation
index|[]
name|getBlockLocations
parameter_list|()
block|{
return|return
name|myFs
operator|.
name|getBlockLocations
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (FileStatus o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|FileStatus
name|o
parameter_list|)
block|{
return|return
name|super
operator|.
name|compareTo
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

