begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.http
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_comment
comment|/**  * Singleton to get access to Http related configuration.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|HttpConfig
specifier|public
class|class
name|HttpConfig
block|{
DECL|enum|Policy
specifier|public
enum|enum
name|Policy
block|{
DECL|enumConstant|HTTP_ONLY
name|HTTP_ONLY
block|,
DECL|enumConstant|HTTPS_ONLY
name|HTTPS_ONLY
block|,
DECL|enumConstant|HTTP_AND_HTTPS
name|HTTP_AND_HTTPS
block|;
DECL|field|VALUES
specifier|private
specifier|static
specifier|final
name|Policy
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
DECL|method|fromString (String value)
specifier|public
specifier|static
name|Policy
name|fromString
parameter_list|(
name|String
name|value
parameter_list|)
block|{
for|for
control|(
name|Policy
name|p
range|:
name|VALUES
control|)
block|{
if|if
condition|(
name|p
operator|.
name|name
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|value
argument_list|)
condition|)
block|{
return|return
name|p
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|isHttpEnabled ()
specifier|public
name|boolean
name|isHttpEnabled
parameter_list|()
block|{
return|return
name|this
operator|==
name|HTTP_ONLY
operator|||
name|this
operator|==
name|HTTP_AND_HTTPS
return|;
block|}
DECL|method|isHttpsEnabled ()
specifier|public
name|boolean
name|isHttpsEnabled
parameter_list|()
block|{
return|return
name|this
operator|==
name|HTTPS_ONLY
operator|||
name|this
operator|==
name|HTTP_AND_HTTPS
return|;
block|}
block|}
block|}
end_class

end_unit

