begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.authentication.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|FilterContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|FilterInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|AuthenticationFilterInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|ProxyUsers
import|;
end_import

begin_comment
comment|/**  * Filter initializer to initialize  * {@link ProxyUserAuthenticationFilter} which adds support  * to perform operations using end user instead of proxy user.  */
end_comment

begin_class
DECL|class|ProxyUserAuthenticationFilterInitializer
specifier|public
class|class
name|ProxyUserAuthenticationFilterInitializer
extends|extends
name|FilterInitializer
block|{
DECL|field|configPrefix
specifier|private
name|String
name|configPrefix
decl_stmt|;
DECL|method|ProxyUserAuthenticationFilterInitializer ()
specifier|public
name|ProxyUserAuthenticationFilterInitializer
parameter_list|()
block|{
name|this
operator|.
name|configPrefix
operator|=
literal|"hadoop.http.authentication."
expr_stmt|;
block|}
DECL|method|createFilterConfig (Configuration conf)
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|createFilterConfig
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filterConfig
init|=
name|AuthenticationFilterInitializer
operator|.
name|getFilterConfigMap
argument_list|(
name|conf
argument_list|,
name|configPrefix
argument_list|)
decl_stmt|;
comment|//Add proxy user configs
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|conf
operator|.
name|getPropsWithPrefix
argument_list|(
name|ProxyUsers
operator|.
name|CONF_HADOOP_PROXYUSER
argument_list|)
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|filterConfig
operator|.
name|put
argument_list|(
literal|"proxyuser"
operator|+
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|filterConfig
return|;
block|}
annotation|@
name|Override
DECL|method|initFilter (FilterContainer container, Configuration conf)
specifier|public
name|void
name|initFilter
parameter_list|(
name|FilterContainer
name|container
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|filterConfig
init|=
name|createFilterConfig
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|container
operator|.
name|addFilter
argument_list|(
literal|"ProxyUserAuthenticationFilter"
argument_list|,
name|ProxyUserAuthenticationFilter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|filterConfig
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

