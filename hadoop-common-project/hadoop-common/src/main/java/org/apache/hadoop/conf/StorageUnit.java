begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|RoundingMode
import|;
end_import

begin_comment
comment|/**  * Class that maintains different forms of Storage Units.  */
end_comment

begin_enum
DECL|enum|StorageUnit
specifier|public
enum|enum
name|StorageUnit
block|{
comment|/*     We rely on BYTES being the last to get longest matching short names first.     The short name of bytes is b and it will match with other longer names.      if we change this order, the corresponding code in     Configuration#parseStorageUnit needs to be changed too, since values()     call returns the Enums in declared order and we depend on it.    */
DECL|enumConstant|EB
name|EB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|PETABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"exabytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"eb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"e"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toEBs
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|PB
name|PB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|PETABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|PETABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"petabytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"pb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"p"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toPBs
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|TB
name|TB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"terabytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"tb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"t"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toTBs
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|TERABYTES
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|GB
name|GB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|GIGABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|GIGABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"gigabytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"gb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"g"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toGBs
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|GIGABYTES
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|MB
name|MB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|MEGABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|GIGABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"megabytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"mb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"m"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toMBs
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|KB
name|KB
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|multiply
argument_list|(
name|value
argument_list|,
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|MEGABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|GIGABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|TERABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
operator|/
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"kilobytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"kb"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"k"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toKBs
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|KILOBYTES
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|BYTES
name|BYTES
block|{
annotation|@
name|Override
specifier|public
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|KILOBYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|MEGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|GIGABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|TERABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|PETABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|divide
argument_list|(
name|value
argument_list|,
name|EXABYTES
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLongName
parameter_list|()
block|{
return|return
literal|"bytes"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getShortName
parameter_list|()
block|{
return|return
literal|"b"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSuffixChar
parameter_list|()
block|{
return|return
literal|"b"
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|toBytes
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
block|{
return|return
name|value
return|;
block|}
block|}
block|;
DECL|field|BYTE
specifier|private
specifier|static
specifier|final
name|double
name|BYTE
init|=
literal|1L
decl_stmt|;
DECL|field|KILOBYTES
specifier|private
specifier|static
specifier|final
name|double
name|KILOBYTES
init|=
name|BYTE
operator|*
literal|1024L
decl_stmt|;
DECL|field|MEGABYTES
specifier|private
specifier|static
specifier|final
name|double
name|MEGABYTES
init|=
name|KILOBYTES
operator|*
literal|1024L
decl_stmt|;
DECL|field|GIGABYTES
specifier|private
specifier|static
specifier|final
name|double
name|GIGABYTES
init|=
name|MEGABYTES
operator|*
literal|1024L
decl_stmt|;
DECL|field|TERABYTES
specifier|private
specifier|static
specifier|final
name|double
name|TERABYTES
init|=
name|GIGABYTES
operator|*
literal|1024L
decl_stmt|;
DECL|field|PETABYTES
specifier|private
specifier|static
specifier|final
name|double
name|PETABYTES
init|=
name|TERABYTES
operator|*
literal|1024L
decl_stmt|;
DECL|field|EXABYTES
specifier|private
specifier|static
specifier|final
name|double
name|EXABYTES
init|=
name|PETABYTES
operator|*
literal|1024L
decl_stmt|;
DECL|field|PRECISION
specifier|private
specifier|static
specifier|final
name|int
name|PRECISION
init|=
literal|4
decl_stmt|;
comment|/**    * Using BigDecimal to avoid issues with overflow and underflow.    *    * @param value - value    * @param divisor - divisor.    * @return -- returns a double that represents this value    */
DECL|method|divide (double value, double divisor)
specifier|private
specifier|static
name|double
name|divide
parameter_list|(
name|double
name|value
parameter_list|,
name|double
name|divisor
parameter_list|)
block|{
name|BigDecimal
name|val
init|=
operator|new
name|BigDecimal
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|BigDecimal
name|bDivisor
init|=
operator|new
name|BigDecimal
argument_list|(
name|divisor
argument_list|)
decl_stmt|;
return|return
name|val
operator|.
name|divide
argument_list|(
name|bDivisor
argument_list|)
operator|.
name|setScale
argument_list|(
name|PRECISION
argument_list|,
name|RoundingMode
operator|.
name|HALF_UP
argument_list|)
operator|.
name|doubleValue
argument_list|()
return|;
block|}
comment|/**    * Using BigDecimal so we can throw if we are overflowing the Long.Max.    *    * @param first - First Num.    * @param second - Second Num.    * @return Returns a double    */
DECL|method|multiply (double first, double second)
specifier|private
specifier|static
name|double
name|multiply
parameter_list|(
name|double
name|first
parameter_list|,
name|double
name|second
parameter_list|)
block|{
name|BigDecimal
name|firstVal
init|=
operator|new
name|BigDecimal
argument_list|(
name|first
argument_list|)
decl_stmt|;
name|BigDecimal
name|secondVal
init|=
operator|new
name|BigDecimal
argument_list|(
name|second
argument_list|)
decl_stmt|;
return|return
name|firstVal
operator|.
name|multiply
argument_list|(
name|secondVal
argument_list|)
operator|.
name|setScale
argument_list|(
name|PRECISION
argument_list|,
name|RoundingMode
operator|.
name|HALF_UP
argument_list|)
operator|.
name|doubleValue
argument_list|()
return|;
block|}
DECL|method|toBytes (double value)
specifier|public
specifier|abstract
name|double
name|toBytes
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toKBs (double value)
specifier|public
specifier|abstract
name|double
name|toKBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toMBs (double value)
specifier|public
specifier|abstract
name|double
name|toMBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toGBs (double value)
specifier|public
specifier|abstract
name|double
name|toGBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toTBs (double value)
specifier|public
specifier|abstract
name|double
name|toTBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toPBs (double value)
specifier|public
specifier|abstract
name|double
name|toPBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toEBs (double value)
specifier|public
specifier|abstract
name|double
name|toEBs
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|getLongName ()
specifier|public
specifier|abstract
name|String
name|getLongName
parameter_list|()
function_decl|;
DECL|method|getShortName ()
specifier|public
specifier|abstract
name|String
name|getShortName
parameter_list|()
function_decl|;
DECL|method|getSuffixChar ()
specifier|public
specifier|abstract
name|String
name|getSuffixChar
parameter_list|()
function_decl|;
DECL|method|getDefault (double value)
specifier|public
specifier|abstract
name|double
name|getDefault
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|fromBytes (double value)
specifier|public
specifier|abstract
name|double
name|fromBytes
parameter_list|(
name|double
name|value
parameter_list|)
function_decl|;
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getLongName
argument_list|()
return|;
block|}
block|}
end_enum

end_unit

