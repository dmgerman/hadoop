begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.metrics2
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Build a string dump of the metrics.  *  * The {@link #toString()} operator dumps out all values collected.  *  * Every entry is formatted as  * {@code prefix + name + separator + value + suffix}  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|MetricStringBuilder
specifier|public
class|class
name|MetricStringBuilder
extends|extends
name|MetricsRecordBuilder
block|{
DECL|field|builder
specifier|private
specifier|final
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|(
literal|256
argument_list|)
decl_stmt|;
DECL|field|prefix
specifier|private
specifier|final
name|String
name|prefix
decl_stmt|;
DECL|field|suffix
specifier|private
specifier|final
name|String
name|suffix
decl_stmt|;
DECL|field|separator
specifier|private
specifier|final
name|String
name|separator
decl_stmt|;
DECL|field|parent
specifier|private
specifier|final
name|MetricsCollector
name|parent
decl_stmt|;
comment|/**    * Build an instance.    * @param parent parent collector. Unused in this instance; only used for    * the {@link #parent()} method    * @param prefix string before each entry    * @param separator separator between name and value    * @param suffix suffix after each entry    */
DECL|method|MetricStringBuilder (MetricsCollector parent, String prefix, String separator, String suffix)
specifier|public
name|MetricStringBuilder
parameter_list|(
name|MetricsCollector
name|parent
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|separator
parameter_list|,
name|String
name|suffix
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
name|this
operator|.
name|suffix
operator|=
name|suffix
expr_stmt|;
name|this
operator|.
name|separator
operator|=
name|separator
expr_stmt|;
block|}
DECL|method|add (MetricsInfo info, Object value)
specifier|public
name|MetricStringBuilder
name|add
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|info
operator|.
name|name
argument_list|()
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * Add any key,val pair to the string, between the prefix and suffix,    * separated by the separator.    * @param key key    * @param value value    * @return this instance    */
DECL|method|tuple (String key, String value)
specifier|public
name|MetricStringBuilder
name|tuple
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|builder
operator|.
name|append
argument_list|(
name|prefix
argument_list|)
operator|.
name|append
argument_list|(
name|key
argument_list|)
operator|.
name|append
argument_list|(
name|separator
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
name|suffix
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|tag (MetricsInfo info, String value)
specifier|public
name|MetricsRecordBuilder
name|tag
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|add (MetricsTag tag)
specifier|public
name|MetricsRecordBuilder
name|add
parameter_list|(
name|MetricsTag
name|tag
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
name|tag
operator|.
name|name
argument_list|()
argument_list|,
name|tag
operator|.
name|value
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|add (AbstractMetric metric)
specifier|public
name|MetricsRecordBuilder
name|add
parameter_list|(
name|AbstractMetric
name|metric
parameter_list|)
block|{
name|add
argument_list|(
name|metric
operator|.
name|info
argument_list|()
argument_list|,
name|metric
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|setContext (String value)
specifier|public
name|MetricsRecordBuilder
name|setContext
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|tuple
argument_list|(
literal|"context"
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addCounter (MetricsInfo info, int value)
specifier|public
name|MetricsRecordBuilder
name|addCounter
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|int
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addCounter (MetricsInfo info, long value)
specifier|public
name|MetricsRecordBuilder
name|addCounter
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, int value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|int
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, long value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, float value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|float
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addGauge (MetricsInfo info, double value)
specifier|public
name|MetricsRecordBuilder
name|addGauge
parameter_list|(
name|MetricsInfo
name|info
parameter_list|,
name|double
name|value
parameter_list|)
block|{
return|return
name|add
argument_list|(
name|info
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|parent ()
specifier|public
name|MetricsCollector
name|parent
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|builder
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

