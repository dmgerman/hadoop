begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.contract.rawlocal
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|rawlocal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|RawLocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|AbstractContractRenameTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|AbstractFSContract
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestRawlocalContractRename
specifier|public
class|class
name|TestRawlocalContractRename
extends|extends
name|AbstractContractRenameTest
block|{
annotation|@
name|Override
DECL|method|createContract (Configuration conf)
specifier|protected
name|AbstractFSContract
name|createContract
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
operator|new
name|RawlocalFSContract
argument_list|(
name|conf
argument_list|)
return|;
block|}
comment|/**    * Test fallback rename code<code>handleEmptyDstDirectoryOnWindows()</code>    * even on not Windows platform where the normal<code>File.renameTo()</code>    * is supposed to work well. This test has been added for HADOOP-9805.    *     * @see AbstractContractRenameTest#testRenameWithNonEmptySubDirPOSIX()    */
annotation|@
name|Test
DECL|method|testRenameWithNonEmptySubDirPOSIX ()
specifier|public
name|void
name|testRenameWithNonEmptySubDirPOSIX
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|Path
name|renameTestDir
init|=
name|path
argument_list|(
literal|"testRenameWithNonEmptySubDir"
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|srcDir
init|=
operator|new
name|Path
argument_list|(
name|renameTestDir
argument_list|,
literal|"src1"
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|srcSubDir
init|=
operator|new
name|Path
argument_list|(
name|srcDir
argument_list|,
literal|"sub"
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|finalDir
init|=
operator|new
name|Path
argument_list|(
name|renameTestDir
argument_list|,
literal|"dest"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|ContractTestUtils
operator|.
name|rm
argument_list|(
name|fs
argument_list|,
name|renameTestDir
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|srcDir
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|finalDir
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|writeTextFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|srcDir
argument_list|,
literal|"source.txt"
argument_list|)
argument_list|,
literal|"this is the file in src dir"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|writeTextFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|srcSubDir
argument_list|,
literal|"subfile.txt"
argument_list|)
argument_list|,
literal|"this is the file in src/sub dir"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"not created in src dir"
argument_list|,
operator|new
name|Path
argument_list|(
name|srcDir
argument_list|,
literal|"source.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"not created in src/sub dir"
argument_list|,
operator|new
name|Path
argument_list|(
name|srcSubDir
argument_list|,
literal|"subfile.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|RawLocalFileSystem
name|rlfs
init|=
operator|(
name|RawLocalFileSystem
operator|)
name|fs
decl_stmt|;
name|rlfs
operator|.
name|handleEmptyDstDirectoryOnWindows
argument_list|(
name|srcDir
argument_list|,
name|rlfs
operator|.
name|pathToFile
argument_list|(
name|srcDir
argument_list|)
argument_list|,
name|finalDir
argument_list|,
name|rlfs
operator|.
name|pathToFile
argument_list|(
name|finalDir
argument_list|)
argument_list|)
expr_stmt|;
comment|// Accept only POSIX rename behavior in this test
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"not renamed into dest dir"
argument_list|,
operator|new
name|Path
argument_list|(
name|finalDir
argument_list|,
literal|"source.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"not renamed into dest/sub dir"
argument_list|,
operator|new
name|Path
argument_list|(
name|finalDir
argument_list|,
literal|"sub/subfile.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|assertPathDoesNotExist
argument_list|(
name|fs
argument_list|,
literal|"not deleted"
argument_list|,
operator|new
name|Path
argument_list|(
name|srcDir
argument_list|,
literal|"source.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

