begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|TestTrash
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestViewFsTrash
specifier|public
class|class
name|TestViewFsTrash
block|{
DECL|field|fsTarget
name|FileSystem
name|fsTarget
decl_stmt|;
comment|// the target file system - the mount will point here
DECL|field|fsView
name|FileSystem
name|fsView
decl_stmt|;
DECL|field|conf
name|Configuration
name|conf
decl_stmt|;
DECL|class|TestLFS
specifier|static
class|class
name|TestLFS
extends|extends
name|LocalFileSystem
block|{
DECL|field|home
name|Path
name|home
decl_stmt|;
DECL|method|TestLFS ()
name|TestLFS
parameter_list|()
throws|throws
name|IOException
block|{
name|this
argument_list|(
operator|new
name|Path
argument_list|(
name|FileSystemTestHelper
operator|.
name|TEST_ROOT_DIR
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|TestLFS (Path home)
name|TestLFS
parameter_list|(
name|Path
name|home
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|home
operator|=
name|home
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHomeDirectory ()
specifier|public
name|Path
name|getHomeDirectory
parameter_list|()
block|{
return|return
name|home
return|;
block|}
block|}
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fsTarget
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|fsTarget
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|FileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsTarget
argument_list|)
argument_list|,
literal|"dir1"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|ViewFileSystemTestSetup
operator|.
name|createConfig
argument_list|()
expr_stmt|;
name|fsView
operator|=
name|ViewFileSystemTestSetup
operator|.
name|setupForViewFileSystem
argument_list|(
name|conf
argument_list|,
name|fsTarget
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.defaultFS"
argument_list|,
name|FsConstants
operator|.
name|VIEWFS_URI
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|ViewFileSystemTestSetup
operator|.
name|tearDown
argument_list|(
name|fsTarget
argument_list|)
expr_stmt|;
name|fsTarget
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|fsTarget
operator|.
name|getHomeDirectory
argument_list|()
argument_list|,
literal|".Trash/Current"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTrash ()
specifier|public
name|void
name|testTrash
parameter_list|()
throws|throws
name|IOException
block|{
name|TestTrash
operator|.
name|trashShell
argument_list|(
name|conf
argument_list|,
name|FileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsView
argument_list|)
argument_list|,
name|fsTarget
argument_list|,
operator|new
name|Path
argument_list|(
name|fsTarget
operator|.
name|getHomeDirectory
argument_list|()
argument_list|,
literal|".Trash/Current"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

