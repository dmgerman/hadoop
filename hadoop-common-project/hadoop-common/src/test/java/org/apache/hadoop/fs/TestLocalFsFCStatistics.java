begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
operator|.
name|Statistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContextTestHelper
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *<p>  *    Tests the File Context Statistics for {@link LocalFileSystem}  *</p>  */
end_comment

begin_class
DECL|class|TestLocalFsFCStatistics
specifier|public
class|class
name|TestLocalFsFCStatistics
extends|extends
name|FCStatisticsBaseTest
block|{
DECL|field|LOCAL_FS_ROOT_URI
specifier|static
specifier|final
name|String
name|LOCAL_FS_ROOT_URI
init|=
literal|"file:///tmp/test"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fc
operator|=
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
expr_stmt|;
name|fc
operator|.
name|mkdir
argument_list|(
name|getTestRootPath
argument_list|(
name|fc
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|FileContext
operator|.
name|DEFAULT_PERM
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|fc
operator|.
name|delete
argument_list|(
name|getTestRootPath
argument_list|(
name|fc
argument_list|,
literal|"test"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyReadBytes (Statistics stats)
specifier|protected
name|void
name|verifyReadBytes
parameter_list|(
name|Statistics
name|stats
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|blockSize
argument_list|,
name|stats
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyWrittenBytes (Statistics stats)
specifier|protected
name|void
name|verifyWrittenBytes
parameter_list|(
name|Statistics
name|stats
parameter_list|)
block|{
comment|//Extra 12 bytes are written apart from the block.
name|Assert
operator|.
name|assertEquals
argument_list|(
name|blockSize
operator|+
literal|12
argument_list|,
name|stats
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getFsUri ()
specifier|protected
name|URI
name|getFsUri
parameter_list|()
block|{
return|return
name|URI
operator|.
name|create
argument_list|(
name|LOCAL_FS_ROOT_URI
argument_list|)
return|;
block|}
block|}
end_class

end_unit

