begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests the tool (and the default expression) for deciding which config  * redact.  */
end_comment

begin_class
DECL|class|TestConfigRedactor
specifier|public
class|class
name|TestConfigRedactor
block|{
DECL|field|REDACTED_TEXT
specifier|private
specifier|static
specifier|final
name|String
name|REDACTED_TEXT
init|=
literal|"<redacted>"
decl_stmt|;
DECL|field|ORIGINAL_VALUE
specifier|private
specifier|static
specifier|final
name|String
name|ORIGINAL_VALUE
init|=
literal|"Hello, World!"
decl_stmt|;
annotation|@
name|Test
DECL|method|testRedactWithCoreDefault ()
specifier|public
name|void
name|testRedactWithCoreDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|testRedact
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRedactNoCoreDefault ()
specifier|public
name|void
name|testRedactNoCoreDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|testRedact
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|testRedact (Configuration conf)
specifier|private
name|void
name|testRedact
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|ConfigRedactor
name|redactor
init|=
operator|new
name|ConfigRedactor
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|String
name|processedText
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|sensitiveKeys
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"fs.s3a.secret.key"
argument_list|,
literal|"fs.s3a.bucket.BUCKET.secret.key"
argument_list|,
literal|"fs.s3a.server-side-encryption.key"
argument_list|,
literal|"fs.s3a.bucket.engineering.server-side-encryption.key"
argument_list|,
literal|"fs.s3n.awsSecretKey"
argument_list|,
literal|"fs.azure.account.key.abcdefg.blob.core.windows.net"
argument_list|,
literal|"fs.adl.oauth2.refresh.token"
argument_list|,
literal|"fs.adl.oauth2.credential"
argument_list|,
literal|"dfs.adls.oauth2.refresh.token"
argument_list|,
literal|"dfs.adls.oauth2.credential"
argument_list|,
literal|"dfs.webhdfs.oauth2.access.token"
argument_list|,
literal|"dfs.webhdfs.oauth2.refresh.token"
argument_list|,
literal|"ssl.server.keystore.keypassword"
argument_list|,
literal|"ssl.server.keystore.password"
argument_list|,
literal|"httpfs.ssl.keystore.pass"
argument_list|,
literal|"hadoop.security.sensitive-config-keys"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|sensitiveKeys
control|)
block|{
name|processedText
operator|=
name|redactor
operator|.
name|redact
argument_list|(
name|key
argument_list|,
name|ORIGINAL_VALUE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Config parameter wasn't redacted and should be: "
operator|+
name|key
argument_list|,
name|REDACTED_TEXT
argument_list|,
name|processedText
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|normalKeys
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"fs.defaultFS"
argument_list|,
literal|"dfs.replication"
argument_list|,
literal|"ssl.server.keystore.location"
argument_list|,
literal|"httpfs.config.dir"
argument_list|,
literal|"hadoop.security.credstore.java-keystore-provider.password-file"
argument_list|,
literal|"fs.s3a.bucket.engineering.server-side-encryption-algorithm"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|normalKeys
control|)
block|{
name|processedText
operator|=
name|redactor
operator|.
name|redact
argument_list|(
name|key
argument_list|,
name|ORIGINAL_VALUE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Config parameter was redacted and shouldn't be: "
operator|+
name|key
argument_list|,
name|ORIGINAL_VALUE
argument_list|,
name|processedText
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

