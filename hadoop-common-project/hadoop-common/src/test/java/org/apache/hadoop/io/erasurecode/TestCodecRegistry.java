begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.io.erasurecode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|NativeRSRawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|NativeXORRawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSLegacyRawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSRawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|XORRawErasureCoderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test CodecRegistry.  */
end_comment

begin_class
DECL|class|TestCodecRegistry
specifier|public
class|class
name|TestCodecRegistry
block|{
annotation|@
name|Test
DECL|method|testGetCodecs ()
specifier|public
name|void
name|testGetCodecs
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|codecs
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodecNames
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|codecs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|codecs
operator|.
name|contains
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|codecs
operator|.
name|contains
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|codecs
operator|.
name|contains
argument_list|(
name|ErasureCodeConstants
operator|.
name|XOR_CODEC_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCoders ()
specifier|public
name|void
name|testGetCoders
parameter_list|()
block|{
name|List
argument_list|<
name|RawErasureCoderFactory
argument_list|>
name|coders
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoders
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|coders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coders
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|NativeRSRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coders
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|RSRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coders
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoders
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|coders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coders
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|RSLegacyRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coders
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoders
argument_list|(
name|ErasureCodeConstants
operator|.
name|XOR_CODEC_NAME
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|coders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coders
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|NativeXORRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coders
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|XORRawErasureCoderFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCodersWrong ()
specifier|public
name|void
name|testGetCodersWrong
parameter_list|()
block|{
name|List
argument_list|<
name|RawErasureCoderFactory
argument_list|>
name|coders
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoders
argument_list|(
literal|"WRONG_CODEC"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|coders
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCoderNames ()
specifier|public
name|void
name|testGetCoderNames
parameter_list|()
block|{
name|String
index|[]
name|coderNames
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderNames
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|coderNames
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NativeRSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|coderNames
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|coderNames
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|coderNames
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderNames
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|coderNames
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RSLegacyRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|coderNames
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|coderNames
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderNames
argument_list|(
name|ErasureCodeConstants
operator|.
name|XOR_CODEC_NAME
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|coderNames
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NativeXORRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|coderNames
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|XORRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|coderNames
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCoderByName ()
specifier|public
name|void
name|testGetCoderByName
parameter_list|()
block|{
name|RawErasureCoderFactory
name|coder
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|,
name|RSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|coder
operator|instanceof
name|RSRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coder
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|,
name|NativeRSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coder
operator|instanceof
name|NativeRSRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coder
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|,
name|RSLegacyRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coder
operator|instanceof
name|RSLegacyRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coder
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|XOR_CODEC_NAME
argument_list|,
name|XORRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coder
operator|instanceof
name|XORRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|coder
operator|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|XOR_CODEC_NAME
argument_list|,
name|NativeXORRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|coder
operator|instanceof
name|NativeXORRawErasureCoderFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCoderByNameWrong ()
specifier|public
name|void
name|testGetCoderByNameWrong
parameter_list|()
block|{
name|RawErasureCoderFactory
name|coder
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderByName
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|,
literal|"WRONG_RS"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|coder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateCoders ()
specifier|public
name|void
name|testUpdateCoders
parameter_list|()
block|{
class|class
name|RSUserDefinedIncorrectFactory
implements|implements
name|RawErasureCoderFactory
block|{
specifier|public
name|RawErasureEncoder
name|createEncoder
parameter_list|(
name|ErasureCoderOptions
name|coderOptions
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|RawErasureDecoder
name|createDecoder
parameter_list|(
name|ErasureCoderOptions
name|coderOptions
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getCoderName
parameter_list|()
block|{
return|return
literal|"rs_java"
return|;
block|}
specifier|public
name|String
name|getCodecName
parameter_list|()
block|{
return|return
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
return|;
block|}
block|}
name|List
argument_list|<
name|RawErasureCoderFactory
argument_list|>
name|userDefinedFactories
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|userDefinedFactories
operator|.
name|add
argument_list|(
operator|new
name|RSUserDefinedIncorrectFactory
argument_list|()
argument_list|)
expr_stmt|;
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|updateCoders
argument_list|(
name|userDefinedFactories
argument_list|)
expr_stmt|;
comment|// check RS coders
name|List
argument_list|<
name|RawErasureCoderFactory
argument_list|>
name|rsCoders
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoders
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsCoders
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rsCoders
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|NativeRSRawErasureCoderFactory
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rsCoders
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|RSRawErasureCoderFactory
argument_list|)
expr_stmt|;
comment|// check RS coder names
name|String
index|[]
name|rsCoderNames
init|=
name|CodecRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getCoderNames
argument_list|(
name|ErasureCodeConstants
operator|.
name|RS_CODEC_NAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsCoderNames
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NativeRSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|rsCoderNames
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RSRawErasureCoderFactory
operator|.
name|CODER_NAME
argument_list|,
name|rsCoderNames
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

