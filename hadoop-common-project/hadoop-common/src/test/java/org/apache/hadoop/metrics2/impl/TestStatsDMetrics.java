begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.metrics2.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|DatagramPacket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|DatagramSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|AbstractMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|sink
operator|.
name|StatsDSink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|sink
operator|.
name|StatsDSink
operator|.
name|StatsD
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|internal
operator|.
name|util
operator|.
name|reflection
operator|.
name|Whitebox
import|;
end_import

begin_class
DECL|class|TestStatsDMetrics
specifier|public
class|class
name|TestStatsDMetrics
block|{
DECL|method|makeMetric (String name, Number value, MetricType type)
specifier|private
name|AbstractMetric
name|makeMetric
parameter_list|(
name|String
name|name
parameter_list|,
name|Number
name|value
parameter_list|,
name|MetricType
name|type
parameter_list|)
block|{
name|AbstractMetric
name|metric
init|=
name|mock
argument_list|(
name|AbstractMetric
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metric
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metric
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|metric
operator|.
name|type
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|metric
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testPutMetrics ()
specifier|public
name|void
name|testPutMetrics
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
specifier|final
name|StatsDSink
name|sink
init|=
operator|new
name|StatsDSink
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MetricsTag
argument_list|>
name|tags
init|=
operator|new
name|ArrayList
argument_list|<
name|MetricsTag
argument_list|>
argument_list|()
decl_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|Hostname
argument_list|,
literal|"host"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|Context
argument_list|,
literal|"jvm"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|ProcessName
argument_list|,
literal|"process"
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|AbstractMetric
argument_list|>
name|metrics
init|=
operator|new
name|HashSet
argument_list|<
name|AbstractMetric
argument_list|>
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|makeMetric
argument_list|(
literal|"foo1"
argument_list|,
literal|1.25
argument_list|,
name|MetricType
operator|.
name|COUNTER
argument_list|)
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|makeMetric
argument_list|(
literal|"foo2"
argument_list|,
literal|2.25
argument_list|,
name|MetricType
operator|.
name|GAUGE
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|MetricsRecord
name|record
init|=
operator|new
name|MetricsRecordImpl
argument_list|(
name|MsInfo
operator|.
name|Context
argument_list|,
operator|(
name|long
operator|)
literal|10000
argument_list|,
name|tags
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
try|try
init|(
name|DatagramSocket
name|sock
init|=
operator|new
name|DatagramSocket
argument_list|()
init|)
block|{
name|sock
operator|.
name|setReceiveBufferSize
argument_list|(
literal|8192
argument_list|)
expr_stmt|;
specifier|final
name|StatsDSink
operator|.
name|StatsD
name|mockStatsD
init|=
operator|new
name|StatsD
argument_list|(
name|sock
operator|.
name|getLocalAddress
argument_list|()
operator|.
name|getHostName
argument_list|()
argument_list|,
name|sock
operator|.
name|getLocalPort
argument_list|()
argument_list|)
decl_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|sink
argument_list|,
literal|"statsd"
argument_list|,
name|mockStatsD
argument_list|)
expr_stmt|;
specifier|final
name|DatagramPacket
name|p
init|=
operator|new
name|DatagramPacket
argument_list|(
operator|new
name|byte
index|[
literal|8192
index|]
argument_list|,
literal|8192
argument_list|)
decl_stmt|;
name|sink
operator|.
name|putMetrics
argument_list|(
name|record
argument_list|)
expr_stmt|;
name|sock
operator|.
name|receive
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|String
name|result
init|=
operator|new
name|String
argument_list|(
name|p
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|p
operator|.
name|getLength
argument_list|()
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Received data did not match data sent"
argument_list|,
name|result
operator|.
name|equals
argument_list|(
literal|"host.process.jvm.Context.foo1:1.25|c"
argument_list|)
operator|||
name|result
operator|.
name|equals
argument_list|(
literal|"host.process.jvm.Context.foo2:2.25|g"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|sink
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testPutMetrics2 ()
specifier|public
name|void
name|testPutMetrics2
parameter_list|()
throws|throws
name|IOException
block|{
name|StatsDSink
name|sink
init|=
operator|new
name|StatsDSink
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MetricsTag
argument_list|>
name|tags
init|=
operator|new
name|ArrayList
argument_list|<
name|MetricsTag
argument_list|>
argument_list|()
decl_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|Hostname
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|Context
argument_list|,
literal|"jvm"
argument_list|)
argument_list|)
expr_stmt|;
name|tags
operator|.
name|add
argument_list|(
operator|new
name|MetricsTag
argument_list|(
name|MsInfo
operator|.
name|ProcessName
argument_list|,
literal|"process"
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|AbstractMetric
argument_list|>
name|metrics
init|=
operator|new
name|HashSet
argument_list|<
name|AbstractMetric
argument_list|>
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|makeMetric
argument_list|(
literal|"foo1"
argument_list|,
literal|1
argument_list|,
name|MetricType
operator|.
name|COUNTER
argument_list|)
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|add
argument_list|(
name|makeMetric
argument_list|(
literal|"foo2"
argument_list|,
literal|2
argument_list|,
name|MetricType
operator|.
name|GAUGE
argument_list|)
argument_list|)
expr_stmt|;
name|MetricsRecord
name|record
init|=
operator|new
name|MetricsRecordImpl
argument_list|(
name|MsInfo
operator|.
name|Context
argument_list|,
operator|(
name|long
operator|)
literal|10000
argument_list|,
name|tags
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
try|try
init|(
name|DatagramSocket
name|sock
init|=
operator|new
name|DatagramSocket
argument_list|()
init|)
block|{
name|sock
operator|.
name|setReceiveBufferSize
argument_list|(
literal|8192
argument_list|)
expr_stmt|;
specifier|final
name|StatsDSink
operator|.
name|StatsD
name|mockStatsD
init|=
operator|new
name|StatsD
argument_list|(
name|sock
operator|.
name|getLocalAddress
argument_list|()
operator|.
name|getHostName
argument_list|()
argument_list|,
name|sock
operator|.
name|getLocalPort
argument_list|()
argument_list|)
decl_stmt|;
name|Whitebox
operator|.
name|setInternalState
argument_list|(
name|sink
argument_list|,
literal|"statsd"
argument_list|,
name|mockStatsD
argument_list|)
expr_stmt|;
specifier|final
name|DatagramPacket
name|p
init|=
operator|new
name|DatagramPacket
argument_list|(
operator|new
name|byte
index|[
literal|8192
index|]
argument_list|,
literal|8192
argument_list|)
decl_stmt|;
name|sink
operator|.
name|putMetrics
argument_list|(
name|record
argument_list|)
expr_stmt|;
name|sock
operator|.
name|receive
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|String
name|result
init|=
operator|new
name|String
argument_list|(
name|p
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|p
operator|.
name|getLength
argument_list|()
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Received data did not match data sent"
argument_list|,
name|result
operator|.
name|equals
argument_list|(
literal|"process.jvm.Context.foo1:1|c"
argument_list|)
operator|||
name|result
operator|.
name|equals
argument_list|(
literal|"process.jvm.Context.foo2:2|g"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|sink
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

