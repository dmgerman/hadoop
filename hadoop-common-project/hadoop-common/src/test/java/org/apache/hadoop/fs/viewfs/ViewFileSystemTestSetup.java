begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
operator|.
name|ConfigUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|log
operator|.
name|Log
import|;
end_import

begin_comment
comment|/**  * This class is for  setup and teardown for viewFileSystem so that  * it can be tested via the standard FileSystem tests.  *   * If tests launched via ant (build.xml) the test root is absolute path  * If tests launched via eclipse, the test root is   * is a test dir below the working directory. (see FileSystemTestHelper).  * Since viewFs has no built-in wd, its wd is /user/<username>   *          (or /User/<username> on mac)  *   * We set a viewFileSystems with mount point for   * /<firstComponent>" pointing to the target fs's  testdir   */
end_comment

begin_class
DECL|class|ViewFileSystemTestSetup
specifier|public
class|class
name|ViewFileSystemTestSetup
block|{
comment|/**    *     * @param fsTarget - the target fs of the view fs.    * @return return the ViewFS File context to be used for tests    * @throws Exception    */
DECL|method|setupForViewFileSystem (Configuration conf, FileSystem fsTarget)
specifier|static
specifier|public
name|FileSystem
name|setupForViewFileSystem
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|FileSystem
name|fsTarget
parameter_list|)
throws|throws
name|Exception
block|{
comment|/**      * create the test root on local_fs - the  mount table will point here      */
name|Path
name|targetOfTests
init|=
name|FileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsTarget
argument_list|)
decl_stmt|;
comment|// In case previous test was killed before cleanup
name|fsTarget
operator|.
name|delete
argument_list|(
name|targetOfTests
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fsTarget
operator|.
name|mkdirs
argument_list|(
name|targetOfTests
argument_list|)
expr_stmt|;
comment|// Setup a link from viewfs to targetfs for the first component of
comment|// path of testdir.
name|String
name|testDir
init|=
name|FileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsTarget
argument_list|)
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|int
name|indexOf2ndSlash
init|=
name|testDir
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|String
name|testDirFirstComponent
init|=
name|testDir
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|indexOf2ndSlash
argument_list|)
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
name|testDirFirstComponent
argument_list|,
name|fsTarget
operator|.
name|makeQualified
argument_list|(
operator|new
name|Path
argument_list|(
name|testDirFirstComponent
argument_list|)
argument_list|)
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
comment|// viewFs://home => fsTarget://home
name|String
name|homeDirRoot
init|=
name|fsTarget
operator|.
name|getHomeDirectory
argument_list|()
operator|.
name|getParent
argument_list|()
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
name|homeDirRoot
argument_list|,
name|fsTarget
operator|.
name|makeQualified
argument_list|(
operator|new
name|Path
argument_list|(
name|homeDirRoot
argument_list|)
argument_list|)
operator|.
name|toUri
argument_list|()
argument_list|)
expr_stmt|;
name|ConfigUtil
operator|.
name|setHomeDirConf
argument_list|(
name|conf
argument_list|,
name|homeDirRoot
argument_list|)
expr_stmt|;
name|Log
operator|.
name|info
argument_list|(
literal|"Home dir base "
operator|+
name|homeDirRoot
argument_list|)
expr_stmt|;
name|FileSystem
name|fsView
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|conf
argument_list|)
decl_stmt|;
return|return
name|fsView
return|;
block|}
comment|/**    *     * delete the test directory in the target  fs    */
DECL|method|tearDown (FileSystem fsTarget)
specifier|static
specifier|public
name|void
name|tearDown
parameter_list|(
name|FileSystem
name|fsTarget
parameter_list|)
throws|throws
name|Exception
block|{
name|Path
name|targetOfTests
init|=
name|FileSystemTestHelper
operator|.
name|getTestRootPath
argument_list|(
name|fsTarget
argument_list|)
decl_stmt|;
name|fsTarget
operator|.
name|delete
argument_list|(
name|targetOfTests
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|createConfig ()
specifier|public
specifier|static
name|Configuration
name|createConfig
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.viewfs.impl"
argument_list|,
name|ViewFileSystem
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

