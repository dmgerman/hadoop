begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.shell.find
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|PathData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
operator|.
name|BaseExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
operator|.
name|Find
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
operator|.
name|FindOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|shell
operator|.
name|find
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|InOrder
import|;
end_import

begin_class
DECL|class|TestFind
specifier|public
class|class
name|TestFind
block|{
DECL|field|mockFs
specifier|private
specifier|static
name|FileSystem
name|mockFs
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|mockFs
operator|=
name|MockFileSystem
operator|.
name|setup
argument_list|()
expr_stmt|;
name|conf
operator|=
name|mockFs
operator|.
name|getConf
argument_list|()
expr_stmt|;
block|}
comment|// check follow link option is recognized
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsFollowLink ()
specifier|public
name|void
name|processOptionsFollowLink
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|String
name|args
init|=
literal|"-L path"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowLink
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowArgLink
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check follow arg link option is recognized
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsFollowArgLink ()
specifier|public
name|void
name|processOptionsFollowArgLink
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|String
name|args
init|=
literal|"-H path"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowLink
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowArgLink
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check follow arg link option is recognized
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsFollowLinkFollowArgLink ()
specifier|public
name|void
name|processOptionsFollowLinkFollowArgLink
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|String
name|args
init|=
literal|"-L -H path"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowLink
argument_list|()
argument_list|)
expr_stmt|;
comment|// follow link option takes precedence over follow arg link
name|assertFalse
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|isFollowArgLink
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check options and expressions are stripped from args leaving paths
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsExpression ()
specifier|public
name|void
name|processOptionsExpression
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|paths
init|=
literal|"path1 path2 path3"
decl_stmt|;
name|String
name|args
init|=
literal|"-L -H "
operator|+
name|paths
operator|+
literal|" -print -name test"
decl_stmt|;
name|LinkedList
argument_list|<
name|String
argument_list|>
name|argsList
init|=
name|getArgs
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|argsList
argument_list|)
expr_stmt|;
name|LinkedList
argument_list|<
name|String
argument_list|>
name|pathList
init|=
name|getArgs
argument_list|(
name|paths
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|pathList
argument_list|,
name|argsList
argument_list|)
expr_stmt|;
block|}
comment|// check print is used as the default expression
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsNoExpression ()
specifier|public
name|void
name|processOptionsNoExpression
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path"
decl_stmt|;
name|String
name|expected
init|=
literal|"Print(;)"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check unknown options are rejected
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsUnknown ()
specifier|public
name|void
name|processOptionsUnknown
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -unknown"
decl_stmt|;
try|try
block|{
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Unknown expression not caught"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{     }
block|}
comment|// check unknown options are rejected when mixed with known options
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsKnownUnknown ()
specifier|public
name|void
name|processOptionsKnownUnknown
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -print -unknown -print"
decl_stmt|;
try|try
block|{
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Unknown expression not caught"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{     }
block|}
comment|// check no path defaults to current working directory
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsNoPath ()
specifier|public
name|void
name|processOptionsNoPath
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"-print"
decl_stmt|;
name|LinkedList
argument_list|<
name|String
argument_list|>
name|argsList
init|=
name|getArgs
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|argsList
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|Path
operator|.
name|CUR_DIR
argument_list|)
argument_list|,
name|argsList
argument_list|)
expr_stmt|;
block|}
comment|// check -name is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsName ()
specifier|public
name|void
name|processOptionsName
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -name namemask"
decl_stmt|;
name|String
name|expected
init|=
literal|"And(;Name(namemask;),Print(;))"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check -iname is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsIname ()
specifier|public
name|void
name|processOptionsIname
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -iname namemask"
decl_stmt|;
name|String
name|expected
init|=
literal|"And(;Iname-Name(namemask;),Print(;))"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check -print is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsPrint ()
specifier|public
name|void
name|processOptionsPrint
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -print"
decl_stmt|;
name|String
name|expected
init|=
literal|"Print(;)"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check -print0 is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsPrint0 ()
specifier|public
name|void
name|processOptionsPrint0
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -print0"
decl_stmt|;
name|String
name|expected
init|=
literal|"Print0-Print(;)"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check an implicit and is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsNoop ()
specifier|public
name|void
name|processOptionsNoop
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -name one -name two -print"
decl_stmt|;
name|String
name|expected
init|=
literal|"And(;And(;Name(one;),Name(two;)),Print(;))"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check -a is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsA ()
specifier|public
name|void
name|processOptionsA
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -name one -a -name two -a -print"
decl_stmt|;
name|String
name|expected
init|=
literal|"And(;And(;Name(one;),Name(two;)),Print(;))"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check -and is handled correctly
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processOptionsAnd ()
specifier|public
name|void
name|processOptionsAnd
parameter_list|()
throws|throws
name|IOException
block|{
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|args
init|=
literal|"path -name one -and -name two -and -print"
decl_stmt|;
name|String
name|expected
init|=
literal|"And(;And(;Name(one;),Name(two;)),Print(;))"
decl_stmt|;
name|find
operator|.
name|processOptions
argument_list|(
name|getArgs
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|Expression
name|expression
init|=
name|find
operator|.
name|getRootExpression
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|expression
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// check expressions are called in the correct order
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArguments ()
specifier|public
name|void
name|processArguments
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item4
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check that directories are descended correctly when -depth is specified
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsDepthFirst ()
specifier|public
name|void
name|processArgumentsDepthFirst
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setDepthFirst
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item4
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check symlinks given as path arguments are processed correctly with the
comment|// follow arg option set
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsOptionFollowArg ()
specifier|public
name|void
name|processArgumentsOptionFollowArg
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setFollowArgLink
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check symlinks given as path arguments are processed correctly with the
comment|// follow option
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsOptionFollow ()
specifier|public
name|void
name|processArgumentsOptionFollow
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setFollowLink
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// triggers infinite loop message
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// following item5d symlink
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|err
argument_list|)
operator|.
name|println
argument_list|(
literal|"Infinite loop ignored: "
operator|+
name|item5b
operator|.
name|toString
argument_list|()
operator|+
literal|" -> "
operator|+
name|item5
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check minimum depth is handledfollowLink
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsMinDepth ()
specifier|public
name|void
name|processArgumentsMinDepth
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setMinDepth
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check maximum depth is handled
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsMaxDepth ()
specifier|public
name|void
name|processArgumentsMaxDepth
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setMaxDepth
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item4
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check min depth is handled when -depth is specified
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsDepthFirstMinDepth ()
specifier|public
name|void
name|processArgumentsDepthFirstMinDepth
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setDepthFirst
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setMinDepth
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1aa
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1aa
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check max depth is handled when -depth is specified
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsDepthFirstMaxDepth ()
specifier|public
name|void
name|processArgumentsDepthFirstMaxDepth
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setDepthFirst
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setMaxDepth
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item4
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
comment|// check expressions are called in the correct order
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|processArgumentsNoDescend ()
specifier|public
name|void
name|processArgumentsNoDescend
parameter_list|()
throws|throws
name|IOException
block|{
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|items
init|=
name|createDirectories
argument_list|()
decl_stmt|;
name|Find
name|find
init|=
operator|new
name|Find
argument_list|()
decl_stmt|;
name|find
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PrintStream
name|out
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setOut
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|PrintStream
name|err
init|=
name|mock
argument_list|(
name|PrintStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|find
operator|.
name|getOptions
argument_list|()
operator|.
name|setErr
argument_list|(
name|err
argument_list|)
expr_stmt|;
name|Expression
name|expr
init|=
name|mock
argument_list|(
name|Expression
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
operator|(
name|PathData
operator|)
name|any
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|PASS
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|expr
operator|.
name|apply
argument_list|(
name|eq
argument_list|(
name|item1a
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Result
operator|.
name|STOP
argument_list|)
expr_stmt|;
name|FileStatusChecker
name|fsCheck
init|=
name|mock
argument_list|(
name|FileStatusChecker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Expression
name|test
init|=
operator|new
name|TestExpression
argument_list|(
name|expr
argument_list|,
name|fsCheck
argument_list|)
decl_stmt|;
name|find
operator|.
name|setRootExpression
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|find
operator|.
name|processArguments
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|InOrder
name|inOrder
init|=
name|inOrder
argument_list|(
name|expr
argument_list|)
decl_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|setOptions
argument_list|(
name|find
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|prepare
argument_list|()
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item1b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5a
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5b
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5c
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5ca
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|apply
argument_list|(
name|item5e
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|inOrder
operator|.
name|verify
argument_list|(
name|expr
argument_list|)
operator|.
name|finish
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|InOrder
name|inOrderFsCheck
init|=
name|inOrder
argument_list|(
name|fsCheck
argument_list|)
decl_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item1b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item2
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item3
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item4
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5a
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5b
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5c
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5ca
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5d
operator|.
name|stat
argument_list|)
expr_stmt|;
name|inOrderFsCheck
operator|.
name|verify
argument_list|(
name|fsCheck
argument_list|)
operator|.
name|check
argument_list|(
name|item5e
operator|.
name|stat
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|fsCheck
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|err
argument_list|)
expr_stmt|;
block|}
DECL|interface|FileStatusChecker
specifier|private
interface|interface
name|FileStatusChecker
block|{
DECL|method|check (FileStatus fileStatus)
specifier|public
name|void
name|check
parameter_list|(
name|FileStatus
name|fileStatus
parameter_list|)
function_decl|;
block|}
DECL|class|TestExpression
specifier|private
class|class
name|TestExpression
extends|extends
name|BaseExpression
implements|implements
name|Expression
block|{
DECL|field|expr
specifier|private
name|Expression
name|expr
decl_stmt|;
DECL|field|checker
specifier|private
name|FileStatusChecker
name|checker
decl_stmt|;
DECL|method|TestExpression (Expression expr, FileStatusChecker checker)
specifier|public
name|TestExpression
parameter_list|(
name|Expression
name|expr
parameter_list|,
name|FileStatusChecker
name|checker
parameter_list|)
block|{
name|this
operator|.
name|expr
operator|=
name|expr
expr_stmt|;
name|this
operator|.
name|checker
operator|=
name|checker
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (PathData item, int depth)
specifier|public
name|Result
name|apply
parameter_list|(
name|PathData
name|item
parameter_list|,
name|int
name|depth
parameter_list|)
throws|throws
name|IOException
block|{
name|FileStatus
name|fileStatus
init|=
name|getFileStatus
argument_list|(
name|item
argument_list|,
name|depth
argument_list|)
decl_stmt|;
name|checker
operator|.
name|check
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
return|return
name|expr
operator|.
name|apply
argument_list|(
name|item
argument_list|,
name|depth
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setOptions (FindOptions options)
specifier|public
name|void
name|setOptions
parameter_list|(
name|FindOptions
name|options
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|setOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
name|expr
operator|.
name|setOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|prepare ()
specifier|public
name|void
name|prepare
parameter_list|()
throws|throws
name|IOException
block|{
name|expr
operator|.
name|prepare
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|finish ()
specifier|public
name|void
name|finish
parameter_list|()
throws|throws
name|IOException
block|{
name|expr
operator|.
name|finish
argument_list|()
expr_stmt|;
block|}
block|}
comment|// creates a directory structure for traversal
comment|// item1 (directory)
comment|// \- item1a (directory)
comment|//    \- item1aa (file)
comment|// \- item1b (file)
comment|// item2 (directory)
comment|// item3 (file)
comment|// item4 (link) -> item3
comment|// item5 (directory)
comment|// \- item5a (link) -> item1b
comment|// \- item5b (link) -> item5 (infinite loop)
comment|// \- item5c (directory)
comment|//    \- item5ca (file)
comment|// \- item5d (link) -> item5c
comment|// \- item5e (link) -> item5c/item5ca
DECL|field|item1
specifier|private
name|PathData
name|item1
init|=
literal|null
decl_stmt|;
DECL|field|item1a
specifier|private
name|PathData
name|item1a
init|=
literal|null
decl_stmt|;
DECL|field|item1aa
specifier|private
name|PathData
name|item1aa
init|=
literal|null
decl_stmt|;
DECL|field|item1b
specifier|private
name|PathData
name|item1b
init|=
literal|null
decl_stmt|;
DECL|field|item2
specifier|private
name|PathData
name|item2
init|=
literal|null
decl_stmt|;
DECL|field|item3
specifier|private
name|PathData
name|item3
init|=
literal|null
decl_stmt|;
DECL|field|item4
specifier|private
name|PathData
name|item4
init|=
literal|null
decl_stmt|;
DECL|field|item5
specifier|private
name|PathData
name|item5
init|=
literal|null
decl_stmt|;
DECL|field|item5a
specifier|private
name|PathData
name|item5a
init|=
literal|null
decl_stmt|;
DECL|field|item5b
specifier|private
name|PathData
name|item5b
init|=
literal|null
decl_stmt|;
DECL|field|item5c
specifier|private
name|PathData
name|item5c
init|=
literal|null
decl_stmt|;
DECL|field|item5ca
specifier|private
name|PathData
name|item5ca
init|=
literal|null
decl_stmt|;
DECL|field|item5d
specifier|private
name|PathData
name|item5d
init|=
literal|null
decl_stmt|;
DECL|field|item5e
specifier|private
name|PathData
name|item5e
init|=
literal|null
decl_stmt|;
DECL|method|createDirectories ()
specifier|private
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|createDirectories
parameter_list|()
throws|throws
name|IOException
block|{
name|item1
operator|=
name|createPathData
argument_list|(
literal|"item1"
argument_list|)
expr_stmt|;
name|item1a
operator|=
name|createPathData
argument_list|(
literal|"item1/item1a"
argument_list|)
expr_stmt|;
name|item1aa
operator|=
name|createPathData
argument_list|(
literal|"item1/item1a/item1aa"
argument_list|)
expr_stmt|;
name|item1b
operator|=
name|createPathData
argument_list|(
literal|"item1/item1b"
argument_list|)
expr_stmt|;
name|item2
operator|=
name|createPathData
argument_list|(
literal|"item2"
argument_list|)
expr_stmt|;
name|item3
operator|=
name|createPathData
argument_list|(
literal|"item3"
argument_list|)
expr_stmt|;
name|item4
operator|=
name|createPathData
argument_list|(
literal|"item4"
argument_list|)
expr_stmt|;
name|item5
operator|=
name|createPathData
argument_list|(
literal|"item5"
argument_list|)
expr_stmt|;
name|item5a
operator|=
name|createPathData
argument_list|(
literal|"item5/item5a"
argument_list|)
expr_stmt|;
name|item5b
operator|=
name|createPathData
argument_list|(
literal|"item5/item5b"
argument_list|)
expr_stmt|;
name|item5c
operator|=
name|createPathData
argument_list|(
literal|"item5/item5c"
argument_list|)
expr_stmt|;
name|item5ca
operator|=
name|createPathData
argument_list|(
literal|"item5/item5c/item5ca"
argument_list|)
expr_stmt|;
name|item5d
operator|=
name|createPathData
argument_list|(
literal|"item5/item5d"
argument_list|)
expr_stmt|;
name|item5e
operator|=
name|createPathData
argument_list|(
literal|"item5/item5e"
argument_list|)
expr_stmt|;
name|LinkedList
argument_list|<
name|PathData
argument_list|>
name|args
init|=
operator|new
name|LinkedList
argument_list|<
name|PathData
argument_list|>
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|item1
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1a
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1aa
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1b
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item2
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item3
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item4
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5a
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5b
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5c
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5ca
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5d
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5e
operator|.
name|stat
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|listStatus
argument_list|(
name|eq
argument_list|(
name|item1
operator|.
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
index|[]
block|{
name|item1a
operator|.
name|stat
block|,
name|item1b
operator|.
name|stat
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|listStatus
argument_list|(
name|eq
argument_list|(
name|item1a
operator|.
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
index|[]
block|{
name|item1aa
operator|.
name|stat
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|listStatus
argument_list|(
name|eq
argument_list|(
name|item2
operator|.
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|listStatus
argument_list|(
name|eq
argument_list|(
name|item5
operator|.
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
index|[]
block|{
name|item5a
operator|.
name|stat
block|,
name|item5b
operator|.
name|stat
block|,
name|item5c
operator|.
name|stat
block|,
name|item5d
operator|.
name|stat
block|,
name|item5e
operator|.
name|stat
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|listStatus
argument_list|(
name|eq
argument_list|(
name|item5c
operator|.
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
index|[]
block|{
name|item5ca
operator|.
name|stat
block|}
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1a
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1aa
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item1b
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item2
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item3
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item4
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5a
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5b
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5d
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5e
operator|.
name|stat
operator|.
name|isSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item4
operator|.
name|stat
operator|.
name|getSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|item3
operator|.
name|path
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5a
operator|.
name|stat
operator|.
name|getSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|item1b
operator|.
name|path
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5b
operator|.
name|stat
operator|.
name|getSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|item5
operator|.
name|path
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5d
operator|.
name|stat
operator|.
name|getSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|item5c
operator|.
name|path
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|item5e
operator|.
name|stat
operator|.
name|getSymlink
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|item5ca
operator|.
name|path
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|item3
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|item4
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|item5
argument_list|)
expr_stmt|;
return|return
name|args
return|;
block|}
DECL|method|createPathData (String name)
specifier|private
name|PathData
name|createPathData
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|FileStatus
name|fstat
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fstat
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fstat
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"fileStatus:"
operator|+
name|name
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockFs
operator|.
name|getFileStatus
argument_list|(
name|eq
argument_list|(
name|path
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fstat
argument_list|)
expr_stmt|;
name|PathData
name|item
init|=
operator|new
name|PathData
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|conf
argument_list|)
decl_stmt|;
return|return
name|item
return|;
block|}
DECL|method|getArgs (String cmd)
specifier|private
name|LinkedList
argument_list|<
name|String
argument_list|>
name|getArgs
parameter_list|(
name|String
name|cmd
parameter_list|)
block|{
return|return
operator|new
name|LinkedList
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|cmd
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

