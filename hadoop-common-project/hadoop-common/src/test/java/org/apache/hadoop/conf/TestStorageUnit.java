begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.conf
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_comment
comment|/**  * Tests that Storage Units work as expected.  */
end_comment

begin_class
DECL|class|TestStorageUnit
specifier|public
class|class
name|TestStorageUnit
block|{
DECL|field|KB
specifier|final
specifier|static
name|double
name|KB
init|=
literal|1024.0
decl_stmt|;
DECL|field|MB
specifier|final
specifier|static
name|double
name|MB
init|=
name|KB
operator|*
literal|1024.0
decl_stmt|;
DECL|field|GB
specifier|final
specifier|static
name|double
name|GB
init|=
name|MB
operator|*
literal|1024.0
decl_stmt|;
DECL|field|TB
specifier|final
specifier|static
name|double
name|TB
init|=
name|GB
operator|*
literal|1024.0
decl_stmt|;
DECL|field|PB
specifier|final
specifier|static
name|double
name|PB
init|=
name|TB
operator|*
literal|1024.0
decl_stmt|;
DECL|field|EB
specifier|final
specifier|static
name|double
name|EB
init|=
name|PB
operator|*
literal|1024.0
decl_stmt|;
annotation|@
name|Test
DECL|method|testByteToKiloBytes ()
specifier|public
name|void
name|testByteToKiloBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1024.0
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|2048.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
operator|-
literal|1024.0
argument_list|,
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|34565.0
argument_list|,
literal|33.7549
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|223344332.0
argument_list|,
literal|218109.6992
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1234983.0
argument_list|,
literal|1206.0381
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1234332.0
argument_list|,
literal|1205.4023
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toKBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBytesToMegaBytes ()
specifier|public
name|void
name|testBytesToMegaBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1048576.0
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|24117248.0
argument_list|,
literal|23.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|459920023.0
argument_list|,
literal|438.6139
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|234443233.0
argument_list|,
literal|223.5825
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
operator|-
literal|35651584.0
argument_list|,
operator|-
literal|34.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toMBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBytesToGigaBytes ()
specifier|public
name|void
name|testBytesToGigaBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1073741824.0
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|24696061952.0
argument_list|,
literal|23.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|459920023.0
argument_list|,
literal|0.4283
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|234443233.0
argument_list|,
literal|0.2183
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
operator|-
literal|36507222016.0
argument_list|,
operator|-
literal|34.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toGBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBytesToTerraBytes ()
specifier|public
name|void
name|testBytesToTerraBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1.09951E
operator|+
literal|12
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|2.52888E
operator|+
literal|13
argument_list|,
literal|23.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|459920023.0
argument_list|,
literal|0.0004
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|234443233.0
argument_list|,
literal|0.0002
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
operator|-
literal|3.73834E
operator|+
literal|13
argument_list|,
operator|-
literal|34.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toTBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBytesToPetaBytes ()
specifier|public
name|void
name|testBytesToPetaBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1.1259E
operator|+
literal|15
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|2.58957E
operator|+
literal|16
argument_list|,
literal|23.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|4.70958E
operator|+
literal|11
argument_list|,
literal|0.0004
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|234443233.0
argument_list|,
literal|0.0000
argument_list|)
expr_stmt|;
comment|// Out of precision window.
name|results
operator|.
name|put
argument_list|(
operator|-
literal|3.82806E
operator|+
literal|16
argument_list|,
operator|-
literal|34.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toPBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testBytesToExaBytes ()
specifier|public
name|void
name|testBytesToExaBytes
parameter_list|()
block|{
name|Map
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|results
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|1.15292E
operator|+
literal|18
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|2.65172E
operator|+
literal|19
argument_list|,
literal|23.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|4.82261E
operator|+
literal|14
argument_list|,
literal|0.0004
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|234443233.0
argument_list|,
literal|0.0000
argument_list|)
expr_stmt|;
comment|// Out of precision window.
name|results
operator|.
name|put
argument_list|(
operator|-
literal|3.91993E
operator|+
literal|19
argument_list|,
operator|-
literal|34.0
argument_list|)
expr_stmt|;
name|results
operator|.
name|put
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Double
argument_list|,
name|Double
argument_list|>
name|entry
range|:
name|results
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toEBs
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|is
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testByteConversions ()
specifier|public
name|void
name|testByteConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"bytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"bytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|toBytes
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|BYTES
operator|.
name|fromBytes
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testKBConversions ()
specifier|public
name|void
name|testKBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"kb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"k"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"kilobytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"kilobytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toKBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|KB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|fromBytes
argument_list|(
name|KB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toKBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toMBs
argument_list|(
literal|3.0
operator|*
literal|1024.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|3.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toGBs
argument_list|(
literal|1073741824
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toTBs
argument_list|(
literal|1073741824
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toPBs
argument_list|(
literal|1.0995116e+12
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toEBs
argument_list|(
literal|1.1258999e+15
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMBConversions ()
specifier|public
name|void
name|testMBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"mb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"m"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"megabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"megabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toMBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|MB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|fromBytes
argument_list|(
name|MB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toKBs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toMBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toGBs
argument_list|(
literal|44040192
argument_list|)
argument_list|,
name|is
argument_list|(
literal|43008.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toTBs
argument_list|(
literal|1073741824
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toPBs
argument_list|(
literal|1073741824
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toEBs
argument_list|(
literal|1
operator|*
operator|(
name|EB
operator|/
name|MB
operator|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGBConversions ()
specifier|public
name|void
name|testGBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"gb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"gigabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"gigabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toGBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|GB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|fromBytes
argument_list|(
name|GB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toKBs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toMBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toGBs
argument_list|(
literal|44040192.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|44040192.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toTBs
argument_list|(
literal|1073741824
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1048576.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toPBs
argument_list|(
literal|1.07375e+9
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0078
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|GB
operator|.
name|toEBs
argument_list|(
literal|1
operator|*
operator|(
name|EB
operator|/
name|GB
operator|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTBConversions ()
specifier|public
name|void
name|testTBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"tb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"t"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"terabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"terabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toTBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|TB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|fromBytes
argument_list|(
name|TB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toKBs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toMBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toGBs
argument_list|(
literal|44040192.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|45097156608.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toTBs
argument_list|(
literal|1073741824.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1073741824.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toPBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|TB
operator|.
name|toEBs
argument_list|(
literal|1
operator|*
operator|(
name|EB
operator|/
name|TB
operator|)
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPBConversions ()
specifier|public
name|void
name|testPBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"pb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"p"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"petabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"petabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toPBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|PB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|fromBytes
argument_list|(
name|PB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toKBs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|PB
operator|/
name|KB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toMBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
operator|*
operator|(
name|PB
operator|/
name|MB
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toGBs
argument_list|(
literal|44040192.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|44040192.0
operator|*
name|PB
operator|/
name|GB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toTBs
argument_list|(
literal|1073741824.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1073741824.0
operator|*
operator|(
name|PB
operator|/
name|TB
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toPBs
argument_list|(
literal|1024.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|PB
operator|.
name|toEBs
argument_list|(
literal|1024.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEBConversions ()
specifier|public
name|void
name|testEBConversions
parameter_list|()
block|{
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|getShortName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"eb"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|getSuffixChar
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|getLongName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"exabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toString
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"exabytes"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toEBs
argument_list|(
literal|1024
argument_list|)
argument_list|,
name|is
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|getDefault
argument_list|(
literal|1024
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|EB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|fromBytes
argument_list|(
name|EB
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toKBs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|is
argument_list|(
name|EB
operator|/
name|KB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toMBs
argument_list|(
literal|10
argument_list|)
argument_list|,
name|is
argument_list|(
literal|10.0
operator|*
operator|(
name|EB
operator|/
name|MB
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toGBs
argument_list|(
literal|44040192.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|44040192.0
operator|*
name|EB
operator|/
name|GB
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toTBs
argument_list|(
literal|1073741824.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1073741824.0
operator|*
operator|(
name|EB
operator|/
name|TB
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toPBs
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|1024.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|StorageUnit
operator|.
name|EB
operator|.
name|toEBs
argument_list|(
literal|42.0
argument_list|)
argument_list|,
name|is
argument_list|(
literal|42.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

