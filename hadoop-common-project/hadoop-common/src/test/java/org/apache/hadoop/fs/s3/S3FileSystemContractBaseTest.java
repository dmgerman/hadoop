begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemContractBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_class
DECL|class|S3FileSystemContractBaseTest
specifier|public
specifier|abstract
class|class
name|S3FileSystemContractBaseTest
extends|extends
name|FileSystemContractBaseTest
block|{
DECL|field|store
specifier|private
name|FileSystemStore
name|store
decl_stmt|;
DECL|method|getFileSystemStore ()
specifier|abstract
name|FileSystemStore
name|getFileSystemStore
parameter_list|()
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|store
operator|=
name|getFileSystemStore
argument_list|()
expr_stmt|;
name|fs
operator|=
operator|new
name|S3FileSystem
argument_list|(
name|store
argument_list|)
expr_stmt|;
name|fs
operator|.
name|initialize
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"test.fs.s3.name"
argument_list|)
argument_list|)
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|store
operator|.
name|purge
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|testBlockSize ()
specifier|public
name|void
name|testBlockSize
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|newBlockSize
init|=
name|fs
operator|.
name|getDefaultBlockSize
argument_list|()
operator|*
literal|2
decl_stmt|;
name|fs
operator|.
name|getConf
argument_list|()
operator|.
name|setLong
argument_list|(
literal|"fs.s3.block.size"
argument_list|,
name|newBlockSize
argument_list|)
expr_stmt|;
name|Path
name|file
init|=
name|path
argument_list|(
literal|"/test/hadoop/file"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Double default block size"
argument_list|,
name|newBlockSize
argument_list|,
name|fs
operator|.
name|getFileStatus
argument_list|(
name|file
argument_list|)
operator|.
name|getBlockSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

