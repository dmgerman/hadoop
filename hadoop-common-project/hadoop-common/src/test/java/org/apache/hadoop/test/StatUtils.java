begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.test
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Shell
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * Helper class for stat/permission utility methods. Forks processes to query  * permission info.  */
end_comment

begin_class
DECL|class|StatUtils
specifier|public
class|class
name|StatUtils
block|{
DECL|class|Permission
specifier|public
specifier|static
class|class
name|Permission
block|{
DECL|field|owner
specifier|private
name|String
name|owner
decl_stmt|;
DECL|field|group
specifier|private
name|String
name|group
decl_stmt|;
DECL|field|fsPermission
specifier|private
name|FsPermission
name|fsPermission
decl_stmt|;
DECL|method|Permission (String owner, String group, FsPermission fsPermission)
specifier|public
name|Permission
parameter_list|(
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|FsPermission
name|fsPermission
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
name|this
operator|.
name|group
operator|=
name|group
expr_stmt|;
name|this
operator|.
name|fsPermission
operator|=
name|fsPermission
expr_stmt|;
block|}
DECL|method|getOwner ()
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
DECL|method|getGroup ()
specifier|public
name|String
name|getGroup
parameter_list|()
block|{
return|return
name|group
return|;
block|}
DECL|method|getFsPermission ()
specifier|public
name|FsPermission
name|getFsPermission
parameter_list|()
block|{
return|return
name|fsPermission
return|;
block|}
block|}
DECL|method|getPermissionFromProcess (String filePath)
specifier|public
specifier|static
name|Permission
name|getPermissionFromProcess
parameter_list|(
name|String
name|filePath
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|shellCommand
init|=
name|Shell
operator|.
name|getGetPermissionCommand
argument_list|()
decl_stmt|;
name|String
name|sPerm
init|=
name|getPermissionStringFromProcess
argument_list|(
name|shellCommand
argument_list|,
name|filePath
argument_list|)
decl_stmt|;
name|StringTokenizer
name|tokenizer
init|=
operator|new
name|StringTokenizer
argument_list|(
name|sPerm
argument_list|,
name|Shell
operator|.
name|TOKEN_SEPARATOR_REGEX
argument_list|)
decl_stmt|;
name|String
name|symbolicPermission
init|=
name|tokenizer
operator|.
name|nextToken
argument_list|()
decl_stmt|;
name|tokenizer
operator|.
name|nextToken
argument_list|()
expr_stmt|;
comment|// skip hard link
name|String
name|owner
init|=
name|tokenizer
operator|.
name|nextToken
argument_list|()
decl_stmt|;
name|String
name|group
init|=
name|tokenizer
operator|.
name|nextToken
argument_list|()
decl_stmt|;
if|if
condition|(
name|Shell
operator|.
name|WINDOWS
condition|)
block|{
name|owner
operator|=
name|removeDomain
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|group
operator|=
name|removeDomain
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
name|Permission
name|permission
init|=
operator|new
name|Permission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|FsPermission
operator|.
name|valueOf
argument_list|(
name|symbolicPermission
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|permission
return|;
block|}
DECL|method|setPermissionFromProcess (String chmod, String filePath)
specifier|public
specifier|static
name|void
name|setPermissionFromProcess
parameter_list|(
name|String
name|chmod
parameter_list|,
name|String
name|filePath
parameter_list|)
throws|throws
name|Exception
block|{
name|setPermissionFromProcess
argument_list|(
name|chmod
argument_list|,
literal|false
argument_list|,
name|filePath
argument_list|)
expr_stmt|;
block|}
DECL|method|setPermissionFromProcess (String chmod, boolean recursive, String filePath)
specifier|public
specifier|static
name|void
name|setPermissionFromProcess
parameter_list|(
name|String
name|chmod
parameter_list|,
name|boolean
name|recursive
parameter_list|,
name|String
name|filePath
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|shellCommand
init|=
name|Shell
operator|.
name|getSetPermissionCommand
argument_list|(
name|chmod
argument_list|,
name|recursive
argument_list|)
decl_stmt|;
name|getPermissionStringFromProcess
argument_list|(
name|shellCommand
argument_list|,
name|filePath
argument_list|)
expr_stmt|;
block|}
DECL|method|removeDomain (String str)
specifier|private
specifier|static
name|String
name|removeDomain
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|int
name|index
init|=
name|str
operator|.
name|indexOf
argument_list|(
literal|"\\"
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|!=
operator|-
literal|1
condition|)
block|{
name|str
operator|=
name|str
operator|.
name|substring
argument_list|(
name|index
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|str
return|;
block|}
DECL|method|getPermissionStringFromProcess (String[] shellCommand, String testFilePath)
specifier|private
specifier|static
name|String
name|getPermissionStringFromProcess
parameter_list|(
name|String
index|[]
name|shellCommand
parameter_list|,
name|String
name|testFilePath
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|cmd
init|=
operator|new
name|ArrayList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|shellCommand
argument_list|)
argument_list|)
decl_stmt|;
name|cmd
operator|.
name|add
argument_list|(
name|testFilePath
argument_list|)
expr_stmt|;
name|ProcessBuilder
name|processBuilder
init|=
operator|new
name|ProcessBuilder
argument_list|(
name|cmd
argument_list|)
decl_stmt|;
name|Process
name|process
init|=
name|processBuilder
operator|.
name|start
argument_list|()
decl_stmt|;
name|ExecutorService
name|executorService
init|=
name|Executors
operator|.
name|newSingleThreadExecutor
argument_list|()
decl_stmt|;
name|executorService
operator|.
name|awaitTermination
argument_list|(
literal|2000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
try|try
block|{
name|Future
argument_list|<
name|String
argument_list|>
name|future
init|=
name|executorService
operator|.
name|submit
argument_list|(
parameter_list|()
lambda|->
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|process
operator|.
name|getInputStream
argument_list|()
argument_list|,
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
argument_list|)
operator|.
name|lines
argument_list|()
operator|.
name|findFirst
argument_list|()
operator|.
name|orElse
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|future
operator|.
name|get
argument_list|()
return|;
block|}
finally|finally
block|{
name|process
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|executorService
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

