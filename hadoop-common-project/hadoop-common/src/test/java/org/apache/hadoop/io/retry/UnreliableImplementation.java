begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.io.retry
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|retry
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|StandbyException
import|;
end_import

begin_class
DECL|class|UnreliableImplementation
specifier|public
class|class
name|UnreliableImplementation
implements|implements
name|UnreliableInterface
block|{
DECL|field|failsOnceInvocationCount
specifier|private
name|int
name|failsOnceInvocationCount
decl_stmt|,
DECL|field|failsOnceWithValueInvocationCount
name|failsOnceWithValueInvocationCount
decl_stmt|,
DECL|field|failsTenTimesInvocationCount
name|failsTenTimesInvocationCount
decl_stmt|,
DECL|field|succeedsOnceThenFailsCount
name|succeedsOnceThenFailsCount
decl_stmt|,
DECL|field|succeedsOnceThenFailsIdempotentCount
name|succeedsOnceThenFailsIdempotentCount
decl_stmt|,
DECL|field|succeedsTenTimesThenFailsCount
name|succeedsTenTimesThenFailsCount
decl_stmt|;
DECL|field|identifier
specifier|private
name|String
name|identifier
decl_stmt|;
DECL|field|exceptionToFailWith
specifier|private
name|TypeOfExceptionToFailWith
name|exceptionToFailWith
decl_stmt|;
DECL|enum|TypeOfExceptionToFailWith
specifier|public
specifier|static
enum|enum
name|TypeOfExceptionToFailWith
block|{
DECL|enumConstant|UNRELIABLE_EXCEPTION
name|UNRELIABLE_EXCEPTION
block|,
DECL|enumConstant|STANDBY_EXCEPTION
name|STANDBY_EXCEPTION
block|,
DECL|enumConstant|IO_EXCEPTION
name|IO_EXCEPTION
block|}
DECL|method|UnreliableImplementation ()
specifier|public
name|UnreliableImplementation
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|UnreliableImplementation (String identifier)
specifier|public
name|UnreliableImplementation
parameter_list|(
name|String
name|identifier
parameter_list|)
block|{
name|this
argument_list|(
name|identifier
argument_list|,
name|TypeOfExceptionToFailWith
operator|.
name|UNRELIABLE_EXCEPTION
argument_list|)
expr_stmt|;
block|}
DECL|method|setIdentifier (String identifier)
specifier|public
name|void
name|setIdentifier
parameter_list|(
name|String
name|identifier
parameter_list|)
block|{
name|this
operator|.
name|identifier
operator|=
name|identifier
expr_stmt|;
block|}
DECL|method|UnreliableImplementation (String identifier, TypeOfExceptionToFailWith exceptionToFailWith)
specifier|public
name|UnreliableImplementation
parameter_list|(
name|String
name|identifier
parameter_list|,
name|TypeOfExceptionToFailWith
name|exceptionToFailWith
parameter_list|)
block|{
name|this
operator|.
name|identifier
operator|=
name|identifier
expr_stmt|;
name|this
operator|.
name|exceptionToFailWith
operator|=
name|exceptionToFailWith
expr_stmt|;
block|}
DECL|method|alwaysSucceeds ()
specifier|public
name|void
name|alwaysSucceeds
parameter_list|()
block|{
comment|// do nothing
block|}
DECL|method|alwaysFailsWithFatalException ()
specifier|public
name|void
name|alwaysFailsWithFatalException
parameter_list|()
throws|throws
name|FatalException
block|{
throw|throw
operator|new
name|FatalException
argument_list|()
throw|;
block|}
DECL|method|alwaysFailsWithRemoteFatalException ()
specifier|public
name|void
name|alwaysFailsWithRemoteFatalException
parameter_list|()
throws|throws
name|RemoteException
block|{
throw|throw
operator|new
name|RemoteException
argument_list|(
name|FatalException
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|"Oops"
argument_list|)
throw|;
block|}
DECL|method|failsOnceThenSucceeds ()
specifier|public
name|void
name|failsOnceThenSucceeds
parameter_list|()
throws|throws
name|UnreliableException
block|{
if|if
condition|(
name|failsOnceInvocationCount
operator|++
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|UnreliableException
argument_list|()
throw|;
block|}
block|}
DECL|method|failsOnceThenSucceedsWithReturnValue ()
specifier|public
name|boolean
name|failsOnceThenSucceedsWithReturnValue
parameter_list|()
throws|throws
name|UnreliableException
block|{
if|if
condition|(
name|failsOnceWithValueInvocationCount
operator|++
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|UnreliableException
argument_list|()
throw|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|failsTenTimesThenSucceeds ()
specifier|public
name|void
name|failsTenTimesThenSucceeds
parameter_list|()
throws|throws
name|UnreliableException
block|{
if|if
condition|(
name|failsTenTimesInvocationCount
operator|++
operator|<
literal|10
condition|)
block|{
throw|throw
operator|new
name|UnreliableException
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|succeedsOnceThenFailsReturningString ()
specifier|public
name|String
name|succeedsOnceThenFailsReturningString
parameter_list|()
throws|throws
name|UnreliableException
throws|,
name|IOException
throws|,
name|StandbyException
block|{
if|if
condition|(
name|succeedsOnceThenFailsCount
operator|++
operator|<
literal|1
condition|)
block|{
return|return
name|identifier
return|;
block|}
else|else
block|{
switch|switch
condition|(
name|exceptionToFailWith
condition|)
block|{
case|case
name|STANDBY_EXCEPTION
case|:
throw|throw
operator|new
name|StandbyException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|UNRELIABLE_EXCEPTION
case|:
throw|throw
operator|new
name|UnreliableException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|IO_EXCEPTION
case|:
throw|throw
operator|new
name|IOException
argument_list|(
name|identifier
argument_list|)
throw|;
block|}
return|return
literal|null
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|succeedsTenTimesThenFailsReturningString ()
specifier|public
name|String
name|succeedsTenTimesThenFailsReturningString
parameter_list|()
throws|throws
name|UnreliableException
throws|,
name|IOException
throws|,
name|StandbyException
block|{
if|if
condition|(
name|succeedsTenTimesThenFailsCount
operator|++
operator|<
literal|10
condition|)
block|{
return|return
name|identifier
return|;
block|}
else|else
block|{
switch|switch
condition|(
name|exceptionToFailWith
condition|)
block|{
case|case
name|STANDBY_EXCEPTION
case|:
throw|throw
operator|new
name|StandbyException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|UNRELIABLE_EXCEPTION
case|:
throw|throw
operator|new
name|UnreliableException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|IO_EXCEPTION
case|:
throw|throw
operator|new
name|IOException
argument_list|(
name|identifier
argument_list|)
throw|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|identifier
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|succeedsOnceThenFailsReturningStringIdempotent ()
specifier|public
name|String
name|succeedsOnceThenFailsReturningStringIdempotent
parameter_list|()
throws|throws
name|UnreliableException
throws|,
name|StandbyException
throws|,
name|IOException
block|{
if|if
condition|(
name|succeedsOnceThenFailsIdempotentCount
operator|++
operator|<
literal|1
condition|)
block|{
return|return
name|identifier
return|;
block|}
else|else
block|{
switch|switch
condition|(
name|exceptionToFailWith
condition|)
block|{
case|case
name|STANDBY_EXCEPTION
case|:
throw|throw
operator|new
name|StandbyException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|UNRELIABLE_EXCEPTION
case|:
throw|throw
operator|new
name|UnreliableException
argument_list|(
name|identifier
argument_list|)
throw|;
case|case
name|IO_EXCEPTION
case|:
throw|throw
operator|new
name|IOException
argument_list|(
name|identifier
argument_list|)
throw|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|identifier
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|failsIfIdentifierDoesntMatch (String identifier)
specifier|public
name|String
name|failsIfIdentifierDoesntMatch
parameter_list|(
name|String
name|identifier
parameter_list|)
throws|throws
name|UnreliableException
throws|,
name|StandbyException
throws|,
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|identifier
operator|.
name|equals
argument_list|(
name|identifier
argument_list|)
condition|)
block|{
return|return
name|identifier
return|;
block|}
else|else
block|{
name|String
name|message
init|=
literal|"expected '"
operator|+
name|this
operator|.
name|identifier
operator|+
literal|"' but received '"
operator|+
name|identifier
operator|+
literal|"'"
decl_stmt|;
switch|switch
condition|(
name|exceptionToFailWith
condition|)
block|{
case|case
name|STANDBY_EXCEPTION
case|:
throw|throw
operator|new
name|StandbyException
argument_list|(
name|message
argument_list|)
throw|;
case|case
name|UNRELIABLE_EXCEPTION
case|:
throw|throw
operator|new
name|UnreliableException
argument_list|(
name|message
argument_list|)
throw|;
case|case
name|IO_EXCEPTION
case|:
throw|throw
operator|new
name|IOException
argument_list|(
name|message
argument_list|)
throw|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|message
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

