begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.service.launcher
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|launcher
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ExitUtil
import|;
end_import

begin_comment
comment|/**  * Service launcher for testing: The exit operation has been overloaded to  * record the exit exception.  *  * It relies on the test runner to have disabled exits in the  * {@link ExitUtil} class.  * @param<S> type of service to launch  */
end_comment

begin_class
DECL|class|ExitTrackingServiceLauncher
specifier|public
class|class
name|ExitTrackingServiceLauncher
parameter_list|<
name|S
extends|extends
name|Service
parameter_list|>
extends|extends
name|ServiceLauncher
argument_list|<
name|S
argument_list|>
block|{
DECL|field|exitException
specifier|private
name|ExitUtil
operator|.
name|ExitException
name|exitException
decl_stmt|;
DECL|method|ExitTrackingServiceLauncher (String serviceClassName)
specifier|public
name|ExitTrackingServiceLauncher
parameter_list|(
name|String
name|serviceClassName
parameter_list|)
block|{
name|super
argument_list|(
name|serviceClassName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|exit (ExitUtil.ExitException ee)
specifier|protected
name|void
name|exit
parameter_list|(
name|ExitUtil
operator|.
name|ExitException
name|ee
parameter_list|)
block|{
name|exitException
operator|=
name|ee
expr_stmt|;
name|super
operator|.
name|exit
argument_list|(
name|ee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|exit (int exitCode, String message)
specifier|protected
name|void
name|exit
parameter_list|(
name|int
name|exitCode
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|exit
argument_list|(
operator|new
name|ServiceLaunchException
argument_list|(
name|exitCode
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|bindCommandOptions ()
specifier|public
name|void
name|bindCommandOptions
parameter_list|()
block|{
name|super
operator|.
name|bindCommandOptions
argument_list|()
expr_stmt|;
block|}
DECL|method|getExitException ()
specifier|public
name|ExitUtil
operator|.
name|ExitException
name|getExitException
parameter_list|()
block|{
return|return
name|exitException
return|;
block|}
block|}
end_class

end_unit

