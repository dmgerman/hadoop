begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|RawLocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test ViewFileSystem's support for having delegation tokens fetched and cached  * for the file system.  *   * Currently this class just ensures that getCanonicalServiceName() always  * returns<code>null</code> for ViewFileSystem instances.  */
end_comment

begin_class
DECL|class|TestViewFileSystemDelegationTokenSupport
specifier|public
class|class
name|TestViewFileSystemDelegationTokenSupport
block|{
DECL|field|MOUNT_TABLE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|MOUNT_TABLE_NAME
init|=
literal|"vfs-cluster"
decl_stmt|;
DECL|field|conf
specifier|static
name|Configuration
name|conf
decl_stmt|;
DECL|field|viewFs
specifier|static
name|FileSystem
name|viewFs
decl_stmt|;
DECL|field|fs1
specifier|static
name|FakeFileSystem
name|fs1
decl_stmt|;
DECL|field|fs2
specifier|static
name|FakeFileSystem
name|fs2
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
name|ViewFileSystemTestSetup
operator|.
name|createConfig
argument_list|()
expr_stmt|;
name|fs1
operator|=
name|setupFileSystem
argument_list|(
operator|new
name|URI
argument_list|(
literal|"fs1:///"
argument_list|)
argument_list|,
name|FakeFileSystem
operator|.
name|class
argument_list|)
expr_stmt|;
name|fs2
operator|=
name|setupFileSystem
argument_list|(
operator|new
name|URI
argument_list|(
literal|"fs2:///"
argument_list|)
argument_list|,
name|FakeFileSystem
operator|.
name|class
argument_list|)
expr_stmt|;
name|viewFs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|setupFileSystem (URI uri, Class<? extends FileSystem> clazz)
specifier|static
name|FakeFileSystem
name|setupFileSystem
parameter_list|(
name|URI
name|uri
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|FileSystem
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|scheme
init|=
name|uri
operator|.
name|getScheme
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs."
operator|+
name|scheme
operator|+
literal|".impl"
argument_list|,
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|FakeFileSystem
name|fs
init|=
operator|(
name|FakeFileSystem
operator|)
name|FileSystem
operator|.
name|get
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// mount each fs twice, will later ensure 1 token/fs
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
literal|"/mounts/"
operator|+
name|scheme
operator|+
literal|"-one"
argument_list|,
name|fs
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
literal|"/mounts/"
operator|+
name|scheme
operator|+
literal|"-two"
argument_list|,
name|fs
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|fs
return|;
block|}
comment|/**    * Regression test for HADOOP-8408.    */
annotation|@
name|Test
DECL|method|testGetCanonicalServiceNameWithNonDefaultMountTable ()
specifier|public
name|void
name|testGetCanonicalServiceNameWithNonDefaultMountTable
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
name|MOUNT_TABLE_NAME
argument_list|,
literal|"/user"
argument_list|,
operator|new
name|URI
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|FileSystem
name|viewFs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
operator|new
name|URI
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_SCHEME
operator|+
literal|"://"
operator|+
name|MOUNT_TABLE_NAME
argument_list|)
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|serviceName
init|=
name|viewFs
operator|.
name|getCanonicalServiceName
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCanonicalServiceNameWithDefaultMountTable ()
specifier|public
name|void
name|testGetCanonicalServiceNameWithDefaultMountTable
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
literal|"/user"
argument_list|,
operator|new
name|URI
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|FileSystem
name|viewFs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|serviceName
init|=
name|viewFs
operator|.
name|getCanonicalServiceName
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetChildFileSystems ()
specifier|public
name|void
name|testGetChildFileSystems
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|fs1
operator|.
name|getChildFileSystems
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|fs2
operator|.
name|getChildFileSystems
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileSystem
argument_list|>
name|children
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|viewFs
operator|.
name|getChildFileSystems
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|children
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|children
operator|.
name|contains
argument_list|(
name|fs1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|children
operator|.
name|contains
argument_list|(
name|fs2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddDelegationTokens ()
specifier|public
name|void
name|testAddDelegationTokens
parameter_list|()
throws|throws
name|Exception
block|{
name|Credentials
name|creds
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|fs1Tokens
index|[]
init|=
name|addTokensWithCreds
argument_list|(
name|fs1
argument_list|,
name|creds
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fs1Tokens
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|fs2Tokens
index|[]
init|=
name|addTokensWithCreds
argument_list|(
name|fs2
argument_list|,
name|creds
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fs2Tokens
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
name|Credentials
name|savedCreds
init|=
name|creds
decl_stmt|;
name|creds
operator|=
operator|new
name|Credentials
argument_list|()
expr_stmt|;
comment|// should get the same set of tokens as explicitly fetched above
name|Token
argument_list|<
name|?
argument_list|>
name|viewFsTokens
index|[]
init|=
name|viewFs
operator|.
name|addDelegationTokens
argument_list|(
literal|"me"
argument_list|,
name|creds
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|viewFsTokens
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|creds
operator|.
name|getAllTokens
argument_list|()
operator|.
name|containsAll
argument_list|(
name|savedCreds
operator|.
name|getAllTokens
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|savedCreds
operator|.
name|numberOfTokens
argument_list|()
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
comment|// should get none, already have all tokens
name|viewFsTokens
operator|=
name|viewFs
operator|.
name|addDelegationTokens
argument_list|(
literal|"me"
argument_list|,
name|creds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|viewFsTokens
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|creds
operator|.
name|getAllTokens
argument_list|()
operator|.
name|containsAll
argument_list|(
name|savedCreds
operator|.
name|getAllTokens
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|savedCreds
operator|.
name|numberOfTokens
argument_list|()
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addTokensWithCreds (FileSystem fs, Credentials creds)
name|Token
argument_list|<
name|?
argument_list|>
index|[]
name|addTokensWithCreds
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Credentials
name|creds
parameter_list|)
throws|throws
name|Exception
block|{
name|Credentials
name|savedCreds
decl_stmt|;
name|savedCreds
operator|=
operator|new
name|Credentials
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|tokens
index|[]
init|=
name|fs
operator|.
name|addDelegationTokens
argument_list|(
literal|"me"
argument_list|,
name|creds
argument_list|)
decl_stmt|;
comment|// test that we got the token we wanted, and that creds were modified
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getCanonicalServiceName
argument_list|()
argument_list|,
name|tokens
index|[
literal|0
index|]
operator|.
name|getService
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|creds
operator|.
name|getAllTokens
argument_list|()
operator|.
name|contains
argument_list|(
name|tokens
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|creds
operator|.
name|getAllTokens
argument_list|()
operator|.
name|containsAll
argument_list|(
name|savedCreds
operator|.
name|getAllTokens
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|savedCreds
operator|.
name|numberOfTokens
argument_list|()
operator|+
literal|1
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
comment|// shouldn't get any new tokens since already in creds
name|savedCreds
operator|=
operator|new
name|Credentials
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|?
argument_list|>
name|tokenRefetch
index|[]
init|=
name|fs
operator|.
name|addDelegationTokens
argument_list|(
literal|"me"
argument_list|,
name|creds
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|tokenRefetch
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|creds
operator|.
name|getAllTokens
argument_list|()
operator|.
name|containsAll
argument_list|(
name|savedCreds
operator|.
name|getAllTokens
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|savedCreds
operator|.
name|numberOfTokens
argument_list|()
argument_list|,
name|creds
operator|.
name|numberOfTokens
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tokens
return|;
block|}
DECL|class|FakeFileSystem
specifier|static
class|class
name|FakeFileSystem
extends|extends
name|RawLocalFileSystem
block|{
DECL|field|uri
name|URI
name|uri
decl_stmt|;
DECL|method|initialize (URI name, Configuration conf)
specifier|public
name|void
name|initialize
parameter_list|(
name|URI
name|name
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|uri
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getInitialWorkingDirectory ()
specifier|public
name|Path
name|getInitialWorkingDirectory
parameter_list|()
block|{
return|return
operator|new
name|Path
argument_list|(
literal|"/"
argument_list|)
return|;
comment|// ctor calls getUri before the uri is inited...
block|}
DECL|method|getUri ()
specifier|public
name|URI
name|getUri
parameter_list|()
block|{
return|return
name|uri
return|;
block|}
annotation|@
name|Override
DECL|method|getCanonicalServiceName ()
specifier|public
name|String
name|getCanonicalServiceName
parameter_list|()
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|this
operator|.
name|getUri
argument_list|()
operator|+
literal|"/"
operator|+
name|this
operator|.
name|hashCode
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDelegationToken (String renewer)
specifier|public
name|Token
argument_list|<
name|?
argument_list|>
name|getDelegationToken
parameter_list|(
name|String
name|renewer
parameter_list|)
throws|throws
name|IOException
block|{
name|Token
argument_list|<
name|?
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|TokenIdentifier
argument_list|>
argument_list|()
decl_stmt|;
name|token
operator|.
name|setService
argument_list|(
operator|new
name|Text
argument_list|(
name|getCanonicalServiceName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|token
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{}
block|}
block|}
end_class

end_unit

