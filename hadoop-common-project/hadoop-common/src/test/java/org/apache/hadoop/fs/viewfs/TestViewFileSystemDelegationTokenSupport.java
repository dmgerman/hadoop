begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.viewfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|viewfs
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test ViewFileSystem's support for having delegation tokens fetched and cached  * for the file system.  */
end_comment

begin_class
DECL|class|TestViewFileSystemDelegationTokenSupport
specifier|public
class|class
name|TestViewFileSystemDelegationTokenSupport
block|{
DECL|field|MOUNT_TABLE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|MOUNT_TABLE_NAME
init|=
literal|"vfs-cluster"
decl_stmt|;
comment|/**    * Ensure that a canonical service name can be determined for ViewFileSystem    * instances configured with a non-default mount table name.    *     * Regression test for HADOOP-8408.    */
annotation|@
name|Test
DECL|method|testGetCanonicalServiceNameWithNonDefaultMountTable ()
specifier|public
name|void
name|testGetCanonicalServiceNameWithNonDefaultMountTable
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
name|MOUNT_TABLE_NAME
argument_list|,
literal|"/user"
argument_list|,
operator|new
name|URI
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|FileSystem
name|viewFs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
operator|new
name|URI
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_SCHEME
operator|+
literal|"://"
operator|+
name|MOUNT_TABLE_NAME
argument_list|)
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|serviceName
init|=
name|viewFs
operator|.
name|getCanonicalServiceName
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MOUNT_TABLE_NAME
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCanonicalServiceNameWithDefaultMountTable ()
specifier|public
name|void
name|testGetCanonicalServiceNameWithDefaultMountTable
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|ConfigUtil
operator|.
name|addLink
argument_list|(
name|conf
argument_list|,
literal|"/user"
argument_list|,
operator|new
name|URI
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|FileSystem
name|viewFs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|FsConstants
operator|.
name|VIEWFS_URI
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|String
name|serviceName
init|=
name|viewFs
operator|.
name|getCanonicalServiceName
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|serviceName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

