begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.io.erasurecode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSRawDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSRawDecoderLegacy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSRawEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RSRawEncoderLegacy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureDecoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|erasurecode
operator|.
name|rawcoder
operator|.
name|RawErasureEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test the codec to raw coder mapping.  */
end_comment

begin_class
DECL|class|TestCodecRawCoderMapping
specifier|public
class|class
name|TestCodecRawCoderMapping
block|{
DECL|field|conf
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
DECL|field|numDataUnit
specifier|private
specifier|static
specifier|final
name|int
name|numDataUnit
init|=
literal|6
decl_stmt|;
DECL|field|numParityUnit
specifier|private
specifier|static
specifier|final
name|int
name|numParityUnit
init|=
literal|3
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRSDefaultRawCoder ()
specifier|public
name|void
name|testRSDefaultRawCoder
parameter_list|()
block|{
comment|// should return default raw coder of rs-default codec
name|RawErasureEncoder
name|encoder
init|=
name|CodecUtil
operator|.
name|createRSRawEncoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|encoder
operator|instanceof
name|RSRawEncoder
argument_list|)
expr_stmt|;
name|RawErasureDecoder
name|decoder
init|=
name|CodecUtil
operator|.
name|createRSRawDecoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|decoder
operator|instanceof
name|RSRawDecoder
argument_list|)
expr_stmt|;
comment|// should return default raw coder of rs-legacy codec
name|encoder
operator|=
name|CodecUtil
operator|.
name|createRSRawEncoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|,
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|encoder
operator|instanceof
name|RSRawEncoderLegacy
argument_list|)
expr_stmt|;
name|decoder
operator|=
name|CodecUtil
operator|.
name|createRSRawDecoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|,
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|decoder
operator|instanceof
name|RSRawDecoderLegacy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDedicatedRawCoderKey ()
specifier|public
name|void
name|testDedicatedRawCoderKey
parameter_list|()
block|{
name|String
name|dummyFactName
init|=
literal|"DummyNoneExistingFactory"
decl_stmt|;
comment|// set the dummy factory to rs-legacy and create a raw coder
comment|// with rs-default, which is OK as the raw coder key is not used
name|conf
operator|.
name|set
argument_list|(
name|CommonConfigurationKeys
operator|.
name|IO_ERASURECODE_CODEC_RS_LEGACY_RAWCODER_KEY
argument_list|,
name|dummyFactName
argument_list|)
expr_stmt|;
name|RawErasureEncoder
name|encoder
init|=
name|CodecUtil
operator|.
name|createRSRawEncoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|,
name|ErasureCodeConstants
operator|.
name|RS_DEFAULT_CODEC_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|encoder
operator|instanceof
name|RSRawEncoder
argument_list|)
expr_stmt|;
comment|// now create the raw coder with rs-legacy, which should throw exception
try|try
block|{
name|CodecUtil
operator|.
name|createRSRawEncoder
argument_list|(
name|conf
argument_list|,
name|numDataUnit
argument_list|,
name|numParityUnit
argument_list|,
name|ErasureCodeConstants
operator|.
name|RS_LEGACY_CODEC_NAME
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"Failed to create raw coder"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

