begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|TestHttpExceptionUtils
specifier|public
class|class
name|TestHttpExceptionUtils
block|{
annotation|@
name|Test
DECL|method|testCreateServletException ()
specifier|public
name|void
name|testCreateServletException
parameter_list|()
throws|throws
name|IOException
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|printWriter
init|=
operator|new
name|PrintWriter
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|printWriter
argument_list|)
expr_stmt|;
name|int
name|status
init|=
name|HttpServletResponse
operator|.
name|SC_INTERNAL_SERVER_ERROR
decl_stmt|;
name|Exception
name|ex
init|=
operator|new
name|IOException
argument_list|(
literal|"Hello IOEX"
argument_list|)
decl_stmt|;
name|HttpExceptionUtils
operator|.
name|createServletExceptionResponse
argument_list|(
name|response
argument_list|,
name|status
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setContentType
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|Map
name|json
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|json
operator|=
operator|(
name|Map
operator|)
name|json
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_JSON
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|IOException
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|json
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_CLASSNAME_JSON
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|IOException
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|json
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_EXCEPTION_JSON
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Hello IOEX"
argument_list|,
name|json
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_MESSAGE_JSON
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreateJerseyException ()
specifier|public
name|void
name|testCreateJerseyException
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|ex
init|=
operator|new
name|IOException
argument_list|(
literal|"Hello IOEX"
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|HttpExceptionUtils
operator|.
name|createJerseyExceptionResponse
argument_list|(
name|Response
operator|.
name|Status
operator|.
name|INTERNAL_SERVER_ERROR
argument_list|,
name|ex
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Response
operator|.
name|Status
operator|.
name|INTERNAL_SERVER_ERROR
operator|.
name|getStatusCode
argument_list|()
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
operator|.
name|toArray
argument_list|()
argument_list|,
name|response
operator|.
name|getMetadata
argument_list|()
operator|.
name|get
argument_list|(
literal|"Content-Type"
argument_list|)
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
name|Map
name|entity
init|=
operator|(
name|Map
operator|)
name|response
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|entity
operator|=
operator|(
name|Map
operator|)
name|entity
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_JSON
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|IOException
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|entity
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_CLASSNAME_JSON
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|IOException
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|entity
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_EXCEPTION_JSON
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Hello IOEX"
argument_list|,
name|entity
operator|.
name|get
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_MESSAGE_JSON
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateResponseOK ()
specifier|public
name|void
name|testValidateResponseOK
parameter_list|()
throws|throws
name|IOException
block|{
name|HttpURLConnection
name|conn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
name|HttpExceptionUtils
operator|.
name|validateResponse
argument_list|(
name|conn
argument_list|,
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IOException
operator|.
name|class
argument_list|)
DECL|method|testValidateResponseFailNoErrorMessage ()
specifier|public
name|void
name|testValidateResponseFailNoErrorMessage
parameter_list|()
throws|throws
name|IOException
block|{
name|HttpURLConnection
name|conn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_BAD_REQUEST
argument_list|)
expr_stmt|;
name|HttpExceptionUtils
operator|.
name|validateResponse
argument_list|(
name|conn
argument_list|,
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateResponseNonJsonErrorMessage ()
specifier|public
name|void
name|testValidateResponseNonJsonErrorMessage
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|msg
init|=
literal|"stream"
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|msg
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getErrorStream
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseMessage
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"msg"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_BAD_REQUEST
argument_list|)
expr_stmt|;
try|try
block|{
name|HttpExceptionUtils
operator|.
name|validateResponse
argument_list|(
name|conn
argument_list|,
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"msg"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|""
operator|+
name|HttpURLConnection
operator|.
name|HTTP_BAD_REQUEST
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testValidateResponseJsonErrorKnownException ()
specifier|public
name|void
name|testValidateResponseJsonErrorKnownException
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|json
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_EXCEPTION_JSON
argument_list|,
name|IllegalStateException
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_CLASSNAME_JSON
argument_list|,
name|IllegalStateException
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_MESSAGE_JSON
argument_list|,
literal|"EX"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|response
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|response
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_JSON
argument_list|,
name|json
argument_list|)
expr_stmt|;
name|ObjectMapper
name|jsonMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|String
name|msg
init|=
name|jsonMapper
operator|.
name|writeValueAsString
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|msg
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getErrorStream
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseMessage
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"msg"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_BAD_REQUEST
argument_list|)
expr_stmt|;
try|try
block|{
name|HttpExceptionUtils
operator|.
name|validateResponse
argument_list|(
name|conn
argument_list|,
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"EX"
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testValidateResponseJsonErrorUnknownException ()
specifier|public
name|void
name|testValidateResponseJsonErrorUnknownException
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|json
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_EXCEPTION_JSON
argument_list|,
literal|"FooException"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_CLASSNAME_JSON
argument_list|,
literal|"foo.FooException"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_MESSAGE_JSON
argument_list|,
literal|"EX"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|response
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|response
operator|.
name|put
argument_list|(
name|HttpExceptionUtils
operator|.
name|ERROR_JSON
argument_list|,
name|json
argument_list|)
expr_stmt|;
name|ObjectMapper
name|jsonMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|String
name|msg
init|=
name|jsonMapper
operator|.
name|writeValueAsString
argument_list|(
name|response
argument_list|)
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|msg
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|conn
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpURLConnection
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getErrorStream
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseMessage
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"msg"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|HttpURLConnection
operator|.
name|HTTP_BAD_REQUEST
argument_list|)
expr_stmt|;
try|try
block|{
name|HttpExceptionUtils
operator|.
name|validateResponse
argument_list|(
name|conn
argument_list|,
name|HttpURLConnection
operator|.
name|HTTP_CREATED
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"EX"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"foo.FooException"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

