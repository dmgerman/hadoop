begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_comment
comment|/**  * This class tests the LocatedFileStatus class.  */
end_comment

begin_class
DECL|class|TestLocatedFileStatus
specifier|public
class|class
name|TestLocatedFileStatus
block|{
annotation|@
name|Test
DECL|method|testDeprecatedConstruction ()
specifier|public
name|void
name|testDeprecatedConstruction
parameter_list|()
throws|throws
name|IOException
block|{
name|BlockLocation
index|[]
name|locs
init|=
operator|new
name|BlockLocation
index|[]
block|{
name|mock
argument_list|(
name|BlockLocation
operator|.
name|class
argument_list|)
block|}
decl_stmt|;
specifier|final
name|boolean
name|isDir
init|=
literal|false
decl_stmt|;
specifier|final
name|int
name|repl
init|=
literal|3
decl_stmt|;
specifier|final
name|long
name|blocksize
init|=
literal|64
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|final
name|long
name|modificationTime
init|=
literal|0
decl_stmt|;
specifier|final
name|long
name|accessTime
init|=
literal|0
decl_stmt|;
comment|// We should be able to pass null for the permission.
name|LocatedFileStatus
name|lfsNullPerm
init|=
operator|new
name|LocatedFileStatus
argument_list|(
literal|1
argument_list|,
name|isDir
argument_list|,
name|repl
argument_list|,
name|blocksize
argument_list|,
name|modificationTime
argument_list|,
name|accessTime
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/some-file.txt"
argument_list|)
argument_list|,
name|locs
argument_list|)
decl_stmt|;
name|FsPermission
name|permission
init|=
name|mock
argument_list|(
name|FsPermission
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// We should also be able to pass a permission or the permission.
name|LocatedFileStatus
name|lfsNonNullPerm
init|=
operator|new
name|LocatedFileStatus
argument_list|(
literal|1
argument_list|,
name|isDir
argument_list|,
name|repl
argument_list|,
name|blocksize
argument_list|,
name|modificationTime
argument_list|,
name|accessTime
argument_list|,
name|permission
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Path
argument_list|(
literal|"/some-file.txt"
argument_list|)
argument_list|,
name|locs
argument_list|)
decl_stmt|;
block|}
block|}
end_class

end_unit

