begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.token.delegation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|test
operator|.
name|TestingServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|web
operator|.
name|DelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|web
operator|.
name|DelegationTokenManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestZKDelegationTokenSecretManager
specifier|public
class|class
name|TestZKDelegationTokenSecretManager
block|{
DECL|field|DAY_IN_SECS
specifier|private
specifier|static
specifier|final
name|long
name|DAY_IN_SECS
init|=
literal|86400
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testZKDelTokSecretManager ()
specifier|public
name|void
name|testZKDelTokSecretManager
parameter_list|()
throws|throws
name|Exception
block|{
name|TestingServer
name|zkServer
init|=
operator|new
name|TestingServer
argument_list|()
decl_stmt|;
name|DelegationTokenManager
name|tm1
decl_stmt|,
name|tm2
init|=
literal|null
decl_stmt|;
name|zkServer
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|String
name|connectString
init|=
name|zkServer
operator|.
name|getConnectString
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|DelegationTokenManager
operator|.
name|ENABLE_ZK_KEY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ZKDelegationTokenSecretManager
operator|.
name|ZK_DTSM_ZK_CONNECTION_STRING
argument_list|,
name|connectString
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ZKDelegationTokenSecretManager
operator|.
name|ZK_DTSM_ZNODE_WORKING_PATH
argument_list|,
literal|"testPath"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ZKDelegationTokenSecretManager
operator|.
name|ZK_DTSM_ZK_AUTH_TYPE
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|UPDATE_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|MAX_LIFETIME
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|RENEW_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|REMOVAL_SCAN_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|tm1
operator|=
operator|new
name|DelegationTokenManager
argument_list|(
name|conf
argument_list|,
operator|new
name|Text
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|tm1
operator|.
name|init
argument_list|()
expr_stmt|;
name|tm2
operator|=
operator|new
name|DelegationTokenManager
argument_list|(
name|conf
argument_list|,
operator|new
name|Text
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|tm2
operator|.
name|init
argument_list|()
expr_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|tm1
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|tm2
operator|.
name|verifyToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|token
operator|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|tm2
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|tm1
operator|.
name|verifyToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|zkServer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

