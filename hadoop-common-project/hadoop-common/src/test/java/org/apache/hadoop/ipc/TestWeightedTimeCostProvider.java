begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ipc
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProcessingDetails
operator|.
name|Timing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|WeightedTimeCostProvider
operator|.
name|DEFAULT_LOCKEXCLUSIVE_WEIGHT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|WeightedTimeCostProvider
operator|.
name|DEFAULT_LOCKFREE_WEIGHT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|WeightedTimeCostProvider
operator|.
name|DEFAULT_LOCKSHARED_WEIGHT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/** Tests for {@link WeightedTimeCostProvider}. */
end_comment

begin_class
DECL|class|TestWeightedTimeCostProvider
specifier|public
class|class
name|TestWeightedTimeCostProvider
block|{
DECL|field|QUEUE_TIME
specifier|private
specifier|static
specifier|final
name|int
name|QUEUE_TIME
init|=
literal|3
decl_stmt|;
DECL|field|LOCKFREE_TIME
specifier|private
specifier|static
specifier|final
name|int
name|LOCKFREE_TIME
init|=
literal|5
decl_stmt|;
DECL|field|LOCKSHARED_TIME
specifier|private
specifier|static
specifier|final
name|int
name|LOCKSHARED_TIME
init|=
literal|7
decl_stmt|;
DECL|field|LOCKEXCLUSIVE_TIME
specifier|private
specifier|static
specifier|final
name|int
name|LOCKEXCLUSIVE_TIME
init|=
literal|11
decl_stmt|;
DECL|field|costProvider
specifier|private
name|WeightedTimeCostProvider
name|costProvider
decl_stmt|;
DECL|field|processingDetails
specifier|private
name|ProcessingDetails
name|processingDetails
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|costProvider
operator|=
operator|new
name|WeightedTimeCostProvider
argument_list|()
expr_stmt|;
name|processingDetails
operator|=
operator|new
name|ProcessingDetails
argument_list|(
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|processingDetails
operator|.
name|set
argument_list|(
name|Timing
operator|.
name|QUEUE
argument_list|,
name|QUEUE_TIME
argument_list|)
expr_stmt|;
name|processingDetails
operator|.
name|set
argument_list|(
name|Timing
operator|.
name|LOCKFREE
argument_list|,
name|LOCKFREE_TIME
argument_list|)
expr_stmt|;
name|processingDetails
operator|.
name|set
argument_list|(
name|Timing
operator|.
name|LOCKSHARED
argument_list|,
name|LOCKSHARED_TIME
argument_list|)
expr_stmt|;
name|processingDetails
operator|.
name|set
argument_list|(
name|Timing
operator|.
name|LOCKEXCLUSIVE
argument_list|,
name|LOCKEXCLUSIVE_TIME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AssertionError
operator|.
name|class
argument_list|)
DECL|method|testGetCostBeforeInit ()
specifier|public
name|void
name|testGetCostBeforeInit
parameter_list|()
block|{
name|costProvider
operator|.
name|getCost
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCostDefaultWeights ()
specifier|public
name|void
name|testGetCostDefaultWeights
parameter_list|()
block|{
name|costProvider
operator|.
name|init
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|actualCost
init|=
name|costProvider
operator|.
name|getCost
argument_list|(
name|processingDetails
argument_list|)
decl_stmt|;
name|long
name|expectedCost
init|=
name|DEFAULT_LOCKFREE_WEIGHT
operator|*
name|LOCKFREE_TIME
operator|+
name|DEFAULT_LOCKSHARED_WEIGHT
operator|*
name|LOCKSHARED_TIME
operator|+
name|DEFAULT_LOCKEXCLUSIVE_WEIGHT
operator|*
name|LOCKEXCLUSIVE_TIME
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedCost
argument_list|,
name|actualCost
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCostConfiguredWeights ()
specifier|public
name|void
name|testGetCostConfiguredWeights
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|int
name|queueWeight
init|=
literal|1000
decl_stmt|;
name|int
name|lockfreeWeight
init|=
literal|10000
decl_stmt|;
name|int
name|locksharedWeight
init|=
literal|100000
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"foo.weighted-cost.queue"
argument_list|,
name|queueWeight
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"foo.weighted-cost.lockfree"
argument_list|,
name|lockfreeWeight
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"foo.weighted-cost.lockshared"
argument_list|,
name|locksharedWeight
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
literal|"bar.weighted-cost.lockexclusive"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// should not apply
name|costProvider
operator|.
name|init
argument_list|(
literal|"foo"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|long
name|actualCost
init|=
name|costProvider
operator|.
name|getCost
argument_list|(
name|processingDetails
argument_list|)
decl_stmt|;
name|long
name|expectedCost
init|=
name|queueWeight
operator|*
name|QUEUE_TIME
operator|+
name|lockfreeWeight
operator|*
name|LOCKFREE_TIME
operator|+
name|locksharedWeight
operator|*
name|LOCKSHARED_TIME
operator|+
name|DEFAULT_LOCKEXCLUSIVE_WEIGHT
operator|*
name|LOCKEXCLUSIVE_TIME
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedCost
argument_list|,
name|actualCost
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

