begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.token.delegation.web
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|web
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|KerberosAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|server
operator|.
name|AuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|SecretManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|HttpExceptionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
DECL|class|TestDelegationTokenAuthenticationHandlerWithMocks
specifier|public
class|class
name|TestDelegationTokenAuthenticationHandlerWithMocks
block|{
DECL|class|MockDelegationTokenAuthenticationHandler
specifier|public
specifier|static
class|class
name|MockDelegationTokenAuthenticationHandler
extends|extends
name|DelegationTokenAuthenticationHandler
block|{
DECL|method|MockDelegationTokenAuthenticationHandler ()
specifier|public
name|MockDelegationTokenAuthenticationHandler
parameter_list|()
block|{
name|super
argument_list|(
operator|new
name|AuthenticationHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
literal|"T"
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|Properties
name|config
parameter_list|)
throws|throws
name|ServletException
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|destroy
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|boolean
name|managementOperation
parameter_list|(
name|AuthenticationToken
name|token
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|AuthenticationToken
name|authenticate
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
expr_stmt|;
name|response
operator|.
name|setHeader
argument_list|(
name|KerberosAuthenticator
operator|.
name|WWW_AUTHENTICATE
argument_list|,
literal|"mock"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|handler
specifier|private
name|DelegationTokenAuthenticationHandler
name|handler
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|conf
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|conf
operator|.
name|put
argument_list|(
name|KerberosDelegationTokenAuthenticationHandler
operator|.
name|TOKEN_KIND
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|handler
operator|=
operator|new
name|MockDelegationTokenAuthenticationHandler
argument_list|()
expr_stmt|;
name|handler
operator|.
name|initTokenManager
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanUp ()
specifier|public
name|void
name|cleanUp
parameter_list|()
block|{
name|handler
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testManagementOperations ()
specifier|public
name|void
name|testManagementOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|testNonManagementOperation
argument_list|()
expr_stmt|;
name|testManagementOperationErrors
argument_list|()
expr_stmt|;
name|testGetToken
argument_list|(
literal|null
argument_list|,
operator|new
name|Text
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|testGetToken
argument_list|(
literal|"bar"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|testCancelToken
argument_list|()
expr_stmt|;
name|testRenewToken
argument_list|()
expr_stmt|;
block|}
DECL|method|testNonManagementOperation ()
specifier|private
name|void
name|testNonManagementOperation
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"CREATE"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testManagementOperationErrors ()
specifier|private
name|void
name|testManagementOperationErrors
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
operator|.
name|GETDELEGATIONTOKEN
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"FOO"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|sendError
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|)
argument_list|,
name|Mockito
operator|.
name|startsWith
argument_list|(
literal|"Wrong HTTP method"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
operator|.
name|GETDELEGATIONTOKEN
operator|.
name|getHttpMethod
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setHeader
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|KerberosAuthenticator
operator|.
name|WWW_AUTHENTICATE
argument_list|)
argument_list|,
name|Mockito
operator|.
name|eq
argument_list|(
literal|"mock"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testGetToken (String renewer, Text expectedTokenKind)
specifier|private
name|void
name|testGetToken
parameter_list|(
name|String
name|renewer
parameter_list|,
name|Text
name|expectedTokenKind
parameter_list|)
throws|throws
name|Exception
block|{
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
name|op
init|=
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
operator|.
name|GETDELEGATIONTOKEN
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|op
operator|.
name|getHttpMethod
argument_list|()
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AuthenticationToken
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|token
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|PrintWriter
argument_list|(
operator|new
name|StringWriter
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
name|token
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
operator|+
literal|"&"
operator|+
name|DelegationTokenAuthenticator
operator|.
name|RENEWER_PARAM
operator|+
literal|"="
operator|+
name|renewer
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|token
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pwriter
init|=
operator|new
name|PrintWriter
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|pwriter
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
name|token
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|renewer
operator|==
literal|null
condition|)
block|{
name|Mockito
operator|.
name|verify
argument_list|(
name|token
argument_list|)
operator|.
name|getUserName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Mockito
operator|.
name|verify
argument_list|(
name|token
argument_list|)
operator|.
name|getUserName
argument_list|()
expr_stmt|;
block|}
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setContentType
argument_list|(
name|MediaType
operator|.
name|APPLICATION_JSON
argument_list|)
expr_stmt|;
name|pwriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|responseOutput
init|=
name|writer
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|tokenLabel
init|=
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_TOKEN_JSON
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|responseOutput
operator|.
name|contains
argument_list|(
name|tokenLabel
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|responseOutput
operator|.
name|contains
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_TOKEN_URL_STRING_JSON
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectMapper
name|jsonMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|Map
name|json
init|=
name|jsonMapper
operator|.
name|readValue
argument_list|(
name|responseOutput
argument_list|,
name|Map
operator|.
name|class
argument_list|)
decl_stmt|;
name|json
operator|=
operator|(
name|Map
operator|)
name|json
operator|.
name|get
argument_list|(
name|tokenLabel
argument_list|)
expr_stmt|;
name|String
name|tokenStr
decl_stmt|;
name|tokenStr
operator|=
operator|(
name|String
operator|)
name|json
operator|.
name|get
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_TOKEN_URL_STRING_JSON
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|dt
init|=
operator|new
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
argument_list|()
decl_stmt|;
name|dt
operator|.
name|decodeFromUrlString
argument_list|(
name|tokenStr
argument_list|)
expr_stmt|;
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|verifyToken
argument_list|(
name|dt
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedTokenKind
argument_list|,
name|dt
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testCancelToken ()
specifier|private
name|void
name|testCancelToken
parameter_list|()
throws|throws
name|Exception
block|{
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
name|op
init|=
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
operator|.
name|CANCELDELEGATIONTOKEN
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|op
operator|.
name|getHttpMethod
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|sendError
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|)
argument_list|,
name|Mockito
operator|.
name|contains
argument_list|(
literal|"requires the parameter [token]"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
operator|+
literal|"&"
operator|+
name|DelegationTokenAuthenticator
operator|.
name|TOKEN_PARAM
operator|+
literal|"="
operator|+
name|token
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
try|try
block|{
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|verifyToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SecretManager
operator|.
name|InvalidToken
name|ex
parameter_list|)
block|{
comment|//NOP
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testRenewToken ()
specifier|private
name|void
name|testRenewToken
parameter_list|()
throws|throws
name|Exception
block|{
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
name|op
init|=
name|DelegationTokenAuthenticator
operator|.
name|DelegationTokenOperation
operator|.
name|RENEWDELEGATIONTOKEN
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getMethod
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|op
operator|.
name|getHttpMethod
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
literal|null
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_UNAUTHORIZED
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setHeader
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|KerberosAuthenticator
operator|.
name|WWW_AUTHENTICATE
argument_list|)
argument_list|,
name|Mockito
operator|.
name|eq
argument_list|(
literal|"mock"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AuthenticationToken
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|token
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
name|token
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|sendError
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|)
argument_list|,
name|Mockito
operator|.
name|contains
argument_list|(
literal|"requires the parameter [token]"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|reset
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pwriter
init|=
operator|new
name|PrintWriter
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|pwriter
argument_list|)
expr_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|dToken
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"user"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|OP_PARAM
operator|+
literal|"="
operator|+
name|op
operator|.
name|toString
argument_list|()
operator|+
literal|"&"
operator|+
name|DelegationTokenAuthenticator
operator|.
name|TOKEN_PARAM
operator|+
literal|"="
operator|+
name|dToken
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|handler
operator|.
name|managementOperation
argument_list|(
name|token
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|pwriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"long"
argument_list|)
argument_list|)
expr_stmt|;
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|verifyToken
argument_list|(
name|dToken
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAuthenticate ()
specifier|public
name|void
name|testAuthenticate
parameter_list|()
throws|throws
name|Exception
block|{
name|testValidDelegationTokenQueryString
argument_list|()
expr_stmt|;
name|testValidDelegationTokenHeader
argument_list|()
expr_stmt|;
name|testInvalidDelegationTokenQueryString
argument_list|()
expr_stmt|;
name|testInvalidDelegationTokenHeader
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testValidDelegationTokenQueryString ()
specifier|private
name|void
name|testValidDelegationTokenQueryString
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|dToken
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"user"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_PARAM
operator|+
literal|"="
operator|+
name|dToken
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
name|handler
operator|.
name|authenticate
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|,
name|token
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|token
operator|.
name|getExpires
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|handler
operator|.
name|getType
argument_list|()
argument_list|,
name|token
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|token
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testValidDelegationTokenHeader ()
specifier|private
name|void
name|testValidDelegationTokenHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|dToken
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|handler
operator|.
name|getTokenManager
argument_list|()
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"user"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getHeader
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_TOKEN_HEADER
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|dToken
operator|.
name|encodeToUrlString
argument_list|()
argument_list|)
expr_stmt|;
name|AuthenticationToken
name|token
init|=
name|handler
operator|.
name|authenticate
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
argument_list|,
name|token
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|token
operator|.
name|getExpires
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|handler
operator|.
name|getType
argument_list|()
argument_list|,
name|token
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|token
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testInvalidDelegationTokenQueryString ()
specifier|private
name|void
name|testInvalidDelegationTokenQueryString
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getQueryString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_PARAM
operator|+
literal|"=invalid"
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|handler
operator|.
name|authenticate
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|response
argument_list|)
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_FORBIDDEN
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"AuthenticationException"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testInvalidDelegationTokenHeader ()
specifier|private
name|void
name|testInvalidDelegationTokenHeader
parameter_list|()
throws|throws
name|Exception
block|{
name|HttpServletRequest
name|request
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|request
operator|.
name|getHeader
argument_list|(
name|Mockito
operator|.
name|eq
argument_list|(
name|DelegationTokenAuthenticator
operator|.
name|DELEGATION_TOKEN_HEADER
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"invalid"
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|handler
operator|.
name|authenticate
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"AuthenticationException"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

