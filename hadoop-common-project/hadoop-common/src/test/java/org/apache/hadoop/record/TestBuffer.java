begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.record
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * A Unit test for Record I/O Buffer class  */
end_comment

begin_class
DECL|class|TestBuffer
specifier|public
class|class
name|TestBuffer
extends|extends
name|TestCase
block|{
DECL|method|TestBuffer (String testName)
specifier|public
name|TestBuffer
parameter_list|(
name|String
name|testName
parameter_list|)
block|{
name|super
argument_list|(
name|testName
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of set method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testSet ()
specifier|public
name|void
name|testSet
parameter_list|()
block|{
specifier|final
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
name|instance
operator|.
name|set
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"set failed"
argument_list|,
name|bytes
argument_list|,
name|instance
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of copy method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testCopy ()
specifier|public
name|void
name|testCopy
parameter_list|()
block|{
specifier|final
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
specifier|final
name|int
name|offset
init|=
literal|6
decl_stmt|;
specifier|final
name|int
name|length
init|=
literal|3
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|10
condition|;
name|idx
operator|++
control|)
block|{
name|bytes
index|[
name|idx
index|]
operator|=
operator|(
name|byte
operator|)
name|idx
expr_stmt|;
block|}
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
name|instance
operator|.
name|copy
argument_list|(
name|bytes
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"copy failed"
argument_list|,
literal|3
argument_list|,
name|instance
operator|.
name|getCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"copy failed"
argument_list|,
literal|3
argument_list|,
name|instance
operator|.
name|get
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|3
condition|;
name|idx
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"Buffer content corrupted"
argument_list|,
name|idx
operator|+
literal|6
argument_list|,
name|instance
operator|.
name|get
argument_list|()
index|[
name|idx
index|]
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Test of getCount method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testGetCount ()
specifier|public
name|void
name|testGetCount
parameter_list|()
block|{
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
specifier|final
name|int
name|expResult
init|=
literal|0
decl_stmt|;
specifier|final
name|int
name|result
init|=
name|instance
operator|.
name|getCount
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getSize failed"
argument_list|,
name|expResult
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of getCapacity method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testGetCapacity ()
specifier|public
name|void
name|testGetCapacity
parameter_list|()
block|{
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
specifier|final
name|int
name|expResult
init|=
literal|0
decl_stmt|;
specifier|final
name|int
name|result
init|=
name|instance
operator|.
name|getCapacity
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getCapacity failed"
argument_list|,
name|expResult
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setCapacity
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setCapacity failed"
argument_list|,
literal|100
argument_list|,
name|instance
operator|.
name|getCapacity
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of truncate method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testTruncate ()
specifier|public
name|void
name|testTruncate
parameter_list|()
block|{
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
name|instance
operator|.
name|setCapacity
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"setCapacity failed"
argument_list|,
literal|100
argument_list|,
name|instance
operator|.
name|getCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|truncate
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"truncate failed"
argument_list|,
literal|0
argument_list|,
name|instance
operator|.
name|getCapacity
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test of append method, of class org.apache.hadoop.record.Buffer.    */
DECL|method|testAppend ()
specifier|public
name|void
name|testAppend
parameter_list|()
block|{
specifier|final
name|byte
index|[]
name|bytes
init|=
operator|new
name|byte
index|[
literal|100
index|]
decl_stmt|;
specifier|final
name|int
name|offset
init|=
literal|0
decl_stmt|;
specifier|final
name|int
name|length
init|=
literal|100
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|100
condition|;
name|idx
operator|++
control|)
block|{
name|bytes
index|[
name|idx
index|]
operator|=
call|(
name|byte
call|)
argument_list|(
literal|100
operator|-
name|idx
argument_list|)
expr_stmt|;
block|}
specifier|final
name|Buffer
name|instance
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
name|instance
operator|.
name|append
argument_list|(
name|bytes
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Buffer size mismatch"
argument_list|,
literal|100
argument_list|,
name|instance
operator|.
name|getCount
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
literal|100
condition|;
name|idx
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"Buffer contents corrupted"
argument_list|,
literal|100
operator|-
name|idx
argument_list|,
name|instance
operator|.
name|get
argument_list|()
index|[
name|idx
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

