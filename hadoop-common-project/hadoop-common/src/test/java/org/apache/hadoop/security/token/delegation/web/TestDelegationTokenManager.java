begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.security.token.delegation.web
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|web
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|TestDelegationTokenManager
specifier|public
class|class
name|TestDelegationTokenManager
block|{
DECL|field|DAY_IN_SECS
specifier|private
specifier|static
specifier|final
name|long
name|DAY_IN_SECS
init|=
literal|86400
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
DECL|method|headers ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|headers
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
index|[]
block|{
block|{
literal|false
block|}
block|,
block|{
literal|true
block|}
block|}
argument_list|)
return|;
block|}
DECL|field|enableZKKey
specifier|private
name|boolean
name|enableZKKey
decl_stmt|;
DECL|method|TestDelegationTokenManager (boolean enableZKKey)
specifier|public
name|TestDelegationTokenManager
parameter_list|(
name|boolean
name|enableZKKey
parameter_list|)
block|{
name|this
operator|.
name|enableZKKey
operator|=
name|enableZKKey
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testDTManager ()
specifier|public
name|void
name|testDTManager
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|UPDATE_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|MAX_LIFETIME
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|RENEW_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|DelegationTokenManager
operator|.
name|REMOVAL_SCAN_INTERVAL
argument_list|,
name|DAY_IN_SECS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|getBoolean
argument_list|(
name|DelegationTokenManager
operator|.
name|ENABLE_ZK_KEY
argument_list|,
name|enableZKKey
argument_list|)
expr_stmt|;
name|DelegationTokenManager
name|tm
init|=
operator|new
name|DelegationTokenManager
argument_list|(
name|conf
argument_list|,
operator|new
name|Text
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|tm
operator|.
name|init
argument_list|()
expr_stmt|;
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|(
name|Token
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
operator|)
name|tm
operator|.
name|createToken
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|tm
operator|.
name|verifyToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tm
operator|.
name|renewToken
argument_list|(
name|token
argument_list|,
literal|"foo"
argument_list|)
operator|>
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|tm
operator|.
name|cancelToken
argument_list|(
name|token
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
try|try
block|{
name|tm
operator|.
name|verifyToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|//NOP
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
name|tm
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

