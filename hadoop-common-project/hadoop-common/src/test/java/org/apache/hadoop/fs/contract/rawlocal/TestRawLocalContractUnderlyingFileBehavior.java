begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.contract.rawlocal
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|rawlocal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_class
DECL|class|TestRawLocalContractUnderlyingFileBehavior
specifier|public
class|class
name|TestRawLocalContractUnderlyingFileBehavior
extends|extends
name|Assert
block|{
DECL|field|testDirectory
specifier|private
specifier|static
name|File
name|testDirectory
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|before ()
specifier|public
specifier|static
name|void
name|before
parameter_list|()
block|{
name|RawlocalFSContract
name|contract
init|=
operator|new
name|RawlocalFSContract
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|testDirectory
operator|=
name|contract
operator|.
name|getTestDirectory
argument_list|()
expr_stmt|;
name|testDirectory
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|testDirectory
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteEmptyPath ()
specifier|public
name|void
name|testDeleteEmptyPath
parameter_list|()
throws|throws
name|Throwable
block|{
name|File
name|nonexistent
init|=
operator|new
name|File
argument_list|(
name|testDirectory
argument_list|,
literal|"testDeleteEmptyPath"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|nonexistent
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"nonexistent.delete() returned true"
argument_list|,
name|nonexistent
operator|.
name|delete
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

