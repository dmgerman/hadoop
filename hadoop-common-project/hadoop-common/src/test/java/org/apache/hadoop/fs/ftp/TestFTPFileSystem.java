begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.ftp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ftp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|net
operator|.
name|ftp
operator|.
name|FTP
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|net
operator|.
name|ftp
operator|.
name|FTPClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Test basic @{link FTPFileSystem} class methods. Contract tests are in  * TestFTPContractXXXX.  */
end_comment

begin_class
DECL|class|TestFTPFileSystem
specifier|public
class|class
name|TestFTPFileSystem
block|{
annotation|@
name|Rule
DECL|field|testTimeout
specifier|public
name|Timeout
name|testTimeout
init|=
operator|new
name|Timeout
argument_list|(
literal|180000
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testFTPDefaultPort ()
specifier|public
name|void
name|testFTPDefaultPort
parameter_list|()
throws|throws
name|Exception
block|{
name|FTPFileSystem
name|ftp
init|=
operator|new
name|FTPFileSystem
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|FTP
operator|.
name|DEFAULT_PORT
argument_list|,
name|ftp
operator|.
name|getDefaultPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFTPTransferMode ()
specifier|public
name|void
name|testFTPTransferMode
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FTPFileSystem
name|ftp
init|=
operator|new
name|FTPFileSystem
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|FTP
operator|.
name|BLOCK_TRANSFER_MODE
argument_list|,
name|ftp
operator|.
name|getTransferMode
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FTPFileSystem
operator|.
name|FS_FTP_TRANSFER_MODE
argument_list|,
literal|"STREAM_TRANSFER_MODE"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTP
operator|.
name|STREAM_TRANSFER_MODE
argument_list|,
name|ftp
operator|.
name|getTransferMode
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FTPFileSystem
operator|.
name|FS_FTP_TRANSFER_MODE
argument_list|,
literal|"COMPRESSED_TRANSFER_MODE"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTP
operator|.
name|COMPRESSED_TRANSFER_MODE
argument_list|,
name|ftp
operator|.
name|getTransferMode
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FTPFileSystem
operator|.
name|FS_FTP_TRANSFER_MODE
argument_list|,
literal|"invalid"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTPClient
operator|.
name|BLOCK_TRANSFER_MODE
argument_list|,
name|ftp
operator|.
name|getTransferMode
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFTPDataConnectionMode ()
specifier|public
name|void
name|testFTPDataConnectionMode
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FTPClient
name|client
init|=
operator|new
name|FTPClient
argument_list|()
decl_stmt|;
name|FTPFileSystem
name|ftp
init|=
operator|new
name|FTPFileSystem
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|FTPClient
operator|.
name|ACTIVE_LOCAL_DATA_CONNECTION_MODE
argument_list|,
name|client
operator|.
name|getDataConnectionMode
argument_list|()
argument_list|)
expr_stmt|;
name|ftp
operator|.
name|setDataConnectionMode
argument_list|(
name|client
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTPClient
operator|.
name|ACTIVE_LOCAL_DATA_CONNECTION_MODE
argument_list|,
name|client
operator|.
name|getDataConnectionMode
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FTPFileSystem
operator|.
name|FS_FTP_DATA_CONNECTION_MODE
argument_list|,
literal|"invalid"
argument_list|)
expr_stmt|;
name|ftp
operator|.
name|setDataConnectionMode
argument_list|(
name|client
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTPClient
operator|.
name|ACTIVE_LOCAL_DATA_CONNECTION_MODE
argument_list|,
name|client
operator|.
name|getDataConnectionMode
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|FTPFileSystem
operator|.
name|FS_FTP_DATA_CONNECTION_MODE
argument_list|,
literal|"PASSIVE_LOCAL_DATA_CONNECTION_MODE"
argument_list|)
expr_stmt|;
name|ftp
operator|.
name|setDataConnectionMode
argument_list|(
name|client
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FTPClient
operator|.
name|PASSIVE_LOCAL_DATA_CONNECTION_MODE
argument_list|,
name|client
operator|.
name|getDataConnectionMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

