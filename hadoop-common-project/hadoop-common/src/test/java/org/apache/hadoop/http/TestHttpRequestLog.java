begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.http
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|CustomRequestLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|RequestLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
DECL|class|TestHttpRequestLog
specifier|public
class|class
name|TestHttpRequestLog
block|{
annotation|@
name|Test
DECL|method|testAppenderUndefined ()
specifier|public
name|void
name|testAppenderUndefined
parameter_list|()
block|{
name|RequestLog
name|requestLog
init|=
name|HttpRequestLog
operator|.
name|getRequestLog
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"RequestLog should be null"
argument_list|,
name|requestLog
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAppenderDefined ()
specifier|public
name|void
name|testAppenderDefined
parameter_list|()
block|{
name|HttpRequestLogAppender
name|requestLogAppender
init|=
operator|new
name|HttpRequestLogAppender
argument_list|()
decl_stmt|;
name|requestLogAppender
operator|.
name|setName
argument_list|(
literal|"testrequestlog"
argument_list|)
expr_stmt|;
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"http.requests.test"
argument_list|)
operator|.
name|addAppender
argument_list|(
name|requestLogAppender
argument_list|)
expr_stmt|;
name|RequestLog
name|requestLog
init|=
name|HttpRequestLog
operator|.
name|getRequestLog
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"http.requests.test"
argument_list|)
operator|.
name|removeAppender
argument_list|(
name|requestLogAppender
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"RequestLog should not be null"
argument_list|,
name|requestLog
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Class mismatch"
argument_list|,
name|CustomRequestLog
operator|.
name|class
argument_list|,
name|requestLog
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

