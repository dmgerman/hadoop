begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdfs.tools.offlineImageViewer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineImageViewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|offlineImageViewer
operator|.
name|ImageVisitor
operator|.
name|ImageElement
import|;
end_import

begin_comment
comment|/**  * Test that the DelimitedImageVisistor gives the expected output based  * on predetermined inputs  */
end_comment

begin_class
DECL|class|TestDelimitedImageVisitor
specifier|public
class|class
name|TestDelimitedImageVisitor
extends|extends
name|TestCase
block|{
DECL|field|ROOT
specifier|private
specifier|static
name|String
name|ROOT
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.build.data"
argument_list|,
literal|"/tmp"
argument_list|)
decl_stmt|;
DECL|field|delim
specifier|private
specifier|static
specifier|final
name|String
name|delim
init|=
literal|"--"
decl_stmt|;
comment|// Record an element in the visitor and build the expected line in the output
DECL|method|build (DelimitedImageVisitor div, ImageElement elem, String val, StringBuilder sb, boolean includeDelim)
specifier|private
name|void
name|build
parameter_list|(
name|DelimitedImageVisitor
name|div
parameter_list|,
name|ImageElement
name|elem
parameter_list|,
name|String
name|val
parameter_list|,
name|StringBuilder
name|sb
parameter_list|,
name|boolean
name|includeDelim
parameter_list|)
throws|throws
name|IOException
block|{
name|div
operator|.
name|visit
argument_list|(
name|elem
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|val
argument_list|)
expr_stmt|;
if|if
condition|(
name|includeDelim
condition|)
name|sb
operator|.
name|append
argument_list|(
name|delim
argument_list|)
expr_stmt|;
block|}
DECL|method|testDelimitedImageVisistor ()
specifier|public
name|void
name|testDelimitedImageVisistor
parameter_list|()
block|{
name|String
name|filename
init|=
name|ROOT
operator|+
literal|"/testDIV"
decl_stmt|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|filename
argument_list|)
decl_stmt|;
name|BufferedReader
name|br
init|=
literal|null
decl_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|DelimitedImageVisitor
name|div
init|=
operator|new
name|DelimitedImageVisitor
argument_list|(
name|filename
argument_list|,
literal|true
argument_list|,
name|delim
argument_list|)
decl_stmt|;
name|div
operator|.
name|visit
argument_list|(
name|ImageElement
operator|.
name|FS_IMAGE
argument_list|,
literal|"Not in ouput"
argument_list|)
expr_stmt|;
name|div
operator|.
name|visitEnclosingElement
argument_list|(
name|ImageElement
operator|.
name|INODE
argument_list|)
expr_stmt|;
name|div
operator|.
name|visit
argument_list|(
name|ImageElement
operator|.
name|LAYOUT_VERSION
argument_list|,
literal|"not in"
argument_list|)
expr_stmt|;
name|div
operator|.
name|visit
argument_list|(
name|ImageElement
operator|.
name|LAYOUT_VERSION
argument_list|,
literal|"the output"
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|INODE_PATH
argument_list|,
literal|"hartnell"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|REPLICATION
argument_list|,
literal|"99"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|MODIFICATION_TIME
argument_list|,
literal|"troughton"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|ACCESS_TIME
argument_list|,
literal|"pertwee"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|BLOCK_SIZE
argument_list|,
literal|"baker"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|NUM_BLOCKS
argument_list|,
literal|"davison"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|NUM_BYTES
argument_list|,
literal|"55"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|NS_QUOTA
argument_list|,
literal|"baker2"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|DS_QUOTA
argument_list|,
literal|"mccoy"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|PERMISSION_STRING
argument_list|,
literal|"eccleston"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|USER_NAME
argument_list|,
literal|"tennant"
argument_list|,
name|sb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|build
argument_list|(
name|div
argument_list|,
name|ImageElement
operator|.
name|GROUP_NAME
argument_list|,
literal|"smith"
argument_list|,
name|sb
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|div
operator|.
name|leaveEnclosingElement
argument_list|()
expr_stmt|;
comment|// INode
name|div
operator|.
name|finish
argument_list|()
expr_stmt|;
name|br
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|actual
init|=
name|br
operator|.
name|readLine
argument_list|()
decl_stmt|;
comment|// Should only get one line
name|assertNull
argument_list|(
name|br
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|br
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|exepcted
init|=
name|sb
operator|.
name|toString
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Expect to get: "
operator|+
name|exepcted
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Actually got:  "
operator|+
name|actual
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|exepcted
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Error while testing delmitedImageVisitor"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|f
operator|.
name|exists
argument_list|()
condition|)
name|f
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

