begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.vaidya.postexdiagnosis.tests
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|postexdiagnosis
operator|.
name|tests
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|JobKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|KeyDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|JobStatisticsInterface
operator|.
name|ReduceTaskKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|statistics
operator|.
name|job
operator|.
name|ReduceTaskStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|vaidya
operator|.
name|DiagnosticTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|ReadingHDFSFilesAsSideEffect
specifier|public
class|class
name|ReadingHDFSFilesAsSideEffect
extends|extends
name|DiagnosticTest
block|{
DECL|field|_impact
specifier|private
name|double
name|_impact
decl_stmt|;
DECL|field|_job
specifier|private
name|JobStatistics
name|_job
decl_stmt|;
comment|/**    *     */
DECL|method|ReadingHDFSFilesAsSideEffect ()
specifier|public
name|ReadingHDFSFilesAsSideEffect
parameter_list|()
block|{   }
comment|/*    * Evaluate the test        */
annotation|@
name|Override
DECL|method|evaluate (JobStatistics job)
specifier|public
name|double
name|evaluate
parameter_list|(
name|JobStatistics
name|job
parameter_list|)
block|{
comment|/*      * Set the this._job      */
name|this
operator|.
name|_job
operator|=
name|job
expr_stmt|;
comment|/*      * Read the Normalization Factor      */
name|double
name|normF
init|=
name|getInputElementDoubleValue
argument_list|(
literal|"NormalizationFactor"
argument_list|,
literal|2.0
argument_list|)
decl_stmt|;
comment|/*      * Calculate and return the impact      *       * Check if job level aggregate bytes read from HDFS are more than map input bytes      * Typically they should be same unless maps and/or reducers are reading some data      * from HDFS as a side effect      *       * If side effect HDFS bytes read are>= twice map input bytes impact is treated as      * maximum.      */
if|if
condition|(
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_INPUT_BYTES
argument_list|)
operator|==
literal|0
operator|&&
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|HDFS_BYTES_READ
argument_list|)
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
name|double
operator|)
literal|1
return|;
block|}
if|if
condition|(
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|HDFS_BYTES_READ
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
operator|(
name|double
operator|)
literal|0
return|;
block|}
name|this
operator|.
name|_impact
operator|=
operator|(
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|HDFS_BYTES_READ
argument_list|)
operator|/
name|job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_INPUT_BYTES
argument_list|)
operator|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|_impact
operator|>=
name|normF
condition|)
block|{
name|this
operator|.
name|_impact
operator|=
literal|1
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|_impact
operator|=
name|this
operator|.
name|_impact
operator|/
name|normF
expr_stmt|;
block|}
return|return
name|this
operator|.
name|_impact
return|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.contrib.utils.perfadvisor.diagnostic_rules.DiagnosticRule#getAdvice()    */
annotation|@
name|Override
DECL|method|getPrescription ()
specifier|public
name|String
name|getPrescription
parameter_list|()
block|{
return|return
literal|"Map and/or Reduce tasks are reading application specific files from HDFS. Make sure the replication factor\n"
operator|+
literal|"of these HDFS files is high enough to avoid the data reading bottleneck. Typically replication factor\n"
operator|+
literal|"can be square root of map/reduce tasks capacity of the allocated cluster."
return|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.contrib.utils.perfadvisor.diagnostic_rules.DiagnosticRule#getReferenceDetails()    */
annotation|@
name|Override
DECL|method|getReferenceDetails ()
specifier|public
name|String
name|getReferenceDetails
parameter_list|()
block|{
name|String
name|ref
init|=
literal|"* Total HDFS Bytes read: "
operator|+
name|this
operator|.
name|_job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|HDFS_BYTES_READ
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"* Total Map Input Bytes read: "
operator|+
name|this
operator|.
name|_job
operator|.
name|getLongValue
argument_list|(
name|JobKeys
operator|.
name|MAP_INPUT_BYTES
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"* Impact: "
operator|+
name|truncate
argument_list|(
name|this
operator|.
name|_impact
argument_list|)
decl_stmt|;
return|return
name|ref
return|;
block|}
block|}
end_class

end_unit

