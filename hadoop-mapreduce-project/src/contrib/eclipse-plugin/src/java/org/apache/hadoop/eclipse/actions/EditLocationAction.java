begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.eclipse.actions
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
operator|.
name|ImageLibrary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
operator|.
name|server
operator|.
name|HadoopServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
operator|.
name|servers
operator|.
name|HadoopLocationWizard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|eclipse
operator|.
name|view
operator|.
name|servers
operator|.
name|ServerView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|wizard
operator|.
name|Wizard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jface
operator|.
name|wizard
operator|.
name|WizardDialog
import|;
end_import

begin_comment
comment|/**  * Editing server properties action  */
end_comment

begin_class
DECL|class|EditLocationAction
specifier|public
class|class
name|EditLocationAction
extends|extends
name|Action
block|{
DECL|field|serverView
specifier|private
name|ServerView
name|serverView
decl_stmt|;
DECL|method|EditLocationAction (ServerView serverView)
specifier|public
name|EditLocationAction
parameter_list|(
name|ServerView
name|serverView
parameter_list|)
block|{
name|this
operator|.
name|serverView
operator|=
name|serverView
expr_stmt|;
name|setText
argument_list|(
literal|"Edit Hadoop location..."
argument_list|)
expr_stmt|;
name|setImageDescriptor
argument_list|(
name|ImageLibrary
operator|.
name|get
argument_list|(
literal|"server.view.action.location.edit"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
specifier|final
name|HadoopServer
name|server
init|=
name|serverView
operator|.
name|getSelectedServer
argument_list|()
decl_stmt|;
if|if
condition|(
name|server
operator|==
literal|null
condition|)
return|return;
name|WizardDialog
name|dialog
init|=
operator|new
name|WizardDialog
argument_list|(
literal|null
argument_list|,
operator|new
name|Wizard
argument_list|()
block|{
specifier|private
name|HadoopLocationWizard
name|page
init|=
operator|new
name|HadoopLocationWizard
argument_list|(
name|server
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|addPages
parameter_list|()
block|{
name|super
operator|.
name|addPages
argument_list|()
expr_stmt|;
name|setWindowTitle
argument_list|(
literal|"Edit Hadoop location..."
argument_list|)
expr_stmt|;
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|performFinish
parameter_list|()
block|{
name|page
operator|.
name|performFinish
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|create
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|setBlockOnOpen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|open
argument_list|()
expr_stmt|;
name|super
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

