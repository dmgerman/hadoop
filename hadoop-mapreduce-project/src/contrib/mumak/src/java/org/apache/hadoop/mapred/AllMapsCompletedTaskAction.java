begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * This class is used for notifying a SimulatorTaskTracker running a reduce task  * that all map tasks of the job are done. A SimulatorJobTracker notifies a  * SimulatorTaskTracker by sending this TaskTrackerAction in response to a  * heartbeat(). Represents a directive to start running the user code of the  * reduce task.  *   * We introduced this extra 'push' mechanism so that we don't have to implement  * the corresponding, more complicated 'pull' part of the InterTrackerProtocol.  * We do not use proper simulation Events for signaling, and hack heartbeat()  * instead, since the job tracker does not emit Events and does not know the  * recipient task tracker _Java_ object.  */
end_comment

begin_class
DECL|class|AllMapsCompletedTaskAction
class|class
name|AllMapsCompletedTaskAction
extends|extends
name|TaskTrackerAction
block|{
comment|/** Task attempt id of the reduce task that can proceed. */
DECL|field|taskId
specifier|private
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
name|taskId
decl_stmt|;
comment|/**    * Constructs an AllMapsCompletedTaskAction object for a given    * {@link org.apache.hadoop.mapreduce.TaskAttemptID}.    *     * @param taskId    *          {@link org.apache.hadoop.mapreduce.TaskAttemptID} of the reduce    *          task that can proceed    */
DECL|method|AllMapsCompletedTaskAction ( org.apache.hadoop.mapreduce.TaskAttemptID taskId)
specifier|public
name|AllMapsCompletedTaskAction
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
name|taskId
parameter_list|)
block|{
name|super
argument_list|(
name|ActionType
operator|.
name|LAUNCH_TASK
argument_list|)
expr_stmt|;
name|this
operator|.
name|taskId
operator|=
name|taskId
expr_stmt|;
block|}
comment|/**    * Get the task attempt id of the reduce task.    *     * @return the {@link org.apache.hadoop.mapreduce.TaskAttemptID} of the    *         task-attempt.    */
DECL|method|getTaskID ()
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
name|getTaskID
parameter_list|()
block|{
return|return
name|taskId
return|;
block|}
annotation|@
name|Override
DECL|method|write (DataOutput out)
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|taskId
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|readFields (DataInput in)
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|taskId
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"AllMapsCompletedTaskAction[taskID="
operator|+
name|taskId
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

