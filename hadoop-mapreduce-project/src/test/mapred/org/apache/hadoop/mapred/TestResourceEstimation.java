begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|split
operator|.
name|JobSplit
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
DECL|class|TestResourceEstimation
specifier|public
class|class
name|TestResourceEstimation
extends|extends
name|TestCase
block|{
DECL|method|testResourceEstimator ()
specifier|public
name|void
name|testResourceEstimator
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|maps
init|=
literal|100
decl_stmt|;
specifier|final
name|int
name|reduces
init|=
literal|2
decl_stmt|;
specifier|final
name|int
name|singleMapOutputSize
init|=
literal|1000
decl_stmt|;
name|JobConf
name|jc
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|JobID
name|jid
init|=
operator|new
name|JobID
argument_list|(
literal|"testJT"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|jc
operator|.
name|setNumMapTasks
argument_list|(
name|maps
argument_list|)
expr_stmt|;
name|jc
operator|.
name|setNumReduceTasks
argument_list|(
name|reduces
argument_list|)
expr_stmt|;
name|JobInProgress
name|jip
init|=
operator|new
name|JobInProgress
argument_list|(
name|jid
argument_list|,
name|jc
argument_list|,
name|UtilsForTests
operator|.
name|getJobTracker
argument_list|()
argument_list|)
decl_stmt|;
comment|//unfortunately, we can't set job input size from here.
name|ResourceEstimator
name|re
init|=
operator|new
name|ResourceEstimator
argument_list|(
name|jip
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maps
operator|/
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|long
name|estOutSize
init|=
name|re
operator|.
name|getEstimatedMapOutputSize
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|estOutSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|estOutSize
argument_list|)
expr_stmt|;
name|TaskStatus
name|ts
init|=
operator|new
name|MapTaskStatus
argument_list|()
decl_stmt|;
name|ts
operator|.
name|setOutputSize
argument_list|(
name|singleMapOutputSize
argument_list|)
expr_stmt|;
name|JobSplit
operator|.
name|TaskSplitMetaInfo
name|split
init|=
operator|new
name|JobSplit
operator|.
name|TaskSplitMetaInfo
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|TaskInProgress
name|tip
init|=
operator|new
name|TaskInProgress
argument_list|(
name|jid
argument_list|,
literal|""
argument_list|,
name|split
argument_list|,
literal|null
argument_list|,
name|jc
argument_list|,
name|jip
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|re
operator|.
name|updateWithCompletedTask
argument_list|(
name|ts
argument_list|,
name|tip
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|2
operator|*
name|singleMapOutputSize
argument_list|,
name|re
operator|.
name|getEstimatedMapOutputSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|singleMapOutputSize
operator|*
name|maps
operator|/
name|reduces
argument_list|,
name|re
operator|.
name|getEstimatedReduceInputSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testWithNonZeroInput ()
specifier|public
name|void
name|testWithNonZeroInput
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|maps
init|=
literal|100
decl_stmt|;
specifier|final
name|int
name|reduces
init|=
literal|2
decl_stmt|;
specifier|final
name|int
name|singleMapOutputSize
init|=
literal|1000
decl_stmt|;
specifier|final
name|int
name|singleMapInputSize
init|=
literal|500
decl_stmt|;
name|JobConf
name|jc
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|JobID
name|jid
init|=
operator|new
name|JobID
argument_list|(
literal|"testJT"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|jc
operator|.
name|setNumMapTasks
argument_list|(
name|maps
argument_list|)
expr_stmt|;
name|jc
operator|.
name|setNumReduceTasks
argument_list|(
name|reduces
argument_list|)
expr_stmt|;
name|JobInProgress
name|jip
init|=
operator|new
name|JobInProgress
argument_list|(
name|jid
argument_list|,
name|jc
argument_list|,
name|UtilsForTests
operator|.
name|getJobTracker
argument_list|()
argument_list|)
block|{
name|long
name|getInputLength
parameter_list|()
block|{
return|return
name|singleMapInputSize
operator|*
name|desiredMaps
argument_list|()
return|;
block|}
block|}
decl_stmt|;
name|ResourceEstimator
name|re
init|=
operator|new
name|ResourceEstimator
argument_list|(
name|jip
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|maps
operator|/
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|long
name|estOutSize
init|=
name|re
operator|.
name|getEstimatedMapOutputSize
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|estOutSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|estOutSize
argument_list|)
expr_stmt|;
name|TaskStatus
name|ts
init|=
operator|new
name|MapTaskStatus
argument_list|()
decl_stmt|;
name|ts
operator|.
name|setOutputSize
argument_list|(
name|singleMapOutputSize
argument_list|)
expr_stmt|;
name|JobSplit
operator|.
name|TaskSplitMetaInfo
name|split
init|=
operator|new
name|JobSplit
operator|.
name|TaskSplitMetaInfo
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
name|singleMapInputSize
argument_list|)
decl_stmt|;
name|TaskInProgress
name|tip
init|=
operator|new
name|TaskInProgress
argument_list|(
name|jid
argument_list|,
literal|""
argument_list|,
name|split
argument_list|,
literal|null
argument_list|,
name|jc
argument_list|,
name|jip
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|re
operator|.
name|updateWithCompletedTask
argument_list|(
name|ts
argument_list|,
name|tip
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|2
operator|*
name|singleMapOutputSize
argument_list|,
name|re
operator|.
name|getEstimatedMapOutputSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|singleMapOutputSize
operator|*
name|maps
operator|/
name|reduces
argument_list|,
name|re
operator|.
name|getEstimatedReduceInputSize
argument_list|()
argument_list|)
expr_stmt|;
comment|//add one more map task with input size as 0
name|TaskStatus
name|ts
init|=
operator|new
name|MapTaskStatus
argument_list|()
decl_stmt|;
name|ts
operator|.
name|setOutputSize
argument_list|(
name|singleMapOutputSize
argument_list|)
expr_stmt|;
name|JobSplit
operator|.
name|TaskSplitMetaInfo
name|split
init|=
operator|new
name|JobSplit
operator|.
name|TaskSplitMetaInfo
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|TaskInProgress
name|tip
init|=
operator|new
name|TaskInProgress
argument_list|(
name|jid
argument_list|,
literal|""
argument_list|,
name|split
argument_list|,
literal|null
argument_list|,
name|jc
argument_list|,
name|jip
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|re
operator|.
name|updateWithCompletedTask
argument_list|(
name|ts
argument_list|,
name|tip
argument_list|)
expr_stmt|;
name|long
name|expectedTotalMapOutSize
init|=
operator|(
name|singleMapOutputSize
operator|*
literal|11
operator|)
operator|*
operator|(
operator|(
name|maps
operator|*
name|singleMapInputSize
operator|)
operator|+
name|maps
operator|)
operator|/
operator|(
operator|(
name|singleMapInputSize
operator|+
literal|1
operator|)
operator|*
literal|10
operator|+
literal|1
operator|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|expectedTotalMapOutSize
operator|/
name|maps
argument_list|,
name|re
operator|.
name|getEstimatedMapOutputSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

