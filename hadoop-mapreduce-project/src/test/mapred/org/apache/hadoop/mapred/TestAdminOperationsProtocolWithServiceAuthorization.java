begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|tools
operator|.
name|MRAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|PolicyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|ServiceAuthorizationManager
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Test case to check if {@link AdminOperationsProtocol#refreshNodes()} and   * {@link AdminOperationsProtocol#refreshQueueAcls()} works with service-level  * authorization enabled i.e 'hadoop.security.authorization' set to true.  */
end_comment

begin_class
DECL|class|TestAdminOperationsProtocolWithServiceAuthorization
specifier|public
class|class
name|TestAdminOperationsProtocolWithServiceAuthorization
extends|extends
name|TestCase
block|{
DECL|method|testServiceLevelAuthorization ()
specifier|public
name|void
name|testServiceLevelAuthorization
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniMRCluster
name|mr
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// Turn on service-level authorization
specifier|final
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
name|PolicyProvider
operator|.
name|POLICY_PROVIDER_CONFIG
argument_list|,
name|MapReducePolicyProvider
operator|.
name|class
argument_list|,
name|PolicyProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|ServiceAuthorizationManager
operator|.
name|SERVICE_AUTHORIZATION_CONFIG
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Start the mini mr cluster
name|mr
operator|=
operator|new
name|MiniMRCluster
argument_list|(
literal|1
argument_list|,
literal|"file:///"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|)
expr_stmt|;
comment|// Invoke MRAdmin commands
name|MRAdmin
name|mrAdmin
init|=
operator|new
name|MRAdmin
argument_list|(
name|mr
operator|.
name|createJobConf
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mrAdmin
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-refreshQueues"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mrAdmin
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-refreshNodes"
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|mr
operator|!=
literal|null
condition|)
block|{
name|mr
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

