begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TestMRJobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|tools
operator|.
name|CLI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Tool
import|;
end_import

begin_class
DECL|class|TestJobClient
specifier|public
class|class
name|TestJobClient
extends|extends
name|TestMRJobClient
block|{
DECL|method|runJob ()
specifier|private
name|String
name|runJob
parameter_list|()
throws|throws
name|Exception
block|{
name|OutputStream
name|os
init|=
name|getFileSystem
argument_list|()
operator|.
name|create
argument_list|(
operator|new
name|Path
argument_list|(
name|getInputDir
argument_list|()
argument_list|,
literal|"text.txt"
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|wr
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello1\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello2\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello3\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|close
argument_list|()
expr_stmt|;
name|JobConf
name|conf
init|=
name|createJobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setJobName
argument_list|(
literal|"mr"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setJobPriority
argument_list|(
name|JobPriority
operator|.
name|HIGH
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInputFormat
argument_list|(
name|TextInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapOutputKeyClass
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapOutputValueClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputFormat
argument_list|(
name|TextOutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyClass
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputValueClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapperClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
operator|.
name|IdentityMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReducerClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
operator|.
name|IdentityReducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|FileInputFormat
operator|.
name|setInputPaths
argument_list|(
name|conf
argument_list|,
name|getInputDir
argument_list|()
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|conf
argument_list|,
name|getOutputDir
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|JobClient
operator|.
name|runJob
argument_list|(
name|conf
argument_list|)
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|runTool (Configuration conf, Tool tool, String[] args, OutputStream out)
specifier|public
specifier|static
name|int
name|runTool
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|Tool
name|tool
parameter_list|,
name|String
index|[]
name|args
parameter_list|,
name|OutputStream
name|out
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|TestMRJobClient
operator|.
name|runTool
argument_list|(
name|conf
argument_list|,
name|tool
argument_list|,
name|args
argument_list|,
name|out
argument_list|)
return|;
block|}
DECL|method|verifyJobPriority (String jobId, String priority, JobConf conf)
specifier|static
name|void
name|verifyJobPriority
parameter_list|(
name|String
name|jobId
parameter_list|,
name|String
name|priority
parameter_list|,
name|JobConf
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|TestJobClient
name|test
init|=
operator|new
name|TestJobClient
argument_list|()
decl_stmt|;
name|test
operator|.
name|verifyJobPriority
argument_list|(
name|jobId
argument_list|,
name|priority
argument_list|,
name|conf
argument_list|,
name|test
operator|.
name|createJobClient
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testJobClient ()
specifier|public
name|void
name|testJobClient
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|createJobConf
argument_list|()
decl_stmt|;
name|String
name|jobId
init|=
name|runJob
argument_list|()
decl_stmt|;
name|testGetCounter
argument_list|(
name|jobId
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|testJobList
argument_list|(
name|jobId
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|testChangingJobPriority
argument_list|(
name|jobId
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|createJobClient ()
specifier|protected
name|CLI
name|createJobClient
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|JobClient
argument_list|()
return|;
block|}
block|}
end_class

end_unit

