begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.rumen
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
DECL|class|ParsedConfigFile
class|class
name|ParsedConfigFile
block|{
DECL|field|jobIDPattern
specifier|private
specifier|static
specifier|final
name|Pattern
name|jobIDPattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"_(job_[0-9]+_[0-9]+)_"
argument_list|)
decl_stmt|;
DECL|field|heapPattern
specifier|private
specifier|static
specifier|final
name|Pattern
name|heapPattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"-Xmx([0-9]+)([mMgG])"
argument_list|)
decl_stmt|;
DECL|field|heapMegabytes
specifier|final
name|int
name|heapMegabytes
decl_stmt|;
DECL|field|queue
specifier|final
name|String
name|queue
decl_stmt|;
DECL|field|jobName
specifier|final
name|String
name|jobName
decl_stmt|;
DECL|field|clusterMapMB
specifier|final
name|int
name|clusterMapMB
decl_stmt|;
DECL|field|clusterReduceMB
specifier|final
name|int
name|clusterReduceMB
decl_stmt|;
DECL|field|jobMapMB
specifier|final
name|int
name|jobMapMB
decl_stmt|;
DECL|field|jobReduceMB
specifier|final
name|int
name|jobReduceMB
decl_stmt|;
DECL|field|jobID
specifier|final
name|String
name|jobID
decl_stmt|;
DECL|field|valid
specifier|final
name|boolean
name|valid
decl_stmt|;
DECL|field|properties
specifier|final
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
DECL|method|maybeGetIntValue (String propName, String attr, String value, int oldValue)
specifier|private
name|int
name|maybeGetIntValue
parameter_list|(
name|String
name|propName
parameter_list|,
name|String
name|attr
parameter_list|,
name|String
name|value
parameter_list|,
name|int
name|oldValue
parameter_list|)
block|{
if|if
condition|(
name|propName
operator|.
name|equals
argument_list|(
name|attr
argument_list|)
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
try|try
block|{
return|return
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
return|return
name|oldValue
return|;
block|}
block|}
return|return
name|oldValue
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"hiding"
argument_list|)
annotation|@
name|Deprecated
DECL|method|ParsedConfigFile (String filenameLine, String xmlString)
name|ParsedConfigFile
parameter_list|(
name|String
name|filenameLine
parameter_list|,
name|String
name|xmlString
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|int
name|heapMegabytes
init|=
operator|-
literal|1
decl_stmt|;
name|String
name|queue
init|=
literal|null
decl_stmt|;
name|String
name|jobName
init|=
literal|null
decl_stmt|;
name|int
name|clusterMapMB
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|clusterReduceMB
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|jobMapMB
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|jobReduceMB
init|=
operator|-
literal|1
decl_stmt|;
name|String
name|jobID
init|=
literal|null
decl_stmt|;
name|boolean
name|valid
init|=
literal|true
decl_stmt|;
name|Matcher
name|jobIDMatcher
init|=
name|jobIDPattern
operator|.
name|matcher
argument_list|(
name|filenameLine
argument_list|)
decl_stmt|;
if|if
condition|(
name|jobIDMatcher
operator|.
name|find
argument_list|()
condition|)
block|{
name|jobID
operator|=
name|jobIDMatcher
operator|.
name|group
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|InputStream
name|is
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|xmlString
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|DocumentBuilderFactory
name|dbf
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|DocumentBuilder
name|db
init|=
name|dbf
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|db
operator|.
name|parse
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|Element
name|root
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
literal|"configuration"
operator|.
name|equals
argument_list|(
name|root
operator|.
name|getTagName
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"root is not a configuration node"
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
name|NodeList
name|props
init|=
name|root
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|props
operator|.
name|getLength
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Node
name|propNode
init|=
name|props
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|propNode
operator|instanceof
name|Element
operator|)
condition|)
continue|continue;
name|Element
name|prop
init|=
operator|(
name|Element
operator|)
name|propNode
decl_stmt|;
if|if
condition|(
operator|!
literal|"property"
operator|.
name|equals
argument_list|(
name|prop
operator|.
name|getTagName
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"bad conf file: element not<property>"
argument_list|)
expr_stmt|;
block|}
name|NodeList
name|fields
init|=
name|prop
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
name|String
name|attr
init|=
literal|null
decl_stmt|;
name|String
name|value
init|=
literal|null
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
name|boolean
name|finalParameter
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|fields
operator|.
name|getLength
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|Node
name|fieldNode
init|=
name|fields
operator|.
name|item
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|fieldNode
operator|instanceof
name|Element
operator|)
condition|)
block|{
continue|continue;
block|}
name|Element
name|field
init|=
operator|(
name|Element
operator|)
name|fieldNode
decl_stmt|;
if|if
condition|(
literal|"name"
operator|.
name|equals
argument_list|(
name|field
operator|.
name|getTagName
argument_list|()
argument_list|)
operator|&&
name|field
operator|.
name|hasChildNodes
argument_list|()
condition|)
block|{
name|attr
operator|=
operator|(
operator|(
name|Text
operator|)
name|field
operator|.
name|getFirstChild
argument_list|()
operator|)
operator|.
name|getData
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
literal|"value"
operator|.
name|equals
argument_list|(
name|field
operator|.
name|getTagName
argument_list|()
argument_list|)
operator|&&
name|field
operator|.
name|hasChildNodes
argument_list|()
condition|)
block|{
name|value
operator|=
operator|(
operator|(
name|Text
operator|)
name|field
operator|.
name|getFirstChild
argument_list|()
operator|)
operator|.
name|getData
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
literal|"final"
operator|.
name|equals
argument_list|(
name|field
operator|.
name|getTagName
argument_list|()
argument_list|)
operator|&&
name|field
operator|.
name|hasChildNodes
argument_list|()
condition|)
block|{
name|finalParameter
operator|=
literal|"true"
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Text
operator|)
name|field
operator|.
name|getFirstChild
argument_list|()
operator|)
operator|.
name|getData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|properties
operator|.
name|setProperty
argument_list|(
name|attr
argument_list|,
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"mapred.child.java.opts"
operator|.
name|equals
argument_list|(
name|attr
argument_list|)
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|Matcher
name|matcher
init|=
name|heapPattern
operator|.
name|matcher
argument_list|(
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
name|matcher
operator|.
name|find
argument_list|()
condition|)
block|{
name|String
name|heapSize
init|=
name|matcher
operator|.
name|group
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|heapMegabytes
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|heapSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|matcher
operator|.
name|group
argument_list|(
literal|2
argument_list|)
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"G"
argument_list|)
condition|)
block|{
name|heapMegabytes
operator|*=
literal|1024
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|MRJobConfig
operator|.
name|QUEUE_NAME
operator|.
name|equals
argument_list|(
name|attr
argument_list|)
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|queue
operator|=
name|value
expr_stmt|;
block|}
if|if
condition|(
name|MRJobConfig
operator|.
name|JOB_NAME
operator|.
name|equals
argument_list|(
name|attr
argument_list|)
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|jobName
operator|=
name|value
expr_stmt|;
block|}
name|clusterMapMB
operator|=
name|maybeGetIntValue
argument_list|(
name|MRConfig
operator|.
name|MAPMEMORY_MB
argument_list|,
name|attr
argument_list|,
name|value
argument_list|,
name|clusterMapMB
argument_list|)
expr_stmt|;
name|clusterReduceMB
operator|=
name|maybeGetIntValue
argument_list|(
name|MRConfig
operator|.
name|REDUCEMEMORY_MB
argument_list|,
name|attr
argument_list|,
name|value
argument_list|,
name|clusterReduceMB
argument_list|)
expr_stmt|;
name|jobMapMB
operator|=
name|maybeGetIntValue
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|attr
argument_list|,
name|value
argument_list|,
name|jobMapMB
argument_list|)
expr_stmt|;
name|jobReduceMB
operator|=
name|maybeGetIntValue
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|attr
argument_list|,
name|value
argument_list|,
name|jobReduceMB
argument_list|)
expr_stmt|;
block|}
name|valid
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
name|valid
operator|=
literal|false
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
name|valid
operator|=
literal|false
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|valid
operator|=
literal|false
expr_stmt|;
block|}
name|this
operator|.
name|heapMegabytes
operator|=
name|heapMegabytes
expr_stmt|;
name|this
operator|.
name|queue
operator|=
name|queue
expr_stmt|;
name|this
operator|.
name|jobName
operator|=
name|jobName
expr_stmt|;
name|this
operator|.
name|clusterMapMB
operator|=
name|clusterMapMB
expr_stmt|;
name|this
operator|.
name|clusterReduceMB
operator|=
name|clusterReduceMB
expr_stmt|;
name|this
operator|.
name|jobMapMB
operator|=
name|jobMapMB
expr_stmt|;
name|this
operator|.
name|jobReduceMB
operator|=
name|jobReduceMB
expr_stmt|;
name|this
operator|.
name|jobID
operator|=
name|jobID
expr_stmt|;
name|this
operator|.
name|valid
operator|=
name|valid
expr_stmt|;
block|}
block|}
end_class

end_unit

