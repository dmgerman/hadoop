begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.examples
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|examples
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configured
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|ClusterStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|SequenceFileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Tool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ToolRunner
import|;
end_import

begin_comment
comment|/**  * This program uses map/reduce to just run a distributed job where there is  * no interaction between the tasks and each task writes a large unsorted  * random sequence of words.  * In order for this program to generate data for terasort with a 5-10 words  * per key and 20-100 words per value, have the following config:  *<pre>{@code  *<?xml version="1.0"?>  *<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>  *<configuration>  *<property>  *<name>mapreduce.randomtextwriter.minwordskey</name>  *<value>5</value>  *</property>  *<property>  *<name>mapreduce.randomtextwriter.maxwordskey</name>  *<value>10</value>  *</property>  *<property>  *<name>mapreduce.randomtextwriter.minwordsvalue</name>  *<value>20</value>  *</property>  *<property>  *<name>mapreduce.randomtextwriter.maxwordsvalue</name>  *<value>100</value>  *</property>  *<property>  *<name>mapreduce.randomtextwriter.totalbytes</name>  *<value>1099511627776</value>  *</property>  *</configuration>}</pre>  *   * Equivalently, {@link RandomTextWriter} also supports all the above options  * and ones supported by {@link Tool} via the command-line.  *   * To run: bin/hadoop jar hadoop-${version}-examples.jar randomtextwriter  *            [-outFormat<i>output format class</i>]<i>output</i>   */
end_comment

begin_class
DECL|class|RandomTextWriter
specifier|public
class|class
name|RandomTextWriter
extends|extends
name|Configured
implements|implements
name|Tool
block|{
DECL|field|TOTAL_BYTES
specifier|public
specifier|static
specifier|final
name|String
name|TOTAL_BYTES
init|=
literal|"mapreduce.randomtextwriter.totalbytes"
decl_stmt|;
DECL|field|BYTES_PER_MAP
specifier|public
specifier|static
specifier|final
name|String
name|BYTES_PER_MAP
init|=
literal|"mapreduce.randomtextwriter.bytespermap"
decl_stmt|;
DECL|field|MAPS_PER_HOST
specifier|public
specifier|static
specifier|final
name|String
name|MAPS_PER_HOST
init|=
literal|"mapreduce.randomtextwriter.mapsperhost"
decl_stmt|;
DECL|field|MAX_VALUE
specifier|public
specifier|static
specifier|final
name|String
name|MAX_VALUE
init|=
literal|"mapreduce.randomtextwriter.maxwordsvalue"
decl_stmt|;
DECL|field|MIN_VALUE
specifier|public
specifier|static
specifier|final
name|String
name|MIN_VALUE
init|=
literal|"mapreduce.randomtextwriter.minwordsvalue"
decl_stmt|;
DECL|field|MIN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|MIN_KEY
init|=
literal|"mapreduce.randomtextwriter.minwordskey"
decl_stmt|;
DECL|field|MAX_KEY
specifier|public
specifier|static
specifier|final
name|String
name|MAX_KEY
init|=
literal|"mapreduce.randomtextwriter.maxwordskey"
decl_stmt|;
DECL|method|printUsage ()
specifier|static
name|int
name|printUsage
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"randomtextwriter "
operator|+
literal|"[-outFormat<output format class>] "
operator|+
literal|"<output>"
argument_list|)
expr_stmt|;
name|ToolRunner
operator|.
name|printGenericCommandUsage
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
return|return
literal|2
return|;
block|}
comment|/**    * User counters    */
DECL|enum|Counters
DECL|enumConstant|RECORDS_WRITTEN
DECL|enumConstant|BYTES_WRITTEN
enum|enum
name|Counters
block|{
name|RECORDS_WRITTEN
block|,
name|BYTES_WRITTEN
block|}
DECL|class|RandomTextMapper
specifier|static
class|class
name|RandomTextMapper
extends|extends
name|Mapper
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
block|{
DECL|field|numBytesToWrite
specifier|private
name|long
name|numBytesToWrite
decl_stmt|;
DECL|field|minWordsInKey
specifier|private
name|int
name|minWordsInKey
decl_stmt|;
DECL|field|wordsInKeyRange
specifier|private
name|int
name|wordsInKeyRange
decl_stmt|;
DECL|field|minWordsInValue
specifier|private
name|int
name|minWordsInValue
decl_stmt|;
DECL|field|wordsInValueRange
specifier|private
name|int
name|wordsInValueRange
decl_stmt|;
DECL|field|random
specifier|private
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
comment|/**      * Save the configuration value that we need to write the data.      */
DECL|method|setup (Context context)
specifier|public
name|void
name|setup
parameter_list|(
name|Context
name|context
parameter_list|)
block|{
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|numBytesToWrite
operator|=
name|conf
operator|.
name|getLong
argument_list|(
name|BYTES_PER_MAP
argument_list|,
literal|1
operator|*
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|minWordsInKey
operator|=
name|conf
operator|.
name|getInt
argument_list|(
name|MIN_KEY
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|wordsInKeyRange
operator|=
operator|(
name|conf
operator|.
name|getInt
argument_list|(
name|MAX_KEY
argument_list|,
literal|10
argument_list|)
operator|-
name|minWordsInKey
operator|)
expr_stmt|;
name|minWordsInValue
operator|=
name|conf
operator|.
name|getInt
argument_list|(
name|MIN_VALUE
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wordsInValueRange
operator|=
operator|(
name|conf
operator|.
name|getInt
argument_list|(
name|MAX_VALUE
argument_list|,
literal|100
argument_list|)
operator|-
name|minWordsInValue
operator|)
expr_stmt|;
block|}
comment|/**      * Given an output filename, write a bunch of random records to it.      */
DECL|method|map (Text key, Text value, Context context)
specifier|public
name|void
name|map
parameter_list|(
name|Text
name|key
parameter_list|,
name|Text
name|value
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|int
name|itemCount
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|numBytesToWrite
operator|>
literal|0
condition|)
block|{
comment|// Generate the key/value
name|int
name|noWordsKey
init|=
name|minWordsInKey
operator|+
operator|(
name|wordsInKeyRange
operator|!=
literal|0
condition|?
name|random
operator|.
name|nextInt
argument_list|(
name|wordsInKeyRange
argument_list|)
else|:
literal|0
operator|)
decl_stmt|;
name|int
name|noWordsValue
init|=
name|minWordsInValue
operator|+
operator|(
name|wordsInValueRange
operator|!=
literal|0
condition|?
name|random
operator|.
name|nextInt
argument_list|(
name|wordsInValueRange
argument_list|)
else|:
literal|0
operator|)
decl_stmt|;
name|Text
name|keyWords
init|=
name|generateSentence
argument_list|(
name|noWordsKey
argument_list|)
decl_stmt|;
name|Text
name|valueWords
init|=
name|generateSentence
argument_list|(
name|noWordsValue
argument_list|)
decl_stmt|;
comment|// Write the sentence
name|context
operator|.
name|write
argument_list|(
name|keyWords
argument_list|,
name|valueWords
argument_list|)
expr_stmt|;
name|numBytesToWrite
operator|-=
operator|(
name|keyWords
operator|.
name|getLength
argument_list|()
operator|+
name|valueWords
operator|.
name|getLength
argument_list|()
operator|)
expr_stmt|;
comment|// Update counters, progress etc.
name|context
operator|.
name|getCounter
argument_list|(
name|Counters
operator|.
name|BYTES_WRITTEN
argument_list|)
operator|.
name|increment
argument_list|(
name|keyWords
operator|.
name|getLength
argument_list|()
operator|+
name|valueWords
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getCounter
argument_list|(
name|Counters
operator|.
name|RECORDS_WRITTEN
argument_list|)
operator|.
name|increment
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|++
name|itemCount
operator|%
literal|200
operator|==
literal|0
condition|)
block|{
name|context
operator|.
name|setStatus
argument_list|(
literal|"wrote record "
operator|+
name|itemCount
operator|+
literal|". "
operator|+
name|numBytesToWrite
operator|+
literal|" bytes left."
argument_list|)
expr_stmt|;
block|}
block|}
name|context
operator|.
name|setStatus
argument_list|(
literal|"done with "
operator|+
name|itemCount
operator|+
literal|" records."
argument_list|)
expr_stmt|;
block|}
DECL|method|generateSentence (int noWords)
specifier|private
name|Text
name|generateSentence
parameter_list|(
name|int
name|noWords
parameter_list|)
block|{
name|StringBuffer
name|sentence
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|String
name|space
init|=
literal|" "
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|noWords
condition|;
operator|++
name|i
control|)
block|{
name|sentence
operator|.
name|append
argument_list|(
name|words
index|[
name|random
operator|.
name|nextInt
argument_list|(
name|words
operator|.
name|length
argument_list|)
index|]
argument_list|)
expr_stmt|;
name|sentence
operator|.
name|append
argument_list|(
name|space
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|Text
argument_list|(
name|sentence
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
comment|/**    * This is the main routine for launching a distributed random write job.    * It runs 10 maps/node and each node writes 1 gig of data to a DFS file.    * The reduce doesn't do anything.    *     * @throws IOException     */
DECL|method|run (String[] args)
specifier|public
name|int
name|run
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|==
literal|0
condition|)
block|{
return|return
name|printUsage
argument_list|()
return|;
block|}
name|Configuration
name|conf
init|=
name|getConf
argument_list|()
decl_stmt|;
name|JobClient
name|client
init|=
operator|new
name|JobClient
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|ClusterStatus
name|cluster
init|=
name|client
operator|.
name|getClusterStatus
argument_list|()
decl_stmt|;
name|int
name|numMapsPerHost
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|MAPS_PER_HOST
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|long
name|numBytesToWritePerMap
init|=
name|conf
operator|.
name|getLong
argument_list|(
name|BYTES_PER_MAP
argument_list|,
literal|1
operator|*
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
decl_stmt|;
if|if
condition|(
name|numBytesToWritePerMap
operator|==
literal|0
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Cannot have "
operator|+
name|BYTES_PER_MAP
operator|+
literal|" set to 0"
argument_list|)
expr_stmt|;
return|return
operator|-
literal|2
return|;
block|}
name|long
name|totalBytesToWrite
init|=
name|conf
operator|.
name|getLong
argument_list|(
name|TOTAL_BYTES
argument_list|,
name|numMapsPerHost
operator|*
name|numBytesToWritePerMap
operator|*
name|cluster
operator|.
name|getTaskTrackers
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|numMaps
init|=
call|(
name|int
call|)
argument_list|(
name|totalBytesToWrite
operator|/
name|numBytesToWritePerMap
argument_list|)
decl_stmt|;
if|if
condition|(
name|numMaps
operator|==
literal|0
operator|&&
name|totalBytesToWrite
operator|>
literal|0
condition|)
block|{
name|numMaps
operator|=
literal|1
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|BYTES_PER_MAP
argument_list|,
name|totalBytesToWrite
argument_list|)
expr_stmt|;
block|}
name|conf
operator|.
name|setInt
argument_list|(
name|MRJobConfig
operator|.
name|NUM_MAPS
argument_list|,
name|numMaps
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|Job
operator|.
name|getInstance
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|job
operator|.
name|setJarByClass
argument_list|(
name|RandomTextWriter
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setJobName
argument_list|(
literal|"random-text-writer"
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputKeyClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setOutputValueClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setInputFormatClass
argument_list|(
name|RandomWriter
operator|.
name|RandomInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|job
operator|.
name|setMapperClass
argument_list|(
name|RandomTextMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|OutputFormat
argument_list|>
name|outputFormatClass
init|=
name|SequenceFileOutputFormat
operator|.
name|class
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|otherArgs
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|args
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
try|try
block|{
if|if
condition|(
literal|"-outFormat"
operator|.
name|equals
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|outputFormatClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
name|args
index|[
operator|++
name|i
index|]
argument_list|)
operator|.
name|asSubclass
argument_list|(
name|OutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|otherArgs
operator|.
name|add
argument_list|(
name|args
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ArrayIndexOutOfBoundsException
name|except
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ERROR: Required parameter missing from "
operator|+
name|args
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
return|return
name|printUsage
argument_list|()
return|;
comment|// exits
block|}
block|}
name|job
operator|.
name|setOutputFormatClass
argument_list|(
name|outputFormatClass
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|job
argument_list|,
operator|new
name|Path
argument_list|(
name|otherArgs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Running "
operator|+
name|numMaps
operator|+
literal|" maps."
argument_list|)
expr_stmt|;
comment|// reducer NONE
name|job
operator|.
name|setNumReduceTasks
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Date
name|startTime
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Job started: "
operator|+
name|startTime
argument_list|)
expr_stmt|;
name|int
name|ret
init|=
name|job
operator|.
name|waitForCompletion
argument_list|(
literal|true
argument_list|)
condition|?
literal|0
else|:
literal|1
decl_stmt|;
name|Date
name|endTime
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Job ended: "
operator|+
name|endTime
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"The job took "
operator|+
operator|(
name|endTime
operator|.
name|getTime
argument_list|()
operator|-
name|startTime
operator|.
name|getTime
argument_list|()
operator|)
operator|/
literal|1000
operator|+
literal|" seconds."
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
DECL|method|main (String[] args)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|res
init|=
name|ToolRunner
operator|.
name|run
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
operator|new
name|RandomTextWriter
argument_list|()
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|System
operator|.
name|exit
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
comment|/**    * A random list of 1000 words from /usr/share/dict/words    */
DECL|field|words
specifier|private
specifier|static
name|String
index|[]
name|words
init|=
block|{
literal|"diurnalness"
block|,
literal|"Homoiousian"
block|,
literal|"spiranthic"
block|,
literal|"tetragynian"
block|,
literal|"silverhead"
block|,
literal|"ungreat"
block|,
literal|"lithograph"
block|,
literal|"exploiter"
block|,
literal|"physiologian"
block|,
literal|"by"
block|,
literal|"hellbender"
block|,
literal|"Filipendula"
block|,
literal|"undeterring"
block|,
literal|"antiscolic"
block|,
literal|"pentagamist"
block|,
literal|"hypoid"
block|,
literal|"cacuminal"
block|,
literal|"sertularian"
block|,
literal|"schoolmasterism"
block|,
literal|"nonuple"
block|,
literal|"gallybeggar"
block|,
literal|"phytonic"
block|,
literal|"swearingly"
block|,
literal|"nebular"
block|,
literal|"Confervales"
block|,
literal|"thermochemically"
block|,
literal|"characinoid"
block|,
literal|"cocksuredom"
block|,
literal|"fallacious"
block|,
literal|"feasibleness"
block|,
literal|"debromination"
block|,
literal|"playfellowship"
block|,
literal|"tramplike"
block|,
literal|"testa"
block|,
literal|"participatingly"
block|,
literal|"unaccessible"
block|,
literal|"bromate"
block|,
literal|"experientialist"
block|,
literal|"roughcast"
block|,
literal|"docimastical"
block|,
literal|"choralcelo"
block|,
literal|"blightbird"
block|,
literal|"peptonate"
block|,
literal|"sombreroed"
block|,
literal|"unschematized"
block|,
literal|"antiabolitionist"
block|,
literal|"besagne"
block|,
literal|"mastication"
block|,
literal|"bromic"
block|,
literal|"sviatonosite"
block|,
literal|"cattimandoo"
block|,
literal|"metaphrastical"
block|,
literal|"endotheliomyoma"
block|,
literal|"hysterolysis"
block|,
literal|"unfulminated"
block|,
literal|"Hester"
block|,
literal|"oblongly"
block|,
literal|"blurredness"
block|,
literal|"authorling"
block|,
literal|"chasmy"
block|,
literal|"Scorpaenidae"
block|,
literal|"toxihaemia"
block|,
literal|"Dictograph"
block|,
literal|"Quakerishly"
block|,
literal|"deaf"
block|,
literal|"timbermonger"
block|,
literal|"strammel"
block|,
literal|"Thraupidae"
block|,
literal|"seditious"
block|,
literal|"plerome"
block|,
literal|"Arneb"
block|,
literal|"eristically"
block|,
literal|"serpentinic"
block|,
literal|"glaumrie"
block|,
literal|"socioromantic"
block|,
literal|"apocalypst"
block|,
literal|"tartrous"
block|,
literal|"Bassaris"
block|,
literal|"angiolymphoma"
block|,
literal|"horsefly"
block|,
literal|"kenno"
block|,
literal|"astronomize"
block|,
literal|"euphemious"
block|,
literal|"arsenide"
block|,
literal|"untongued"
block|,
literal|"parabolicness"
block|,
literal|"uvanite"
block|,
literal|"helpless"
block|,
literal|"gemmeous"
block|,
literal|"stormy"
block|,
literal|"templar"
block|,
literal|"erythrodextrin"
block|,
literal|"comism"
block|,
literal|"interfraternal"
block|,
literal|"preparative"
block|,
literal|"parastas"
block|,
literal|"frontoorbital"
block|,
literal|"Ophiosaurus"
block|,
literal|"diopside"
block|,
literal|"serosanguineous"
block|,
literal|"ununiformly"
block|,
literal|"karyological"
block|,
literal|"collegian"
block|,
literal|"allotropic"
block|,
literal|"depravity"
block|,
literal|"amylogenesis"
block|,
literal|"reformatory"
block|,
literal|"epidymides"
block|,
literal|"pleurotropous"
block|,
literal|"trillium"
block|,
literal|"dastardliness"
block|,
literal|"coadvice"
block|,
literal|"embryotic"
block|,
literal|"benthonic"
block|,
literal|"pomiferous"
block|,
literal|"figureheadship"
block|,
literal|"Megaluridae"
block|,
literal|"Harpa"
block|,
literal|"frenal"
block|,
literal|"commotion"
block|,
literal|"abthainry"
block|,
literal|"cobeliever"
block|,
literal|"manilla"
block|,
literal|"spiciferous"
block|,
literal|"nativeness"
block|,
literal|"obispo"
block|,
literal|"monilioid"
block|,
literal|"biopsic"
block|,
literal|"valvula"
block|,
literal|"enterostomy"
block|,
literal|"planosubulate"
block|,
literal|"pterostigma"
block|,
literal|"lifter"
block|,
literal|"triradiated"
block|,
literal|"venialness"
block|,
literal|"tum"
block|,
literal|"archistome"
block|,
literal|"tautness"
block|,
literal|"unswanlike"
block|,
literal|"antivenin"
block|,
literal|"Lentibulariaceae"
block|,
literal|"Triphora"
block|,
literal|"angiopathy"
block|,
literal|"anta"
block|,
literal|"Dawsonia"
block|,
literal|"becomma"
block|,
literal|"Yannigan"
block|,
literal|"winterproof"
block|,
literal|"antalgol"
block|,
literal|"harr"
block|,
literal|"underogating"
block|,
literal|"ineunt"
block|,
literal|"cornberry"
block|,
literal|"flippantness"
block|,
literal|"scyphostoma"
block|,
literal|"approbation"
block|,
literal|"Ghent"
block|,
literal|"Macraucheniidae"
block|,
literal|"scabbiness"
block|,
literal|"unanatomized"
block|,
literal|"photoelasticity"
block|,
literal|"eurythermal"
block|,
literal|"enation"
block|,
literal|"prepavement"
block|,
literal|"flushgate"
block|,
literal|"subsequentially"
block|,
literal|"Edo"
block|,
literal|"antihero"
block|,
literal|"Isokontae"
block|,
literal|"unforkedness"
block|,
literal|"porriginous"
block|,
literal|"daytime"
block|,
literal|"nonexecutive"
block|,
literal|"trisilicic"
block|,
literal|"morphiomania"
block|,
literal|"paranephros"
block|,
literal|"botchedly"
block|,
literal|"impugnation"
block|,
literal|"Dodecatheon"
block|,
literal|"obolus"
block|,
literal|"unburnt"
block|,
literal|"provedore"
block|,
literal|"Aktistetae"
block|,
literal|"superindifference"
block|,
literal|"Alethea"
block|,
literal|"Joachimite"
block|,
literal|"cyanophilous"
block|,
literal|"chorograph"
block|,
literal|"brooky"
block|,
literal|"figured"
block|,
literal|"periclitation"
block|,
literal|"quintette"
block|,
literal|"hondo"
block|,
literal|"ornithodelphous"
block|,
literal|"unefficient"
block|,
literal|"pondside"
block|,
literal|"bogydom"
block|,
literal|"laurinoxylon"
block|,
literal|"Shiah"
block|,
literal|"unharmed"
block|,
literal|"cartful"
block|,
literal|"noncrystallized"
block|,
literal|"abusiveness"
block|,
literal|"cromlech"
block|,
literal|"japanned"
block|,
literal|"rizzomed"
block|,
literal|"underskin"
block|,
literal|"adscendent"
block|,
literal|"allectory"
block|,
literal|"gelatinousness"
block|,
literal|"volcano"
block|,
literal|"uncompromisingly"
block|,
literal|"cubit"
block|,
literal|"idiotize"
block|,
literal|"unfurbelowed"
block|,
literal|"undinted"
block|,
literal|"magnetooptics"
block|,
literal|"Savitar"
block|,
literal|"diwata"
block|,
literal|"ramosopalmate"
block|,
literal|"Pishquow"
block|,
literal|"tomorn"
block|,
literal|"apopenptic"
block|,
literal|"Haversian"
block|,
literal|"Hysterocarpus"
block|,
literal|"ten"
block|,
literal|"outhue"
block|,
literal|"Bertat"
block|,
literal|"mechanist"
block|,
literal|"asparaginic"
block|,
literal|"velaric"
block|,
literal|"tonsure"
block|,
literal|"bubble"
block|,
literal|"Pyrales"
block|,
literal|"regardful"
block|,
literal|"glyphography"
block|,
literal|"calabazilla"
block|,
literal|"shellworker"
block|,
literal|"stradametrical"
block|,
literal|"havoc"
block|,
literal|"theologicopolitical"
block|,
literal|"sawdust"
block|,
literal|"diatomaceous"
block|,
literal|"jajman"
block|,
literal|"temporomastoid"
block|,
literal|"Serrifera"
block|,
literal|"Ochnaceae"
block|,
literal|"aspersor"
block|,
literal|"trailmaking"
block|,
literal|"Bishareen"
block|,
literal|"digitule"
block|,
literal|"octogynous"
block|,
literal|"epididymitis"
block|,
literal|"smokefarthings"
block|,
literal|"bacillite"
block|,
literal|"overcrown"
block|,
literal|"mangonism"
block|,
literal|"sirrah"
block|,
literal|"undecorated"
block|,
literal|"psychofugal"
block|,
literal|"bismuthiferous"
block|,
literal|"rechar"
block|,
literal|"Lemuridae"
block|,
literal|"frameable"
block|,
literal|"thiodiazole"
block|,
literal|"Scanic"
block|,
literal|"sportswomanship"
block|,
literal|"interruptedness"
block|,
literal|"admissory"
block|,
literal|"osteopaedion"
block|,
literal|"tingly"
block|,
literal|"tomorrowness"
block|,
literal|"ethnocracy"
block|,
literal|"trabecular"
block|,
literal|"vitally"
block|,
literal|"fossilism"
block|,
literal|"adz"
block|,
literal|"metopon"
block|,
literal|"prefatorial"
block|,
literal|"expiscate"
block|,
literal|"diathermacy"
block|,
literal|"chronist"
block|,
literal|"nigh"
block|,
literal|"generalizable"
block|,
literal|"hysterogen"
block|,
literal|"aurothiosulphuric"
block|,
literal|"whitlowwort"
block|,
literal|"downthrust"
block|,
literal|"Protestantize"
block|,
literal|"monander"
block|,
literal|"Itea"
block|,
literal|"chronographic"
block|,
literal|"silicize"
block|,
literal|"Dunlop"
block|,
literal|"eer"
block|,
literal|"componental"
block|,
literal|"spot"
block|,
literal|"pamphlet"
block|,
literal|"antineuritic"
block|,
literal|"paradisean"
block|,
literal|"interruptor"
block|,
literal|"debellator"
block|,
literal|"overcultured"
block|,
literal|"Florissant"
block|,
literal|"hyocholic"
block|,
literal|"pneumatotherapy"
block|,
literal|"tailoress"
block|,
literal|"rave"
block|,
literal|"unpeople"
block|,
literal|"Sebastian"
block|,
literal|"thermanesthesia"
block|,
literal|"Coniferae"
block|,
literal|"swacking"
block|,
literal|"posterishness"
block|,
literal|"ethmopalatal"
block|,
literal|"whittle"
block|,
literal|"analgize"
block|,
literal|"scabbardless"
block|,
literal|"naught"
block|,
literal|"symbiogenetically"
block|,
literal|"trip"
block|,
literal|"parodist"
block|,
literal|"columniform"
block|,
literal|"trunnel"
block|,
literal|"yawler"
block|,
literal|"goodwill"
block|,
literal|"pseudohalogen"
block|,
literal|"swangy"
block|,
literal|"cervisial"
block|,
literal|"mediateness"
block|,
literal|"genii"
block|,
literal|"imprescribable"
block|,
literal|"pony"
block|,
literal|"consumptional"
block|,
literal|"carposporangial"
block|,
literal|"poleax"
block|,
literal|"bestill"
block|,
literal|"subfebrile"
block|,
literal|"sapphiric"
block|,
literal|"arrowworm"
block|,
literal|"qualminess"
block|,
literal|"ultraobscure"
block|,
literal|"thorite"
block|,
literal|"Fouquieria"
block|,
literal|"Bermudian"
block|,
literal|"prescriber"
block|,
literal|"elemicin"
block|,
literal|"warlike"
block|,
literal|"semiangle"
block|,
literal|"rotular"
block|,
literal|"misthread"
block|,
literal|"returnability"
block|,
literal|"seraphism"
block|,
literal|"precostal"
block|,
literal|"quarried"
block|,
literal|"Babylonism"
block|,
literal|"sangaree"
block|,
literal|"seelful"
block|,
literal|"placatory"
block|,
literal|"pachydermous"
block|,
literal|"bozal"
block|,
literal|"galbulus"
block|,
literal|"spermaphyte"
block|,
literal|"cumbrousness"
block|,
literal|"pope"
block|,
literal|"signifier"
block|,
literal|"Endomycetaceae"
block|,
literal|"shallowish"
block|,
literal|"sequacity"
block|,
literal|"periarthritis"
block|,
literal|"bathysphere"
block|,
literal|"pentosuria"
block|,
literal|"Dadaism"
block|,
literal|"spookdom"
block|,
literal|"Consolamentum"
block|,
literal|"afterpressure"
block|,
literal|"mutter"
block|,
literal|"louse"
block|,
literal|"ovoviviparous"
block|,
literal|"corbel"
block|,
literal|"metastoma"
block|,
literal|"biventer"
block|,
literal|"Hydrangea"
block|,
literal|"hogmace"
block|,
literal|"seizing"
block|,
literal|"nonsuppressed"
block|,
literal|"oratorize"
block|,
literal|"uncarefully"
block|,
literal|"benzothiofuran"
block|,
literal|"penult"
block|,
literal|"balanocele"
block|,
literal|"macropterous"
block|,
literal|"dishpan"
block|,
literal|"marten"
block|,
literal|"absvolt"
block|,
literal|"jirble"
block|,
literal|"parmelioid"
block|,
literal|"airfreighter"
block|,
literal|"acocotl"
block|,
literal|"archesporial"
block|,
literal|"hypoplastral"
block|,
literal|"preoral"
block|,
literal|"quailberry"
block|,
literal|"cinque"
block|,
literal|"terrestrially"
block|,
literal|"stroking"
block|,
literal|"limpet"
block|,
literal|"moodishness"
block|,
literal|"canicule"
block|,
literal|"archididascalian"
block|,
literal|"pompiloid"
block|,
literal|"overstaid"
block|,
literal|"introducer"
block|,
literal|"Italical"
block|,
literal|"Christianopaganism"
block|,
literal|"prescriptible"
block|,
literal|"subofficer"
block|,
literal|"danseuse"
block|,
literal|"cloy"
block|,
literal|"saguran"
block|,
literal|"frictionlessly"
block|,
literal|"deindividualization"
block|,
literal|"Bulanda"
block|,
literal|"ventricous"
block|,
literal|"subfoliar"
block|,
literal|"basto"
block|,
literal|"scapuloradial"
block|,
literal|"suspend"
block|,
literal|"stiffish"
block|,
literal|"Sphenodontidae"
block|,
literal|"eternal"
block|,
literal|"verbid"
block|,
literal|"mammonish"
block|,
literal|"upcushion"
block|,
literal|"barkometer"
block|,
literal|"concretion"
block|,
literal|"preagitate"
block|,
literal|"incomprehensible"
block|,
literal|"tristich"
block|,
literal|"visceral"
block|,
literal|"hemimelus"
block|,
literal|"patroller"
block|,
literal|"stentorophonic"
block|,
literal|"pinulus"
block|,
literal|"kerykeion"
block|,
literal|"brutism"
block|,
literal|"monstership"
block|,
literal|"merciful"
block|,
literal|"overinstruct"
block|,
literal|"defensibly"
block|,
literal|"bettermost"
block|,
literal|"splenauxe"
block|,
literal|"Mormyrus"
block|,
literal|"unreprimanded"
block|,
literal|"taver"
block|,
literal|"ell"
block|,
literal|"proacquittal"
block|,
literal|"infestation"
block|,
literal|"overwoven"
block|,
literal|"Lincolnlike"
block|,
literal|"chacona"
block|,
literal|"Tamil"
block|,
literal|"classificational"
block|,
literal|"lebensraum"
block|,
literal|"reeveland"
block|,
literal|"intuition"
block|,
literal|"Whilkut"
block|,
literal|"focaloid"
block|,
literal|"Eleusinian"
block|,
literal|"micromembrane"
block|,
literal|"byroad"
block|,
literal|"nonrepetition"
block|,
literal|"bacterioblast"
block|,
literal|"brag"
block|,
literal|"ribaldrous"
block|,
literal|"phytoma"
block|,
literal|"counteralliance"
block|,
literal|"pelvimetry"
block|,
literal|"pelf"
block|,
literal|"relaster"
block|,
literal|"thermoresistant"
block|,
literal|"aneurism"
block|,
literal|"molossic"
block|,
literal|"euphonym"
block|,
literal|"upswell"
block|,
literal|"ladhood"
block|,
literal|"phallaceous"
block|,
literal|"inertly"
block|,
literal|"gunshop"
block|,
literal|"stereotypography"
block|,
literal|"laryngic"
block|,
literal|"refasten"
block|,
literal|"twinling"
block|,
literal|"oflete"
block|,
literal|"hepatorrhaphy"
block|,
literal|"electrotechnics"
block|,
literal|"cockal"
block|,
literal|"guitarist"
block|,
literal|"topsail"
block|,
literal|"Cimmerianism"
block|,
literal|"larklike"
block|,
literal|"Llandovery"
block|,
literal|"pyrocatechol"
block|,
literal|"immatchable"
block|,
literal|"chooser"
block|,
literal|"metrocratic"
block|,
literal|"craglike"
block|,
literal|"quadrennial"
block|,
literal|"nonpoisonous"
block|,
literal|"undercolored"
block|,
literal|"knob"
block|,
literal|"ultratense"
block|,
literal|"balladmonger"
block|,
literal|"slait"
block|,
literal|"sialadenitis"
block|,
literal|"bucketer"
block|,
literal|"magnificently"
block|,
literal|"unstipulated"
block|,
literal|"unscourged"
block|,
literal|"unsupercilious"
block|,
literal|"packsack"
block|,
literal|"pansophism"
block|,
literal|"soorkee"
block|,
literal|"percent"
block|,
literal|"subirrigate"
block|,
literal|"champer"
block|,
literal|"metapolitics"
block|,
literal|"spherulitic"
block|,
literal|"involatile"
block|,
literal|"metaphonical"
block|,
literal|"stachyuraceous"
block|,
literal|"speckedness"
block|,
literal|"bespin"
block|,
literal|"proboscidiform"
block|,
literal|"gul"
block|,
literal|"squit"
block|,
literal|"yeelaman"
block|,
literal|"peristeropode"
block|,
literal|"opacousness"
block|,
literal|"shibuichi"
block|,
literal|"retinize"
block|,
literal|"yote"
block|,
literal|"misexposition"
block|,
literal|"devilwise"
block|,
literal|"pumpkinification"
block|,
literal|"vinny"
block|,
literal|"bonze"
block|,
literal|"glossing"
block|,
literal|"decardinalize"
block|,
literal|"transcortical"
block|,
literal|"serphoid"
block|,
literal|"deepmost"
block|,
literal|"guanajuatite"
block|,
literal|"wemless"
block|,
literal|"arval"
block|,
literal|"lammy"
block|,
literal|"Effie"
block|,
literal|"Saponaria"
block|,
literal|"tetrahedral"
block|,
literal|"prolificy"
block|,
literal|"excerpt"
block|,
literal|"dunkadoo"
block|,
literal|"Spencerism"
block|,
literal|"insatiately"
block|,
literal|"Gilaki"
block|,
literal|"oratorship"
block|,
literal|"arduousness"
block|,
literal|"unbashfulness"
block|,
literal|"Pithecolobium"
block|,
literal|"unisexuality"
block|,
literal|"veterinarian"
block|,
literal|"detractive"
block|,
literal|"liquidity"
block|,
literal|"acidophile"
block|,
literal|"proauction"
block|,
literal|"sural"
block|,
literal|"totaquina"
block|,
literal|"Vichyite"
block|,
literal|"uninhabitedness"
block|,
literal|"allegedly"
block|,
literal|"Gothish"
block|,
literal|"manny"
block|,
literal|"Inger"
block|,
literal|"flutist"
block|,
literal|"ticktick"
block|,
literal|"Ludgatian"
block|,
literal|"homotransplant"
block|,
literal|"orthopedical"
block|,
literal|"diminutively"
block|,
literal|"monogoneutic"
block|,
literal|"Kenipsim"
block|,
literal|"sarcologist"
block|,
literal|"drome"
block|,
literal|"stronghearted"
block|,
literal|"Fameuse"
block|,
literal|"Swaziland"
block|,
literal|"alen"
block|,
literal|"chilblain"
block|,
literal|"beatable"
block|,
literal|"agglomeratic"
block|,
literal|"constitutor"
block|,
literal|"tendomucoid"
block|,
literal|"porencephalous"
block|,
literal|"arteriasis"
block|,
literal|"boser"
block|,
literal|"tantivy"
block|,
literal|"rede"
block|,
literal|"lineamental"
block|,
literal|"uncontradictableness"
block|,
literal|"homeotypical"
block|,
literal|"masa"
block|,
literal|"folious"
block|,
literal|"dosseret"
block|,
literal|"neurodegenerative"
block|,
literal|"subtransverse"
block|,
literal|"Chiasmodontidae"
block|,
literal|"palaeotheriodont"
block|,
literal|"unstressedly"
block|,
literal|"chalcites"
block|,
literal|"piquantness"
block|,
literal|"lampyrine"
block|,
literal|"Aplacentalia"
block|,
literal|"projecting"
block|,
literal|"elastivity"
block|,
literal|"isopelletierin"
block|,
literal|"bladderwort"
block|,
literal|"strander"
block|,
literal|"almud"
block|,
literal|"iniquitously"
block|,
literal|"theologal"
block|,
literal|"bugre"
block|,
literal|"chargeably"
block|,
literal|"imperceptivity"
block|,
literal|"meriquinoidal"
block|,
literal|"mesophyte"
block|,
literal|"divinator"
block|,
literal|"perfunctory"
block|,
literal|"counterappellant"
block|,
literal|"synovial"
block|,
literal|"charioteer"
block|,
literal|"crystallographical"
block|,
literal|"comprovincial"
block|,
literal|"infrastapedial"
block|,
literal|"pleasurehood"
block|,
literal|"inventurous"
block|,
literal|"ultrasystematic"
block|,
literal|"subangulated"
block|,
literal|"supraoesophageal"
block|,
literal|"Vaishnavism"
block|,
literal|"transude"
block|,
literal|"chrysochrous"
block|,
literal|"ungrave"
block|,
literal|"reconciliable"
block|,
literal|"uninterpleaded"
block|,
literal|"erlking"
block|,
literal|"wherefrom"
block|,
literal|"aprosopia"
block|,
literal|"antiadiaphorist"
block|,
literal|"metoxazine"
block|,
literal|"incalculable"
block|,
literal|"umbellic"
block|,
literal|"predebit"
block|,
literal|"foursquare"
block|,
literal|"unimmortal"
block|,
literal|"nonmanufacture"
block|,
literal|"slangy"
block|,
literal|"predisputant"
block|,
literal|"familist"
block|,
literal|"preaffiliate"
block|,
literal|"friarhood"
block|,
literal|"corelysis"
block|,
literal|"zoonitic"
block|,
literal|"halloo"
block|,
literal|"paunchy"
block|,
literal|"neuromimesis"
block|,
literal|"aconitine"
block|,
literal|"hackneyed"
block|,
literal|"unfeeble"
block|,
literal|"cubby"
block|,
literal|"autoschediastical"
block|,
literal|"naprapath"
block|,
literal|"lyrebird"
block|,
literal|"inexistency"
block|,
literal|"leucophoenicite"
block|,
literal|"ferrogoslarite"
block|,
literal|"reperuse"
block|,
literal|"uncombable"
block|,
literal|"tambo"
block|,
literal|"propodiale"
block|,
literal|"diplomatize"
block|,
literal|"Russifier"
block|,
literal|"clanned"
block|,
literal|"corona"
block|,
literal|"michigan"
block|,
literal|"nonutilitarian"
block|,
literal|"transcorporeal"
block|,
literal|"bought"
block|,
literal|"Cercosporella"
block|,
literal|"stapedius"
block|,
literal|"glandularly"
block|,
literal|"pictorially"
block|,
literal|"weism"
block|,
literal|"disilane"
block|,
literal|"rainproof"
block|,
literal|"Caphtor"
block|,
literal|"scrubbed"
block|,
literal|"oinomancy"
block|,
literal|"pseudoxanthine"
block|,
literal|"nonlustrous"
block|,
literal|"redesertion"
block|,
literal|"Oryzorictinae"
block|,
literal|"gala"
block|,
literal|"Mycogone"
block|,
literal|"reappreciate"
block|,
literal|"cyanoguanidine"
block|,
literal|"seeingness"
block|,
literal|"breadwinner"
block|,
literal|"noreast"
block|,
literal|"furacious"
block|,
literal|"epauliere"
block|,
literal|"omniscribent"
block|,
literal|"Passiflorales"
block|,
literal|"uninductive"
block|,
literal|"inductivity"
block|,
literal|"Orbitolina"
block|,
literal|"Semecarpus"
block|,
literal|"migrainoid"
block|,
literal|"steprelationship"
block|,
literal|"phlogisticate"
block|,
literal|"mesymnion"
block|,
literal|"sloped"
block|,
literal|"edificator"
block|,
literal|"beneficent"
block|,
literal|"culm"
block|,
literal|"paleornithology"
block|,
literal|"unurban"
block|,
literal|"throbless"
block|,
literal|"amplexifoliate"
block|,
literal|"sesquiquintile"
block|,
literal|"sapience"
block|,
literal|"astucious"
block|,
literal|"dithery"
block|,
literal|"boor"
block|,
literal|"ambitus"
block|,
literal|"scotching"
block|,
literal|"uloid"
block|,
literal|"uncompromisingness"
block|,
literal|"hoove"
block|,
literal|"waird"
block|,
literal|"marshiness"
block|,
literal|"Jerusalem"
block|,
literal|"mericarp"
block|,
literal|"unevoked"
block|,
literal|"benzoperoxide"
block|,
literal|"outguess"
block|,
literal|"pyxie"
block|,
literal|"hymnic"
block|,
literal|"euphemize"
block|,
literal|"mendacity"
block|,
literal|"erythremia"
block|,
literal|"rosaniline"
block|,
literal|"unchatteled"
block|,
literal|"lienteria"
block|,
literal|"Bushongo"
block|,
literal|"dialoguer"
block|,
literal|"unrepealably"
block|,
literal|"rivethead"
block|,
literal|"antideflation"
block|,
literal|"vinegarish"
block|,
literal|"manganosiderite"
block|,
literal|"doubtingness"
block|,
literal|"ovopyriform"
block|,
literal|"Cephalodiscus"
block|,
literal|"Muscicapa"
block|,
literal|"Animalivora"
block|,
literal|"angina"
block|,
literal|"planispheric"
block|,
literal|"ipomoein"
block|,
literal|"cuproiodargyrite"
block|,
literal|"sandbox"
block|,
literal|"scrat"
block|,
literal|"Munnopsidae"
block|,
literal|"shola"
block|,
literal|"pentafid"
block|,
literal|"overstudiousness"
block|,
literal|"times"
block|,
literal|"nonprofession"
block|,
literal|"appetible"
block|,
literal|"valvulotomy"
block|,
literal|"goladar"
block|,
literal|"uniarticular"
block|,
literal|"oxyterpene"
block|,
literal|"unlapsing"
block|,
literal|"omega"
block|,
literal|"trophonema"
block|,
literal|"seminonflammable"
block|,
literal|"circumzenithal"
block|,
literal|"starer"
block|,
literal|"depthwise"
block|,
literal|"liberatress"
block|,
literal|"unleavened"
block|,
literal|"unrevolting"
block|,
literal|"groundneedle"
block|,
literal|"topline"
block|,
literal|"wandoo"
block|,
literal|"umangite"
block|,
literal|"ordinant"
block|,
literal|"unachievable"
block|,
literal|"oversand"
block|,
literal|"snare"
block|,
literal|"avengeful"
block|,
literal|"unexplicit"
block|,
literal|"mustafina"
block|,
literal|"sonable"
block|,
literal|"rehabilitative"
block|,
literal|"eulogization"
block|,
literal|"papery"
block|,
literal|"technopsychology"
block|,
literal|"impressor"
block|,
literal|"cresylite"
block|,
literal|"entame"
block|,
literal|"transudatory"
block|,
literal|"scotale"
block|,
literal|"pachydermatoid"
block|,
literal|"imaginary"
block|,
literal|"yeat"
block|,
literal|"slipped"
block|,
literal|"stewardship"
block|,
literal|"adatom"
block|,
literal|"cockstone"
block|,
literal|"skyshine"
block|,
literal|"heavenful"
block|,
literal|"comparability"
block|,
literal|"exprobratory"
block|,
literal|"dermorhynchous"
block|,
literal|"parquet"
block|,
literal|"cretaceous"
block|,
literal|"vesperal"
block|,
literal|"raphis"
block|,
literal|"undangered"
block|,
literal|"Glecoma"
block|,
literal|"engrain"
block|,
literal|"counteractively"
block|,
literal|"Zuludom"
block|,
literal|"orchiocatabasis"
block|,
literal|"Auriculariales"
block|,
literal|"warriorwise"
block|,
literal|"extraorganismal"
block|,
literal|"overbuilt"
block|,
literal|"alveolite"
block|,
literal|"tetchy"
block|,
literal|"terrificness"
block|,
literal|"widdle"
block|,
literal|"unpremonished"
block|,
literal|"rebilling"
block|,
literal|"sequestrum"
block|,
literal|"equiconvex"
block|,
literal|"heliocentricism"
block|,
literal|"catabaptist"
block|,
literal|"okonite"
block|,
literal|"propheticism"
block|,
literal|"helminthagogic"
block|,
literal|"calycular"
block|,
literal|"giantly"
block|,
literal|"wingable"
block|,
literal|"golem"
block|,
literal|"unprovided"
block|,
literal|"commandingness"
block|,
literal|"greave"
block|,
literal|"haply"
block|,
literal|"doina"
block|,
literal|"depressingly"
block|,
literal|"subdentate"
block|,
literal|"impairment"
block|,
literal|"decidable"
block|,
literal|"neurotrophic"
block|,
literal|"unpredict"
block|,
literal|"bicorporeal"
block|,
literal|"pendulant"
block|,
literal|"flatman"
block|,
literal|"intrabred"
block|,
literal|"toplike"
block|,
literal|"Prosobranchiata"
block|,
literal|"farrantly"
block|,
literal|"toxoplasmosis"
block|,
literal|"gorilloid"
block|,
literal|"dipsomaniacal"
block|,
literal|"aquiline"
block|,
literal|"atlantite"
block|,
literal|"ascitic"
block|,
literal|"perculsive"
block|,
literal|"prospectiveness"
block|,
literal|"saponaceous"
block|,
literal|"centrifugalization"
block|,
literal|"dinical"
block|,
literal|"infravaginal"
block|,
literal|"beadroll"
block|,
literal|"affaite"
block|,
literal|"Helvidian"
block|,
literal|"tickleproof"
block|,
literal|"abstractionism"
block|,
literal|"enhedge"
block|,
literal|"outwealth"
block|,
literal|"overcontribute"
block|,
literal|"coldfinch"
block|,
literal|"gymnastic"
block|,
literal|"Pincian"
block|,
literal|"Munychian"
block|,
literal|"codisjunct"
block|,
literal|"quad"
block|,
literal|"coracomandibular"
block|,
literal|"phoenicochroite"
block|,
literal|"amender"
block|,
literal|"selectivity"
block|,
literal|"putative"
block|,
literal|"semantician"
block|,
literal|"lophotrichic"
block|,
literal|"Spatangoidea"
block|,
literal|"saccharogenic"
block|,
literal|"inferent"
block|,
literal|"Triconodonta"
block|,
literal|"arrendation"
block|,
literal|"sheepskin"
block|,
literal|"taurocolla"
block|,
literal|"bunghole"
block|,
literal|"Machiavel"
block|,
literal|"triakistetrahedral"
block|,
literal|"dehairer"
block|,
literal|"prezygapophysial"
block|,
literal|"cylindric"
block|,
literal|"pneumonalgia"
block|,
literal|"sleigher"
block|,
literal|"emir"
block|,
literal|"Socraticism"
block|,
literal|"licitness"
block|,
literal|"massedly"
block|,
literal|"instructiveness"
block|,
literal|"sturdied"
block|,
literal|"redecrease"
block|,
literal|"starosta"
block|,
literal|"evictor"
block|,
literal|"orgiastic"
block|,
literal|"squdge"
block|,
literal|"meloplasty"
block|,
literal|"Tsonecan"
block|,
literal|"repealableness"
block|,
literal|"swoony"
block|,
literal|"myesthesia"
block|,
literal|"molecule"
block|,
literal|"autobiographist"
block|,
literal|"reciprocation"
block|,
literal|"refective"
block|,
literal|"unobservantness"
block|,
literal|"tricae"
block|,
literal|"ungouged"
block|,
literal|"floatability"
block|,
literal|"Mesua"
block|,
literal|"fetlocked"
block|,
literal|"chordacentrum"
block|,
literal|"sedentariness"
block|,
literal|"various"
block|,
literal|"laubanite"
block|,
literal|"nectopod"
block|,
literal|"zenick"
block|,
literal|"sequentially"
block|,
literal|"analgic"
block|,
literal|"biodynamics"
block|,
literal|"posttraumatic"
block|,
literal|"nummi"
block|,
literal|"pyroacetic"
block|,
literal|"bot"
block|,
literal|"redescend"
block|,
literal|"dispermy"
block|,
literal|"undiffusive"
block|,
literal|"circular"
block|,
literal|"trillion"
block|,
literal|"Uraniidae"
block|,
literal|"ploration"
block|,
literal|"discipular"
block|,
literal|"potentness"
block|,
literal|"sud"
block|,
literal|"Hu"
block|,
literal|"Eryon"
block|,
literal|"plugger"
block|,
literal|"subdrainage"
block|,
literal|"jharal"
block|,
literal|"abscission"
block|,
literal|"supermarket"
block|,
literal|"countergabion"
block|,
literal|"glacierist"
block|,
literal|"lithotresis"
block|,
literal|"minniebush"
block|,
literal|"zanyism"
block|,
literal|"eucalypteol"
block|,
literal|"sterilely"
block|,
literal|"unrealize"
block|,
literal|"unpatched"
block|,
literal|"hypochondriacism"
block|,
literal|"critically"
block|,
literal|"cheesecutter"
block|,                                   }
decl_stmt|;
block|}
end_class

end_unit

