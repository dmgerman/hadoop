begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.hs.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|hs
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|pajoin
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
operator|.
name|APP_OWNER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
operator|.
name|CONTAINER_ID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
operator|.
name|ENTITY_STRING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|YarnWebParams
operator|.
name|NM_NODENAME
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|AppContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|AMParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|hs
operator|.
name|HistoryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|GenericExceptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApp
import|;
end_import

begin_class
DECL|class|HsWebApp
specifier|public
class|class
name|HsWebApp
extends|extends
name|WebApp
implements|implements
name|AMParams
block|{
DECL|field|history
specifier|private
name|HistoryContext
name|history
decl_stmt|;
DECL|method|HsWebApp (HistoryContext history)
specifier|public
name|HsWebApp
parameter_list|(
name|HistoryContext
name|history
parameter_list|)
block|{
name|this
operator|.
name|history
operator|=
name|history
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|bind
argument_list|(
name|HsWebServices
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|JAXBContextResolver
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GenericExceptionHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|AppContext
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|history
argument_list|)
expr_stmt|;
name|route
argument_list|(
literal|"/"
argument_list|,
name|HsController
operator|.
name|class
argument_list|)
expr_stmt|;
name|route
argument_list|(
literal|"/app"
argument_list|,
name|HsController
operator|.
name|class
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/job"
argument_list|,
name|JOB_ID
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"job"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/conf"
argument_list|,
name|JOB_ID
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"conf"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/jobcounters"
argument_list|,
name|JOB_ID
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"jobCounters"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/singlejobcounter"
argument_list|,
name|JOB_ID
argument_list|,
name|COUNTER_GROUP
argument_list|,
name|COUNTER_NAME
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"singleJobCounter"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/tasks"
argument_list|,
name|JOB_ID
argument_list|,
name|TASK_TYPE
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"tasks"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/attempts"
argument_list|,
name|JOB_ID
argument_list|,
name|TASK_TYPE
argument_list|,
name|ATTEMPT_STATE
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"attempts"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/task"
argument_list|,
name|TASK_ID
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"task"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/taskcounters"
argument_list|,
name|TASK_ID
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"taskCounters"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/singletaskcounter"
argument_list|,
name|TASK_ID
argument_list|,
name|COUNTER_GROUP
argument_list|,
name|COUNTER_NAME
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"singleTaskCounter"
argument_list|)
expr_stmt|;
name|route
argument_list|(
literal|"/about"
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"about"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/logs"
argument_list|,
name|NM_NODENAME
argument_list|,
name|CONTAINER_ID
argument_list|,
name|ENTITY_STRING
argument_list|,
name|APP_OWNER
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"logs"
argument_list|)
expr_stmt|;
name|route
argument_list|(
name|pajoin
argument_list|(
literal|"/nmlogs"
argument_list|,
name|NM_NODENAME
argument_list|,
name|CONTAINER_ID
argument_list|,
name|ENTITY_STRING
argument_list|,
name|APP_OWNER
argument_list|)
argument_list|,
name|HsController
operator|.
name|class
argument_list|,
literal|"nmlogs"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

