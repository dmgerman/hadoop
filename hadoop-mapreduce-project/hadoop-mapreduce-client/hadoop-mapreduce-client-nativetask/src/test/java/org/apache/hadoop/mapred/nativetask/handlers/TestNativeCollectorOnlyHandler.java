begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.nativetask.handlers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|ICombineHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|INativeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|TaskContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|buffer
operator|.
name|BufferType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|buffer
operator|.
name|InputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|testutil
operator|.
name|TestConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|util
operator|.
name|OutputUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|util
operator|.
name|ReadWriteBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Matchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|,
literal|"unchecked"
block|,
literal|"deprecation"
block|}
argument_list|)
DECL|class|TestNativeCollectorOnlyHandler
specifier|public
class|class
name|TestNativeCollectorOnlyHandler
block|{
DECL|field|handler
specifier|private
name|NativeCollectorOnlyHandler
name|handler
decl_stmt|;
DECL|field|nativeHandler
specifier|private
name|INativeHandler
name|nativeHandler
decl_stmt|;
DECL|field|pusher
specifier|private
name|BufferPusher
name|pusher
decl_stmt|;
DECL|field|combiner
specifier|private
name|ICombineHandler
name|combiner
decl_stmt|;
DECL|field|taskContext
specifier|private
name|TaskContext
name|taskContext
decl_stmt|;
DECL|field|LOCAL_DIR
specifier|private
specifier|static
specifier|final
name|String
name|LOCAL_DIR
init|=
name|TestConstants
operator|.
name|NATIVETASK_TEST_DIR
operator|+
literal|"/local"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|nativeHandler
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|INativeHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|pusher
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|BufferPusher
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|combiner
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ICombineHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|OutputUtil
operator|.
name|NATIVE_TASK_OUTPUT_MANAGER
argument_list|,
literal|"org.apache.hadoop.mapred.nativetask.util.LocalJobOutputFiles"
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
literal|"mapred.local.dir"
argument_list|,
name|LOCAL_DIR
argument_list|)
expr_stmt|;
name|this
operator|.
name|taskContext
operator|=
operator|new
name|TaskContext
argument_list|(
name|jobConf
argument_list|,
name|BytesWritable
operator|.
name|class
argument_list|,
name|BytesWritable
operator|.
name|class
argument_list|,
name|BytesWritable
operator|.
name|class
argument_list|,
name|BytesWritable
operator|.
name|class
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|nativeHandler
operator|.
name|getInputBuffer
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|InputBuffer
argument_list|(
name|BufferType
operator|.
name|HEAP_BUFFER
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
operator|.
name|getLocal
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|LOCAL_DIR
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCollect ()
specifier|public
name|void
name|testCollect
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|handler
operator|=
operator|new
name|NativeCollectorOnlyHandler
argument_list|(
name|taskContext
argument_list|,
name|nativeHandler
argument_list|,
name|pusher
argument_list|,
name|combiner
argument_list|)
expr_stmt|;
name|handler
operator|.
name|collect
argument_list|(
operator|new
name|BytesWritable
argument_list|()
argument_list|,
operator|new
name|BytesWritable
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|handler
operator|.
name|close
argument_list|()
expr_stmt|;
name|handler
operator|.
name|close
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|pusher
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Matchers
operator|.
name|any
argument_list|(
name|BytesWritable
operator|.
name|class
argument_list|)
argument_list|,
name|Matchers
operator|.
name|any
argument_list|(
name|BytesWritable
operator|.
name|class
argument_list|)
argument_list|,
name|Matchers
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|pusher
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|combiner
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|nativeHandler
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCombiner ()
specifier|public
name|void
name|testGetCombiner
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|handler
operator|=
operator|new
name|NativeCollectorOnlyHandler
argument_list|(
name|taskContext
argument_list|,
name|nativeHandler
argument_list|,
name|pusher
argument_list|,
name|combiner
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|combiner
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
specifier|final
name|ReadWriteBuffer
name|result
init|=
name|handler
operator|.
name|onCall
argument_list|(
name|NativeCollectorOnlyHandler
operator|.
name|GET_COMBINE_HANDLER
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|100L
argument_list|,
name|result
operator|.
name|readLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOnCall ()
specifier|public
name|void
name|testOnCall
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|handler
operator|=
operator|new
name|NativeCollectorOnlyHandler
argument_list|(
name|taskContext
argument_list|,
name|nativeHandler
argument_list|,
name|pusher
argument_list|,
name|combiner
argument_list|)
expr_stmt|;
name|boolean
name|thrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|handler
operator|.
name|onCall
argument_list|(
operator|new
name|Command
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
name|thrown
operator|=
literal|true
expr_stmt|;
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"exception thrown"
argument_list|,
name|thrown
argument_list|)
expr_stmt|;
specifier|final
name|String
name|expectedOutputPath
init|=
name|LOCAL_DIR
operator|+
literal|"/output/file.out"
decl_stmt|;
specifier|final
name|String
name|expectedOutputIndexPath
init|=
name|LOCAL_DIR
operator|+
literal|"/output/file.out.index"
decl_stmt|;
specifier|final
name|String
name|expectedSpillPath
init|=
name|LOCAL_DIR
operator|+
literal|"/output/spill0.out"
decl_stmt|;
specifier|final
name|String
name|outputPath
init|=
name|handler
operator|.
name|onCall
argument_list|(
name|NativeCollectorOnlyHandler
operator|.
name|GET_OUTPUT_PATH
argument_list|,
literal|null
argument_list|)
operator|.
name|readString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutputPath
argument_list|,
name|outputPath
argument_list|)
expr_stmt|;
specifier|final
name|String
name|outputIndexPath
init|=
name|handler
operator|.
name|onCall
argument_list|(
name|NativeCollectorOnlyHandler
operator|.
name|GET_OUTPUT_INDEX_PATH
argument_list|,
literal|null
argument_list|)
operator|.
name|readString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedOutputIndexPath
argument_list|,
name|outputIndexPath
argument_list|)
expr_stmt|;
specifier|final
name|String
name|spillPath
init|=
name|handler
operator|.
name|onCall
argument_list|(
name|NativeCollectorOnlyHandler
operator|.
name|GET_SPILL_PATH
argument_list|,
literal|null
argument_list|)
operator|.
name|readString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedSpillPath
argument_list|,
name|spillPath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

