begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.nativetask.serde
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|serde
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|DefaultSerializer
specifier|public
class|class
name|DefaultSerializer
implements|implements
name|INativeSerializer
argument_list|<
name|Writable
argument_list|>
block|{
DECL|class|ModifiedByteArrayOutputStream
specifier|static
class|class
name|ModifiedByteArrayOutputStream
extends|extends
name|ByteArrayOutputStream
block|{
DECL|method|getBuffer ()
specifier|public
name|byte
index|[]
name|getBuffer
parameter_list|()
block|{
return|return
name|this
operator|.
name|buf
return|;
block|}
block|}
DECL|field|outBuffer
specifier|private
specifier|final
name|ModifiedByteArrayOutputStream
name|outBuffer
init|=
operator|new
name|ModifiedByteArrayOutputStream
argument_list|()
decl_stmt|;
DECL|field|outData
specifier|private
specifier|final
name|DataOutputStream
name|outData
init|=
operator|new
name|DataOutputStream
argument_list|(
name|outBuffer
argument_list|)
decl_stmt|;
DECL|field|buffered
specifier|private
name|Writable
name|buffered
init|=
literal|null
decl_stmt|;
DECL|field|bufferedLength
specifier|private
name|int
name|bufferedLength
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|Override
DECL|method|getLength (Writable w)
specifier|public
name|int
name|getLength
parameter_list|(
name|Writable
name|w
parameter_list|)
throws|throws
name|IOException
block|{
comment|// if (w == buffered) {
comment|// return bufferedLength;
comment|// }
name|buffered
operator|=
literal|null
expr_stmt|;
name|bufferedLength
operator|=
operator|-
literal|1
expr_stmt|;
name|outBuffer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|outData
argument_list|)
expr_stmt|;
name|bufferedLength
operator|=
name|outBuffer
operator|.
name|size
argument_list|()
expr_stmt|;
name|buffered
operator|=
name|w
expr_stmt|;
return|return
name|bufferedLength
return|;
block|}
annotation|@
name|Override
DECL|method|serialize (Writable w, DataOutput out)
specifier|public
name|void
name|serialize
parameter_list|(
name|Writable
name|w
parameter_list|,
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|w
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deserialize (DataInput in, int length, Writable w)
specifier|public
name|void
name|deserialize
parameter_list|(
name|DataInput
name|in
parameter_list|,
name|int
name|length
parameter_list|,
name|Writable
name|w
parameter_list|)
throws|throws
name|IOException
block|{
name|w
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

