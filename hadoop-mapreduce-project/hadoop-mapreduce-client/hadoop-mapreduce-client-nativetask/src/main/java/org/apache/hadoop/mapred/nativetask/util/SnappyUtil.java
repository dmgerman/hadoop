begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.nativetask.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|nativetask
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|SnappyCodec
import|;
end_import

begin_class
DECL|class|SnappyUtil
specifier|public
class|class
name|SnappyUtil
block|{
DECL|method|isNativeSnappyLoaded (Configuration conf)
specifier|public
specifier|static
name|boolean
name|isNativeSnappyLoaded
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|SnappyCodec
operator|.
name|isNativeCodeLoaded
argument_list|()
operator|&&
name|conf
operator|.
name|getBoolean
argument_list|(
name|CommonConfigurationKeys
operator|.
name|IO_NATIVE_LIB_AVAILABLE_KEY
argument_list|,
name|CommonConfigurationKeys
operator|.
name|IO_NATIVE_LIB_AVAILABLE_DEFAULT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

