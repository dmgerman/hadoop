begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|Updater
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|jvm
operator|.
name|JvmMetrics
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|class|LocalJobRunnerMetrics
class|class
name|LocalJobRunnerMetrics
implements|implements
name|Updater
block|{
DECL|field|metricsRecord
specifier|private
specifier|final
name|MetricsRecord
name|metricsRecord
decl_stmt|;
DECL|field|numMapTasksLaunched
specifier|private
name|int
name|numMapTasksLaunched
init|=
literal|0
decl_stmt|;
DECL|field|numMapTasksCompleted
specifier|private
name|int
name|numMapTasksCompleted
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksLaunched
specifier|private
name|int
name|numReduceTasksLaunched
init|=
literal|0
decl_stmt|;
DECL|field|numReduceTasksCompleted
specifier|private
name|int
name|numReduceTasksCompleted
init|=
literal|0
decl_stmt|;
DECL|field|numWaitingMaps
specifier|private
name|int
name|numWaitingMaps
init|=
literal|0
decl_stmt|;
DECL|field|numWaitingReduces
specifier|private
name|int
name|numWaitingReduces
init|=
literal|0
decl_stmt|;
DECL|method|LocalJobRunnerMetrics (JobConf conf)
specifier|public
name|LocalJobRunnerMetrics
parameter_list|(
name|JobConf
name|conf
parameter_list|)
block|{
name|String
name|sessionId
init|=
name|conf
operator|.
name|getSessionId
argument_list|()
decl_stmt|;
comment|// Initiate JVM Metrics
name|JvmMetrics
operator|.
name|init
argument_list|(
literal|"JobTracker"
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
comment|// Create a record for map-reduce metrics
name|MetricsContext
name|context
init|=
name|MetricsUtil
operator|.
name|getContext
argument_list|(
literal|"mapred"
argument_list|)
decl_stmt|;
comment|// record name is jobtracker for compatibility
name|metricsRecord
operator|=
name|MetricsUtil
operator|.
name|createRecord
argument_list|(
name|context
argument_list|,
literal|"jobtracker"
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|setTag
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerUpdater
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
comment|/**    * Since this object is a registered updater, this method will be called    * periodically, e.g. every 5 seconds.    */
DECL|method|doUpdates (MetricsContext unused)
specifier|public
name|void
name|doUpdates
parameter_list|(
name|MetricsContext
name|unused
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"maps_launched"
argument_list|,
name|numMapTasksLaunched
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"maps_completed"
argument_list|,
name|numMapTasksCompleted
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"reduces_launched"
argument_list|,
name|numReduceTasksLaunched
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"reduces_completed"
argument_list|,
name|numReduceTasksCompleted
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"waiting_maps"
argument_list|,
name|numWaitingMaps
argument_list|)
expr_stmt|;
name|metricsRecord
operator|.
name|incrMetric
argument_list|(
literal|"waiting_reduces"
argument_list|,
name|numWaitingReduces
argument_list|)
expr_stmt|;
name|numMapTasksLaunched
operator|=
literal|0
expr_stmt|;
name|numMapTasksCompleted
operator|=
literal|0
expr_stmt|;
name|numReduceTasksLaunched
operator|=
literal|0
expr_stmt|;
name|numReduceTasksCompleted
operator|=
literal|0
expr_stmt|;
name|numWaitingMaps
operator|=
literal|0
expr_stmt|;
name|numWaitingReduces
operator|=
literal|0
expr_stmt|;
block|}
name|metricsRecord
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|launchMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numMapTasksLaunched
expr_stmt|;
name|decWaitingMaps
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|completeMap (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|completeMap
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numMapTasksCompleted
expr_stmt|;
block|}
DECL|method|launchReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|launchReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numReduceTasksLaunched
expr_stmt|;
name|decWaitingReduces
argument_list|(
name|taskAttemptID
operator|.
name|getJobID
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|completeReduce (TaskAttemptID taskAttemptID)
specifier|public
specifier|synchronized
name|void
name|completeReduce
parameter_list|(
name|TaskAttemptID
name|taskAttemptID
parameter_list|)
block|{
operator|++
name|numReduceTasksCompleted
expr_stmt|;
block|}
DECL|method|decWaitingMaps (JobID id, int task)
specifier|private
specifier|synchronized
name|void
name|decWaitingMaps
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingMaps
operator|-=
name|task
expr_stmt|;
block|}
DECL|method|decWaitingReduces (JobID id, int task)
specifier|private
specifier|synchronized
name|void
name|decWaitingReduces
parameter_list|(
name|JobID
name|id
parameter_list|,
name|int
name|task
parameter_list|)
block|{
name|numWaitingReduces
operator|-=
name|task
expr_stmt|;
block|}
block|}
end_class

end_unit

