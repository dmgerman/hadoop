begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.api.protocolrecords.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDiagnosticsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|proto
operator|.
name|MRServiceProtos
operator|.
name|GetDiagnosticsResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|proto
operator|.
name|MRServiceProtos
operator|.
name|GetDiagnosticsResponseProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ProtoBase
import|;
end_import

begin_class
DECL|class|GetDiagnosticsResponsePBImpl
specifier|public
class|class
name|GetDiagnosticsResponsePBImpl
extends|extends
name|ProtoBase
argument_list|<
name|GetDiagnosticsResponseProto
argument_list|>
implements|implements
name|GetDiagnosticsResponse
block|{
DECL|field|proto
name|GetDiagnosticsResponseProto
name|proto
init|=
name|GetDiagnosticsResponseProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|GetDiagnosticsResponseProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|diagnostics
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|diagnostics
init|=
literal|null
decl_stmt|;
DECL|method|GetDiagnosticsResponsePBImpl ()
specifier|public
name|GetDiagnosticsResponsePBImpl
parameter_list|()
block|{
name|builder
operator|=
name|GetDiagnosticsResponseProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|GetDiagnosticsResponsePBImpl (GetDiagnosticsResponseProto proto)
specifier|public
name|GetDiagnosticsResponsePBImpl
parameter_list|(
name|GetDiagnosticsResponseProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|GetDiagnosticsResponseProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|diagnostics
operator|!=
literal|null
condition|)
block|{
name|addDiagnosticsToProto
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|GetDiagnosticsResponseProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDiagnosticsList ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getDiagnosticsList
parameter_list|()
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|diagnostics
return|;
block|}
annotation|@
name|Override
DECL|method|getDiagnostics (int index)
specifier|public
name|String
name|getDiagnostics
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|diagnostics
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDiagnosticsCount ()
specifier|public
name|int
name|getDiagnosticsCount
parameter_list|()
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|diagnostics
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|initDiagnostics ()
specifier|private
name|void
name|initDiagnostics
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|diagnostics
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|GetDiagnosticsResponseProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
name|p
operator|.
name|getDiagnosticsList
argument_list|()
decl_stmt|;
name|this
operator|.
name|diagnostics
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|c
range|:
name|list
control|)
block|{
name|this
operator|.
name|diagnostics
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllDiagnostics (final List<String> diagnostics)
specifier|public
name|void
name|addAllDiagnostics
parameter_list|(
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|diagnostics
parameter_list|)
block|{
if|if
condition|(
name|diagnostics
operator|==
literal|null
condition|)
return|return;
name|initDiagnostics
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostics
operator|.
name|addAll
argument_list|(
name|diagnostics
argument_list|)
expr_stmt|;
block|}
DECL|method|addDiagnosticsToProto ()
specifier|private
name|void
name|addDiagnosticsToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearDiagnostics
argument_list|()
expr_stmt|;
if|if
condition|(
name|diagnostics
operator|==
literal|null
condition|)
return|return;
name|builder
operator|.
name|addAllDiagnostics
argument_list|(
name|diagnostics
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addDiagnostics (String diagnostics)
specifier|public
name|void
name|addDiagnostics
parameter_list|(
name|String
name|diagnostics
parameter_list|)
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostics
operator|.
name|add
argument_list|(
name|diagnostics
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeDiagnostics (int index)
specifier|public
name|void
name|removeDiagnostics
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostics
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearDiagnostics ()
specifier|public
name|void
name|clearDiagnostics
parameter_list|()
block|{
name|initDiagnostics
argument_list|()
expr_stmt|;
name|this
operator|.
name|diagnostics
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

