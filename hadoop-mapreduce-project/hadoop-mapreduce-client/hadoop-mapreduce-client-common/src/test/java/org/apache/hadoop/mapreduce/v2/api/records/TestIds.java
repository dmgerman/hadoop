begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.api.records
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRBuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|BuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestIds
specifier|public
class|class
name|TestIds
block|{
annotation|@
name|Test
DECL|method|testJobId ()
specifier|public
name|void
name|testJobId
parameter_list|()
block|{
name|long
name|ts1
init|=
literal|1315890136000l
decl_stmt|;
name|long
name|ts2
init|=
literal|1315890136001l
decl_stmt|;
name|JobId
name|j1
init|=
name|createJobId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|JobId
name|j2
init|=
name|createJobId
argument_list|(
name|ts1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|JobId
name|j3
init|=
name|createJobId
argument_list|(
name|ts2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|JobId
name|j4
init|=
name|createJobId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|equals
argument_list|(
name|j4
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|j1
operator|.
name|equals
argument_list|(
name|j2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|j1
operator|.
name|equals
argument_list|(
name|j3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|compareTo
argument_list|(
name|j4
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|compareTo
argument_list|(
name|j2
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|compareTo
argument_list|(
name|j3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|hashCode
argument_list|()
operator|==
name|j4
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|j1
operator|.
name|hashCode
argument_list|()
operator|==
name|j2
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|j1
operator|.
name|hashCode
argument_list|()
operator|==
name|j3
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|JobId
name|j5
init|=
name|createJobId
argument_list|(
name|ts1
argument_list|,
literal|231415
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"job_"
operator|+
name|ts1
operator|+
literal|"_0002"
argument_list|,
name|j1
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"job_"
operator|+
name|ts1
operator|+
literal|"_231415"
argument_list|,
name|j5
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTaskId ()
specifier|public
name|void
name|testTaskId
parameter_list|()
block|{
name|long
name|ts1
init|=
literal|1315890136000l
decl_stmt|;
name|long
name|ts2
init|=
literal|1315890136001l
decl_stmt|;
name|TaskId
name|t1
init|=
name|createTaskId
argument_list|(
name|ts1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
decl_stmt|;
name|TaskId
name|t2
init|=
name|createTaskId
argument_list|(
name|ts1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|)
decl_stmt|;
name|TaskId
name|t3
init|=
name|createTaskId
argument_list|(
name|ts1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
decl_stmt|;
name|TaskId
name|t4
init|=
name|createTaskId
argument_list|(
name|ts1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
decl_stmt|;
name|TaskId
name|t5
init|=
name|createTaskId
argument_list|(
name|ts2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t4
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t4
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t2
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t3
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t5
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t4
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t2
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t3
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t5
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|TaskId
name|t6
init|=
name|createTaskId
argument_list|(
name|ts1
argument_list|,
literal|324151
argument_list|,
literal|54643747
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"task_"
operator|+
name|ts1
operator|+
literal|"_0001_m_000002"
argument_list|,
name|t1
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"task_"
operator|+
name|ts1
operator|+
literal|"_324151_r_54643747"
argument_list|,
name|t6
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTaskAttemptId ()
specifier|public
name|void
name|testTaskAttemptId
parameter_list|()
block|{
name|long
name|ts1
init|=
literal|1315890136000l
decl_stmt|;
name|long
name|ts2
init|=
literal|1315890136001l
decl_stmt|;
name|TaskAttemptId
name|t1
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TaskAttemptId
name|t2
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TaskAttemptId
name|t3
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TaskAttemptId
name|t4
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TaskAttemptId
name|t5
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TaskAttemptId
name|t6
init|=
name|createTaskAttemptId
argument_list|(
name|ts1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t6
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|equals
argument_list|(
name|t5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t6
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t2
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t3
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t4
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|compareTo
argument_list|(
name|t5
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t6
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t2
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t3
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|t1
operator|.
name|hashCode
argument_list|()
operator|==
name|t5
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptId
name|t7
init|=
name|createTaskAttemptId
argument_list|(
name|ts2
argument_list|,
literal|5463346
argument_list|,
literal|4326575
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|54375
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attempt_"
operator|+
name|ts1
operator|+
literal|"_0002_m_000002_2"
argument_list|,
name|t1
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"attempt_"
operator|+
name|ts2
operator|+
literal|"_5463346_r_4326575_54375"
argument_list|,
name|t7
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createJobId (long clusterTimestamp, int idInt)
specifier|private
name|JobId
name|createJobId
parameter_list|(
name|long
name|clusterTimestamp
parameter_list|,
name|int
name|idInt
parameter_list|)
block|{
return|return
name|MRBuilderUtils
operator|.
name|newJobId
argument_list|(
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
name|clusterTimestamp
argument_list|,
name|idInt
argument_list|)
argument_list|,
name|idInt
argument_list|)
return|;
block|}
DECL|method|createTaskId (long clusterTimestamp, int jobIdInt, int taskIdInt, TaskType taskType)
specifier|private
name|TaskId
name|createTaskId
parameter_list|(
name|long
name|clusterTimestamp
parameter_list|,
name|int
name|jobIdInt
parameter_list|,
name|int
name|taskIdInt
parameter_list|,
name|TaskType
name|taskType
parameter_list|)
block|{
return|return
name|MRBuilderUtils
operator|.
name|newTaskId
argument_list|(
name|createJobId
argument_list|(
name|clusterTimestamp
argument_list|,
name|jobIdInt
argument_list|)
argument_list|,
name|taskIdInt
argument_list|,
name|taskType
argument_list|)
return|;
block|}
DECL|method|createTaskAttemptId (long clusterTimestamp, int jobIdInt, int taskIdInt, TaskType taskType, int taskAttemptIdInt)
specifier|private
name|TaskAttemptId
name|createTaskAttemptId
parameter_list|(
name|long
name|clusterTimestamp
parameter_list|,
name|int
name|jobIdInt
parameter_list|,
name|int
name|taskIdInt
parameter_list|,
name|TaskType
name|taskType
parameter_list|,
name|int
name|taskAttemptIdInt
parameter_list|)
block|{
return|return
name|MRBuilderUtils
operator|.
name|newTaskAttemptId
argument_list|(
name|createTaskId
argument_list|(
name|clusterTimestamp
argument_list|,
name|jobIdInt
argument_list|,
name|taskIdInt
argument_list|,
name|taskType
argument_list|)
argument_list|,
name|taskAttemptIdInt
argument_list|)
return|;
block|}
block|}
end_class

end_unit

