begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.hs.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|hs
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|jobhistory
operator|.
name|JHAdminConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|TrackingUriPlugin
import|;
end_import

begin_class
DECL|class|MapReduceTrackingUriPlugin
specifier|public
class|class
name|MapReduceTrackingUriPlugin
extends|extends
name|TrackingUriPlugin
implements|implements
name|Configurable
block|{
annotation|@
name|Override
DECL|method|setConf (Configuration conf)
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|Configuration
name|jobConf
init|=
literal|null
decl_stmt|;
comment|// Force loading of mapred configuration.
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
block|{
name|jobConf
operator|=
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jobConf
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|setConf
argument_list|(
name|jobConf
argument_list|)
expr_stmt|;
block|}
comment|/**    * Gets the URI to access the given application on MapReduce history server    * @param id the ID for which a URI is returned    * @return the tracking URI    * @throws URISyntaxException    */
annotation|@
name|Override
DECL|method|getTrackingUri (ApplicationId id)
specifier|public
name|URI
name|getTrackingUri
parameter_list|(
name|ApplicationId
name|id
parameter_list|)
throws|throws
name|URISyntaxException
block|{
name|String
name|jobSuffix
init|=
name|id
operator|.
name|toString
argument_list|()
operator|.
name|replaceFirst
argument_list|(
literal|"^application_"
argument_list|,
literal|"job_"
argument_list|)
decl_stmt|;
name|String
name|historyServerAddress
init|=
name|this
operator|.
name|getConf
argument_list|()
operator|.
name|get
argument_list|(
name|JHAdminConfig
operator|.
name|MR_HISTORY_WEBAPP_ADDRESS
argument_list|)
decl_stmt|;
return|return
operator|new
name|URI
argument_list|(
literal|"http://"
operator|+
name|historyServerAddress
operator|+
literal|"/jobhistory/job/"
operator|+
name|jobSuffix
argument_list|)
return|;
block|}
block|}
end_class

end_unit

