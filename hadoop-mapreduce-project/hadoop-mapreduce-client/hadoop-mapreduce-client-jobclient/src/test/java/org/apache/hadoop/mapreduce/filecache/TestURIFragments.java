begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.filecache
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|filecache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestURIFragments
specifier|public
class|class
name|TestURIFragments
block|{
comment|/**    * Tests {@link DistributedCache#checkURIs(URI[], URI[]).    */
annotation|@
name|Test
DECL|method|testURIs ()
specifier|public
name|void
name|testURIs
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|assertTrue
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// uris with no fragments
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile.txt"
argument_list|)
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive.txt"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt"
argument_list|)
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile.txt"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive.txt"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// conflicts in fragment names
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file"
argument_list|)
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile.txt#cache"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive.txt#cache"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file2"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#cache"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#cache"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// test ignore case
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#FILE"
argument_list|)
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#ARCHIVE"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile.txt#cache"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive.txt#CACHE"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file2"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#ARCHIVE"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#FILE"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#CACHE"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#cache"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
comment|// allowed uri combinations
name|assertTrue
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file2"
argument_list|)
block|}
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
literal|null
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|DistributedCache
operator|.
name|checkURIs
argument_list|(
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile1.txt#file1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheFile2.txt#file2"
argument_list|)
block|}
argument_list|,
operator|new
name|URI
index|[]
block|{
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive1.txt#archive1"
argument_list|)
block|,
operator|new
name|URI
argument_list|(
literal|"file://foo/bar/myCacheArchive2.txt#archive2"
argument_list|)
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

