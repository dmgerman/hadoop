begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|ipc
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Cluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|MRClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailTaskAttemptRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FailTaskAttemptResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetCountersRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetCountersResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDiagnosticsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDiagnosticsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetJobReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetJobReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskAttemptCompletionEventsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskAttemptCompletionEventsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskAttemptReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskAttemptReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskReportsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetTaskReportsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillJobRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillJobResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillTaskAttemptRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillTaskAttemptResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillTaskRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillTaskResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|CounterGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|Counters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|jobhistory
operator|.
name|JHAdminConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ClientRMProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|FinishApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationIdRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationIdResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|SubmitApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnRemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|YarnRemoteExceptionFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|ipc
operator|.
name|YarnRPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestClientRedirect
specifier|public
class|class
name|TestClientRedirect
block|{
static|static
block|{
name|DefaultMetricsSystem
operator|.
name|setMiniClusterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestClientRedirect
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|RMADDRESS
specifier|private
specifier|static
specifier|final
name|String
name|RMADDRESS
init|=
literal|"0.0.0.0:8054"
decl_stmt|;
DECL|field|recordFactory
specifier|private
specifier|static
specifier|final
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|AMHOSTADDRESS
specifier|private
specifier|static
specifier|final
name|String
name|AMHOSTADDRESS
init|=
literal|"0.0.0.0:10020"
decl_stmt|;
DECL|field|HSHOSTADDRESS
specifier|private
specifier|static
specifier|final
name|String
name|HSHOSTADDRESS
init|=
literal|"0.0.0.0:10021"
decl_stmt|;
DECL|field|amContact
specifier|private
specifier|volatile
name|boolean
name|amContact
init|=
literal|false
decl_stmt|;
DECL|field|hsContact
specifier|private
specifier|volatile
name|boolean
name|hsContact
init|=
literal|false
decl_stmt|;
DECL|field|amRunning
specifier|private
specifier|volatile
name|boolean
name|amRunning
init|=
literal|false
decl_stmt|;
DECL|field|amRestarting
specifier|private
specifier|volatile
name|boolean
name|amRestarting
init|=
literal|false
decl_stmt|;
annotation|@
name|Test
DECL|method|testRedirect ()
specifier|public
name|void
name|testRedirect
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRConfig
operator|.
name|FRAMEWORK_NAME
argument_list|,
name|MRConfig
operator|.
name|YARN_FRAMEWORK_NAME
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_ADDRESS
argument_list|,
name|RMADDRESS
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JHAdminConfig
operator|.
name|MR_HISTORY_ADDRESS
argument_list|,
name|HSHOSTADDRESS
argument_list|)
expr_stmt|;
name|RMService
name|rmService
init|=
operator|new
name|RMService
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|rmService
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|rmService
operator|.
name|start
argument_list|()
expr_stmt|;
name|AMService
name|amService
init|=
operator|new
name|AMService
argument_list|()
decl_stmt|;
name|amService
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|amService
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|amRunning
operator|=
literal|true
expr_stmt|;
name|HistoryService
name|historyService
init|=
operator|new
name|HistoryService
argument_list|()
decl_stmt|;
name|historyService
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|historyService
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"services started"
argument_list|)
expr_stmt|;
name|Cluster
name|cluster
init|=
operator|new
name|Cluster
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
name|jobID
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobID
argument_list|(
literal|"201103121733"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Counters
name|counters
init|=
name|cluster
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
operator|.
name|getCounters
argument_list|()
decl_stmt|;
name|validateCounters
argument_list|(
name|counters
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|amContact
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Sleeping for 5 seconds before stop for"
operator|+
literal|" the client socket to not get EOF immediately.."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
comment|//bring down the AM service
name|amService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|amRunning
operator|=
literal|false
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Sleeping for 5 seconds after stop for"
operator|+
literal|" the server to exit cleanly.."
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|amRestarting
operator|=
literal|true
expr_stmt|;
comment|// Same client
comment|//results are returned from fake (not started job)
name|counters
operator|=
name|cluster
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
operator|.
name|getCounters
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|counters
operator|.
name|countCounters
argument_list|()
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|cluster
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskID
name|taskId
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskID
argument_list|(
name|jobID
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|TaskAttemptID
name|tId
init|=
operator|new
name|TaskAttemptID
argument_list|(
name|taskId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|//invoke all methods to check that no exception is thrown
name|job
operator|.
name|killJob
argument_list|()
expr_stmt|;
name|job
operator|.
name|killTask
argument_list|(
name|tId
argument_list|)
expr_stmt|;
name|job
operator|.
name|failTask
argument_list|(
name|tId
argument_list|)
expr_stmt|;
name|job
operator|.
name|getTaskCompletionEvents
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|job
operator|.
name|getStatus
argument_list|()
expr_stmt|;
name|job
operator|.
name|getTaskDiagnostics
argument_list|(
name|tId
argument_list|)
expr_stmt|;
name|job
operator|.
name|getTaskReports
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|)
expr_stmt|;
name|job
operator|.
name|getTrackingURL
argument_list|()
expr_stmt|;
name|amRestarting
operator|=
literal|false
expr_stmt|;
name|amService
operator|=
operator|new
name|AMService
argument_list|()
expr_stmt|;
name|amService
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|amService
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|amRunning
operator|=
literal|true
expr_stmt|;
name|amContact
operator|=
literal|false
expr_stmt|;
comment|//reset
name|counters
operator|=
name|cluster
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
operator|.
name|getCounters
argument_list|()
expr_stmt|;
name|validateCounters
argument_list|(
name|counters
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|amContact
argument_list|)
expr_stmt|;
name|amRunning
operator|=
literal|false
expr_stmt|;
comment|// Same client
name|counters
operator|=
name|cluster
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
operator|.
name|getCounters
argument_list|()
expr_stmt|;
name|validateCounters
argument_list|(
name|counters
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|hsContact
argument_list|)
expr_stmt|;
name|rmService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|historyService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|validateCounters (org.apache.hadoop.mapreduce.Counters counters)
specifier|private
name|void
name|validateCounters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Counters
name|counters
parameter_list|)
block|{
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|CounterGroup
argument_list|>
name|it
init|=
name|counters
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|CounterGroup
name|group
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Group "
operator|+
name|group
operator|.
name|getDisplayName
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Counter
argument_list|>
name|itc
init|=
name|group
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|itc
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Counter is "
operator|+
name|itc
operator|.
name|next
argument_list|()
operator|.
name|getDisplayName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|counters
operator|.
name|countCounters
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|RMService
class|class
name|RMService
extends|extends
name|AbstractService
implements|implements
name|ClientRMProtocol
block|{
DECL|field|clientServiceBindAddress
specifier|private
name|String
name|clientServiceBindAddress
decl_stmt|;
DECL|field|clientBindAddress
name|InetSocketAddress
name|clientBindAddress
decl_stmt|;
DECL|field|server
specifier|private
name|Server
name|server
decl_stmt|;
DECL|method|RMService (String name)
specifier|public
name|RMService
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|clientServiceBindAddress
operator|=
name|RMADDRESS
expr_stmt|;
comment|/*       clientServiceBindAddress = conf.get(           YarnConfiguration.APPSMANAGER_ADDRESS,           YarnConfiguration.DEFAULT_APPSMANAGER_BIND_ADDRESS);           */
name|clientBindAddress
operator|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|clientServiceBindAddress
argument_list|)
expr_stmt|;
name|super
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
comment|// All the clients to appsManager are supposed to be authenticated via
comment|// Kerberos if security is enabled, so no secretManager.
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
name|getConfig
argument_list|()
argument_list|)
decl_stmt|;
name|Configuration
name|clientServerConf
init|=
operator|new
name|Configuration
argument_list|(
name|getConfig
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|server
operator|=
name|rpc
operator|.
name|getServer
argument_list|(
name|ClientRMProtocol
operator|.
name|class
argument_list|,
name|this
argument_list|,
name|clientBindAddress
argument_list|,
name|clientServerConf
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|this
operator|.
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getNewApplicationId (GetNewApplicationIdRequest request)
specifier|public
name|GetNewApplicationIdResponse
name|getNewApplicationId
parameter_list|(
name|GetNewApplicationIdRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getApplicationReport ( GetApplicationReportRequest request)
specifier|public
name|GetApplicationReportResponse
name|getApplicationReport
parameter_list|(
name|GetApplicationReportRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|ApplicationId
name|applicationId
init|=
name|request
operator|.
name|getApplicationId
argument_list|()
decl_stmt|;
name|ApplicationReport
name|application
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ApplicationReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|application
operator|.
name|setApplicationId
argument_list|(
name|applicationId
argument_list|)
expr_stmt|;
if|if
condition|(
name|amRunning
condition|)
block|{
name|application
operator|.
name|setState
argument_list|(
name|ApplicationState
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|amRestarting
condition|)
block|{
name|application
operator|.
name|setState
argument_list|(
name|ApplicationState
operator|.
name|SUBMITTED
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|application
operator|.
name|setState
argument_list|(
name|ApplicationState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|split
init|=
name|AMHOSTADDRESS
operator|.
name|split
argument_list|(
literal|":"
argument_list|)
decl_stmt|;
name|application
operator|.
name|setHost
argument_list|(
name|split
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|application
operator|.
name|setRpcPort
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|split
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|application
operator|.
name|setUser
argument_list|(
literal|"TestClientRedirect-user"
argument_list|)
expr_stmt|;
name|GetApplicationReportResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetApplicationReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setApplicationReport
argument_list|(
name|application
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|submitApplication ( SubmitApplicationRequest request)
specifier|public
name|SubmitApplicationResponse
name|submitApplication
parameter_list|(
name|SubmitApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
throw|throw
name|YarnRemoteExceptionFactoryProvider
operator|.
name|getYarnRemoteExceptionFactory
argument_list|(
literal|null
argument_list|)
operator|.
name|createYarnRemoteException
argument_list|(
literal|"Test"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|finishApplication ( FinishApplicationRequest request)
specifier|public
name|FinishApplicationResponse
name|finishApplication
parameter_list|(
name|FinishApplicationRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterMetrics ( GetClusterMetricsRequest request)
specifier|public
name|GetClusterMetricsResponse
name|getClusterMetrics
parameter_list|(
name|GetClusterMetricsRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getAllApplications ( GetAllApplicationsRequest request)
specifier|public
name|GetAllApplicationsResponse
name|getAllApplications
parameter_list|(
name|GetAllApplicationsRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getClusterNodes ( GetClusterNodesRequest request)
specifier|public
name|GetClusterNodesResponse
name|getClusterNodes
parameter_list|(
name|GetClusterNodesRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueInfo (GetQueueInfoRequest request)
specifier|public
name|GetQueueInfoResponse
name|getQueueInfo
parameter_list|(
name|GetQueueInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getQueueUserAcls ( GetQueueUserAclsInfoRequest request)
specifier|public
name|GetQueueUserAclsInfoResponse
name|getQueueUserAcls
parameter_list|(
name|GetQueueUserAclsInfoRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|class|HistoryService
class|class
name|HistoryService
extends|extends
name|AMService
block|{
DECL|method|HistoryService ()
specifier|public
name|HistoryService
parameter_list|()
block|{
name|super
argument_list|(
name|HSHOSTADDRESS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCounters (GetCountersRequest request)
specifier|public
name|GetCountersResponse
name|getCounters
parameter_list|(
name|GetCountersRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|hsContact
operator|=
literal|true
expr_stmt|;
name|Counters
name|counters
init|=
name|getMyCounters
argument_list|()
decl_stmt|;
name|GetCountersResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetCountersResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setCounters
argument_list|(
name|counters
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
DECL|class|AMService
class|class
name|AMService
extends|extends
name|AbstractService
implements|implements
name|MRClientProtocol
block|{
DECL|field|bindAddress
specifier|private
name|InetSocketAddress
name|bindAddress
decl_stmt|;
DECL|field|server
specifier|private
name|Server
name|server
decl_stmt|;
DECL|field|hostAddress
specifier|private
specifier|final
name|String
name|hostAddress
decl_stmt|;
DECL|method|AMService ()
specifier|public
name|AMService
parameter_list|()
block|{
name|this
argument_list|(
name|AMHOSTADDRESS
argument_list|)
expr_stmt|;
block|}
DECL|method|AMService (String hostAddress)
specifier|public
name|AMService
parameter_list|(
name|String
name|hostAddress
parameter_list|)
block|{
name|super
argument_list|(
literal|"AMService"
argument_list|)
expr_stmt|;
name|this
operator|.
name|hostAddress
operator|=
name|hostAddress
expr_stmt|;
block|}
DECL|method|start (Configuration conf)
specifier|public
name|void
name|start
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|YarnRPC
name|rpc
init|=
name|YarnRPC
operator|.
name|create
argument_list|(
name|conf
argument_list|)
decl_stmt|;
comment|//TODO : use fixed port ??
name|InetSocketAddress
name|address
init|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|hostAddress
argument_list|)
decl_stmt|;
name|InetAddress
name|hostNameResolved
init|=
literal|null
decl_stmt|;
try|try
block|{
name|address
operator|.
name|getAddress
argument_list|()
expr_stmt|;
name|hostNameResolved
operator|=
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnknownHostException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|YarnException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|server
operator|=
name|rpc
operator|.
name|getServer
argument_list|(
name|MRClientProtocol
operator|.
name|class
argument_list|,
name|this
argument_list|,
name|address
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|this
operator|.
name|bindAddress
operator|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|hostNameResolved
operator|.
name|getHostAddress
argument_list|()
operator|+
literal|":"
operator|+
name|server
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|server
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCounters (GetCountersRequest request)
specifier|public
name|GetCountersResponse
name|getCounters
parameter_list|(
name|GetCountersRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|JobId
name|jobID
init|=
name|request
operator|.
name|getJobId
argument_list|()
decl_stmt|;
name|amContact
operator|=
literal|true
expr_stmt|;
name|Counters
name|counters
init|=
name|getMyCounters
argument_list|()
decl_stmt|;
name|GetCountersResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetCountersResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setCounters
argument_list|(
name|counters
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|getJobReport (GetJobReportRequest request)
specifier|public
name|GetJobReportResponse
name|getJobReport
parameter_list|(
name|GetJobReportRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
name|amContact
operator|=
literal|true
expr_stmt|;
name|JobReport
name|jobReport
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|JobReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|jobReport
operator|.
name|setJobId
argument_list|(
name|request
operator|.
name|getJobId
argument_list|()
argument_list|)
expr_stmt|;
name|jobReport
operator|.
name|setJobState
argument_list|(
name|JobState
operator|.
name|RUNNING
argument_list|)
expr_stmt|;
name|jobReport
operator|.
name|setJobName
argument_list|(
literal|"TestClientRedirect-jobname"
argument_list|)
expr_stmt|;
name|jobReport
operator|.
name|setUser
argument_list|(
literal|"TestClientRedirect-user"
argument_list|)
expr_stmt|;
name|jobReport
operator|.
name|setStartTime
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
name|jobReport
operator|.
name|setFinishTime
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|GetJobReportResponse
name|response
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetJobReportResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|response
operator|.
name|setJobReport
argument_list|(
name|jobReport
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
annotation|@
name|Override
DECL|method|getTaskReport (GetTaskReportRequest request)
specifier|public
name|GetTaskReportResponse
name|getTaskReport
parameter_list|(
name|GetTaskReportRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getTaskAttemptReport ( GetTaskAttemptReportRequest request)
specifier|public
name|GetTaskAttemptReportResponse
name|getTaskAttemptReport
parameter_list|(
name|GetTaskAttemptReportRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|GetTaskAttemptCompletionEventsResponse
DECL|method|getTaskAttemptCompletionEvents ( GetTaskAttemptCompletionEventsRequest request)
name|getTaskAttemptCompletionEvents
parameter_list|(
name|GetTaskAttemptCompletionEventsRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|GetTaskReportsResponse
DECL|method|getTaskReports (GetTaskReportsRequest request)
name|getTaskReports
parameter_list|(
name|GetTaskReportsRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|GetDiagnosticsResponse
DECL|method|getDiagnostics (GetDiagnosticsRequest request)
name|getDiagnostics
parameter_list|(
name|GetDiagnosticsRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|killJob (KillJobRequest request)
specifier|public
name|KillJobResponse
name|killJob
parameter_list|(
name|KillJobRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|killTask (KillTaskRequest request)
specifier|public
name|KillTaskResponse
name|killTask
parameter_list|(
name|KillTaskRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|killTaskAttempt ( KillTaskAttemptRequest request)
specifier|public
name|KillTaskAttemptResponse
name|killTaskAttempt
parameter_list|(
name|KillTaskAttemptRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|failTaskAttempt ( FailTaskAttemptRequest request)
specifier|public
name|FailTaskAttemptResponse
name|failTaskAttempt
parameter_list|(
name|FailTaskAttemptRequest
name|request
parameter_list|)
throws|throws
name|YarnRemoteException
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|method|getMyCounters ()
specifier|static
name|Counters
name|getMyCounters
parameter_list|()
block|{
name|Counter
name|counter
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|Counter
operator|.
name|class
argument_list|)
decl_stmt|;
name|counter
operator|.
name|setName
argument_list|(
literal|"Mycounter"
argument_list|)
expr_stmt|;
name|counter
operator|.
name|setDisplayName
argument_list|(
literal|"My counter display name"
argument_list|)
expr_stmt|;
name|counter
operator|.
name|setValue
argument_list|(
literal|12345
argument_list|)
expr_stmt|;
name|CounterGroup
name|group
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|CounterGroup
operator|.
name|class
argument_list|)
decl_stmt|;
name|group
operator|.
name|setName
argument_list|(
literal|"MyGroup"
argument_list|)
expr_stmt|;
name|group
operator|.
name|setDisplayName
argument_list|(
literal|"My groupd display name"
argument_list|)
expr_stmt|;
name|group
operator|.
name|setCounter
argument_list|(
literal|"myCounter"
argument_list|,
name|counter
argument_list|)
expr_stmt|;
name|Counters
name|counters
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|Counters
operator|.
name|class
argument_list|)
decl_stmt|;
name|counters
operator|.
name|setCounterGroup
argument_list|(
literal|"myGroupd"
argument_list|,
name|group
argument_list|)
expr_stmt|;
return|return
name|counters
return|;
block|}
block|}
end_class

end_unit

