begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|jobhistory
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|jobhistory
operator|.
name|TestJobHistoryEventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|MiniMRYarnCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timeline
operator|.
name|TimelineStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestMRTimelineEventHandling
specifier|public
class|class
name|TestMRTimelineEventHandling
block|{
annotation|@
name|Test
DECL|method|testMRTimelineEventHandling ()
specifier|public
name|void
name|testMRTimelineEventHandling
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|MiniMRYarnCluster
name|cluster
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniMRYarnCluster
argument_list|(
name|TestJobHistoryEventHandler
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|start
argument_list|()
expr_stmt|;
name|TimelineStore
name|ts
init|=
name|cluster
operator|.
name|getApplicationHistoryServer
argument_list|()
operator|.
name|getTimelineStore
argument_list|()
decl_stmt|;
name|Path
name|inDir
init|=
operator|new
name|Path
argument_list|(
literal|"input"
argument_list|)
decl_stmt|;
name|Path
name|outDir
init|=
operator|new
name|Path
argument_list|(
literal|"output"
argument_list|)
decl_stmt|;
name|RunningJob
name|job
init|=
name|UtilsForTests
operator|.
name|runJobSucceed
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|SUCCEEDED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|tEntity
init|=
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|job
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
name|tEntity
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|EventType
operator|.
name|AM_STARTED
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|EventType
operator|.
name|JOB_FINISHED
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|=
name|UtilsForTests
operator|.
name|runJobFail
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|FAILED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|entities
operator|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|tEntity
operator|=
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|job
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
name|tEntity
operator|.
name|getEntityType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|EventType
operator|.
name|AM_STARTED
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|EventType
operator|.
name|JOB_FAILED
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testMapreduceJobTimelineServiceEnabled ()
specifier|public
name|void
name|testMapreduceJobTimelineServiceEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|MiniMRYarnCluster
name|cluster
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniMRYarnCluster
argument_list|(
name|TestJobHistoryEventHandler
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|start
argument_list|()
expr_stmt|;
name|TimelineStore
name|ts
init|=
name|cluster
operator|.
name|getApplicationHistoryServer
argument_list|()
operator|.
name|getTimelineStore
argument_list|()
decl_stmt|;
name|Path
name|inDir
init|=
operator|new
name|Path
argument_list|(
literal|"input"
argument_list|)
decl_stmt|;
name|Path
name|outDir
init|=
operator|new
name|Path
argument_list|(
literal|"output"
argument_list|)
decl_stmt|;
name|RunningJob
name|job
init|=
name|UtilsForTests
operator|.
name|runJobSucceed
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|SUCCEEDED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|job
operator|=
name|UtilsForTests
operator|.
name|runJobSucceed
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|SUCCEEDED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|entities
operator|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|tEntity
init|=
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|job
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|YarnConfiguration
operator|.
name|TIMELINE_SERVICE_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|=
literal|null
expr_stmt|;
try|try
block|{
name|cluster
operator|=
operator|new
name|MiniMRYarnCluster
argument_list|(
name|TestJobHistoryEventHandler
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|start
argument_list|()
expr_stmt|;
name|TimelineStore
name|ts
init|=
name|cluster
operator|.
name|getApplicationHistoryServer
argument_list|()
operator|.
name|getTimelineStore
argument_list|()
decl_stmt|;
name|Path
name|inDir
init|=
operator|new
name|Path
argument_list|(
literal|"input"
argument_list|)
decl_stmt|;
name|Path
name|outDir
init|=
operator|new
name|Path
argument_list|(
literal|"output"
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RunningJob
name|job
init|=
name|UtilsForTests
operator|.
name|runJobSucceed
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|SUCCEEDED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntities
name|entities
init|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_EMIT_TIMELINE_DATA
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|job
operator|=
name|UtilsForTests
operator|.
name|runJobSucceed
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|,
name|inDir
argument_list|,
name|outDir
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|JobStatus
operator|.
name|SUCCEEDED
argument_list|,
name|job
operator|.
name|getJobStatus
argument_list|()
operator|.
name|getState
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|entities
operator|=
name|ts
operator|.
name|getEntities
argument_list|(
literal|"MAPREDUCE_JOB"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|TimelineEntity
name|tEntity
init|=
name|entities
operator|.
name|getEntities
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|job
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|tEntity
operator|.
name|getEntityId
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

