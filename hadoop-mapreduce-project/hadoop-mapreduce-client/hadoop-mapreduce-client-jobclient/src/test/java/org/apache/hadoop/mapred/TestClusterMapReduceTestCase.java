begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
annotation|@
name|Ignore
DECL|class|TestClusterMapReduceTestCase
specifier|public
class|class
name|TestClusterMapReduceTestCase
extends|extends
name|ClusterMapReduceTestCase
block|{
DECL|method|_testMapReduce (boolean restart)
specifier|public
name|void
name|_testMapReduce
parameter_list|(
name|boolean
name|restart
parameter_list|)
throws|throws
name|Exception
block|{
name|OutputStream
name|os
init|=
name|getFileSystem
argument_list|()
operator|.
name|create
argument_list|(
operator|new
name|Path
argument_list|(
name|getInputDir
argument_list|()
argument_list|,
literal|"text.txt"
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|wr
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello1\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello2\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello3\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"hello4\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
name|restart
condition|)
block|{
name|stopCluster
argument_list|()
expr_stmt|;
name|startCluster
argument_list|(
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|JobConf
name|conf
init|=
name|createJobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setJobName
argument_list|(
literal|"mr"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInputFormat
argument_list|(
name|TextInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapOutputKeyClass
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapOutputValueClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputFormat
argument_list|(
name|TextOutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyClass
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputValueClass
argument_list|(
name|Text
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapperClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
operator|.
name|IdentityMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReducerClass
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
operator|.
name|IdentityReducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|FileInputFormat
operator|.
name|setInputPaths
argument_list|(
name|conf
argument_list|,
name|getInputDir
argument_list|()
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|conf
argument_list|,
name|getOutputDir
argument_list|()
argument_list|)
expr_stmt|;
name|JobClient
operator|.
name|runJob
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Path
index|[]
name|outputFiles
init|=
name|FileUtil
operator|.
name|stat2Paths
argument_list|(
name|getFileSystem
argument_list|()
operator|.
name|listStatus
argument_list|(
name|getOutputDir
argument_list|()
argument_list|,
operator|new
name|Utils
operator|.
name|OutputFileUtils
operator|.
name|OutputFilesFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|outputFiles
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|InputStream
name|is
init|=
name|getFileSystem
argument_list|()
operator|.
name|open
argument_list|(
name|outputFiles
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|is
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|line
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|int
name|counter
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
name|counter
operator|++
expr_stmt|;
name|assertTrue
argument_list|(
name|line
operator|.
name|contains
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|counter
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testMapReduce ()
specifier|public
name|void
name|testMapReduce
parameter_list|()
throws|throws
name|Exception
block|{
name|_testMapReduce
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|testMapReduceRestarting ()
specifier|public
name|void
name|testMapReduceRestarting
parameter_list|()
throws|throws
name|Exception
block|{
name|_testMapReduce
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|testDFSRestart ()
specifier|public
name|void
name|testDFSRestart
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|file
init|=
operator|new
name|Path
argument_list|(
name|getInputDir
argument_list|()
argument_list|,
literal|"text.txt"
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
name|getFileSystem
argument_list|()
operator|.
name|create
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|Writer
name|wr
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|wr
operator|.
name|close
argument_list|()
expr_stmt|;
name|stopCluster
argument_list|()
expr_stmt|;
name|startCluster
argument_list|(
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|getFileSystem
argument_list|()
operator|.
name|exists
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|stopCluster
argument_list|()
expr_stmt|;
name|startCluster
argument_list|(
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|getFileSystem
argument_list|()
operator|.
name|exists
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testMRConfig ()
specifier|public
name|void
name|testMRConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|conf
init|=
name|createJobConf
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
name|Properties
name|config
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|config
operator|.
name|setProperty
argument_list|(
literal|"xyz"
argument_list|,
literal|"XYZ"
argument_list|)
expr_stmt|;
name|stopCluster
argument_list|()
expr_stmt|;
name|startCluster
argument_list|(
literal|false
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|conf
operator|=
name|createJobConf
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XYZ"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

