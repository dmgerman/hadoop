begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.lib
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_class
DECL|class|TestChain
specifier|public
class|class
name|TestChain
block|{
annotation|@
name|Test
DECL|method|testSetReducerWithReducerByValueAsTrue ()
specifier|public
name|void
name|testSetReducerWithReducerByValueAsTrue
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|JobConf
name|reducerConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|Chain
operator|.
name|setReducer
argument_list|(
name|jobConf
argument_list|,
name|MyReducer
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
literal|true
argument_list|,
name|reducerConf
argument_list|)
expr_stmt|;
name|boolean
name|reduceByValue
init|=
name|reducerConf
operator|.
name|getBoolean
argument_list|(
literal|"chain.reducer.byValue"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reduceByValue
argument_list|)
operator|.
name|withFailMessage
argument_list|(
literal|"It should set chain.reducer.byValue as true in "
operator|+
literal|"reducerConf when we give value as true"
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetReducerWithReducerByValueAsFalse ()
specifier|public
name|void
name|testSetReducerWithReducerByValueAsFalse
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|JobConf
name|reducerConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|Chain
operator|.
name|setReducer
argument_list|(
name|jobConf
argument_list|,
name|MyReducer
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|,
literal|false
argument_list|,
name|reducerConf
argument_list|)
expr_stmt|;
name|boolean
name|reduceByValue
init|=
name|reducerConf
operator|.
name|getBoolean
argument_list|(
literal|"chain.reducer.byValue"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reduceByValue
argument_list|)
operator|.
name|withFailMessage
argument_list|(
literal|"It should set chain.reducer.byValue as false "
operator|+
literal|"in reducerConf when we give value as false"
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
block|}
DECL|interface|MyReducer
interface|interface
name|MyReducer
extends|extends
name|Reducer
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|,
name|Object
argument_list|,
name|Object
argument_list|>
block|{    }
block|}
end_class

end_unit

