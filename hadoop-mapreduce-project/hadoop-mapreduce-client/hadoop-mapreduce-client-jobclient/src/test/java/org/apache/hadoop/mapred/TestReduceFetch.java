begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskCounter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|TestReduceFetch
specifier|public
class|class
name|TestReduceFetch
extends|extends
name|TestReduceFetchFromPartialMem
block|{
comment|/**    * Verify that all segments are read from disk    * @throws Exception might be thrown    */
annotation|@
name|Test
DECL|method|testReduceFromDisk ()
specifier|public
name|void
name|testReduceFromDisk
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|MAP_TASKS
init|=
literal|8
decl_stmt|;
name|JobConf
name|job
init|=
name|mrCluster
operator|.
name|createJobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
name|JobContext
operator|.
name|REDUCE_INPUT_BUFFER_PERCENT
argument_list|,
literal|"0.0"
argument_list|)
expr_stmt|;
name|job
operator|.
name|setNumMapTasks
argument_list|(
name|MAP_TASKS
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|JobConf
operator|.
name|MAPRED_REDUCE_TASK_JAVA_OPTS
argument_list|,
literal|"-Xmx128m"
argument_list|)
expr_stmt|;
name|job
operator|.
name|setLong
argument_list|(
name|JobContext
operator|.
name|REDUCE_MEMORY_TOTAL_BYTES
argument_list|,
literal|128
operator|<<
literal|20
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|JobContext
operator|.
name|SHUFFLE_INPUT_BUFFER_PERCENT
argument_list|,
literal|"0.05"
argument_list|)
expr_stmt|;
name|job
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|IO_SORT_FACTOR
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|job
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|REDUCE_MERGE_INMEM_THRESHOLD
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Counters
name|c
init|=
name|runJob
argument_list|(
name|job
argument_list|)
decl_stmt|;
specifier|final
name|long
name|spill
init|=
name|c
operator|.
name|findCounter
argument_list|(
name|TaskCounter
operator|.
name|SPILLED_RECORDS
argument_list|)
operator|.
name|getCounter
argument_list|()
decl_stmt|;
specifier|final
name|long
name|out
init|=
name|c
operator|.
name|findCounter
argument_list|(
name|TaskCounter
operator|.
name|MAP_OUTPUT_RECORDS
argument_list|)
operator|.
name|getCounter
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Expected all records spilled during reduce ("
operator|+
name|spill
operator|+
literal|")"
argument_list|,
name|spill
operator|>=
literal|2
operator|*
name|out
argument_list|)
expr_stmt|;
comment|// all records spill at map, reduce
name|assertTrue
argument_list|(
literal|"Expected intermediate merges ("
operator|+
name|spill
operator|+
literal|")"
argument_list|,
name|spill
operator|>=
literal|2
operator|*
name|out
operator|+
operator|(
name|out
operator|/
name|MAP_TASKS
operator|)
argument_list|)
expr_stmt|;
comment|// some records hit twice
block|}
comment|/**    * Verify that no segment hits disk.    * @throws Exception might be thrown    */
annotation|@
name|Test
DECL|method|testReduceFromMem ()
specifier|public
name|void
name|testReduceFromMem
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|MAP_TASKS
init|=
literal|3
decl_stmt|;
name|JobConf
name|job
init|=
name|mrCluster
operator|.
name|createJobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
name|JobContext
operator|.
name|REDUCE_INPUT_BUFFER_PERCENT
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|JobContext
operator|.
name|SHUFFLE_INPUT_BUFFER_PERCENT
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|job
operator|.
name|setLong
argument_list|(
name|JobContext
operator|.
name|REDUCE_MEMORY_TOTAL_BYTES
argument_list|,
literal|128
operator|<<
literal|20
argument_list|)
expr_stmt|;
name|job
operator|.
name|setNumMapTasks
argument_list|(
name|MAP_TASKS
argument_list|)
expr_stmt|;
name|Counters
name|c
init|=
name|runJob
argument_list|(
name|job
argument_list|)
decl_stmt|;
specifier|final
name|long
name|spill
init|=
name|c
operator|.
name|findCounter
argument_list|(
name|TaskCounter
operator|.
name|SPILLED_RECORDS
argument_list|)
operator|.
name|getCounter
argument_list|()
decl_stmt|;
specifier|final
name|long
name|out
init|=
name|c
operator|.
name|findCounter
argument_list|(
name|TaskCounter
operator|.
name|MAP_OUTPUT_RECORDS
argument_list|)
operator|.
name|getCounter
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Spilled records: "
operator|+
name|spill
argument_list|,
name|out
argument_list|,
name|spill
argument_list|)
expr_stmt|;
comment|// no reduce spill
block|}
block|}
end_class

end_unit

