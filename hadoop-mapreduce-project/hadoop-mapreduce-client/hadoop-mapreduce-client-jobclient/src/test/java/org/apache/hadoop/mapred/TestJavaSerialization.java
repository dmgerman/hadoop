begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|serializer
operator|.
name|JavaSerializationComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRConfig
import|;
end_import

begin_class
DECL|class|TestJavaSerialization
specifier|public
class|class
name|TestJavaSerialization
extends|extends
name|TestCase
block|{
DECL|field|TEST_ROOT_DIR
specifier|private
specifier|static
name|String
name|TEST_ROOT_DIR
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.build.data"
argument_list|,
literal|"/tmp"
argument_list|)
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|' '
argument_list|,
literal|'+'
argument_list|)
decl_stmt|;
DECL|field|INPUT_DIR
specifier|private
specifier|final
name|Path
name|INPUT_DIR
init|=
operator|new
name|Path
argument_list|(
name|TEST_ROOT_DIR
operator|+
literal|"/input"
argument_list|)
decl_stmt|;
DECL|field|OUTPUT_DIR
specifier|private
specifier|final
name|Path
name|OUTPUT_DIR
init|=
operator|new
name|Path
argument_list|(
name|TEST_ROOT_DIR
operator|+
literal|"/out"
argument_list|)
decl_stmt|;
DECL|field|INPUT_FILE
specifier|private
specifier|final
name|Path
name|INPUT_FILE
init|=
operator|new
name|Path
argument_list|(
name|INPUT_DIR
argument_list|,
literal|"inp"
argument_list|)
decl_stmt|;
DECL|class|WordCountMapper
specifier|static
class|class
name|WordCountMapper
extends|extends
name|MapReduceBase
implements|implements
name|Mapper
argument_list|<
name|LongWritable
argument_list|,
name|Text
argument_list|,
name|String
argument_list|,
name|Long
argument_list|>
block|{
DECL|method|map (LongWritable key, Text value, OutputCollector<String, Long> output, Reporter reporter)
specifier|public
name|void
name|map
parameter_list|(
name|LongWritable
name|key
parameter_list|,
name|Text
name|value
parameter_list|,
name|OutputCollector
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|output
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|StringTokenizer
name|st
init|=
operator|new
name|StringTokenizer
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|token
init|=
name|st
operator|.
name|nextToken
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Invalid token; expected 'a' or 'b', got "
operator|+
name|token
argument_list|,
name|token
operator|.
name|equals
argument_list|(
literal|"a"
argument_list|)
operator|||
name|token
operator|.
name|equals
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|collect
argument_list|(
name|token
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|SumReducer
specifier|static
class|class
name|SumReducer
parameter_list|<
name|K
parameter_list|>
extends|extends
name|MapReduceBase
implements|implements
name|Reducer
argument_list|<
name|K
argument_list|,
name|Long
argument_list|,
name|K
argument_list|,
name|Long
argument_list|>
block|{
DECL|method|reduce (K key, Iterator<Long> values, OutputCollector<K, Long> output, Reporter reporter)
specifier|public
name|void
name|reduce
parameter_list|(
name|K
name|key
parameter_list|,
name|Iterator
argument_list|<
name|Long
argument_list|>
name|values
parameter_list|,
name|OutputCollector
argument_list|<
name|K
argument_list|,
name|Long
argument_list|>
name|output
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|sum
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|values
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|sum
operator|+=
name|values
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
name|output
operator|.
name|collect
argument_list|(
name|key
argument_list|,
name|sum
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|cleanAndCreateInput (FileSystem fs)
specifier|private
name|void
name|cleanAndCreateInput
parameter_list|(
name|FileSystem
name|fs
parameter_list|)
throws|throws
name|IOException
block|{
name|fs
operator|.
name|delete
argument_list|(
name|INPUT_FILE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|OUTPUT_DIR
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|OutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|INPUT_FILE
argument_list|)
decl_stmt|;
name|Writer
name|wr
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|os
argument_list|)
decl_stmt|;
name|wr
operator|.
name|write
argument_list|(
literal|"b a\n"
argument_list|)
expr_stmt|;
name|wr
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testMapReduceJob ()
specifier|public
name|void
name|testMapReduceJob
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|(
name|TestJavaSerialization
operator|.
name|class
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setJobName
argument_list|(
literal|"JavaSerialization"
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|cleanAndCreateInput
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"io.serializations"
argument_list|,
literal|"org.apache.hadoop.io.serializer.JavaSerialization,"
operator|+
literal|"org.apache.hadoop.io.serializer.WritableSerialization"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInputFormat
argument_list|(
name|TextInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputValueClass
argument_list|(
name|Long
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyComparatorClass
argument_list|(
name|JavaSerializationComparator
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapperClass
argument_list|(
name|WordCountMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReducerClass
argument_list|(
name|SumReducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRConfig
operator|.
name|FRAMEWORK_NAME
argument_list|,
name|MRConfig
operator|.
name|LOCAL_FRAMEWORK_NAME
argument_list|)
expr_stmt|;
name|FileInputFormat
operator|.
name|setInputPaths
argument_list|(
name|conf
argument_list|,
name|INPUT_DIR
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|conf
argument_list|,
name|OUTPUT_DIR
argument_list|)
expr_stmt|;
name|String
name|inputFileContents
init|=
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|INPUT_FILE
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Input file contents not as expected; contents are '"
operator|+
name|inputFileContents
operator|+
literal|"', expected \"b a\n\" "
argument_list|,
name|inputFileContents
operator|.
name|equals
argument_list|(
literal|"b a\n"
argument_list|)
argument_list|)
expr_stmt|;
name|JobClient
operator|.
name|runJob
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Path
index|[]
name|outputFiles
init|=
name|FileUtil
operator|.
name|stat2Paths
argument_list|(
name|fs
operator|.
name|listStatus
argument_list|(
name|OUTPUT_DIR
argument_list|,
operator|new
name|Utils
operator|.
name|OutputFileUtils
operator|.
name|OutputFilesFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|outputFiles
operator|.
name|length
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|fs
operator|.
name|open
argument_list|(
name|outputFiles
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|String
name|reduceOutput
init|=
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
operator|.
name|toString
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|String
index|[]
name|lines
init|=
name|reduceOutput
operator|.
name|split
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"line.separator"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected output; received output '"
operator|+
name|reduceOutput
operator|+
literal|"'"
argument_list|,
literal|"a\t1"
argument_list|,
name|lines
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected output; received output '"
operator|+
name|reduceOutput
operator|+
literal|"'"
argument_list|,
literal|"b\t1"
argument_list|,
name|lines
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Reduce output has extra lines; output is '"
operator|+
name|reduceOutput
operator|+
literal|"'"
argument_list|,
literal|2
argument_list|,
name|lines
operator|.
name|length
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/**    * HADOOP-4466:    * This test verifies the JavSerialization impl can write to    * SequenceFiles. by virtue other SequenceFileOutputFormat is not     * coupled to Writable types, if so, the job will fail.    *    */
DECL|method|testWriteToSequencefile ()
specifier|public
name|void
name|testWriteToSequencefile
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|(
name|TestJavaSerialization
operator|.
name|class
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setJobName
argument_list|(
literal|"JavaSerialization"
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|cleanAndCreateInput
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"io.serializations"
argument_list|,
literal|"org.apache.hadoop.io.serializer.JavaSerialization,"
operator|+
literal|"org.apache.hadoop.io.serializer.WritableSerialization"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInputFormat
argument_list|(
name|TextInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// test we can write to sequence files
name|conf
operator|.
name|setOutputFormat
argument_list|(
name|SequenceFileOutputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyClass
argument_list|(
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputValueClass
argument_list|(
name|Long
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setOutputKeyComparatorClass
argument_list|(
name|JavaSerializationComparator
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapperClass
argument_list|(
name|WordCountMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReducerClass
argument_list|(
name|SumReducer
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRConfig
operator|.
name|FRAMEWORK_NAME
argument_list|,
name|MRConfig
operator|.
name|LOCAL_FRAMEWORK_NAME
argument_list|)
expr_stmt|;
name|FileInputFormat
operator|.
name|setInputPaths
argument_list|(
name|conf
argument_list|,
name|INPUT_DIR
argument_list|)
expr_stmt|;
name|FileOutputFormat
operator|.
name|setOutputPath
argument_list|(
name|conf
argument_list|,
name|OUTPUT_DIR
argument_list|)
expr_stmt|;
name|JobClient
operator|.
name|runJob
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Path
index|[]
name|outputFiles
init|=
name|FileUtil
operator|.
name|stat2Paths
argument_list|(
name|fs
operator|.
name|listStatus
argument_list|(
name|OUTPUT_DIR
argument_list|,
operator|new
name|Utils
operator|.
name|OutputFileUtils
operator|.
name|OutputFilesFilter
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|outputFiles
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

