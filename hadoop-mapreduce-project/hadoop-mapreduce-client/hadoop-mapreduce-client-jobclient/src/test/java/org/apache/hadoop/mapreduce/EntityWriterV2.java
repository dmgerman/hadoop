begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|collector
operator|.
name|TimelineCollectorManager
import|;
end_import

begin_comment
comment|/**  * Base mapper for writing entities to the timeline service. Subclasses  * override {@link #writeEntities(Configuration, TimelineCollectorManager,  * org.apache.hadoop.mapreduce.Mapper.Context)} to create and write entities  * to the timeline service.  */
end_comment

begin_class
DECL|class|EntityWriterV2
specifier|abstract
class|class
name|EntityWriterV2
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Mapper
argument_list|<
name|IntWritable
argument_list|,
name|IntWritable
argument_list|,
name|Writable
argument_list|,
name|Writable
argument_list|>
block|{
annotation|@
name|Override
DECL|method|map (IntWritable key, IntWritable val, Context context)
specifier|public
name|void
name|map
parameter_list|(
name|IntWritable
name|key
parameter_list|,
name|IntWritable
name|val
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
comment|// create the timeline collector manager wired with the writer
name|Configuration
name|tlConf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|TimelineCollectorManager
name|manager
init|=
operator|new
name|TimelineCollectorManager
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|manager
operator|.
name|init
argument_list|(
name|tlConf
argument_list|)
expr_stmt|;
name|manager
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
comment|// invoke the method to have the subclass write entities
name|writeEntities
argument_list|(
name|tlConf
argument_list|,
name|manager
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|manager
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|writeEntities (Configuration tlConf, TimelineCollectorManager manager, Context context)
specifier|protected
specifier|abstract
name|void
name|writeEntities
parameter_list|(
name|Configuration
name|tlConf
parameter_list|,
name|TimelineCollectorManager
name|manager
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_class

end_unit

