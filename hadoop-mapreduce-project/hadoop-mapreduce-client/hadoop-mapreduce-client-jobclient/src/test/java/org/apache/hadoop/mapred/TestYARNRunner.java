begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doAnswer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobPriority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
operator|.
name|State
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|MRClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|MRDelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetDelegationTokenResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|SecurityUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|ClientRMProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetAllApplicationsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetApplicationReportResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterMetricsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetClusterNodesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetNewApplicationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|GetQueueUserAclsInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|KillApplicationRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnApplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|YarnClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|security
operator|.
name|client
operator|.
name|RMDelegationTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|BuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Records
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Appender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Layout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|SimpleLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|WriterAppender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_comment
comment|/**  * Test YarnRunner and make sure the client side plugin works  * fine  */
end_comment

begin_class
DECL|class|TestYARNRunner
specifier|public
class|class
name|TestYARNRunner
extends|extends
name|TestCase
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestYARNRunner
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|recordFactory
specifier|private
specifier|static
specifier|final
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|yarnRunner
specifier|private
name|YARNRunner
name|yarnRunner
decl_stmt|;
DECL|field|resourceMgrDelegate
specifier|private
name|ResourceMgrDelegate
name|resourceMgrDelegate
decl_stmt|;
DECL|field|conf
specifier|private
name|YarnConfiguration
name|conf
decl_stmt|;
DECL|field|clientCache
specifier|private
name|ClientCache
name|clientCache
decl_stmt|;
DECL|field|appId
specifier|private
name|ApplicationId
name|appId
decl_stmt|;
DECL|field|jobId
specifier|private
name|JobID
name|jobId
decl_stmt|;
DECL|field|testWorkDir
specifier|private
name|File
name|testWorkDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|TestYARNRunner
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|submissionContext
specifier|private
name|ApplicationSubmissionContext
name|submissionContext
decl_stmt|;
DECL|field|clientDelegate
specifier|private
name|ClientServiceDelegate
name|clientDelegate
decl_stmt|;
DECL|field|failString
specifier|private
specifier|static
specifier|final
name|String
name|failString
init|=
literal|"Rejected job"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|resourceMgrDelegate
operator|=
name|mock
argument_list|(
name|ResourceMgrDelegate
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|YarnConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"mapred/host@REALM"
argument_list|)
expr_stmt|;
name|clientCache
operator|=
operator|new
name|ClientCache
argument_list|(
name|conf
argument_list|,
name|resourceMgrDelegate
argument_list|)
expr_stmt|;
name|clientCache
operator|=
name|spy
argument_list|(
name|clientCache
argument_list|)
expr_stmt|;
name|yarnRunner
operator|=
operator|new
name|YARNRunner
argument_list|(
name|conf
argument_list|,
name|resourceMgrDelegate
argument_list|,
name|clientCache
argument_list|)
expr_stmt|;
name|yarnRunner
operator|=
name|spy
argument_list|(
name|yarnRunner
argument_list|)
expr_stmt|;
name|submissionContext
operator|=
name|mock
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|ApplicationSubmissionContext
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ApplicationSubmissionContext
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
return|return
name|submissionContext
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|yarnRunner
argument_list|)
operator|.
name|createApplicationSubmissionContext
argument_list|(
name|any
argument_list|(
name|Configuration
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Credentials
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|appId
operator|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|jobId
operator|=
name|TypeConverter
operator|.
name|fromYarn
argument_list|(
name|appId
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWorkDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileContext
operator|.
name|getLocalFSFileContext
argument_list|()
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|testWorkDir
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|testWorkDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testJobKill ()
specifier|public
name|void
name|testJobKill
parameter_list|()
throws|throws
name|Exception
block|{
name|clientDelegate
operator|=
name|mock
argument_list|(
name|ClientServiceDelegate
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientDelegate
operator|.
name|getJobStatus
argument_list|(
name|any
argument_list|(
name|JobID
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
argument_list|(
name|jobId
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
name|State
operator|.
name|PREP
argument_list|,
name|JobPriority
operator|.
name|HIGH
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientDelegate
operator|.
name|killJob
argument_list|(
name|any
argument_list|(
name|JobID
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|ClientServiceDelegate
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClientServiceDelegate
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
return|return
name|clientDelegate
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|clientCache
argument_list|)
operator|.
name|getClient
argument_list|(
name|any
argument_list|(
name|JobID
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|yarnRunner
operator|.
name|killJob
argument_list|(
name|jobId
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|resourceMgrDelegate
argument_list|)
operator|.
name|killApplication
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientDelegate
operator|.
name|getJobStatus
argument_list|(
name|any
argument_list|(
name|JobID
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
argument_list|(
name|jobId
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
literal|0f
argument_list|,
name|State
operator|.
name|RUNNING
argument_list|,
name|JobPriority
operator|.
name|HIGH
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|,
literal|"tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|yarnRunner
operator|.
name|killJob
argument_list|(
name|jobId
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clientDelegate
argument_list|)
operator|.
name|killJob
argument_list|(
name|jobId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testJobSubmissionFailure ()
specifier|public
name|void
name|testJobSubmissionFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|resourceMgrDelegate
operator|.
name|submitApplication
argument_list|(
name|any
argument_list|(
name|ApplicationSubmissionContext
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|ApplicationReport
name|report
init|=
name|mock
argument_list|(
name|ApplicationReport
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|report
operator|.
name|getApplicationId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|report
operator|.
name|getDiagnostics
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|failString
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|report
operator|.
name|getYarnApplicationState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|YarnApplicationState
operator|.
name|FAILED
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|resourceMgrDelegate
operator|.
name|getApplicationReport
argument_list|(
name|appId
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|Credentials
name|credentials
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
name|File
name|jobxml
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
literal|"job.xml"
argument_list|)
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|jobxml
argument_list|)
decl_stmt|;
name|conf
operator|.
name|writeXml
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
try|try
block|{
name|yarnRunner
operator|.
name|submitJob
argument_list|(
name|jobId
argument_list|,
name|testWorkDir
operator|.
name|getAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|io
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Logging exception:"
argument_list|,
name|io
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|io
operator|.
name|getLocalizedMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|failString
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testResourceMgrDelegate ()
specifier|public
name|void
name|testResourceMgrDelegate
parameter_list|()
throws|throws
name|Exception
block|{
comment|/* we not want a mock of resource mgr delegate */
specifier|final
name|ClientRMProtocol
name|clientRMProtocol
init|=
name|mock
argument_list|(
name|ClientRMProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|ResourceMgrDelegate
name|delegate
init|=
operator|new
name|ResourceMgrDelegate
argument_list|(
name|conf
argument_list|)
block|{
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|start
parameter_list|()
block|{
name|this
operator|.
name|rmClient
operator|=
name|clientRMProtocol
expr_stmt|;
block|}
block|}
decl_stmt|;
comment|/* make sure kill calls finish application master */
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|forceKillApplication
argument_list|(
name|any
argument_list|(
name|KillApplicationRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|killApplication
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|forceKillApplication
argument_list|(
name|any
argument_list|(
name|KillApplicationRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|/* make sure getalljobs calls get all applications */
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getAllApplications
argument_list|(
name|any
argument_list|(
name|GetAllApplicationsRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetAllApplicationsResponse
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getAllJobs
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getAllApplications
argument_list|(
name|any
argument_list|(
name|GetAllApplicationsRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|/* make sure getapplication report is called */
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getApplicationReport
argument_list|(
name|any
argument_list|(
name|GetApplicationReportRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetApplicationReportResponse
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getApplicationReport
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getApplicationReport
argument_list|(
name|any
argument_list|(
name|GetApplicationReportRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|/* make sure metrics is called */
name|GetClusterMetricsResponse
name|clusterMetricsResponse
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetClusterMetricsResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|clusterMetricsResponse
operator|.
name|setClusterMetrics
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|YarnClusterMetrics
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getClusterMetrics
argument_list|(
name|any
argument_list|(
name|GetClusterMetricsRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|clusterMetricsResponse
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getClusterMetrics
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getClusterMetrics
argument_list|(
name|any
argument_list|(
name|GetClusterMetricsRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getClusterNodes
argument_list|(
name|any
argument_list|(
name|GetClusterNodesRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetClusterNodesResponse
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getActiveTrackers
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getClusterNodes
argument_list|(
name|any
argument_list|(
name|GetClusterNodesRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|GetNewApplicationResponse
name|newAppResponse
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetNewApplicationResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|newAppResponse
operator|.
name|setApplicationId
argument_list|(
name|appId
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getNewApplication
argument_list|(
name|any
argument_list|(
name|GetNewApplicationRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newAppResponse
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getNewJobID
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getNewApplication
argument_list|(
name|any
argument_list|(
name|GetNewApplicationRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|GetQueueInfoResponse
name|queueInfoResponse
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetQueueInfoResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|queueInfoResponse
operator|.
name|setQueueInfo
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|QueueInfo
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getQueueInfo
argument_list|(
name|any
argument_list|(
name|GetQueueInfoRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|queueInfoResponse
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getQueues
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getQueueInfo
argument_list|(
name|any
argument_list|(
name|GetQueueInfoRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|GetQueueUserAclsInfoResponse
name|aclResponse
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetQueueUserAclsInfoResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|clientRMProtocol
operator|.
name|getQueueUserAcls
argument_list|(
name|any
argument_list|(
name|GetQueueUserAclsInfoRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|aclResponse
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|getQueueAclsForCurrentUser
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|clientRMProtocol
argument_list|)
operator|.
name|getQueueUserAcls
argument_list|(
name|any
argument_list|(
name|GetQueueUserAclsInfoRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testGetHSDelegationToken ()
specifier|public
name|void
name|testGetHSDelegationToken
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
comment|// Setup mock service
name|InetSocketAddress
name|mockRmAddress
init|=
operator|new
name|InetSocketAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|4444
argument_list|)
decl_stmt|;
name|Text
name|rmTokenSevice
init|=
name|SecurityUtil
operator|.
name|buildTokenService
argument_list|(
name|mockRmAddress
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|mockHsAddress
init|=
operator|new
name|InetSocketAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|9200
argument_list|)
decl_stmt|;
name|Text
name|hsTokenSevice
init|=
name|SecurityUtil
operator|.
name|buildTokenService
argument_list|(
name|mockHsAddress
argument_list|)
decl_stmt|;
comment|// Setup mock rm token
name|RMDelegationTokenIdentifier
name|tokenIdentifier
init|=
operator|new
name|RMDelegationTokenIdentifier
argument_list|(
operator|new
name|Text
argument_list|(
literal|"owner"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"renewer"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"real"
argument_list|)
argument_list|)
decl_stmt|;
name|Token
argument_list|<
name|RMDelegationTokenIdentifier
argument_list|>
name|token
init|=
operator|new
name|Token
argument_list|<
name|RMDelegationTokenIdentifier
argument_list|>
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
name|tokenIdentifier
operator|.
name|getKind
argument_list|()
argument_list|,
name|rmTokenSevice
argument_list|)
decl_stmt|;
name|token
operator|.
name|setKind
argument_list|(
name|RMDelegationTokenIdentifier
operator|.
name|KIND_NAME
argument_list|)
expr_stmt|;
comment|// Setup mock history token
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
name|historyToken
init|=
name|BuilderUtils
operator|.
name|newDelegationToken
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
name|MRDelegationTokenIdentifier
operator|.
name|KIND_NAME
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|byte
index|[
literal|0
index|]
argument_list|,
name|hsTokenSevice
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|GetDelegationTokenResponse
name|getDtResponse
init|=
name|Records
operator|.
name|newRecord
argument_list|(
name|GetDelegationTokenResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|getDtResponse
operator|.
name|setDelegationToken
argument_list|(
name|historyToken
argument_list|)
expr_stmt|;
comment|// mock services
name|MRClientProtocol
name|mockHsProxy
init|=
name|mock
argument_list|(
name|MRClientProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|mockHsAddress
argument_list|)
operator|.
name|when
argument_list|(
name|mockHsProxy
argument_list|)
operator|.
name|getConnectAddress
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|getDtResponse
argument_list|)
operator|.
name|when
argument_list|(
name|mockHsProxy
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ResourceMgrDelegate
name|rmDelegate
init|=
name|mock
argument_list|(
name|ResourceMgrDelegate
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|mockRmAddress
argument_list|)
operator|.
name|when
argument_list|(
name|rmDelegate
argument_list|)
operator|.
name|getConnectAddress
argument_list|()
expr_stmt|;
name|ClientCache
name|clientCache
init|=
name|mock
argument_list|(
name|ClientCache
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|mockHsProxy
argument_list|)
operator|.
name|when
argument_list|(
name|clientCache
argument_list|)
operator|.
name|getInitializedHSProxy
argument_list|()
expr_stmt|;
name|Credentials
name|creds
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
name|YARNRunner
name|yarnRunner
init|=
operator|new
name|YARNRunner
argument_list|(
name|conf
argument_list|,
name|rmDelegate
argument_list|,
name|clientCache
argument_list|)
decl_stmt|;
comment|// No HS token if no RM token
name|yarnRunner
operator|.
name|addHistoyToken
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHsProxy
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// No HS token if RM token, but secirity disabled.
name|creds
operator|.
name|addToken
argument_list|(
operator|new
name|Text
argument_list|(
literal|"rmdt"
argument_list|)
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|yarnRunner
operator|.
name|addHistoyToken
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHsProxy
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CommonConfigurationKeys
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|,
literal|"kerberos"
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|creds
operator|=
operator|new
name|Credentials
argument_list|()
expr_stmt|;
comment|// No HS token if no RM token, security enabled
name|yarnRunner
operator|.
name|addHistoyToken
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHsProxy
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// HS token if RM token present, security enabled
name|creds
operator|.
name|addToken
argument_list|(
operator|new
name|Text
argument_list|(
literal|"rmdt"
argument_list|)
argument_list|,
name|token
argument_list|)
expr_stmt|;
name|yarnRunner
operator|.
name|addHistoyToken
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHsProxy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// No additional call to get HS token if RM and HS token present
name|yarnRunner
operator|.
name|addHistoyToken
argument_list|(
name|creds
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHsProxy
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|// Back to defaults.
name|UserGroupInformation
operator|.
name|setConfiguration
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testHistoryServerToken ()
specifier|public
name|void
name|testHistoryServerToken
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Set the master principal in the config
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|RM_PRINCIPAL
argument_list|,
literal|"foo@LOCAL"
argument_list|)
expr_stmt|;
specifier|final
name|String
name|masterPrincipal
init|=
name|Master
operator|.
name|getMasterPrincipal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|MRClientProtocol
name|hsProxy
init|=
name|mock
argument_list|(
name|MRClientProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|hsProxy
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|GetDelegationTokenResponse
argument_list|>
argument_list|()
block|{
specifier|public
name|GetDelegationTokenResponse
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
block|{
name|GetDelegationTokenRequest
name|request
init|=
operator|(
name|GetDelegationTokenRequest
operator|)
name|invocation
operator|.
name|getArguments
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
comment|// check that the renewer matches the cluster's RM principal
name|assertEquals
argument_list|(
name|masterPrincipal
argument_list|,
name|request
operator|.
name|getRenewer
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
name|token
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Token
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// none of these fields matter for the sake of the test
name|token
operator|.
name|setKind
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|token
operator|.
name|setService
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|token
operator|.
name|setIdentifier
argument_list|(
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|token
operator|.
name|setPassword
argument_list|(
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|GetDelegationTokenResponse
name|tokenResponse
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|GetDelegationTokenResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|tokenResponse
operator|.
name|setDelegationToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
return|return
name|tokenResponse
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
literal|"someone"
argument_list|)
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|run
parameter_list|()
throws|throws
name|Exception
block|{
name|yarnRunner
operator|=
operator|new
name|YARNRunner
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|yarnRunner
operator|.
name|getDelegationTokenFromHS
argument_list|(
name|hsProxy
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|hsProxy
argument_list|)
operator|.
name|getDelegationToken
argument_list|(
name|any
argument_list|(
name|GetDelegationTokenRequest
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testAMAdminCommandOpts ()
specifier|public
name|void
name|testAMAdminCommandOpts
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_ADMIN_COMMAND_OPTS
argument_list|,
literal|"-Djava.net.preferIPv4Stack=true"
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_COMMAND_OPTS
argument_list|,
literal|"-Xmx1024m"
argument_list|)
expr_stmt|;
name|YARNRunner
name|yarnRunner
init|=
operator|new
name|YARNRunner
argument_list|(
name|jobConf
argument_list|)
decl_stmt|;
name|File
name|jobxml
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_CONF_FILE
argument_list|)
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|jobxml
argument_list|)
decl_stmt|;
name|conf
operator|.
name|writeXml
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|jobsplit
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_SPLIT
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|jobsplit
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|jobsplitmetainfo
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_SPLIT_METAINFO
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|jobsplitmetainfo
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|appTokens
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|APPLICATION_TOKENS_FILE
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|appTokens
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|ApplicationSubmissionContext
name|submissionContext
init|=
name|yarnRunner
operator|.
name|createApplicationSubmissionContext
argument_list|(
name|jobConf
argument_list|,
name|testWorkDir
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|Credentials
argument_list|()
argument_list|)
decl_stmt|;
name|ContainerLaunchContext
name|containerSpec
init|=
name|submissionContext
operator|.
name|getAMContainerSpec
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|commands
init|=
name|containerSpec
operator|.
name|getCommands
argument_list|()
decl_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
name|int
name|adminIndex
init|=
literal|0
decl_stmt|;
name|int
name|adminPos
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|userIndex
init|=
literal|0
decl_stmt|;
name|int
name|userPos
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|String
name|command
range|:
name|commands
control|)
block|{
if|if
condition|(
name|command
operator|!=
literal|null
condition|)
block|{
name|adminPos
operator|=
name|command
operator|.
name|indexOf
argument_list|(
literal|"-Djava.net.preferIPv4Stack=true"
argument_list|)
expr_stmt|;
if|if
condition|(
name|adminPos
operator|>=
literal|0
condition|)
name|adminIndex
operator|=
name|index
expr_stmt|;
name|userPos
operator|=
name|command
operator|.
name|indexOf
argument_list|(
literal|"-Xmx1024m"
argument_list|)
expr_stmt|;
if|if
condition|(
name|userPos
operator|>=
literal|0
condition|)
name|userIndex
operator|=
name|index
expr_stmt|;
block|}
name|index
operator|++
expr_stmt|;
block|}
comment|// Check both admin java opts and user java opts are in the commands
name|assertTrue
argument_list|(
literal|"AM admin command opts not in the commands."
argument_list|,
name|adminPos
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"AM user command opts not in the commands."
argument_list|,
name|userPos
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Check the admin java opts is before user java opts in the commands
if|if
condition|(
name|adminIndex
operator|==
name|userIndex
condition|)
block|{
name|assertTrue
argument_list|(
literal|"AM admin command opts is after user command opts."
argument_list|,
name|adminPos
operator|<
name|userPos
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertTrue
argument_list|(
literal|"AM admin command opts is after user command opts."
argument_list|,
name|adminIndex
operator|<
name|userIndex
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
DECL|method|testWarnCommandOpts ()
specifier|public
name|void
name|testWarnCommandOpts
parameter_list|()
throws|throws
name|Exception
block|{
name|Logger
name|logger
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|YARNRunner
operator|.
name|class
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bout
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|Layout
name|layout
init|=
operator|new
name|SimpleLayout
argument_list|()
decl_stmt|;
name|Appender
name|appender
init|=
operator|new
name|WriterAppender
argument_list|(
name|layout
argument_list|,
name|bout
argument_list|)
decl_stmt|;
name|logger
operator|.
name|addAppender
argument_list|(
name|appender
argument_list|)
expr_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_ADMIN_COMMAND_OPTS
argument_list|,
literal|"-Djava.net.preferIPv4Stack=true -Djava.library.path=foo"
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_COMMAND_OPTS
argument_list|,
literal|"-Xmx1024m -Djava.library.path=bar"
argument_list|)
expr_stmt|;
name|YARNRunner
name|yarnRunner
init|=
operator|new
name|YARNRunner
argument_list|(
name|jobConf
argument_list|)
decl_stmt|;
name|File
name|jobxml
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_CONF_FILE
argument_list|)
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|jobxml
argument_list|)
decl_stmt|;
name|conf
operator|.
name|writeXml
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|jobsplit
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_SPLIT
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|jobsplit
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|jobsplitmetainfo
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|JOB_SPLIT_METAINFO
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|jobsplitmetainfo
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|appTokens
init|=
operator|new
name|File
argument_list|(
name|testWorkDir
argument_list|,
name|MRJobConfig
operator|.
name|APPLICATION_TOKENS_FILE
argument_list|)
decl_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|appTokens
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
name|ApplicationSubmissionContext
name|submissionContext
init|=
name|yarnRunner
operator|.
name|createApplicationSubmissionContext
argument_list|(
name|jobConf
argument_list|,
name|testWorkDir
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|Credentials
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|logMsg
init|=
name|bout
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|logMsg
operator|.
name|contains
argument_list|(
literal|"WARN - Usage of -Djava.library.path in "
operator|+
literal|"yarn.app.mapreduce.am.admin-command-opts can cause programs to no "
operator|+
literal|"longer function if hadoop native libraries are used. These values "
operator|+
literal|"should be set as part of the LD_LIBRARY_PATH in the app master JVM "
operator|+
literal|"env using yarn.app.mapreduce.am.admin.user.env config settings."
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|logMsg
operator|.
name|contains
argument_list|(
literal|"WARN - Usage of -Djava.library.path in "
operator|+
literal|"yarn.app.mapreduce.am.command-opts can cause programs to no longer "
operator|+
literal|"function if hadoop native libraries are used. These values should "
operator|+
literal|"be set as part of the LD_LIBRARY_PATH in the app master JVM env "
operator|+
literal|"using yarn.app.mapreduce.am.env config settings."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

