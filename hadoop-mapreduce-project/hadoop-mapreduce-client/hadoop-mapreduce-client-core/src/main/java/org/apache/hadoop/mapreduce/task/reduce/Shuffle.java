begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.task.reduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|reduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocalDirAllocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Counters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MapOutputFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RawKeyValueIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Task
operator|.
name|CombineOutputCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskUmbilicalProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progress
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
DECL|class|Shuffle
specifier|public
class|class
name|Shuffle
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
implements|implements
name|ExceptionReporter
block|{
DECL|field|PROGRESS_FREQUENCY
specifier|private
specifier|static
specifier|final
name|int
name|PROGRESS_FREQUENCY
init|=
literal|2000
decl_stmt|;
DECL|field|MAX_EVENTS_TO_FETCH
specifier|private
specifier|static
specifier|final
name|int
name|MAX_EVENTS_TO_FETCH
init|=
literal|10000
decl_stmt|;
DECL|field|MIN_EVENTS_TO_FETCH
specifier|private
specifier|static
specifier|final
name|int
name|MIN_EVENTS_TO_FETCH
init|=
literal|100
decl_stmt|;
DECL|field|MAX_RPC_OUTSTANDING_EVENTS
specifier|private
specifier|static
specifier|final
name|int
name|MAX_RPC_OUTSTANDING_EVENTS
init|=
literal|3000000
decl_stmt|;
DECL|field|reduceId
specifier|private
specifier|final
name|TaskAttemptID
name|reduceId
decl_stmt|;
DECL|field|jobConf
specifier|private
specifier|final
name|JobConf
name|jobConf
decl_stmt|;
DECL|field|reporter
specifier|private
specifier|final
name|Reporter
name|reporter
decl_stmt|;
DECL|field|metrics
specifier|private
specifier|final
name|ShuffleClientMetrics
name|metrics
decl_stmt|;
DECL|field|umbilical
specifier|private
specifier|final
name|TaskUmbilicalProtocol
name|umbilical
decl_stmt|;
DECL|field|scheduler
specifier|private
specifier|final
name|ShuffleScheduler
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|scheduler
decl_stmt|;
DECL|field|merger
specifier|private
specifier|final
name|MergeManager
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|merger
decl_stmt|;
DECL|field|throwable
specifier|private
name|Throwable
name|throwable
init|=
literal|null
decl_stmt|;
DECL|field|throwingThreadName
specifier|private
name|String
name|throwingThreadName
init|=
literal|null
decl_stmt|;
DECL|field|copyPhase
specifier|private
specifier|final
name|Progress
name|copyPhase
decl_stmt|;
DECL|field|taskStatus
specifier|private
specifier|final
name|TaskStatus
name|taskStatus
decl_stmt|;
DECL|field|reduceTask
specifier|private
specifier|final
name|Task
name|reduceTask
decl_stmt|;
comment|//Used for status updates
DECL|method|Shuffle (TaskAttemptID reduceId, JobConf jobConf, FileSystem localFS, TaskUmbilicalProtocol umbilical, LocalDirAllocator localDirAllocator, Reporter reporter, CompressionCodec codec, Class<? extends Reducer> combinerClass, CombineOutputCollector<K,V> combineCollector, Counters.Counter spilledRecordsCounter, Counters.Counter reduceCombineInputCounter, Counters.Counter shuffledMapsCounter, Counters.Counter reduceShuffleBytes, Counters.Counter failedShuffleCounter, Counters.Counter mergedMapOutputsCounter, TaskStatus status, Progress copyPhase, Progress mergePhase, Task reduceTask, MapOutputFile mapOutputFile)
specifier|public
name|Shuffle
parameter_list|(
name|TaskAttemptID
name|reduceId
parameter_list|,
name|JobConf
name|jobConf
parameter_list|,
name|FileSystem
name|localFS
parameter_list|,
name|TaskUmbilicalProtocol
name|umbilical
parameter_list|,
name|LocalDirAllocator
name|localDirAllocator
parameter_list|,
name|Reporter
name|reporter
parameter_list|,
name|CompressionCodec
name|codec
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|Reducer
argument_list|>
name|combinerClass
parameter_list|,
name|CombineOutputCollector
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|combineCollector
parameter_list|,
name|Counters
operator|.
name|Counter
name|spilledRecordsCounter
parameter_list|,
name|Counters
operator|.
name|Counter
name|reduceCombineInputCounter
parameter_list|,
name|Counters
operator|.
name|Counter
name|shuffledMapsCounter
parameter_list|,
name|Counters
operator|.
name|Counter
name|reduceShuffleBytes
parameter_list|,
name|Counters
operator|.
name|Counter
name|failedShuffleCounter
parameter_list|,
name|Counters
operator|.
name|Counter
name|mergedMapOutputsCounter
parameter_list|,
name|TaskStatus
name|status
parameter_list|,
name|Progress
name|copyPhase
parameter_list|,
name|Progress
name|mergePhase
parameter_list|,
name|Task
name|reduceTask
parameter_list|,
name|MapOutputFile
name|mapOutputFile
parameter_list|)
block|{
name|this
operator|.
name|reduceId
operator|=
name|reduceId
expr_stmt|;
name|this
operator|.
name|jobConf
operator|=
name|jobConf
expr_stmt|;
name|this
operator|.
name|umbilical
operator|=
name|umbilical
expr_stmt|;
name|this
operator|.
name|reporter
operator|=
name|reporter
expr_stmt|;
name|this
operator|.
name|metrics
operator|=
operator|new
name|ShuffleClientMetrics
argument_list|(
name|reduceId
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|this
operator|.
name|copyPhase
operator|=
name|copyPhase
expr_stmt|;
name|this
operator|.
name|taskStatus
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|reduceTask
operator|=
name|reduceTask
expr_stmt|;
name|scheduler
operator|=
operator|new
name|ShuffleScheduler
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|jobConf
argument_list|,
name|status
argument_list|,
name|this
argument_list|,
name|copyPhase
argument_list|,
name|shuffledMapsCounter
argument_list|,
name|reduceShuffleBytes
argument_list|,
name|failedShuffleCounter
argument_list|)
expr_stmt|;
name|merger
operator|=
operator|new
name|MergeManager
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|reduceId
argument_list|,
name|jobConf
argument_list|,
name|localFS
argument_list|,
name|localDirAllocator
argument_list|,
name|reporter
argument_list|,
name|codec
argument_list|,
name|combinerClass
argument_list|,
name|combineCollector
argument_list|,
name|spilledRecordsCounter
argument_list|,
name|reduceCombineInputCounter
argument_list|,
name|mergedMapOutputsCounter
argument_list|,
name|this
argument_list|,
name|mergePhase
argument_list|,
name|mapOutputFile
argument_list|)
expr_stmt|;
block|}
DECL|method|run ()
specifier|public
name|RawKeyValueIterator
name|run
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
comment|// Scale the maximum events we fetch per RPC call to mitigate OOM issues
comment|// on the ApplicationMaster when a thundering herd of reducers fetch events
comment|// TODO: This should not be necessary after HADOOP-8942
name|int
name|eventsPerReducer
init|=
name|Math
operator|.
name|max
argument_list|(
name|MIN_EVENTS_TO_FETCH
argument_list|,
name|MAX_RPC_OUTSTANDING_EVENTS
operator|/
name|jobConf
operator|.
name|getNumReduceTasks
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|maxEventsToFetch
init|=
name|Math
operator|.
name|min
argument_list|(
name|MAX_EVENTS_TO_FETCH
argument_list|,
name|eventsPerReducer
argument_list|)
decl_stmt|;
comment|// Start the map-completion events fetcher thread
specifier|final
name|EventFetcher
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|eventFetcher
init|=
operator|new
name|EventFetcher
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|reduceId
argument_list|,
name|umbilical
argument_list|,
name|scheduler
argument_list|,
name|this
argument_list|,
name|maxEventsToFetch
argument_list|)
decl_stmt|;
name|eventFetcher
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Start the map-output fetcher threads
specifier|final
name|int
name|numFetchers
init|=
name|jobConf
operator|.
name|getInt
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_PARALLEL_COPIES
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|Fetcher
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
index|[]
name|fetchers
init|=
operator|new
name|Fetcher
index|[
name|numFetchers
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFetchers
condition|;
operator|++
name|i
control|)
block|{
name|fetchers
index|[
name|i
index|]
operator|=
operator|new
name|Fetcher
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|jobConf
argument_list|,
name|reduceId
argument_list|,
name|scheduler
argument_list|,
name|merger
argument_list|,
name|reporter
argument_list|,
name|metrics
argument_list|,
name|this
argument_list|,
name|reduceTask
operator|.
name|getJobTokenSecret
argument_list|()
argument_list|)
expr_stmt|;
name|fetchers
index|[
name|i
index|]
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|// Wait for shuffle to complete successfully
while|while
condition|(
operator|!
name|scheduler
operator|.
name|waitUntilDone
argument_list|(
name|PROGRESS_FREQUENCY
argument_list|)
condition|)
block|{
name|reporter
operator|.
name|progress
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
if|if
condition|(
name|throwable
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|ShuffleError
argument_list|(
literal|"error in shuffle in "
operator|+
name|throwingThreadName
argument_list|,
name|throwable
argument_list|)
throw|;
block|}
block|}
block|}
comment|// Stop the event-fetcher thread
name|eventFetcher
operator|.
name|shutDown
argument_list|()
expr_stmt|;
comment|// Stop the map-output fetcher threads
for|for
control|(
name|Fetcher
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|fetcher
range|:
name|fetchers
control|)
block|{
name|fetcher
operator|.
name|shutDown
argument_list|()
expr_stmt|;
block|}
comment|// stop the scheduler
name|scheduler
operator|.
name|close
argument_list|()
expr_stmt|;
name|copyPhase
operator|.
name|complete
argument_list|()
expr_stmt|;
comment|// copy is already complete
name|taskStatus
operator|.
name|setPhase
argument_list|(
name|TaskStatus
operator|.
name|Phase
operator|.
name|SORT
argument_list|)
expr_stmt|;
name|reduceTask
operator|.
name|statusUpdate
argument_list|(
name|umbilical
argument_list|)
expr_stmt|;
comment|// Finish the on-going merges...
name|RawKeyValueIterator
name|kvIter
init|=
literal|null
decl_stmt|;
try|try
block|{
name|kvIter
operator|=
name|merger
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ShuffleError
argument_list|(
literal|"Error while doing final merge "
argument_list|,
name|e
argument_list|)
throw|;
block|}
comment|// Sanity check
synchronized|synchronized
init|(
name|this
init|)
block|{
if|if
condition|(
name|throwable
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|ShuffleError
argument_list|(
literal|"error in shuffle in "
operator|+
name|throwingThreadName
argument_list|,
name|throwable
argument_list|)
throw|;
block|}
block|}
return|return
name|kvIter
return|;
block|}
DECL|method|reportException (Throwable t)
specifier|public
specifier|synchronized
name|void
name|reportException
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|throwable
operator|==
literal|null
condition|)
block|{
name|throwable
operator|=
name|t
expr_stmt|;
name|throwingThreadName
operator|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
comment|// Notify the scheduler so that the reporting thread finds the
comment|// exception immediately.
synchronized|synchronized
init|(
name|scheduler
init|)
block|{
name|scheduler
operator|.
name|notifyAll
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|class|ShuffleError
specifier|public
specifier|static
class|class
name|ShuffleError
extends|extends
name|IOException
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5753909320586607881L
decl_stmt|;
DECL|method|ShuffleError (String msg, Throwable t)
name|ShuffleError
parameter_list|(
name|String
name|msg
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|super
argument_list|(
name|msg
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

