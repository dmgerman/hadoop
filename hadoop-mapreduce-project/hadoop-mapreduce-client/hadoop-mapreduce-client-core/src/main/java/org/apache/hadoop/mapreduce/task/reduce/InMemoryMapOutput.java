begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.task.reduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|reduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BoundedByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|CodecPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|Decompressor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|IFileInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|InMemoryMapOutput
class|class
name|InMemoryMapOutput
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
extends|extends
name|MapOutput
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|InMemoryMapOutput
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|merger
specifier|private
specifier|final
name|MergeManagerImpl
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|merger
decl_stmt|;
DECL|field|memory
specifier|private
specifier|final
name|byte
index|[]
name|memory
decl_stmt|;
DECL|field|byteStream
specifier|private
name|BoundedByteArrayOutputStream
name|byteStream
decl_stmt|;
comment|// Decompression of map-outputs
DECL|field|codec
specifier|private
specifier|final
name|CompressionCodec
name|codec
decl_stmt|;
DECL|field|decompressor
specifier|private
specifier|final
name|Decompressor
name|decompressor
decl_stmt|;
DECL|method|InMemoryMapOutput (Configuration conf, TaskAttemptID mapId, MergeManagerImpl<K, V> merger, int size, CompressionCodec codec, boolean primaryMapOutput)
specifier|public
name|InMemoryMapOutput
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|TaskAttemptID
name|mapId
parameter_list|,
name|MergeManagerImpl
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|merger
parameter_list|,
name|int
name|size
parameter_list|,
name|CompressionCodec
name|codec
parameter_list|,
name|boolean
name|primaryMapOutput
parameter_list|)
block|{
name|super
argument_list|(
name|mapId
argument_list|,
operator|(
name|long
operator|)
name|size
argument_list|,
name|primaryMapOutput
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|merger
operator|=
name|merger
expr_stmt|;
name|this
operator|.
name|codec
operator|=
name|codec
expr_stmt|;
name|byteStream
operator|=
operator|new
name|BoundedByteArrayOutputStream
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|memory
operator|=
name|byteStream
operator|.
name|getBuffer
argument_list|()
expr_stmt|;
if|if
condition|(
name|codec
operator|!=
literal|null
condition|)
block|{
name|decompressor
operator|=
name|CodecPool
operator|.
name|getDecompressor
argument_list|(
name|codec
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|decompressor
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|getMemory ()
specifier|public
name|byte
index|[]
name|getMemory
parameter_list|()
block|{
return|return
name|memory
return|;
block|}
DECL|method|getArrayStream ()
specifier|public
name|BoundedByteArrayOutputStream
name|getArrayStream
parameter_list|()
block|{
return|return
name|byteStream
return|;
block|}
annotation|@
name|Override
DECL|method|shuffle (MapHost host, InputStream input, long compressedLength, long decompressedLength, ShuffleClientMetrics metrics, Reporter reporter)
specifier|public
name|void
name|shuffle
parameter_list|(
name|MapHost
name|host
parameter_list|,
name|InputStream
name|input
parameter_list|,
name|long
name|compressedLength
parameter_list|,
name|long
name|decompressedLength
parameter_list|,
name|ShuffleClientMetrics
name|metrics
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|IFileInputStream
name|checksumIn
init|=
operator|new
name|IFileInputStream
argument_list|(
name|input
argument_list|,
name|compressedLength
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|input
operator|=
name|checksumIn
expr_stmt|;
comment|// Are map-outputs compressed?
if|if
condition|(
name|codec
operator|!=
literal|null
condition|)
block|{
name|decompressor
operator|.
name|reset
argument_list|()
expr_stmt|;
name|input
operator|=
name|codec
operator|.
name|createInputStream
argument_list|(
name|input
argument_list|,
name|decompressor
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|IOUtils
operator|.
name|readFully
argument_list|(
name|input
argument_list|,
name|memory
argument_list|,
literal|0
argument_list|,
name|memory
operator|.
name|length
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|inputBytes
argument_list|(
name|memory
operator|.
name|length
argument_list|)
expr_stmt|;
name|reporter
operator|.
name|progress
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Read "
operator|+
name|memory
operator|.
name|length
operator|+
literal|" bytes from map-output for "
operator|+
name|getMapId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|// Close the streams
name|IOUtils
operator|.
name|cleanup
argument_list|(
name|LOG
argument_list|,
name|input
argument_list|)
expr_stmt|;
comment|// Re-throw
throw|throw
name|ioe
throw|;
block|}
finally|finally
block|{
name|CodecPool
operator|.
name|returnDecompressor
argument_list|(
name|decompressor
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|commit ()
specifier|public
name|void
name|commit
parameter_list|()
throws|throws
name|IOException
block|{
name|merger
operator|.
name|closeInMemoryFile
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|abort ()
specifier|public
name|void
name|abort
parameter_list|()
block|{
name|merger
operator|.
name|unreserve
argument_list|(
name|memory
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"MEMORY"
return|;
block|}
block|}
end_class

end_unit

