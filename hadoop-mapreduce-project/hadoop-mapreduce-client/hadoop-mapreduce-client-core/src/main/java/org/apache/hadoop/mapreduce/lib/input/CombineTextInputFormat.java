begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.lib.input
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_comment
comment|/**  * Input format that is a<code>CombineFileInputFormat</code>-equivalent for  *<code>TextInputFormat</code>.  *  * @see CombineFileInputFormat  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|CombineTextInputFormat
specifier|public
class|class
name|CombineTextInputFormat
extends|extends
name|CombineFileInputFormat
argument_list|<
name|LongWritable
argument_list|,
name|Text
argument_list|>
block|{
DECL|method|createRecordReader (InputSplit split, TaskAttemptContext context)
specifier|public
name|RecordReader
argument_list|<
name|LongWritable
argument_list|,
name|Text
argument_list|>
name|createRecordReader
parameter_list|(
name|InputSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|CombineFileRecordReader
argument_list|<
name|LongWritable
argument_list|,
name|Text
argument_list|>
argument_list|(
operator|(
name|CombineFileSplit
operator|)
name|split
argument_list|,
name|context
argument_list|,
name|TextRecordReaderWrapper
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**    * A record reader that may be passed to<code>CombineFileRecordReader</code>    * so that it can be used in a<code>CombineFileInputFormat</code>-equivalent    * for<code>TextInputFormat</code>.    *    * @see CombineFileRecordReader    * @see CombineFileInputFormat    * @see TextInputFormat    */
DECL|class|TextRecordReaderWrapper
specifier|private
specifier|static
class|class
name|TextRecordReaderWrapper
extends|extends
name|CombineFileRecordReaderWrapper
argument_list|<
name|LongWritable
argument_list|,
name|Text
argument_list|>
block|{
comment|// this constructor signature is required by CombineFileRecordReader
DECL|method|TextRecordReaderWrapper (CombineFileSplit split, TaskAttemptContext context, Integer idx)
specifier|public
name|TextRecordReaderWrapper
parameter_list|(
name|CombineFileSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|,
name|Integer
name|idx
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|super
argument_list|(
operator|new
name|TextInputFormat
argument_list|()
argument_list|,
name|split
argument_list|,
name|context
argument_list|,
name|idx
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

