begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.task.reduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|reduce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|Updater
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"MapReduce"
block|}
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|ShuffleClientMetrics
specifier|public
class|class
name|ShuffleClientMetrics
implements|implements
name|Updater
block|{
DECL|field|shuffleMetrics
specifier|private
name|MetricsRecord
name|shuffleMetrics
init|=
literal|null
decl_stmt|;
DECL|field|numFailedFetches
specifier|private
name|int
name|numFailedFetches
init|=
literal|0
decl_stmt|;
DECL|field|numSuccessFetches
specifier|private
name|int
name|numSuccessFetches
init|=
literal|0
decl_stmt|;
DECL|field|numBytes
specifier|private
name|long
name|numBytes
init|=
literal|0
decl_stmt|;
DECL|field|numThreadsBusy
specifier|private
name|int
name|numThreadsBusy
init|=
literal|0
decl_stmt|;
DECL|field|numCopiers
specifier|private
specifier|final
name|int
name|numCopiers
decl_stmt|;
DECL|method|ShuffleClientMetrics (TaskAttemptID reduceId, JobConf jobConf)
name|ShuffleClientMetrics
parameter_list|(
name|TaskAttemptID
name|reduceId
parameter_list|,
name|JobConf
name|jobConf
parameter_list|)
block|{
name|this
operator|.
name|numCopiers
operator|=
name|jobConf
operator|.
name|getInt
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_PARALLEL_COPIES
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|MetricsContext
name|metricsContext
init|=
name|MetricsUtil
operator|.
name|getContext
argument_list|(
literal|"mapred"
argument_list|)
decl_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|=
name|MetricsUtil
operator|.
name|createRecord
argument_list|(
name|metricsContext
argument_list|,
literal|"shuffleInput"
argument_list|)
expr_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|.
name|setTag
argument_list|(
literal|"user"
argument_list|,
name|jobConf
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|.
name|setTag
argument_list|(
literal|"jobName"
argument_list|,
name|jobConf
operator|.
name|getJobName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|.
name|setTag
argument_list|(
literal|"jobId"
argument_list|,
name|reduceId
operator|.
name|getJobID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|.
name|setTag
argument_list|(
literal|"taskId"
argument_list|,
name|reduceId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shuffleMetrics
operator|.
name|setTag
argument_list|(
literal|"sessionId"
argument_list|,
name|jobConf
operator|.
name|getSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|metricsContext
operator|.
name|registerUpdater
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|inputBytes (long numBytes)
specifier|public
specifier|synchronized
name|void
name|inputBytes
parameter_list|(
name|long
name|numBytes
parameter_list|)
block|{
name|this
operator|.
name|numBytes
operator|+=
name|numBytes
expr_stmt|;
block|}
DECL|method|failedFetch ()
specifier|public
specifier|synchronized
name|void
name|failedFetch
parameter_list|()
block|{
operator|++
name|numFailedFetches
expr_stmt|;
block|}
DECL|method|successFetch ()
specifier|public
specifier|synchronized
name|void
name|successFetch
parameter_list|()
block|{
operator|++
name|numSuccessFetches
expr_stmt|;
block|}
DECL|method|threadBusy ()
specifier|public
specifier|synchronized
name|void
name|threadBusy
parameter_list|()
block|{
operator|++
name|numThreadsBusy
expr_stmt|;
block|}
DECL|method|threadFree ()
specifier|public
specifier|synchronized
name|void
name|threadFree
parameter_list|()
block|{
operator|--
name|numThreadsBusy
expr_stmt|;
block|}
DECL|method|doUpdates (MetricsContext unused)
specifier|public
name|void
name|doUpdates
parameter_list|(
name|MetricsContext
name|unused
parameter_list|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|shuffleMetrics
operator|.
name|incrMetric
argument_list|(
literal|"shuffle_input_bytes"
argument_list|,
name|numBytes
argument_list|)
expr_stmt|;
name|shuffleMetrics
operator|.
name|incrMetric
argument_list|(
literal|"shuffle_failed_fetches"
argument_list|,
name|numFailedFetches
argument_list|)
expr_stmt|;
name|shuffleMetrics
operator|.
name|incrMetric
argument_list|(
literal|"shuffle_success_fetches"
argument_list|,
name|numSuccessFetches
argument_list|)
expr_stmt|;
if|if
condition|(
name|numCopiers
operator|!=
literal|0
condition|)
block|{
name|shuffleMetrics
operator|.
name|setMetric
argument_list|(
literal|"shuffle_fetchers_busy_percent"
argument_list|,
literal|100
operator|*
operator|(
operator|(
name|float
operator|)
name|numThreadsBusy
operator|/
name|numCopiers
operator|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|shuffleMetrics
operator|.
name|setMetric
argument_list|(
literal|"shuffle_fetchers_busy_percent"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|numBytes
operator|=
literal|0
expr_stmt|;
name|numSuccessFetches
operator|=
literal|0
expr_stmt|;
name|numFailedFetches
operator|=
literal|0
expr_stmt|;
block|}
name|shuffleMetrics
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

