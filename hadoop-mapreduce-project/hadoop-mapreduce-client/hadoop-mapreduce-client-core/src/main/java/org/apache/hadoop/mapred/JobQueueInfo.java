begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|QueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|QueueState
import|;
end_import

begin_comment
comment|/**  * Class that contains the information regarding the Job Queues which are   * maintained by the Hadoop Map/Reduce framework.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|JobQueueInfo
specifier|public
class|class
name|JobQueueInfo
extends|extends
name|QueueInfo
block|{
comment|/**    * Default constructor for Job Queue Info.    *     */
DECL|method|JobQueueInfo ()
specifier|public
name|JobQueueInfo
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**    * Construct a new JobQueueInfo object using the queue name and the    * scheduling information passed.    *     * @param queueName Name of the job queue    * @param schedulingInfo Scheduling Information associated with the job    * queue    */
DECL|method|JobQueueInfo (String queueName, String schedulingInfo)
specifier|public
name|JobQueueInfo
parameter_list|(
name|String
name|queueName
parameter_list|,
name|String
name|schedulingInfo
parameter_list|)
block|{
name|super
argument_list|(
name|queueName
argument_list|,
name|schedulingInfo
argument_list|)
expr_stmt|;
block|}
DECL|method|JobQueueInfo (QueueInfo queue)
name|JobQueueInfo
parameter_list|(
name|QueueInfo
name|queue
parameter_list|)
block|{
name|this
argument_list|(
name|queue
operator|.
name|getQueueName
argument_list|()
argument_list|,
name|queue
operator|.
name|getSchedulingInfo
argument_list|()
argument_list|)
expr_stmt|;
name|setQueueState
argument_list|(
name|queue
operator|.
name|getState
argument_list|()
operator|.
name|getStateName
argument_list|()
argument_list|)
expr_stmt|;
name|setQueueChildren
argument_list|(
name|queue
operator|.
name|getQueueChildren
argument_list|()
argument_list|)
expr_stmt|;
name|setProperties
argument_list|(
name|queue
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|setJobStatuses
argument_list|(
name|queue
operator|.
name|getJobStatuses
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Set the queue name of the JobQueueInfo    *     * @param queueName Name of the job queue.    */
DECL|method|setQueueName (String queueName)
specifier|protected
name|void
name|setQueueName
parameter_list|(
name|String
name|queueName
parameter_list|)
block|{
name|super
operator|.
name|setQueueName
argument_list|(
name|queueName
argument_list|)
expr_stmt|;
block|}
comment|/**    * Set the scheduling information associated to particular job queue    *     * @param schedulingInfo    */
DECL|method|setSchedulingInfo (String schedulingInfo)
specifier|protected
name|void
name|setSchedulingInfo
parameter_list|(
name|String
name|schedulingInfo
parameter_list|)
block|{
name|super
operator|.
name|setSchedulingInfo
argument_list|(
name|schedulingInfo
argument_list|)
expr_stmt|;
block|}
comment|/**    * Set the state of the queue    * @param state state of the queue.    */
DECL|method|setQueueState (String state)
specifier|protected
name|void
name|setQueueState
parameter_list|(
name|String
name|state
parameter_list|)
block|{
name|super
operator|.
name|setState
argument_list|(
name|QueueState
operator|.
name|getState
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getQueueState ()
name|String
name|getQueueState
parameter_list|()
block|{
return|return
name|super
operator|.
name|getState
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|setChildren (List<JobQueueInfo> children)
specifier|protected
name|void
name|setChildren
parameter_list|(
name|List
argument_list|<
name|JobQueueInfo
argument_list|>
name|children
parameter_list|)
block|{
name|List
argument_list|<
name|QueueInfo
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|QueueInfo
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|JobQueueInfo
name|q
range|:
name|children
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|q
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|setQueueChildren
argument_list|(
name|list
argument_list|)
expr_stmt|;
block|}
DECL|method|getChildren ()
specifier|public
name|List
argument_list|<
name|JobQueueInfo
argument_list|>
name|getChildren
parameter_list|()
block|{
name|List
argument_list|<
name|JobQueueInfo
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|JobQueueInfo
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|QueueInfo
name|q
range|:
name|super
operator|.
name|getQueueChildren
argument_list|()
control|)
block|{
name|list
operator|.
name|add
argument_list|(
operator|(
name|JobQueueInfo
operator|)
name|q
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
DECL|method|setProperties (Properties props)
specifier|protected
name|void
name|setProperties
parameter_list|(
name|Properties
name|props
parameter_list|)
block|{
name|super
operator|.
name|setProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add a child {@link JobQueueInfo} to this {@link JobQueueInfo}. Modify the    * fully-qualified name of the child {@link JobQueueInfo} to reflect the    * hierarchy.    *     * Only for testing.    *     * @param child    */
DECL|method|addChild (JobQueueInfo child)
name|void
name|addChild
parameter_list|(
name|JobQueueInfo
name|child
parameter_list|)
block|{
name|List
argument_list|<
name|JobQueueInfo
argument_list|>
name|children
init|=
name|getChildren
argument_list|()
decl_stmt|;
name|children
operator|.
name|add
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|setChildren
argument_list|(
name|children
argument_list|)
expr_stmt|;
block|}
comment|/**    * Remove the child from this {@link JobQueueInfo}. This also resets the    * queue-name of the child from a fully-qualified name to a simple queue name.    *     * Only for testing.    *     * @param child    */
DECL|method|removeChild (JobQueueInfo child)
name|void
name|removeChild
parameter_list|(
name|JobQueueInfo
name|child
parameter_list|)
block|{
name|List
argument_list|<
name|JobQueueInfo
argument_list|>
name|children
init|=
name|getChildren
argument_list|()
decl_stmt|;
name|children
operator|.
name|remove
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|setChildren
argument_list|(
name|children
argument_list|)
expr_stmt|;
block|}
DECL|method|setJobStatuses (org.apache.hadoop.mapreduce.JobStatus[] stats)
specifier|protected
name|void
name|setJobStatuses
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
index|[]
name|stats
parameter_list|)
block|{
name|super
operator|.
name|setJobStatuses
argument_list|(
name|stats
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

