begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.lib
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|lib
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Partitioner
import|;
end_import

begin_comment
comment|/**  * Partitioner effecting a total order by reading split points from  * an externally generated source.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
DECL|class|TotalOrderPartitioner
specifier|public
class|class
name|TotalOrderPartitioner
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|partition
operator|.
name|TotalOrderPartitioner
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
implements|implements
name|Partitioner
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
block|{
DECL|method|TotalOrderPartitioner ()
specifier|public
name|TotalOrderPartitioner
parameter_list|()
block|{ }
DECL|method|configure (JobConf job)
specifier|public
name|void
name|configure
parameter_list|(
name|JobConf
name|job
parameter_list|)
block|{
name|super
operator|.
name|setConf
argument_list|(
name|job
argument_list|)
expr_stmt|;
block|}
comment|/**    * Set the path to the SequenceFile storing the sorted partition keyset.    * It must be the case that for<tt>R</tt> reduces, there are<tt>R-1</tt>    * keys in the SequenceFile.    * @deprecated Use     * {@link #setPartitionFile(Configuration, Path)}    * instead    */
annotation|@
name|Deprecated
DECL|method|setPartitionFile (JobConf job, Path p)
specifier|public
specifier|static
name|void
name|setPartitionFile
parameter_list|(
name|JobConf
name|job
parameter_list|,
name|Path
name|p
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|partition
operator|.
name|TotalOrderPartitioner
operator|.
name|setPartitionFile
argument_list|(
name|job
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get the path to the SequenceFile storing the sorted partition keyset.    * @see #setPartitionFile(JobConf,Path)    * @deprecated Use     * {@link #getPartitionFile(Configuration)}    * instead    */
annotation|@
name|Deprecated
DECL|method|getPartitionFile (JobConf job)
specifier|public
specifier|static
name|String
name|getPartitionFile
parameter_list|(
name|JobConf
name|job
parameter_list|)
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|partition
operator|.
name|TotalOrderPartitioner
operator|.
name|getPartitionFile
argument_list|(
name|job
argument_list|)
return|;
block|}
block|}
end_class

end_unit

