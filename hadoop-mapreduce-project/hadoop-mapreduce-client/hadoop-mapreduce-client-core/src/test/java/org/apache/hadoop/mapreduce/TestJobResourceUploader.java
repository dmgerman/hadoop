begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * A class for unit testing JobResourceUploader.  */
end_comment

begin_class
DECL|class|TestJobResourceUploader
specifier|public
class|class
name|TestJobResourceUploader
block|{
annotation|@
name|Test
DECL|method|testAllDefaults ()
specifier|public
name|void
name|testAllDefaults
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNoLimitsWithResources ()
specifier|public
name|void
name|testNoLimitsWithResources
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSizeOfResource
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAtResourceLimit ()
specifier|public
name|void
name|testAtResourceLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxResources
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOverResourceLimit ()
specifier|public
name|void
name|testOverResourceLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxResources
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|false
argument_list|,
name|ResourceViolation
operator|.
name|NUMBER_OF_RESOURCES
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAtResourcesMBLimit ()
specifier|public
name|void
name|testAtResourcesMBLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxResourcesMB
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSizeOfResource
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOverResourcesMBLimit ()
specifier|public
name|void
name|testOverResourcesMBLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxResourcesMB
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSizeOfResource
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|false
argument_list|,
name|ResourceViolation
operator|.
name|TOTAL_RESOURCE_SIZE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAtSingleResourceMBLimit ()
specifier|public
name|void
name|testAtSingleResourceMBLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxSingleResourceMB
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSizeOfResource
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOverSingleResourceMBLimit ()
specifier|public
name|void
name|testOverSingleResourceMBLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|ResourceLimitsConf
operator|.
name|Builder
name|b
init|=
operator|new
name|ResourceLimitsConf
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setNumOfDCArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfDCFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpArchives
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpFiles
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|b
operator|.
name|setNumOfTmpLibJars
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setJobJar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|b
operator|.
name|setMaxSingleResourceMB
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSizeOfResource
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|runLimitsTest
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|,
literal|false
argument_list|,
name|ResourceViolation
operator|.
name|SINGLE_RESOURCE_SIZE
argument_list|)
expr_stmt|;
block|}
DECL|enum|ResourceViolation
specifier|private
enum|enum
name|ResourceViolation
block|{
DECL|enumConstant|NUMBER_OF_RESOURCES
DECL|enumConstant|TOTAL_RESOURCE_SIZE
DECL|enumConstant|SINGLE_RESOURCE_SIZE
name|NUMBER_OF_RESOURCES
block|,
name|TOTAL_RESOURCE_SIZE
block|,
name|SINGLE_RESOURCE_SIZE
block|;   }
DECL|method|runLimitsTest (ResourceLimitsConf rlConf, boolean checkShouldSucceed, ResourceViolation violation)
specifier|private
name|void
name|runLimitsTest
parameter_list|(
name|ResourceLimitsConf
name|rlConf
parameter_list|,
name|boolean
name|checkShouldSucceed
parameter_list|,
name|ResourceViolation
name|violation
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|checkShouldSucceed
operator|&&
name|violation
operator|==
literal|null
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Test is misconfigured. checkShouldSucceed is set to false"
operator|+
literal|" and a ResourceViolation is not specified."
argument_list|)
expr_stmt|;
block|}
name|JobConf
name|conf
init|=
name|setupJobConf
argument_list|(
name|rlConf
argument_list|)
decl_stmt|;
name|JobResourceUploader
name|uploader
init|=
operator|new
name|StubedUploader
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|long
name|configuredSizeOfResourceBytes
init|=
name|rlConf
operator|.
name|sizeOfResource
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|when
argument_list|(
name|mockedStatus
operator|.
name|getLen
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|configuredSizeOfResourceBytes
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockedStatus
operator|.
name|isDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|URI
argument_list|,
name|FileStatus
argument_list|>
name|statCache
init|=
operator|new
name|HashMap
argument_list|<
name|URI
argument_list|,
name|FileStatus
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
name|uploader
operator|.
name|checkLocalizationLimits
argument_list|(
name|conf
argument_list|,
name|conf
operator|.
name|getStringCollection
argument_list|(
literal|"tmpfiles"
argument_list|)
argument_list|,
name|conf
operator|.
name|getStringCollection
argument_list|(
literal|"tmpjars"
argument_list|)
argument_list|,
name|conf
operator|.
name|getStringCollection
argument_list|(
literal|"tmparchives"
argument_list|)
argument_list|,
name|conf
operator|.
name|getJar
argument_list|()
argument_list|,
name|statCache
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Limits check succeeded when it should have failed."
argument_list|,
name|checkShouldSucceed
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
if|if
condition|(
name|checkShouldSucceed
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Limits check failed when it should have succeeded: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|violation
condition|)
block|{
case|case
name|NUMBER_OF_RESOURCES
case|:
if|if
condition|(
operator|!
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|JobResourceUploader
operator|.
name|MAX_RESOURCE_ERR_MSG
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Test failed unexpectedly: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|TOTAL_RESOURCE_SIZE
case|:
if|if
condition|(
operator|!
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|JobResourceUploader
operator|.
name|MAX_TOTAL_RESOURCE_MB_ERR_MSG
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Test failed unexpectedly: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SINGLE_RESOURCE_SIZE
case|:
if|if
condition|(
operator|!
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
name|JobResourceUploader
operator|.
name|MAX_SINGLE_RESOURCE_MB_ERR_MSG
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Test failed unexpectedly: "
operator|+
name|e
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
name|Assert
operator|.
name|fail
argument_list|(
literal|"Test failed unexpectedly: "
operator|+
name|e
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
DECL|field|mockedStatus
specifier|private
specifier|final
name|FileStatus
name|mockedStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|setupJobConf (ResourceLimitsConf rlConf)
specifier|private
name|JobConf
name|setupJobConf
parameter_list|(
name|ResourceLimitsConf
name|rlConf
parameter_list|)
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|MRJobConfig
operator|.
name|MAX_RESOURCES
argument_list|,
name|rlConf
operator|.
name|maxResources
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|MRJobConfig
operator|.
name|MAX_RESOURCES_MB
argument_list|,
name|rlConf
operator|.
name|maxResourcesMB
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|MRJobConfig
operator|.
name|MAX_SINGLE_RESOURCE_MB
argument_list|,
name|rlConf
operator|.
name|maxSingleResourceMB
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tmpfiles"
argument_list|,
name|buildPathString
argument_list|(
literal|"file://tmpFiles"
argument_list|,
name|rlConf
operator|.
name|numOfTmpFiles
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tmpjars"
argument_list|,
name|buildPathString
argument_list|(
literal|"file://tmpjars"
argument_list|,
name|rlConf
operator|.
name|numOfTmpLibJars
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tmparchives"
argument_list|,
name|buildPathString
argument_list|(
literal|"file://tmpArchives"
argument_list|,
name|rlConf
operator|.
name|numOfTmpArchives
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|CACHE_ARCHIVES
argument_list|,
name|buildPathString
argument_list|(
literal|"file://cacheArchives"
argument_list|,
name|rlConf
operator|.
name|numOfDCArchives
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|CACHE_FILES
argument_list|,
name|buildPathString
argument_list|(
literal|"file://cacheFiles"
argument_list|,
name|rlConf
operator|.
name|numOfDCFiles
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rlConf
operator|.
name|jobJar
condition|)
block|{
name|conf
operator|.
name|setJar
argument_list|(
literal|"file://jobjar.jar"
argument_list|)
expr_stmt|;
block|}
return|return
name|conf
return|;
block|}
DECL|method|buildPathString (String pathPrefix, int numOfPaths)
specifier|private
name|String
name|buildPathString
parameter_list|(
name|String
name|pathPrefix
parameter_list|,
name|int
name|numOfPaths
parameter_list|)
block|{
if|if
condition|(
name|numOfPaths
operator|<
literal|1
condition|)
block|{
return|return
literal|""
return|;
block|}
else|else
block|{
name|StringBuilder
name|b
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
name|pathPrefix
operator|+
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|numOfPaths
condition|;
name|i
operator|++
control|)
block|{
name|b
operator|.
name|append
argument_list|(
literal|","
operator|+
name|pathPrefix
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
return|return
name|b
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|class|ResourceLimitsConf
specifier|final
specifier|static
class|class
name|ResourceLimitsConf
block|{
DECL|field|maxResources
specifier|private
specifier|final
name|int
name|maxResources
decl_stmt|;
DECL|field|maxResourcesMB
specifier|private
specifier|final
name|long
name|maxResourcesMB
decl_stmt|;
DECL|field|maxSingleResourceMB
specifier|private
specifier|final
name|long
name|maxSingleResourceMB
decl_stmt|;
DECL|field|numOfTmpFiles
specifier|private
specifier|final
name|int
name|numOfTmpFiles
decl_stmt|;
DECL|field|numOfTmpArchives
specifier|private
specifier|final
name|int
name|numOfTmpArchives
decl_stmt|;
DECL|field|numOfTmpLibJars
specifier|private
specifier|final
name|int
name|numOfTmpLibJars
decl_stmt|;
DECL|field|jobJar
specifier|private
specifier|final
name|boolean
name|jobJar
decl_stmt|;
DECL|field|numOfDCFiles
specifier|private
specifier|final
name|int
name|numOfDCFiles
decl_stmt|;
DECL|field|numOfDCArchives
specifier|private
specifier|final
name|int
name|numOfDCArchives
decl_stmt|;
DECL|field|sizeOfResource
specifier|private
specifier|final
name|long
name|sizeOfResource
decl_stmt|;
DECL|field|DEFAULT
specifier|static
specifier|final
name|ResourceLimitsConf
name|DEFAULT
init|=
operator|new
name|ResourceLimitsConf
argument_list|()
decl_stmt|;
DECL|method|ResourceLimitsConf ()
specifier|private
name|ResourceLimitsConf
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|Builder
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|ResourceLimitsConf (Builder builder)
specifier|private
name|ResourceLimitsConf
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|maxResources
operator|=
name|builder
operator|.
name|maxResources
expr_stmt|;
name|this
operator|.
name|maxResourcesMB
operator|=
name|builder
operator|.
name|maxResourcesMB
expr_stmt|;
name|this
operator|.
name|maxSingleResourceMB
operator|=
name|builder
operator|.
name|maxSingleResourceMB
expr_stmt|;
name|this
operator|.
name|numOfTmpFiles
operator|=
name|builder
operator|.
name|numOfTmpFiles
expr_stmt|;
name|this
operator|.
name|numOfTmpArchives
operator|=
name|builder
operator|.
name|numOfTmpArchives
expr_stmt|;
name|this
operator|.
name|numOfTmpLibJars
operator|=
name|builder
operator|.
name|numOfTmpLibJars
expr_stmt|;
name|this
operator|.
name|jobJar
operator|=
name|builder
operator|.
name|jobJar
expr_stmt|;
name|this
operator|.
name|numOfDCFiles
operator|=
name|builder
operator|.
name|numOfDCFiles
expr_stmt|;
name|this
operator|.
name|numOfDCArchives
operator|=
name|builder
operator|.
name|numOfDCArchives
expr_stmt|;
name|this
operator|.
name|sizeOfResource
operator|=
name|builder
operator|.
name|sizeOfResource
expr_stmt|;
block|}
DECL|class|Builder
specifier|static
class|class
name|Builder
block|{
comment|// Defaults
DECL|field|maxResources
specifier|private
name|int
name|maxResources
init|=
literal|0
decl_stmt|;
DECL|field|maxResourcesMB
specifier|private
name|long
name|maxResourcesMB
init|=
literal|0
decl_stmt|;
DECL|field|maxSingleResourceMB
specifier|private
name|long
name|maxSingleResourceMB
init|=
literal|0
decl_stmt|;
DECL|field|numOfTmpFiles
specifier|private
name|int
name|numOfTmpFiles
init|=
literal|0
decl_stmt|;
DECL|field|numOfTmpArchives
specifier|private
name|int
name|numOfTmpArchives
init|=
literal|0
decl_stmt|;
DECL|field|numOfTmpLibJars
specifier|private
name|int
name|numOfTmpLibJars
init|=
literal|0
decl_stmt|;
DECL|field|jobJar
specifier|private
name|boolean
name|jobJar
init|=
literal|false
decl_stmt|;
DECL|field|numOfDCFiles
specifier|private
name|int
name|numOfDCFiles
init|=
literal|0
decl_stmt|;
DECL|field|numOfDCArchives
specifier|private
name|int
name|numOfDCArchives
init|=
literal|0
decl_stmt|;
DECL|field|sizeOfResource
specifier|private
name|long
name|sizeOfResource
init|=
literal|0
decl_stmt|;
DECL|method|Builder ()
name|Builder
parameter_list|()
block|{       }
DECL|method|setMaxResources (int max)
name|Builder
name|setMaxResources
parameter_list|(
name|int
name|max
parameter_list|)
block|{
name|this
operator|.
name|maxResources
operator|=
name|max
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMaxResourcesMB (long max)
name|Builder
name|setMaxResourcesMB
parameter_list|(
name|long
name|max
parameter_list|)
block|{
name|this
operator|.
name|maxResourcesMB
operator|=
name|max
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMaxSingleResourceMB (long max)
name|Builder
name|setMaxSingleResourceMB
parameter_list|(
name|long
name|max
parameter_list|)
block|{
name|this
operator|.
name|maxSingleResourceMB
operator|=
name|max
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNumOfTmpFiles (int num)
name|Builder
name|setNumOfTmpFiles
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|this
operator|.
name|numOfTmpFiles
operator|=
name|num
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNumOfTmpArchives (int num)
name|Builder
name|setNumOfTmpArchives
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|this
operator|.
name|numOfTmpArchives
operator|=
name|num
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNumOfTmpLibJars (int num)
name|Builder
name|setNumOfTmpLibJars
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|this
operator|.
name|numOfTmpLibJars
operator|=
name|num
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setJobJar (boolean jar)
name|Builder
name|setJobJar
parameter_list|(
name|boolean
name|jar
parameter_list|)
block|{
name|this
operator|.
name|jobJar
operator|=
name|jar
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNumOfDCFiles (int num)
name|Builder
name|setNumOfDCFiles
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|this
operator|.
name|numOfDCFiles
operator|=
name|num
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setNumOfDCArchives (int num)
name|Builder
name|setNumOfDCArchives
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|this
operator|.
name|numOfDCArchives
operator|=
name|num
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setSizeOfResource (long sizeMB)
name|Builder
name|setSizeOfResource
parameter_list|(
name|long
name|sizeMB
parameter_list|)
block|{
name|this
operator|.
name|sizeOfResource
operator|=
name|sizeMB
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
name|ResourceLimitsConf
name|build
parameter_list|()
block|{
return|return
operator|new
name|ResourceLimitsConf
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
DECL|class|StubedUploader
class|class
name|StubedUploader
extends|extends
name|JobResourceUploader
block|{
DECL|method|StubedUploader (JobConf conf)
name|StubedUploader
parameter_list|(
name|JobConf
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFileStatus (Map<URI, FileStatus> statCache, Configuration job, Path p)
name|FileStatus
name|getFileStatus
parameter_list|(
name|Map
argument_list|<
name|URI
argument_list|,
name|FileStatus
argument_list|>
name|statCache
parameter_list|,
name|Configuration
name|job
parameter_list|,
name|Path
name|p
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|mockedStatus
return|;
block|}
block|}
block|}
end_class

end_unit

