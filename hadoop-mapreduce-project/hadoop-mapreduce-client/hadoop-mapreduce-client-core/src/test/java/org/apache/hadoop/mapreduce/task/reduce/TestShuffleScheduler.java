begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.task.reduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|reduce
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocalDirAllocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|compress
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MapOutputFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|ShuffleConsumerPlugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskUmbilicalProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Counters
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Task
operator|.
name|CombineOutputCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestShuffleScheduler
specifier|public
class|class
name|TestShuffleScheduler
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Test
DECL|method|testTipFailed ()
specifier|public
name|void
name|testTipFailed
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|setNumMapTasks
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|TaskStatus
name|status
init|=
operator|new
name|TaskStatus
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|getIsMap
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addFetchFailedMap
parameter_list|(
name|TaskAttemptID
name|mapTaskId
parameter_list|)
block|{       }
block|}
decl_stmt|;
name|Progress
name|progress
init|=
operator|new
name|Progress
argument_list|()
decl_stmt|;
name|TaskAttemptID
name|reduceId
init|=
operator|new
name|TaskAttemptID
argument_list|(
literal|"314159"
argument_list|,
literal|0
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|ShuffleSchedulerImpl
name|scheduler
init|=
operator|new
name|ShuffleSchedulerImpl
argument_list|(
name|job
argument_list|,
name|status
argument_list|,
name|reduceId
argument_list|,
literal|null
argument_list|,
name|progress
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|JobID
name|jobId
init|=
operator|new
name|JobID
argument_list|()
decl_stmt|;
name|TaskID
name|taskId1
init|=
operator|new
name|TaskID
argument_list|(
name|jobId
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|scheduler
operator|.
name|tipFailed
argument_list|(
name|taskId1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Progress should be 0.5"
argument_list|,
literal|0.5f
argument_list|,
name|progress
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|scheduler
operator|.
name|waitUntilDone
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TaskID
name|taskId0
init|=
operator|new
name|TaskID
argument_list|(
name|jobId
argument_list|,
name|TaskType
operator|.
name|REDUCE
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|scheduler
operator|.
name|tipFailed
argument_list|(
name|taskId0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Progress should be 1.0"
argument_list|,
literal|1.0f
argument_list|,
name|progress
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|scheduler
operator|.
name|waitUntilDone
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Test
DECL|method|TestAggregatedTransferRate ()
specifier|public
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
name|void
name|TestAggregatedTransferRate
parameter_list|()
throws|throws
name|Exception
block|{
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|setNumMapTasks
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|//mock creation
name|TaskUmbilicalProtocol
name|mockUmbilical
init|=
name|mock
argument_list|(
name|TaskUmbilicalProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|Reporter
name|mockReporter
init|=
name|mock
argument_list|(
name|Reporter
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileSystem
name|mockFileSystem
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reducer
argument_list|>
name|combinerClass
init|=
name|job
operator|.
name|getCombinerClass
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
comment|// needed for mock with generic
name|CombineOutputCollector
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|mockCombineOutputCollector
init|=
operator|(
name|CombineOutputCollector
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
operator|)
name|mock
argument_list|(
name|CombineOutputCollector
operator|.
name|class
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
name|mockTaskAttemptID
init|=
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalDirAllocator
name|mockLocalDirAllocator
init|=
name|mock
argument_list|(
name|LocalDirAllocator
operator|.
name|class
argument_list|)
decl_stmt|;
name|CompressionCodec
name|mockCompressionCodec
init|=
name|mock
argument_list|(
name|CompressionCodec
operator|.
name|class
argument_list|)
decl_stmt|;
name|Counter
name|mockCounter
init|=
name|mock
argument_list|(
name|Counter
operator|.
name|class
argument_list|)
decl_stmt|;
name|TaskStatus
name|mockTaskStatus
init|=
name|mock
argument_list|(
name|TaskStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|Progress
name|mockProgress
init|=
name|mock
argument_list|(
name|Progress
operator|.
name|class
argument_list|)
decl_stmt|;
name|MapOutputFile
name|mockMapOutputFile
init|=
name|mock
argument_list|(
name|MapOutputFile
operator|.
name|class
argument_list|)
decl_stmt|;
name|Task
name|mockTask
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|MapOutput
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|output
init|=
name|mock
argument_list|(
name|MapOutput
operator|.
name|class
argument_list|)
decl_stmt|;
name|ShuffleConsumerPlugin
operator|.
name|Context
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|context
init|=
operator|new
name|ShuffleConsumerPlugin
operator|.
name|Context
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|mockTaskAttemptID
argument_list|,
name|job
argument_list|,
name|mockFileSystem
argument_list|,
name|mockUmbilical
argument_list|,
name|mockLocalDirAllocator
argument_list|,
name|mockReporter
argument_list|,
name|mockCompressionCodec
argument_list|,
name|combinerClass
argument_list|,
name|mockCombineOutputCollector
argument_list|,
name|mockCounter
argument_list|,
name|mockCounter
argument_list|,
name|mockCounter
argument_list|,
name|mockCounter
argument_list|,
name|mockCounter
argument_list|,
name|mockCounter
argument_list|,
name|mockTaskStatus
argument_list|,
name|mockProgress
argument_list|,
name|mockProgress
argument_list|,
name|mockTask
argument_list|,
name|mockMapOutputFile
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|TaskStatus
name|status
init|=
operator|new
name|TaskStatus
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|getIsMap
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addFetchFailedMap
parameter_list|(
name|TaskAttemptID
name|mapTaskId
parameter_list|)
block|{       }
block|}
decl_stmt|;
name|Progress
name|progress
init|=
operator|new
name|Progress
argument_list|()
decl_stmt|;
name|ShuffleSchedulerImpl
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|scheduler
init|=
operator|new
name|ShuffleSchedulerImpl
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
argument_list|(
name|job
argument_list|,
name|status
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|progress
argument_list|,
name|context
operator|.
name|getShuffledMapsCounter
argument_list|()
argument_list|,
name|context
operator|.
name|getReduceShuffleBytes
argument_list|()
argument_list|,
name|context
operator|.
name|getFailedShuffleCounter
argument_list|()
argument_list|)
decl_stmt|;
name|TaskAttemptID
name|attemptID0
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|//adding the 1st interval, 40MB from 60s to 100s
name|long
name|bytes
init|=
operator|(
name|long
operator|)
literal|40
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID0
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|60000
argument_list|,
literal|100000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID1
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|//adding the 2nd interval before the 1st interval, 50MB from 0s to 50s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|50
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID1
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|0
argument_list|,
literal|50000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID2
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
decl_stmt|;
comment|//adding the 3rd interval overlapping with the 1st and the 2nd interval
comment|//110MB from 25s to 80s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|110
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID2
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|25000
argument_list|,
literal|80000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID3
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
decl_stmt|;
comment|//adding the 4th interval just after the 2nd interval, 100MB from 100s to 300s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|100
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID3
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|100000
argument_list|,
literal|300000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|4
argument_list|,
literal|0.5
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID4
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|4
argument_list|)
decl_stmt|;
comment|//adding the 5th interval between after 4th, 50MB from 350s to 400s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|50
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID4
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|350000
argument_list|,
literal|400000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID5
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|5
argument_list|)
decl_stmt|;
comment|//adding the 6th interval between after 5th, 50MB from 450s to 500s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|50
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID5
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|450000
argument_list|,
literal|500000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID6
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|6
argument_list|)
argument_list|,
literal|6
argument_list|)
decl_stmt|;
comment|//adding the 7th interval between after 5th and 6th interval, 20MB from 320s to 340s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|20
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID6
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|320000
argument_list|,
literal|340000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|7
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID7
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|7
argument_list|)
decl_stmt|;
comment|//adding the 8th interval overlapping with 4th, 5th, and 7th 30MB from 290s to 350s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|30
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID7
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|290000
argument_list|,
literal|350000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|8
argument_list|,
literal|0.5
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID8
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|8
argument_list|)
argument_list|,
literal|8
argument_list|)
decl_stmt|;
comment|//adding the 9th interval overlapping with 5th and 6th, 50MB from 400s to 450s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|50
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID8
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|400000
argument_list|,
literal|450000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|9
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|attemptID9
init|=
operator|new
name|TaskAttemptID
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|TaskID
argument_list|(
operator|new
name|JobID
argument_list|(
literal|"test"
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
literal|9
argument_list|)
argument_list|,
literal|9
argument_list|)
decl_stmt|;
comment|//adding the 10th interval overlapping with all intervals, 500MB from 0s to 500s
name|bytes
operator|=
operator|(
name|long
operator|)
literal|500
operator|*
literal|1024
operator|*
literal|1024
expr_stmt|;
name|scheduler
operator|.
name|copySucceeded
argument_list|(
name|attemptID9
argument_list|,
operator|new
name|MapHost
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|bytes
argument_list|,
literal|0
argument_list|,
literal|500000
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|copyMessage
argument_list|(
literal|10
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|progress
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|copyMessage (int attemptNo, double rate1, double rate2)
specifier|private
specifier|static
name|String
name|copyMessage
parameter_list|(
name|int
name|attemptNo
parameter_list|,
name|double
name|rate1
parameter_list|,
name|double
name|rate2
parameter_list|)
block|{
name|int
name|attemptZero
init|=
name|attemptNo
operator|-
literal|1
decl_stmt|;
return|return
name|String
operator|.
name|format
argument_list|(
literal|"copy task(attempt_test_0000_m_%06d_%d succeeded at %1.2f MB/s)"
operator|+
literal|" Aggregated copy rate(%d of 10 at %1.2f MB/s)"
argument_list|,
name|attemptZero
argument_list|,
name|attemptZero
argument_list|,
name|rate1
argument_list|,
name|attemptNo
argument_list|,
name|rate2
argument_list|)
return|;
block|}
block|}
end_class

end_unit

