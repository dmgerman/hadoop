begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * test JobConf  *   */
end_comment

begin_class
DECL|class|TestJobConf
specifier|public
class|class
name|TestJobConf
block|{
comment|/**    * test getters and setters of JobConf    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
DECL|method|testJobConf ()
specifier|public
name|void
name|testJobConf
parameter_list|()
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
comment|// test default value
name|Pattern
name|pattern
init|=
name|conf
operator|.
name|getJarUnpackPattern
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Pattern
operator|.
name|compile
argument_list|(
literal|"(?:classes/|lib/).*"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|pattern
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertFalse
argument_list|(
name|conf
operator|.
name|getKeepFailedTaskFiles
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setKeepFailedTaskFiles
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getKeepFailedTaskFiles
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertNull
argument_list|(
name|conf
operator|.
name|getKeepTaskFilesPattern
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setKeepTaskFilesPattern
argument_list|(
literal|"123454"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123454"
argument_list|,
name|conf
operator|.
name|getKeepTaskFilesPattern
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertNotNull
argument_list|(
name|conf
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setWorkingDirectory
argument_list|(
operator|new
name|Path
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getWorkingDirectory
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
comment|// default value
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|conf
operator|.
name|getNumTasksToExecutePerJvm
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertNull
argument_list|(
name|conf
operator|.
name|getKeyFieldComparatorOption
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setKeyFieldComparatorOptions
argument_list|(
literal|"keySpec"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"keySpec"
argument_list|,
name|conf
operator|.
name|getKeyFieldComparatorOption
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertFalse
argument_list|(
name|conf
operator|.
name|getUseNewReducer
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setUseNewReducer
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getUseNewReducer
argument_list|()
argument_list|)
expr_stmt|;
comment|// default
name|assertTrue
argument_list|(
name|conf
operator|.
name|getMapSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getReduceSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReduceSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapSpeculativeExecution
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|conf
operator|.
name|getSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|conf
operator|.
name|getMapSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|conf
operator|.
name|getReduceSpeculativeExecution
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setSessionId
argument_list|(
literal|"ses"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ses"
argument_list|,
name|conf
operator|.
name|getSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|conf
operator|.
name|getMaxTaskFailuresPerTracker
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxTaskFailuresPerTracker
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|conf
operator|.
name|getMaxTaskFailuresPerTracker
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|conf
operator|.
name|getMaxMapTaskFailuresPercent
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxMapTaskFailuresPercent
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|conf
operator|.
name|getMaxMapTaskFailuresPercent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|conf
operator|.
name|getMaxReduceTaskFailuresPercent
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxReduceTaskFailuresPercent
argument_list|(
literal|70
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|70
argument_list|,
name|conf
operator|.
name|getMaxReduceTaskFailuresPercent
argument_list|()
argument_list|)
expr_stmt|;
comment|// by default
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setJobPriority
argument_list|(
name|JobPriority
operator|.
name|HIGH
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|HIGH
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|getJobSubmitHostName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setJobSubmitHostName
argument_list|(
literal|"hostname"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hostname"
argument_list|,
name|conf
operator|.
name|getJobSubmitHostName
argument_list|()
argument_list|)
expr_stmt|;
comment|// default
name|assertNull
argument_list|(
name|conf
operator|.
name|getJobSubmitHostAddress
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setJobSubmitHostAddress
argument_list|(
literal|"ww"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ww"
argument_list|,
name|conf
operator|.
name|getJobSubmitHostAddress
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertFalse
argument_list|(
name|conf
operator|.
name|getProfileEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setProfileEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|conf
operator|.
name|getProfileEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertEquals
argument_list|(
name|conf
operator|.
name|getProfileTaskRange
argument_list|(
literal|true
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"0-2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|conf
operator|.
name|getProfileTaskRange
argument_list|(
literal|false
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"0-2"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setProfileTaskRange
argument_list|(
literal|true
argument_list|,
literal|"0-3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|conf
operator|.
name|getProfileTaskRange
argument_list|(
literal|false
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"0-2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|conf
operator|.
name|getProfileTaskRange
argument_list|(
literal|true
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|"0-3"
argument_list|)
expr_stmt|;
comment|// default value
name|assertNull
argument_list|(
name|conf
operator|.
name|getMapDebugScript
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMapDebugScript
argument_list|(
literal|"mDbgScript"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mDbgScript"
argument_list|,
name|conf
operator|.
name|getMapDebugScript
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertNull
argument_list|(
name|conf
operator|.
name|getReduceDebugScript
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setReduceDebugScript
argument_list|(
literal|"rDbgScript"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rDbgScript"
argument_list|,
name|conf
operator|.
name|getReduceDebugScript
argument_list|()
argument_list|)
expr_stmt|;
comment|// default value
name|assertNull
argument_list|(
name|conf
operator|.
name|getJobLocalDir
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|conf
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setQueueName
argument_list|(
literal|"qname"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"qname"
argument_list|,
name|conf
operator|.
name|getQueueName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMemoryForMapTask
argument_list|(
literal|100
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
operator|*
literal|1000
argument_list|,
name|conf
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMemoryForReduceTask
argument_list|(
literal|1000
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
operator|*
literal|1000
argument_list|,
name|conf
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|conf
operator|.
name|getMaxPhysicalMemoryForTask
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The variable key is no longer used."
argument_list|,
name|JobConf
operator|.
name|deprecatedString
argument_list|(
literal|"key"
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure mapreduce.map|reduce.java.opts are not set by default
comment|// so that they won't override mapred.child.java.opts
name|assertNull
argument_list|(
literal|"mapreduce.map.java.opts should not be set by default"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|JobConf
operator|.
name|MAPRED_MAP_TASK_JAVA_OPTS
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"mapreduce.reduce.java.opts should not be set by default"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|JobConf
operator|.
name|MAPRED_REDUCE_TASK_JAVA_OPTS
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Ensure that M/R 1.x applications can get and set task virtual memory with    * old property names    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testDeprecatedPropertyNameForTaskVmem ()
specifier|public
name|void
name|testDeprecatedPropertyNameForTaskVmem
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setLong
argument_list|(
name|JobConf
operator|.
name|MAPRED_JOB_MAP_MEMORY_MB_PROPERTY
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setLong
argument_list|(
name|JobConf
operator|.
name|MAPRED_JOB_REDUCE_MEMORY_MB_PROPERTY
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1024
argument_list|,
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1024
argument_list|,
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure new property names aren't broken by the old ones
name|configuration
operator|.
name|setLong
argument_list|(
name|JobConf
operator|.
name|MAPREDUCE_JOB_MAP_MEMORY_MB_PROPERTY
argument_list|,
literal|1025
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setLong
argument_list|(
name|JobConf
operator|.
name|MAPREDUCE_JOB_REDUCE_MEMORY_MB_PROPERTY
argument_list|,
literal|1025
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1025
argument_list|,
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1025
argument_list|,
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setMemoryForMapTask
argument_list|(
literal|2048
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setMemoryForReduceTask
argument_list|(
literal|2048
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|configuration
operator|.
name|getLong
argument_list|(
name|JobConf
operator|.
name|MAPRED_JOB_MAP_MEMORY_MB_PROPERTY
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|configuration
operator|.
name|getLong
argument_list|(
name|JobConf
operator|.
name|MAPRED_JOB_REDUCE_MEMORY_MB_PROPERTY
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure new property names aren't broken by the old ones
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|configuration
operator|.
name|getLong
argument_list|(
name|JobConf
operator|.
name|MAPREDUCE_JOB_MAP_MEMORY_MB_PROPERTY
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|configuration
operator|.
name|getLong
argument_list|(
name|JobConf
operator|.
name|MAPREDUCE_JOB_REDUCE_MEMORY_MB_PROPERTY
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProfileParamsDefaults ()
specifier|public
name|void
name|testProfileParamsDefaults
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|String
name|result
init|=
name|configuration
operator|.
name|getProfileParams
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|result
operator|.
name|contains
argument_list|(
literal|"file=%s"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|result
operator|.
name|startsWith
argument_list|(
literal|"-agentlib:hprof"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProfileParamsSetter ()
specifier|public
name|void
name|testProfileParamsSetter
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setProfileParams
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|configuration
operator|.
name|get
argument_list|(
name|MRJobConfig
operator|.
name|TASK_PROFILE_PARAMS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testProfileParamsGetter ()
specifier|public
name|void
name|testProfileParamsGetter
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|TASK_PROFILE_PARAMS
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|configuration
operator|.
name|getProfileParams
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing mapred.task.maxvmem replacement with new values    *    */
annotation|@
name|Test
DECL|method|testMemoryConfigForMapOrReduceTask ()
specifier|public
name|void
name|testMemoryConfigForMapOrReduceTask
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|400
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_MAP_MEMORY_MB
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_REDUCE_MEMORY_MB
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test that negative values for MAPRED_TASK_MAXVMEM_PROPERTY cause    * new configuration keys' values to be used.    */
annotation|@
name|Test
DECL|method|testNegativeValueForTaskVmem ()
specifier|public
name|void
name|testNegativeValueForTaskVmem
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|JobConf
operator|.
name|MAPRED_TASK_MAXVMEM_PROPERTY
argument_list|,
literal|"-3"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_MAP_MEMORY_MB
argument_list|,
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_REDUCE_MEMORY_MB
argument_list|,
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test that negative values for new configuration keys get passed through.    */
annotation|@
name|Test
DECL|method|testNegativeValuesForMemoryParams ()
specifier|public
name|void
name|testNegativeValuesForMemoryParams
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
literal|"-5"
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
literal|"-6"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_MAP_MEMORY_MB
argument_list|,
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|MRJobConfig
operator|.
name|DEFAULT_REDUCE_MEMORY_MB
argument_list|,
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    *   Test deprecated accessor and mutator method for mapred.task.maxvmem    */
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|testMaxVirtualMemoryForTask ()
specifier|public
name|void
name|testMaxVirtualMemoryForTask
parameter_list|()
block|{
name|JobConf
name|configuration
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
comment|//get test case
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMaxVirtualMemoryForTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMaxVirtualMemoryForTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMaxVirtualMemoryForTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"mapred.task.maxvmem"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMaxVirtualMemoryForTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
comment|//set test case
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setMaxVirtualMemoryForTask
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|configuration
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setMaxVirtualMemoryForTask
argument_list|(
literal|2
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForMapTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|configuration
operator|.
name|getMemoryForReduceTask
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
comment|/**    * Ensure that by default JobContext.MAX_TASK_FAILURES_PER_TRACKER is less    * JobContext.MAP_MAX_ATTEMPTS and JobContext.REDUCE_MAX_ATTEMPTS so that    * failed tasks will be retried on other nodes    */
annotation|@
name|Test
DECL|method|testMaxTaskFailuresPerTracker ()
specifier|public
name|void
name|testMaxTaskFailuresPerTracker
parameter_list|()
block|{
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"By default JobContext.MAX_TASK_FAILURES_PER_TRACKER was "
operator|+
literal|"not less than JobContext.MAP_MAX_ATTEMPTS and REDUCE_MAX_ATTEMPTS"
argument_list|,
name|jobConf
operator|.
name|getMaxTaskFailuresPerTracker
argument_list|()
operator|<
name|jobConf
operator|.
name|getMaxMapAttempts
argument_list|()
operator|&&
name|jobConf
operator|.
name|getMaxTaskFailuresPerTracker
argument_list|()
operator|<
name|jobConf
operator|.
name|getMaxReduceAttempts
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test parsing various types of Java heap options.    */
annotation|@
name|Test
DECL|method|testParseMaximumHeapSizeMB ()
specifier|public
name|void
name|testParseMaximumHeapSizeMB
parameter_list|()
block|{
comment|// happy cases
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4096
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|"-Xmx4294967296"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4096
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|"-Xmx4194304k"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4096
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|"-Xmx4096m"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4096
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|"-Xmx4g"
argument_list|)
argument_list|)
expr_stmt|;
comment|// sad cases
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|"-Xmx4?"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test various Job Priority    */
annotation|@
name|Test
DECL|method|testJobPriorityConf ()
specifier|public
name|void
name|testJobPriorityConf
parameter_list|()
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
comment|// by default
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set JobPriority.LOW using old API, and verify output from both getter
name|conf
operator|.
name|setJobPriority
argument_list|(
name|JobPriority
operator|.
name|LOW
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|LOW
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set JobPriority.VERY_HIGH using old API, and verify output
name|conf
operator|.
name|setJobPriority
argument_list|(
name|JobPriority
operator|.
name|VERY_HIGH
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|VERY_HIGH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set 3 as priority using new API, and verify output from both getter
name|conf
operator|.
name|setJobPriorityAsInteger
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|NORMAL
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set 4 as priority using new API, and verify output
name|conf
operator|.
name|setJobPriorityAsInteger
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|HIGH
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now set some high integer values and verify output from old api
name|conf
operator|.
name|setJobPriorityAsInteger
argument_list|(
literal|57
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|UNDEFINED_PRIORITY
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|57
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
comment|// Error case where UNDEFINED_PRIORITY is set explicitly
name|conf
operator|.
name|setJobPriority
argument_list|(
name|JobPriority
operator|.
name|UNDEFINED_PRIORITY
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|conf
operator|.
name|getJobPriority
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|JobPriority
operator|.
name|UNDEFINED_PRIORITY
argument_list|)
expr_stmt|;
comment|// As UNDEFINED_PRIORITY cannot be mapped to any integer value, resetting
comment|// to default as 0.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|conf
operator|.
name|getJobPriorityAsInteger
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

