begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemTestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Tests for JobSubmissionFiles Utility class.  */
end_comment

begin_class
DECL|class|TestJobSubmissionFiles
specifier|public
class|class
name|TestJobSubmissionFiles
block|{
DECL|field|USER_1
specifier|final
specifier|private
specifier|static
name|String
name|USER_1
init|=
literal|"user1@HADOOP.APACHE.ORG"
decl_stmt|;
DECL|field|USER_1_SHORT_NAME
specifier|final
specifier|private
specifier|static
name|String
name|USER_1_SHORT_NAME
init|=
literal|"user1"
decl_stmt|;
DECL|field|GROUP1_NAME
specifier|final
specifier|private
specifier|static
name|String
name|GROUP1_NAME
init|=
literal|"group1"
decl_stmt|;
DECL|field|GROUP2_NAME
specifier|final
specifier|private
specifier|static
name|String
name|GROUP2_NAME
init|=
literal|"group2"
decl_stmt|;
DECL|field|GROUP3_NAME
specifier|final
specifier|private
specifier|static
name|String
name|GROUP3_NAME
init|=
literal|"group3"
decl_stmt|;
DECL|field|GROUP_NAMES
specifier|final
specifier|private
specifier|static
name|String
index|[]
name|GROUP_NAMES
init|=
operator|new
name|String
index|[]
block|{
name|GROUP1_NAME
block|,
name|GROUP2_NAME
block|,
name|GROUP3_NAME
block|}
decl_stmt|;
annotation|@
name|Test
DECL|method|testGetStagingDirWhenFullFileOwnerNameAndFullUserName ()
specifier|public
name|void
name|testGetStagingDirWhenFullFileOwnerNameAndFullUserName
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Cluster
name|cluster
init|=
name|mock
argument_list|(
name|Cluster
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Path
name|stagingPath
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|user
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
name|USER_1
argument_list|,
name|GROUP_NAMES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_1
argument_list|,
name|user
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
operator|new
name|FileSystemTestHelper
operator|.
name|MockFileSystem
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|cluster
operator|.
name|getStagingAreaDir
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|stagingPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|stagingPath
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs
argument_list|)
expr_stmt|;
comment|//Staging directory owner full principal name is in lower case.
name|String
name|stagingDirOwner
init|=
name|USER_1
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|FileStatus
name|fileStatus
init|=
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingPath
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|stagingPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingPath
argument_list|,
name|JobSubmissionFiles
operator|.
name|getStagingDir
argument_list|(
name|cluster
argument_list|,
name|conf
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
comment|//Staging directory owner full principal name in upper and lower case
name|stagingDirOwner
operator|=
name|USER_1
expr_stmt|;
name|fileStatus
operator|=
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|stagingPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingPath
argument_list|,
name|JobSubmissionFiles
operator|.
name|getStagingDir
argument_list|(
name|cluster
argument_list|,
name|conf
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IOException
operator|.
name|class
argument_list|)
DECL|method|testGetStagingWhenFileOwnerNameAndCurrentUserNameDoesNotMatch ()
specifier|public
name|void
name|testGetStagingWhenFileOwnerNameAndCurrentUserNameDoesNotMatch
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Cluster
name|cluster
init|=
name|mock
argument_list|(
name|Cluster
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|String
name|stagingDirOwner
init|=
literal|"someuser"
decl_stmt|;
name|Path
name|stagingPath
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|user
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
name|USER_1
argument_list|,
name|GROUP_NAMES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_1
argument_list|,
name|user
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
operator|new
name|FileSystemTestHelper
operator|.
name|MockFileSystem
argument_list|()
decl_stmt|;
name|FileStatus
name|fileStatus
init|=
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingPath
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|stagingPath
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|stagingPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|cluster
operator|.
name|getStagingAreaDir
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|stagingPath
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingPath
argument_list|,
name|JobSubmissionFiles
operator|.
name|getStagingDir
argument_list|(
name|cluster
argument_list|,
name|conf
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStagingDirWhenShortFileOwnerNameAndFullUserName ()
specifier|public
name|void
name|testGetStagingDirWhenShortFileOwnerNameAndFullUserName
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Cluster
name|cluster
init|=
name|mock
argument_list|(
name|Cluster
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|String
name|stagingDirOwner
init|=
name|USER_1_SHORT_NAME
decl_stmt|;
name|Path
name|stagingPath
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|user
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
name|USER_1
argument_list|,
name|GROUP_NAMES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_1
argument_list|,
name|user
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
operator|new
name|FileSystemTestHelper
operator|.
name|MockFileSystem
argument_list|()
decl_stmt|;
name|FileStatus
name|fileStatus
init|=
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingPath
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|stagingPath
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|stagingPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|cluster
operator|.
name|getStagingAreaDir
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|stagingPath
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingPath
argument_list|,
name|JobSubmissionFiles
operator|.
name|getStagingDir
argument_list|(
name|cluster
argument_list|,
name|conf
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetStagingDirWhenShortFileOwnerNameAndShortUserName ()
specifier|public
name|void
name|testGetStagingDirWhenShortFileOwnerNameAndShortUserName
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Cluster
name|cluster
init|=
name|mock
argument_list|(
name|Cluster
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|String
name|stagingDirOwner
init|=
name|USER_1_SHORT_NAME
decl_stmt|;
name|Path
name|stagingPath
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|UserGroupInformation
name|user
init|=
name|UserGroupInformation
operator|.
name|createUserForTesting
argument_list|(
name|USER_1_SHORT_NAME
argument_list|,
name|GROUP_NAMES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|USER_1_SHORT_NAME
argument_list|,
name|user
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
operator|new
name|FileSystemTestHelper
operator|.
name|MockFileSystem
argument_list|()
decl_stmt|;
name|FileStatus
name|fileStatus
init|=
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingDirOwner
argument_list|,
name|stagingPath
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|stagingPath
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|stagingPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileStatus
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|cluster
operator|.
name|getStagingAreaDir
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|stagingPath
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingPath
argument_list|,
name|JobSubmissionFiles
operator|.
name|getStagingDir
argument_list|(
name|cluster
argument_list|,
name|conf
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

