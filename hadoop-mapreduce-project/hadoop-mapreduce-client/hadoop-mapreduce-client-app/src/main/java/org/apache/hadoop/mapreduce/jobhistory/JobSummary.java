begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.jobhistory
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|jobhistory
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_class
DECL|class|JobSummary
specifier|public
class|class
name|JobSummary
block|{
DECL|field|jobId
specifier|private
name|JobId
name|jobId
decl_stmt|;
DECL|field|jobSubmitTime
specifier|private
name|long
name|jobSubmitTime
decl_stmt|;
DECL|field|jobLaunchTime
specifier|private
name|long
name|jobLaunchTime
decl_stmt|;
DECL|field|firstMapTaskLaunchTime
specifier|private
name|long
name|firstMapTaskLaunchTime
decl_stmt|;
comment|// MapAttempteStarted |
comment|// TaskAttemptStartEvent
DECL|field|firstReduceTaskLaunchTime
specifier|private
name|long
name|firstReduceTaskLaunchTime
decl_stmt|;
comment|// ReduceAttemptStarted |
comment|// TaskAttemptStartEvent
DECL|field|jobFinishTime
specifier|private
name|long
name|jobFinishTime
decl_stmt|;
DECL|field|numFinishedMaps
specifier|private
name|int
name|numFinishedMaps
decl_stmt|;
DECL|field|numFailedMaps
specifier|private
name|int
name|numFailedMaps
decl_stmt|;
DECL|field|numFinishedReduces
specifier|private
name|int
name|numFinishedReduces
decl_stmt|;
DECL|field|numFailedReduces
specifier|private
name|int
name|numFailedReduces
decl_stmt|;
DECL|field|resourcesPerMap
specifier|private
name|int
name|resourcesPerMap
decl_stmt|;
comment|// resources used per map/min resource
DECL|field|resourcesPerReduce
specifier|private
name|int
name|resourcesPerReduce
decl_stmt|;
comment|// resources used per reduce/min resource
comment|// resource models
comment|// private int numSlotsPerReduce; | Doesn't make sense with potentially
comment|// different resource models
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|queue
specifier|private
name|String
name|queue
decl_stmt|;
DECL|field|jobStatus
specifier|private
name|String
name|jobStatus
decl_stmt|;
DECL|field|mapSlotSeconds
specifier|private
name|long
name|mapSlotSeconds
decl_stmt|;
comment|// TODO Not generated yet in MRV2
DECL|field|reduceSlotSeconds
specifier|private
name|long
name|reduceSlotSeconds
decl_stmt|;
comment|// TODO Not generated yet MRV2
comment|// private int clusterSlotCapacity;
DECL|field|jobName
specifier|private
name|String
name|jobName
decl_stmt|;
DECL|method|JobSummary ()
name|JobSummary
parameter_list|()
block|{   }
DECL|method|getJobId ()
specifier|public
name|JobId
name|getJobId
parameter_list|()
block|{
return|return
name|jobId
return|;
block|}
DECL|method|setJobId (JobId jobId)
specifier|public
name|void
name|setJobId
parameter_list|(
name|JobId
name|jobId
parameter_list|)
block|{
name|this
operator|.
name|jobId
operator|=
name|jobId
expr_stmt|;
block|}
DECL|method|getJobSubmitTime ()
specifier|public
name|long
name|getJobSubmitTime
parameter_list|()
block|{
return|return
name|jobSubmitTime
return|;
block|}
DECL|method|setJobSubmitTime (long jobSubmitTime)
specifier|public
name|void
name|setJobSubmitTime
parameter_list|(
name|long
name|jobSubmitTime
parameter_list|)
block|{
name|this
operator|.
name|jobSubmitTime
operator|=
name|jobSubmitTime
expr_stmt|;
block|}
DECL|method|getJobLaunchTime ()
specifier|public
name|long
name|getJobLaunchTime
parameter_list|()
block|{
return|return
name|jobLaunchTime
return|;
block|}
DECL|method|setJobLaunchTime (long jobLaunchTime)
specifier|public
name|void
name|setJobLaunchTime
parameter_list|(
name|long
name|jobLaunchTime
parameter_list|)
block|{
name|this
operator|.
name|jobLaunchTime
operator|=
name|jobLaunchTime
expr_stmt|;
block|}
DECL|method|getFirstMapTaskLaunchTime ()
specifier|public
name|long
name|getFirstMapTaskLaunchTime
parameter_list|()
block|{
return|return
name|firstMapTaskLaunchTime
return|;
block|}
DECL|method|setFirstMapTaskLaunchTime (long firstMapTaskLaunchTime)
specifier|public
name|void
name|setFirstMapTaskLaunchTime
parameter_list|(
name|long
name|firstMapTaskLaunchTime
parameter_list|)
block|{
name|this
operator|.
name|firstMapTaskLaunchTime
operator|=
name|firstMapTaskLaunchTime
expr_stmt|;
block|}
DECL|method|getFirstReduceTaskLaunchTime ()
specifier|public
name|long
name|getFirstReduceTaskLaunchTime
parameter_list|()
block|{
return|return
name|firstReduceTaskLaunchTime
return|;
block|}
DECL|method|setFirstReduceTaskLaunchTime (long firstReduceTaskLaunchTime)
specifier|public
name|void
name|setFirstReduceTaskLaunchTime
parameter_list|(
name|long
name|firstReduceTaskLaunchTime
parameter_list|)
block|{
name|this
operator|.
name|firstReduceTaskLaunchTime
operator|=
name|firstReduceTaskLaunchTime
expr_stmt|;
block|}
DECL|method|getJobFinishTime ()
specifier|public
name|long
name|getJobFinishTime
parameter_list|()
block|{
return|return
name|jobFinishTime
return|;
block|}
DECL|method|setJobFinishTime (long jobFinishTime)
specifier|public
name|void
name|setJobFinishTime
parameter_list|(
name|long
name|jobFinishTime
parameter_list|)
block|{
name|this
operator|.
name|jobFinishTime
operator|=
name|jobFinishTime
expr_stmt|;
block|}
DECL|method|getNumFinishedMaps ()
specifier|public
name|int
name|getNumFinishedMaps
parameter_list|()
block|{
return|return
name|numFinishedMaps
return|;
block|}
DECL|method|setNumFinishedMaps (int numFinishedMaps)
specifier|public
name|void
name|setNumFinishedMaps
parameter_list|(
name|int
name|numFinishedMaps
parameter_list|)
block|{
name|this
operator|.
name|numFinishedMaps
operator|=
name|numFinishedMaps
expr_stmt|;
block|}
DECL|method|getNumFailedMaps ()
specifier|public
name|int
name|getNumFailedMaps
parameter_list|()
block|{
return|return
name|numFailedMaps
return|;
block|}
DECL|method|setNumFailedMaps (int numFailedMaps)
specifier|public
name|void
name|setNumFailedMaps
parameter_list|(
name|int
name|numFailedMaps
parameter_list|)
block|{
name|this
operator|.
name|numFailedMaps
operator|=
name|numFailedMaps
expr_stmt|;
block|}
DECL|method|getResourcesPerMap ()
specifier|public
name|int
name|getResourcesPerMap
parameter_list|()
block|{
return|return
name|resourcesPerMap
return|;
block|}
DECL|method|setResourcesPerMap (int resourcesPerMap)
specifier|public
name|void
name|setResourcesPerMap
parameter_list|(
name|int
name|resourcesPerMap
parameter_list|)
block|{
name|this
operator|.
name|resourcesPerMap
operator|=
name|resourcesPerMap
expr_stmt|;
block|}
DECL|method|getNumFinishedReduces ()
specifier|public
name|int
name|getNumFinishedReduces
parameter_list|()
block|{
return|return
name|numFinishedReduces
return|;
block|}
DECL|method|setNumFinishedReduces (int numFinishedReduces)
specifier|public
name|void
name|setNumFinishedReduces
parameter_list|(
name|int
name|numFinishedReduces
parameter_list|)
block|{
name|this
operator|.
name|numFinishedReduces
operator|=
name|numFinishedReduces
expr_stmt|;
block|}
DECL|method|getNumFailedReduces ()
specifier|public
name|int
name|getNumFailedReduces
parameter_list|()
block|{
return|return
name|numFailedReduces
return|;
block|}
DECL|method|setNumFailedReduces (int numFailedReduces)
specifier|public
name|void
name|setNumFailedReduces
parameter_list|(
name|int
name|numFailedReduces
parameter_list|)
block|{
name|this
operator|.
name|numFailedReduces
operator|=
name|numFailedReduces
expr_stmt|;
block|}
DECL|method|getResourcesPerReduce ()
specifier|public
name|int
name|getResourcesPerReduce
parameter_list|()
block|{
return|return
name|this
operator|.
name|resourcesPerReduce
return|;
block|}
DECL|method|setResourcesPerReduce (int resourcesPerReduce)
specifier|public
name|void
name|setResourcesPerReduce
parameter_list|(
name|int
name|resourcesPerReduce
parameter_list|)
block|{
name|this
operator|.
name|resourcesPerReduce
operator|=
name|resourcesPerReduce
expr_stmt|;
block|}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|setUser (String user)
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
return|return
name|queue
return|;
block|}
DECL|method|setQueue (String queue)
specifier|public
name|void
name|setQueue
parameter_list|(
name|String
name|queue
parameter_list|)
block|{
name|this
operator|.
name|queue
operator|=
name|queue
expr_stmt|;
block|}
DECL|method|getJobStatus ()
specifier|public
name|String
name|getJobStatus
parameter_list|()
block|{
return|return
name|jobStatus
return|;
block|}
DECL|method|setJobStatus (String jobStatus)
specifier|public
name|void
name|setJobStatus
parameter_list|(
name|String
name|jobStatus
parameter_list|)
block|{
name|this
operator|.
name|jobStatus
operator|=
name|jobStatus
expr_stmt|;
block|}
DECL|method|getMapSlotSeconds ()
specifier|public
name|long
name|getMapSlotSeconds
parameter_list|()
block|{
return|return
name|mapSlotSeconds
return|;
block|}
DECL|method|setMapSlotSeconds (long mapSlotSeconds)
specifier|public
name|void
name|setMapSlotSeconds
parameter_list|(
name|long
name|mapSlotSeconds
parameter_list|)
block|{
name|this
operator|.
name|mapSlotSeconds
operator|=
name|mapSlotSeconds
expr_stmt|;
block|}
DECL|method|getReduceSlotSeconds ()
specifier|public
name|long
name|getReduceSlotSeconds
parameter_list|()
block|{
return|return
name|reduceSlotSeconds
return|;
block|}
DECL|method|setReduceSlotSeconds (long reduceSlotSeconds)
specifier|public
name|void
name|setReduceSlotSeconds
parameter_list|(
name|long
name|reduceSlotSeconds
parameter_list|)
block|{
name|this
operator|.
name|reduceSlotSeconds
operator|=
name|reduceSlotSeconds
expr_stmt|;
block|}
DECL|method|getJobName ()
specifier|public
name|String
name|getJobName
parameter_list|()
block|{
return|return
name|jobName
return|;
block|}
DECL|method|setJobName (String jobName)
specifier|public
name|void
name|setJobName
parameter_list|(
name|String
name|jobName
parameter_list|)
block|{
name|this
operator|.
name|jobName
operator|=
name|jobName
expr_stmt|;
block|}
DECL|method|getJobSummaryString ()
specifier|public
name|String
name|getJobSummaryString
parameter_list|()
block|{
name|SummaryBuilder
name|summary
init|=
operator|new
name|SummaryBuilder
argument_list|()
operator|.
name|add
argument_list|(
literal|"jobId"
argument_list|,
name|jobId
argument_list|)
operator|.
name|add
argument_list|(
literal|"submitTime"
argument_list|,
name|jobSubmitTime
argument_list|)
operator|.
name|add
argument_list|(
literal|"launchTime"
argument_list|,
name|jobLaunchTime
argument_list|)
operator|.
name|add
argument_list|(
literal|"firstMapTaskLaunchTime"
argument_list|,
name|firstMapTaskLaunchTime
argument_list|)
operator|.
name|add
argument_list|(
literal|"firstReduceTaskLaunchTime"
argument_list|,
name|firstReduceTaskLaunchTime
argument_list|)
operator|.
name|add
argument_list|(
literal|"finishTime"
argument_list|,
name|jobFinishTime
argument_list|)
operator|.
name|add
argument_list|(
literal|"resourcesPerMap"
argument_list|,
name|resourcesPerMap
argument_list|)
operator|.
name|add
argument_list|(
literal|"resourcesPerReduce"
argument_list|,
name|resourcesPerReduce
argument_list|)
operator|.
name|add
argument_list|(
literal|"numMaps"
argument_list|,
name|numFinishedMaps
operator|+
name|numFailedMaps
argument_list|)
operator|.
name|add
argument_list|(
literal|"numReduces"
argument_list|,
name|numFinishedReduces
operator|+
name|numFailedReduces
argument_list|)
operator|.
name|add
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
operator|.
name|add
argument_list|(
literal|"queue"
argument_list|,
name|queue
argument_list|)
operator|.
name|add
argument_list|(
literal|"status"
argument_list|,
name|jobStatus
argument_list|)
operator|.
name|add
argument_list|(
literal|"mapSlotSeconds"
argument_list|,
name|mapSlotSeconds
argument_list|)
operator|.
name|add
argument_list|(
literal|"reduceSlotSeconds"
argument_list|,
name|reduceSlotSeconds
argument_list|)
operator|.
name|add
argument_list|(
literal|"jobName"
argument_list|,
name|jobName
argument_list|)
decl_stmt|;
return|return
name|summary
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|field|EQUALS
specifier|static
specifier|final
name|char
name|EQUALS
init|=
literal|'='
decl_stmt|;
DECL|field|charsToEscape
specifier|static
specifier|final
name|char
index|[]
name|charsToEscape
init|=
block|{
name|StringUtils
operator|.
name|COMMA
block|,
name|EQUALS
block|,
name|StringUtils
operator|.
name|ESCAPE_CHAR
block|}
decl_stmt|;
DECL|class|SummaryBuilder
specifier|static
class|class
name|SummaryBuilder
block|{
DECL|field|buffer
specifier|final
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
comment|// A little optimization for a very common case
DECL|method|add (String key, long value)
name|SummaryBuilder
name|add
parameter_list|(
name|String
name|key
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|_add
argument_list|(
name|key
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
DECL|method|add (String key, T value)
parameter_list|<
name|T
parameter_list|>
name|SummaryBuilder
name|add
parameter_list|(
name|String
name|key
parameter_list|,
name|T
name|value
parameter_list|)
block|{
return|return
name|_add
argument_list|(
name|key
argument_list|,
name|StringUtils
operator|.
name|escapeString
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|value
argument_list|)
argument_list|,
name|StringUtils
operator|.
name|ESCAPE_CHAR
argument_list|,
name|charsToEscape
argument_list|)
argument_list|)
return|;
block|}
DECL|method|add (SummaryBuilder summary)
name|SummaryBuilder
name|add
parameter_list|(
name|SummaryBuilder
name|summary
parameter_list|)
block|{
if|if
condition|(
name|buffer
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|buffer
operator|.
name|append
argument_list|(
name|StringUtils
operator|.
name|COMMA
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|summary
operator|.
name|buffer
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|_add (String key, String value)
name|SummaryBuilder
name|_add
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|buffer
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|buffer
operator|.
name|append
argument_list|(
name|StringUtils
operator|.
name|COMMA
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|key
argument_list|)
operator|.
name|append
argument_list|(
name|EQUALS
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

