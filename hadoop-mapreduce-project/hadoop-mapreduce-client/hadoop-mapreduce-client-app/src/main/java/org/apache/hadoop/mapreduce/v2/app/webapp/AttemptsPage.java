begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|AMParams
operator|.
name|TASK_TYPE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|AMParams
operator|.
name|ATTEMPT_STATE
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskAttemptState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|TaskAttempt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|dao
operator|.
name|TaskAttemptInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
operator|.
name|TaskAttemptStateUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|SubView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_class
DECL|class|AttemptsPage
specifier|public
class|class
name|AttemptsPage
extends|extends
name|TaskPage
block|{
DECL|class|FewAttemptsBlock
specifier|static
class|class
name|FewAttemptsBlock
extends|extends
name|TaskPage
operator|.
name|AttemptsBlock
block|{
annotation|@
name|Inject
DECL|method|FewAttemptsBlock (App ctx, Configuration conf)
name|FewAttemptsBlock
parameter_list|(
name|App
name|ctx
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|ctx
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isValidRequest ()
specifier|protected
name|boolean
name|isValidRequest
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|getAttemptId (TaskId taskId, TaskAttemptInfo ta)
specifier|protected
name|String
name|getAttemptId
parameter_list|(
name|TaskId
name|taskId
parameter_list|,
name|TaskAttemptInfo
name|ta
parameter_list|)
block|{
return|return
literal|"<a href='"
operator|+
name|url
argument_list|(
literal|"task"
argument_list|,
name|taskId
operator|.
name|toString
argument_list|()
argument_list|)
operator|+
literal|"'>"
operator|+
name|ta
operator|.
name|getId
argument_list|()
operator|+
literal|"</a>"
return|;
block|}
annotation|@
name|Override
DECL|method|getTaskAttempts ()
specifier|protected
name|Collection
argument_list|<
name|TaskAttempt
argument_list|>
name|getTaskAttempts
parameter_list|()
block|{
name|List
argument_list|<
name|TaskAttempt
argument_list|>
name|fewTaskAttemps
init|=
operator|new
name|ArrayList
argument_list|<
name|TaskAttempt
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|taskTypeStr
init|=
name|$
argument_list|(
name|TASK_TYPE
argument_list|)
decl_stmt|;
name|TaskType
name|taskType
init|=
name|MRApps
operator|.
name|taskType
argument_list|(
name|taskTypeStr
argument_list|)
decl_stmt|;
name|String
name|attemptStateStr
init|=
name|$
argument_list|(
name|ATTEMPT_STATE
argument_list|)
decl_stmt|;
name|TaskAttemptStateUI
name|neededState
init|=
name|MRApps
operator|.
name|taskAttemptState
argument_list|(
name|attemptStateStr
argument_list|)
decl_stmt|;
for|for
control|(
name|Task
name|task
range|:
name|super
operator|.
name|app
operator|.
name|getJob
argument_list|()
operator|.
name|getTasks
argument_list|(
name|taskType
argument_list|)
operator|.
name|values
argument_list|()
control|)
block|{
name|Map
argument_list|<
name|TaskAttemptId
argument_list|,
name|TaskAttempt
argument_list|>
name|attempts
init|=
name|task
operator|.
name|getAttempts
argument_list|()
decl_stmt|;
for|for
control|(
name|TaskAttempt
name|attempt
range|:
name|attempts
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|neededState
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
name|fewTaskAttemps
operator|.
name|add
argument_list|(
name|attempt
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|fewTaskAttemps
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|content ()
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|SubView
argument_list|>
name|content
parameter_list|()
block|{
return|return
name|FewAttemptsBlock
operator|.
name|class
return|;
block|}
block|}
end_class

end_unit

