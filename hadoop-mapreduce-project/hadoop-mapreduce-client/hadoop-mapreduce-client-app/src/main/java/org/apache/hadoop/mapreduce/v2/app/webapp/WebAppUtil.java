begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
package|;
end_package

begin_class
DECL|class|WebAppUtil
specifier|public
class|class
name|WebAppUtil
block|{
DECL|field|isSSLEnabledInYARN
specifier|private
specifier|static
name|boolean
name|isSSLEnabledInYARN
decl_stmt|;
DECL|method|setSSLEnabledInYARN (boolean isSSLEnabledInYARN)
specifier|public
specifier|static
name|void
name|setSSLEnabledInYARN
parameter_list|(
name|boolean
name|isSSLEnabledInYARN
parameter_list|)
block|{
name|WebAppUtil
operator|.
name|isSSLEnabledInYARN
operator|=
name|isSSLEnabledInYARN
expr_stmt|;
block|}
DECL|method|isSSLEnabledInYARN ()
specifier|public
specifier|static
name|boolean
name|isSSLEnabledInYARN
parameter_list|()
block|{
return|return
name|isSSLEnabledInYARN
return|;
block|}
DECL|method|getSchemePrefix ()
specifier|public
specifier|static
name|String
name|getSchemePrefix
parameter_list|()
block|{
if|if
condition|(
name|isSSLEnabledInYARN
condition|)
block|{
return|return
literal|"https://"
return|;
block|}
else|else
block|{
return|return
literal|"http://"
return|;
block|}
block|}
block|}
end_class

end_unit

