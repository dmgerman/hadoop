begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|CounterGroup
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"counterGroup"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|CounterGroupInfo
specifier|public
class|class
name|CounterGroupInfo
block|{
DECL|field|counterGroupName
specifier|protected
name|String
name|counterGroupName
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"counter"
argument_list|)
DECL|field|counter
specifier|protected
name|ArrayList
argument_list|<
name|CounterInfo
argument_list|>
name|counter
decl_stmt|;
DECL|method|CounterGroupInfo ()
specifier|public
name|CounterGroupInfo
parameter_list|()
block|{   }
DECL|method|CounterGroupInfo (String name, CounterGroup g, CounterGroup mg, CounterGroup rg)
specifier|public
name|CounterGroupInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|CounterGroup
name|g
parameter_list|,
name|CounterGroup
name|mg
parameter_list|,
name|CounterGroup
name|rg
parameter_list|)
block|{
name|this
operator|.
name|counterGroupName
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|counter
operator|=
operator|new
name|ArrayList
argument_list|<
name|CounterInfo
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Counter
name|c
range|:
name|g
operator|.
name|getAllCounters
argument_list|()
operator|.
name|values
argument_list|()
control|)
block|{
name|Counter
name|mc
init|=
name|mg
operator|==
literal|null
condition|?
literal|null
else|:
name|mg
operator|.
name|getCounter
argument_list|(
name|c
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|Counter
name|rc
init|=
name|rg
operator|==
literal|null
condition|?
literal|null
else|:
name|rg
operator|.
name|getCounter
argument_list|(
name|c
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|CounterInfo
name|cinfo
init|=
operator|new
name|CounterInfo
argument_list|(
name|c
argument_list|,
name|mc
argument_list|,
name|rc
argument_list|)
decl_stmt|;
name|this
operator|.
name|counter
operator|.
name|add
argument_list|(
name|cinfo
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

