begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.job.event
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_class
DECL|class|JobCounterUpdateEvent
specifier|public
class|class
name|JobCounterUpdateEvent
extends|extends
name|JobEvent
block|{
DECL|field|counterUpdates
name|List
argument_list|<
name|CounterIncrementalUpdate
argument_list|>
name|counterUpdates
init|=
literal|null
decl_stmt|;
DECL|method|JobCounterUpdateEvent (JobId jobId)
specifier|public
name|JobCounterUpdateEvent
parameter_list|(
name|JobId
name|jobId
parameter_list|)
block|{
name|super
argument_list|(
name|jobId
argument_list|,
name|JobEventType
operator|.
name|JOB_COUNTER_UPDATE
argument_list|)
expr_stmt|;
name|counterUpdates
operator|=
operator|new
name|ArrayList
argument_list|<
name|JobCounterUpdateEvent
operator|.
name|CounterIncrementalUpdate
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|addCounterUpdate (Enum<?> key, long incrValue)
specifier|public
name|void
name|addCounterUpdate
parameter_list|(
name|Enum
argument_list|<
name|?
argument_list|>
name|key
parameter_list|,
name|long
name|incrValue
parameter_list|)
block|{
name|counterUpdates
operator|.
name|add
argument_list|(
operator|new
name|CounterIncrementalUpdate
argument_list|(
name|key
argument_list|,
name|incrValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getCounterUpdates ()
specifier|public
name|List
argument_list|<
name|CounterIncrementalUpdate
argument_list|>
name|getCounterUpdates
parameter_list|()
block|{
return|return
name|counterUpdates
return|;
block|}
DECL|class|CounterIncrementalUpdate
specifier|public
specifier|static
class|class
name|CounterIncrementalUpdate
block|{
DECL|field|key
name|Enum
argument_list|<
name|?
argument_list|>
name|key
decl_stmt|;
DECL|field|incrValue
name|long
name|incrValue
decl_stmt|;
DECL|method|CounterIncrementalUpdate (Enum<?> key, long incrValue)
specifier|public
name|CounterIncrementalUpdate
parameter_list|(
name|Enum
argument_list|<
name|?
argument_list|>
name|key
parameter_list|,
name|long
name|incrValue
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|incrValue
operator|=
name|incrValue
expr_stmt|;
block|}
DECL|method|getCounterKey ()
specifier|public
name|Enum
argument_list|<
name|?
argument_list|>
name|getCounterKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
DECL|method|getIncrementValue ()
specifier|public
name|long
name|getIncrementValue
parameter_list|()
block|{
return|return
name|incrValue
return|;
block|}
block|}
block|}
end_class

end_unit

