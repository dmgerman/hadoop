begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|join
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|ujoin
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|http
operator|.
name|HttpConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|AMInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|BuilderUtils
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"jobAttempt"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|AMAttemptInfo
specifier|public
class|class
name|AMAttemptInfo
block|{
DECL|field|nodeHttpAddress
specifier|protected
name|String
name|nodeHttpAddress
decl_stmt|;
DECL|field|nodeId
specifier|protected
name|String
name|nodeId
decl_stmt|;
DECL|field|id
specifier|protected
name|int
name|id
decl_stmt|;
DECL|field|startTime
specifier|protected
name|long
name|startTime
decl_stmt|;
DECL|field|containerId
specifier|protected
name|String
name|containerId
decl_stmt|;
DECL|field|logsLink
specifier|protected
name|String
name|logsLink
decl_stmt|;
DECL|method|AMAttemptInfo ()
specifier|public
name|AMAttemptInfo
parameter_list|()
block|{   }
DECL|method|AMAttemptInfo (AMInfo amInfo, String jobId, String user)
specifier|public
name|AMAttemptInfo
parameter_list|(
name|AMInfo
name|amInfo
parameter_list|,
name|String
name|jobId
parameter_list|,
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|nodeHttpAddress
operator|=
literal|""
expr_stmt|;
name|this
operator|.
name|nodeId
operator|=
literal|""
expr_stmt|;
name|String
name|nmHost
init|=
name|amInfo
operator|.
name|getNodeManagerHost
argument_list|()
decl_stmt|;
name|int
name|nmHttpPort
init|=
name|amInfo
operator|.
name|getNodeManagerHttpPort
argument_list|()
decl_stmt|;
name|int
name|nmPort
init|=
name|amInfo
operator|.
name|getNodeManagerPort
argument_list|()
decl_stmt|;
if|if
condition|(
name|nmHost
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|nodeHttpAddress
operator|=
name|nmHost
operator|+
literal|":"
operator|+
name|nmHttpPort
expr_stmt|;
name|NodeId
name|nodeId
init|=
name|BuilderUtils
operator|.
name|newNodeId
argument_list|(
name|nmHost
argument_list|,
name|nmPort
argument_list|)
decl_stmt|;
name|this
operator|.
name|nodeId
operator|=
name|nodeId
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|id
operator|=
name|amInfo
operator|.
name|getAppAttemptId
argument_list|()
operator|.
name|getAttemptId
argument_list|()
expr_stmt|;
name|this
operator|.
name|startTime
operator|=
name|amInfo
operator|.
name|getStartTime
argument_list|()
expr_stmt|;
name|this
operator|.
name|containerId
operator|=
literal|""
expr_stmt|;
name|this
operator|.
name|logsLink
operator|=
literal|""
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|amInfo
operator|.
name|getContainerId
argument_list|()
decl_stmt|;
if|if
condition|(
name|containerId
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|containerId
operator|=
name|containerId
operator|.
name|toString
argument_list|()
expr_stmt|;
name|this
operator|.
name|logsLink
operator|=
name|join
argument_list|(
name|HttpConfig
operator|.
name|getSchemePrefix
argument_list|()
operator|+
name|nodeHttpAddress
argument_list|,
name|ujoin
argument_list|(
literal|"node"
argument_list|,
literal|"containerlogs"
argument_list|,
name|this
operator|.
name|containerId
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getNodeHttpAddress ()
specifier|public
name|String
name|getNodeHttpAddress
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeHttpAddress
return|;
block|}
DECL|method|getNodeId ()
specifier|public
name|String
name|getNodeId
parameter_list|()
block|{
return|return
name|this
operator|.
name|nodeId
return|;
block|}
DECL|method|getAttemptId ()
specifier|public
name|int
name|getAttemptId
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
DECL|method|getStartTime ()
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|this
operator|.
name|startTime
return|;
block|}
DECL|method|getContainerId ()
specifier|public
name|String
name|getContainerId
parameter_list|()
block|{
return|return
name|this
operator|.
name|containerId
return|;
block|}
DECL|method|getLogsLink ()
specifier|public
name|String
name|getLogsLink
parameter_list|()
block|{
return|return
name|this
operator|.
name|logsLink
return|;
block|}
block|}
end_class

end_unit

