begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|TaskAttempt
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"taskAttempt"
argument_list|)
DECL|class|MapTaskAttemptInfo
specifier|public
class|class
name|MapTaskAttemptInfo
extends|extends
name|TaskAttemptInfo
block|{
DECL|method|MapTaskAttemptInfo ()
specifier|public
name|MapTaskAttemptInfo
parameter_list|()
block|{   }
DECL|method|MapTaskAttemptInfo (TaskAttempt ta)
specifier|public
name|MapTaskAttemptInfo
parameter_list|(
name|TaskAttempt
name|ta
parameter_list|)
block|{
name|this
argument_list|(
name|ta
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|MapTaskAttemptInfo (TaskAttempt ta, Boolean isRunning)
specifier|public
name|MapTaskAttemptInfo
parameter_list|(
name|TaskAttempt
name|ta
parameter_list|,
name|Boolean
name|isRunning
parameter_list|)
block|{
name|super
argument_list|(
name|ta
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
name|isRunning
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

