begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|AppContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|TaskAttempt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
operator|.
name|TaskAttemptStateUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Times
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|HtmlBlock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|InfoBlock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|AMWebApp
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|JQueryUI
operator|.
name|*
import|;
end_import

begin_class
DECL|class|JobBlock
specifier|public
class|class
name|JobBlock
extends|extends
name|HtmlBlock
block|{
DECL|field|appContext
specifier|final
name|AppContext
name|appContext
decl_stmt|;
DECL|field|runningMapTasks
name|int
name|runningMapTasks
init|=
literal|0
decl_stmt|;
DECL|field|pendingMapTasks
name|int
name|pendingMapTasks
init|=
literal|0
decl_stmt|;
DECL|field|runningReduceTasks
name|int
name|runningReduceTasks
init|=
literal|0
decl_stmt|;
DECL|field|pendingReduceTasks
name|int
name|pendingReduceTasks
init|=
literal|0
decl_stmt|;
DECL|field|newMapAttempts
name|int
name|newMapAttempts
init|=
literal|0
decl_stmt|;
DECL|field|runningMapAttempts
name|int
name|runningMapAttempts
init|=
literal|0
decl_stmt|;
DECL|field|killedMapAttempts
name|int
name|killedMapAttempts
init|=
literal|0
decl_stmt|;
DECL|field|failedMapAttempts
name|int
name|failedMapAttempts
init|=
literal|0
decl_stmt|;
DECL|field|successfulMapAttempts
name|int
name|successfulMapAttempts
init|=
literal|0
decl_stmt|;
DECL|field|newReduceAttempts
name|int
name|newReduceAttempts
init|=
literal|0
decl_stmt|;
DECL|field|runningReduceAttempts
name|int
name|runningReduceAttempts
init|=
literal|0
decl_stmt|;
DECL|field|killedReduceAttempts
name|int
name|killedReduceAttempts
init|=
literal|0
decl_stmt|;
DECL|field|failedReduceAttempts
name|int
name|failedReduceAttempts
init|=
literal|0
decl_stmt|;
DECL|field|successfulReduceAttempts
name|int
name|successfulReduceAttempts
init|=
literal|0
decl_stmt|;
DECL|method|JobBlock (AppContext appctx)
annotation|@
name|Inject
name|JobBlock
parameter_list|(
name|AppContext
name|appctx
parameter_list|)
block|{
name|appContext
operator|=
name|appctx
expr_stmt|;
block|}
DECL|method|render (Block html)
annotation|@
name|Override
specifier|protected
name|void
name|render
parameter_list|(
name|Block
name|html
parameter_list|)
block|{
name|String
name|jid
init|=
name|$
argument_list|(
name|JOB_ID
argument_list|)
decl_stmt|;
if|if
condition|(
name|jid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|html
operator|.
name|p
argument_list|()
operator|.
name|_
argument_list|(
literal|"Sorry, can't do anything without a JobID."
argument_list|)
operator|.
name|_
argument_list|()
expr_stmt|;
return|return;
block|}
name|JobId
name|jobID
init|=
name|MRApps
operator|.
name|toJobID
argument_list|(
name|jid
argument_list|)
decl_stmt|;
name|Job
name|job
init|=
name|appContext
operator|.
name|getJob
argument_list|(
name|jobID
argument_list|)
decl_stmt|;
if|if
condition|(
name|job
operator|==
literal|null
condition|)
block|{
name|html
operator|.
name|p
argument_list|()
operator|.
name|_
argument_list|(
literal|"Sorry, "
argument_list|,
name|jid
argument_list|,
literal|" not found."
argument_list|)
operator|.
name|_
argument_list|()
expr_stmt|;
return|return;
block|}
name|JobReport
name|jobReport
init|=
name|job
operator|.
name|getReport
argument_list|()
decl_stmt|;
name|String
name|mapPct
init|=
name|percent
argument_list|(
name|jobReport
operator|.
name|getMapProgress
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|reducePct
init|=
name|percent
argument_list|(
name|jobReport
operator|.
name|getReduceProgress
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|mapTasks
init|=
name|job
operator|.
name|getTotalMaps
argument_list|()
decl_stmt|;
name|int
name|mapTasksComplete
init|=
name|job
operator|.
name|getCompletedMaps
argument_list|()
decl_stmt|;
name|int
name|reduceTasks
init|=
name|job
operator|.
name|getTotalReduces
argument_list|()
decl_stmt|;
name|int
name|reducesTasksComplete
init|=
name|job
operator|.
name|getCompletedReduces
argument_list|()
decl_stmt|;
name|long
name|startTime
init|=
name|jobReport
operator|.
name|getStartTime
argument_list|()
decl_stmt|;
name|long
name|finishTime
init|=
name|jobReport
operator|.
name|getFinishTime
argument_list|()
decl_stmt|;
name|countTasksAndAttempts
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Job Overview"
argument_list|)
operator|.
name|_
argument_list|(
literal|"Job Name:"
argument_list|,
name|job
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|_
argument_list|(
literal|"State:"
argument_list|,
name|job
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|_
argument_list|(
literal|"Uberized:"
argument_list|,
name|job
operator|.
name|isUber
argument_list|()
argument_list|)
operator|.
name|_
argument_list|(
literal|"Started:"
argument_list|,
operator|new
name|Date
argument_list|(
name|startTime
argument_list|)
argument_list|)
operator|.
name|_
argument_list|(
literal|"Elapsed:"
argument_list|,
name|StringUtils
operator|.
name|formatTime
argument_list|(
name|Times
operator|.
name|elapsed
argument_list|(
name|startTime
argument_list|,
name|finishTime
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|html
operator|.
name|_
argument_list|(
name|InfoBlock
operator|.
name|class
argument_list|)
operator|.
name|div
argument_list|(
name|_INFO_WRAP
argument_list|)
operator|.
comment|// Tasks table
name|table
argument_list|(
literal|"#job"
argument_list|)
operator|.
name|tr
argument_list|()
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Task Type"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Progress"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Total"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Pending"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Running"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Complete"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|tr
argument_list|(
name|_ODD
argument_list|)
operator|.
name|th
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"tasks"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|)
argument_list|,
literal|"Map"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|div
argument_list|(
name|_PROGRESSBAR
argument_list|)
operator|.
name|$title
argument_list|(
name|join
argument_list|(
name|mapPct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
comment|// tooltip
name|div
argument_list|(
name|_PROGRESSBAR_VALUE
argument_list|)
operator|.
name|$style
argument_list|(
name|join
argument_list|(
literal|"width:"
argument_list|,
name|mapPct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|mapTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|pendingMapTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|runningMapTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|mapTasksComplete
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|tr
argument_list|(
name|_EVEN
argument_list|)
operator|.
name|th
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"tasks"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|)
argument_list|,
literal|"Reduce"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|div
argument_list|(
name|_PROGRESSBAR
argument_list|)
operator|.
name|$title
argument_list|(
name|join
argument_list|(
name|reducePct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
comment|// tooltip
name|div
argument_list|(
name|_PROGRESSBAR_VALUE
argument_list|)
operator|.
name|$style
argument_list|(
name|join
argument_list|(
literal|"width:"
argument_list|,
name|reducePct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|reduceTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|pendingReduceTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|runningReduceTasks
argument_list|)
argument_list|)
operator|.
name|td
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|reducesTasksComplete
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
comment|// Attempts table
name|table
argument_list|(
literal|"#job"
argument_list|)
operator|.
name|tr
argument_list|()
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Attempt Type"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"New"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Running"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Failed"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Killed"
argument_list|)
operator|.
name|th
argument_list|(
name|_TH
argument_list|,
literal|"Successful"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|tr
argument_list|(
name|_ODD
argument_list|)
operator|.
name|th
argument_list|(
literal|"Maps"
argument_list|)
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|NEW
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|newMapAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|RUNNING
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|runningMapAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|FAILED
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|failedMapAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|KILLED
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|killedMapAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"m"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|SUCCESSFUL
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|successfulMapAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|tr
argument_list|(
name|_EVEN
argument_list|)
operator|.
name|th
argument_list|(
literal|"Reduces"
argument_list|)
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|NEW
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|newReduceAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|RUNNING
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|runningReduceAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|FAILED
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|failedReduceAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|KILLED
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|killedReduceAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|a
argument_list|(
name|url
argument_list|(
literal|"attempts"
argument_list|,
name|jid
argument_list|,
literal|"r"
argument_list|,
name|TaskAttemptStateUI
operator|.
name|SUCCESSFUL
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|successfulReduceAttempts
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
expr_stmt|;
block|}
DECL|method|countTasksAndAttempts (Job job)
specifier|private
name|void
name|countTasksAndAttempts
parameter_list|(
name|Job
name|job
parameter_list|)
block|{
name|Map
argument_list|<
name|TaskId
argument_list|,
name|Task
argument_list|>
name|tasks
init|=
name|job
operator|.
name|getTasks
argument_list|()
decl_stmt|;
for|for
control|(
name|Task
name|task
range|:
name|tasks
operator|.
name|values
argument_list|()
control|)
block|{
switch|switch
condition|(
name|task
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|MAP
case|:
comment|// Task counts
switch|switch
condition|(
name|task
operator|.
name|getState
argument_list|()
condition|)
block|{
case|case
name|RUNNING
case|:
operator|++
name|runningMapTasks
expr_stmt|;
break|break;
case|case
name|SCHEDULED
case|:
operator|++
name|pendingMapTasks
expr_stmt|;
break|break;
block|}
break|break;
case|case
name|REDUCE
case|:
comment|// Task counts
switch|switch
condition|(
name|task
operator|.
name|getState
argument_list|()
condition|)
block|{
case|case
name|RUNNING
case|:
operator|++
name|runningReduceTasks
expr_stmt|;
break|break;
case|case
name|SCHEDULED
case|:
operator|++
name|pendingReduceTasks
expr_stmt|;
break|break;
block|}
break|break;
block|}
comment|// Attempts counts
name|Map
argument_list|<
name|TaskAttemptId
argument_list|,
name|TaskAttempt
argument_list|>
name|attempts
init|=
name|task
operator|.
name|getAttempts
argument_list|()
decl_stmt|;
for|for
control|(
name|TaskAttempt
name|attempt
range|:
name|attempts
operator|.
name|values
argument_list|()
control|)
block|{
name|int
name|newAttempts
init|=
literal|0
decl_stmt|,
name|running
init|=
literal|0
decl_stmt|,
name|successful
init|=
literal|0
decl_stmt|,
name|failed
init|=
literal|0
decl_stmt|,
name|killed
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|TaskAttemptStateUI
operator|.
name|NEW
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
operator|++
name|newAttempts
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|TaskAttemptStateUI
operator|.
name|RUNNING
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
operator|++
name|running
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|TaskAttemptStateUI
operator|.
name|SUCCESSFUL
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
operator|++
name|successful
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|TaskAttemptStateUI
operator|.
name|FAILED
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
operator|++
name|failed
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|TaskAttemptStateUI
operator|.
name|KILLED
operator|.
name|correspondsTo
argument_list|(
name|attempt
operator|.
name|getState
argument_list|()
argument_list|)
condition|)
block|{
operator|++
name|killed
expr_stmt|;
block|}
switch|switch
condition|(
name|task
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|MAP
case|:
name|newMapAttempts
operator|+=
name|newAttempts
expr_stmt|;
name|runningMapAttempts
operator|+=
name|running
expr_stmt|;
name|successfulMapAttempts
operator|+=
name|successful
expr_stmt|;
name|failedMapAttempts
operator|+=
name|failed
expr_stmt|;
name|killedMapAttempts
operator|+=
name|killed
expr_stmt|;
break|break;
case|case
name|REDUCE
case|:
name|newReduceAttempts
operator|+=
name|newAttempts
expr_stmt|;
name|runningReduceAttempts
operator|+=
name|running
expr_stmt|;
name|successfulReduceAttempts
operator|+=
name|successful
expr_stmt|;
name|failedReduceAttempts
operator|+=
name|failed
expr_stmt|;
name|killedReduceAttempts
operator|+=
name|killed
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

