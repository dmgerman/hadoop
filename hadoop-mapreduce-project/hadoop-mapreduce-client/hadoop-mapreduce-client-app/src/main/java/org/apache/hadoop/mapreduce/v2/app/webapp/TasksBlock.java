begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.webapp
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Times
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet
operator|.
name|Hamlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|hamlet
operator|.
name|Hamlet
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|HtmlBlock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|webapp
operator|.
name|AMWebApp
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|StringHelper
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|view
operator|.
name|JQueryUI
operator|.
name|*
import|;
end_import

begin_class
DECL|class|TasksBlock
specifier|public
class|class
name|TasksBlock
extends|extends
name|HtmlBlock
block|{
DECL|field|app
specifier|final
name|App
name|app
decl_stmt|;
DECL|method|TasksBlock (App app)
annotation|@
name|Inject
name|TasksBlock
parameter_list|(
name|App
name|app
parameter_list|)
block|{
name|this
operator|.
name|app
operator|=
name|app
expr_stmt|;
block|}
DECL|method|render (Block html)
annotation|@
name|Override
specifier|protected
name|void
name|render
parameter_list|(
name|Block
name|html
parameter_list|)
block|{
if|if
condition|(
name|app
operator|.
name|job
operator|==
literal|null
condition|)
block|{
name|html
operator|.
name|h2
argument_list|(
name|$
argument_list|(
name|TITLE
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
name|TaskType
name|type
init|=
literal|null
decl_stmt|;
name|String
name|symbol
init|=
name|$
argument_list|(
name|TASK_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|symbol
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|type
operator|=
name|MRApps
operator|.
name|taskType
argument_list|(
name|symbol
argument_list|)
expr_stmt|;
block|}
name|TBODY
argument_list|<
name|TABLE
argument_list|<
name|Hamlet
argument_list|>
argument_list|>
name|tbody
init|=
name|html
operator|.
name|table
argument_list|(
literal|"#tasks"
argument_list|)
operator|.
name|thead
argument_list|()
operator|.
name|tr
argument_list|()
operator|.
name|th
argument_list|(
literal|"Task"
argument_list|)
operator|.
name|th
argument_list|(
literal|"Progress"
argument_list|)
operator|.
name|th
argument_list|(
literal|"State"
argument_list|)
operator|.
name|th
argument_list|(
literal|"Start Time"
argument_list|)
operator|.
name|th
argument_list|(
literal|"Finish Time"
argument_list|)
operator|.
name|th
argument_list|(
literal|"Elapsed Time"
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|tbody
argument_list|()
decl_stmt|;
for|for
control|(
name|Task
name|task
range|:
name|app
operator|.
name|job
operator|.
name|getTasks
argument_list|()
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|type
operator|!=
literal|null
operator|&&
name|task
operator|.
name|getType
argument_list|()
operator|!=
name|type
condition|)
block|{
continue|continue;
block|}
name|String
name|tid
init|=
name|MRApps
operator|.
name|toString
argument_list|(
name|task
operator|.
name|getID
argument_list|()
argument_list|)
decl_stmt|;
name|TaskReport
name|report
init|=
name|task
operator|.
name|getReport
argument_list|()
decl_stmt|;
name|String
name|pct
init|=
name|percent
argument_list|(
name|report
operator|.
name|getProgress
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|startTime
init|=
name|report
operator|.
name|getStartTime
argument_list|()
decl_stmt|;
name|long
name|finishTime
init|=
name|report
operator|.
name|getFinishTime
argument_list|()
decl_stmt|;
name|long
name|elapsed
init|=
name|Times
operator|.
name|elapsed
argument_list|(
name|startTime
argument_list|,
name|finishTime
argument_list|)
decl_stmt|;
name|tbody
operator|.
name|tr
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|task
operator|.
name|getID
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
comment|// sorting
name|a
argument_list|(
name|url
argument_list|(
literal|"task"
argument_list|,
name|tid
argument_list|)
argument_list|,
name|tid
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|pct
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|div
argument_list|(
name|_PROGRESSBAR
argument_list|)
operator|.
name|$title
argument_list|(
name|join
argument_list|(
name|pct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
comment|// tooltip
name|div
argument_list|(
name|_PROGRESSBAR_VALUE
argument_list|)
operator|.
name|$style
argument_list|(
name|join
argument_list|(
literal|"width:"
argument_list|,
name|pct
argument_list|,
literal|'%'
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|(
name|report
operator|.
name|getTaskState
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|startTime
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|(
name|Times
operator|.
name|format
argument_list|(
name|startTime
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|finishTime
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|(
name|Times
operator|.
name|format
argument_list|(
name|finishTime
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|td
argument_list|()
operator|.
name|br
argument_list|()
operator|.
name|$title
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|elapsed
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|(
name|StringUtils
operator|.
name|formatTime
argument_list|(
name|elapsed
argument_list|)
argument_list|)
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
expr_stmt|;
block|}
name|tbody
operator|.
name|_
argument_list|()
operator|.
name|_
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

