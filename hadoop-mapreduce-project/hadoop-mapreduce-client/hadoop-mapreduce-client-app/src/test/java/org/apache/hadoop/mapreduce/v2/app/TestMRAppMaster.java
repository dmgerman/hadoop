begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|client
operator|.
name|ClientService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|JobStateInternal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|rm
operator|.
name|ContainerAllocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ConverterUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestMRAppMaster
specifier|public
class|class
name|TestMRAppMaster
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestMRAppMaster
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|stagingDir
specifier|static
name|String
name|stagingDir
init|=
literal|"staging/"
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
block|{
comment|//Do not error out if metrics are inited multiple times
name|DefaultMetricsSystem
operator|.
name|setMiniClusterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|stagingDir
argument_list|)
decl_stmt|;
name|stagingDir
operator|=
name|dir
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|stagingDir
argument_list|)
decl_stmt|;
if|if
condition|(
name|dir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
name|dir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMRAppMasterForDifferentUser ()
specifier|public
name|void
name|testMRAppMasterForDifferentUser
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000001"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000001_1"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMasterTest
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|stagingDir
operator|+
name|Path
operator|.
name|SEPARATOR
operator|+
name|userName
operator|+
name|Path
operator|.
name|SEPARATOR
operator|+
literal|".staging"
argument_list|,
name|appMaster
operator|.
name|stagingDirPath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMRAppMasterMidLock ()
specifier|public
name|void
name|testMRAppMasterMidLock
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000002"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000002_1"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
name|JobId
name|jobId
init|=
name|TypeConverter
operator|.
name|toYarn
argument_list|(
name|TypeConverter
operator|.
name|fromYarn
argument_list|(
name|applicationAttemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|start
init|=
name|MRApps
operator|.
name|getStartJobCommitFile
argument_list|(
name|conf
argument_list|,
name|userName
argument_list|,
name|jobId
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
comment|//Create the file, but no end file so we should unregister with an error.
name|fs
operator|.
name|create
argument_list|(
name|start
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMaster
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|boolean
name|caught
init|=
literal|false
decl_stmt|;
try|try
block|{
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//The IO Exception is expected
name|LOG
operator|.
name|info
argument_list|(
literal|"Caught expected Exception"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|caught
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|caught
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appMaster
operator|.
name|errorHappenedShutDown
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JobStateInternal
operator|.
name|ERROR
argument_list|,
name|appMaster
operator|.
name|forcedState
argument_list|)
expr_stmt|;
name|appMaster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMRAppMasterSuccessLock ()
specifier|public
name|void
name|testMRAppMasterSuccessLock
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000002"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000002_1"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
name|JobId
name|jobId
init|=
name|TypeConverter
operator|.
name|toYarn
argument_list|(
name|TypeConverter
operator|.
name|fromYarn
argument_list|(
name|applicationAttemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|start
init|=
name|MRApps
operator|.
name|getStartJobCommitFile
argument_list|(
name|conf
argument_list|,
name|userName
argument_list|,
name|jobId
argument_list|)
decl_stmt|;
name|Path
name|end
init|=
name|MRApps
operator|.
name|getEndJobCommitSuccessFile
argument_list|(
name|conf
argument_list|,
name|userName
argument_list|,
name|jobId
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|start
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|end
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMaster
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|boolean
name|caught
init|=
literal|false
decl_stmt|;
try|try
block|{
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//The IO Exception is expected
name|LOG
operator|.
name|info
argument_list|(
literal|"Caught expected Exception"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|caught
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|caught
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appMaster
operator|.
name|errorHappenedShutDown
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JobStateInternal
operator|.
name|SUCCEEDED
argument_list|,
name|appMaster
operator|.
name|forcedState
argument_list|)
expr_stmt|;
name|appMaster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMRAppMasterFailLock ()
specifier|public
name|void
name|testMRAppMasterFailLock
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000002"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000002_1"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
name|JobId
name|jobId
init|=
name|TypeConverter
operator|.
name|toYarn
argument_list|(
name|TypeConverter
operator|.
name|fromYarn
argument_list|(
name|applicationAttemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|start
init|=
name|MRApps
operator|.
name|getStartJobCommitFile
argument_list|(
name|conf
argument_list|,
name|userName
argument_list|,
name|jobId
argument_list|)
decl_stmt|;
name|Path
name|end
init|=
name|MRApps
operator|.
name|getEndJobCommitFailureFile
argument_list|(
name|conf
argument_list|,
name|userName
argument_list|,
name|jobId
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|start
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|end
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMaster
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|boolean
name|caught
init|=
literal|false
decl_stmt|;
try|try
block|{
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//The IO Exception is expected
name|LOG
operator|.
name|info
argument_list|(
literal|"Caught expected Exception"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|caught
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|caught
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appMaster
operator|.
name|errorHappenedShutDown
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JobStateInternal
operator|.
name|FAILED
argument_list|,
name|appMaster
operator|.
name|forcedState
argument_list|)
expr_stmt|;
name|appMaster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMRAppMasterMissingStaging ()
specifier|public
name|void
name|testMRAppMasterMissingStaging
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000002"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000002_1"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
comment|//Delete the staging directory
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|stagingDir
argument_list|)
decl_stmt|;
if|if
condition|(
name|dir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMaster
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|boolean
name|caught
init|=
literal|false
decl_stmt|;
try|try
block|{
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//The IO Exception is expected
name|LOG
operator|.
name|info
argument_list|(
literal|"Caught expected Exception"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|caught
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|caught
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appMaster
operator|.
name|errorHappenedShutDown
argument_list|)
expr_stmt|;
comment|//Copying the history file is disabled, but it is not really visible from
comment|//here
name|assertEquals
argument_list|(
name|JobStateInternal
operator|.
name|ERROR
argument_list|,
name|appMaster
operator|.
name|forcedState
argument_list|)
expr_stmt|;
name|appMaster
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_class
DECL|class|MRAppMasterTest
class|class
name|MRAppMasterTest
extends|extends
name|MRAppMaster
block|{
DECL|field|stagingDirPath
name|Path
name|stagingDirPath
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|overrideInitAndStart
specifier|private
name|boolean
name|overrideInitAndStart
decl_stmt|;
DECL|field|mockContainerAllocator
name|ContainerAllocator
name|mockContainerAllocator
decl_stmt|;
DECL|method|MRAppMasterTest (ApplicationAttemptId applicationAttemptId, ContainerId containerId, String host, int port, int httpPort, long submitTime)
specifier|public
name|MRAppMasterTest
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|httpPort
parameter_list|,
name|long
name|submitTime
parameter_list|)
block|{
name|this
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|httpPort
argument_list|,
name|submitTime
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|MRAppMasterTest (ApplicationAttemptId applicationAttemptId, ContainerId containerId, String host, int port, int httpPort, long submitTime, boolean overrideInitAndStart)
specifier|public
name|MRAppMasterTest
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|int
name|httpPort
parameter_list|,
name|long
name|submitTime
parameter_list|,
name|boolean
name|overrideInitAndStart
parameter_list|)
block|{
name|super
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|httpPort
argument_list|,
name|submitTime
argument_list|)
expr_stmt|;
name|this
operator|.
name|overrideInitAndStart
operator|=
name|overrideInitAndStart
expr_stmt|;
name|mockContainerAllocator
operator|=
name|mock
argument_list|(
name|ContainerAllocator
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
if|if
condition|(
name|overrideInitAndStart
condition|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|downloadTokensAndSetupUGI (Configuration conf)
specifier|protected
name|void
name|downloadTokensAndSetupUGI
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|currentUser
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|YarnException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createContainerAllocator ( final ClientService clientService, final AppContext context)
specifier|protected
name|ContainerAllocator
name|createContainerAllocator
parameter_list|(
specifier|final
name|ClientService
name|clientService
parameter_list|,
specifier|final
name|AppContext
name|context
parameter_list|)
block|{
return|return
name|mockContainerAllocator
return|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
if|if
condition|(
name|overrideInitAndStart
condition|)
block|{
try|try
block|{
name|String
name|user
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
decl_stmt|;
name|stagingDirPath
operator|=
name|MRApps
operator|.
name|getStagingAreaDir
argument_list|(
name|conf
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|super
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

