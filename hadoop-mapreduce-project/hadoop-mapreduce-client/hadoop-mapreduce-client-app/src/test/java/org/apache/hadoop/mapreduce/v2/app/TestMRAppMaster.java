begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ConverterUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestMRAppMaster
specifier|public
class|class
name|TestMRAppMaster
block|{
annotation|@
name|Test
DECL|method|testMRAppMasterForDifferentUser ()
specifier|public
name|void
name|testMRAppMasterForDifferentUser
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|applicationAttemptIdStr
init|=
literal|"appattempt_1317529182569_0004_000001"
decl_stmt|;
name|String
name|containerIdStr
init|=
literal|"container_1317529182569_0004_000001_1"
decl_stmt|;
name|String
name|stagingDir
init|=
literal|"/tmp/staging"
decl_stmt|;
name|String
name|userName
init|=
literal|"TestAppMasterUser"
decl_stmt|;
name|ApplicationAttemptId
name|applicationAttemptId
init|=
name|ConverterUtils
operator|.
name|toApplicationAttemptId
argument_list|(
name|applicationAttemptIdStr
argument_list|)
decl_stmt|;
name|ContainerId
name|containerId
init|=
name|ConverterUtils
operator|.
name|toContainerId
argument_list|(
name|containerIdStr
argument_list|)
decl_stmt|;
name|MRAppMasterTest
name|appMaster
init|=
operator|new
name|MRAppMasterTest
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
literal|"host"
argument_list|,
operator|-
literal|1
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|YarnConfiguration
name|conf
init|=
operator|new
name|YarnConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MR_AM_STAGING_DIR
argument_list|,
name|stagingDir
argument_list|)
expr_stmt|;
name|MRAppMaster
operator|.
name|initAndStartAppMaster
argument_list|(
name|appMaster
argument_list|,
name|conf
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|stagingDir
operator|+
name|Path
operator|.
name|SEPARATOR
operator|+
name|userName
operator|+
name|Path
operator|.
name|SEPARATOR
operator|+
literal|".staging"
argument_list|,
name|appMaster
operator|.
name|stagingDirPath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_class
DECL|class|MRAppMasterTest
class|class
name|MRAppMasterTest
extends|extends
name|MRAppMaster
block|{
DECL|field|stagingDirPath
name|Path
name|stagingDirPath
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|method|MRAppMasterTest (ApplicationAttemptId applicationAttemptId, ContainerId containerId, String host, int port, long submitTime)
specifier|public
name|MRAppMasterTest
parameter_list|(
name|ApplicationAttemptId
name|applicationAttemptId
parameter_list|,
name|ContainerId
name|containerId
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|long
name|submitTime
parameter_list|)
block|{
name|super
argument_list|(
name|applicationAttemptId
argument_list|,
name|containerId
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|submitTime
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
try|try
block|{
name|String
name|user
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
decl_stmt|;
name|stagingDirPath
operator|=
name|MRApps
operator|.
name|getStagingAreaDir
argument_list|(
name|conf
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

