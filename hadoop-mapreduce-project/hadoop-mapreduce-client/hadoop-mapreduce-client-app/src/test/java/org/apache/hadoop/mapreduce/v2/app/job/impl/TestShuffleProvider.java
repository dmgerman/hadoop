begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** /**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.job.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|RawLocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MapTaskAttemptImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|WrappedJvmID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TypeConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|security
operator|.
name|token
operator|.
name|JobTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|split
operator|.
name|JobSplit
operator|.
name|TaskSplitMetaInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|TaskAttemptListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRBuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|SystemClock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|AuxiliaryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ApplicationInitializationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|api
operator|.
name|ApplicationTerminationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_class
DECL|class|TestShuffleProvider
specifier|public
class|class
name|TestShuffleProvider
block|{
annotation|@
name|Test
DECL|method|testShuffleProviders ()
specifier|public
name|void
name|testShuffleProviders
parameter_list|()
throws|throws
name|Exception
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|JobId
name|jobId
init|=
name|MRBuilderUtils
operator|.
name|newJobId
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TaskId
name|taskId
init|=
name|MRBuilderUtils
operator|.
name|newTaskId
argument_list|(
name|jobId
argument_list|,
literal|1
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|)
decl_stmt|;
name|Path
name|jobFile
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|EventHandler
name|eventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|TaskAttemptListener
name|taListener
init|=
name|mock
argument_list|(
name|TaskAttemptListener
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|taListener
operator|.
name|getAddress
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
literal|"localhost"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|jobConf
operator|.
name|setClass
argument_list|(
literal|"fs.file.impl"
argument_list|,
name|StubbedFS
operator|.
name|class
argument_list|,
name|FileSystem
operator|.
name|class
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setBoolean
argument_list|(
literal|"fs.file.impl.disable.cache"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|JobConf
operator|.
name|MAPRED_MAP_TASK_ENV
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_AUX_SERVICES
argument_list|,
name|TestShuffleHandler1
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
operator|+
literal|","
operator|+
name|TestShuffleHandler2
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
argument_list|)
expr_stmt|;
name|String
name|serviceName
init|=
name|TestShuffleHandler1
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
decl_stmt|;
name|String
name|serviceStr
init|=
name|String
operator|.
name|format
argument_list|(
name|YarnConfiguration
operator|.
name|NM_AUX_SERVICE_FMT
argument_list|,
name|serviceName
argument_list|)
decl_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|serviceStr
argument_list|,
name|TestShuffleHandler1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|serviceName
operator|=
name|TestShuffleHandler2
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
expr_stmt|;
name|serviceStr
operator|=
name|String
operator|.
name|format
argument_list|(
name|YarnConfiguration
operator|.
name|NM_AUX_SERVICE_FMT
argument_list|,
name|serviceName
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|serviceStr
argument_list|,
name|TestShuffleHandler2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_SHUFFLE_PROVIDER_SERVICES
argument_list|,
name|TestShuffleHandler1
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
operator|+
literal|","
operator|+
name|TestShuffleHandler2
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
argument_list|)
expr_stmt|;
name|Credentials
name|credentials
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
name|Token
argument_list|<
name|JobTokenIdentifier
argument_list|>
name|jobToken
init|=
operator|new
name|Token
argument_list|<
name|JobTokenIdentifier
argument_list|>
argument_list|(
operator|(
literal|"tokenid"
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|,
operator|(
literal|"tokenpw"
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|,
operator|new
name|Text
argument_list|(
literal|"tokenkind"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"tokenservice"
argument_list|)
argument_list|)
decl_stmt|;
name|TaskAttemptImpl
name|taImpl
init|=
operator|new
name|MapTaskAttemptImpl
argument_list|(
name|taskId
argument_list|,
literal|1
argument_list|,
name|eventHandler
argument_list|,
name|jobFile
argument_list|,
literal|1
argument_list|,
name|mock
argument_list|(
name|TaskSplitMetaInfo
operator|.
name|class
argument_list|)
argument_list|,
name|jobConf
argument_list|,
name|taListener
argument_list|,
name|jobToken
argument_list|,
name|credentials
argument_list|,
operator|new
name|SystemClock
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|jobConf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|APPLICATION_ATTEMPT_ID
argument_list|,
name|taImpl
operator|.
name|getID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerLaunchContext
name|launchCtx
init|=
name|TaskAttemptImpl
operator|.
name|createContainerLaunchContext
argument_list|(
literal|null
argument_list|,
name|jobConf
argument_list|,
name|jobToken
argument_list|,
name|taImpl
operator|.
name|createRemoteTask
argument_list|()
argument_list|,
name|TypeConverter
operator|.
name|fromYarn
argument_list|(
name|jobId
argument_list|)
argument_list|,
name|mock
argument_list|(
name|WrappedJvmID
operator|.
name|class
argument_list|)
argument_list|,
name|taListener
argument_list|,
name|credentials
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ByteBuffer
argument_list|>
name|serviceDataMap
init|=
name|launchCtx
operator|.
name|getServiceData
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"TestShuffleHandler1 is missing"
argument_list|,
name|serviceDataMap
operator|.
name|get
argument_list|(
name|TestShuffleHandler1
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
literal|"TestShuffleHandler2 is missing"
argument_list|,
name|serviceDataMap
operator|.
name|get
argument_list|(
name|TestShuffleHandler2
operator|.
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"mismatch number of services in map"
argument_list|,
name|serviceDataMap
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
comment|// 2 that we entered + 1 for the built-in shuffle-provider
block|}
DECL|class|StubbedFS
specifier|static
specifier|public
class|class
name|StubbedFS
extends|extends
name|RawLocalFileSystem
block|{
annotation|@
name|Override
DECL|method|getFileStatus (Path f)
specifier|public
name|FileStatus
name|getFileStatus
parameter_list|(
name|Path
name|f
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|FileStatus
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|f
argument_list|)
return|;
block|}
block|}
DECL|class|TestShuffleHandler1
specifier|static
specifier|public
class|class
name|TestShuffleHandler1
extends|extends
name|AuxiliaryService
block|{
DECL|field|MAPREDUCE_TEST_SHUFFLE_SERVICEID
specifier|public
specifier|static
specifier|final
name|String
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
init|=
literal|"test_shuffle1"
decl_stmt|;
DECL|method|TestShuffleHandler1 ()
specifier|public
name|TestShuffleHandler1
parameter_list|()
block|{
name|super
argument_list|(
literal|"testshuffle1"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initializeApplication (ApplicationInitializationContext context)
specifier|public
name|void
name|initializeApplication
parameter_list|(
name|ApplicationInitializationContext
name|context
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|stopApplication (ApplicationTerminationContext context)
specifier|public
name|void
name|stopApplication
parameter_list|(
name|ApplicationTerminationContext
name|context
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|getMetaData ()
specifier|public
specifier|synchronized
name|ByteBuffer
name|getMetaData
parameter_list|()
block|{
return|return
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|0
argument_list|)
return|;
comment|// Don't 'return null' because of YARN-1256
block|}
block|}
DECL|class|TestShuffleHandler2
specifier|static
specifier|public
class|class
name|TestShuffleHandler2
extends|extends
name|AuxiliaryService
block|{
DECL|field|MAPREDUCE_TEST_SHUFFLE_SERVICEID
specifier|public
specifier|static
specifier|final
name|String
name|MAPREDUCE_TEST_SHUFFLE_SERVICEID
init|=
literal|"test_shuffle2"
decl_stmt|;
DECL|method|TestShuffleHandler2 ()
specifier|public
name|TestShuffleHandler2
parameter_list|()
block|{
name|super
argument_list|(
literal|"testshuffle2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|initializeApplication (ApplicationInitializationContext context)
specifier|public
name|void
name|initializeApplication
parameter_list|(
name|ApplicationInitializationContext
name|context
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|stopApplication (ApplicationTerminationContext context)
specifier|public
name|void
name|stopApplication
parameter_list|(
name|ApplicationTerminationContext
name|context
parameter_list|)
block|{     }
annotation|@
name|Override
DECL|method|getMetaData ()
specifier|public
specifier|synchronized
name|ByteBuffer
name|getMetaData
parameter_list|()
block|{
return|return
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|0
argument_list|)
return|;
comment|// Don't 'return null' because of YARN-1256
block|}
block|}
block|}
end_class

end_unit

