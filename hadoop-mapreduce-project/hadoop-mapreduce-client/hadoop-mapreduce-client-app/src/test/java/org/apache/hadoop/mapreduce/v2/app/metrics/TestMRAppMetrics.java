begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|MetricsAsserts
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_class
DECL|class|TestMRAppMetrics
specifier|public
class|class
name|TestMRAppMetrics
block|{
DECL|method|testNames ()
annotation|@
name|Test
specifier|public
name|void
name|testNames
parameter_list|()
block|{
name|Job
name|job
init|=
name|mock
argument_list|(
name|Job
operator|.
name|class
argument_list|)
decl_stmt|;
name|Task
name|mapTask
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mapTask
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|)
expr_stmt|;
name|Task
name|reduceTask
init|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|reduceTask
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TaskType
operator|.
name|REDUCE
argument_list|)
expr_stmt|;
name|MRAppMetrics
name|metrics
init|=
name|MRAppMetrics
operator|.
name|create
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|submittedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|preparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|submittedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|preparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|submittedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|waitingTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|preparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endPreparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endPreparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endPreparingJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|launchedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|failedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endWaitingTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|failedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|launchedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|killedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endWaitingTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|killedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|launchedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|completedTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningTask
argument_list|(
name|mapTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|launchedTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|runningTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|completedTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningTask
argument_list|(
name|reduceTask
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|endRunningJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|metrics
operator|.
name|completedJob
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|checkMetrics
argument_list|(
comment|/*job*/
literal|3
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
comment|/*map*/
literal|3
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
comment|/*reduce*/
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|checkMetrics (int jobsSubmitted, int jobsCompleted, int jobsFailed, int jobsKilled, int jobsPreparing, int jobsRunning, int mapsLaunched, int mapsCompleted, int mapsFailed, int mapsKilled, int mapsRunning, int mapsWaiting, int reducesLaunched, int reducesCompleted, int reducesFailed, int reducesKilled, int reducesRunning, int reducesWaiting)
specifier|private
name|void
name|checkMetrics
parameter_list|(
name|int
name|jobsSubmitted
parameter_list|,
name|int
name|jobsCompleted
parameter_list|,
name|int
name|jobsFailed
parameter_list|,
name|int
name|jobsKilled
parameter_list|,
name|int
name|jobsPreparing
parameter_list|,
name|int
name|jobsRunning
parameter_list|,
name|int
name|mapsLaunched
parameter_list|,
name|int
name|mapsCompleted
parameter_list|,
name|int
name|mapsFailed
parameter_list|,
name|int
name|mapsKilled
parameter_list|,
name|int
name|mapsRunning
parameter_list|,
name|int
name|mapsWaiting
parameter_list|,
name|int
name|reducesLaunched
parameter_list|,
name|int
name|reducesCompleted
parameter_list|,
name|int
name|reducesFailed
parameter_list|,
name|int
name|reducesKilled
parameter_list|,
name|int
name|reducesRunning
parameter_list|,
name|int
name|reducesWaiting
parameter_list|)
block|{
name|MetricsRecordBuilder
name|rb
init|=
name|getMetrics
argument_list|(
literal|"MRAppMetrics"
argument_list|)
decl_stmt|;
name|assertCounter
argument_list|(
literal|"JobsSubmitted"
argument_list|,
name|jobsSubmitted
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"JobsCompleted"
argument_list|,
name|jobsCompleted
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"JobsFailed"
argument_list|,
name|jobsFailed
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"JobsKilled"
argument_list|,
name|jobsKilled
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"JobsPreparing"
argument_list|,
name|jobsPreparing
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"JobsRunning"
argument_list|,
name|jobsRunning
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"MapsLaunched"
argument_list|,
name|mapsLaunched
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"MapsCompleted"
argument_list|,
name|mapsCompleted
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"MapsFailed"
argument_list|,
name|mapsFailed
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"MapsKilled"
argument_list|,
name|mapsKilled
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"MapsRunning"
argument_list|,
name|mapsRunning
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"MapsWaiting"
argument_list|,
name|mapsWaiting
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"ReducesLaunched"
argument_list|,
name|reducesLaunched
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"ReducesCompleted"
argument_list|,
name|reducesCompleted
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"ReducesFailed"
argument_list|,
name|reducesFailed
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertCounter
argument_list|(
literal|"ReducesKilled"
argument_list|,
name|reducesKilled
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"ReducesRunning"
argument_list|,
name|reducesRunning
argument_list|,
name|rb
argument_list|)
expr_stmt|;
name|assertGauge
argument_list|(
literal|"ReducesWaiting"
argument_list|,
name|reducesWaiting
argument_list|,
name|rb
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

