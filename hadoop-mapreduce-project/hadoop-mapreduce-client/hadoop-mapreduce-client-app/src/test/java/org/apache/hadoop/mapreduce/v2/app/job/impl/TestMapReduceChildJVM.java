begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapreduce.v2.app.job.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|api
operator|.
name|records
operator|.
name|JobState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|AppContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|MRApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|job
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|launcher
operator|.
name|ContainerLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|launcher
operator|.
name|ContainerLauncherEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|app
operator|.
name|launcher
operator|.
name|ContainerRemoteLaunchEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|v2
operator|.
name|util
operator|.
name|MRApps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TestMapReduceChildJVM
specifier|public
class|class
name|TestMapReduceChildJVM
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestMapReduceChildJVM
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testCommandLine ()
specifier|public
name|void
name|testCommandLine
parameter_list|()
throws|throws
name|Exception
block|{
name|MyMRApp
name|app
init|=
operator|new
name|MyMRApp
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRConfig
operator|.
name|MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"["
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"JAVA_HOME"
argument_list|)
operator|+
literal|"/bin/java"
operator|+
literal|" -Djava.net.preferIPv4Stack=true"
operator|+
literal|" -Dhadoop.metrics.log.level=WARN "
operator|+
literal|"  -Xmx820m -Djava.io.tmpdir="
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"PWD"
argument_list|)
operator|+
literal|"/tmp"
operator|+
literal|" -Dlog4j.configuration=container-log4j.properties"
operator|+
literal|" -Dyarn.app.container.log.dir=<LOG_DIR>"
operator|+
literal|" -Dyarn.app.container.log.filesize=0"
operator|+
literal|" -Dhadoop.root.logger=INFO,CLA -Dhadoop.root.logfile=syslog"
operator|+
literal|" org.apache.hadoop.mapred.YarnChild 127.0.0.1"
operator|+
literal|" 54321"
operator|+
literal|" attempt_0_0000_m_000000_0"
operator|+
literal|" 0"
operator|+
literal|" 1><LOG_DIR>/stdout"
operator|+
literal|" 2><LOG_DIR>/stderr ]"
argument_list|,
name|app
operator|.
name|launchCmdList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_ROOT_LOGGER not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"INFO,console"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_CLIENT_OPTS not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testReduceCommandLineWithSeparateShuffle ()
specifier|public
name|void
name|testReduceCommandLineWithSeparateShuffle
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_SEPARATE_SHUFFLE_LOG
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|testReduceCommandLine
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testReduceCommandLineWithSeparateCRLAShuffle ()
specifier|public
name|void
name|testReduceCommandLineWithSeparateCRLAShuffle
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_SEPARATE_SHUFFLE_LOG
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_LOG_KB
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_LOG_BACKUPS
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|testReduceCommandLine
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testReduceCommandLine ()
specifier|public
name|void
name|testReduceCommandLine
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|testReduceCommandLine
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
DECL|method|testReduceCommandLine (Configuration conf)
specifier|private
name|void
name|testReduceCommandLine
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|MyMRApp
name|app
init|=
operator|new
name|MyMRApp
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRConfig
operator|.
name|MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
specifier|final
name|long
name|shuffleLogSize
init|=
name|conf
operator|.
name|getLong
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_LOG_KB
argument_list|,
literal|0L
argument_list|)
operator|*
literal|1024L
decl_stmt|;
specifier|final
name|int
name|shuffleBackups
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|MRJobConfig
operator|.
name|SHUFFLE_LOG_BACKUPS
argument_list|,
literal|0
argument_list|)
decl_stmt|;
specifier|final
name|String
name|appenderName
init|=
name|shuffleLogSize
operator|>
literal|0L
operator|&&
name|shuffleBackups
operator|>
literal|0
condition|?
literal|"shuffleCRLA"
else|:
literal|"shuffleCLA"
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"["
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"JAVA_HOME"
argument_list|)
operator|+
literal|"/bin/java"
operator|+
literal|" -Djava.net.preferIPv4Stack=true"
operator|+
literal|" -Dhadoop.metrics.log.level=WARN "
operator|+
literal|"  -Xmx820m -Djava.io.tmpdir="
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"PWD"
argument_list|)
operator|+
literal|"/tmp"
operator|+
literal|" -Dlog4j.configuration=container-log4j.properties"
operator|+
literal|" -Dyarn.app.container.log.dir=<LOG_DIR>"
operator|+
literal|" -Dyarn.app.container.log.filesize=0"
operator|+
literal|" -Dhadoop.root.logger=INFO,CLA -Dhadoop.root.logfile=syslog"
operator|+
literal|" -Dyarn.app.mapreduce.shuffle.logger=INFO,"
operator|+
name|appenderName
operator|+
literal|" -Dyarn.app.mapreduce.shuffle.logfile=syslog.shuffle"
operator|+
literal|" -Dyarn.app.mapreduce.shuffle.log.filesize="
operator|+
name|shuffleLogSize
operator|+
literal|" -Dyarn.app.mapreduce.shuffle.log.backups="
operator|+
name|shuffleBackups
operator|+
literal|" org.apache.hadoop.mapred.YarnChild 127.0.0.1"
operator|+
literal|" 54321"
operator|+
literal|" attempt_0_0000_r_000000_0"
operator|+
literal|" 0"
operator|+
literal|" 1><LOG_DIR>/stdout"
operator|+
literal|" 2><LOG_DIR>/stderr ]"
argument_list|,
name|app
operator|.
name|launchCmdList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_ROOT_LOGGER not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"INFO,console"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_CLIENT_OPTS not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testCommandLineWithLog4JConifg ()
specifier|public
name|void
name|testCommandLineWithLog4JConifg
parameter_list|()
throws|throws
name|Exception
block|{
name|MyMRApp
name|app
init|=
operator|new
name|MyMRApp
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRConfig
operator|.
name|MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
name|testLogPropertieFile
init|=
literal|"test-log4j.properties"
decl_stmt|;
name|String
name|testLogPropertiePath
init|=
literal|"../"
operator|+
literal|"test-log4j.properties"
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE
argument_list|,
name|testLogPropertiePath
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"["
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"JAVA_HOME"
argument_list|)
operator|+
literal|"/bin/java"
operator|+
literal|" -Djava.net.preferIPv4Stack=true"
operator|+
literal|" -Dhadoop.metrics.log.level=WARN "
operator|+
literal|"  -Xmx820m -Djava.io.tmpdir="
operator|+
name|MRApps
operator|.
name|crossPlatformify
argument_list|(
literal|"PWD"
argument_list|)
operator|+
literal|"/tmp"
operator|+
literal|" -Dlog4j.configuration="
operator|+
name|testLogPropertieFile
operator|+
literal|" -Dyarn.app.container.log.dir=<LOG_DIR>"
operator|+
literal|" -Dyarn.app.container.log.filesize=0"
operator|+
literal|" -Dhadoop.root.logger=INFO,CLA -Dhadoop.root.logfile=syslog"
operator|+
literal|" org.apache.hadoop.mapred.YarnChild 127.0.0.1"
operator|+
literal|" 54321"
operator|+
literal|" attempt_0_0000_m_000000_0"
operator|+
literal|" 0"
operator|+
literal|" 1><LOG_DIR>/stdout"
operator|+
literal|" 2><LOG_DIR>/stderr ]"
argument_list|,
name|app
operator|.
name|launchCmdList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAutoHeapSizes ()
specifier|public
name|void
name|testAutoHeapSizes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Don't specify heap size or memory-mb
name|testAutoHeapSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Don't specify heap size
name|testAutoHeapSize
argument_list|(
literal|512
argument_list|,
literal|768
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|testAutoHeapSize
argument_list|(
literal|100
argument_list|,
literal|768
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|testAutoHeapSize
argument_list|(
literal|512
argument_list|,
literal|100
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Specify heap size
name|testAutoHeapSize
argument_list|(
literal|512
argument_list|,
literal|768
argument_list|,
literal|"-Xmx100m"
argument_list|)
expr_stmt|;
name|testAutoHeapSize
argument_list|(
literal|512
argument_list|,
literal|768
argument_list|,
literal|"-Xmx500m"
argument_list|)
expr_stmt|;
comment|// Specify heap size but not the memory
name|testAutoHeapSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|"-Xmx100m"
argument_list|)
expr_stmt|;
name|testAutoHeapSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|"-Xmx500m"
argument_list|)
expr_stmt|;
block|}
DECL|method|testAutoHeapSize (int mapMb, int redMb, String xmxArg)
specifier|private
name|void
name|testAutoHeapSize
parameter_list|(
name|int
name|mapMb
parameter_list|,
name|int
name|redMb
parameter_list|,
name|String
name|xmxArg
parameter_list|)
throws|throws
name|Exception
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|float
name|heapRatio
init|=
name|conf
operator|.
name|getFloat
argument_list|(
name|MRJobConfig
operator|.
name|HEAP_MEMORY_MB_RATIO
argument_list|,
name|MRJobConfig
operator|.
name|DEFAULT_HEAP_MEMORY_MB_RATIO
argument_list|)
decl_stmt|;
comment|// Verify map and reduce java opts are not set by default
name|Assert
operator|.
name|assertNull
argument_list|(
literal|"Default map java opts!"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|MRJobConfig
operator|.
name|MAP_JAVA_OPTS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
literal|"Default reduce java opts!"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_JAVA_OPTS
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set the memory-mbs and java-opts
if|if
condition|(
name|mapMb
operator|>
literal|0
condition|)
block|{
name|conf
operator|.
name|setInt
argument_list|(
name|MRJobConfig
operator|.
name|MAP_MEMORY_MB
argument_list|,
name|mapMb
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|mapMb
operator|=
name|conf
operator|.
name|getMemoryRequired
argument_list|(
name|TaskType
operator|.
name|MAP
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|redMb
operator|>
literal|0
condition|)
block|{
name|conf
operator|.
name|setInt
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_MEMORY_MB
argument_list|,
name|redMb
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|redMb
operator|=
name|conf
operator|.
name|getMemoryRequired
argument_list|(
name|TaskType
operator|.
name|REDUCE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xmxArg
operator|!=
literal|null
condition|)
block|{
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|MAP_JAVA_OPTS
argument_list|,
name|xmxArg
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MRJobConfig
operator|.
name|REDUCE_JAVA_OPTS
argument_list|,
name|xmxArg
argument_list|)
expr_stmt|;
block|}
comment|// Submit job to let unspecified fields be picked up
name|MyMRApp
name|app
init|=
operator|new
name|MyMRApp
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Job
name|job
init|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
comment|// Go through the tasks and verify the values are as expected
for|for
control|(
name|String
name|cmd
range|:
name|app
operator|.
name|launchCmdList
control|)
block|{
specifier|final
name|boolean
name|isMap
init|=
name|cmd
operator|.
name|contains
argument_list|(
literal|"_m_"
argument_list|)
decl_stmt|;
name|int
name|heapMb
decl_stmt|;
if|if
condition|(
name|xmxArg
operator|==
literal|null
condition|)
block|{
name|heapMb
operator|=
call|(
name|int
call|)
argument_list|(
name|Math
operator|.
name|ceil
argument_list|(
operator|(
name|isMap
condition|?
name|mapMb
else|:
name|redMb
operator|)
operator|*
name|heapRatio
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|final
name|String
name|javaOpts
init|=
name|conf
operator|.
name|get
argument_list|(
name|isMap
condition|?
name|MRJobConfig
operator|.
name|MAP_JAVA_OPTS
else|:
name|MRJobConfig
operator|.
name|REDUCE_JAVA_OPTS
argument_list|)
decl_stmt|;
name|heapMb
operator|=
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
name|javaOpts
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Incorrect heapsize in the command opts"
argument_list|,
name|heapMb
argument_list|,
name|JobConf
operator|.
name|parseMaximumHeapSizeMB
argument_list|(
name|cmd
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|MyMRApp
specifier|private
specifier|static
specifier|final
class|class
name|MyMRApp
extends|extends
name|MRApp
block|{
DECL|field|launchCmdList
specifier|private
name|ArrayList
argument_list|<
name|String
argument_list|>
name|launchCmdList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|cmdEnvironment
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cmdEnvironment
decl_stmt|;
DECL|method|MyMRApp (int maps, int reduces, boolean autoComplete, String testName, boolean cleanOnStart)
specifier|public
name|MyMRApp
parameter_list|(
name|int
name|maps
parameter_list|,
name|int
name|reduces
parameter_list|,
name|boolean
name|autoComplete
parameter_list|,
name|String
name|testName
parameter_list|,
name|boolean
name|cleanOnStart
parameter_list|)
block|{
name|super
argument_list|(
name|maps
argument_list|,
name|reduces
argument_list|,
name|autoComplete
argument_list|,
name|testName
argument_list|,
name|cleanOnStart
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createContainerLauncher (AppContext context)
specifier|protected
name|ContainerLauncher
name|createContainerLauncher
parameter_list|(
name|AppContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|MockContainerLauncher
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|ContainerLauncherEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|CONTAINER_REMOTE_LAUNCH
condition|)
block|{
name|ContainerRemoteLaunchEvent
name|launchEvent
init|=
operator|(
name|ContainerRemoteLaunchEvent
operator|)
name|event
decl_stmt|;
name|ContainerLaunchContext
name|launchContext
init|=
name|launchEvent
operator|.
name|getContainerLaunchContext
argument_list|()
decl_stmt|;
name|String
name|cmdString
init|=
name|launchContext
operator|.
name|getCommands
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"launchContext "
operator|+
name|cmdString
argument_list|)
expr_stmt|;
name|launchCmdList
operator|.
name|add
argument_list|(
name|cmdString
argument_list|)
expr_stmt|;
name|cmdEnvironment
operator|=
name|launchContext
operator|.
name|getEnvironment
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|handle
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
annotation|@
name|Test
DECL|method|testEnvironmentVariables ()
specifier|public
name|void
name|testEnvironmentVariables
parameter_list|()
throws|throws
name|Exception
block|{
name|MyMRApp
name|app
init|=
operator|new
name|MyMRApp
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JobConf
operator|.
name|MAPRED_MAP_TASK_ENV
argument_list|,
literal|"HADOOP_CLIENT_OPTS=test"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setStrings
argument_list|(
name|MRJobConfig
operator|.
name|MAP_LOG_LEVEL
argument_list|,
literal|"WARN"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRConfig
operator|.
name|MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Job
name|job
init|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_ROOT_LOGGER not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"WARN,console"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_CLIENT_OPTS not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_CLIENT_OPTS"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Try one more.
name|app
operator|=
operator|new
name|MyMRApp
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|JobConf
operator|.
name|MAPRED_MAP_TASK_ENV
argument_list|,
literal|"HADOOP_ROOT_LOGGER=trace"
argument_list|)
expr_stmt|;
name|job
operator|=
name|app
operator|.
name|submit
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|app
operator|.
name|waitForState
argument_list|(
name|job
argument_list|,
name|JobState
operator|.
name|SUCCEEDED
argument_list|)
expr_stmt|;
name|app
operator|.
name|verifyCompleted
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"HADOOP_ROOT_LOGGER not set for job"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|containsKey
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"trace"
argument_list|,
name|app
operator|.
name|cmdEnvironment
operator|.
name|get
argument_list|(
literal|"HADOOP_ROOT_LOGGER"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

