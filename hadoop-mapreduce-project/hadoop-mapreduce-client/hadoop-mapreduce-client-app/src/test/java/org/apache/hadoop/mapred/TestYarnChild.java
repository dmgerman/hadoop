begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ClusterStorageCapacityExceededException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Tests the behavior of YarnChild.  */
end_comment

begin_class
DECL|class|TestYarnChild
specifier|public
class|class
name|TestYarnChild
block|{
DECL|field|task
specifier|private
name|Task
name|task
decl_stmt|;
DECL|field|umbilical
specifier|private
name|TaskUmbilicalProtocol
name|umbilical
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|KILL_LIMIT_EXCEED_CONF_NAME
specifier|final
specifier|static
specifier|private
name|String
name|KILL_LIMIT_EXCEED_CONF_NAME
init|=
literal|"mapreduce.job.dfs.storage.capacity.kill-limit-exceed"
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|task
operator|=
name|mock
argument_list|(
name|Task
operator|.
name|class
argument_list|)
expr_stmt|;
name|umbilical
operator|=
name|mock
argument_list|(
name|TaskUmbilicalProtocol
operator|.
name|class
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|task
operator|.
name|getConf
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionNotHappenByDefault ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionNotHappenByDefault
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|IOException
argument_list|()
argument_list|)
decl_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionNotHappenAndFastFailDisabled ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionNotHappenAndFastFailDisabled
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|IOException
argument_list|()
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|KILL_LIMIT_EXCEED_CONF_NAME
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionNotHappenAndFastFailEnabled ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionNotHappenAndFastFailEnabled
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|IOException
argument_list|()
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|KILL_LIMIT_EXCEED_CONF_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionHappenByDefault ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionHappenByDefault
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|ClusterStorageCapacityExceededException
argument_list|()
argument_list|)
decl_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionHappenAndFastFailDisabled ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionHappenAndFastFailDisabled
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|ClusterStorageCapacityExceededException
argument_list|()
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|KILL_LIMIT_EXCEED_CONF_NAME
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionHappenAndFastFailEnabled ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionHappenAndFastFailEnabled
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|ClusterStorageCapacityExceededException
argument_list|()
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|KILL_LIMIT_EXCEED_CONF_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReportErrorWhenCapacityExceptionHappenInThirdOfExceptionChain ()
specifier|public
name|void
name|testReportErrorWhenCapacityExceptionHappenInThirdOfExceptionChain
parameter_list|()
throws|throws
name|IOException
block|{
name|Exception
name|exception
init|=
operator|new
name|RuntimeException
argument_list|(
operator|new
name|IllegalStateException
argument_list|(
operator|new
name|ClusterStorageCapacityExceededException
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|KILL_LIMIT_EXCEED_CONF_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyReportError
argument_list|(
name|exception
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyReportError (Exception exception, boolean fastFail)
specifier|private
name|void
name|verifyReportError
parameter_list|(
name|Exception
name|exception
parameter_list|,
name|boolean
name|fastFail
parameter_list|)
throws|throws
name|IOException
block|{
name|YarnChild
operator|.
name|reportError
argument_list|(
name|exception
argument_list|,
name|task
argument_list|,
name|umbilical
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|umbilical
argument_list|)
operator|.
name|fatalError
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|,
name|eq
argument_list|(
name|fastFail
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

