begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.api.records.impl.pb
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|impl
operator|.
name|pb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationSubmissionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ProtoBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ApplicationIdProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ApplicationSubmissionContextProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ApplicationSubmissionContextProtoOrBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|LocalResourceProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|PriorityProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|ResourceProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|StringLocalResourceMapProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|StringStringMapProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|StringURLMapProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|proto
operator|.
name|YarnProtos
operator|.
name|URLProto
import|;
end_import

begin_class
DECL|class|ApplicationSubmissionContextPBImpl
specifier|public
class|class
name|ApplicationSubmissionContextPBImpl
extends|extends
name|ProtoBase
argument_list|<
name|ApplicationSubmissionContextProto
argument_list|>
implements|implements
name|ApplicationSubmissionContext
block|{
DECL|field|proto
name|ApplicationSubmissionContextProto
name|proto
init|=
name|ApplicationSubmissionContextProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
DECL|field|builder
name|ApplicationSubmissionContextProto
operator|.
name|Builder
name|builder
init|=
literal|null
decl_stmt|;
DECL|field|viaProto
name|boolean
name|viaProto
init|=
literal|false
decl_stmt|;
DECL|field|applicationId
specifier|private
name|ApplicationId
name|applicationId
init|=
literal|null
decl_stmt|;
DECL|field|masterCapability
specifier|private
name|Resource
name|masterCapability
init|=
literal|null
decl_stmt|;
DECL|field|resources
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|URL
argument_list|>
name|resources
init|=
literal|null
decl_stmt|;
DECL|field|resourcesTodo
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
name|resourcesTodo
init|=
literal|null
decl_stmt|;
DECL|field|fsTokenList
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|fsTokenList
init|=
literal|null
decl_stmt|;
DECL|field|fsTokenTodo
specifier|private
name|ByteBuffer
name|fsTokenTodo
init|=
literal|null
decl_stmt|;
DECL|field|environment
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|environment
init|=
literal|null
decl_stmt|;
DECL|field|commandList
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|commandList
init|=
literal|null
decl_stmt|;
DECL|field|priority
specifier|private
name|Priority
name|priority
init|=
literal|null
decl_stmt|;
DECL|method|ApplicationSubmissionContextPBImpl ()
specifier|public
name|ApplicationSubmissionContextPBImpl
parameter_list|()
block|{
name|builder
operator|=
name|ApplicationSubmissionContextProto
operator|.
name|newBuilder
argument_list|()
expr_stmt|;
block|}
DECL|method|ApplicationSubmissionContextPBImpl (ApplicationSubmissionContextProto proto)
specifier|public
name|ApplicationSubmissionContextPBImpl
parameter_list|(
name|ApplicationSubmissionContextProto
name|proto
parameter_list|)
block|{
name|this
operator|.
name|proto
operator|=
name|proto
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|getProto ()
specifier|public
name|ApplicationSubmissionContextProto
name|getProto
parameter_list|()
block|{
name|mergeLocalToProto
argument_list|()
expr_stmt|;
name|proto
operator|=
name|viaProto
condition|?
name|proto
else|:
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
return|return
name|proto
return|;
block|}
DECL|method|mergeLocalToBuilder ()
specifier|private
name|void
name|mergeLocalToBuilder
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|applicationId
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setApplicationId
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|applicationId
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|masterCapability
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setMasterCapability
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|masterCapability
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|resources
operator|!=
literal|null
condition|)
block|{
name|addResourcesToProto
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|resourcesTodo
operator|!=
literal|null
condition|)
block|{
name|addResourcesTodoToProto
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|fsTokenList
operator|!=
literal|null
condition|)
block|{
name|addFsTokenListToProto
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|fsTokenTodo
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setFsTokensTodo
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|fsTokenTodo
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|environment
operator|!=
literal|null
condition|)
block|{
name|addEnvironmentToProto
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|commandList
operator|!=
literal|null
condition|)
block|{
name|addCommandsToProto
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|priority
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setPriority
argument_list|(
name|convertToProtoFormat
argument_list|(
name|this
operator|.
name|priority
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|mergeLocalToProto ()
specifier|private
name|void
name|mergeLocalToProto
parameter_list|()
block|{
if|if
condition|(
name|viaProto
condition|)
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|mergeLocalToBuilder
argument_list|()
expr_stmt|;
name|proto
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
name|viaProto
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|maybeInitBuilder ()
specifier|private
name|void
name|maybeInitBuilder
parameter_list|()
block|{
if|if
condition|(
name|viaProto
operator|||
name|builder
operator|==
literal|null
condition|)
block|{
name|builder
operator|=
name|ApplicationSubmissionContextProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
block|}
name|viaProto
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getPriority ()
specifier|public
name|Priority
name|getPriority
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|priority
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|priority
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasPriority
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|priority
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|priority
return|;
block|}
annotation|@
name|Override
DECL|method|setPriority (Priority priority)
specifier|public
name|void
name|setPriority
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|priority
operator|==
literal|null
condition|)
name|builder
operator|.
name|clearPriority
argument_list|()
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationId ()
specifier|public
name|ApplicationId
name|getApplicationId
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|applicationId
operator|!=
literal|null
condition|)
block|{
return|return
name|applicationId
return|;
block|}
comment|// Else via proto
if|if
condition|(
operator|!
name|p
operator|.
name|hasApplicationId
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|applicationId
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getApplicationId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|applicationId
return|;
block|}
annotation|@
name|Override
DECL|method|setApplicationId (ApplicationId applicationId)
specifier|public
name|void
name|setApplicationId
parameter_list|(
name|ApplicationId
name|applicationId
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|applicationId
operator|==
literal|null
condition|)
name|builder
operator|.
name|clearApplicationId
argument_list|()
expr_stmt|;
name|this
operator|.
name|applicationId
operator|=
name|applicationId
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getApplicationName ()
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasApplicationName
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getApplicationName
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setApplicationName (String applicationName)
specifier|public
name|void
name|setApplicationName
parameter_list|(
name|String
name|applicationName
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|applicationName
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearApplicationName
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setApplicationName
argument_list|(
operator|(
name|applicationName
operator|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMasterCapability ()
specifier|public
name|Resource
name|getMasterCapability
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|masterCapability
operator|!=
literal|null
condition|)
block|{
return|return
name|masterCapability
return|;
block|}
comment|// Else via proto
if|if
condition|(
operator|!
name|p
operator|.
name|hasMasterCapability
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|masterCapability
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getMasterCapability
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|masterCapability
return|;
block|}
annotation|@
name|Override
DECL|method|setMasterCapability (Resource masterCapability)
specifier|public
name|void
name|setMasterCapability
parameter_list|(
name|Resource
name|masterCapability
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|masterCapability
operator|==
literal|null
condition|)
name|builder
operator|.
name|clearMasterCapability
argument_list|()
expr_stmt|;
name|this
operator|.
name|masterCapability
operator|=
name|masterCapability
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAllResources ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|URL
argument_list|>
name|getAllResources
parameter_list|()
block|{
name|initResources
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|resources
return|;
block|}
annotation|@
name|Override
DECL|method|getResource (String key)
specifier|public
name|URL
name|getResource
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initResources
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|resources
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|initResources ()
specifier|private
name|void
name|initResources
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|resources
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|StringURLMapProto
argument_list|>
name|mapAsList
init|=
name|p
operator|.
name|getResourcesList
argument_list|()
decl_stmt|;
name|this
operator|.
name|resources
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|URL
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|StringURLMapProto
name|c
range|:
name|mapAsList
control|)
block|{
name|this
operator|.
name|resources
operator|.
name|put
argument_list|(
name|c
operator|.
name|getKey
argument_list|()
argument_list|,
name|convertFromProtoFormat
argument_list|(
name|c
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllResources (final Map<String, URL> resources)
specifier|public
name|void
name|addAllResources
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|URL
argument_list|>
name|resources
parameter_list|)
block|{
if|if
condition|(
name|resources
operator|==
literal|null
condition|)
return|return;
name|initResources
argument_list|()
expr_stmt|;
name|this
operator|.
name|resources
operator|.
name|putAll
argument_list|(
name|resources
argument_list|)
expr_stmt|;
block|}
DECL|method|addResourcesToProto ()
specifier|private
name|void
name|addResourcesToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearResources
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|resources
operator|==
literal|null
condition|)
return|return;
name|Iterable
argument_list|<
name|StringURLMapProto
argument_list|>
name|iterable
init|=
operator|new
name|Iterable
argument_list|<
name|StringURLMapProto
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|StringURLMapProto
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|StringURLMapProto
argument_list|>
argument_list|()
block|{
name|Iterator
argument_list|<
name|String
argument_list|>
name|keyIter
init|=
name|resources
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|StringURLMapProto
name|next
parameter_list|()
block|{
name|String
name|key
init|=
name|keyIter
operator|.
name|next
argument_list|()
decl_stmt|;
return|return
name|StringURLMapProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
name|key
argument_list|)
operator|.
name|setValue
argument_list|(
name|convertToProtoFormat
argument_list|(
name|resources
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|keyIter
operator|.
name|hasNext
argument_list|()
return|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|builder
operator|.
name|addAllResources
argument_list|(
name|iterable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setResource (String key, URL val)
specifier|public
name|void
name|setResource
parameter_list|(
name|String
name|key
parameter_list|,
name|URL
name|val
parameter_list|)
block|{
name|initResources
argument_list|()
expr_stmt|;
name|this
operator|.
name|resources
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeResource (String key)
specifier|public
name|void
name|removeResource
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initResources
argument_list|()
expr_stmt|;
name|this
operator|.
name|resources
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearResources ()
specifier|public
name|void
name|clearResources
parameter_list|()
block|{
name|initResources
argument_list|()
expr_stmt|;
name|this
operator|.
name|resources
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAllResourcesTodo ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
name|getAllResourcesTodo
parameter_list|()
block|{
name|initResourcesTodo
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|resourcesTodo
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceTodo (String key)
specifier|public
name|LocalResource
name|getResourceTodo
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initResourcesTodo
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|resourcesTodo
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|initResourcesTodo ()
specifier|private
name|void
name|initResourcesTodo
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|resourcesTodo
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|StringLocalResourceMapProto
argument_list|>
name|mapAsList
init|=
name|p
operator|.
name|getResourcesTodoList
argument_list|()
decl_stmt|;
name|this
operator|.
name|resourcesTodo
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|StringLocalResourceMapProto
name|c
range|:
name|mapAsList
control|)
block|{
name|this
operator|.
name|resourcesTodo
operator|.
name|put
argument_list|(
name|c
operator|.
name|getKey
argument_list|()
argument_list|,
name|convertFromProtoFormat
argument_list|(
name|c
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllResourcesTodo (final Map<String, LocalResource> resourcesTodo)
specifier|public
name|void
name|addAllResourcesTodo
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
name|resourcesTodo
parameter_list|)
block|{
if|if
condition|(
name|resourcesTodo
operator|==
literal|null
condition|)
return|return;
name|initResourcesTodo
argument_list|()
expr_stmt|;
name|this
operator|.
name|resourcesTodo
operator|.
name|putAll
argument_list|(
name|resourcesTodo
argument_list|)
expr_stmt|;
block|}
DECL|method|addResourcesTodoToProto ()
specifier|private
name|void
name|addResourcesTodoToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearResourcesTodo
argument_list|()
expr_stmt|;
if|if
condition|(
name|resourcesTodo
operator|==
literal|null
condition|)
return|return;
name|Iterable
argument_list|<
name|StringLocalResourceMapProto
argument_list|>
name|iterable
init|=
operator|new
name|Iterable
argument_list|<
name|StringLocalResourceMapProto
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|StringLocalResourceMapProto
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|StringLocalResourceMapProto
argument_list|>
argument_list|()
block|{
name|Iterator
argument_list|<
name|String
argument_list|>
name|keyIter
init|=
name|resourcesTodo
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|StringLocalResourceMapProto
name|next
parameter_list|()
block|{
name|String
name|key
init|=
name|keyIter
operator|.
name|next
argument_list|()
decl_stmt|;
return|return
name|StringLocalResourceMapProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
name|key
argument_list|)
operator|.
name|setValue
argument_list|(
name|convertToProtoFormat
argument_list|(
name|resourcesTodo
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|keyIter
operator|.
name|hasNext
argument_list|()
return|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|builder
operator|.
name|addAllResourcesTodo
argument_list|(
name|iterable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setResourceTodo (String key, LocalResource val)
specifier|public
name|void
name|setResourceTodo
parameter_list|(
name|String
name|key
parameter_list|,
name|LocalResource
name|val
parameter_list|)
block|{
name|initResourcesTodo
argument_list|()
expr_stmt|;
name|this
operator|.
name|resourcesTodo
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeResourceTodo (String key)
specifier|public
name|void
name|removeResourceTodo
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initResourcesTodo
argument_list|()
expr_stmt|;
name|this
operator|.
name|resourcesTodo
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearResourcesTodo ()
specifier|public
name|void
name|clearResourcesTodo
parameter_list|()
block|{
name|initResourcesTodo
argument_list|()
expr_stmt|;
name|this
operator|.
name|resourcesTodo
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFsTokenList ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getFsTokenList
parameter_list|()
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|fsTokenList
return|;
block|}
annotation|@
name|Override
DECL|method|getFsToken (int index)
specifier|public
name|String
name|getFsToken
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|fsTokenList
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getFsTokenCount ()
specifier|public
name|int
name|getFsTokenCount
parameter_list|()
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|fsTokenList
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|initFsTokenList ()
specifier|private
name|void
name|initFsTokenList
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|fsTokenList
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
name|p
operator|.
name|getFsTokensList
argument_list|()
decl_stmt|;
name|this
operator|.
name|fsTokenList
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|c
range|:
name|list
control|)
block|{
name|this
operator|.
name|fsTokenList
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllFsTokens (final List<String> fsTokens)
specifier|public
name|void
name|addAllFsTokens
parameter_list|(
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|fsTokens
parameter_list|)
block|{
if|if
condition|(
name|fsTokens
operator|==
literal|null
condition|)
return|return;
name|initFsTokenList
argument_list|()
expr_stmt|;
name|this
operator|.
name|fsTokenList
operator|.
name|addAll
argument_list|(
name|fsTokens
argument_list|)
expr_stmt|;
block|}
DECL|method|addFsTokenListToProto ()
specifier|private
name|void
name|addFsTokenListToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearFsTokens
argument_list|()
expr_stmt|;
name|builder
operator|.
name|addAllFsTokens
argument_list|(
name|this
operator|.
name|fsTokenList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addFsToken (String fsTokens)
specifier|public
name|void
name|addFsToken
parameter_list|(
name|String
name|fsTokens
parameter_list|)
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
name|this
operator|.
name|fsTokenList
operator|.
name|add
argument_list|(
name|fsTokens
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeFsToken (int index)
specifier|public
name|void
name|removeFsToken
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
name|this
operator|.
name|fsTokenList
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearFsTokens ()
specifier|public
name|void
name|clearFsTokens
parameter_list|()
block|{
name|initFsTokenList
argument_list|()
expr_stmt|;
name|this
operator|.
name|fsTokenList
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getFsTokensTodo ()
specifier|public
name|ByteBuffer
name|getFsTokensTodo
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|fsTokenTodo
operator|!=
literal|null
condition|)
block|{
return|return
name|this
operator|.
name|fsTokenTodo
return|;
block|}
if|if
condition|(
operator|!
name|p
operator|.
name|hasFsTokensTodo
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|this
operator|.
name|fsTokenTodo
operator|=
name|convertFromProtoFormat
argument_list|(
name|p
operator|.
name|getFsTokensTodo
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|fsTokenTodo
return|;
block|}
annotation|@
name|Override
DECL|method|setFsTokensTodo (ByteBuffer fsTokensTodo)
specifier|public
name|void
name|setFsTokensTodo
parameter_list|(
name|ByteBuffer
name|fsTokensTodo
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|fsTokensTodo
operator|==
literal|null
condition|)
name|builder
operator|.
name|clearFsTokensTodo
argument_list|()
expr_stmt|;
name|this
operator|.
name|fsTokenTodo
operator|=
name|fsTokensTodo
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAllEnvironment ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getAllEnvironment
parameter_list|()
block|{
name|initEnvironment
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|environment
return|;
block|}
annotation|@
name|Override
DECL|method|getEnvironment (String key)
specifier|public
name|String
name|getEnvironment
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initEnvironment
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|environment
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|initEnvironment ()
specifier|private
name|void
name|initEnvironment
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|environment
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|StringStringMapProto
argument_list|>
name|mapAsList
init|=
name|p
operator|.
name|getEnvironmentList
argument_list|()
decl_stmt|;
name|this
operator|.
name|environment
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|StringStringMapProto
name|c
range|:
name|mapAsList
control|)
block|{
name|this
operator|.
name|environment
operator|.
name|put
argument_list|(
name|c
operator|.
name|getKey
argument_list|()
argument_list|,
name|c
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllEnvironment (Map<String, String> environment)
specifier|public
name|void
name|addAllEnvironment
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|environment
parameter_list|)
block|{
if|if
condition|(
name|environment
operator|==
literal|null
condition|)
return|return;
name|initEnvironment
argument_list|()
expr_stmt|;
name|this
operator|.
name|environment
operator|.
name|putAll
argument_list|(
name|environment
argument_list|)
expr_stmt|;
block|}
DECL|method|addEnvironmentToProto ()
specifier|private
name|void
name|addEnvironmentToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearEnvironment
argument_list|()
expr_stmt|;
if|if
condition|(
name|environment
operator|==
literal|null
condition|)
return|return;
name|Iterable
argument_list|<
name|StringStringMapProto
argument_list|>
name|iterable
init|=
operator|new
name|Iterable
argument_list|<
name|StringStringMapProto
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|StringStringMapProto
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|StringStringMapProto
argument_list|>
argument_list|()
block|{
name|Iterator
argument_list|<
name|String
argument_list|>
name|keyIter
init|=
name|environment
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|StringStringMapProto
name|next
parameter_list|()
block|{
name|String
name|key
init|=
name|keyIter
operator|.
name|next
argument_list|()
decl_stmt|;
return|return
name|StringStringMapProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
name|key
argument_list|)
operator|.
name|setValue
argument_list|(
operator|(
name|environment
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|keyIter
operator|.
name|hasNext
argument_list|()
return|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
name|builder
operator|.
name|addAllEnvironment
argument_list|(
name|iterable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setEnvironment (String key, String val)
specifier|public
name|void
name|setEnvironment
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|val
parameter_list|)
block|{
name|initEnvironment
argument_list|()
expr_stmt|;
name|this
operator|.
name|environment
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeEnvironment (String key)
specifier|public
name|void
name|removeEnvironment
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|initEnvironment
argument_list|()
expr_stmt|;
name|this
operator|.
name|environment
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearEnvironment ()
specifier|public
name|void
name|clearEnvironment
parameter_list|()
block|{
name|initEnvironment
argument_list|()
expr_stmt|;
name|this
operator|.
name|environment
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCommandList ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getCommandList
parameter_list|()
block|{
name|initCommandList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|commandList
return|;
block|}
annotation|@
name|Override
DECL|method|getCommand (int index)
specifier|public
name|String
name|getCommand
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initCommandList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|commandList
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getCommandCount ()
specifier|public
name|int
name|getCommandCount
parameter_list|()
block|{
name|initCommandList
argument_list|()
expr_stmt|;
return|return
name|this
operator|.
name|commandList
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|initCommandList ()
specifier|private
name|void
name|initCommandList
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|commandList
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|list
init|=
name|p
operator|.
name|getCommandList
argument_list|()
decl_stmt|;
name|this
operator|.
name|commandList
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|c
range|:
name|list
control|)
block|{
name|this
operator|.
name|commandList
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|addAllCommands (final List<String> command)
specifier|public
name|void
name|addAllCommands
parameter_list|(
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|command
parameter_list|)
block|{
if|if
condition|(
name|command
operator|==
literal|null
condition|)
return|return;
name|initCommandList
argument_list|()
expr_stmt|;
name|this
operator|.
name|commandList
operator|.
name|addAll
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
DECL|method|addCommandsToProto ()
specifier|private
name|void
name|addCommandsToProto
parameter_list|()
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|clearCommand
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|commandList
operator|==
literal|null
condition|)
return|return;
name|builder
operator|.
name|addAllCommand
argument_list|(
name|this
operator|.
name|commandList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addCommand (String command)
specifier|public
name|void
name|addCommand
parameter_list|(
name|String
name|command
parameter_list|)
block|{
name|initCommandList
argument_list|()
expr_stmt|;
name|this
operator|.
name|commandList
operator|.
name|add
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeCommand (int index)
specifier|public
name|void
name|removeCommand
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|initCommandList
argument_list|()
expr_stmt|;
name|this
operator|.
name|commandList
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clearCommands ()
specifier|public
name|void
name|clearCommands
parameter_list|()
block|{
name|initCommandList
argument_list|()
expr_stmt|;
name|this
operator|.
name|commandList
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getQueue ()
specifier|public
name|String
name|getQueue
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasQueue
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getQueue
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setQueue (String queue)
specifier|public
name|void
name|setQueue
parameter_list|(
name|String
name|queue
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|queue
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearQueue
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setQueue
argument_list|(
operator|(
name|queue
operator|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
name|ApplicationSubmissionContextProtoOrBuilder
name|p
init|=
name|viaProto
condition|?
name|proto
else|:
name|builder
decl_stmt|;
if|if
condition|(
operator|!
name|p
operator|.
name|hasUser
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
operator|(
name|p
operator|.
name|getUser
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|setUser (String user)
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|maybeInitBuilder
argument_list|()
expr_stmt|;
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
name|builder
operator|.
name|clearUser
argument_list|()
expr_stmt|;
return|return;
block|}
name|builder
operator|.
name|setUser
argument_list|(
operator|(
name|user
operator|)
argument_list|)
expr_stmt|;
block|}
DECL|method|convertFromProtoFormat (PriorityProto p)
specifier|private
name|PriorityPBImpl
name|convertFromProtoFormat
parameter_list|(
name|PriorityProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|PriorityPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (Priority t)
specifier|private
name|PriorityProto
name|convertToProtoFormat
parameter_list|(
name|Priority
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|PriorityPBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat (ApplicationIdProto p)
specifier|private
name|ApplicationIdPBImpl
name|convertFromProtoFormat
parameter_list|(
name|ApplicationIdProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|ApplicationIdPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (ApplicationId t)
specifier|private
name|ApplicationIdProto
name|convertToProtoFormat
parameter_list|(
name|ApplicationId
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ApplicationIdPBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat (ResourceProto p)
specifier|private
name|ResourcePBImpl
name|convertFromProtoFormat
parameter_list|(
name|ResourceProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|ResourcePBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (Resource t)
specifier|private
name|ResourceProto
name|convertToProtoFormat
parameter_list|(
name|Resource
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ResourcePBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat (URLProto p)
specifier|private
name|URLPBImpl
name|convertFromProtoFormat
parameter_list|(
name|URLProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|URLPBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (URL t)
specifier|private
name|URLProto
name|convertToProtoFormat
parameter_list|(
name|URL
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|URLPBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
DECL|method|convertFromProtoFormat (LocalResourceProto p)
specifier|private
name|LocalResourcePBImpl
name|convertFromProtoFormat
parameter_list|(
name|LocalResourceProto
name|p
parameter_list|)
block|{
return|return
operator|new
name|LocalResourcePBImpl
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|method|convertToProtoFormat (LocalResource t)
specifier|private
name|LocalResourceProto
name|convertToProtoFormat
parameter_list|(
name|LocalResource
name|t
parameter_list|)
block|{
return|return
operator|(
operator|(
name|LocalResourcePBImpl
operator|)
name|t
operator|)
operator|.
name|getProto
argument_list|()
return|;
block|}
block|}
end_class

end_unit

