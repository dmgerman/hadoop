begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|logaggregation
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|UnsupportedFileSystemException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataInputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataOutputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|StartContainerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAttemptId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationAccessType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerLaunchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResourceVisibility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|DrainDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factories
operator|.
name|RecordFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|factory
operator|.
name|providers
operator|.
name|RecordFactoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
operator|.
name|AggregatedLogFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
operator|.
name|ContainerLogsRetentionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
operator|.
name|AggregatedLogFormat
operator|.
name|LogKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|logaggregation
operator|.
name|AggregatedLogFormat
operator|.
name|LogReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|CMgrCompletedAppsEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|DeletionService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|LocalDirsHandlerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|BaseContainerManagerTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|application
operator|.
name|ApplicationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|application
operator|.
name|ApplicationEventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|loghandler
operator|.
name|event
operator|.
name|LogHandlerAppFinishedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|loghandler
operator|.
name|event
operator|.
name|LogHandlerAppStartedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|loghandler
operator|.
name|event
operator|.
name|LogHandlerContainerFinishedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|BuilderUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ConverterUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_comment
comment|//@Ignore
end_comment

begin_class
DECL|class|TestLogAggregationService
specifier|public
class|class
name|TestLogAggregationService
extends|extends
name|BaseContainerManagerTest
block|{
DECL|field|acls
specifier|private
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|acls
init|=
name|createAppAcls
argument_list|()
decl_stmt|;
static|static
block|{
name|LOG
operator|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestLogAggregationService
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|field|recordFactory
specifier|private
specifier|static
name|RecordFactory
name|recordFactory
init|=
name|RecordFactoryProvider
operator|.
name|getRecordFactory
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|remoteRootLogDir
specifier|private
name|File
name|remoteRootLogDir
init|=
operator|new
name|File
argument_list|(
literal|"target"
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"-remoteLogDir"
argument_list|)
decl_stmt|;
DECL|method|TestLogAggregationService ()
specifier|public
name|TestLogAggregationService
parameter_list|()
throws|throws
name|UnsupportedFileSystemException
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|remoteRootLogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|createContainerExecutor
argument_list|()
operator|.
name|deleteAsUser
argument_list|(
name|user
argument_list|,
operator|new
name|Path
argument_list|(
name|remoteRootLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
operator|new
name|Path
index|[]
block|{}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testLocalFileDeletionAfterUpload ()
specifier|public
name|void
name|testLocalFileDeletionAfterUpload
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|delSrvc
operator|=
operator|new
name|DeletionService
argument_list|(
name|createContainerExecutor
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|delSrvc
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_LOG_DIRS
argument_list|,
name|localLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_REMOTE_APP_LOG_DIR
argument_list|,
name|this
operator|.
name|remoteRootLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|DrainDispatcher
name|dispatcher
init|=
name|createDispatcher
argument_list|()
decl_stmt|;
name|EventHandler
argument_list|<
name|ApplicationEvent
argument_list|>
name|appEventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|register
argument_list|(
name|ApplicationEventType
operator|.
name|class
argument_list|,
name|appEventHandler
argument_list|)
expr_stmt|;
name|LogAggregationService
name|logAggregationService
init|=
operator|new
name|LogAggregationService
argument_list|(
name|dispatcher
argument_list|,
name|this
operator|.
name|context
argument_list|,
name|this
operator|.
name|delSrvc
argument_list|,
name|super
operator|.
name|dirsHandler
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|application1
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// AppLogDir should be created
name|File
name|app1LogDir
init|=
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|application1
argument_list|)
argument_list|)
decl_stmt|;
name|app1LogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|ALL_CONTAINERS
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|BuilderUtils
operator|.
name|newApplicationAttemptId
argument_list|(
name|application1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|container11
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// Simulate log-file creation
name|writeContainerLogs
argument_list|(
name|app1LogDir
argument_list|,
name|container11
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container11
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application1
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|String
name|containerIdStr
init|=
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|container11
argument_list|)
decl_stmt|;
name|File
name|containerLogDir
init|=
operator|new
name|File
argument_list|(
name|app1LogDir
argument_list|,
name|containerIdStr
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|fileType
range|:
operator|new
name|String
index|[]
block|{
literal|"stdout"
block|,
literal|"stderr"
block|,
literal|"syslog"
block|}
control|)
block|{
name|Assert
operator|.
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|containerLogDir
argument_list|,
name|fileType
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertFalse
argument_list|(
name|app1LogDir
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|logFilePath
init|=
name|logAggregationService
operator|.
name|getRemoteNodeLogFileForApp
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Log file ["
operator|+
name|logFilePath
operator|+
literal|"] not found"
argument_list|,
operator|new
name|File
argument_list|(
name|logFilePath
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|await
argument_list|()
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ApplicationEvent
argument_list|>
name|eventCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ApplicationEvent
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|appEventHandler
argument_list|)
operator|.
name|handle
argument_list|(
name|eventCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ApplicationEventType
operator|.
name|APPLICATION_LOG_HANDLING_FINISHED
argument_list|,
name|eventCaptor
operator|.
name|getValue
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|appAttemptId
operator|.
name|getApplicationId
argument_list|()
argument_list|,
name|eventCaptor
operator|.
name|getValue
argument_list|()
operator|.
name|getApplicationID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testNoContainerOnNode ()
specifier|public
name|void
name|testNoContainerOnNode
parameter_list|()
block|{
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_LOG_DIRS
argument_list|,
name|localLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_REMOTE_APP_LOG_DIR
argument_list|,
name|this
operator|.
name|remoteRootLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|DrainDispatcher
name|dispatcher
init|=
name|createDispatcher
argument_list|()
decl_stmt|;
name|EventHandler
argument_list|<
name|ApplicationEvent
argument_list|>
name|appEventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|register
argument_list|(
name|ApplicationEventType
operator|.
name|class
argument_list|,
name|appEventHandler
argument_list|)
expr_stmt|;
name|LogAggregationService
name|logAggregationService
init|=
operator|new
name|LogAggregationService
argument_list|(
name|dispatcher
argument_list|,
name|this
operator|.
name|context
argument_list|,
name|this
operator|.
name|delSrvc
argument_list|,
name|super
operator|.
name|dirsHandler
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|application1
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// AppLogDir should be created
name|File
name|app1LogDir
init|=
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|application1
argument_list|)
argument_list|)
decl_stmt|;
name|app1LogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|ALL_CONTAINERS
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application1
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|logAggregationService
operator|.
name|getRemoteNodeLogFileForApp
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|)
operator|.
name|toUri
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|await
argument_list|()
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ApplicationEvent
argument_list|>
name|eventCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ApplicationEvent
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|appEventHandler
argument_list|)
operator|.
name|handle
argument_list|(
name|eventCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ApplicationEventType
operator|.
name|APPLICATION_LOG_HANDLING_FINISHED
argument_list|,
name|eventCaptor
operator|.
name|getValue
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|appEventHandler
argument_list|)
operator|.
name|handle
argument_list|(
name|eventCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|application1
argument_list|,
name|eventCaptor
operator|.
name|getValue
argument_list|()
operator|.
name|getApplicationID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testMultipleAppsLogAggregation ()
specifier|public
name|void
name|testMultipleAppsLogAggregation
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_LOG_DIRS
argument_list|,
name|localLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|set
argument_list|(
name|YarnConfiguration
operator|.
name|NM_REMOTE_APP_LOG_DIR
argument_list|,
name|this
operator|.
name|remoteRootLogDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|DrainDispatcher
name|dispatcher
init|=
name|createDispatcher
argument_list|()
decl_stmt|;
name|EventHandler
argument_list|<
name|ApplicationEvent
argument_list|>
name|appEventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|register
argument_list|(
name|ApplicationEventType
operator|.
name|class
argument_list|,
name|appEventHandler
argument_list|)
expr_stmt|;
name|LogAggregationService
name|logAggregationService
init|=
operator|new
name|LogAggregationService
argument_list|(
name|dispatcher
argument_list|,
name|this
operator|.
name|context
argument_list|,
name|this
operator|.
name|delSrvc
argument_list|,
name|super
operator|.
name|dirsHandler
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|application1
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// AppLogDir should be created
name|File
name|app1LogDir
init|=
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|application1
argument_list|)
argument_list|)
decl_stmt|;
name|app1LogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|ALL_CONTAINERS
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|appAttemptId1
init|=
name|BuilderUtils
operator|.
name|newApplicationAttemptId
argument_list|(
name|application1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|container11
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// Simulate log-file creation
name|writeContainerLogs
argument_list|(
name|app1LogDir
argument_list|,
name|container11
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container11
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationId
name|application2
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|appAttemptId2
init|=
name|BuilderUtils
operator|.
name|newApplicationAttemptId
argument_list|(
name|application2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|File
name|app2LogDir
init|=
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|application2
argument_list|)
argument_list|)
decl_stmt|;
name|app2LogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application2
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|APPLICATION_MASTER_ONLY
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerId
name|container21
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app2LogDir
argument_list|,
name|container21
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container21
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerId
name|container12
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app1LogDir
argument_list|,
name|container12
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container12
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ApplicationId
name|application3
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|ApplicationAttemptId
name|appAttemptId3
init|=
name|BuilderUtils
operator|.
name|newApplicationAttemptId
argument_list|(
name|application3
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|File
name|app3LogDir
init|=
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|application3
argument_list|)
argument_list|)
decl_stmt|;
name|app3LogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application3
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|AM_AND_FAILED_CONTAINERS_ONLY
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerId
name|container31
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId3
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app3LogDir
argument_list|,
name|container31
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container31
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerId
name|container32
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId3
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app3LogDir
argument_list|,
name|container32
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container32
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Failed
name|ContainerId
name|container22
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app2LogDir
argument_list|,
name|container22
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container22
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ContainerId
name|container33
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|writeContainerLogs
argument_list|(
name|app3LogDir
argument_list|,
name|container33
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerContainerFinishedEvent
argument_list|(
name|container33
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application2
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application3
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application1
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|verifyContainerLogs
argument_list|(
name|logAggregationService
argument_list|,
name|application1
argument_list|,
operator|new
name|ContainerId
index|[]
block|{
name|container11
block|,
name|container12
block|}
argument_list|)
expr_stmt|;
name|verifyContainerLogs
argument_list|(
name|logAggregationService
argument_list|,
name|application2
argument_list|,
operator|new
name|ContainerId
index|[]
block|{
name|container21
block|}
argument_list|)
expr_stmt|;
name|verifyContainerLogs
argument_list|(
name|logAggregationService
argument_list|,
name|application3
argument_list|,
operator|new
name|ContainerId
index|[]
block|{
name|container31
block|,
name|container32
block|}
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|await
argument_list|()
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ApplicationEvent
argument_list|>
name|eventCaptor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ApplicationEvent
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|appEventHandler
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|handle
argument_list|(
name|eventCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ApplicationEvent
argument_list|>
name|capturedEvents
init|=
name|eventCaptor
operator|.
name|getAllValues
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ApplicationId
argument_list|>
name|appIds
init|=
operator|new
name|HashSet
argument_list|<
name|ApplicationId
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ApplicationEvent
name|cap
range|:
name|capturedEvents
control|)
block|{
name|assertEquals
argument_list|(
name|ApplicationEventType
operator|.
name|APPLICATION_LOG_HANDLING_FINISHED
argument_list|,
name|eventCaptor
operator|.
name|getValue
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|appIds
operator|.
name|add
argument_list|(
name|cap
operator|.
name|getApplicationID
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|appIds
operator|.
name|contains
argument_list|(
name|application1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appIds
operator|.
name|contains
argument_list|(
name|application2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|appIds
operator|.
name|contains
argument_list|(
name|application3
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|writeContainerLogs (File appLogDir, ContainerId containerId)
specifier|private
name|void
name|writeContainerLogs
parameter_list|(
name|File
name|appLogDir
parameter_list|,
name|ContainerId
name|containerId
parameter_list|)
throws|throws
name|IOException
block|{
comment|// ContainerLogDir should be created
name|String
name|containerStr
init|=
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|containerId
argument_list|)
decl_stmt|;
name|File
name|containerLogDir
init|=
operator|new
name|File
argument_list|(
name|appLogDir
argument_list|,
name|containerStr
argument_list|)
decl_stmt|;
name|containerLogDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|fileType
range|:
operator|new
name|String
index|[]
block|{
literal|"stdout"
block|,
literal|"stderr"
block|,
literal|"syslog"
block|}
control|)
block|{
name|Writer
name|writer11
init|=
operator|new
name|FileWriter
argument_list|(
operator|new
name|File
argument_list|(
name|containerLogDir
argument_list|,
name|fileType
argument_list|)
argument_list|)
decl_stmt|;
name|writer11
operator|.
name|write
argument_list|(
name|containerStr
operator|+
literal|" Hello "
operator|+
name|fileType
operator|+
literal|"!"
argument_list|)
expr_stmt|;
name|writer11
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|verifyContainerLogs ( LogAggregationService logAggregationService, ApplicationId appId, ContainerId[] expectedContainerIds)
specifier|private
name|void
name|verifyContainerLogs
parameter_list|(
name|LogAggregationService
name|logAggregationService
parameter_list|,
name|ApplicationId
name|appId
parameter_list|,
name|ContainerId
index|[]
name|expectedContainerIds
parameter_list|)
throws|throws
name|IOException
block|{
name|AggregatedLogFormat
operator|.
name|LogReader
name|reader
init|=
operator|new
name|AggregatedLogFormat
operator|.
name|LogReader
argument_list|(
name|this
operator|.
name|conf
argument_list|,
name|logAggregationService
operator|.
name|getRemoteNodeLogFileForApp
argument_list|(
name|appId
argument_list|,
name|this
operator|.
name|user
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|this
operator|.
name|user
argument_list|,
name|reader
operator|.
name|getApplicationOwner
argument_list|()
argument_list|)
expr_stmt|;
name|verifyAcls
argument_list|(
name|reader
operator|.
name|getApplicationAcls
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|logMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|DataInputStream
name|valueStream
decl_stmt|;
name|LogKey
name|key
init|=
operator|new
name|LogKey
argument_list|()
decl_stmt|;
name|valueStream
operator|=
name|reader
operator|.
name|next
argument_list|(
name|key
argument_list|)
expr_stmt|;
while|while
condition|(
name|valueStream
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Found container "
operator|+
name|key
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|perContainerMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|logMap
operator|.
name|put
argument_list|(
name|key
operator|.
name|toString
argument_list|()
argument_list|,
name|perContainerMap
argument_list|)
expr_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
name|DataOutputBuffer
name|dob
init|=
operator|new
name|DataOutputBuffer
argument_list|()
decl_stmt|;
name|LogReader
operator|.
name|readAContainerLogsForALogType
argument_list|(
name|valueStream
argument_list|,
name|dob
argument_list|)
expr_stmt|;
name|DataInputBuffer
name|dib
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
name|dib
operator|.
name|reset
argument_list|(
name|dob
operator|.
name|getData
argument_list|()
argument_list|,
name|dob
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"\nLogType:"
argument_list|,
name|dib
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|fileType
init|=
name|dib
operator|.
name|readUTF
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"\nLogLength:"
argument_list|,
name|dib
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|fileLengthStr
init|=
name|dib
operator|.
name|readUTF
argument_list|()
decl_stmt|;
name|long
name|fileLength
init|=
name|Long
operator|.
name|parseLong
argument_list|(
name|fileLengthStr
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"\nLog Contents:\n"
argument_list|,
name|dib
operator|.
name|readUTF
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
operator|(
name|int
operator|)
name|fileLength
index|]
decl_stmt|;
comment|// cast is okay in this
comment|// test.
name|dib
operator|.
name|read
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
operator|(
name|int
operator|)
name|fileLength
argument_list|)
expr_stmt|;
name|perContainerMap
operator|.
name|put
argument_list|(
name|fileType
argument_list|,
operator|new
name|String
argument_list|(
name|buf
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"LogType:"
operator|+
name|fileType
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"LogType:"
operator|+
name|fileLength
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Log Contents:\n"
operator|+
name|perContainerMap
operator|.
name|get
argument_list|(
name|fileType
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|eof
parameter_list|)
block|{
break|break;
block|}
block|}
comment|// Next container
name|key
operator|=
operator|new
name|LogKey
argument_list|()
expr_stmt|;
name|valueStream
operator|=
name|reader
operator|.
name|next
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
comment|// 1 for each container
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedContainerIds
operator|.
name|length
argument_list|,
name|logMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ContainerId
name|cId
range|:
name|expectedContainerIds
control|)
block|{
name|String
name|containerStr
init|=
name|ConverterUtils
operator|.
name|toString
argument_list|(
name|cId
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|thisContainerMap
init|=
name|logMap
operator|.
name|remove
argument_list|(
name|containerStr
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|thisContainerMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|fileType
range|:
operator|new
name|String
index|[]
block|{
literal|"stdout"
block|,
literal|"stderr"
block|,
literal|"syslog"
block|}
control|)
block|{
name|String
name|expectedValue
init|=
name|containerStr
operator|+
literal|" Hello "
operator|+
name|fileType
operator|+
literal|"!"
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Expected log-content : "
operator|+
operator|new
name|String
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|foundValue
init|=
name|thisContainerMap
operator|.
name|remove
argument_list|(
name|fileType
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|cId
operator|+
literal|" "
operator|+
name|fileType
operator|+
literal|" not present in aggregated log-file!"
argument_list|,
name|foundValue
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedValue
argument_list|,
name|foundValue
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|thisContainerMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|logMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testLogAggregationForRealContainerLaunch ()
specifier|public
name|void
name|testLogAggregationForRealContainerLaunch
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|this
operator|.
name|containerManager
operator|.
name|start
argument_list|()
expr_stmt|;
name|File
name|scriptFile
init|=
operator|new
name|File
argument_list|(
name|tmpDir
argument_list|,
literal|"scriptFile.sh"
argument_list|)
decl_stmt|;
name|PrintWriter
name|fileWriter
init|=
operator|new
name|PrintWriter
argument_list|(
name|scriptFile
argument_list|)
decl_stmt|;
name|fileWriter
operator|.
name|write
argument_list|(
literal|"\necho Hello World! Stdout!> "
operator|+
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
literal|"stdout"
argument_list|)
argument_list|)
expr_stmt|;
name|fileWriter
operator|.
name|write
argument_list|(
literal|"\necho Hello World! Stderr!> "
operator|+
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
literal|"stderr"
argument_list|)
argument_list|)
expr_stmt|;
name|fileWriter
operator|.
name|write
argument_list|(
literal|"\necho Hello World! Syslog!> "
operator|+
operator|new
name|File
argument_list|(
name|localLogDir
argument_list|,
literal|"syslog"
argument_list|)
argument_list|)
expr_stmt|;
name|fileWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|ContainerLaunchContext
name|containerLaunchContext
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ContainerLaunchContext
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// ////// Construct the Container-id
name|ApplicationId
name|appId
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|ApplicationId
operator|.
name|class
argument_list|)
decl_stmt|;
name|appId
operator|.
name|setClusterTimestamp
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|appId
operator|.
name|setId
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ApplicationAttemptId
name|appAttemptId
init|=
name|BuilderUtils
operator|.
name|newApplicationAttemptId
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|ContainerId
name|cId
init|=
name|BuilderUtils
operator|.
name|newContainerId
argument_list|(
name|appAttemptId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|containerLaunchContext
operator|.
name|setContainerId
argument_list|(
name|cId
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|setUser
argument_list|(
name|this
operator|.
name|user
argument_list|)
expr_stmt|;
name|URL
name|resource_alpha
init|=
name|ConverterUtils
operator|.
name|getYarnUrlFromPath
argument_list|(
name|localFS
operator|.
name|makeQualified
argument_list|(
operator|new
name|Path
argument_list|(
name|scriptFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|LocalResource
name|rsrc_alpha
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|LocalResource
operator|.
name|class
argument_list|)
decl_stmt|;
name|rsrc_alpha
operator|.
name|setResource
argument_list|(
name|resource_alpha
argument_list|)
expr_stmt|;
name|rsrc_alpha
operator|.
name|setSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|rsrc_alpha
operator|.
name|setVisibility
argument_list|(
name|LocalResourceVisibility
operator|.
name|APPLICATION
argument_list|)
expr_stmt|;
name|rsrc_alpha
operator|.
name|setType
argument_list|(
name|LocalResourceType
operator|.
name|FILE
argument_list|)
expr_stmt|;
name|rsrc_alpha
operator|.
name|setTimestamp
argument_list|(
name|scriptFile
operator|.
name|lastModified
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|destinationFile
init|=
literal|"dest_file"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
name|localResources
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|LocalResource
argument_list|>
argument_list|()
decl_stmt|;
name|localResources
operator|.
name|put
argument_list|(
name|destinationFile
argument_list|,
name|rsrc_alpha
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|setLocalResources
argument_list|(
name|localResources
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|setUser
argument_list|(
name|containerLaunchContext
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|commands
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|commands
operator|.
name|add
argument_list|(
literal|"/bin/bash"
argument_list|)
expr_stmt|;
name|commands
operator|.
name|add
argument_list|(
name|scriptFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|setCommands
argument_list|(
name|commands
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|setResource
argument_list|(
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|containerLaunchContext
operator|.
name|getResource
argument_list|()
operator|.
name|setMemory
argument_list|(
literal|100
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|StartContainerRequest
name|startRequest
init|=
name|recordFactory
operator|.
name|newRecordInstance
argument_list|(
name|StartContainerRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|startRequest
operator|.
name|setContainerLaunchContext
argument_list|(
name|containerLaunchContext
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerManager
operator|.
name|startContainer
argument_list|(
name|startRequest
argument_list|)
expr_stmt|;
name|BaseContainerManagerTest
operator|.
name|waitForContainerState
argument_list|(
name|this
operator|.
name|containerManager
argument_list|,
name|cId
argument_list|,
name|ContainerState
operator|.
name|COMPLETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerManager
operator|.
name|handle
argument_list|(
operator|new
name|CMgrCompletedAppsEvent
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|appId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerManager
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|verifyAcls (Map<ApplicationAccessType, String> logAcls)
specifier|private
name|void
name|verifyAcls
parameter_list|(
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|logAcls
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|this
operator|.
name|acls
operator|.
name|size
argument_list|()
argument_list|,
name|logAcls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ApplicationAccessType
name|appAccessType
range|:
name|this
operator|.
name|acls
operator|.
name|keySet
argument_list|()
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|this
operator|.
name|acls
operator|.
name|get
argument_list|(
name|appAccessType
argument_list|)
argument_list|,
name|logAcls
operator|.
name|get
argument_list|(
name|appAccessType
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createDispatcher ()
specifier|private
name|DrainDispatcher
name|createDispatcher
parameter_list|()
block|{
name|DrainDispatcher
name|dispatcher
init|=
operator|new
name|DrainDispatcher
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|dispatcher
return|;
block|}
DECL|method|createAppAcls ()
specifier|private
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|createAppAcls
parameter_list|()
block|{
name|Map
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
name|appAcls
init|=
operator|new
name|HashMap
argument_list|<
name|ApplicationAccessType
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|appAcls
operator|.
name|put
argument_list|(
name|ApplicationAccessType
operator|.
name|MODIFY_APP
argument_list|,
literal|"user group"
argument_list|)
expr_stmt|;
name|appAcls
operator|.
name|put
argument_list|(
name|ApplicationAccessType
operator|.
name|VIEW_APP
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
return|return
name|appAcls
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|20000
argument_list|)
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testStopAfterError ()
specifier|public
name|void
name|testStopAfterError
parameter_list|()
throws|throws
name|Exception
block|{
name|DeletionService
name|delSrvc
init|=
name|mock
argument_list|(
name|DeletionService
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// get the AppLogAggregationImpl thread to crash
name|LocalDirsHandlerService
name|mockedDirSvc
init|=
name|mock
argument_list|(
name|LocalDirsHandlerService
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockedDirSvc
operator|.
name|getLogDirs
argument_list|()
argument_list|)
operator|.
name|thenThrow
argument_list|(
operator|new
name|RuntimeException
argument_list|()
argument_list|)
expr_stmt|;
name|DrainDispatcher
name|dispatcher
init|=
name|createDispatcher
argument_list|()
decl_stmt|;
name|EventHandler
argument_list|<
name|ApplicationEvent
argument_list|>
name|appEventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|register
argument_list|(
name|ApplicationEventType
operator|.
name|class
argument_list|,
name|appEventHandler
argument_list|)
expr_stmt|;
name|LogAggregationService
name|logAggregationService
init|=
operator|new
name|LogAggregationService
argument_list|(
name|dispatcher
argument_list|,
name|this
operator|.
name|context
argument_list|,
name|delSrvc
argument_list|,
name|mockedDirSvc
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|application1
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|ALL_CONTAINERS
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|testLogAggregatorCleanup ()
specifier|public
name|void
name|testLogAggregatorCleanup
parameter_list|()
throws|throws
name|Exception
block|{
name|DeletionService
name|delSrvc
init|=
name|mock
argument_list|(
name|DeletionService
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// get the AppLogAggregationImpl thread to crash
name|LocalDirsHandlerService
name|mockedDirSvc
init|=
name|mock
argument_list|(
name|LocalDirsHandlerService
operator|.
name|class
argument_list|)
decl_stmt|;
name|DrainDispatcher
name|dispatcher
init|=
name|createDispatcher
argument_list|()
decl_stmt|;
name|EventHandler
argument_list|<
name|ApplicationEvent
argument_list|>
name|appEventHandler
init|=
name|mock
argument_list|(
name|EventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|register
argument_list|(
name|ApplicationEventType
operator|.
name|class
argument_list|,
name|appEventHandler
argument_list|)
expr_stmt|;
name|LogAggregationService
name|logAggregationService
init|=
operator|new
name|LogAggregationService
argument_list|(
name|dispatcher
argument_list|,
name|this
operator|.
name|context
argument_list|,
name|delSrvc
argument_list|,
name|mockedDirSvc
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|init
argument_list|(
name|this
operator|.
name|conf
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|start
argument_list|()
expr_stmt|;
name|ApplicationId
name|application1
init|=
name|BuilderUtils
operator|.
name|newApplicationId
argument_list|(
literal|1234
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppStartedEvent
argument_list|(
name|application1
argument_list|,
name|this
operator|.
name|user
argument_list|,
literal|null
argument_list|,
name|ContainerLogsRetentionPolicy
operator|.
name|ALL_CONTAINERS
argument_list|,
name|this
operator|.
name|acls
argument_list|)
argument_list|)
expr_stmt|;
name|logAggregationService
operator|.
name|handle
argument_list|(
operator|new
name|LogHandlerAppFinishedEvent
argument_list|(
name|application1
argument_list|)
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|await
argument_list|()
expr_stmt|;
name|int
name|timeToWait
init|=
literal|20
operator|*
literal|1000
decl_stmt|;
while|while
condition|(
name|timeToWait
operator|>
literal|0
operator|&&
name|logAggregationService
operator|.
name|getNumAggregators
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|timeToWait
operator|-=
literal|100
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Log aggregator failed to cleanup!"
argument_list|,
literal|0
argument_list|,
name|logAggregationService
operator|.
name|getNumAggregators
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

