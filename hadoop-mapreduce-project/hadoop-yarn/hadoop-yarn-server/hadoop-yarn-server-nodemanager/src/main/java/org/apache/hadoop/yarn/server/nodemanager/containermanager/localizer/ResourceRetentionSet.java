begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|containermanager
operator|.
name|localizer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|nodemanager
operator|.
name|DeletionService
import|;
end_import

begin_class
DECL|class|ResourceRetentionSet
specifier|public
class|class
name|ResourceRetentionSet
block|{
DECL|field|delSize
specifier|private
name|long
name|delSize
decl_stmt|;
DECL|field|currentSize
specifier|private
name|long
name|currentSize
decl_stmt|;
DECL|field|targetSize
specifier|private
specifier|final
name|long
name|targetSize
decl_stmt|;
DECL|field|delService
specifier|private
specifier|final
name|DeletionService
name|delService
decl_stmt|;
DECL|field|retain
specifier|private
specifier|final
name|SortedMap
argument_list|<
name|LocalizedResource
argument_list|,
name|LocalResourcesTracker
argument_list|>
name|retain
decl_stmt|;
DECL|method|ResourceRetentionSet (DeletionService delService, long targetSize)
name|ResourceRetentionSet
parameter_list|(
name|DeletionService
name|delService
parameter_list|,
name|long
name|targetSize
parameter_list|)
block|{
name|this
argument_list|(
name|delService
argument_list|,
name|targetSize
argument_list|,
operator|new
name|LRUComparator
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|ResourceRetentionSet (DeletionService delService, long targetSize, Comparator<? super LocalizedResource> cmp)
name|ResourceRetentionSet
parameter_list|(
name|DeletionService
name|delService
parameter_list|,
name|long
name|targetSize
parameter_list|,
name|Comparator
argument_list|<
name|?
super|super
name|LocalizedResource
argument_list|>
name|cmp
parameter_list|)
block|{
name|this
argument_list|(
name|delService
argument_list|,
name|targetSize
argument_list|,
operator|new
name|TreeMap
argument_list|<
name|LocalizedResource
argument_list|,
name|LocalResourcesTracker
argument_list|>
argument_list|(
name|cmp
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|ResourceRetentionSet (DeletionService delService, long targetSize, SortedMap<LocalizedResource,LocalResourcesTracker> retain)
name|ResourceRetentionSet
parameter_list|(
name|DeletionService
name|delService
parameter_list|,
name|long
name|targetSize
parameter_list|,
name|SortedMap
argument_list|<
name|LocalizedResource
argument_list|,
name|LocalResourcesTracker
argument_list|>
name|retain
parameter_list|)
block|{
name|this
operator|.
name|retain
operator|=
name|retain
expr_stmt|;
name|this
operator|.
name|delService
operator|=
name|delService
expr_stmt|;
name|this
operator|.
name|targetSize
operator|=
name|targetSize
expr_stmt|;
block|}
DECL|method|addResources (LocalResourcesTracker newTracker)
specifier|public
name|void
name|addResources
parameter_list|(
name|LocalResourcesTracker
name|newTracker
parameter_list|)
block|{
for|for
control|(
name|LocalizedResource
name|resource
range|:
name|newTracker
control|)
block|{
name|currentSize
operator|+=
name|resource
operator|.
name|getSize
argument_list|()
expr_stmt|;
if|if
condition|(
name|resource
operator|.
name|getRefCount
argument_list|()
operator|>
literal|0
condition|)
block|{
comment|// always retain resources in use
continue|continue;
block|}
name|retain
operator|.
name|put
argument_list|(
name|resource
argument_list|,
name|newTracker
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|LocalizedResource
argument_list|,
name|LocalResourcesTracker
argument_list|>
argument_list|>
name|i
init|=
name|retain
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|currentSize
operator|-
name|delSize
operator|>
name|targetSize
operator|&&
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|LocalizedResource
argument_list|,
name|LocalResourcesTracker
argument_list|>
name|rsrc
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|LocalizedResource
name|resource
init|=
name|rsrc
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|LocalResourcesTracker
name|tracker
init|=
name|rsrc
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|tracker
operator|.
name|remove
argument_list|(
name|resource
argument_list|,
name|delService
argument_list|)
condition|)
block|{
name|delSize
operator|+=
name|resource
operator|.
name|getSize
argument_list|()
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Cache: "
argument_list|)
operator|.
name|append
argument_list|(
name|currentSize
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Deleted: "
argument_list|)
operator|.
name|append
argument_list|(
name|delSize
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|class|LRUComparator
specifier|static
class|class
name|LRUComparator
implements|implements
name|Comparator
argument_list|<
name|LocalizedResource
argument_list|>
block|{
DECL|method|compare (LocalizedResource r1, LocalizedResource r2)
specifier|public
name|int
name|compare
parameter_list|(
name|LocalizedResource
name|r1
parameter_list|,
name|LocalizedResource
name|r2
parameter_list|)
block|{
name|long
name|ret
init|=
name|r1
operator|.
name|getTimestamp
argument_list|()
operator|-
name|r2
operator|.
name|getTimestamp
argument_list|()
decl_stmt|;
if|if
condition|(
literal|0
operator|==
name|ret
condition|)
block|{
return|return
name|System
operator|.
name|identityHashCode
argument_list|(
name|r1
argument_list|)
operator|-
name|System
operator|.
name|identityHashCode
argument_list|(
name|r2
argument_list|)
return|;
block|}
return|return
name|ret
operator|>
literal|0
condition|?
literal|1
else|:
operator|-
literal|1
return|;
block|}
DECL|method|equals (Object other)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
return|return
name|this
operator|==
name|other
return|;
block|}
block|}
block|}
end_class

end_unit

