begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|capacity
operator|.
name|LeafQueue
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|CapacitySchedulerLeafQueueInfo
specifier|public
class|class
name|CapacitySchedulerLeafQueueInfo
extends|extends
name|CapacitySchedulerQueueInfo
block|{
DECL|field|numActiveApplications
specifier|protected
name|int
name|numActiveApplications
decl_stmt|;
DECL|field|numPendingApplications
specifier|protected
name|int
name|numPendingApplications
decl_stmt|;
DECL|field|numContainers
specifier|protected
name|int
name|numContainers
decl_stmt|;
DECL|field|maxApplications
specifier|protected
name|int
name|maxApplications
decl_stmt|;
DECL|field|maxApplicationsPerUser
specifier|protected
name|int
name|maxApplicationsPerUser
decl_stmt|;
DECL|field|maxActiveApplications
specifier|protected
name|int
name|maxActiveApplications
decl_stmt|;
DECL|field|maxActiveApplicationsPerUser
specifier|protected
name|int
name|maxActiveApplicationsPerUser
decl_stmt|;
DECL|field|userLimit
specifier|protected
name|int
name|userLimit
decl_stmt|;
DECL|field|userLimitFactor
specifier|protected
name|float
name|userLimitFactor
decl_stmt|;
DECL|method|CapacitySchedulerLeafQueueInfo ()
name|CapacitySchedulerLeafQueueInfo
parameter_list|()
block|{   }
empty_stmt|;
DECL|method|CapacitySchedulerLeafQueueInfo (LeafQueue q)
name|CapacitySchedulerLeafQueueInfo
parameter_list|(
name|LeafQueue
name|q
parameter_list|)
block|{
name|super
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|numActiveApplications
operator|=
name|q
operator|.
name|getNumActiveApplications
argument_list|()
expr_stmt|;
name|numPendingApplications
operator|=
name|q
operator|.
name|getNumPendingApplications
argument_list|()
expr_stmt|;
name|numContainers
operator|=
name|q
operator|.
name|getNumContainers
argument_list|()
expr_stmt|;
name|maxApplications
operator|=
name|q
operator|.
name|getMaxApplications
argument_list|()
expr_stmt|;
name|maxApplicationsPerUser
operator|=
name|q
operator|.
name|getMaxApplicationsPerUser
argument_list|()
expr_stmt|;
name|maxActiveApplications
operator|=
name|q
operator|.
name|getMaximumActiveApplications
argument_list|()
expr_stmt|;
name|maxActiveApplicationsPerUser
operator|=
name|q
operator|.
name|getMaximumActiveApplicationsPerUser
argument_list|()
expr_stmt|;
name|userLimit
operator|=
name|q
operator|.
name|getUserLimit
argument_list|()
expr_stmt|;
name|userLimitFactor
operator|=
name|q
operator|.
name|getUserLimitFactor
argument_list|()
expr_stmt|;
block|}
DECL|method|getNumActiveApplications ()
specifier|public
name|int
name|getNumActiveApplications
parameter_list|()
block|{
return|return
name|numActiveApplications
return|;
block|}
DECL|method|getNumPendingApplications ()
specifier|public
name|int
name|getNumPendingApplications
parameter_list|()
block|{
return|return
name|numPendingApplications
return|;
block|}
DECL|method|getNumContainers ()
specifier|public
name|int
name|getNumContainers
parameter_list|()
block|{
return|return
name|numContainers
return|;
block|}
DECL|method|getMaxApplications ()
specifier|public
name|int
name|getMaxApplications
parameter_list|()
block|{
return|return
name|maxApplications
return|;
block|}
DECL|method|getMaxApplicationsPerUser ()
specifier|public
name|int
name|getMaxApplicationsPerUser
parameter_list|()
block|{
return|return
name|maxApplicationsPerUser
return|;
block|}
DECL|method|getMaxActiveApplications ()
specifier|public
name|int
name|getMaxActiveApplications
parameter_list|()
block|{
return|return
name|maxActiveApplications
return|;
block|}
DECL|method|getMaxActiveApplicationsPerUser ()
specifier|public
name|int
name|getMaxActiveApplicationsPerUser
parameter_list|()
block|{
return|return
name|maxActiveApplicationsPerUser
return|;
block|}
DECL|method|getUserLimit ()
specifier|public
name|int
name|getUserLimit
parameter_list|()
block|{
return|return
name|userLimit
return|;
block|}
DECL|method|getUserLimitFactor ()
specifier|public
name|float
name|getUserLimitFactor
parameter_list|()
block|{
return|return
name|userLimitFactor
return|;
block|}
block|}
end_class

end_unit

