begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.webapp.dao
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|webapp
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|QueueState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|RMContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|ResourceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmnode
operator|.
name|RMNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|SchedulerNodeReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|scheduler
operator|.
name|fifo
operator|.
name|FifoScheduler
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"fifoScheduler"
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"fifoScheduler"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|FifoSchedulerInfo
specifier|public
class|class
name|FifoSchedulerInfo
extends|extends
name|SchedulerInfo
block|{
DECL|field|capacity
specifier|protected
name|float
name|capacity
decl_stmt|;
DECL|field|usedCapacity
specifier|protected
name|float
name|usedCapacity
decl_stmt|;
DECL|field|qstate
specifier|protected
name|QueueState
name|qstate
decl_stmt|;
DECL|field|minQueueMemoryCapacity
specifier|protected
name|int
name|minQueueMemoryCapacity
decl_stmt|;
DECL|field|maxQueueMemoryCapacity
specifier|protected
name|int
name|maxQueueMemoryCapacity
decl_stmt|;
DECL|field|numNodes
specifier|protected
name|int
name|numNodes
decl_stmt|;
DECL|field|usedNodeCapacity
specifier|protected
name|int
name|usedNodeCapacity
decl_stmt|;
DECL|field|availNodeCapacity
specifier|protected
name|int
name|availNodeCapacity
decl_stmt|;
DECL|field|totalNodeCapacity
specifier|protected
name|int
name|totalNodeCapacity
decl_stmt|;
DECL|field|numContainers
specifier|protected
name|int
name|numContainers
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|qstateFormatted
specifier|protected
name|String
name|qstateFormatted
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|qName
specifier|protected
name|String
name|qName
decl_stmt|;
DECL|method|FifoSchedulerInfo ()
specifier|public
name|FifoSchedulerInfo
parameter_list|()
block|{   }
comment|// JAXB needs this
DECL|method|FifoSchedulerInfo (final ResourceManager rm)
specifier|public
name|FifoSchedulerInfo
parameter_list|(
specifier|final
name|ResourceManager
name|rm
parameter_list|)
block|{
name|RMContext
name|rmContext
init|=
name|rm
operator|.
name|getRMContext
argument_list|()
decl_stmt|;
name|FifoScheduler
name|fs
init|=
operator|(
name|FifoScheduler
operator|)
name|rm
operator|.
name|getResourceScheduler
argument_list|()
decl_stmt|;
name|qName
operator|=
name|fs
operator|.
name|getQueueInfo
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
operator|.
name|getQueueName
argument_list|()
expr_stmt|;
name|QueueInfo
name|qInfo
init|=
name|fs
operator|.
name|getQueueInfo
argument_list|(
name|qName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|this
operator|.
name|usedCapacity
operator|=
name|qInfo
operator|.
name|getCurrentCapacity
argument_list|()
expr_stmt|;
name|this
operator|.
name|capacity
operator|=
name|qInfo
operator|.
name|getCapacity
argument_list|()
expr_stmt|;
name|this
operator|.
name|minQueueMemoryCapacity
operator|=
name|fs
operator|.
name|getMinimumResourceCapability
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
name|this
operator|.
name|maxQueueMemoryCapacity
operator|=
name|fs
operator|.
name|getMaximumResourceCapability
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
name|this
operator|.
name|qstate
operator|=
name|qInfo
operator|.
name|getQueueState
argument_list|()
expr_stmt|;
name|this
operator|.
name|numNodes
operator|=
name|rmContext
operator|.
name|getRMNodes
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|this
operator|.
name|usedNodeCapacity
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|availNodeCapacity
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|totalNodeCapacity
operator|=
literal|0
expr_stmt|;
name|this
operator|.
name|numContainers
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|RMNode
name|ni
range|:
name|rmContext
operator|.
name|getRMNodes
argument_list|()
operator|.
name|values
argument_list|()
control|)
block|{
name|SchedulerNodeReport
name|report
init|=
name|fs
operator|.
name|getNodeReport
argument_list|(
name|ni
operator|.
name|getNodeID
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|usedNodeCapacity
operator|+=
name|report
operator|.
name|getUsedResource
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
name|this
operator|.
name|availNodeCapacity
operator|+=
name|report
operator|.
name|getAvailableResource
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
name|this
operator|.
name|totalNodeCapacity
operator|+=
name|ni
operator|.
name|getTotalCapability
argument_list|()
operator|.
name|getMemory
argument_list|()
expr_stmt|;
name|this
operator|.
name|numContainers
operator|+=
name|fs
operator|.
name|getNodeReport
argument_list|(
name|ni
operator|.
name|getNodeID
argument_list|()
argument_list|)
operator|.
name|getNumContainers
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getNumNodes ()
specifier|public
name|int
name|getNumNodes
parameter_list|()
block|{
return|return
name|this
operator|.
name|numNodes
return|;
block|}
DECL|method|getUsedNodeCapacity ()
specifier|public
name|int
name|getUsedNodeCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|usedNodeCapacity
return|;
block|}
DECL|method|getAvailNodeCapacity ()
specifier|public
name|int
name|getAvailNodeCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|availNodeCapacity
return|;
block|}
DECL|method|getTotalNodeCapacity ()
specifier|public
name|int
name|getTotalNodeCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|totalNodeCapacity
return|;
block|}
DECL|method|getNumContainers ()
specifier|public
name|int
name|getNumContainers
parameter_list|()
block|{
return|return
name|this
operator|.
name|numContainers
return|;
block|}
DECL|method|getState ()
specifier|public
name|String
name|getState
parameter_list|()
block|{
return|return
name|this
operator|.
name|qstate
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getQueueName ()
specifier|public
name|String
name|getQueueName
parameter_list|()
block|{
return|return
name|this
operator|.
name|qName
return|;
block|}
DECL|method|getMinQueueMemoryCapacity ()
specifier|public
name|int
name|getMinQueueMemoryCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|minQueueMemoryCapacity
return|;
block|}
DECL|method|getMaxQueueMemoryCapacity ()
specifier|public
name|int
name|getMaxQueueMemoryCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxQueueMemoryCapacity
return|;
block|}
DECL|method|getCapacity ()
specifier|public
name|float
name|getCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|capacity
return|;
block|}
DECL|method|getUsedCapacity ()
specifier|public
name|float
name|getUsedCapacity
parameter_list|()
block|{
return|return
name|this
operator|.
name|usedCapacity
return|;
block|}
block|}
end_class

end_unit

