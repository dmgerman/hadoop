begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.resourcemanager.rmnode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|resourcemanager
operator|.
name|rmnode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|NodeState
import|;
end_import

begin_comment
comment|//TODO yarn.api.records.NodeState is a clone of RMNodeState made for MR-3353.
end_comment

begin_comment
comment|// In a subsequent patch RMNodeState should be replaced with NodeState
end_comment

begin_enum
DECL|enum|RMNodeState
specifier|public
enum|enum
name|RMNodeState
block|{
DECL|enumConstant|NEW
DECL|enumConstant|RUNNING
DECL|enumConstant|UNHEALTHY
DECL|enumConstant|DECOMMISSIONED
DECL|enumConstant|LOST
DECL|enumConstant|REBOOTED
name|NEW
block|,
name|RUNNING
block|,
name|UNHEALTHY
block|,
name|DECOMMISSIONED
block|,
name|LOST
block|,
name|REBOOTED
block|;
DECL|method|toNodeState (RMNodeState state)
specifier|public
specifier|static
name|NodeState
name|toNodeState
parameter_list|(
name|RMNodeState
name|state
parameter_list|)
block|{
switch|switch
condition|(
name|state
condition|)
block|{
case|case
name|NEW
case|:
return|return
name|NodeState
operator|.
name|NEW
return|;
case|case
name|RUNNING
case|:
return|return
name|NodeState
operator|.
name|RUNNING
return|;
case|case
name|UNHEALTHY
case|:
return|return
name|NodeState
operator|.
name|UNHEALTHY
return|;
case|case
name|DECOMMISSIONED
case|:
return|return
name|NodeState
operator|.
name|DECOMMISSIONED
return|;
case|case
name|LOST
case|:
return|return
name|NodeState
operator|.
name|LOST
return|;
case|case
name|REBOOTED
case|:
return|return
name|NodeState
operator|.
name|REBOOTED
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_enum

begin_empty_stmt
empty_stmt|;
end_empty_stmt

end_unit

