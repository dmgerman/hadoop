begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.client.cli
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|KillJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|MockClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|conf
operator|.
name|SubmarineLogs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|exception
operator|.
name|SubmarineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestKillJobCliParsing
specifier|public
class|class
name|TestKillJobCliParsing
block|{
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
block|{
name|SubmarineLogs
operator|.
name|verboseOff
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPrintHelp ()
specifier|public
name|void
name|testPrintHelp
parameter_list|()
block|{
name|MockClientContext
name|mockClientContext
init|=
operator|new
name|MockClientContext
argument_list|()
decl_stmt|;
name|KillJobCli
name|killJobCli
init|=
operator|new
name|KillJobCli
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|killJobCli
operator|.
name|printUsages
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testKillJob ()
specifier|public
name|void
name|testKillJob
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|SubmarineException
throws|,
name|YarnException
throws|,
name|ParseException
throws|,
name|IOException
block|{
name|MockClientContext
name|mockClientContext
init|=
operator|new
name|MockClientContext
argument_list|()
decl_stmt|;
name|KillJobCli
name|killJobCli
init|=
operator|new
name|KillJobCli
argument_list|(
name|mockClientContext
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|killJob
parameter_list|()
block|{
comment|// do nothing
return|return
literal|false
return|;
block|}
block|}
decl_stmt|;
name|killJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|}
argument_list|)
expr_stmt|;
name|KillJobParameters
name|parameters
init|=
name|killJobCli
operator|.
name|getParameters
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|parameters
operator|.
name|getName
argument_list|()
argument_list|,
literal|"my-job"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

