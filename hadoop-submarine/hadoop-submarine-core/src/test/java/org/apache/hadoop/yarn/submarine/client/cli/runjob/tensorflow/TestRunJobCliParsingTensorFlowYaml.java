begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.client.cli.runjob.tensorflow
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|runjob
operator|.
name|tensorflow
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|YamlConfigTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|runjob
operator|.
name|RunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|runjob
operator|.
name|TensorFlowRunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|runjob
operator|.
name|RunJobCli
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|conf
operator|.
name|SubmarineLogs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|exception
operator|.
name|SubmarineRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|resource
operator|.
name|ResourceUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|resource
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|runjob
operator|.
name|TestRunJobCliParsingCommon
operator|.
name|getMockClientContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test class that verifies the correctness of TF YAML configuration parsing.  */
end_comment

begin_class
DECL|class|TestRunJobCliParsingTensorFlowYaml
specifier|public
class|class
name|TestRunJobCliParsingTensorFlowYaml
block|{
DECL|field|OVERRIDDEN_PREFIX
specifier|private
specifier|static
specifier|final
name|String
name|OVERRIDDEN_PREFIX
init|=
literal|"overridden_"
decl_stmt|;
DECL|field|DIR_NAME
specifier|private
specifier|static
specifier|final
name|String
name|DIR_NAME
init|=
literal|"runjob-tensorflow-yaml"
decl_stmt|;
DECL|field|yamlConfig
specifier|private
name|File
name|yamlConfig
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestRunJobCliParsingTensorFlowYaml
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
block|{
name|SubmarineLogs
operator|.
name|verboseOff
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after ()
specifier|public
name|void
name|after
parameter_list|()
block|{
name|YamlConfigTestUtils
operator|.
name|deleteFile
argument_list|(
name|yamlConfig
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Rule
DECL|field|exception
specifier|public
name|ExpectedException
name|exception
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
DECL|method|verifyBasicConfigValues (RunJobParameters jobRunParameters)
specifier|private
name|void
name|verifyBasicConfigValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|)
block|{
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"env1=env1Value"
argument_list|,
literal|"env2=env2Value"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyBasicConfigValues (RunJobParameters jobRunParameters, List<String> expectedEnvs)
specifier|private
name|void
name|verifyBasicConfigValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|expectedEnvs
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"testInputPath"
argument_list|,
name|jobRunParameters
operator|.
name|getInputPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testCheckpointPath"
argument_list|,
name|jobRunParameters
operator|.
name|getCheckpointPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testDockerImage"
argument_list|,
name|jobRunParameters
operator|.
name|getDockerImageName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jobRunParameters
operator|.
name|getLocalizations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|jobRunParameters
operator|.
name|getLocalizations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|jobRunParameters
operator|.
name|getQuicklinks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|jobRunParameters
operator|.
name|getQuicklinks
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jobRunParameters
operator|.
name|isWaitJobFinish
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|env
range|:
name|expectedEnvs
control|)
block|{
name|assertTrue
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s should be in env list of jobRunParameters!"
argument_list|,
name|env
argument_list|)
argument_list|,
name|jobRunParameters
operator|.
name|getEnvars
argument_list|()
operator|.
name|contains
argument_list|(
name|env
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyPsValues (RunJobParameters jobRunParameters, String prefix)
specifier|private
name|void
name|verifyPsValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|RunJobParameters
operator|.
name|class
operator|+
literal|" must be an instance of "
operator|+
name|TensorFlowRunJobParameters
operator|.
name|class
argument_list|,
name|jobRunParameters
operator|instanceof
name|TensorFlowRunJobParameters
argument_list|)
expr_stmt|;
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
operator|(
name|TensorFlowRunJobParameters
operator|)
name|jobRunParameters
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|tensorFlowParams
operator|.
name|getNumPS
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"testLaunchCmdPs"
argument_list|,
name|tensorFlowParams
operator|.
name|getPSLaunchCmd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"testDockerImagePs"
argument_list|,
name|tensorFlowParams
operator|.
name|getPsDockerImage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|20500
argument_list|,
literal|34
argument_list|)
argument_list|,
name|tensorFlowParams
operator|.
name|getPsResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyWorkerCommonValues ( RunJobParameters jobRunParameters, String prefix)
specifier|private
name|TensorFlowRunJobParameters
name|verifyWorkerCommonValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|RunJobParameters
operator|.
name|class
operator|+
literal|" must be an instance of "
operator|+
name|TensorFlowRunJobParameters
operator|.
name|class
argument_list|,
name|jobRunParameters
operator|instanceof
name|TensorFlowRunJobParameters
argument_list|)
expr_stmt|;
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
operator|(
name|TensorFlowRunJobParameters
operator|)
name|jobRunParameters
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|tensorFlowParams
operator|.
name|getNumWorkers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"testLaunchCmdWorker"
argument_list|,
name|tensorFlowParams
operator|.
name|getWorkerLaunchCmd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prefix
operator|+
literal|"testDockerImageWorker"
argument_list|,
name|tensorFlowParams
operator|.
name|getWorkerDockerImage
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tensorFlowParams
return|;
block|}
DECL|method|verifyWorkerValues (RunJobParameters jobRunParameters, String prefix)
specifier|private
name|void
name|verifyWorkerValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
name|verifyWorkerCommonValues
argument_list|(
name|jobRunParameters
argument_list|,
name|prefix
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|20480
argument_list|,
literal|32
argument_list|)
argument_list|,
name|tensorFlowParams
operator|.
name|getWorkerResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyWorkerValuesWithGpu (RunJobParameters jobRunParameters, String prefix)
specifier|private
name|void
name|verifyWorkerValuesWithGpu
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|,
name|String
name|prefix
parameter_list|)
block|{
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
name|verifyWorkerCommonValues
argument_list|(
name|jobRunParameters
argument_list|,
name|prefix
argument_list|)
decl_stmt|;
name|Resource
name|workResource
init|=
name|Resources
operator|.
name|createResource
argument_list|(
literal|20480
argument_list|,
literal|32
argument_list|)
decl_stmt|;
name|ResourceUtils
operator|.
name|setResource
argument_list|(
name|workResource
argument_list|,
name|ResourceUtils
operator|.
name|GPU_URI
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|workResource
argument_list|,
name|tensorFlowParams
operator|.
name|getWorkerResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifySecurityValues (RunJobParameters jobRunParameters)
specifier|private
name|void
name|verifySecurityValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"keytabPath"
argument_list|,
name|jobRunParameters
operator|.
name|getKeytab
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testPrincipal"
argument_list|,
name|jobRunParameters
operator|.
name|getPrincipal
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jobRunParameters
operator|.
name|isDistributeKeytab
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyTensorboardValues (RunJobParameters jobRunParameters)
specifier|private
name|void
name|verifyTensorboardValues
parameter_list|(
name|RunJobParameters
name|jobRunParameters
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|RunJobParameters
operator|.
name|class
operator|+
literal|" must be an instance of "
operator|+
name|TensorFlowRunJobParameters
operator|.
name|class
argument_list|,
name|jobRunParameters
operator|instanceof
name|TensorFlowRunJobParameters
argument_list|)
expr_stmt|;
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
operator|(
name|TensorFlowRunJobParameters
operator|)
name|jobRunParameters
decl_stmt|;
name|assertTrue
argument_list|(
name|tensorFlowParams
operator|.
name|isTensorboardEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"tensorboardDockerImage"
argument_list|,
name|tensorFlowParams
operator|.
name|getTensorboardDockerImage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|21000
argument_list|,
literal|37
argument_list|)
argument_list|,
name|tensorFlowParams
operator|.
name|getTensorboardResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidYamlParsing ()
specifier|public
name|void
name|testValidYamlParsing
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/valid-config.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyWorkerValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifySecurityValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyTensorboardValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidGpuYamlParsing ()
specifier|public
name|void
name|testValidGpuYamlParsing
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|ResourceUtils
operator|.
name|configureResourceType
argument_list|(
name|ResourceUtils
operator|.
name|GPU_URI
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SubmarineRuntimeException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"The hadoop dependency doesn't support gpu resource, "
operator|+
literal|"so just skip this test case."
argument_list|)
expr_stmt|;
return|return;
block|}
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/valid-gpu-config.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyWorkerValuesWithGpu
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifySecurityValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyTensorboardValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRoleOverrides ()
specifier|public
name|void
name|testRoleOverrides
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|SubmarineLogs
operator|.
name|isVerbose
argument_list|()
argument_list|)
expr_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/valid-config-with-overrides.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
name|OVERRIDDEN_PREFIX
argument_list|)
expr_stmt|;
name|verifyWorkerValues
argument_list|(
name|jobRunParameters
argument_list|,
name|OVERRIDDEN_PREFIX
argument_list|)
expr_stmt|;
name|verifySecurityValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyTensorboardValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingPrincipalUnderSecuritySection ()
specifier|public
name|void
name|testMissingPrincipalUnderSecuritySection
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/security-principal-is-missing.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyWorkerValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyTensorboardValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
comment|//Verify security values
name|assertEquals
argument_list|(
literal|"keytabPath"
argument_list|,
name|jobRunParameters
operator|.
name|getKeytab
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Principal should be null!"
argument_list|,
name|jobRunParameters
operator|.
name|getPrincipal
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jobRunParameters
operator|.
name|isDistributeKeytab
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingTensorBoardDockerImage ()
specifier|public
name|void
name|testMissingTensorBoardDockerImage
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/tensorboard-dockerimage-is-missing.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyWorkerValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifySecurityValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|TensorFlowRunJobParameters
name|tensorFlowParams
init|=
operator|(
name|TensorFlowRunJobParameters
operator|)
name|jobRunParameters
decl_stmt|;
name|assertTrue
argument_list|(
name|tensorFlowParams
operator|.
name|isTensorboardEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"tensorboardDockerImage should be null!"
argument_list|,
name|tensorFlowParams
operator|.
name|getTensorboardDockerImage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Resources
operator|.
name|createResource
argument_list|(
literal|21000
argument_list|,
literal|37
argument_list|)
argument_list|,
name|tensorFlowParams
operator|.
name|getTensorboardResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingEnvs ()
specifier|public
name|void
name|testMissingEnvs
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|yamlConfig
operator|=
name|YamlConfigTestUtils
operator|.
name|createTempFileWithContents
argument_list|(
name|DIR_NAME
operator|+
literal|"/envs-are-missing.yaml"
argument_list|)
expr_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
name|yamlConfig
operator|.
name|getAbsolutePath
argument_list|()
block|,
literal|"--verbose"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|verifyBasicConfigValues
argument_list|(
name|jobRunParameters
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
name|verifyPsValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifyWorkerValues
argument_list|(
name|jobRunParameters
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|verifySecurityValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
name|verifyTensorboardValues
argument_list|(
name|jobRunParameters
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

