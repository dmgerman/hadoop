begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.yarnservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|RunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|fs
operator|.
name|RemoteDirectoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|command
operator|.
name|AbstractLaunchCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|command
operator|.
name|LaunchCommandFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|tensorflow
operator|.
name|TensorFlowCommons
operator|.
name|getScriptFileName
import|;
end_import

begin_comment
comment|/**  * Abstract base class for Component classes.  * The implementations of this class are act like factories for  * {@link Component} instances.  * All dependencies are passed to the constructor so that child classes  * are obliged to provide matching constructors.  */
end_comment

begin_class
DECL|class|AbstractComponent
specifier|public
specifier|abstract
class|class
name|AbstractComponent
block|{
DECL|field|fsOperations
specifier|private
specifier|final
name|FileSystemOperations
name|fsOperations
decl_stmt|;
DECL|field|parameters
specifier|protected
specifier|final
name|RunJobParameters
name|parameters
decl_stmt|;
DECL|field|taskType
specifier|protected
specifier|final
name|TaskType
name|taskType
decl_stmt|;
DECL|field|remoteDirectoryManager
specifier|private
specifier|final
name|RemoteDirectoryManager
name|remoteDirectoryManager
decl_stmt|;
DECL|field|yarnConfig
specifier|protected
specifier|final
name|Configuration
name|yarnConfig
decl_stmt|;
DECL|field|launchCommandFactory
specifier|private
specifier|final
name|LaunchCommandFactory
name|launchCommandFactory
decl_stmt|;
comment|/**    * This is only required for testing.    */
DECL|field|localScriptFile
specifier|private
name|String
name|localScriptFile
decl_stmt|;
DECL|method|AbstractComponent (FileSystemOperations fsOperations, RemoteDirectoryManager remoteDirectoryManager, RunJobParameters parameters, TaskType taskType, Configuration yarnConfig, LaunchCommandFactory launchCommandFactory)
specifier|public
name|AbstractComponent
parameter_list|(
name|FileSystemOperations
name|fsOperations
parameter_list|,
name|RemoteDirectoryManager
name|remoteDirectoryManager
parameter_list|,
name|RunJobParameters
name|parameters
parameter_list|,
name|TaskType
name|taskType
parameter_list|,
name|Configuration
name|yarnConfig
parameter_list|,
name|LaunchCommandFactory
name|launchCommandFactory
parameter_list|)
block|{
name|this
operator|.
name|fsOperations
operator|=
name|fsOperations
expr_stmt|;
name|this
operator|.
name|remoteDirectoryManager
operator|=
name|remoteDirectoryManager
expr_stmt|;
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
name|this
operator|.
name|taskType
operator|=
name|taskType
expr_stmt|;
name|this
operator|.
name|launchCommandFactory
operator|=
name|launchCommandFactory
expr_stmt|;
name|this
operator|.
name|yarnConfig
operator|=
name|yarnConfig
expr_stmt|;
block|}
DECL|method|createComponent ()
specifier|protected
specifier|abstract
name|Component
name|createComponent
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/**    * Generates a command launch script on local disk,    * returns path to the script.    */
DECL|method|generateLaunchCommand (Component component)
specifier|protected
name|void
name|generateLaunchCommand
parameter_list|(
name|Component
name|component
parameter_list|)
throws|throws
name|IOException
block|{
name|AbstractLaunchCommand
name|launchCommand
init|=
name|launchCommandFactory
operator|.
name|createLaunchCommand
argument_list|(
name|taskType
argument_list|,
name|component
argument_list|)
decl_stmt|;
name|this
operator|.
name|localScriptFile
operator|=
name|launchCommand
operator|.
name|generateLaunchScript
argument_list|()
expr_stmt|;
name|String
name|remoteLaunchCommand
init|=
name|uploadLaunchCommand
argument_list|(
name|component
argument_list|)
decl_stmt|;
name|component
operator|.
name|setLaunchCommand
argument_list|(
name|remoteLaunchCommand
argument_list|)
expr_stmt|;
block|}
DECL|method|uploadLaunchCommand (Component component)
specifier|private
name|String
name|uploadLaunchCommand
parameter_list|(
name|Component
name|component
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|localScriptFile
argument_list|,
literal|"localScriptFile should be "
operator|+
literal|"set before calling this method!"
argument_list|)
expr_stmt|;
name|Path
name|stagingDir
init|=
name|remoteDirectoryManager
operator|.
name|getJobStagingArea
argument_list|(
name|parameters
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|String
name|destScriptFileName
init|=
name|getScriptFileName
argument_list|(
name|taskType
argument_list|)
decl_stmt|;
name|fsOperations
operator|.
name|uploadToRemoteFileAndLocalizeToContainerWorkDir
argument_list|(
name|stagingDir
argument_list|,
name|localScriptFile
argument_list|,
name|destScriptFileName
argument_list|,
name|component
argument_list|)
expr_stmt|;
return|return
literal|"./"
operator|+
name|destScriptFileName
return|;
block|}
DECL|method|getLocalScriptFile ()
name|String
name|getLocalScriptFile
parameter_list|()
block|{
return|return
name|localScriptFile
return|;
block|}
block|}
end_class

end_unit

