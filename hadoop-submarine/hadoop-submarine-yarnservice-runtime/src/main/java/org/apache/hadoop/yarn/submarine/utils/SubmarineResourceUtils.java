begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Resource utilities for Submarine.  */
end_comment

begin_class
DECL|class|SubmarineResourceUtils
specifier|public
specifier|final
class|class
name|SubmarineResourceUtils
block|{
DECL|method|SubmarineResourceUtils ()
specifier|private
name|SubmarineResourceUtils
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"This class should not be "
operator|+
literal|"instantiated!"
argument_list|)
throw|;
block|}
DECL|method|convertYarnResourceToServiceResource ( org.apache.hadoop.yarn.api.records.Resource yarnResource)
specifier|public
specifier|static
name|Resource
name|convertYarnResourceToServiceResource
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|Resource
name|yarnResource
parameter_list|)
block|{
name|Resource
name|serviceResource
init|=
operator|new
name|Resource
argument_list|()
decl_stmt|;
name|serviceResource
operator|.
name|setCpus
argument_list|(
name|yarnResource
operator|.
name|getVirtualCores
argument_list|()
argument_list|)
expr_stmt|;
name|serviceResource
operator|.
name|setMemory
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|yarnResource
operator|.
name|getMemorySize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ResourceInformation
argument_list|>
name|riMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ResourceInformation
name|ri
range|:
name|yarnResource
operator|.
name|getAllResourcesListCopy
argument_list|()
control|)
block|{
name|ResourceInformation
name|serviceRi
init|=
operator|new
name|ResourceInformation
argument_list|()
decl_stmt|;
name|serviceRi
operator|.
name|setValue
argument_list|(
name|ri
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|serviceRi
operator|.
name|setUnit
argument_list|(
name|ri
operator|.
name|getUnits
argument_list|()
argument_list|)
expr_stmt|;
name|riMap
operator|.
name|put
argument_list|(
name|ri
operator|.
name|getName
argument_list|()
argument_list|,
name|serviceRi
argument_list|)
expr_stmt|;
block|}
name|serviceResource
operator|.
name|setResourceInformations
argument_list|(
name|riMap
argument_list|)
expr_stmt|;
return|return
name|serviceResource
return|;
block|}
block|}
end_class

end_unit

