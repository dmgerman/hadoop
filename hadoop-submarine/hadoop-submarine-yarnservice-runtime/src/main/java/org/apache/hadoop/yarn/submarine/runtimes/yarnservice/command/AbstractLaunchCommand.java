begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.yarnservice.command
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|command
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|RunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|TaskType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|HadoopEnvironmentSetup
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Abstract base class for Launch command implementations for Services.  * Currently we have launch command implementations  * for TensorFlow PS, worker and Tensorboard instances.  */
end_comment

begin_class
DECL|class|AbstractLaunchCommand
specifier|public
specifier|abstract
class|class
name|AbstractLaunchCommand
block|{
DECL|field|builder
specifier|private
specifier|final
name|LaunchScriptBuilder
name|builder
decl_stmt|;
DECL|method|AbstractLaunchCommand (HadoopEnvironmentSetup hadoopEnvSetup, TaskType taskType, Component component, RunJobParameters parameters)
specifier|public
name|AbstractLaunchCommand
parameter_list|(
name|HadoopEnvironmentSetup
name|hadoopEnvSetup
parameter_list|,
name|TaskType
name|taskType
parameter_list|,
name|Component
name|component
parameter_list|,
name|RunJobParameters
name|parameters
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|taskType
argument_list|,
literal|"TaskType must not be null!"
argument_list|)
expr_stmt|;
name|this
operator|.
name|builder
operator|=
operator|new
name|LaunchScriptBuilder
argument_list|(
name|taskType
operator|.
name|name
argument_list|()
argument_list|,
name|hadoopEnvSetup
argument_list|,
name|parameters
argument_list|,
name|component
argument_list|)
expr_stmt|;
block|}
DECL|method|getBuilder ()
specifier|protected
name|LaunchScriptBuilder
name|getBuilder
parameter_list|()
block|{
return|return
name|builder
return|;
block|}
comment|/**    * Subclasses need to defined this method and return a valid launch script.    * Implementors can utilize the {@link LaunchScriptBuilder} using    * the getBuilder method of this class.    * @return The contents of a script.    * @throws IOException If any IO issue happens.    */
DECL|method|generateLaunchScript ()
specifier|public
specifier|abstract
name|String
name|generateLaunchScript
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/**    * Subclasses need to provide a service-specific launch command    * of the service.    * Please note that this method should only return the launch command    * but not the whole script.    * @return The launch command    */
DECL|method|createLaunchCommand ()
specifier|public
specifier|abstract
name|String
name|createLaunchCommand
parameter_list|()
function_decl|;
block|}
end_class

end_unit

