begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.yarnservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|client
operator|.
name|api
operator|.
name|AppAdminClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|utils
operator|.
name|ServiceApiUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|ClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|JobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|builder
operator|.
name|JobStatusBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|YarnServiceJobMonitor
specifier|public
class|class
name|YarnServiceJobMonitor
extends|extends
name|JobMonitor
block|{
DECL|field|serviceClient
specifier|private
specifier|volatile
name|AppAdminClient
name|serviceClient
init|=
literal|null
decl_stmt|;
DECL|method|YarnServiceJobMonitor (ClientContext clientContext)
specifier|public
name|YarnServiceJobMonitor
parameter_list|(
name|ClientContext
name|clientContext
parameter_list|)
block|{
name|super
argument_list|(
name|clientContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTrainingJobStatus (String jobName)
specifier|public
name|JobStatus
name|getTrainingJobStatus
parameter_list|(
name|String
name|jobName
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
if|if
condition|(
name|this
operator|.
name|serviceClient
operator|==
literal|null
condition|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
if|if
condition|(
name|this
operator|.
name|serviceClient
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|serviceClient
operator|=
name|YarnServiceUtils
operator|.
name|createServiceClient
argument_list|(
name|clientContext
operator|.
name|getYarnConfig
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|String
name|appStatus
init|=
name|serviceClient
operator|.
name|getStatusString
argument_list|(
name|jobName
argument_list|)
decl_stmt|;
name|Service
name|serviceSpec
init|=
name|ServiceApiUtil
operator|.
name|jsonSerDeser
operator|.
name|fromJson
argument_list|(
name|appStatus
argument_list|)
decl_stmt|;
name|JobStatus
name|jobStatus
init|=
name|JobStatusBuilder
operator|.
name|fromServiceSpec
argument_list|(
name|serviceSpec
argument_list|)
decl_stmt|;
return|return
name|jobStatus
return|;
block|}
annotation|@
name|Override
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|serviceClient
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|serviceClient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

