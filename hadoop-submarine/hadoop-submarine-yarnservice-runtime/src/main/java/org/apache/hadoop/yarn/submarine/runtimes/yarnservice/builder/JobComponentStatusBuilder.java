begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.yarnservice.builder
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|builder
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|ContainerState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|JobComponentStatus
import|;
end_import

begin_class
DECL|class|JobComponentStatusBuilder
specifier|public
class|class
name|JobComponentStatusBuilder
block|{
DECL|method|fromServiceComponent (Component component)
specifier|public
specifier|static
name|JobComponentStatus
name|fromServiceComponent
parameter_list|(
name|Component
name|component
parameter_list|)
block|{
name|long
name|totalAskedContainers
init|=
name|component
operator|.
name|getNumberOfContainers
argument_list|()
decl_stmt|;
name|int
name|numReadyContainers
init|=
literal|0
decl_stmt|;
name|int
name|numRunningButUnreadyContainers
init|=
literal|0
decl_stmt|;
name|String
name|compName
init|=
name|component
operator|.
name|getName
argument_list|()
decl_stmt|;
for|for
control|(
name|Container
name|c
range|:
name|component
operator|.
name|getContainers
argument_list|()
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getState
argument_list|()
operator|==
name|ContainerState
operator|.
name|READY
condition|)
block|{
name|numReadyContainers
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|.
name|getState
argument_list|()
operator|==
name|ContainerState
operator|.
name|RUNNING_BUT_UNREADY
condition|)
block|{
name|numRunningButUnreadyContainers
operator|++
expr_stmt|;
block|}
block|}
return|return
operator|new
name|JobComponentStatus
argument_list|(
name|compName
argument_list|,
name|numReadyContainers
argument_list|,
name|numRunningButUnreadyContainers
argument_list|,
name|totalAskedContainers
argument_list|)
return|;
block|}
block|}
end_class

end_unit

