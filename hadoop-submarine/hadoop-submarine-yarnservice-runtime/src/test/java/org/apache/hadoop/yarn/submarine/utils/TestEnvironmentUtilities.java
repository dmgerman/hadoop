begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
operator|.
name|HADOOP_SECURITY_AUTHENTICATION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|utils
operator|.
name|EnvironmentUtilities
operator|.
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * This class is to test {@link EnvironmentUtilities}.  */
end_comment

begin_class
DECL|class|TestEnvironmentUtilities
specifier|public
class|class
name|TestEnvironmentUtilities
block|{
DECL|method|createServiceWithEmptyEnvVars ()
specifier|private
name|Service
name|createServiceWithEmptyEnvVars
parameter_list|()
block|{
return|return
name|createServiceWithEnvVars
argument_list|(
name|Maps
operator|.
name|newHashMap
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createServiceWithEnvVars (Map<String, String> envVars)
specifier|private
name|Service
name|createServiceWithEnvVars
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|envVars
parameter_list|)
block|{
name|Service
name|service
init|=
name|mock
argument_list|(
name|Service
operator|.
name|class
argument_list|)
decl_stmt|;
name|Configuration
name|config
init|=
name|mock
argument_list|(
name|Configuration
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|config
operator|.
name|getEnv
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|envVars
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|service
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|config
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
DECL|method|validateDefaultEnvVars (Map<String, String> resultEnvs)
specifier|private
name|void
name|validateDefaultEnvVars
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
DECL|method|createYarnConfigWithSecurityValue (String value)
name|createYarnConfigWithSecurityValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|mockConfig
init|=
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockConfig
operator|.
name|get
argument_list|(
name|HADOOP_SECURITY_AUTHENTICATION
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|mockConfig
return|;
block|}
annotation|@
name|Test
DECL|method|testGetValueOfNullEnvVar ()
specifier|public
name|void
name|testGetValueOfNullEnvVar
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|EnvironmentUtilities
operator|.
name|getValueOfEnvironment
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetValueOfEmptyEnvVar ()
specifier|public
name|void
name|testGetValueOfEmptyEnvVar
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|EnvironmentUtilities
operator|.
name|getValueOfEnvironment
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetValueOfEnvVarJustAnEqualsSign ()
specifier|public
name|void
name|testGetValueOfEnvVarJustAnEqualsSign
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|EnvironmentUtilities
operator|.
name|getValueOfEnvironment
argument_list|(
literal|"="
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetValueOfEnvVarWithoutValue ()
specifier|public
name|void
name|testGetValueOfEnvVarWithoutValue
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|EnvironmentUtilities
operator|.
name|getValueOfEnvironment
argument_list|(
literal|"a="
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetValueOfEnvVarValidFormat ()
specifier|public
name|void
name|testGetValueOfEnvVarValidFormat
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"bbb"
argument_list|,
name|EnvironmentUtilities
operator|.
name|getValueOfEnvironment
argument_list|(
literal|"a=bbb"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithNullMap ()
specifier|public
name|void
name|testHandleServiceEnvWithNullMap
parameter_list|()
block|{
name|Service
name|service
init|=
name|createServiceWithEmptyEnvVars
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
operator|.
name|class
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|validateDefaultEnvVars
argument_list|(
name|resultEnvs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithEmptyMap ()
specifier|public
name|void
name|testHandleServiceEnvWithEmptyMap
parameter_list|()
block|{
name|Service
name|service
init|=
name|createServiceWithEmptyEnvVars
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
operator|.
name|class
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|validateDefaultEnvVars
argument_list|(
name|resultEnvs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithYarnConfigSecurityValueNonKerberos ()
specifier|public
name|void
name|testHandleServiceEnvWithYarnConfigSecurityValueNonKerberos
parameter_list|()
block|{
name|Service
name|service
init|=
name|createServiceWithEmptyEnvVars
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"nonkerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|validateDefaultEnvVars
argument_list|(
name|resultEnvs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithYarnConfigSecurityValueKerberos ()
specifier|public
name|void
name|testHandleServiceEnvWithYarnConfigSecurityValueKerberos
parameter_list|()
block|{
name|Service
name|service
init|=
name|createServiceWithEmptyEnvVars
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"kerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro,/etc/krb5.conf:/etc/krb5.conf:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithExistingEnvsAndValidNewEnvs ()
specifier|public
name|void
name|testHandleServiceEnvWithExistingEnvsAndValidNewEnvs
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|existingEnvs
init|=
name|Maps
operator|.
name|newHashMap
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|newEnvs
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"c=3"
argument_list|,
literal|"d=4"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|createServiceWithEnvVars
argument_list|(
name|existingEnvs
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"kerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
name|newEnvs
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro,/etc/krb5.conf:/etc/krb5.conf:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithExistingEnvsAndNewEnvsWithoutEquals ()
specifier|public
name|void
name|testHandleServiceEnvWithExistingEnvsAndNewEnvsWithoutEquals
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|existingEnvs
init|=
name|Maps
operator|.
name|newHashMap
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|newEnvs
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"c3"
argument_list|,
literal|"d4"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|createServiceWithEnvVars
argument_list|(
name|existingEnvs
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"kerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
name|newEnvs
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro,/etc/krb5.conf:/etc/krb5.conf:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"c3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"d4"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithExistingEnvVarKey ()
specifier|public
name|void
name|testHandleServiceEnvWithExistingEnvVarKey
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|existingEnvs
init|=
name|Maps
operator|.
name|newHashMap
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|newEnvs
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"a=33"
argument_list|,
literal|"c=44"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|createServiceWithEnvVars
argument_list|(
name|existingEnvs
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"kerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
name|newEnvs
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro,/etc/krb5.conf:/etc/krb5.conf:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1:33"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"44"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHandleServiceEnvWithExistingEnvVarKeyMultipleTimes ()
specifier|public
name|void
name|testHandleServiceEnvWithExistingEnvVarKeyMultipleTimes
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|existingEnvs
init|=
name|Maps
operator|.
name|newHashMap
argument_list|(
name|ImmutableMap
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"a"
argument_list|,
literal|"1"
argument_list|)
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|newEnvs
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"a=33"
argument_list|,
literal|"a=44"
argument_list|)
decl_stmt|;
name|Service
name|service
init|=
name|createServiceWithEnvVars
argument_list|(
name|existingEnvs
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
name|yarnConfig
init|=
name|createYarnConfigWithSecurityValue
argument_list|(
literal|"kerberos"
argument_list|)
decl_stmt|;
name|EnvironmentUtilities
operator|.
name|handleServiceEnvs
argument_list|(
name|service
argument_list|,
name|yarnConfig
argument_list|,
name|newEnvs
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|resultEnvs
init|=
name|service
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getEnv
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|resultEnvs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/etc/passwd:/etc/passwd:ro,/etc/krb5.conf:/etc/krb5.conf:ro"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
name|ENV_DOCKER_MOUNTS_FOR_CONTAINER_RUNTIME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1:33:44"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|resultEnvs
operator|.
name|get
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

