begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.client.cli.yarnservice
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|yarnservice
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|ParamBuilderForTest
class|class
name|ParamBuilderForTest
block|{
DECL|field|params
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|params
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
DECL|method|create ()
specifier|static
name|ParamBuilderForTest
name|create
parameter_list|()
block|{
return|return
operator|new
name|ParamBuilderForTest
argument_list|()
return|;
block|}
DECL|method|withJobName (String name)
name|ParamBuilderForTest
name|withJobName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--name"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withFramework (String framework)
name|ParamBuilderForTest
name|withFramework
parameter_list|(
name|String
name|framework
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--framework"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|framework
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withDockerImage (String dockerImage)
name|ParamBuilderForTest
name|withDockerImage
parameter_list|(
name|String
name|dockerImage
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--docker_image"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|dockerImage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withInputPath (String inputPath)
name|ParamBuilderForTest
name|withInputPath
parameter_list|(
name|String
name|inputPath
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--input_path"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|inputPath
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withCheckpointPath (String checkpointPath)
name|ParamBuilderForTest
name|withCheckpointPath
parameter_list|(
name|String
name|checkpointPath
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--checkpoint_path"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|checkpointPath
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withNumberOfWorkers (int numWorkers)
name|ParamBuilderForTest
name|withNumberOfWorkers
parameter_list|(
name|int
name|numWorkers
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--num_workers"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|numWorkers
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withNumberOfPs (int numPs)
name|ParamBuilderForTest
name|withNumberOfPs
parameter_list|(
name|int
name|numPs
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--num_ps"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|numPs
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withWorkerLaunchCommand (String launchCommand)
name|ParamBuilderForTest
name|withWorkerLaunchCommand
parameter_list|(
name|String
name|launchCommand
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--worker_launch_cmd"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|launchCommand
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withPsLaunchCommand (String launchCommand)
name|ParamBuilderForTest
name|withPsLaunchCommand
parameter_list|(
name|String
name|launchCommand
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--ps_launch_cmd"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|launchCommand
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withWorkerResources (String workerResources)
name|ParamBuilderForTest
name|withWorkerResources
parameter_list|(
name|String
name|workerResources
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--worker_resources"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|workerResources
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withPsResources (String psResources)
name|ParamBuilderForTest
name|withPsResources
parameter_list|(
name|String
name|psResources
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--ps_resources"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|psResources
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withWorkerDockerImage (String dockerImage)
name|ParamBuilderForTest
name|withWorkerDockerImage
parameter_list|(
name|String
name|dockerImage
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--worker_docker_image"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|dockerImage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withPsDockerImage (String dockerImage)
name|ParamBuilderForTest
name|withPsDockerImage
parameter_list|(
name|String
name|dockerImage
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--ps_docker_image"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|dockerImage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withVerbose ()
name|ParamBuilderForTest
name|withVerbose
parameter_list|()
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--verbose"
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withTensorboard ()
name|ParamBuilderForTest
name|withTensorboard
parameter_list|()
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--tensorboard"
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withTensorboardResources (String resources)
name|ParamBuilderForTest
name|withTensorboardResources
parameter_list|(
name|String
name|resources
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--tensorboard_resources"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|resources
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withTensorboardDockerImage (String dockerImage)
name|ParamBuilderForTest
name|withTensorboardDockerImage
parameter_list|(
name|String
name|dockerImage
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--tensorboard_docker_image"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|dockerImage
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withQuickLink (String quickLink)
name|ParamBuilderForTest
name|withQuickLink
parameter_list|(
name|String
name|quickLink
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--quicklink"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|quickLink
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withLocalization (String remoteUrl, String localUrl)
name|ParamBuilderForTest
name|withLocalization
parameter_list|(
name|String
name|remoteUrl
parameter_list|,
name|String
name|localUrl
parameter_list|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"--localization"
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|remoteUrl
operator|+
literal|":"
operator|+
name|localUrl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
name|String
index|[]
name|build
parameter_list|()
block|{
return|return
name|params
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
return|;
block|}
block|}
end_class

end_unit

