begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *     http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.yarnservice.pytorch
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|pytorch
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|service
operator|.
name|api
operator|.
name|records
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|runjob
operator|.
name|PyTorchRunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|MockClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|PyTorchRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|TensorFlowRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|FileSystemOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|HadoopEnvironmentSetup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|ServiceWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|command
operator|.
name|PyTorchLaunchCommandFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|yarnservice
operator|.
name|tensorflow
operator|.
name|component
operator|.
name|ComponentTestCommons
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|utils
operator|.
name|Localizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
DECL|class|TestPyTorchServiceSpec
specifier|public
class|class
name|TestPyTorchServiceSpec
block|{
DECL|field|testCommons
specifier|private
name|ComponentTestCommons
name|testCommons
init|=
operator|new
name|ComponentTestCommons
argument_list|(
name|PyTorchRole
operator|.
name|PRIMARY_WORKER
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|testCommons
operator|.
name|setupPyTorch
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPytorchServiceSpec ()
specifier|public
name|void
name|testPytorchServiceSpec
parameter_list|()
throws|throws
name|IOException
block|{
name|testCommons
operator|=
operator|new
name|ComponentTestCommons
argument_list|(
name|TensorFlowRole
operator|.
name|PRIMARY_WORKER
argument_list|)
expr_stmt|;
name|testCommons
operator|.
name|setupTensorFlow
argument_list|()
expr_stmt|;
name|PyTorchRunJobParameters
name|parameters
init|=
operator|new
name|PyTorchRunJobParameters
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|setWorkerResource
argument_list|(
name|testCommons
operator|.
name|resource
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|setName
argument_list|(
literal|"testJobName"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|setNumWorkers
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|setWorkerLaunchCmd
argument_list|(
literal|"testWorkerLaunchCommand"
argument_list|)
expr_stmt|;
name|MockClientContext
name|mockClientContext
init|=
operator|new
name|MockClientContext
argument_list|()
decl_stmt|;
name|FileSystemOperations
name|fsOperations
init|=
operator|new
name|FileSystemOperations
argument_list|(
name|mockClientContext
argument_list|)
decl_stmt|;
name|HadoopEnvironmentSetup
name|hadoopEnv
init|=
operator|new
name|HadoopEnvironmentSetup
argument_list|(
name|mockClientContext
argument_list|,
name|fsOperations
argument_list|)
decl_stmt|;
name|PyTorchLaunchCommandFactory
name|launchCommandFactory
init|=
operator|new
name|PyTorchLaunchCommandFactory
argument_list|(
name|hadoopEnv
argument_list|,
name|parameters
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|Localizer
name|localizer
init|=
operator|new
name|Localizer
argument_list|(
name|fsOperations
argument_list|,
name|mockClientContext
operator|.
name|getRemoteDirectoryManager
argument_list|()
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|PyTorchServiceSpec
name|pyTorchServiceSpec
init|=
operator|new
name|PyTorchServiceSpec
argument_list|(
name|parameters
argument_list|,
name|mockClientContext
argument_list|,
name|fsOperations
argument_list|,
name|launchCommandFactory
argument_list|,
name|localizer
argument_list|)
decl_stmt|;
name|ServiceWrapper
name|serviceWrapper
init|=
name|pyTorchServiceSpec
operator|.
name|create
argument_list|()
decl_stmt|;
name|Service
name|service
init|=
name|serviceWrapper
operator|.
name|getService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"Service must not be null!"
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Component
argument_list|>
name|components
init|=
name|service
operator|.
name|getComponents
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Number of components is not correct!"
argument_list|,
literal|1
argument_list|,
name|components
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Component
name|component
init|=
name|components
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
operator|(
name|long
operator|)
name|component
operator|.
name|getNumberOfContainers
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"./run-PRIMARY_WORKER.sh"
argument_list|,
name|component
operator|.
name|getLaunchCommand
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

