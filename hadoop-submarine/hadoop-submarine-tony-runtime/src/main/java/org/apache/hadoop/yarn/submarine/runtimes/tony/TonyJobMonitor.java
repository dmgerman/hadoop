begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.tony
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|tony
package|;
end_package

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|TonyClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|client
operator|.
name|TaskUpdateListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|rpc
operator|.
name|TaskInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|ClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|api
operator|.
name|JobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|tony
operator|.
name|buider
operator|.
name|JobStatusBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * An implementation of JobMonitor with TonY library.  */
end_comment

begin_class
DECL|class|TonyJobMonitor
specifier|public
class|class
name|TonyJobMonitor
extends|extends
name|JobMonitor
implements|implements
name|TaskUpdateListener
block|{
DECL|field|taskInfos
specifier|private
name|Set
argument_list|<
name|TaskInfo
argument_list|>
name|taskInfos
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|TonyJobMonitor (ClientContext clientContext, TonyClient client)
specifier|public
name|TonyJobMonitor
parameter_list|(
name|ClientContext
name|clientContext
parameter_list|,
name|TonyClient
name|client
parameter_list|)
block|{
name|super
argument_list|(
name|clientContext
argument_list|)
expr_stmt|;
name|client
operator|.
name|addListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTrainingJobStatus (String jobName)
specifier|public
name|JobStatus
name|getTrainingJobStatus
parameter_list|(
name|String
name|jobName
parameter_list|)
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|JobStatus
name|jobStatus
init|=
name|JobStatusBuilder
operator|.
name|fromTaskInfoSet
argument_list|(
name|taskInfos
argument_list|)
decl_stmt|;
name|jobStatus
operator|.
name|setJobName
argument_list|(
name|jobName
argument_list|)
expr_stmt|;
return|return
name|jobStatus
return|;
block|}
annotation|@
name|Override
DECL|method|onTaskInfosUpdated (Set<TaskInfo> taskInfoSet)
specifier|public
name|void
name|onTaskInfosUpdated
parameter_list|(
name|Set
argument_list|<
name|TaskInfo
argument_list|>
name|taskInfoSet
parameter_list|)
block|{
name|this
operator|.
name|taskInfos
operator|=
name|taskInfoSet
expr_stmt|;
block|}
block|}
end_class

end_unit

