begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.submarine.runtimes.tony
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|tony
package|;
end_package

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|TonyClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|ClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|RuntimeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|FSBasedSubmarineStorageImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobSubmitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|SubmarineStorage
import|;
end_import

begin_comment
comment|/**  * Implementation of RuntimeFactory with Tony Runtime  */
end_comment

begin_class
DECL|class|TonyRuntimeFactory
specifier|public
class|class
name|TonyRuntimeFactory
extends|extends
name|RuntimeFactory
block|{
DECL|field|tonyClient
specifier|private
name|TonyClient
name|tonyClient
decl_stmt|;
DECL|field|submitter
specifier|private
name|TonyJobSubmitter
name|submitter
decl_stmt|;
DECL|field|monitor
specifier|private
name|TonyJobMonitor
name|monitor
decl_stmt|;
DECL|method|TonyRuntimeFactory (ClientContext clientContext)
specifier|public
name|TonyRuntimeFactory
parameter_list|(
name|ClientContext
name|clientContext
parameter_list|)
block|{
name|super
argument_list|(
name|clientContext
argument_list|)
expr_stmt|;
name|submitter
operator|=
operator|new
name|TonyJobSubmitter
argument_list|()
expr_stmt|;
name|tonyClient
operator|=
operator|new
name|TonyClient
argument_list|(
name|submitter
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
expr_stmt|;
name|monitor
operator|=
operator|new
name|TonyJobMonitor
argument_list|(
name|clientContext
argument_list|,
name|tonyClient
argument_list|)
expr_stmt|;
name|submitter
operator|.
name|setTonyClient
argument_list|(
name|tonyClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|internalCreateJobSubmitter ()
specifier|protected
name|JobSubmitter
name|internalCreateJobSubmitter
parameter_list|()
block|{
return|return
name|submitter
return|;
block|}
annotation|@
name|Override
DECL|method|internalCreateJobMonitor ()
specifier|protected
name|JobMonitor
name|internalCreateJobMonitor
parameter_list|()
block|{
return|return
name|monitor
return|;
block|}
annotation|@
name|Override
DECL|method|internalCreateSubmarineStorage ()
specifier|protected
name|SubmarineStorage
name|internalCreateSubmarineStorage
parameter_list|()
block|{
return|return
operator|new
name|FSBasedSubmarineStorageImpl
argument_list|(
name|super
operator|.
name|clientContext
argument_list|)
return|;
block|}
block|}
end_class

end_unit

