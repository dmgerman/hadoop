begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. See accompanying LICENSE file.  */
end_comment

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|com
operator|.
name|linkedin
operator|.
name|tony
operator|.
name|TonyConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|exceptions
operator|.
name|YarnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|RunJobCli
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|client
operator|.
name|cli
operator|.
name|param
operator|.
name|RunJobParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|MockClientContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|common
operator|.
name|conf
operator|.
name|SubmarineLogs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|RuntimeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|JobSubmitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|common
operator|.
name|SubmarineStorage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|submarine
operator|.
name|runtimes
operator|.
name|tony
operator|.
name|TonyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_class
DECL|class|TestTonyUtils
specifier|public
class|class
name|TestTonyUtils
block|{
DECL|method|getMockClientContext ()
specifier|private
name|MockClientContext
name|getMockClientContext
parameter_list|()
throws|throws
name|IOException
throws|,
name|YarnException
block|{
name|MockClientContext
name|mockClientContext
init|=
operator|new
name|MockClientContext
argument_list|()
decl_stmt|;
name|JobSubmitter
name|mockJobSubmitter
init|=
name|mock
argument_list|(
name|JobSubmitter
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockJobSubmitter
operator|.
name|submitJob
argument_list|(
name|any
argument_list|(
name|RunJobParameters
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|1234L
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|JobMonitor
name|mockJobMonitor
init|=
name|mock
argument_list|(
name|JobMonitor
operator|.
name|class
argument_list|)
decl_stmt|;
name|SubmarineStorage
name|storage
init|=
name|mock
argument_list|(
name|SubmarineStorage
operator|.
name|class
argument_list|)
decl_stmt|;
name|RuntimeFactory
name|rtFactory
init|=
name|mock
argument_list|(
name|RuntimeFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|rtFactory
operator|.
name|getJobSubmitterInstance
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockJobSubmitter
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|rtFactory
operator|.
name|getJobMonitorInstance
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockJobMonitor
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|rtFactory
operator|.
name|getSubmarineStorage
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|storage
argument_list|)
expr_stmt|;
name|mockClientContext
operator|.
name|setRuntimeFactory
argument_list|(
name|rtFactory
argument_list|)
expr_stmt|;
return|return
name|mockClientContext
return|;
block|}
annotation|@
name|Before
DECL|method|before ()
specifier|public
name|void
name|before
parameter_list|()
block|{
name|SubmarineLogs
operator|.
name|verboseOff
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTonyConfFromClientContext ()
specifier|public
name|void
name|testTonyConfFromClientContext
parameter_list|()
throws|throws
name|Exception
block|{
name|RunJobCli
name|runJobCli
init|=
operator|new
name|RunJobCli
argument_list|(
name|getMockClientContext
argument_list|()
argument_list|)
decl_stmt|;
name|runJobCli
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"--name"
block|,
literal|"my-job"
block|,
literal|"--docker_image"
block|,
literal|"tf-docker:1.1.0"
block|,
literal|"--input_path"
block|,
literal|"hdfs://input"
block|,
literal|"--num_workers"
block|,
literal|"3"
block|,
literal|"--num_ps"
block|,
literal|"2"
block|,
literal|"--worker_launch_cmd"
block|,
literal|"python run-job.py"
block|,
literal|"--worker_resources"
block|,
literal|"memory=2048M,vcores=2"
block|,
literal|"--ps_resources"
block|,
literal|"memory=4G,vcores=4"
block|,
literal|"--ps_launch_cmd"
block|,
literal|"python run-ps.py"
block|}
argument_list|)
expr_stmt|;
name|RunJobParameters
name|jobRunParameters
init|=
name|runJobCli
operator|.
name|getRunJobParameters
argument_list|()
decl_stmt|;
name|Configuration
name|tonyConf
init|=
name|TonyUtils
operator|.
name|tonyConfFromClientContext
argument_list|(
name|jobRunParameters
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|jobRunParameters
operator|.
name|getDockerImageName
argument_list|()
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getContainerDockerKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"3"
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getInstancesKey
argument_list|(
literal|"worker"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|jobRunParameters
operator|.
name|getWorkerLaunchCmd
argument_list|()
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getExecuteCommandKey
argument_list|(
literal|"worker"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2048"
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getResourceKey
argument_list|(
name|Constants
operator|.
name|WORKER_JOB_NAME
argument_list|,
name|Constants
operator|.
name|MEMORY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getResourceKey
argument_list|(
name|Constants
operator|.
name|WORKER_JOB_NAME
argument_list|,
name|Constants
operator|.
name|VCORES
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"4096"
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getResourceKey
argument_list|(
name|Constants
operator|.
name|PS_JOB_NAME
argument_list|,
name|Constants
operator|.
name|MEMORY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"4"
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getResourceKey
argument_list|(
name|Constants
operator|.
name|PS_JOB_NAME
argument_list|,
name|Constants
operator|.
name|VCORES
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|jobRunParameters
operator|.
name|getPSLaunchCmd
argument_list|()
argument_list|,
name|tonyConf
operator|.
name|get
argument_list|(
name|TonyConfigurationKeys
operator|.
name|getExecuteCommandKey
argument_list|(
literal|"ps"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

