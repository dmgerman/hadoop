begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.cosn.auth
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|cosn
operator|.
name|auth
package|;
end_package

begin_import
import|import
name|com
operator|.
name|qcloud
operator|.
name|cos
operator|.
name|auth
operator|.
name|BasicCOSCredentials
import|;
end_import

begin_import
import|import
name|com
operator|.
name|qcloud
operator|.
name|cos
operator|.
name|auth
operator|.
name|COSCredentials
import|;
end_import

begin_import
import|import
name|com
operator|.
name|qcloud
operator|.
name|cos
operator|.
name|auth
operator|.
name|COSCredentialsProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|qcloud
operator|.
name|cos
operator|.
name|exception
operator|.
name|CosClientException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|qcloud
operator|.
name|cos
operator|.
name|utils
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|cosn
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**  * the provider obtaining the cos credentials from the environment variables.  */
end_comment

begin_class
DECL|class|EnvironmentVariableCredentialProvider
specifier|public
class|class
name|EnvironmentVariableCredentialProvider
implements|implements
name|COSCredentialsProvider
block|{
annotation|@
name|Override
DECL|method|getCredentials ()
specifier|public
name|COSCredentials
name|getCredentials
parameter_list|()
block|{
name|String
name|secretId
init|=
name|System
operator|.
name|getenv
argument_list|(
name|Constants
operator|.
name|COSN_SECRET_ID_ENV
argument_list|)
decl_stmt|;
name|String
name|secretKey
init|=
name|System
operator|.
name|getenv
argument_list|(
name|Constants
operator|.
name|COSN_SECRET_KEY_ENV
argument_list|)
decl_stmt|;
name|secretId
operator|=
name|StringUtils
operator|.
name|trim
argument_list|(
name|secretId
argument_list|)
expr_stmt|;
name|secretKey
operator|=
name|StringUtils
operator|.
name|trim
argument_list|(
name|secretKey
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|isNullOrEmpty
argument_list|(
name|secretId
argument_list|)
operator|&&
operator|!
name|StringUtils
operator|.
name|isNullOrEmpty
argument_list|(
name|secretKey
argument_list|)
condition|)
block|{
return|return
operator|new
name|BasicCOSCredentials
argument_list|(
name|secretId
argument_list|,
name|secretKey
argument_list|)
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|CosClientException
argument_list|(
literal|"Unable to load COS credentials from environment variables"
operator|+
literal|"(COS_SECRET_ID or COS_SECRET_KEY)"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"EnvironmentVariableCredentialProvider{}"
return|;
block|}
block|}
end_class

end_unit

