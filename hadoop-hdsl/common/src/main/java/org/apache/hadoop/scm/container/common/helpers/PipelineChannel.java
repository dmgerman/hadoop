begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.scm.container.common.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|scm
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonIgnore
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdsl
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdsl
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdslProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdsl
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdslProtos
operator|.
name|LifeCycleState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdsl
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdslProtos
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdsl
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HdslProtos
operator|.
name|ReplicationFactor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_comment
comment|/**  * PipelineChannel information for a {@link Pipeline}.  */
end_comment

begin_class
DECL|class|PipelineChannel
specifier|public
class|class
name|PipelineChannel
block|{
annotation|@
name|JsonIgnore
DECL|field|leaderID
specifier|private
name|String
name|leaderID
decl_stmt|;
annotation|@
name|JsonIgnore
DECL|field|datanodes
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|DatanodeDetails
argument_list|>
name|datanodes
decl_stmt|;
DECL|field|lifeCycleState
specifier|private
name|LifeCycleState
name|lifeCycleState
decl_stmt|;
DECL|field|type
specifier|private
name|ReplicationType
name|type
decl_stmt|;
DECL|field|factor
specifier|private
name|ReplicationFactor
name|factor
decl_stmt|;
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|method|PipelineChannel (String leaderID, LifeCycleState lifeCycleState, ReplicationType replicationType, ReplicationFactor replicationFactor, String name)
specifier|public
name|PipelineChannel
parameter_list|(
name|String
name|leaderID
parameter_list|,
name|LifeCycleState
name|lifeCycleState
parameter_list|,
name|ReplicationType
name|replicationType
parameter_list|,
name|ReplicationFactor
name|replicationFactor
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|leaderID
operator|=
name|leaderID
expr_stmt|;
name|this
operator|.
name|lifeCycleState
operator|=
name|lifeCycleState
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|replicationType
expr_stmt|;
name|this
operator|.
name|factor
operator|=
name|replicationFactor
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|datanodes
operator|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|getLeaderID ()
specifier|public
name|String
name|getLeaderID
parameter_list|()
block|{
return|return
name|leaderID
return|;
block|}
DECL|method|getDatanodes ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|DatanodeDetails
argument_list|>
name|getDatanodes
parameter_list|()
block|{
return|return
name|datanodes
return|;
block|}
DECL|method|getLifeCycleState ()
specifier|public
name|LifeCycleState
name|getLifeCycleState
parameter_list|()
block|{
return|return
name|lifeCycleState
return|;
block|}
DECL|method|getType ()
specifier|public
name|ReplicationType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|getFactor ()
specifier|public
name|ReplicationFactor
name|getFactor
parameter_list|()
block|{
return|return
name|factor
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|addMember (DatanodeDetails datanodeDetails)
specifier|public
name|void
name|addMember
parameter_list|(
name|DatanodeDetails
name|datanodeDetails
parameter_list|)
block|{
name|datanodes
operator|.
name|put
argument_list|(
name|datanodeDetails
operator|.
name|getUuid
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|datanodeDetails
argument_list|)
expr_stmt|;
block|}
annotation|@
name|JsonIgnore
DECL|method|getProtobufMessage ()
specifier|public
name|HdslProtos
operator|.
name|PipelineChannel
name|getProtobufMessage
parameter_list|()
block|{
name|HdslProtos
operator|.
name|PipelineChannel
operator|.
name|Builder
name|builder
init|=
name|HdslProtos
operator|.
name|PipelineChannel
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|DatanodeDetails
name|datanode
range|:
name|datanodes
operator|.
name|values
argument_list|()
control|)
block|{
name|builder
operator|.
name|addMembers
argument_list|(
name|datanode
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setLeaderID
argument_list|(
name|leaderID
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLifeCycleState
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setState
argument_list|(
name|this
operator|.
name|getLifeCycleState
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setType
argument_list|(
name|this
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getFactor
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setFactor
argument_list|(
name|this
operator|.
name|getFactor
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getFromProtoBuf ( HdslProtos.PipelineChannel transportProtos)
specifier|public
specifier|static
name|PipelineChannel
name|getFromProtoBuf
parameter_list|(
name|HdslProtos
operator|.
name|PipelineChannel
name|transportProtos
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|transportProtos
argument_list|)
expr_stmt|;
name|PipelineChannel
name|pipelineChannel
init|=
operator|new
name|PipelineChannel
argument_list|(
name|transportProtos
operator|.
name|getLeaderID
argument_list|()
argument_list|,
name|transportProtos
operator|.
name|getState
argument_list|()
argument_list|,
name|transportProtos
operator|.
name|getType
argument_list|()
argument_list|,
name|transportProtos
operator|.
name|getFactor
argument_list|()
argument_list|,
name|transportProtos
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|HdslProtos
operator|.
name|DatanodeDetailsProto
name|dataID
range|:
name|transportProtos
operator|.
name|getMembersList
argument_list|()
control|)
block|{
name|pipelineChannel
operator|.
name|addMember
argument_list|(
name|DatanodeDetails
operator|.
name|getFromProtoBuf
argument_list|(
name|dataID
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|pipelineChannel
return|;
block|}
block|}
end_class

end_unit

