begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.server.timelineservice.storage.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|storage
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|server
operator|.
name|timelineservice
operator|.
name|reader
operator|.
name|filter
operator|.
name|TimelineFilter
operator|.
name|TimelineFilterType
import|;
end_import

begin_comment
comment|/**  * Used to define which filter to match.  */
end_comment

begin_enum
DECL|enum|TimelineEntityFiltersType
enum|enum
name|TimelineEntityFiltersType
block|{
DECL|enumConstant|CONFIG
name|CONFIG
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|KEY_VALUE
return|;
block|}
block|}
block|,
DECL|enumConstant|INFO
name|INFO
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|KEY_VALUE
return|;
block|}
block|}
block|,
DECL|enumConstant|METRIC
name|METRIC
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|COMPARE
return|;
block|}
block|}
block|,
DECL|enumConstant|EVENT
name|EVENT
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|EXISTS
return|;
block|}
block|}
block|,
DECL|enumConstant|IS_RELATED_TO
name|IS_RELATED_TO
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|KEY_VALUES
return|;
block|}
block|}
block|,
DECL|enumConstant|RELATES_TO
name|RELATES_TO
block|{
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
block|{
return|return
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|LIST
operator|||
name|filterType
operator|==
name|TimelineFilterType
operator|.
name|KEY_VALUES
return|;
block|}
block|}
block|;
comment|/**    * Checks whether filter type is valid for the filter being matched.    *    * @param filterType filter type.    * @return true, if its a valid filter, false otherwise.    */
DECL|method|isValidFilter (TimelineFilterType filterType)
specifier|abstract
name|boolean
name|isValidFilter
parameter_list|(
name|TimelineFilterType
name|filterType
parameter_list|)
function_decl|;
block|}
end_enum

end_unit

