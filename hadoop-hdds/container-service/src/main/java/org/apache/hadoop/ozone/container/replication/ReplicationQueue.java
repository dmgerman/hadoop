begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.replication
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|replication
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|PriorityQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Queue
import|;
end_import

begin_comment
comment|/**  * Priority queue to handle under-replicated and over replicated containers  * in ozone. ReplicationManager will consume these messages and decide  * accordingly.  */
end_comment

begin_class
DECL|class|ReplicationQueue
specifier|public
class|class
name|ReplicationQueue
block|{
DECL|field|queue
specifier|private
specifier|final
name|Queue
argument_list|<
name|ReplicationReqMsg
argument_list|>
name|queue
decl_stmt|;
DECL|method|ReplicationQueue ()
name|ReplicationQueue
parameter_list|()
block|{
name|queue
operator|=
operator|new
name|PriorityQueue
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|add (ReplicationReqMsg repObj)
specifier|public
specifier|synchronized
name|boolean
name|add
parameter_list|(
name|ReplicationReqMsg
name|repObj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|queue
operator|.
name|contains
argument_list|(
name|repObj
argument_list|)
condition|)
block|{
comment|// Remove the earlier message and insert this one
name|this
operator|.
name|queue
operator|.
name|remove
argument_list|(
name|repObj
argument_list|)
expr_stmt|;
return|return
name|this
operator|.
name|queue
operator|.
name|add
argument_list|(
name|repObj
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|this
operator|.
name|queue
operator|.
name|add
argument_list|(
name|repObj
argument_list|)
return|;
block|}
block|}
DECL|method|remove (ReplicationReqMsg repObj)
specifier|public
specifier|synchronized
name|boolean
name|remove
parameter_list|(
name|ReplicationReqMsg
name|repObj
parameter_list|)
block|{
return|return
name|queue
operator|.
name|remove
argument_list|(
name|repObj
argument_list|)
return|;
block|}
comment|/**    * Retrieves, but does not remove, the head of this queue,    * or returns {@code null} if this queue is empty.    *    * @return the head of this queue, or {@code null} if this queue is empty    */
DECL|method|peek ()
specifier|public
specifier|synchronized
name|ReplicationReqMsg
name|peek
parameter_list|()
block|{
return|return
name|queue
operator|.
name|peek
argument_list|()
return|;
block|}
comment|/**    * Retrieves and removes the head of this queue,    * or returns {@code null} if this queue is empty.    *    * @return the head of this queue, or {@code null} if this queue is empty    */
DECL|method|poll ()
specifier|public
specifier|synchronized
name|ReplicationReqMsg
name|poll
parameter_list|()
block|{
return|return
name|queue
operator|.
name|poll
argument_list|()
return|;
block|}
DECL|method|removeAll (List<ReplicationReqMsg> repObjs)
specifier|public
specifier|synchronized
name|boolean
name|removeAll
parameter_list|(
name|List
argument_list|<
name|ReplicationReqMsg
argument_list|>
name|repObjs
parameter_list|)
block|{
return|return
name|queue
operator|.
name|removeAll
argument_list|(
name|repObjs
argument_list|)
return|;
block|}
DECL|method|size ()
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|queue
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

