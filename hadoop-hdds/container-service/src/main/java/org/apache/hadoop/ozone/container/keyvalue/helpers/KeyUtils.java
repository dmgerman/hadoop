begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.keyvalue.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|keyvalue
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|StorageContainerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|KeyData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|KeyValueContainerData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|utils
operator|.
name|ContainerCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|MetadataStore
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|Result
operator|.
name|NO_SUCH_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|Result
operator|.
name|UNABLE_TO_READ_METADATA_DB
import|;
end_import

begin_comment
comment|/**  * Utils functions to help key functions.  */
end_comment

begin_class
DECL|class|KeyUtils
specifier|public
specifier|final
class|class
name|KeyUtils
block|{
comment|/** Never constructed. **/
DECL|method|KeyUtils ()
specifier|private
name|KeyUtils
parameter_list|()
block|{    }
comment|/**    * Get a DB handler for a given container.    * If the handler doesn't exist in cache yet, first create one and    * add into cache. This function is called with containerManager    * ReadLock held.    *    * @param container container.    * @param conf configuration.    * @return MetadataStore handle.    * @throws StorageContainerException    */
DECL|method|getDB (KeyValueContainerData container, Configuration conf)
specifier|public
specifier|static
name|MetadataStore
name|getDB
parameter_list|(
name|KeyValueContainerData
name|container
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|StorageContainerException
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|ContainerCache
name|cache
init|=
name|ContainerCache
operator|.
name|getInstance
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|container
operator|.
name|getDbFile
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|cache
operator|.
name|getDB
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|,
name|container
operator|.
name|getContainerDBType
argument_list|()
argument_list|,
name|container
operator|.
name|getDbFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|String
name|message
init|=
name|String
operator|.
name|format
argument_list|(
literal|"Unable to open DB Path: "
operator|+
literal|"%s. ex: %s"
argument_list|,
name|container
operator|.
name|getDbFile
argument_list|()
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|StorageContainerException
argument_list|(
name|message
argument_list|,
name|UNABLE_TO_READ_METADATA_DB
argument_list|)
throw|;
block|}
block|}
comment|/**    * Remove a DB handler from cache.    *    * @param container - Container data.    * @param conf - Configuration.    */
DECL|method|removeDB (KeyValueContainerData container, Configuration conf)
specifier|public
specifier|static
name|void
name|removeDB
parameter_list|(
name|KeyValueContainerData
name|container
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|ContainerCache
name|cache
init|=
name|ContainerCache
operator|.
name|getInstance
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|cache
operator|.
name|removeDB
argument_list|(
name|container
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Shutdown all DB Handles.    *    * @param cache - Cache for DB Handles.    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|shutdownCache (ContainerCache cache)
specifier|public
specifier|static
name|void
name|shutdownCache
parameter_list|(
name|ContainerCache
name|cache
parameter_list|)
block|{
name|cache
operator|.
name|shutdownCache
argument_list|()
expr_stmt|;
block|}
comment|/**    * Parses the {@link KeyData} from a bytes array.    *    * @param bytes key data in bytes.    * @return key data.    * @throws IOException if the bytes array is malformed or invalid.    */
DECL|method|getKeyData (byte[] bytes)
specifier|public
specifier|static
name|KeyData
name|getKeyData
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|ContainerProtos
operator|.
name|KeyData
name|keyData
init|=
name|ContainerProtos
operator|.
name|KeyData
operator|.
name|parseFrom
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|KeyData
name|data
init|=
name|KeyData
operator|.
name|getFromProtoBuf
argument_list|(
name|keyData
argument_list|)
decl_stmt|;
return|return
name|data
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|StorageContainerException
argument_list|(
literal|"Failed to parse key data from the"
operator|+
literal|" bytes array."
argument_list|,
name|NO_SUCH_KEY
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

