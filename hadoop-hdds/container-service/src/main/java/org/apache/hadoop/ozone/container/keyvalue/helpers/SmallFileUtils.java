begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.keyvalue.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|keyvalue
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|ChunkInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|ContainerUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ratis
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
import|;
end_import

begin_comment
comment|/**  * File Utils are helper routines used by putSmallFile and getSmallFile  * RPCs.  */
end_comment

begin_class
DECL|class|SmallFileUtils
specifier|public
specifier|final
class|class
name|SmallFileUtils
block|{
comment|/**    * Never Constructed.    */
DECL|method|SmallFileUtils ()
specifier|private
name|SmallFileUtils
parameter_list|()
block|{   }
comment|/**    * Gets a response for the putSmallFile RPC.    * @param msg - ContainerCommandRequestProto    * @return - ContainerCommandResponseProto    */
DECL|method|getPutFileResponseSuccess ( ContainerCommandRequestProto msg)
specifier|public
specifier|static
name|ContainerCommandResponseProto
name|getPutFileResponseSuccess
parameter_list|(
name|ContainerCommandRequestProto
name|msg
parameter_list|)
block|{
name|ContainerProtos
operator|.
name|PutSmallFileResponseProto
operator|.
name|Builder
name|getResponse
init|=
name|ContainerProtos
operator|.
name|PutSmallFileResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|ContainerCommandResponseProto
operator|.
name|Builder
name|builder
init|=
name|ContainerUtils
operator|.
name|getSuccessResponseBuilder
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutSmallFile
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setPutSmallFile
argument_list|(
name|getResponse
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Gets a response to the read small file call.    * @param msg - Msg    * @param data  - Data    * @param info  - Info    * @return    Response.    */
DECL|method|getGetSmallFileResponseSuccess ( ContainerCommandRequestProto msg, byte[] data, ChunkInfo info)
specifier|public
specifier|static
name|ContainerCommandResponseProto
name|getGetSmallFileResponseSuccess
parameter_list|(
name|ContainerCommandRequestProto
name|msg
parameter_list|,
name|byte
index|[]
name|data
parameter_list|,
name|ChunkInfo
name|info
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|ContainerProtos
operator|.
name|ReadChunkResponseProto
operator|.
name|Builder
name|readChunkresponse
init|=
name|ContainerProtos
operator|.
name|ReadChunkResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|readChunkresponse
operator|.
name|setChunkData
argument_list|(
name|info
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
expr_stmt|;
name|readChunkresponse
operator|.
name|setData
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
name|readChunkresponse
operator|.
name|setBlockID
argument_list|(
name|msg
operator|.
name|getGetSmallFile
argument_list|()
operator|.
name|getKey
argument_list|()
operator|.
name|getBlockID
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerProtos
operator|.
name|GetSmallFileResponseProto
operator|.
name|Builder
name|getSmallFile
init|=
name|ContainerProtos
operator|.
name|GetSmallFileResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|getSmallFile
operator|.
name|setData
argument_list|(
name|readChunkresponse
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerCommandResponseProto
operator|.
name|Builder
name|builder
init|=
name|ContainerUtils
operator|.
name|getSuccessResponseBuilder
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetSmallFile
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setGetSmallFile
argument_list|(
name|getSmallFile
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

