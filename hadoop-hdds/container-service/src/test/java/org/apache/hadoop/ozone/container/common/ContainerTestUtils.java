begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|retry
operator|.
name|RetryPolicies
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtobufRpcEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|statemachine
operator|.
name|EndpointStateMachine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
operator|.
name|StorageContainerDatanodeProtocolClientSideTranslatorPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
operator|.
name|StorageContainerDatanodeProtocolPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_comment
comment|/**  * Helper utility to test containers.  */
end_comment

begin_class
DECL|class|ContainerTestUtils
specifier|public
class|class
name|ContainerTestUtils
block|{
DECL|method|ContainerTestUtils ()
specifier|private
name|ContainerTestUtils
parameter_list|()
block|{   }
comment|/**    * Creates an Endpoint class for testing purpose.    *    * @param conf - Conf    * @param address - InetAddres    * @param rpcTimeout - rpcTimeOut    * @return EndPoint    * @throws Exception    */
DECL|method|createEndpoint (Configuration conf, InetSocketAddress address, int rpcTimeout)
specifier|public
specifier|static
name|EndpointStateMachine
name|createEndpoint
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|InetSocketAddress
name|address
parameter_list|,
name|int
name|rpcTimeout
parameter_list|)
throws|throws
name|Exception
block|{
name|RPC
operator|.
name|setProtocolEngine
argument_list|(
name|conf
argument_list|,
name|StorageContainerDatanodeProtocolPB
operator|.
name|class
argument_list|,
name|ProtobufRpcEngine
operator|.
name|class
argument_list|)
expr_stmt|;
name|long
name|version
init|=
name|RPC
operator|.
name|getProtocolVersion
argument_list|(
name|StorageContainerDatanodeProtocolPB
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageContainerDatanodeProtocolPB
name|rpcProxy
init|=
name|RPC
operator|.
name|getProtocolProxy
argument_list|(
name|StorageContainerDatanodeProtocolPB
operator|.
name|class
argument_list|,
name|version
argument_list|,
name|address
argument_list|,
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|,
name|conf
argument_list|,
name|NetUtils
operator|.
name|getDefaultSocketFactory
argument_list|(
name|conf
argument_list|)
argument_list|,
name|rpcTimeout
argument_list|,
name|RetryPolicies
operator|.
name|TRY_ONCE_THEN_FAIL
argument_list|)
operator|.
name|getProxy
argument_list|()
decl_stmt|;
name|StorageContainerDatanodeProtocolClientSideTranslatorPB
name|rpcClient
init|=
operator|new
name|StorageContainerDatanodeProtocolClientSideTranslatorPB
argument_list|(
name|rpcProxy
argument_list|)
decl_stmt|;
return|return
operator|new
name|EndpointStateMachine
argument_list|(
name|address
argument_list|,
name|rpcClient
argument_list|,
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

