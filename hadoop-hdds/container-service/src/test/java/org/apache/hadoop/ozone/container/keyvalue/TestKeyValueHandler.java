begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.keyvalue
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|keyvalue
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|StorageContainerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|ContainerMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|ContainerSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|HddsDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|volume
operator|.
name|VolumeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|HddsConfigKeys
operator|.
name|HDDS_DATANODE_VOLUME_CHOOSING_POLICY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|ScmConfigKeys
operator|.
name|HDDS_DATANODE_DIR_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doCallRealMethod
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Unit tests for {@link KeyValueHandler}.  */
end_comment

begin_class
DECL|class|TestKeyValueHandler
specifier|public
class|class
name|TestKeyValueHandler
block|{
annotation|@
name|Rule
DECL|field|timeout
specifier|public
name|TestRule
name|timeout
init|=
operator|new
name|Timeout
argument_list|(
literal|300000
argument_list|)
decl_stmt|;
DECL|field|dispatcher
specifier|private
specifier|static
name|HddsDispatcher
name|dispatcher
decl_stmt|;
DECL|field|handler
specifier|private
specifier|static
name|KeyValueHandler
name|handler
decl_stmt|;
DECL|field|DATANODE_UUID
specifier|private
specifier|final
specifier|static
name|String
name|DATANODE_UUID
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|baseDir
specifier|private
specifier|final
name|String
name|baseDir
init|=
name|MiniDFSCluster
operator|.
name|getBaseDirectory
argument_list|()
decl_stmt|;
DECL|field|volume
specifier|private
specifier|final
name|String
name|volume
init|=
name|baseDir
operator|+
literal|"disk1"
decl_stmt|;
DECL|field|DUMMY_CONTAINER_ID
specifier|private
specifier|static
specifier|final
name|long
name|DUMMY_CONTAINER_ID
init|=
literal|9999
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|setup ()
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|StorageContainerException
block|{
comment|// Create mock HddsDispatcher and KeyValueHandler.
name|handler
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|KeyValueHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|dispatcher
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HddsDispatcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|getHandler
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|getContainer
argument_list|(
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|KeyValueContainer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|handler
operator|.
name|handle
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|dispatcher
argument_list|)
operator|.
name|setMetricsForTesting
argument_list|(
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|setMetricsForTesting
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|ContainerMetrics
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
comment|/**    * Test that Handler handles different command types correctly.    */
DECL|method|testHandlerCommandHandling ()
specifier|public
name|void
name|testHandlerCommandHandling
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test Create Container Request handling
name|ContainerCommandRequestProto
name|createContainerRequest
init|=
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CreateContainer
argument_list|)
operator|.
name|setContainerID
argument_list|(
name|DUMMY_CONTAINER_ID
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|setCreateContainer
argument_list|(
name|ContainerProtos
operator|.
name|CreateContainerRequestProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|createContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleCreateContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Read Container Request handling
name|ContainerCommandRequestProto
name|readContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ReadContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|readContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleReadContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Update Container Request handling
name|ContainerCommandRequestProto
name|updateContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|UpdateContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|updateContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleUpdateContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Container Request handling
name|ContainerCommandRequestProto
name|deleteContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Container Request handling
name|ContainerCommandRequestProto
name|listContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Close Container Request handling
name|ContainerCommandRequestProto
name|closeContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CloseContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|closeContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleCloseContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Put Block Request handling
name|ContainerCommandRequestProto
name|putBlockRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutBlock
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|putBlockRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handlePutBlock
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Get Block Request handling
name|ContainerCommandRequestProto
name|getBlockRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetBlock
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getBlockRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleGetBlock
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Block Request handling
name|ContainerCommandRequestProto
name|deleteBlockRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteBlock
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteBlockRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteBlock
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Block Request handling
name|ContainerCommandRequestProto
name|listBlockRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListBlock
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listBlockRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Read Chunk Request handling
name|ContainerCommandRequestProto
name|readChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ReadChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|readChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleReadChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Chunk Request handling
name|ContainerCommandRequestProto
name|deleteChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Write Chunk Request handling
name|ContainerCommandRequestProto
name|writeChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|WriteChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|writeChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleWriteChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Chunk Request handling
name|ContainerCommandRequestProto
name|listChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Put Small File Request handling
name|ContainerCommandRequestProto
name|putSmallFileRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutSmallFile
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|putSmallFileRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handlePutSmallFile
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Get Small File Request handling
name|ContainerCommandRequestProto
name|getSmallFileRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetSmallFile
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getSmallFileRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleGetSmallFile
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testVolumeSetInKeyValueHandler ()
specifier|public
name|void
name|testVolumeSetInKeyValueHandler
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|path
init|=
name|GenericTestUtils
operator|.
name|getRandomizedTestDir
argument_list|()
decl_stmt|;
try|try
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HDDS_DATANODE_DIR_KEY
argument_list|,
name|path
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerSet
name|cset
init|=
operator|new
name|ContainerSet
argument_list|()
decl_stmt|;
name|int
index|[]
name|interval
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
name|interval
index|[
literal|0
index|]
operator|=
literal|2
expr_stmt|;
name|ContainerMetrics
name|metrics
init|=
operator|new
name|ContainerMetrics
argument_list|(
name|interval
argument_list|)
decl_stmt|;
name|VolumeSet
name|volumeSet
init|=
operator|new
name|VolumeSet
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|KeyValueHandler
name|keyValueHandler
init|=
operator|new
name|KeyValueHandler
argument_list|(
name|conf
argument_list|,
name|cset
argument_list|,
name|volumeSet
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|keyValueHandler
operator|.
name|getVolumeChoosingPolicyForTesting
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|"org.apache.hadoop.ozone.container.common"
operator|+
literal|".volume.RoundRobinVolumeChoosingPolicy"
argument_list|)
expr_stmt|;
comment|//Set a class which is not of sub class of VolumeChoosingPolicy
name|conf
operator|.
name|set
argument_list|(
name|HDDS_DATANODE_VOLUME_CHOOSING_POLICY
argument_list|,
literal|"org.apache.hadoop.ozone.container.common.impl.HddsDispatcher"
argument_list|)
expr_stmt|;
try|try
block|{
operator|new
name|KeyValueHandler
argument_list|(
name|conf
argument_list|,
name|cset
argument_list|,
name|volumeSet
argument_list|,
name|metrics
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ex
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"class org.apache.hadoop"
operator|+
literal|".ozone.container.common.impl.HddsDispatcher not org.apache"
operator|+
literal|".hadoop.ozone.container.common.interfaces.VolumeChoosingPolicy"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|FileUtil
operator|.
name|fullyDelete
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getDummyCommandRequestProto ( ContainerProtos.Type cmdType)
specifier|private
name|ContainerCommandRequestProto
name|getDummyCommandRequestProto
parameter_list|(
name|ContainerProtos
operator|.
name|Type
name|cmdType
parameter_list|)
block|{
name|ContainerCommandRequestProto
name|request
init|=
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|cmdType
argument_list|)
operator|.
name|setContainerID
argument_list|(
name|DUMMY_CONTAINER_ID
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Test
DECL|method|testCloseInvalidContainer ()
specifier|public
name|void
name|testCloseInvalidContainer
parameter_list|()
block|{
name|long
name|containerID
init|=
literal|1234L
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|KeyValueContainerData
name|kvData
init|=
operator|new
name|KeyValueContainerData
argument_list|(
name|containerID
argument_list|,
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|GB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|KeyValueContainer
name|container
init|=
operator|new
name|KeyValueContainer
argument_list|(
name|kvData
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|kvData
operator|.
name|setState
argument_list|(
name|ContainerProtos
operator|.
name|ContainerLifeCycleState
operator|.
name|INVALID
argument_list|)
expr_stmt|;
comment|// Create Close container request
name|ContainerCommandRequestProto
name|closeContainerRequest
init|=
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CloseContainer
argument_list|)
operator|.
name|setContainerID
argument_list|(
name|DUMMY_CONTAINER_ID
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|setCloseContainer
argument_list|(
name|ContainerProtos
operator|.
name|CloseContainerRequestProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|closeContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|handler
operator|.
name|handleCloseContainer
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
comment|// Closing invalid container should return error response.
name|ContainerProtos
operator|.
name|ContainerCommandResponseProto
name|response
init|=
name|handler
operator|.
name|handleCloseContainer
argument_list|(
name|closeContainerRequest
argument_list|,
name|container
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Close container should return Invalid container error"
argument_list|,
name|response
operator|.
name|getResult
argument_list|()
operator|.
name|equals
argument_list|(
name|ContainerProtos
operator|.
name|Result
operator|.
name|INVALID_CONTAINER_STATE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

