begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.keyvalue
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|keyvalue
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|ScmConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|ContainerSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|HddsDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|interfaces
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|volume
operator|.
name|VolumeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Unit tests for {@link KeyValueHandler}.  */
end_comment

begin_class
DECL|class|TestKeyValueHandler
specifier|public
class|class
name|TestKeyValueHandler
block|{
annotation|@
name|Rule
DECL|field|timeout
specifier|public
name|TestRule
name|timeout
init|=
operator|new
name|Timeout
argument_list|(
literal|300000
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
name|Configuration
name|conf
decl_stmt|;
DECL|field|dispatcher
specifier|private
name|HddsDispatcher
name|dispatcher
decl_stmt|;
DECL|field|containerSet
specifier|private
name|ContainerSet
name|containerSet
decl_stmt|;
DECL|field|volumeSet
specifier|private
name|VolumeSet
name|volumeSet
decl_stmt|;
DECL|field|handler
specifier|private
name|KeyValueHandler
name|handler
decl_stmt|;
DECL|field|SCM_ID
specifier|private
specifier|final
specifier|static
name|String
name|SCM_ID
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|DATANODE_UUID
specifier|private
specifier|final
specifier|static
name|String
name|DATANODE_UUID
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
DECL|field|containerID
specifier|private
name|int
name|containerID
decl_stmt|;
DECL|field|baseDir
specifier|private
specifier|final
name|String
name|baseDir
init|=
name|MiniDFSCluster
operator|.
name|getBaseDirectory
argument_list|()
decl_stmt|;
DECL|field|volume
specifier|private
specifier|final
name|String
name|volume
init|=
name|baseDir
operator|+
literal|"disk1"
decl_stmt|;
DECL|method|setup ()
specifier|private
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ScmConfigKeys
operator|.
name|HDDS_DATANODE_DIR_KEY
argument_list|,
name|volume
argument_list|)
expr_stmt|;
name|this
operator|.
name|containerSet
operator|=
operator|new
name|ContainerSet
argument_list|()
expr_stmt|;
name|DatanodeDetails
name|datanodeDetails
init|=
name|DatanodeDetails
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|setHostName
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|setIpAddress
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|this
operator|.
name|volumeSet
operator|=
operator|new
name|VolumeSet
argument_list|(
name|datanodeDetails
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|dispatcher
operator|=
operator|new
name|HddsDispatcher
argument_list|(
name|conf
argument_list|,
name|containerSet
argument_list|,
name|volumeSet
argument_list|,
name|SCM_ID
argument_list|)
expr_stmt|;
name|this
operator|.
name|handler
operator|=
operator|(
name|KeyValueHandler
operator|)
name|dispatcher
operator|.
name|getHandlerForContainerType
argument_list|(
name|ContainerProtos
operator|.
name|ContainerType
operator|.
name|KeyValueContainer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
comment|/**    * Test that Handler handles different command types correctly.    */
DECL|method|testHandlerCommandHandling ()
specifier|public
name|void
name|testHandlerCommandHandling
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create mock HddsDispatcher and KeyValueHandler.
name|this
operator|.
name|handler
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|KeyValueHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|dispatcher
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HddsDispatcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|getHandlerForContainerType
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|dispatcher
operator|.
name|getContainer
argument_list|(
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Mockito
operator|.
name|mock
argument_list|(
name|KeyValueContainer
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|handler
operator|.
name|handle
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
comment|// Test Create Container Request handling
name|ContainerCommandRequestProto
name|createContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CreateContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|createContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleCreateContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Read Container Request handling
name|ContainerCommandRequestProto
name|readContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ReadContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|readContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleReadContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Update Container Request handling
name|ContainerCommandRequestProto
name|updateContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|UpdateContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|updateContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleUpdateContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Container Request handling
name|ContainerCommandRequestProto
name|deleteContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Container Request handling
name|ContainerCommandRequestProto
name|listContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Close Container Request handling
name|ContainerCommandRequestProto
name|closeContainerRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CloseContainer
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|closeContainerRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleCloseContainer
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Put Key Request handling
name|ContainerCommandRequestProto
name|putKeyRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutKey
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|putKeyRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handlePutKey
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Get Key Request handling
name|ContainerCommandRequestProto
name|getKeyRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetKey
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getKeyRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleGetKey
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Key Request handling
name|ContainerCommandRequestProto
name|deleteKeyRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteKey
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteKeyRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteKey
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Key Request handling
name|ContainerCommandRequestProto
name|listKeyRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListKey
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listKeyRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Read Chunk Request handling
name|ContainerCommandRequestProto
name|readChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ReadChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|readChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleReadChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Delete Chunk Request handling
name|ContainerCommandRequestProto
name|deleteChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|DeleteChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|deleteChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleDeleteChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Write Chunk Request handling
name|ContainerCommandRequestProto
name|writeChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|WriteChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|writeChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleWriteChunk
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test List Chunk Request handling
name|ContainerCommandRequestProto
name|listChunkRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ListChunk
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|listChunkRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|handleUnsupportedOp
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test Put Small File Request handling
name|ContainerCommandRequestProto
name|putSmallFileRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutSmallFile
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|putSmallFileRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handlePutSmallFile
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test Get Small File Request handling
name|ContainerCommandRequestProto
name|getSmallFileRequest
init|=
name|getDummyCommandRequestProto
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetSmallFile
argument_list|)
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getSmallFileRequest
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|handleGetSmallFile
argument_list|(
name|any
argument_list|(
name|ContainerCommandRequestProto
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDummyCommandRequestProto (ContainerProtos.Type cmdType)
specifier|private
name|ContainerCommandRequestProto
name|getDummyCommandRequestProto
parameter_list|(
name|ContainerProtos
operator|.
name|Type
name|cmdType
parameter_list|)
block|{
name|ContainerCommandRequestProto
name|request
init|=
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|cmdType
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|request
return|;
block|}
annotation|@
name|Test
DECL|method|testCreateContainer ()
specifier|public
name|void
name|testCreateContainer
parameter_list|()
throws|throws
name|Exception
block|{
name|setup
argument_list|()
expr_stmt|;
name|long
name|contId
init|=
operator|++
name|containerID
decl_stmt|;
name|ContainerProtos
operator|.
name|CreateContainerRequestProto
name|createReq
init|=
name|ContainerProtos
operator|.
name|CreateContainerRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setContainerID
argument_list|(
name|contId
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContainerCommandRequestProto
name|request
init|=
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CreateContainer
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|DATANODE_UUID
argument_list|)
operator|.
name|setCreateContainer
argument_list|(
name|createReq
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|request
argument_list|)
expr_stmt|;
comment|// Verify that new container is added to containerSet.
name|Container
name|container
init|=
name|containerSet
operator|.
name|getContainer
argument_list|(
name|contId
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|contId
argument_list|,
name|container
operator|.
name|getContainerData
argument_list|()
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ContainerProtos
operator|.
name|ContainerLifeCycleState
operator|.
name|OPEN
argument_list|,
name|container
operator|.
name|getContainerState
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

