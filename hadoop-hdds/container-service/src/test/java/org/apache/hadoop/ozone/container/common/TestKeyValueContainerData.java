begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.container.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|keyvalue
operator|.
name|KeyValueContainerData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_comment
comment|/**  * This class is used to test the KeyValueContainerData.  */
end_comment

begin_class
DECL|class|TestKeyValueContainerData
specifier|public
class|class
name|TestKeyValueContainerData
block|{
DECL|field|MAXSIZE
specifier|private
specifier|static
specifier|final
name|long
name|MAXSIZE
init|=
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|GB
operator|.
name|toBytes
argument_list|(
literal|5
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testKeyValueData ()
specifier|public
name|void
name|testKeyValueData
parameter_list|()
block|{
name|long
name|containerId
init|=
literal|1L
decl_stmt|;
name|ContainerProtos
operator|.
name|ContainerType
name|containerType
init|=
name|ContainerProtos
operator|.
name|ContainerType
operator|.
name|KeyValueContainer
decl_stmt|;
name|String
name|path
init|=
literal|"/tmp"
decl_stmt|;
name|String
name|containerDBType
init|=
literal|"RocksDB"
decl_stmt|;
name|ContainerProtos
operator|.
name|ContainerDataProto
operator|.
name|State
name|state
init|=
name|ContainerProtos
operator|.
name|ContainerDataProto
operator|.
name|State
operator|.
name|CLOSED
decl_stmt|;
name|AtomicLong
name|val
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|UUID
name|pipelineId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
name|UUID
name|datanodeId
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
name|KeyValueContainerData
name|kvData
init|=
operator|new
name|KeyValueContainerData
argument_list|(
name|containerId
argument_list|,
name|MAXSIZE
argument_list|,
name|pipelineId
operator|.
name|toString
argument_list|()
argument_list|,
name|datanodeId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|containerType
argument_list|,
name|kvData
operator|.
name|getContainerType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|containerId
argument_list|,
name|kvData
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ContainerProtos
operator|.
name|ContainerDataProto
operator|.
name|State
operator|.
name|OPEN
argument_list|,
name|kvData
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|kvData
operator|.
name|getMetadata
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|kvData
operator|.
name|getNumPendingDeletionBlocks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getReadBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getWriteBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getReadCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getWriteCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getKeyCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|val
operator|.
name|get
argument_list|()
argument_list|,
name|kvData
operator|.
name|getNumPendingDeletionBlocks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MAXSIZE
argument_list|,
name|kvData
operator|.
name|getMaxSize
argument_list|()
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|setState
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|setContainerDBType
argument_list|(
name|containerDBType
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|setChunksPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|setMetadataPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|incrReadBytes
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|incrWriteBytes
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|kvData
operator|.
name|incrReadCount
argument_list|()
expr_stmt|;
name|kvData
operator|.
name|incrWriteCount
argument_list|()
expr_stmt|;
name|kvData
operator|.
name|incrKeyCount
argument_list|()
expr_stmt|;
name|kvData
operator|.
name|incrPendingDeletionBlocks
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|state
argument_list|,
name|kvData
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|containerDBType
argument_list|,
name|kvData
operator|.
name|getContainerDBType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|path
argument_list|,
name|kvData
operator|.
name|getChunksPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|path
argument_list|,
name|kvData
operator|.
name|getMetadataPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|kvData
operator|.
name|getReadBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|kvData
operator|.
name|getWriteBytes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|kvData
operator|.
name|getReadCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|kvData
operator|.
name|getWriteCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|kvData
operator|.
name|getKeyCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|kvData
operator|.
name|getNumPendingDeletionBlocks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pipelineId
operator|.
name|toString
argument_list|()
argument_list|,
name|kvData
operator|.
name|getOriginPipelineId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|datanodeId
operator|.
name|toString
argument_list|()
argument_list|,
name|kvData
operator|.
name|getOriginNodeId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

