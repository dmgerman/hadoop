begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.block
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|block
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|PendingDeleteStatusList
specifier|public
class|class
name|PendingDeleteStatusList
block|{
DECL|field|pendingDeleteStatuses
specifier|private
name|List
argument_list|<
name|PendingDeleteStatus
argument_list|>
name|pendingDeleteStatuses
decl_stmt|;
DECL|field|datanodeDetails
specifier|private
name|DatanodeDetails
name|datanodeDetails
decl_stmt|;
DECL|method|PendingDeleteStatusList (DatanodeDetails datanodeDetails)
specifier|public
name|PendingDeleteStatusList
parameter_list|(
name|DatanodeDetails
name|datanodeDetails
parameter_list|)
block|{
name|this
operator|.
name|datanodeDetails
operator|=
name|datanodeDetails
expr_stmt|;
name|pendingDeleteStatuses
operator|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|addPendingDeleteStatus (long dnDeleteTransactionId, long scmDeleteTransactionId, long containerId)
specifier|public
name|void
name|addPendingDeleteStatus
parameter_list|(
name|long
name|dnDeleteTransactionId
parameter_list|,
name|long
name|scmDeleteTransactionId
parameter_list|,
name|long
name|containerId
parameter_list|)
block|{
name|pendingDeleteStatuses
operator|.
name|add
argument_list|(
operator|new
name|PendingDeleteStatus
argument_list|(
name|dnDeleteTransactionId
argument_list|,
name|scmDeleteTransactionId
argument_list|,
name|containerId
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|PendingDeleteStatus
specifier|public
specifier|static
class|class
name|PendingDeleteStatus
block|{
DECL|field|dnDeleteTransactionId
specifier|private
name|long
name|dnDeleteTransactionId
decl_stmt|;
DECL|field|scmDeleteTransactionId
specifier|private
name|long
name|scmDeleteTransactionId
decl_stmt|;
DECL|field|containerId
specifier|private
name|long
name|containerId
decl_stmt|;
DECL|method|PendingDeleteStatus (long dnDeleteTransactionId, long scmDeleteTransactionId, long containerId)
specifier|public
name|PendingDeleteStatus
parameter_list|(
name|long
name|dnDeleteTransactionId
parameter_list|,
name|long
name|scmDeleteTransactionId
parameter_list|,
name|long
name|containerId
parameter_list|)
block|{
name|this
operator|.
name|dnDeleteTransactionId
operator|=
name|dnDeleteTransactionId
expr_stmt|;
name|this
operator|.
name|scmDeleteTransactionId
operator|=
name|scmDeleteTransactionId
expr_stmt|;
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
block|}
DECL|method|getDnDeleteTransactionId ()
specifier|public
name|long
name|getDnDeleteTransactionId
parameter_list|()
block|{
return|return
name|dnDeleteTransactionId
return|;
block|}
DECL|method|getScmDeleteTransactionId ()
specifier|public
name|long
name|getScmDeleteTransactionId
parameter_list|()
block|{
return|return
name|scmDeleteTransactionId
return|;
block|}
DECL|method|getContainerId ()
specifier|public
name|long
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
block|}
DECL|method|getPendingDeleteStatuses ()
specifier|public
name|List
argument_list|<
name|PendingDeleteStatus
argument_list|>
name|getPendingDeleteStatuses
parameter_list|()
block|{
return|return
name|pendingDeleteStatuses
return|;
block|}
DECL|method|getNumPendingDeletes ()
specifier|public
name|int
name|getNumPendingDeletes
parameter_list|()
block|{
return|return
name|pendingDeleteStatuses
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|getDatanodeDetails ()
specifier|public
name|DatanodeDetails
name|getDatanodeDetails
parameter_list|()
block|{
return|return
name|datanodeDetails
return|;
block|}
block|}
end_class

end_unit

