begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.node
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|node
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|StorageLocationReport
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * A Container Report gets processsed by the Node2Container and returns the  * Report Result class.  */
end_comment

begin_class
DECL|class|StorageReportResult
specifier|public
class|class
name|StorageReportResult
block|{
DECL|field|status
specifier|private
name|SCMNodeStorageStatMap
operator|.
name|ReportStatus
name|status
decl_stmt|;
DECL|field|fullVolumes
specifier|private
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|fullVolumes
decl_stmt|;
DECL|field|failedVolumes
specifier|private
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|failedVolumes
decl_stmt|;
DECL|method|StorageReportResult (SCMNodeStorageStatMap.ReportStatus status, Set<StorageLocationReport> fullVolumes, Set<StorageLocationReport> failedVolumes)
name|StorageReportResult
parameter_list|(
name|SCMNodeStorageStatMap
operator|.
name|ReportStatus
name|status
parameter_list|,
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|fullVolumes
parameter_list|,
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|failedVolumes
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|fullVolumes
operator|=
name|fullVolumes
expr_stmt|;
name|this
operator|.
name|failedVolumes
operator|=
name|failedVolumes
expr_stmt|;
block|}
DECL|method|getStatus ()
specifier|public
name|SCMNodeStorageStatMap
operator|.
name|ReportStatus
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
DECL|method|getFullVolumes ()
specifier|public
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|getFullVolumes
parameter_list|()
block|{
return|return
name|fullVolumes
return|;
block|}
DECL|method|getFailedVolumes ()
specifier|public
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|getFailedVolumes
parameter_list|()
block|{
return|return
name|failedVolumes
return|;
block|}
DECL|class|ReportResultBuilder
specifier|static
class|class
name|ReportResultBuilder
block|{
DECL|field|status
specifier|private
name|SCMNodeStorageStatMap
operator|.
name|ReportStatus
name|status
decl_stmt|;
DECL|field|fullVolumes
specifier|private
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|fullVolumes
decl_stmt|;
DECL|field|failedVolumes
specifier|private
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|failedVolumes
decl_stmt|;
DECL|method|newBuilder ()
specifier|static
name|ReportResultBuilder
name|newBuilder
parameter_list|()
block|{
return|return
operator|new
name|ReportResultBuilder
argument_list|()
return|;
block|}
DECL|method|setStatus ( SCMNodeStorageStatMap.ReportStatus newstatus)
specifier|public
name|ReportResultBuilder
name|setStatus
parameter_list|(
name|SCMNodeStorageStatMap
operator|.
name|ReportStatus
name|newstatus
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|newstatus
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setFullVolumeSet ( Set<StorageLocationReport> fullVolumesSet)
specifier|public
name|ReportResultBuilder
name|setFullVolumeSet
parameter_list|(
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|fullVolumesSet
parameter_list|)
block|{
name|this
operator|.
name|fullVolumes
operator|=
name|fullVolumesSet
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setFailedVolumeSet ( Set<StorageLocationReport> failedVolumesSet)
specifier|public
name|ReportResultBuilder
name|setFailedVolumeSet
parameter_list|(
name|Set
argument_list|<
name|StorageLocationReport
argument_list|>
name|failedVolumesSet
parameter_list|)
block|{
name|this
operator|.
name|failedVolumes
operator|=
name|failedVolumesSet
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
name|StorageReportResult
name|build
parameter_list|()
block|{
return|return
operator|new
name|StorageReportResult
argument_list|(
name|status
argument_list|,
name|fullVolumes
argument_list|,
name|failedVolumes
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

