begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.container.replication
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|replication
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|replication
operator|.
name|ReplicationManager
operator|.
name|ReplicationCompleted
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|replication
operator|.
name|ReplicationManager
operator|.
name|ReplicationRequestToRepeat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|events
operator|.
name|SCMEvents
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventPublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|lease
operator|.
name|LeaseManager
import|;
end_import

begin_comment
comment|/**  * Command watcher to track the replication commands.  */
end_comment

begin_class
DECL|class|ReplicationCommandWatcher
specifier|public
class|class
name|ReplicationCommandWatcher
extends|extends
name|EventWatcher
argument_list|<
name|ReplicationManager
operator|.
name|ReplicationRequestToRepeat
argument_list|,
name|ReplicationManager
operator|.
name|ReplicationCompleted
argument_list|>
block|{
DECL|method|ReplicationCommandWatcher (Event<ReplicationRequestToRepeat> startEvent, Event<ReplicationCompleted> completionEvent, LeaseManager<Long> leaseManager)
specifier|public
name|ReplicationCommandWatcher
parameter_list|(
name|Event
argument_list|<
name|ReplicationRequestToRepeat
argument_list|>
name|startEvent
parameter_list|,
name|Event
argument_list|<
name|ReplicationCompleted
argument_list|>
name|completionEvent
parameter_list|,
name|LeaseManager
argument_list|<
name|Long
argument_list|>
name|leaseManager
parameter_list|)
block|{
name|super
argument_list|(
name|startEvent
argument_list|,
name|completionEvent
argument_list|,
name|leaseManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onTimeout (EventPublisher publisher, ReplicationRequestToRepeat payload)
specifier|protected
name|void
name|onTimeout
parameter_list|(
name|EventPublisher
name|publisher
parameter_list|,
name|ReplicationRequestToRepeat
name|payload
parameter_list|)
block|{
comment|//put back to the original queue
name|publisher
operator|.
name|fireEvent
argument_list|(
name|SCMEvents
operator|.
name|REPLICATE_CONTAINER
argument_list|,
name|payload
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFinished (EventPublisher publisher, ReplicationRequestToRepeat payload)
specifier|protected
name|void
name|onFinished
parameter_list|(
name|EventPublisher
name|publisher
parameter_list|,
name|ReplicationRequestToRepeat
name|payload
parameter_list|)
block|{    }
block|}
end_class

end_unit

