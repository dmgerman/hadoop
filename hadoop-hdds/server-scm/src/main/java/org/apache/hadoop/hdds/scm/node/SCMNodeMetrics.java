begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.node
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|node
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|NodeState
operator|.
name|DEAD
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|NodeState
operator|.
name|DECOMMISSIONED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|NodeState
operator|.
name|DECOMMISSIONING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|NodeState
operator|.
name|HEALTHY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|NodeState
operator|.
name|STALE
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_comment
comment|/**  * This class maintains Node related metrics.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"SCM NodeManager Metrics"
argument_list|,
name|context
operator|=
literal|"ozone"
argument_list|)
DECL|class|SCMNodeMetrics
specifier|public
specifier|final
class|class
name|SCMNodeMetrics
implements|implements
name|MetricsSource
block|{
DECL|field|SOURCE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SOURCE_NAME
init|=
name|SCMNodeMetrics
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
decl_stmt|;
DECL|field|numHBProcessed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numHBProcessed
decl_stmt|;
DECL|field|numHBProcessingFailed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numHBProcessingFailed
decl_stmt|;
DECL|field|numNodeReportProcessed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numNodeReportProcessed
decl_stmt|;
DECL|field|numNodeReportProcessingFailed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numNodeReportProcessingFailed
decl_stmt|;
DECL|field|registry
specifier|private
specifier|final
name|MetricsRegistry
name|registry
decl_stmt|;
DECL|field|managerMXBean
specifier|private
specifier|final
name|NodeManagerMXBean
name|managerMXBean
decl_stmt|;
DECL|field|recordInfo
specifier|private
specifier|final
name|MetricsInfo
name|recordInfo
init|=
name|Interns
operator|.
name|info
argument_list|(
literal|"SCMNodeManager"
argument_list|,
literal|"SCM NodeManager metrics"
argument_list|)
decl_stmt|;
comment|/** Private constructor. */
DECL|method|SCMNodeMetrics (NodeManagerMXBean managerMXBean)
specifier|private
name|SCMNodeMetrics
parameter_list|(
name|NodeManagerMXBean
name|managerMXBean
parameter_list|)
block|{
name|this
operator|.
name|managerMXBean
operator|=
name|managerMXBean
expr_stmt|;
name|this
operator|.
name|registry
operator|=
operator|new
name|MetricsRegistry
argument_list|(
name|recordInfo
argument_list|)
expr_stmt|;
block|}
comment|/**    * Create and returns SCMNodeMetrics instance.    *    * @return SCMNodeMetrics    */
DECL|method|create (NodeManagerMXBean managerMXBean)
specifier|public
specifier|static
name|SCMNodeMetrics
name|create
parameter_list|(
name|NodeManagerMXBean
name|managerMXBean
parameter_list|)
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|SOURCE_NAME
argument_list|,
literal|"SCM NodeManager Metrics"
argument_list|,
operator|new
name|SCMNodeMetrics
argument_list|(
name|managerMXBean
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * Unregister the metrics instance.    */
DECL|method|unRegister ()
specifier|public
name|void
name|unRegister
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|ms
operator|.
name|unregisterSource
argument_list|(
name|SOURCE_NAME
argument_list|)
expr_stmt|;
block|}
comment|/**    * Increments number of heartbeat processed count.    */
DECL|method|incNumHBProcessed ()
name|void
name|incNumHBProcessed
parameter_list|()
block|{
name|numHBProcessed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
comment|/**    * Increments number of heartbeat processing failed count.    */
DECL|method|incNumHBProcessingFailed ()
name|void
name|incNumHBProcessingFailed
parameter_list|()
block|{
name|numHBProcessingFailed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
comment|/**    * Increments number of node report processed count.    */
DECL|method|incNumNodeReportProcessed ()
name|void
name|incNumNodeReportProcessed
parameter_list|()
block|{
name|numNodeReportProcessed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
comment|/**    * Increments number of node report processing failed count.    */
DECL|method|incNumNodeReportProcessingFailed ()
name|void
name|incNumNodeReportProcessingFailed
parameter_list|()
block|{
name|numNodeReportProcessingFailed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
comment|/**    * Get aggregated counter and gauage metrics.    */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"SuspiciousMethodCalls"
argument_list|)
DECL|method|getMetrics (MetricsCollector collector, boolean all)
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|collector
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|nodeCount
init|=
name|managerMXBean
operator|.
name|getNodeCount
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|nodeInfo
init|=
name|managerMXBean
operator|.
name|getNodeInfo
argument_list|()
decl_stmt|;
name|registry
operator|.
name|snapshot
argument_list|(
name|collector
operator|.
name|addRecord
argument_list|(
name|registry
operator|.
name|info
argument_list|()
argument_list|)
comment|// Add annotated ones first
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"HealthyNodes"
argument_list|,
literal|"Number of healthy datanodes"
argument_list|)
argument_list|,
name|nodeCount
operator|.
name|get
argument_list|(
name|HEALTHY
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"StaleNodes"
argument_list|,
literal|"Number of stale datanodes"
argument_list|)
argument_list|,
name|nodeCount
operator|.
name|get
argument_list|(
name|STALE
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DeadNodes"
argument_list|,
literal|"Number of dead datanodes"
argument_list|)
argument_list|,
name|nodeCount
operator|.
name|get
argument_list|(
name|DEAD
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DecommissioningNodes"
argument_list|,
literal|"Number of decommissioning datanodes"
argument_list|)
argument_list|,
name|nodeCount
operator|.
name|get
argument_list|(
name|DECOMMISSIONING
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DecommissionedNodes"
argument_list|,
literal|"Number of decommissioned datanodes"
argument_list|)
argument_list|,
name|nodeCount
operator|.
name|get
argument_list|(
name|DECOMMISSIONED
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DiskCapacity"
argument_list|,
literal|"Total disk capacity"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"DISKCapacity"
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DiskUsed"
argument_list|,
literal|"Total disk capacity used"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"DISKUsed"
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DiskRemaining"
argument_list|,
literal|"Total disk capacity remaining"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"DISKRemaining"
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"SSDCapacity"
argument_list|,
literal|"Total ssd capacity"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"SSDCapacity"
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"SSDUsed"
argument_list|,
literal|"Total ssd capacity used"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"SSDUsed"
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"SSDRemaining"
argument_list|,
literal|"Total disk capacity remaining"
argument_list|)
argument_list|,
name|nodeInfo
operator|.
name|get
argument_list|(
literal|"SSDRemaining"
argument_list|)
argument_list|)
argument_list|,
name|all
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

