begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.server.report
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|report
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerReportsProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|placement
operator|.
name|metrics
operator|.
name|ContainerStat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|StorageContainerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Handler for Datanode Container Report.  */
end_comment

begin_class
DECL|class|SCMDatanodeContainerReportHandler
specifier|public
class|class
name|SCMDatanodeContainerReportHandler
extends|extends
name|SCMDatanodeReportHandler
argument_list|<
name|ContainerReportsProto
argument_list|>
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SCMDatanodeContainerReportHandler
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|processReport (DatanodeDetails datanodeDetails, ContainerReportsProto report)
specifier|public
name|void
name|processReport
parameter_list|(
name|DatanodeDetails
name|datanodeDetails
parameter_list|,
name|ContainerReportsProto
name|report
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"Processing container report from {}."
argument_list|,
name|datanodeDetails
argument_list|)
expr_stmt|;
name|updateContainerReportMetrics
argument_list|(
name|datanodeDetails
argument_list|,
name|report
argument_list|)
expr_stmt|;
name|getSCM
argument_list|()
operator|.
name|getScmContainerManager
argument_list|()
operator|.
name|processContainerReports
argument_list|(
name|datanodeDetails
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
comment|/**    * Updates container report metrics in SCM.    *    * @param datanodeDetails Datanode Information    * @param reports Container Reports    */
DECL|method|updateContainerReportMetrics (DatanodeDetails datanodeDetails, ContainerReportsProto reports)
specifier|private
name|void
name|updateContainerReportMetrics
parameter_list|(
name|DatanodeDetails
name|datanodeDetails
parameter_list|,
name|ContainerReportsProto
name|reports
parameter_list|)
block|{
name|ContainerStat
name|newStat
init|=
operator|new
name|ContainerStat
argument_list|()
decl_stmt|;
for|for
control|(
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerInfo
name|info
range|:
name|reports
operator|.
name|getReportsList
argument_list|()
control|)
block|{
name|newStat
operator|.
name|add
argument_list|(
operator|new
name|ContainerStat
argument_list|(
name|info
operator|.
name|getSize
argument_list|()
argument_list|,
name|info
operator|.
name|getUsed
argument_list|()
argument_list|,
name|info
operator|.
name|getKeyCount
argument_list|()
argument_list|,
name|info
operator|.
name|getReadBytes
argument_list|()
argument_list|,
name|info
operator|.
name|getWriteBytes
argument_list|()
argument_list|,
name|info
operator|.
name|getReadCount
argument_list|()
argument_list|,
name|info
operator|.
name|getWriteCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// update container metrics
name|StorageContainerManager
operator|.
name|getMetrics
argument_list|()
operator|.
name|setLastContainerStat
argument_list|(
name|newStat
argument_list|)
expr_stmt|;
comment|// Update container stat entry, this will trigger a removal operation if it
comment|// exists in cache.
name|String
name|datanodeUuid
init|=
name|datanodeDetails
operator|.
name|getUuidString
argument_list|()
decl_stmt|;
name|getSCM
argument_list|()
operator|.
name|getContainerReportCache
argument_list|()
operator|.
name|put
argument_list|(
name|datanodeUuid
argument_list|,
name|newStat
argument_list|)
expr_stmt|;
comment|// update global view container metrics
name|StorageContainerManager
operator|.
name|getMetrics
argument_list|()
operator|.
name|incrContainerStat
argument_list|(
name|newStat
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

