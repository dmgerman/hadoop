begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.ââSee the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.ââThe ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.ââYou may obtain a copy of the License at  *  * ââââ http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.metadata
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|cert
operator|.
name|X509Certificate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|security
operator|.
name|x509
operator|.
name|certificate
operator|.
name|authority
operator|.
name|CertificateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|ServerUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|DBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|DBStoreBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|DeletedBlocksTransaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|TableIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
operator|.
name|SCM_DB_NAME
import|;
end_import

begin_comment
comment|/**  * A RocksDB based implementation of SCM Metadata Store.  *<p>  *<p>  * +---------------+------------------+-------------------------+  * | Column Family |    Key           |          Value          |  * +---------------+------------------+-------------------------+  * | DeletedBlocks | TXID(Long)       | DeletedBlockTransaction |  * +---------------+------------------+-------------------------+  * | ValidCerts    | Serial (BigInt)  | X509Certificate         |  * +---------------+------------------+-------------------------+  * |RevokedCerts   | Serial (BigInt)  | X509Certificate         |  * +---------------+------------------+-------------------------+  */
end_comment

begin_class
DECL|class|SCMMetadataStoreRDBImpl
specifier|public
class|class
name|SCMMetadataStoreRDBImpl
implements|implements
name|SCMMetadataStore
block|{
DECL|field|DELETED_BLOCKS_TABLE
specifier|private
specifier|static
specifier|final
name|String
name|DELETED_BLOCKS_TABLE
init|=
literal|"deletedBlocks"
decl_stmt|;
DECL|field|deletedBlocksTable
specifier|private
name|Table
name|deletedBlocksTable
decl_stmt|;
DECL|field|VALID_CERTS_TABLE
specifier|private
specifier|static
specifier|final
name|String
name|VALID_CERTS_TABLE
init|=
literal|"validCerts"
decl_stmt|;
DECL|field|validCertsTable
specifier|private
name|Table
name|validCertsTable
decl_stmt|;
DECL|field|REVOKED_CERTS_TABLE
specifier|private
specifier|static
specifier|final
name|String
name|REVOKED_CERTS_TABLE
init|=
literal|"revokedCerts"
decl_stmt|;
DECL|field|revokedCertsTable
specifier|private
name|Table
name|revokedCertsTable
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SCMMetadataStoreRDBImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|store
specifier|private
name|DBStore
name|store
decl_stmt|;
DECL|field|configuration
specifier|private
specifier|final
name|OzoneConfiguration
name|configuration
decl_stmt|;
DECL|field|txID
specifier|private
specifier|final
name|AtomicLong
name|txID
decl_stmt|;
comment|/**    * Constructs the metadata store and starts the DB Services.    *    * @param config - Ozone Configuration.    * @throws IOException - on Failure.    */
DECL|method|SCMMetadataStoreRDBImpl (OzoneConfiguration config)
specifier|public
name|SCMMetadataStoreRDBImpl
parameter_list|(
name|OzoneConfiguration
name|config
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|configuration
operator|=
name|config
expr_stmt|;
name|start
argument_list|(
name|this
operator|.
name|configuration
argument_list|)
expr_stmt|;
name|this
operator|.
name|txID
operator|=
operator|new
name|AtomicLong
argument_list|(
name|this
operator|.
name|getLargestRecordedTXID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start (OzoneConfiguration config)
specifier|public
name|void
name|start
parameter_list|(
name|OzoneConfiguration
name|config
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|store
operator|==
literal|null
condition|)
block|{
name|File
name|metaDir
init|=
name|ServerUtils
operator|.
name|getScmDbDir
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|this
operator|.
name|store
operator|=
name|DBStoreBuilder
operator|.
name|newBuilder
argument_list|(
name|configuration
argument_list|)
operator|.
name|setName
argument_list|(
name|SCM_DB_NAME
argument_list|)
operator|.
name|setPath
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|metaDir
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addTable
argument_list|(
name|DELETED_BLOCKS_TABLE
argument_list|)
operator|.
name|addTable
argument_list|(
name|VALID_CERTS_TABLE
argument_list|)
operator|.
name|addTable
argument_list|(
name|REVOKED_CERTS_TABLE
argument_list|)
operator|.
name|addCodec
argument_list|(
name|DeletedBlocksTransaction
operator|.
name|class
argument_list|,
operator|new
name|DeletedBlocksTransactionCodec
argument_list|()
argument_list|)
operator|.
name|addCodec
argument_list|(
name|Long
operator|.
name|class
argument_list|,
operator|new
name|LongCodec
argument_list|()
argument_list|)
operator|.
name|addCodec
argument_list|(
name|BigInteger
operator|.
name|class
argument_list|,
operator|new
name|BigIntegerCodec
argument_list|()
argument_list|)
operator|.
name|addCodec
argument_list|(
name|X509Certificate
operator|.
name|class
argument_list|,
operator|new
name|X509CertificateCodec
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|deletedBlocksTable
operator|=
name|this
operator|.
name|store
operator|.
name|getTable
argument_list|(
name|DELETED_BLOCKS_TABLE
argument_list|,
name|Long
operator|.
name|class
argument_list|,
name|DeletedBlocksTransaction
operator|.
name|class
argument_list|)
expr_stmt|;
name|checkTableStatus
argument_list|(
name|deletedBlocksTable
argument_list|,
name|DELETED_BLOCKS_TABLE
argument_list|)
expr_stmt|;
name|validCertsTable
operator|=
name|this
operator|.
name|store
operator|.
name|getTable
argument_list|(
name|VALID_CERTS_TABLE
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|,
name|X509Certificate
operator|.
name|class
argument_list|)
expr_stmt|;
name|checkTableStatus
argument_list|(
name|validCertsTable
argument_list|,
name|VALID_CERTS_TABLE
argument_list|)
expr_stmt|;
name|revokedCertsTable
operator|=
name|this
operator|.
name|store
operator|.
name|getTable
argument_list|(
name|REVOKED_CERTS_TABLE
argument_list|,
name|BigInteger
operator|.
name|class
argument_list|,
name|X509Certificate
operator|.
name|class
argument_list|)
expr_stmt|;
name|checkTableStatus
argument_list|(
name|revokedCertsTable
argument_list|,
name|REVOKED_CERTS_TABLE
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|store
operator|!=
literal|null
condition|)
block|{
name|store
operator|.
name|close
argument_list|()
expr_stmt|;
name|store
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getStore ()
specifier|public
name|DBStore
name|getStore
parameter_list|()
block|{
return|return
name|this
operator|.
name|store
return|;
block|}
annotation|@
name|Override
DECL|method|getDeletedBlocksTXTable ()
specifier|public
name|Table
argument_list|<
name|Long
argument_list|,
name|DeletedBlocksTransaction
argument_list|>
name|getDeletedBlocksTXTable
parameter_list|()
block|{
return|return
name|deletedBlocksTable
return|;
block|}
annotation|@
name|Override
DECL|method|getNextDeleteBlockTXID ()
specifier|public
name|Long
name|getNextDeleteBlockTXID
parameter_list|()
block|{
return|return
name|this
operator|.
name|txID
operator|.
name|incrementAndGet
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getValidCertsTable ()
specifier|public
name|Table
argument_list|<
name|BigInteger
argument_list|,
name|X509Certificate
argument_list|>
name|getValidCertsTable
parameter_list|()
block|{
return|return
name|validCertsTable
return|;
block|}
annotation|@
name|Override
DECL|method|getRevokedCertsTable ()
specifier|public
name|Table
argument_list|<
name|BigInteger
argument_list|,
name|X509Certificate
argument_list|>
name|getRevokedCertsTable
parameter_list|()
block|{
return|return
name|revokedCertsTable
return|;
block|}
annotation|@
name|Override
DECL|method|getAllCerts (CertificateStore.CertType certType)
specifier|public
name|TableIterator
name|getAllCerts
parameter_list|(
name|CertificateStore
operator|.
name|CertType
name|certType
parameter_list|)
block|{
if|if
condition|(
name|certType
operator|==
name|CertificateStore
operator|.
name|CertType
operator|.
name|VALID_CERTS
condition|)
block|{
return|return
name|validCertsTable
operator|.
name|iterator
argument_list|()
return|;
block|}
if|if
condition|(
name|certType
operator|==
name|CertificateStore
operator|.
name|CertType
operator|.
name|REVOKED_CERTS
condition|)
block|{
return|return
name|revokedCertsTable
operator|.
name|iterator
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentTXID ()
specifier|public
name|Long
name|getCurrentTXID
parameter_list|()
block|{
return|return
name|this
operator|.
name|txID
operator|.
name|get
argument_list|()
return|;
block|}
comment|/**    * Returns the largest recorded TXID from the DB.    *    * @return Long    * @throws IOException    */
DECL|method|getLargestRecordedTXID ()
specifier|private
name|Long
name|getLargestRecordedTXID
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|TableIterator
argument_list|<
name|Long
argument_list|,
name|DeletedBlocksTransaction
argument_list|>
name|txIter
init|=
name|deletedBlocksTable
operator|.
name|iterator
argument_list|()
init|)
block|{
name|txIter
operator|.
name|seekToLast
argument_list|()
expr_stmt|;
name|Long
name|txid
init|=
name|txIter
operator|.
name|key
argument_list|()
decl_stmt|;
if|if
condition|(
name|txid
operator|!=
literal|null
condition|)
block|{
return|return
name|txid
return|;
block|}
block|}
return|return
literal|0L
return|;
block|}
DECL|method|checkTableStatus (Table table, String name)
specifier|private
name|void
name|checkTableStatus
parameter_list|(
name|Table
name|table
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|logMessage
init|=
literal|"Unable to get a reference to %s table. Cannot "
operator|+
literal|"continue."
decl_stmt|;
name|String
name|errMsg
init|=
literal|"Inconsistent DB state, Table - %s. Please check the"
operator|+
literal|" logs for more info."
decl_stmt|;
if|if
condition|(
name|table
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|logMessage
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|errMsg
argument_list|,
name|name
argument_list|)
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

