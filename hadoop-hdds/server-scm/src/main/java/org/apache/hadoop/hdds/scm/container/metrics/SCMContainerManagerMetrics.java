begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.container.metrics
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_comment
comment|/**  * Class contains metrics related to ContainerManager.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"SCM ContainerManager metrics"
argument_list|,
name|context
operator|=
literal|"ozone"
argument_list|)
DECL|class|SCMContainerManagerMetrics
specifier|public
specifier|final
class|class
name|SCMContainerManagerMetrics
block|{
DECL|field|SOURCE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SOURCE_NAME
init|=
name|SCMContainerManagerMetrics
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
decl_stmt|;
comment|// These are the metrics which will be reset to zero after restart.
comment|// These metrics capture count of number of successful/failure operations
comment|// of create/delete containers in SCM.
DECL|field|numSuccessfulCreateContainers
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numSuccessfulCreateContainers
decl_stmt|;
DECL|field|numFailureCreateContainers
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numFailureCreateContainers
decl_stmt|;
DECL|field|numSuccessfulDeleteContainers
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numSuccessfulDeleteContainers
decl_stmt|;
DECL|field|numFailureDeleteContainers
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numFailureDeleteContainers
decl_stmt|;
DECL|field|numListContainerOps
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numListContainerOps
decl_stmt|;
DECL|field|numContainerReportsProcessedSuccessful
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numContainerReportsProcessedSuccessful
decl_stmt|;
DECL|field|numContainerReportsProcessedFailed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numContainerReportsProcessedFailed
decl_stmt|;
DECL|field|numICRReportsProcessedSuccessful
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numICRReportsProcessedSuccessful
decl_stmt|;
DECL|field|numICRReportsProcessedFailed
specifier|private
annotation|@
name|Metric
name|MutableCounterLong
name|numICRReportsProcessedFailed
decl_stmt|;
DECL|method|SCMContainerManagerMetrics ()
specifier|private
name|SCMContainerManagerMetrics
parameter_list|()
block|{   }
comment|/**    * Create and return metrics instance.    * @return SCMContainerManagerMetrics    */
DECL|method|create ()
specifier|public
specifier|static
name|SCMContainerManagerMetrics
name|create
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|SOURCE_NAME
argument_list|,
literal|"SCM ContainerManager Metrics"
argument_list|,
operator|new
name|SCMContainerManagerMetrics
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * Unregister metrics.    */
DECL|method|unRegister ()
specifier|public
name|void
name|unRegister
parameter_list|()
block|{
name|MetricsSystem
name|ms
init|=
name|DefaultMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|ms
operator|.
name|unregisterSource
argument_list|(
name|SOURCE_NAME
argument_list|)
expr_stmt|;
block|}
DECL|method|incNumSuccessfulCreateContainers ()
specifier|public
name|void
name|incNumSuccessfulCreateContainers
parameter_list|()
block|{
name|this
operator|.
name|numSuccessfulCreateContainers
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumFailureCreateContainers ()
specifier|public
name|void
name|incNumFailureCreateContainers
parameter_list|()
block|{
name|this
operator|.
name|numFailureCreateContainers
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumSuccessfulDeleteContainers ()
specifier|public
name|void
name|incNumSuccessfulDeleteContainers
parameter_list|()
block|{
name|this
operator|.
name|numSuccessfulDeleteContainers
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumFailureDeleteContainers ()
specifier|public
name|void
name|incNumFailureDeleteContainers
parameter_list|()
block|{
name|this
operator|.
name|numFailureDeleteContainers
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumListContainersOps ()
specifier|public
name|void
name|incNumListContainersOps
parameter_list|()
block|{
name|this
operator|.
name|numListContainerOps
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumContainerReportsProcessedSuccessful ()
specifier|public
name|void
name|incNumContainerReportsProcessedSuccessful
parameter_list|()
block|{
name|this
operator|.
name|numContainerReportsProcessedSuccessful
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumContainerReportsProcessedFailed ()
specifier|public
name|void
name|incNumContainerReportsProcessedFailed
parameter_list|()
block|{
name|this
operator|.
name|numContainerReportsProcessedFailed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumICRReportsProcessedSuccessful ()
specifier|public
name|void
name|incNumICRReportsProcessedSuccessful
parameter_list|()
block|{
name|this
operator|.
name|numICRReportsProcessedSuccessful
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|incNumICRReportsProcessedFailed ()
specifier|public
name|void
name|incNumICRReportsProcessedFailed
parameter_list|()
block|{
name|this
operator|.
name|numICRReportsProcessedFailed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
DECL|method|getNumContainerReportsProcessedSuccessful ()
specifier|public
name|long
name|getNumContainerReportsProcessedSuccessful
parameter_list|()
block|{
return|return
name|numContainerReportsProcessedSuccessful
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumContainerReportsProcessedFailed ()
specifier|public
name|long
name|getNumContainerReportsProcessedFailed
parameter_list|()
block|{
return|return
name|numContainerReportsProcessedFailed
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumICRReportsProcessedSuccessful ()
specifier|public
name|long
name|getNumICRReportsProcessedSuccessful
parameter_list|()
block|{
return|return
name|numICRReportsProcessedSuccessful
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumICRReportsProcessedFailed ()
specifier|public
name|long
name|getNumICRReportsProcessedFailed
parameter_list|()
block|{
return|return
name|numICRReportsProcessedFailed
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumSuccessfulCreateContainers ()
specifier|public
name|long
name|getNumSuccessfulCreateContainers
parameter_list|()
block|{
return|return
name|numSuccessfulCreateContainers
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumFailureCreateContainers ()
specifier|public
name|long
name|getNumFailureCreateContainers
parameter_list|()
block|{
return|return
name|numFailureCreateContainers
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumSuccessfulDeleteContainers ()
specifier|public
name|long
name|getNumSuccessfulDeleteContainers
parameter_list|()
block|{
return|return
name|numSuccessfulDeleteContainers
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumFailureDeleteContainers ()
specifier|public
name|long
name|getNumFailureDeleteContainers
parameter_list|()
block|{
return|return
name|numFailureDeleteContainers
operator|.
name|value
argument_list|()
return|;
block|}
DECL|method|getNumListContainersOps ()
specifier|public
name|long
name|getNumListContainersOps
parameter_list|()
block|{
return|return
name|numListContainerOps
operator|.
name|value
argument_list|()
return|;
block|}
block|}
end_class

end_unit

