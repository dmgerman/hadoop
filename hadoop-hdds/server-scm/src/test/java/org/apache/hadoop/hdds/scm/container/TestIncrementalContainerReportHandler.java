begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.container
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|LifeCycleState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|LifeCycleEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerReplicaProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|IncrementalContainerReportProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|pipeline
operator|.
name|PipelineManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|IncrementalContainerReportFromDatanode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventPublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|TestContainerReportHelper
operator|.
name|addContainerToContainerManager
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|TestContainerReportHelper
operator|.
name|getContainer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|TestContainerReportHelper
operator|.
name|getReplicas
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|TestContainerReportHelper
operator|.
name|mockUpdateContainerReplica
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|TestContainerReportHelper
operator|.
name|mockUpdateContainerState
import|;
end_import

begin_comment
comment|/**  * Test cases to verify the functionality of IncrementalContainerReportHandler.  */
end_comment

begin_class
DECL|class|TestIncrementalContainerReportHandler
specifier|public
class|class
name|TestIncrementalContainerReportHandler
block|{
annotation|@
name|Test
DECL|method|testClosingToClosed ()
specifier|public
name|void
name|testClosingToClosed
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|ContainerManager
name|containerManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ContainerManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|PipelineManager
name|pipelineManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|PipelineManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportHandler
name|reportHandler
init|=
operator|new
name|IncrementalContainerReportHandler
argument_list|(
name|pipelineManager
argument_list|,
name|containerManager
argument_list|)
decl_stmt|;
specifier|final
name|ContainerInfo
name|container
init|=
name|getContainer
argument_list|(
name|LifeCycleState
operator|.
name|CLOSING
argument_list|)
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeOne
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeTwo
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeThree
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|ContainerReplica
argument_list|>
name|containerReplicas
init|=
name|getReplicas
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|CLOSING
argument_list|,
name|datanodeOne
argument_list|,
name|datanodeTwo
argument_list|,
name|datanodeThree
argument_list|)
decl_stmt|;
name|addContainerToContainerManager
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerReplica
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerState
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|LifeCycleEvent
operator|.
name|CLOSE
argument_list|,
name|LifeCycleState
operator|.
name|CLOSED
argument_list|)
expr_stmt|;
specifier|final
name|IncrementalContainerReportProto
name|containerReport
init|=
name|getIncrementalContainerReportProto
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|CLOSED
argument_list|,
name|datanodeOne
operator|.
name|getUuidString
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|EventPublisher
name|publisher
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|EventPublisher
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportFromDatanode
name|icrFromDatanode
init|=
operator|new
name|IncrementalContainerReportFromDatanode
argument_list|(
name|datanodeOne
argument_list|,
name|containerReport
argument_list|)
decl_stmt|;
name|reportHandler
operator|.
name|onMessage
argument_list|(
name|icrFromDatanode
argument_list|,
name|publisher
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LifeCycleState
operator|.
name|CLOSED
argument_list|,
name|container
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testClosingToQuasiClosed ()
specifier|public
name|void
name|testClosingToQuasiClosed
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|ContainerManager
name|containerManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ContainerManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|PipelineManager
name|pipelineManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|PipelineManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportHandler
name|reportHandler
init|=
operator|new
name|IncrementalContainerReportHandler
argument_list|(
name|pipelineManager
argument_list|,
name|containerManager
argument_list|)
decl_stmt|;
specifier|final
name|ContainerInfo
name|container
init|=
name|getContainer
argument_list|(
name|LifeCycleState
operator|.
name|CLOSING
argument_list|)
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeOne
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeTwo
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeThree
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|ContainerReplica
argument_list|>
name|containerReplicas
init|=
name|getReplicas
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|CLOSING
argument_list|,
name|datanodeOne
argument_list|,
name|datanodeTwo
argument_list|,
name|datanodeThree
argument_list|)
decl_stmt|;
name|addContainerToContainerManager
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerReplica
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerState
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|LifeCycleEvent
operator|.
name|QUASI_CLOSE
argument_list|,
name|LifeCycleState
operator|.
name|QUASI_CLOSED
argument_list|)
expr_stmt|;
specifier|final
name|IncrementalContainerReportProto
name|containerReport
init|=
name|getIncrementalContainerReportProto
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|QUASI_CLOSED
argument_list|,
name|datanodeOne
operator|.
name|getUuidString
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|EventPublisher
name|publisher
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|EventPublisher
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportFromDatanode
name|icrFromDatanode
init|=
operator|new
name|IncrementalContainerReportFromDatanode
argument_list|(
name|datanodeOne
argument_list|,
name|containerReport
argument_list|)
decl_stmt|;
name|reportHandler
operator|.
name|onMessage
argument_list|(
name|icrFromDatanode
argument_list|,
name|publisher
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LifeCycleState
operator|.
name|QUASI_CLOSED
argument_list|,
name|container
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testQuasiClosedToClosed ()
specifier|public
name|void
name|testQuasiClosedToClosed
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|ContainerManager
name|containerManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ContainerManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|PipelineManager
name|pipelineManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|PipelineManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportHandler
name|reportHandler
init|=
operator|new
name|IncrementalContainerReportHandler
argument_list|(
name|pipelineManager
argument_list|,
name|containerManager
argument_list|)
decl_stmt|;
specifier|final
name|ContainerInfo
name|container
init|=
name|getContainer
argument_list|(
name|LifeCycleState
operator|.
name|QUASI_CLOSED
argument_list|)
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeOne
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeTwo
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|DatanodeDetails
name|datanodeThree
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|ContainerReplica
argument_list|>
name|containerReplicas
init|=
name|getReplicas
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|CLOSING
argument_list|,
name|datanodeOne
argument_list|,
name|datanodeTwo
argument_list|)
decl_stmt|;
name|containerReplicas
operator|.
name|addAll
argument_list|(
name|getReplicas
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|QUASI_CLOSED
argument_list|,
name|datanodeThree
argument_list|)
argument_list|)
expr_stmt|;
name|addContainerToContainerManager
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerReplica
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|containerReplicas
argument_list|)
expr_stmt|;
name|mockUpdateContainerState
argument_list|(
name|containerManager
argument_list|,
name|container
argument_list|,
name|LifeCycleEvent
operator|.
name|FORCE_CLOSE
argument_list|,
name|LifeCycleState
operator|.
name|CLOSED
argument_list|)
expr_stmt|;
specifier|final
name|IncrementalContainerReportProto
name|containerReport
init|=
name|getIncrementalContainerReportProto
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|QUASI_CLOSED
argument_list|,
name|datanodeOne
operator|.
name|getUuidString
argument_list|()
argument_list|,
literal|999999L
argument_list|)
decl_stmt|;
specifier|final
name|EventPublisher
name|publisher
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|EventPublisher
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportFromDatanode
name|icrFromDatanode
init|=
operator|new
name|IncrementalContainerReportFromDatanode
argument_list|(
name|datanodeOne
argument_list|,
name|containerReport
argument_list|)
decl_stmt|;
name|reportHandler
operator|.
name|onMessage
argument_list|(
name|icrFromDatanode
argument_list|,
name|publisher
argument_list|)
expr_stmt|;
comment|// SCM should issue force close.
name|Mockito
operator|.
name|verify
argument_list|(
name|publisher
argument_list|,
name|Mockito
operator|.
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|fireEvent
argument_list|(
name|Mockito
operator|.
name|any
argument_list|()
argument_list|,
name|Mockito
operator|.
name|any
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|IncrementalContainerReportProto
name|containerReportTwo
init|=
name|getIncrementalContainerReportProto
argument_list|(
name|container
operator|.
name|containerID
argument_list|()
argument_list|,
name|ContainerReplicaProto
operator|.
name|State
operator|.
name|CLOSED
argument_list|,
name|datanodeOne
operator|.
name|getUuidString
argument_list|()
argument_list|,
literal|999999L
argument_list|)
decl_stmt|;
specifier|final
name|IncrementalContainerReportFromDatanode
name|icrTwoFromDatanode
init|=
operator|new
name|IncrementalContainerReportFromDatanode
argument_list|(
name|datanodeOne
argument_list|,
name|containerReportTwo
argument_list|)
decl_stmt|;
name|reportHandler
operator|.
name|onMessage
argument_list|(
name|icrTwoFromDatanode
argument_list|,
name|publisher
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LifeCycleState
operator|.
name|CLOSED
argument_list|,
name|container
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|IncrementalContainerReportProto
DECL|method|getIncrementalContainerReportProto ( final ContainerID containerId, final ContainerReplicaProto.State state, final String originNodeId)
name|getIncrementalContainerReportProto
parameter_list|(
specifier|final
name|ContainerID
name|containerId
parameter_list|,
specifier|final
name|ContainerReplicaProto
operator|.
name|State
name|state
parameter_list|,
specifier|final
name|String
name|originNodeId
parameter_list|)
block|{
return|return
name|getIncrementalContainerReportProto
argument_list|(
name|containerId
argument_list|,
name|state
argument_list|,
name|originNodeId
argument_list|,
literal|100L
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|IncrementalContainerReportProto
DECL|method|getIncrementalContainerReportProto ( final ContainerID containerId, final ContainerReplicaProto.State state, final String originNodeId, final long bcsid)
name|getIncrementalContainerReportProto
parameter_list|(
specifier|final
name|ContainerID
name|containerId
parameter_list|,
specifier|final
name|ContainerReplicaProto
operator|.
name|State
name|state
parameter_list|,
specifier|final
name|String
name|originNodeId
parameter_list|,
specifier|final
name|long
name|bcsid
parameter_list|)
block|{
specifier|final
name|IncrementalContainerReportProto
operator|.
name|Builder
name|crBuilder
init|=
name|IncrementalContainerReportProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
specifier|final
name|ContainerReplicaProto
name|replicaProto
init|=
name|ContainerReplicaProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setContainerID
argument_list|(
name|containerId
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|setState
argument_list|(
name|state
argument_list|)
operator|.
name|setOriginNodeId
argument_list|(
name|originNodeId
argument_list|)
operator|.
name|setFinalhash
argument_list|(
literal|"e16cc9d6024365750ed8dbd194ea46d2"
argument_list|)
operator|.
name|setSize
argument_list|(
literal|5368709120L
argument_list|)
operator|.
name|setUsed
argument_list|(
literal|2000000000L
argument_list|)
operator|.
name|setKeyCount
argument_list|(
literal|100000000L
argument_list|)
operator|.
name|setReadCount
argument_list|(
literal|100000000L
argument_list|)
operator|.
name|setWriteCount
argument_list|(
literal|100000000L
argument_list|)
operator|.
name|setReadBytes
argument_list|(
literal|2000000000L
argument_list|)
operator|.
name|setWriteBytes
argument_list|(
literal|2000000000L
argument_list|)
operator|.
name|setBlockCommitSequenceId
argument_list|(
name|bcsid
argument_list|)
operator|.
name|setDeleteTransactionId
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|crBuilder
operator|.
name|addReport
argument_list|(
name|replicaProto
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

