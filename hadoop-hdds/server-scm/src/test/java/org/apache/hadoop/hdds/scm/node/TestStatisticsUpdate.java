begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.node
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|node
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|HddsConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|StorageReportProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|NodeReportProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|HddsTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|ScmConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|placement
operator|.
name|metrics
operator|.
name|SCMNodeMetric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|placement
operator|.
name|metrics
operator|.
name|SCMNodeStat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|events
operator|.
name|SCMEvents
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|NodeReportFromDatanode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|StorageContainerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventPublisher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Verifies the statics in NodeManager.  */
end_comment

begin_class
DECL|class|TestStatisticsUpdate
specifier|public
class|class
name|TestStatisticsUpdate
block|{
DECL|field|nodeManager
specifier|private
name|NodeManager
name|nodeManager
decl_stmt|;
DECL|field|nodeReportHandler
specifier|private
name|NodeReportHandler
name|nodeReportHandler
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
throws|,
name|AuthenticationException
block|{
specifier|final
name|OzoneConfiguration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|String
name|storageDir
init|=
name|GenericTestUtils
operator|.
name|getTempPath
argument_list|(
name|TestDeadNodeHandler
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HddsConfigKeys
operator|.
name|OZONE_METADATA_DIRS
argument_list|,
name|storageDir
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HddsConfigKeys
operator|.
name|HDDS_HEARTBEAT_INTERVAL
argument_list|,
literal|"100ms"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ScmConfigKeys
operator|.
name|OZONE_SCM_HEARTBEAT_PROCESS_INTERVAL
argument_list|,
literal|"50ms"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ScmConfigKeys
operator|.
name|OZONE_SCM_STALENODE_INTERVAL
argument_list|,
literal|"1s"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ScmConfigKeys
operator|.
name|OZONE_SCM_DEADNODE_INTERVAL
argument_list|,
literal|"2s"
argument_list|)
expr_stmt|;
specifier|final
name|EventQueue
name|eventQueue
init|=
operator|new
name|EventQueue
argument_list|()
decl_stmt|;
specifier|final
name|StorageContainerManager
name|scm
init|=
name|HddsTestUtils
operator|.
name|getScm
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|nodeManager
operator|=
name|scm
operator|.
name|getScmNodeManager
argument_list|()
expr_stmt|;
specifier|final
name|DeadNodeHandler
name|deadNodeHandler
init|=
operator|new
name|DeadNodeHandler
argument_list|(
name|nodeManager
argument_list|,
name|scm
operator|.
name|getContainerManager
argument_list|()
argument_list|)
decl_stmt|;
name|eventQueue
operator|.
name|addHandler
argument_list|(
name|SCMEvents
operator|.
name|DEAD_NODE
argument_list|,
name|deadNodeHandler
argument_list|)
expr_stmt|;
name|nodeReportHandler
operator|=
operator|new
name|NodeReportHandler
argument_list|(
name|nodeManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStatisticsUpdate ()
specifier|public
name|void
name|testStatisticsUpdate
parameter_list|()
throws|throws
name|Exception
block|{
comment|//GIVEN
name|DatanodeDetails
name|datanode1
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
name|DatanodeDetails
name|datanode2
init|=
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
decl_stmt|;
name|String
name|storagePath1
init|=
name|GenericTestUtils
operator|.
name|getRandomizedTempPath
argument_list|()
operator|.
name|concat
argument_list|(
literal|"/"
operator|+
name|datanode1
operator|.
name|getUuidString
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|storagePath2
init|=
name|GenericTestUtils
operator|.
name|getRandomizedTempPath
argument_list|()
operator|.
name|concat
argument_list|(
literal|"/"
operator|+
name|datanode2
operator|.
name|getUuidString
argument_list|()
argument_list|)
decl_stmt|;
name|StorageReportProto
name|storageOne
init|=
name|TestUtils
operator|.
name|createStorageReport
argument_list|(
name|datanode1
operator|.
name|getUuid
argument_list|()
argument_list|,
name|storagePath1
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|,
literal|90
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageReportProto
name|storageTwo
init|=
name|TestUtils
operator|.
name|createStorageReport
argument_list|(
name|datanode2
operator|.
name|getUuid
argument_list|()
argument_list|,
name|storagePath2
argument_list|,
literal|200
argument_list|,
literal|20
argument_list|,
literal|180
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|nodeManager
operator|.
name|register
argument_list|(
name|datanode1
argument_list|,
name|TestUtils
operator|.
name|createNodeReport
argument_list|(
name|storageOne
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|nodeManager
operator|.
name|register
argument_list|(
name|datanode2
argument_list|,
name|TestUtils
operator|.
name|createNodeReport
argument_list|(
name|storageTwo
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|NodeReportProto
name|nodeReportProto1
init|=
name|TestUtils
operator|.
name|createNodeReport
argument_list|(
name|storageOne
argument_list|)
decl_stmt|;
name|NodeReportProto
name|nodeReportProto2
init|=
name|TestUtils
operator|.
name|createNodeReport
argument_list|(
name|storageTwo
argument_list|)
decl_stmt|;
name|nodeReportHandler
operator|.
name|onMessage
argument_list|(
operator|new
name|NodeReportFromDatanode
argument_list|(
name|datanode1
argument_list|,
name|nodeReportProto1
argument_list|)
argument_list|,
name|Mockito
operator|.
name|mock
argument_list|(
name|EventPublisher
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|nodeReportHandler
operator|.
name|onMessage
argument_list|(
operator|new
name|NodeReportFromDatanode
argument_list|(
name|datanode2
argument_list|,
name|nodeReportProto2
argument_list|)
argument_list|,
name|Mockito
operator|.
name|mock
argument_list|(
name|EventPublisher
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|SCMNodeStat
name|stat
init|=
name|nodeManager
operator|.
name|getStats
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|300L
argument_list|,
name|stat
operator|.
name|getCapacity
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|270L
argument_list|,
name|stat
operator|.
name|getRemaining
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30L
argument_list|,
name|stat
operator|.
name|getScmUsed
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|SCMNodeMetric
name|nodeStat
init|=
name|nodeManager
operator|.
name|getNodeStat
argument_list|(
name|datanode1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|100L
argument_list|,
name|nodeStat
operator|.
name|get
argument_list|()
operator|.
name|getCapacity
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|90L
argument_list|,
name|nodeStat
operator|.
name|get
argument_list|()
operator|.
name|getRemaining
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|nodeStat
operator|.
name|get
argument_list|()
operator|.
name|getScmUsed
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
comment|//TODO: Support logic to mark a node as dead in NodeManager.
name|nodeManager
operator|.
name|processHeartbeat
argument_list|(
name|datanode2
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|nodeManager
operator|.
name|processHeartbeat
argument_list|(
name|datanode2
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|nodeManager
operator|.
name|processHeartbeat
argument_list|(
name|datanode2
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|nodeManager
operator|.
name|processHeartbeat
argument_list|(
name|datanode2
argument_list|)
expr_stmt|;
comment|//THEN statistics in SCM should changed.
name|stat
operator|=
name|nodeManager
operator|.
name|getStats
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200L
argument_list|,
name|stat
operator|.
name|getCapacity
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|180L
argument_list|,
name|stat
operator|.
name|getRemaining
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|20L
argument_list|,
name|stat
operator|.
name|getScmUsed
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

