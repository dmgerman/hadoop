begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.server.report
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|report
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|SCMHeartbeatRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerReportsProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|NodeReportProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_comment
comment|/**  * This class tests the behavior of SCMDatanodeHeartbeatDispatcher.  */
end_comment

begin_class
DECL|class|TestSCMDatanodeHeartbeatDispatcher
specifier|public
class|class
name|TestSCMDatanodeHeartbeatDispatcher
block|{
annotation|@
name|Test
DECL|method|testSCMDatanodeHeartbeatDispatcherBuilder ()
specifier|public
name|void
name|testSCMDatanodeHeartbeatDispatcherBuilder
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|SCMDatanodeHeartbeatDispatcher
name|dispatcher
init|=
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|newBuilder
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
operator|.
name|addHandlerFor
argument_list|(
name|NodeReportProto
operator|.
name|class
argument_list|)
operator|.
name|addHandlerFor
argument_list|(
name|ContainerReportsProto
operator|.
name|class
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|dispatcher
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNodeReportDispatcher ()
specifier|public
name|void
name|testNodeReportDispatcher
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|SCMDatanodeNodeReportHandler
name|nodeReportHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SCMDatanodeNodeReportHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|SCMDatanodeHeartbeatDispatcher
name|dispatcher
init|=
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|newBuilder
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
operator|.
name|addHandler
argument_list|(
name|NodeReportProto
operator|.
name|class
argument_list|,
name|nodeReportHandler
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DatanodeDetails
name|datanodeDetails
init|=
name|TestUtils
operator|.
name|getDatanodeDetails
argument_list|()
decl_stmt|;
name|NodeReportProto
name|nodeReport
init|=
name|NodeReportProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
name|SCMHeartbeatRequestProto
name|heartbeat
init|=
name|SCMHeartbeatRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDatanodeDetails
argument_list|(
name|datanodeDetails
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
operator|.
name|setNodeReport
argument_list|(
name|nodeReport
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|heartbeat
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|nodeReportHandler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|processReport
argument_list|(
name|any
argument_list|(
name|DatanodeDetails
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|nodeReport
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContainerReportDispatcher ()
specifier|public
name|void
name|testContainerReportDispatcher
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|SCMDatanodeContainerReportHandler
name|containerReportHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SCMDatanodeContainerReportHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|SCMDatanodeHeartbeatDispatcher
name|dispatcher
init|=
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|newBuilder
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
operator|.
name|addHandler
argument_list|(
name|ContainerReportsProto
operator|.
name|class
argument_list|,
name|containerReportHandler
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DatanodeDetails
name|datanodeDetails
init|=
name|TestUtils
operator|.
name|getDatanodeDetails
argument_list|()
decl_stmt|;
name|ContainerReportsProto
name|containerReport
init|=
name|ContainerReportsProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
name|SCMHeartbeatRequestProto
name|heartbeat
init|=
name|SCMHeartbeatRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDatanodeDetails
argument_list|(
name|datanodeDetails
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
operator|.
name|setContainerReport
argument_list|(
name|containerReport
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|heartbeat
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|containerReportHandler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|processReport
argument_list|(
name|any
argument_list|(
name|DatanodeDetails
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|ContainerReportsProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNodeAndContainerReportDispatcher ()
specifier|public
name|void
name|testNodeAndContainerReportDispatcher
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|SCMDatanodeNodeReportHandler
name|nodeReportHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SCMDatanodeNodeReportHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|SCMDatanodeContainerReportHandler
name|containerReportHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SCMDatanodeContainerReportHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|SCMDatanodeHeartbeatDispatcher
name|dispatcher
init|=
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|newBuilder
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
operator|.
name|addHandler
argument_list|(
name|NodeReportProto
operator|.
name|class
argument_list|,
name|nodeReportHandler
argument_list|)
operator|.
name|addHandler
argument_list|(
name|ContainerReportsProto
operator|.
name|class
argument_list|,
name|containerReportHandler
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DatanodeDetails
name|datanodeDetails
init|=
name|TestUtils
operator|.
name|getDatanodeDetails
argument_list|()
decl_stmt|;
name|NodeReportProto
name|nodeReport
init|=
name|NodeReportProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
name|ContainerReportsProto
name|containerReport
init|=
name|ContainerReportsProto
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
name|SCMHeartbeatRequestProto
name|heartbeat
init|=
name|SCMHeartbeatRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDatanodeDetails
argument_list|(
name|datanodeDetails
operator|.
name|getProtoBufMessage
argument_list|()
argument_list|)
operator|.
name|setNodeReport
argument_list|(
name|nodeReport
argument_list|)
operator|.
name|setContainerReport
argument_list|(
name|containerReport
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|heartbeat
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|nodeReportHandler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|processReport
argument_list|(
name|any
argument_list|(
name|DatanodeDetails
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|NodeReportProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|containerReportHandler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|processReport
argument_list|(
name|any
argument_list|(
name|DatanodeDetails
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|ContainerReportsProto
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

