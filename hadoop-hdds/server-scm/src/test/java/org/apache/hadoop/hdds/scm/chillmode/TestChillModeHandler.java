begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.chillmode
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|chillmode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|HddsConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|block
operator|.
name|BlockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|block
operator|.
name|BlockManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|replication
operator|.
name|ReplicationActivityStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|events
operator|.
name|SCMEvents
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|SCMClientProtocolServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Tests ChillModeHandler behavior.  */
end_comment

begin_class
DECL|class|TestChillModeHandler
specifier|public
class|class
name|TestChillModeHandler
block|{
DECL|field|configuration
specifier|private
name|OzoneConfiguration
name|configuration
decl_stmt|;
DECL|field|scmClientProtocolServer
specifier|private
name|SCMClientProtocolServer
name|scmClientProtocolServer
decl_stmt|;
DECL|field|replicationActivityStatus
specifier|private
name|ReplicationActivityStatus
name|replicationActivityStatus
decl_stmt|;
DECL|field|blockManager
specifier|private
name|BlockManager
name|blockManager
decl_stmt|;
DECL|field|chillModeHandler
specifier|private
name|ChillModeHandler
name|chillModeHandler
decl_stmt|;
DECL|field|eventQueue
specifier|private
name|EventQueue
name|eventQueue
decl_stmt|;
DECL|field|chillModeStatus
specifier|private
name|SCMChillModeManager
operator|.
name|ChillModeStatus
name|chillModeStatus
decl_stmt|;
DECL|method|setup (boolean enabled)
specifier|public
name|void
name|setup
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|configuration
operator|=
operator|new
name|OzoneConfiguration
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|setBoolean
argument_list|(
name|HddsConfigKeys
operator|.
name|HDDS_SCM_CHILLMODE_ENABLED
argument_list|,
name|enabled
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|HddsConfigKeys
operator|.
name|HDDS_SCM_WAIT_TIME_AFTER_CHILL_MODE_EXIT
argument_list|,
literal|"3s"
argument_list|)
expr_stmt|;
name|scmClientProtocolServer
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SCMClientProtocolServer
operator|.
name|class
argument_list|)
expr_stmt|;
name|replicationActivityStatus
operator|=
operator|new
name|ReplicationActivityStatus
argument_list|()
expr_stmt|;
name|blockManager
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|BlockManagerImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|chillModeHandler
operator|=
operator|new
name|ChillModeHandler
argument_list|(
name|configuration
argument_list|,
name|scmClientProtocolServer
argument_list|,
name|blockManager
argument_list|,
name|replicationActivityStatus
argument_list|)
expr_stmt|;
name|eventQueue
operator|=
operator|new
name|EventQueue
argument_list|()
expr_stmt|;
name|eventQueue
operator|.
name|addHandler
argument_list|(
name|SCMEvents
operator|.
name|CHILL_MODE_STATUS
argument_list|,
name|chillModeHandler
argument_list|)
expr_stmt|;
name|chillModeStatus
operator|=
operator|new
name|SCMChillModeManager
operator|.
name|ChillModeStatus
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChillModeHandlerWithChillModeEnabled ()
specifier|public
name|void
name|testChillModeHandlerWithChillModeEnabled
parameter_list|()
throws|throws
name|Exception
block|{
name|setup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|chillModeHandler
operator|.
name|getChillModeStatus
argument_list|()
argument_list|)
expr_stmt|;
name|eventQueue
operator|.
name|fireEvent
argument_list|(
name|SCMEvents
operator|.
name|CHILL_MODE_STATUS
argument_list|,
name|chillModeStatus
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
parameter_list|()
lambda|->
operator|!
name|chillModeHandler
operator|.
name|getChillModeStatus
argument_list|()
argument_list|,
literal|1000
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|scmClientProtocolServer
operator|.
name|getChillModeStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
operator|(
operator|(
name|BlockManagerImpl
operator|)
name|blockManager
operator|)
operator|.
name|isScmInChillMode
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
parameter_list|()
lambda|->
name|replicationActivityStatus
operator|.
name|isReplicationEnabled
argument_list|()
argument_list|,
literal|1000
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChillModeHandlerWithChillModeDisbaled ()
specifier|public
name|void
name|testChillModeHandlerWithChillModeDisbaled
parameter_list|()
throws|throws
name|Exception
block|{
name|setup
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|chillModeHandler
operator|.
name|getChillModeStatus
argument_list|()
argument_list|)
expr_stmt|;
name|eventQueue
operator|.
name|fireEvent
argument_list|(
name|SCMEvents
operator|.
name|CHILL_MODE_STATUS
argument_list|,
name|chillModeStatus
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|chillModeHandler
operator|.
name|getChillModeStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|scmClientProtocolServer
operator|.
name|getChillModeStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
operator|(
operator|(
name|BlockManagerImpl
operator|)
name|blockManager
operator|)
operator|.
name|isScmInChillMode
argument_list|()
argument_list|)
expr_stmt|;
name|GenericTestUtils
operator|.
name|waitFor
argument_list|(
parameter_list|()
lambda|->
name|replicationActivityStatus
operator|.
name|isReplicationEnabled
argument_list|()
argument_list|,
literal|1000
argument_list|,
literal|5000
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

