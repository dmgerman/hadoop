begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.container
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerActionsProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|StorageContainerDatanodeProtocolProtos
operator|.
name|ContainerAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|events
operator|.
name|SCMEvents
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
operator|.
name|SCMDatanodeHeartbeatDispatcher
operator|.
name|ContainerActionsFromDatanode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|events
operator|.
name|EventQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_comment
comment|/**  * Tests ContainerActionsHandler.  */
end_comment

begin_class
DECL|class|TestContainerActionsHandler
specifier|public
class|class
name|TestContainerActionsHandler
block|{
annotation|@
name|Test
DECL|method|testCloseContainerAction ()
specifier|public
name|void
name|testCloseContainerAction
parameter_list|()
block|{
name|EventQueue
name|queue
init|=
operator|new
name|EventQueue
argument_list|()
decl_stmt|;
name|ContainerActionsHandler
name|actionsHandler
init|=
operator|new
name|ContainerActionsHandler
argument_list|()
decl_stmt|;
name|CloseContainerEventHandler
name|closeContainerEventHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|CloseContainerEventHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|queue
operator|.
name|addHandler
argument_list|(
name|SCMEvents
operator|.
name|CLOSE_CONTAINER
argument_list|,
name|closeContainerEventHandler
argument_list|)
expr_stmt|;
name|queue
operator|.
name|addHandler
argument_list|(
name|SCMEvents
operator|.
name|CONTAINER_ACTIONS
argument_list|,
name|actionsHandler
argument_list|)
expr_stmt|;
name|ContainerAction
name|action
init|=
name|ContainerAction
operator|.
name|newBuilder
argument_list|()
operator|.
name|setContainerID
argument_list|(
literal|1L
argument_list|)
operator|.
name|setAction
argument_list|(
name|ContainerAction
operator|.
name|Action
operator|.
name|CLOSE
argument_list|)
operator|.
name|setReason
argument_list|(
name|ContainerAction
operator|.
name|Reason
operator|.
name|CONTAINER_FULL
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContainerActionsProto
name|cap
init|=
name|ContainerActionsProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|addContainerActions
argument_list|(
name|action
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ContainerActionsFromDatanode
name|containerActions
init|=
operator|new
name|ContainerActionsFromDatanode
argument_list|(
name|TestUtils
operator|.
name|randomDatanodeDetails
argument_list|()
argument_list|,
name|cap
argument_list|)
decl_stmt|;
name|queue
operator|.
name|fireEvent
argument_list|(
name|SCMEvents
operator|.
name|CONTAINER_ACTIONS
argument_list|,
name|containerActions
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|closeContainerEventHandler
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|onMessage
argument_list|(
name|ContainerID
operator|.
name|valueof
argument_list|(
literal|1L
argument_list|)
argument_list|,
name|queue
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

