begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.scm.server
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|server
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyInt
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test metrics that represent container states.  */
end_comment

begin_class
DECL|class|TestSCMContainerMetrics
specifier|public
class|class
name|TestSCMContainerMetrics
block|{
annotation|@
name|Test
DECL|method|testSCMContainerMetrics ()
specifier|public
name|void
name|testSCMContainerMetrics
parameter_list|()
block|{
name|SCMMXBean
name|scmmxBean
init|=
name|mock
argument_list|(
name|SCMMXBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|stateInfo
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
argument_list|()
block|{
block|{
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|OPEN
operator|.
name|toString
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|CLOSING
operator|.
name|toString
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|QUASI_CLOSED
operator|.
name|toString
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|CLOSED
operator|.
name|toString
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|DELETING
operator|.
name|toString
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|HddsProtos
operator|.
name|LifeCycleState
operator|.
name|DELETED
operator|.
name|toString
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|when
argument_list|(
name|scmmxBean
operator|.
name|getContainerStateCount
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|stateInfo
argument_list|)
expr_stmt|;
name|MetricsRecordBuilder
name|mb
init|=
name|mock
argument_list|(
name|MetricsRecordBuilder
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mb
operator|.
name|addGauge
argument_list|(
name|any
argument_list|(
name|MetricsInfo
operator|.
name|class
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mb
argument_list|)
expr_stmt|;
name|MetricsCollector
name|metricsCollector
init|=
name|mock
argument_list|(
name|MetricsCollector
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|metricsCollector
operator|.
name|addRecord
argument_list|(
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mb
argument_list|)
expr_stmt|;
name|SCMContainerMetrics
name|containerMetrics
init|=
operator|new
name|SCMContainerMetrics
argument_list|(
name|scmmxBean
argument_list|)
decl_stmt|;
name|containerMetrics
operator|.
name|getMetrics
argument_list|(
name|metricsCollector
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"OpenContainers"
argument_list|,
literal|"Number of open containers"
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"ClosingContainers"
argument_list|,
literal|"Number of containers in closing state"
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"QuasiClosedContainers"
argument_list|,
literal|"Number of containers in quasi closed state"
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"ClosedContainers"
argument_list|,
literal|"Number of containers in closed state"
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DeletingContainers"
argument_list|,
literal|"Number of containers in deleting state"
argument_list|)
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mb
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
literal|"DeletedContainers"
argument_list|,
literal|"Number of containers in deleted state"
argument_list|)
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

