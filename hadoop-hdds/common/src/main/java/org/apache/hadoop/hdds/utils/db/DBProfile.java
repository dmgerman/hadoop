begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.utils.db
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|BlockBasedTableConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|BloomFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|ColumnFamilyOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|CompactionStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|DBOptions
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_comment
comment|/**  * User visible configs based RocksDB tuning page. Documentation for Options.  *<p>  * https://github.com/facebook/rocksdb/blob/master/include/rocksdb/options.h  *<p>  * Most tuning parameters are based on this URL.  *<p>  * https://github.com/facebook/rocksdb/wiki/Setup-Options-and-Basic-Tuning  */
end_comment

begin_enum
DECL|enum|DBProfile
specifier|public
enum|enum
name|DBProfile
block|{
comment|//TODO : Add more profiles like TEST etc.
DECL|enumConstant|SSD
name|SSD
block|{
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DBProfile.SSD"
return|;
block|}
annotation|@
name|Override
specifier|public
name|ColumnFamilyOptions
name|getColumnFamilyOptions
parameter_list|()
block|{
comment|// Set BlockCacheSize to 256 MB. This should not be an issue for HADOOP.
specifier|final
name|long
name|blockCacheSize
init|=
name|toLong
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|256.00
argument_list|)
argument_list|)
decl_stmt|;
comment|// Set the Default block size to 16KB
specifier|final
name|long
name|blockSize
init|=
name|toLong
argument_list|(
name|StorageUnit
operator|.
name|KB
operator|.
name|toBytes
argument_list|(
literal|16
argument_list|)
argument_list|)
decl_stmt|;
comment|// Write Buffer Size -- set to 128 MB
specifier|final
name|long
name|writeBufferSize
init|=
name|toLong
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|128
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|ColumnFamilyOptions
argument_list|()
operator|.
name|setLevelCompactionDynamicLevelBytes
argument_list|(
literal|true
argument_list|)
operator|.
name|setWriteBufferSize
argument_list|(
name|writeBufferSize
argument_list|)
operator|.
name|setTableFormatConfig
argument_list|(
operator|new
name|BlockBasedTableConfig
argument_list|()
operator|.
name|setBlockCacheSize
argument_list|(
name|blockCacheSize
argument_list|)
operator|.
name|setBlockSize
argument_list|(
name|blockSize
argument_list|)
operator|.
name|setCacheIndexAndFilterBlocks
argument_list|(
literal|true
argument_list|)
operator|.
name|setPinL0FilterAndIndexBlocksInCache
argument_list|(
literal|true
argument_list|)
operator|.
name|setFilter
argument_list|(
operator|new
name|BloomFilter
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|DBOptions
name|getDBOptions
parameter_list|()
block|{
specifier|final
name|int
name|maxBackgroundCompactions
init|=
literal|4
decl_stmt|;
specifier|final
name|int
name|maxBackgroundFlushes
init|=
literal|2
decl_stmt|;
specifier|final
name|long
name|bytesPerSync
init|=
name|toLong
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|1.00
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|createIfMissing
init|=
literal|true
decl_stmt|;
specifier|final
name|boolean
name|createMissingColumnFamilies
init|=
literal|true
decl_stmt|;
return|return
operator|new
name|DBOptions
argument_list|()
operator|.
name|setIncreaseParallelism
argument_list|(
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|availableProcessors
argument_list|()
argument_list|)
operator|.
name|setMaxBackgroundCompactions
argument_list|(
name|maxBackgroundCompactions
argument_list|)
operator|.
name|setMaxBackgroundFlushes
argument_list|(
name|maxBackgroundFlushes
argument_list|)
operator|.
name|setBytesPerSync
argument_list|(
name|bytesPerSync
argument_list|)
operator|.
name|setCreateIfMissing
argument_list|(
name|createIfMissing
argument_list|)
operator|.
name|setCreateMissingColumnFamilies
argument_list|(
name|createMissingColumnFamilies
argument_list|)
return|;
block|}
block|}
block|,
DECL|enumConstant|DISK
name|DISK
block|{
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DBProfile.DISK"
return|;
block|}
annotation|@
name|Override
specifier|public
name|DBOptions
name|getDBOptions
parameter_list|()
block|{
specifier|final
name|long
name|readAheadSize
init|=
name|toLong
argument_list|(
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|4.00
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|SSD
operator|.
name|getDBOptions
argument_list|()
operator|.
name|setCompactionReadaheadSize
argument_list|(
name|readAheadSize
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ColumnFamilyOptions
name|getColumnFamilyOptions
parameter_list|()
block|{
name|ColumnFamilyOptions
name|columnFamilyOptions
init|=
name|SSD
operator|.
name|getColumnFamilyOptions
argument_list|()
decl_stmt|;
name|columnFamilyOptions
operator|.
name|setCompactionStyle
argument_list|(
name|CompactionStyle
operator|.
name|LEVEL
argument_list|)
expr_stmt|;
return|return
name|columnFamilyOptions
return|;
block|}
block|}
block|;
DECL|method|toLong (double value)
specifier|private
specifier|static
name|long
name|toLong
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|BigDecimal
name|temp
init|=
operator|new
name|BigDecimal
argument_list|(
name|value
argument_list|)
decl_stmt|;
return|return
name|temp
operator|.
name|longValue
argument_list|()
return|;
block|}
DECL|method|getDBOptions ()
specifier|public
specifier|abstract
name|DBOptions
name|getDBOptions
parameter_list|()
function_decl|;
DECL|method|getColumnFamilyOptions ()
specifier|public
specifier|abstract
name|ColumnFamilyOptions
name|getColumnFamilyOptions
parameter_list|()
function_decl|;
block|}
end_enum

end_unit

