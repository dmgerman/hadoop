begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.utils.db
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|ColumnFamilyHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|RocksDB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|RocksDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|WriteBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|WriteOptions
import|;
end_import

begin_comment
comment|/**  * Batch operation implementation for rocks db.  */
end_comment

begin_class
DECL|class|RDBBatchOperation
specifier|public
class|class
name|RDBBatchOperation
implements|implements
name|BatchOperation
block|{
DECL|field|writeBatch
specifier|private
specifier|final
name|WriteBatch
name|writeBatch
decl_stmt|;
DECL|method|RDBBatchOperation ()
specifier|public
name|RDBBatchOperation
parameter_list|()
block|{
name|writeBatch
operator|=
operator|new
name|WriteBatch
argument_list|()
expr_stmt|;
block|}
DECL|method|commit (RocksDB db, WriteOptions writeOptions)
specifier|public
name|void
name|commit
parameter_list|(
name|RocksDB
name|db
parameter_list|,
name|WriteOptions
name|writeOptions
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|db
operator|.
name|write
argument_list|(
name|writeOptions
argument_list|,
name|writeBatch
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RocksDBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to write the batch."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|writeBatch
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|delete (ColumnFamilyHandle handle, byte[] key)
specifier|public
name|void
name|delete
parameter_list|(
name|ColumnFamilyHandle
name|handle
parameter_list|,
name|byte
index|[]
name|key
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|writeBatch
operator|.
name|delete
argument_list|(
name|handle
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RocksDBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Can't record batch delete operation."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|put (ColumnFamilyHandle handle, byte[] key, byte[] value)
specifier|public
name|void
name|put
parameter_list|(
name|ColumnFamilyHandle
name|handle
parameter_list|,
name|byte
index|[]
name|key
parameter_list|,
name|byte
index|[]
name|value
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|writeBatch
operator|.
name|put
argument_list|(
name|handle
argument_list|,
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RocksDBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Can't record batch put operation."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

