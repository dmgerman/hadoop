begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.hdds.utils.db
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigType
import|;
end_import

begin_comment
comment|/**  * Holds configuration items for OM RocksDB.  */
end_comment

begin_class
annotation|@
name|ConfigGroup
argument_list|(
name|prefix
operator|=
literal|"hadoop.hdds.db"
argument_list|)
DECL|class|RocksDBConfiguration
specifier|public
class|class
name|RocksDBConfiguration
block|{
DECL|field|rocksdbLogEnabled
specifier|private
name|boolean
name|rocksdbLogEnabled
decl_stmt|;
annotation|@
name|Config
argument_list|(
name|key
operator|=
literal|"rocksdb.logging.enabled"
argument_list|,
name|type
operator|=
name|ConfigType
operator|.
name|BOOLEAN
argument_list|,
name|defaultValue
operator|=
literal|"false"
argument_list|,
name|tags
operator|=
block|{
name|ConfigTag
operator|.
name|OM
block|}
argument_list|,
name|description
operator|=
literal|"Enable/Disable RocksDB logging for OM."
argument_list|)
DECL|method|setRocksdbLoggingEnabled (boolean enabled)
specifier|public
name|void
name|setRocksdbLoggingEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|this
operator|.
name|rocksdbLogEnabled
operator|=
name|enabled
expr_stmt|;
block|}
DECL|method|isRocksdbLoggingEnabled ()
specifier|public
name|boolean
name|isRocksdbLoggingEnabled
parameter_list|()
block|{
return|return
name|rocksdbLogEnabled
return|;
block|}
DECL|field|rocksdbLogLevel
specifier|private
name|String
name|rocksdbLogLevel
decl_stmt|;
annotation|@
name|Config
argument_list|(
name|key
operator|=
literal|"rocksdb.logging.level"
argument_list|,
name|type
operator|=
name|ConfigType
operator|.
name|STRING
argument_list|,
name|defaultValue
operator|=
literal|"INFO"
argument_list|,
name|tags
operator|=
block|{
name|ConfigTag
operator|.
name|OM
block|}
argument_list|,
name|description
operator|=
literal|"OM RocksDB logging level (INFO/DEBUG/WARN/ERROR/FATAL)"
argument_list|)
DECL|method|setRocksdbLogLevel (String level)
specifier|public
name|void
name|setRocksdbLogLevel
parameter_list|(
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|rocksdbLogLevel
operator|=
name|level
expr_stmt|;
block|}
DECL|method|getRocksdbLogLevel ()
specifier|public
name|String
name|getRocksdbLogLevel
parameter_list|()
block|{
return|return
name|rocksdbLogLevel
return|;
block|}
block|}
end_class

end_unit

