begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
package|;
end_package

begin_class
DECL|class|Constants
specifier|public
class|class
name|Constants
block|{
comment|// s3 access key
DECL|field|OLD_ACCESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|OLD_ACCESS_KEY
init|=
literal|"fs.s3a.awsAccessKeyId"
decl_stmt|;
DECL|field|NEW_ACCESS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NEW_ACCESS_KEY
init|=
literal|"fs.s3a.access.key"
decl_stmt|;
comment|// s3 secret key
DECL|field|OLD_SECRET_KEY
specifier|public
specifier|static
specifier|final
name|String
name|OLD_SECRET_KEY
init|=
literal|"fs.s3a.awsSecretAccessKey"
decl_stmt|;
DECL|field|NEW_SECRET_KEY
specifier|public
specifier|static
specifier|final
name|String
name|NEW_SECRET_KEY
init|=
literal|"fs.s3a.secret.key"
decl_stmt|;
comment|// number of simultaneous connections to s3
DECL|field|OLD_MAXIMUM_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|String
name|OLD_MAXIMUM_CONNECTIONS
init|=
literal|"fs.s3a.maxConnections"
decl_stmt|;
DECL|field|NEW_MAXIMUM_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|String
name|NEW_MAXIMUM_CONNECTIONS
init|=
literal|"fs.s3a.connection.maximum"
decl_stmt|;
DECL|field|DEFAULT_MAXIMUM_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAXIMUM_CONNECTIONS
init|=
literal|15
decl_stmt|;
comment|// connect to s3 over ssl?
DECL|field|OLD_SECURE_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|String
name|OLD_SECURE_CONNECTIONS
init|=
literal|"fs.s3a.secureConnections"
decl_stmt|;
DECL|field|NEW_SECURE_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|String
name|NEW_SECURE_CONNECTIONS
init|=
literal|"fs.s3a.connection.ssl.enabled"
decl_stmt|;
DECL|field|DEFAULT_SECURE_CONNECTIONS
specifier|public
specifier|static
specifier|final
name|boolean
name|DEFAULT_SECURE_CONNECTIONS
init|=
literal|true
decl_stmt|;
comment|// number of times we should retry errors
DECL|field|OLD_MAX_ERROR_RETRIES
specifier|public
specifier|static
specifier|final
name|String
name|OLD_MAX_ERROR_RETRIES
init|=
literal|"fs.s3a.maxErrorRetries"
decl_stmt|;
DECL|field|NEW_MAX_ERROR_RETRIES
specifier|public
specifier|static
specifier|final
name|String
name|NEW_MAX_ERROR_RETRIES
init|=
literal|"fs.s3a.attempts.maximum"
decl_stmt|;
DECL|field|DEFAULT_MAX_ERROR_RETRIES
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_ERROR_RETRIES
init|=
literal|10
decl_stmt|;
comment|// seconds until we give up on a connection to s3
DECL|field|OLD_SOCKET_TIMEOUT
specifier|public
specifier|static
specifier|final
name|String
name|OLD_SOCKET_TIMEOUT
init|=
literal|"fs.s3a.socketTimeout"
decl_stmt|;
DECL|field|NEW_SOCKET_TIMEOUT
specifier|public
specifier|static
specifier|final
name|String
name|NEW_SOCKET_TIMEOUT
init|=
literal|"fs.s3a.connection.timeout"
decl_stmt|;
DECL|field|DEFAULT_SOCKET_TIMEOUT
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SOCKET_TIMEOUT
init|=
literal|50000
decl_stmt|;
comment|// number of records to get while paging through a directory listing
DECL|field|OLD_MAX_PAGING_KEYS
specifier|public
specifier|static
specifier|final
name|String
name|OLD_MAX_PAGING_KEYS
init|=
literal|"fs.s3a.maxPagingKeys"
decl_stmt|;
DECL|field|NEW_MAX_PAGING_KEYS
specifier|public
specifier|static
specifier|final
name|String
name|NEW_MAX_PAGING_KEYS
init|=
literal|"fs.s3a.paging.maximum"
decl_stmt|;
DECL|field|DEFAULT_MAX_PAGING_KEYS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_PAGING_KEYS
init|=
literal|5000
decl_stmt|;
comment|// size of each of or multipart pieces in bytes
DECL|field|OLD_MULTIPART_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|OLD_MULTIPART_SIZE
init|=
literal|"fs.s3a.multipartSize"
decl_stmt|;
DECL|field|NEW_MULTIPART_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|NEW_MULTIPART_SIZE
init|=
literal|"fs.s3a.multipart.size"
decl_stmt|;
DECL|field|DEFAULT_MULTIPART_SIZE
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_MULTIPART_SIZE
init|=
literal|104857600
decl_stmt|;
comment|// 100 MB
comment|// minimum size in bytes before we start a multipart uploads or copy
DECL|field|OLD_MIN_MULTIPART_THRESHOLD
specifier|public
specifier|static
specifier|final
name|String
name|OLD_MIN_MULTIPART_THRESHOLD
init|=
literal|"fs.s3a.minMultipartSize"
decl_stmt|;
DECL|field|NEW_MIN_MULTIPART_THRESHOLD
specifier|public
specifier|static
specifier|final
name|String
name|NEW_MIN_MULTIPART_THRESHOLD
init|=
literal|"fs.s3a.multipart.threshold"
decl_stmt|;
DECL|field|DEFAULT_MIN_MULTIPART_THRESHOLD
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MIN_MULTIPART_THRESHOLD
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
comment|// comma separated list of directories
DECL|field|BUFFER_DIR
specifier|public
specifier|static
specifier|final
name|String
name|BUFFER_DIR
init|=
literal|"fs.s3a.buffer.dir"
decl_stmt|;
comment|// private | public-read | public-read-write | authenticated-read |
comment|// log-delivery-write | bucket-owner-read | bucket-owner-full-control
DECL|field|OLD_CANNED_ACL
specifier|public
specifier|static
specifier|final
name|String
name|OLD_CANNED_ACL
init|=
literal|"fs.s3a.cannedACL"
decl_stmt|;
DECL|field|NEW_CANNED_ACL
specifier|public
specifier|static
specifier|final
name|String
name|NEW_CANNED_ACL
init|=
literal|"fs.s3a.acl.default"
decl_stmt|;
DECL|field|DEFAULT_CANNED_ACL
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CANNED_ACL
init|=
literal|""
decl_stmt|;
comment|// should we try to purge old multipart uploads when starting up
DECL|field|OLD_PURGE_EXISTING_MULTIPART
specifier|public
specifier|static
specifier|final
name|String
name|OLD_PURGE_EXISTING_MULTIPART
init|=
literal|"fs.s3a.purgeExistingMultiPart"
decl_stmt|;
DECL|field|NEW_PURGE_EXISTING_MULTIPART
specifier|public
specifier|static
specifier|final
name|String
name|NEW_PURGE_EXISTING_MULTIPART
init|=
literal|"fs.s3a.multipart.purge"
decl_stmt|;
DECL|field|DEFAULT_PURGE_EXISTING_MULTIPART
specifier|public
specifier|static
specifier|final
name|boolean
name|DEFAULT_PURGE_EXISTING_MULTIPART
init|=
literal|false
decl_stmt|;
comment|// purge any multipart uploads older than this number of seconds
DECL|field|OLD_PURGE_EXISTING_MULTIPART_AGE
specifier|public
specifier|static
specifier|final
name|String
name|OLD_PURGE_EXISTING_MULTIPART_AGE
init|=
literal|"fs.s3a.purgeExistingMultiPartAge"
decl_stmt|;
DECL|field|NEW_PURGE_EXISTING_MULTIPART_AGE
specifier|public
specifier|static
specifier|final
name|String
name|NEW_PURGE_EXISTING_MULTIPART_AGE
init|=
literal|"fs.s3a.multipart.purge.age"
decl_stmt|;
DECL|field|DEFAULT_PURGE_EXISTING_MULTIPART_AGE
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_PURGE_EXISTING_MULTIPART_AGE
init|=
literal|14400
decl_stmt|;
comment|// s3 server-side encryption
DECL|field|SERVER_SIDE_ENCRYPTION_ALGORITHM
specifier|public
specifier|static
specifier|final
name|String
name|SERVER_SIDE_ENCRYPTION_ALGORITHM
init|=
literal|"fs.s3a.server-side-encryption-algorithm"
decl_stmt|;
DECL|field|S3N_FOLDER_SUFFIX
specifier|public
specifier|static
specifier|final
name|String
name|S3N_FOLDER_SUFFIX
init|=
literal|"_$folder$"
decl_stmt|;
block|}
end_class

end_unit

