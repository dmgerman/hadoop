begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.auth
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|ClientConfiguration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|auth
operator|.
name|AWSCredentialsProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|client
operator|.
name|builder
operator|.
name|AwsClientBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|amazonaws
operator|.
name|services
operator|.
name|securitytoken
operator|.
name|AWSSecurityTokenServiceClientBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3AUtils
import|;
end_import

begin_comment
comment|/**  * Factory for creating STS Clients.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|STSClientFactory
specifier|public
class|class
name|STSClientFactory
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|STSClientFactory
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Create the builder ready for any final configuration options.    * Picks up connection settings from the Hadoop configuration, including    * proxy secrets.    * @param conf Configuration to act as source of options.    * @param bucket Optional bucket to use to look up per-bucket proxy secrets    * @param credentials AWS credential chain to use    * @param stsEndpoint optional endpoint "https://sns.us-west-1.amazonaws.com"    * @param stsRegion the region, e.g "us-west-1"    * @return the builder to call {@code build()}    * @throws IOException problem reading proxy secrets    */
DECL|method|builder ( final Configuration conf, final String bucket, final AWSCredentialsProvider credentials, final String stsEndpoint, final String stsRegion)
specifier|public
specifier|static
name|AWSSecurityTokenServiceClientBuilder
name|builder
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|String
name|bucket
parameter_list|,
specifier|final
name|AWSCredentialsProvider
name|credentials
parameter_list|,
specifier|final
name|String
name|stsEndpoint
parameter_list|,
specifier|final
name|String
name|stsRegion
parameter_list|)
throws|throws
name|IOException
block|{
name|Preconditions
operator|.
name|checkArgument
argument_list|(
name|credentials
operator|!=
literal|null
argument_list|,
literal|"No credentials"
argument_list|)
expr_stmt|;
specifier|final
name|AWSSecurityTokenServiceClientBuilder
name|builder
init|=
name|AWSSecurityTokenServiceClientBuilder
operator|.
name|standard
argument_list|()
decl_stmt|;
specifier|final
name|ClientConfiguration
name|awsConf
init|=
name|S3AUtils
operator|.
name|createAwsConf
argument_list|(
name|conf
argument_list|,
name|bucket
argument_list|)
decl_stmt|;
name|builder
operator|.
name|withClientConfiguration
argument_list|(
name|awsConf
argument_list|)
expr_stmt|;
name|builder
operator|.
name|withCredentials
argument_list|(
name|credentials
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotEmpty
argument_list|(
name|stsEndpoint
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"STS Endpoint ={}"
argument_list|,
name|stsEndpoint
argument_list|)
expr_stmt|;
name|builder
operator|.
name|withEndpointConfiguration
argument_list|(
operator|new
name|AwsClientBuilder
operator|.
name|EndpointConfiguration
argument_list|(
name|stsEndpoint
argument_list|,
name|stsRegion
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

