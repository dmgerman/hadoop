begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.auth
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
operator|.
name|RoleModel
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Operations, statements and policies covering the operations  * needed to work with S3 and S3Guard.  */
end_comment

begin_class
DECL|class|RolePolicies
specifier|public
specifier|final
class|class
name|RolePolicies
block|{
DECL|method|RolePolicies ()
specifier|private
name|RolePolicies
parameter_list|()
block|{   }
comment|/**    * All S3 operations: {@value}.    */
DECL|field|S3_ALL_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_OPERATIONS
init|=
literal|"s3:*"
decl_stmt|;
comment|/**    * All S3 buckets: {@value}.    */
DECL|field|S3_ALL_BUCKETS
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_BUCKETS
init|=
literal|"arn:aws:s3:::*"
decl_stmt|;
DECL|field|S3_ALL_LIST_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_LIST_OPERATIONS
init|=
literal|"s3:List*"
decl_stmt|;
DECL|field|S3_ALL_LIST_BUCKET
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_LIST_BUCKET
init|=
literal|"s3:ListBucket*"
decl_stmt|;
DECL|field|S3_LIST_BUCKET
specifier|public
specifier|static
specifier|final
name|String
name|S3_LIST_BUCKET
init|=
literal|"s3:ListBucket"
decl_stmt|;
comment|/**    * This is used by the abort operation in S3A commit work.    */
DECL|field|S3_LIST_BUCKET_MULTPART_UPLOADS
specifier|public
specifier|static
specifier|final
name|String
name|S3_LIST_BUCKET_MULTPART_UPLOADS
init|=
literal|"s3:ListBucketMultipartUploads"
decl_stmt|;
comment|/**    * List multipart upload is needed for the S3A Commit protocols.    */
DECL|field|S3_LIST_MULTIPART_UPLOAD_PARTS
specifier|public
specifier|static
specifier|final
name|String
name|S3_LIST_MULTIPART_UPLOAD_PARTS
init|=
literal|"s3:ListMultipartUploadParts"
decl_stmt|;
comment|/**    * abort multipart upload is needed for the S3A Commit protocols.    */
DECL|field|S3_ABORT_MULTIPART_UPLOAD
specifier|public
specifier|static
specifier|final
name|String
name|S3_ABORT_MULTIPART_UPLOAD
init|=
literal|"s3:AbortMultipartUpload"
decl_stmt|;
comment|/**    * All s3:Delete* operations.    */
DECL|field|S3_ALL_DELETE
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_DELETE
init|=
literal|"s3:Delete*"
decl_stmt|;
DECL|field|S3_DELETE_OBJECT
specifier|public
specifier|static
specifier|final
name|String
name|S3_DELETE_OBJECT
init|=
literal|"s3:DeleteObject"
decl_stmt|;
DECL|field|S3_DELETE_OBJECT_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_DELETE_OBJECT_TAGGING
init|=
literal|"s3:DeleteObjectTagging"
decl_stmt|;
DECL|field|S3_DELETE_OBJECT_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|S3_DELETE_OBJECT_VERSION
init|=
literal|"s3:DeleteObjectVersion"
decl_stmt|;
DECL|field|S3_DELETE_OBJECT_VERSION_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_DELETE_OBJECT_VERSION_TAGGING
init|=
literal|"s3:DeleteObjectVersionTagging"
decl_stmt|;
comment|/**    * All s3:Get* operations.    */
DECL|field|S3_ALL_GET
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_GET
init|=
literal|"s3:Get*"
decl_stmt|;
DECL|field|S3_GET_OBJECT
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT
init|=
literal|"s3:GetObject"
decl_stmt|;
DECL|field|S3_GET_OBJECT_ACL
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_ACL
init|=
literal|"s3:GetObjectAcl"
decl_stmt|;
DECL|field|S3_GET_OBJECT_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_TAGGING
init|=
literal|"s3:GetObjectTagging"
decl_stmt|;
DECL|field|S3_GET_OBJECT_TORRENT
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_TORRENT
init|=
literal|"s3:GetObjectTorrent"
decl_stmt|;
DECL|field|S3_GET_OBJECT_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_VERSION
init|=
literal|"s3:GetObjectVersion"
decl_stmt|;
DECL|field|S3_GET_OBJECT_VERSION_ACL
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_VERSION_ACL
init|=
literal|"s3:GetObjectVersionAcl"
decl_stmt|;
DECL|field|S3_GET_OBJECT_VERSION_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_VERSION_TAGGING
init|=
literal|"s3:GetObjectVersionTagging"
decl_stmt|;
DECL|field|S3_GET_OBJECT_VERSION_TORRENT
specifier|public
specifier|static
specifier|final
name|String
name|S3_GET_OBJECT_VERSION_TORRENT
init|=
literal|"s3:GetObjectVersionTorrent"
decl_stmt|;
comment|/**    * S3 Put*.    * This covers single an multipart uploads, but not list/abort of the latter.    */
DECL|field|S3_ALL_PUT
specifier|public
specifier|static
specifier|final
name|String
name|S3_ALL_PUT
init|=
literal|"s3:Put*"
decl_stmt|;
DECL|field|S3_PUT_OBJECT
specifier|public
specifier|static
specifier|final
name|String
name|S3_PUT_OBJECT
init|=
literal|"s3:PutObject"
decl_stmt|;
DECL|field|S3_PUT_OBJECT_ACL
specifier|public
specifier|static
specifier|final
name|String
name|S3_PUT_OBJECT_ACL
init|=
literal|"s3:PutObjectAcl"
decl_stmt|;
DECL|field|S3_PUT_OBJECT_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_PUT_OBJECT_TAGGING
init|=
literal|"s3:PutObjectTagging"
decl_stmt|;
DECL|field|S3_PUT_OBJECT_VERSION_ACL
specifier|public
specifier|static
specifier|final
name|String
name|S3_PUT_OBJECT_VERSION_ACL
init|=
literal|"s3:PutObjectVersionAcl"
decl_stmt|;
DECL|field|S3_PUT_OBJECT_VERSION_TAGGING
specifier|public
specifier|static
specifier|final
name|String
name|S3_PUT_OBJECT_VERSION_TAGGING
init|=
literal|"s3:PutObjectVersionTagging"
decl_stmt|;
DECL|field|S3_RESTORE_OBJECT
specifier|public
specifier|static
specifier|final
name|String
name|S3_RESTORE_OBJECT
init|=
literal|"s3:RestoreObject"
decl_stmt|;
comment|/**    * Actions needed to read data from S3 through S3A.    */
DECL|field|S3_PATH_READ_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|S3_PATH_READ_OPERATIONS
init|=
operator|new
name|String
index|[]
block|{
name|S3_GET_OBJECT
block|,       }
decl_stmt|;
comment|/**    * Actions needed to read data from S3 through S3A.    */
DECL|field|S3_ROOT_READ_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|S3_ROOT_READ_OPERATIONS
init|=
operator|new
name|String
index|[]
block|{
name|S3_LIST_BUCKET
block|,
name|S3_LIST_BUCKET_MULTPART_UPLOADS
block|,
name|S3_GET_OBJECT
block|,       }
decl_stmt|;
comment|/**    * Actions needed to write data to an S3A Path.    * This includes the appropriate read operations.    */
DECL|field|S3_PATH_RW_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|S3_PATH_RW_OPERATIONS
init|=
operator|new
name|String
index|[]
block|{
name|S3_ALL_GET
block|,
name|S3_PUT_OBJECT
block|,
name|S3_DELETE_OBJECT
block|,
name|S3_ABORT_MULTIPART_UPLOAD
block|,
name|S3_LIST_MULTIPART_UPLOAD_PARTS
block|,       }
decl_stmt|;
comment|/**    * Actions needed to write data to an S3A Path.    * This is purely the extra operations needed for writing atop    * of the read operation set.    * Deny these and a path is still readable, but not writeable.    */
DECL|field|S3_PATH_WRITE_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|S3_PATH_WRITE_OPERATIONS
init|=
operator|new
name|String
index|[]
block|{
name|S3_PUT_OBJECT
block|,
name|S3_DELETE_OBJECT
block|,
name|S3_ABORT_MULTIPART_UPLOAD
block|}
decl_stmt|;
comment|/**    * Actions needed for R/W IO from the root of a bucket.    */
DECL|field|S3_ROOT_RW_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|S3_ROOT_RW_OPERATIONS
init|=
operator|new
name|String
index|[]
block|{
name|S3_LIST_BUCKET
block|,
name|S3_ALL_GET
block|,
name|S3_PUT_OBJECT
block|,
name|S3_DELETE_OBJECT
block|,
name|S3_ABORT_MULTIPART_UPLOAD
block|,
name|S3_LIST_MULTIPART_UPLOAD_PARTS
block|,
name|S3_ALL_LIST_BUCKET
block|,       }
decl_stmt|;
comment|/**    * All DynamoDB operations: {@value}.    */
DECL|field|DDB_ALL_OPERATIONS
specifier|public
specifier|static
specifier|final
name|String
name|DDB_ALL_OPERATIONS
init|=
literal|"dynamodb:*"
decl_stmt|;
DECL|field|DDB_ADMIN
specifier|public
specifier|static
specifier|final
name|String
name|DDB_ADMIN
init|=
literal|"dynamodb:*"
decl_stmt|;
DECL|field|DDB_BATCH_WRITE
specifier|public
specifier|static
specifier|final
name|String
name|DDB_BATCH_WRITE
init|=
literal|"dynamodb:BatchWriteItem"
decl_stmt|;
comment|/**    * All DynamoDB tables: {@value}.    */
DECL|field|ALL_DDB_TABLES
specifier|public
specifier|static
specifier|final
name|String
name|ALL_DDB_TABLES
init|=
literal|"arn:aws:dynamodb:::*"
decl_stmt|;
DECL|field|WILDCARD
specifier|public
specifier|static
specifier|final
name|String
name|WILDCARD
init|=
literal|"*"
decl_stmt|;
comment|/**    * Allow all S3 Operations.    */
DECL|field|STATEMENT_ALL_S3
specifier|public
specifier|static
specifier|final
name|Statement
name|STATEMENT_ALL_S3
init|=
name|statement
argument_list|(
literal|true
argument_list|,
name|S3_ALL_BUCKETS
argument_list|,
name|S3_ALL_OPERATIONS
argument_list|)
decl_stmt|;
comment|/**    * Statement to allow all DDB access.    */
DECL|field|STATEMENT_ALL_DDB
specifier|public
specifier|static
specifier|final
name|Statement
name|STATEMENT_ALL_DDB
init|=
name|statement
argument_list|(
literal|true
argument_list|,
name|ALL_DDB_TABLES
argument_list|,
name|DDB_ALL_OPERATIONS
argument_list|)
decl_stmt|;
comment|/**    * Allow all S3 and S3Guard operations.    */
DECL|field|ALLOW_S3_AND_SGUARD
specifier|public
specifier|static
specifier|final
name|Policy
name|ALLOW_S3_AND_SGUARD
init|=
name|policy
argument_list|(
name|STATEMENT_ALL_S3
argument_list|,
name|STATEMENT_ALL_DDB
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

