begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  * Log exactly once, even across threads.  */
end_comment

begin_class
DECL|class|LogExactlyOnce
specifier|public
class|class
name|LogExactlyOnce
block|{
DECL|field|logged
specifier|private
specifier|final
name|AtomicBoolean
name|logged
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
DECL|field|log
specifier|private
specifier|final
name|Logger
name|log
decl_stmt|;
DECL|method|LogExactlyOnce (final Logger log)
specifier|public
name|LogExactlyOnce
parameter_list|(
specifier|final
name|Logger
name|log
parameter_list|)
block|{
name|this
operator|.
name|log
operator|=
name|log
expr_stmt|;
block|}
DECL|method|warn (String format, Object...args)
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|format
parameter_list|,
name|Object
modifier|...
name|args
parameter_list|)
block|{
if|if
condition|(
operator|!
name|logged
operator|.
name|getAndSet
argument_list|(
literal|true
argument_list|)
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
name|format
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

