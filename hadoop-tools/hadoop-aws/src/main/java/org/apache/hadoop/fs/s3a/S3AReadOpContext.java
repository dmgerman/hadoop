begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * Read-specific operation context struct.  */
end_comment

begin_class
DECL|class|S3AReadOpContext
specifier|public
class|class
name|S3AReadOpContext
extends|extends
name|S3AOpContext
block|{
DECL|method|S3AReadOpContext (boolean isS3GuardEnabled, Invoker invoker, Invoker s3guardInvoker, @Nullable FileSystem.Statistics stats, S3AInstrumentation instrumentation, FileStatus dstFileStatus)
specifier|public
name|S3AReadOpContext
parameter_list|(
name|boolean
name|isS3GuardEnabled
parameter_list|,
name|Invoker
name|invoker
parameter_list|,
name|Invoker
name|s3guardInvoker
parameter_list|,
annotation|@
name|Nullable
name|FileSystem
operator|.
name|Statistics
name|stats
parameter_list|,
name|S3AInstrumentation
name|instrumentation
parameter_list|,
name|FileStatus
name|dstFileStatus
parameter_list|)
block|{
name|super
argument_list|(
name|isS3GuardEnabled
argument_list|,
name|invoker
argument_list|,
name|s3guardInvoker
argument_list|,
name|stats
argument_list|,
name|instrumentation
argument_list|,
name|dstFileStatus
argument_list|)
expr_stmt|;
block|}
DECL|method|S3AReadOpContext (boolean isS3GuardEnabled, Invoker invoker, @Nullable FileSystem.Statistics stats, S3AInstrumentation instrumentation, FileStatus dstFileStatus)
specifier|public
name|S3AReadOpContext
parameter_list|(
name|boolean
name|isS3GuardEnabled
parameter_list|,
name|Invoker
name|invoker
parameter_list|,
annotation|@
name|Nullable
name|FileSystem
operator|.
name|Statistics
name|stats
parameter_list|,
name|S3AInstrumentation
name|instrumentation
parameter_list|,
name|FileStatus
name|dstFileStatus
parameter_list|)
block|{
name|super
argument_list|(
name|isS3GuardEnabled
argument_list|,
name|invoker
argument_list|,
name|stats
argument_list|,
name|instrumentation
argument_list|,
name|dstFileStatus
argument_list|)
expr_stmt|;
block|}
comment|/**    * Get invoker to use for read operations.  When S3Guard is enabled we use    * the S3Guard invoker, which deals with things like FileNotFoundException    * differently.    * @return invoker to use for read codepaths    */
DECL|method|getReadInvoker ()
specifier|public
name|Invoker
name|getReadInvoker
parameter_list|()
block|{
if|if
condition|(
name|isS3GuardEnabled
condition|)
block|{
return|return
name|s3guardInvoker
return|;
block|}
else|else
block|{
return|return
name|invoker
return|;
block|}
block|}
block|}
end_class

end_unit

