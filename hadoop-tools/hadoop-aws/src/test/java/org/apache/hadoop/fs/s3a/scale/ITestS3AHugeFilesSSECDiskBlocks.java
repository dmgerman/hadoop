begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License. */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.scale
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|scale
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3AEncryptionMethods
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3ATestUtils
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3ATestUtils
operator|.
name|skipIfEncryptionTestsDisabled
import|;
end_import

begin_comment
comment|/**  * Concrete class that extends {@link ITestS3AHugeFilesDiskBlocks}  * and tests huge files operations with SSE-C encryption enabled.  * Skipped if the SSE tests are disabled.  */
end_comment

begin_class
DECL|class|ITestS3AHugeFilesSSECDiskBlocks
specifier|public
class|class
name|ITestS3AHugeFilesSSECDiskBlocks
extends|extends
name|ITestS3AHugeFilesDiskBlocks
block|{
DECL|field|KEY_1
specifier|private
specifier|static
specifier|final
name|String
name|KEY_1
init|=
literal|"4niV/jPK5VFRHY+KNb6wtqYd4xXyMgdJ9XQJpcQUVbs="
decl_stmt|;
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setup
argument_list|()
expr_stmt|;
name|skipIfEncryptionTestsDisabled
argument_list|(
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createScaleConfiguration ()
specifier|protected
name|Configuration
name|createScaleConfiguration
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|super
operator|.
name|createScaleConfiguration
argument_list|()
decl_stmt|;
name|S3ATestUtils
operator|.
name|disableFilesystemCaching
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|SERVER_SIDE_ENCRYPTION_ALGORITHM
argument_list|,
name|getSSEAlgorithm
argument_list|()
operator|.
name|getMethod
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|Constants
operator|.
name|SERVER_SIDE_ENCRYPTION_KEY
argument_list|,
name|KEY_1
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
DECL|method|getSSEAlgorithm ()
specifier|private
name|S3AEncryptionMethods
name|getSSEAlgorithm
parameter_list|()
block|{
return|return
name|S3AEncryptionMethods
operator|.
name|SSE_C
return|;
block|}
block|}
end_class

end_unit

