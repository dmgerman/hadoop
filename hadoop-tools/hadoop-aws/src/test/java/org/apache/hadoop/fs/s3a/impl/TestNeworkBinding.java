begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|core
operator|.
name|api
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|HadoopTestBase
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|impl
operator|.
name|NetworkBinding
operator|.
name|fixBucketRegion
import|;
end_import

begin_comment
comment|/**  * Unit tests related to the {@link NetworkBinding} class.  */
end_comment

begin_class
DECL|class|TestNeworkBinding
specifier|public
class|class
name|TestNeworkBinding
extends|extends
name|HadoopTestBase
block|{
DECL|field|US_EAST_1
specifier|private
specifier|static
specifier|final
name|String
name|US_EAST_1
init|=
literal|"us-east-1"
decl_stmt|;
DECL|field|US_WEST_2
specifier|private
specifier|static
specifier|final
name|String
name|US_WEST_2
init|=
literal|"us-west-2"
decl_stmt|;
annotation|@
name|Test
DECL|method|testUSEast ()
specifier|public
name|void
name|testUSEast
parameter_list|()
block|{
name|assertRegionFixup
argument_list|(
name|US_EAST_1
argument_list|,
name|US_EAST_1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUSWest ()
specifier|public
name|void
name|testUSWest
parameter_list|()
block|{
name|assertRegionFixup
argument_list|(
name|US_WEST_2
argument_list|,
name|US_WEST_2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRegionUStoUSEast ()
specifier|public
name|void
name|testRegionUStoUSEast
parameter_list|()
block|{
name|assertRegionFixup
argument_list|(
literal|"US"
argument_list|,
name|US_EAST_1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRegionNullToUSEast ()
specifier|public
name|void
name|testRegionNullToUSEast
parameter_list|()
block|{
name|assertRegionFixup
argument_list|(
literal|null
argument_list|,
name|US_EAST_1
argument_list|)
expr_stmt|;
block|}
DECL|method|assertRegionFixup (String region, String expected)
specifier|private
specifier|static
name|void
name|assertRegionFixup
parameter_list|(
name|String
name|region
parameter_list|,
name|String
name|expected
parameter_list|)
block|{
name|Assertions
operator|.
name|assertThat
argument_list|(
name|fixBucketRegion
argument_list|(
name|region
argument_list|)
argument_list|)
operator|.
name|describedAs
argument_list|(
literal|"Fixup of %s"
argument_list|,
name|region
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

