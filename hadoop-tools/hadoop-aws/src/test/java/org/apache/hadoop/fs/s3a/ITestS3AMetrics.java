begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_comment
comment|/**  * Test s3a performance metrics register and output.  */
end_comment

begin_class
DECL|class|ITestS3AMetrics
specifier|public
class|class
name|ITestS3AMetrics
extends|extends
name|AbstractS3ATestBase
block|{
annotation|@
name|Test
DECL|method|testMetricsRegister ()
specifier|public
name|void
name|testMetricsRegister
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|S3AFileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|Path
name|dest
init|=
name|path
argument_list|(
literal|"testMetricsRegister"
argument_list|)
decl_stmt|;
name|ContractTestUtils
operator|.
name|touch
argument_list|(
name|fs
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|String
name|targetMetricSource
init|=
literal|"S3AMetrics1"
operator|+
literal|"-"
operator|+
name|fs
operator|.
name|getBucket
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"No metrics under test fs for "
operator|+
name|targetMetricSource
argument_list|,
name|fs
operator|.
name|getInstrumentation
argument_list|()
operator|.
name|getMetricsSystem
argument_list|()
operator|.
name|getSource
argument_list|(
name|targetMetricSource
argument_list|)
argument_list|)
expr_stmt|;
name|MutableCounterLong
name|fileCreated
init|=
operator|(
name|MutableCounterLong
operator|)
name|fs
operator|.
name|getInstrumentation
argument_list|()
operator|.
name|getRegistry
argument_list|()
operator|.
name|get
argument_list|(
name|Statistic
operator|.
name|FILES_CREATED
operator|.
name|getSymbol
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Metrics system should report single file created event"
argument_list|,
literal|1
argument_list|,
name|fileCreated
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStreamStatistics ()
specifier|public
name|void
name|testStreamStatistics
parameter_list|()
throws|throws
name|IOException
block|{
name|S3AFileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|Path
name|file
init|=
name|path
argument_list|(
literal|"testStreamStatistics"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|data
init|=
literal|"abcdefghijklmnopqrstuvwxyz"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|ContractTestUtils
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|file
argument_list|,
literal|false
argument_list|,
name|data
argument_list|)
expr_stmt|;
try|try
init|(
name|InputStream
name|inputStream
init|=
name|fs
operator|.
name|open
argument_list|(
name|file
argument_list|)
init|)
block|{
while|while
condition|(
name|inputStream
operator|.
name|read
argument_list|(
name|data
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Read batch of data from input stream..."
argument_list|)
expr_stmt|;
block|}
block|}
name|MutableCounterLong
name|read
init|=
operator|(
name|MutableCounterLong
operator|)
name|fs
operator|.
name|getInstrumentation
argument_list|()
operator|.
name|getRegistry
argument_list|()
operator|.
name|get
argument_list|(
name|Statistic
operator|.
name|STREAM_SEEK_BYTES_READ
operator|.
name|getSymbol
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Stream statistics were not merged"
argument_list|,
literal|26
argument_list|,
name|read
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

