begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.auth.delegation
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
operator|.
name|delegation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3AFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
operator|.
name|RoleTestUtils
operator|.
name|probeForAssumedRoleARN
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
operator|.
name|delegation
operator|.
name|DelegationConstants
operator|.
name|DELEGATION_TOKEN_ROLE_BINDING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|auth
operator|.
name|delegation
operator|.
name|DelegationConstants
operator|.
name|ROLE_TOKEN_KIND
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|LambdaTestUtils
operator|.
name|intercept
import|;
end_import

begin_comment
comment|/**  * Subclass of the session test which checks roles; only works if  * a role ARN has been declared.  */
end_comment

begin_class
DECL|class|ITestRoleDelegationInFileystem
specifier|public
class|class
name|ITestRoleDelegationInFileystem
extends|extends
name|ITestSessionDelegationInFileystem
block|{
annotation|@
name|Override
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setup
argument_list|()
expr_stmt|;
name|probeForAssumedRoleARN
argument_list|(
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDelegationBinding ()
specifier|protected
name|String
name|getDelegationBinding
parameter_list|()
block|{
return|return
name|DELEGATION_TOKEN_ROLE_BINDING
return|;
block|}
annotation|@
name|Override
DECL|method|getTokenKind ()
specifier|public
name|Text
name|getTokenKind
parameter_list|()
block|{
return|return
name|ROLE_TOKEN_KIND
return|;
block|}
comment|/**    * This verifies that the granted credentials only access the target bucket    * by using the credentials in a new S3 client to query the AWS-owned landsat    * bucket.    * @param delegatedFS delegated FS with role-restricted access.    * @throws Exception failure    */
annotation|@
name|Override
DECL|method|verifyRestrictedPermissions (final S3AFileSystem delegatedFS)
specifier|protected
name|void
name|verifyRestrictedPermissions
parameter_list|(
specifier|final
name|S3AFileSystem
name|delegatedFS
parameter_list|)
throws|throws
name|Exception
block|{
name|intercept
argument_list|(
name|AccessDeniedException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|readLandsatMetadata
argument_list|(
name|delegatedFS
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

