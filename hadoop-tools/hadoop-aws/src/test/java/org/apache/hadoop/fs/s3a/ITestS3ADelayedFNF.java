begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|impl
operator|.
name|ChangeDetectionPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|impl
operator|.
name|ChangeDetectionPolicy
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|LambdaTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
operator|.
name|CHANGE_DETECT_MODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
operator|.
name|CHANGE_DETECT_SOURCE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
operator|.
name|METADATASTORE_AUTHORITATIVE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
operator|.
name|RETRY_INTERVAL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|Constants
operator|.
name|RETRY_LIMIT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|S3ATestUtils
operator|.
name|removeBaseAndBucketOverrides
import|;
end_import

begin_comment
comment|/**  * Tests behavior of a FileNotFound error that happens after open(), i.e. on  * the first read.  */
end_comment

begin_class
DECL|class|ITestS3ADelayedFNF
specifier|public
class|class
name|ITestS3ADelayedFNF
extends|extends
name|AbstractS3ATestBase
block|{
annotation|@
name|Override
DECL|method|createConfiguration ()
specifier|protected
name|Configuration
name|createConfiguration
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|super
operator|.
name|createConfiguration
argument_list|()
decl_stmt|;
comment|// reduce retry limit so FileNotFoundException cases timeout faster,
comment|// speeding up the tests
name|removeBaseAndBucketOverrides
argument_list|(
name|conf
argument_list|,
name|CHANGE_DETECT_SOURCE
argument_list|,
name|CHANGE_DETECT_MODE
argument_list|,
name|RETRY_LIMIT
argument_list|,
name|RETRY_INTERVAL
argument_list|,
name|METADATASTORE_AUTHORITATIVE
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|RETRY_LIMIT
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RETRY_INTERVAL
argument_list|,
literal|"1ms"
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
comment|/**    * See debugging documentation    *<a href="https://cwiki.apache.org/confluence/display/HADOOP/S3A%3A+FileNotFound+Exception+on+Read">here</a>.    * @throws Exception    */
annotation|@
name|Test
DECL|method|testNotFoundFirstRead ()
specifier|public
name|void
name|testNotFoundFirstRead
parameter_list|()
throws|throws
name|Exception
block|{
name|S3AFileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|ChangeDetectionPolicy
name|changeDetectionPolicy
init|=
name|fs
operator|.
name|getChangeDetectionPolicy
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeFalse
argument_list|(
literal|"FNF not expected when using a bucket with"
operator|+
literal|" object versioning"
argument_list|,
name|changeDetectionPolicy
operator|.
name|getSource
argument_list|()
operator|==
name|Source
operator|.
name|VersionId
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
name|path
argument_list|(
literal|"some-file"
argument_list|)
decl_stmt|;
name|ContractTestUtils
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|p
argument_list|,
literal|false
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|20
block|,
literal|21
block|,
literal|22
block|}
argument_list|)
expr_stmt|;
specifier|final
name|FSDataInputStream
name|in
init|=
name|fs
operator|.
name|open
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|assertDeleted
argument_list|(
name|p
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// This should fail since we deleted after the open.
name|LambdaTestUtils
operator|.
name|intercept
argument_list|(
name|FileNotFoundException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|in
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

