begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.commit.staging.integration
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|StringContains
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|StringEndsWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|AbstractITCommitMRJob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|CommitConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|StagingCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|StagingCommitterConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|Paths
operator|.
name|getMultipartUploadCommitsDirectory
import|;
end_import

begin_comment
comment|/**  * Full integration test for the staging committer.  */
end_comment

begin_class
DECL|class|ITStagingCommitMRJob
specifier|public
class|class
name|ITStagingCommitMRJob
extends|extends
name|AbstractITCommitMRJob
block|{
annotation|@
name|Override
DECL|method|committerName ()
specifier|protected
name|String
name|committerName
parameter_list|()
block|{
return|return
name|StagingCommitter
operator|.
name|NAME
return|;
block|}
comment|/**    * Verify that staging commit dirs are made absolute under the user's    * home directory, so, in a secure cluster, private.    */
annotation|@
name|Test
DECL|method|testStagingDirectory ()
specifier|public
name|void
name|testStagingDirectory
parameter_list|()
throws|throws
name|Throwable
block|{
name|FileSystem
name|hdfs
init|=
name|getDFS
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
name|hdfs
operator|.
name|getConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CommitConstants
operator|.
name|FS_S3A_COMMITTER_STAGING_TMP_PATH
argument_list|,
literal|"private"
argument_list|)
expr_stmt|;
name|Path
name|dir
init|=
name|getMultipartUploadCommitsDirectory
argument_list|(
name|conf
argument_list|,
literal|"UUID"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|dir
operator|.
name|toString
argument_list|()
argument_list|,
name|StringEndsWith
operator|.
name|endsWith
argument_list|(
literal|"UUID/"
operator|+
name|StagingCommitterConstants
operator|.
name|STAGING_UPLOADS
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"path unqualified"
argument_list|,
name|dir
operator|.
name|isAbsolute
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|self
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|dir
operator|.
name|toString
argument_list|()
argument_list|,
name|StringContains
operator|.
name|containsString
argument_list|(
literal|"/user/"
operator|+
name|self
operator|+
literal|"/private"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

