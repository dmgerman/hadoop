begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.s3a.commit.staging.integration
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|integration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|AbstractS3ACommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|CommitConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|CommitterFaultInjection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|CommitterFaultInjectionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|s3a
operator|.
name|commit
operator|.
name|staging
operator|.
name|DirectoryStagingCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_comment
comment|/** ITest of the low level protocol methods. */
end_comment

begin_class
DECL|class|ITestDirectoryCommitProtocol
specifier|public
class|class
name|ITestDirectoryCommitProtocol
extends|extends
name|ITestStagingCommitProtocol
block|{
annotation|@
name|Override
DECL|method|suitename ()
specifier|protected
name|String
name|suitename
parameter_list|()
block|{
return|return
literal|"ITestDirectoryCommitProtocol"
return|;
block|}
annotation|@
name|Override
DECL|method|getCommitterName ()
specifier|protected
name|String
name|getCommitterName
parameter_list|()
block|{
return|return
name|CommitConstants
operator|.
name|COMMITTER_NAME_DIRECTORY
return|;
block|}
annotation|@
name|Override
DECL|method|createCommitter ( Path outputPath, TaskAttemptContext context)
specifier|protected
name|AbstractS3ACommitter
name|createCommitter
parameter_list|(
name|Path
name|outputPath
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|DirectoryStagingCommitter
argument_list|(
name|outputPath
argument_list|,
name|context
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|createFailingCommitter ( TaskAttemptContext tContext)
specifier|public
name|AbstractS3ACommitter
name|createFailingCommitter
parameter_list|(
name|TaskAttemptContext
name|tContext
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|CommitterWithFailedThenSucceed
argument_list|(
name|getOutDir
argument_list|()
argument_list|,
name|tContext
argument_list|)
return|;
block|}
comment|/**    * The class provides a overridden implementation of commitJobInternal which    * causes the commit failed for the first time then succeed.    */
DECL|class|CommitterWithFailedThenSucceed
specifier|private
specifier|static
specifier|final
class|class
name|CommitterWithFailedThenSucceed
extends|extends
name|DirectoryStagingCommitter
implements|implements
name|CommitterFaultInjection
block|{
DECL|field|injection
specifier|private
specifier|final
name|CommitterFaultInjectionImpl
name|injection
decl_stmt|;
DECL|method|CommitterWithFailedThenSucceed (Path outputPath, TaskAttemptContext context)
name|CommitterWithFailedThenSucceed
parameter_list|(
name|Path
name|outputPath
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|outputPath
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|injection
operator|=
operator|new
name|CommitterFaultInjectionImpl
argument_list|(
name|outputPath
argument_list|,
name|context
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setupJob (JobContext context)
specifier|public
name|void
name|setupJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|setupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|setupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|abortJob (JobContext context, JobStatus.State state)
specifier|public
name|void
name|abortJob
parameter_list|(
name|JobContext
name|context
parameter_list|,
name|JobStatus
operator|.
name|State
name|state
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|abortJob
argument_list|(
name|context
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|super
operator|.
name|abortJob
argument_list|(
name|context
argument_list|,
name|state
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
DECL|method|cleanupJob (JobContext context)
specifier|public
name|void
name|cleanupJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|cleanupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|cleanupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setupTask (TaskAttemptContext context)
specifier|public
name|void
name|setupTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|setupTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|setupTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|commitTask (TaskAttemptContext context)
specifier|public
name|void
name|commitTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|commitTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|commitTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|abortTask (TaskAttemptContext context)
specifier|public
name|void
name|abortTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|abortTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|abortTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|commitJob (JobContext context)
specifier|public
name|void
name|commitJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|commitJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|super
operator|.
name|commitJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|needsTaskCommit (TaskAttemptContext context)
specifier|public
name|boolean
name|needsTaskCommit
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|injection
operator|.
name|needsTaskCommit
argument_list|(
name|context
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|needsTaskCommit
argument_list|(
name|context
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setFaults (CommitterFaultInjection.Faults... faults)
specifier|public
name|void
name|setFaults
parameter_list|(
name|CommitterFaultInjection
operator|.
name|Faults
modifier|...
name|faults
parameter_list|)
block|{
name|injection
operator|.
name|setFaults
argument_list|(
name|faults
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

