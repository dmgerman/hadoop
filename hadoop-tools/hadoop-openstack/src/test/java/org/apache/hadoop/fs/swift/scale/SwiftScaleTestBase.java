begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.swift.scale
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|swift
operator|.
name|scale
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|swift
operator|.
name|SwiftFileSystemBaseTest
import|;
end_import

begin_comment
comment|/**  * Base class for scale tests; here is where the common scale configuration  * keys are defined  */
end_comment

begin_class
DECL|class|SwiftScaleTestBase
specifier|public
class|class
name|SwiftScaleTestBase
extends|extends
name|SwiftFileSystemBaseTest
block|{
DECL|field|SCALE_TEST
specifier|public
specifier|static
specifier|final
name|String
name|SCALE_TEST
init|=
literal|"scale.test."
decl_stmt|;
DECL|field|KEY_OPERATION_COUNT
specifier|public
specifier|static
specifier|final
name|String
name|KEY_OPERATION_COUNT
init|=
name|SCALE_TEST
operator|+
literal|"operation.count"
decl_stmt|;
DECL|field|DEFAULT_OPERATION_COUNT
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_OPERATION_COUNT
init|=
literal|10
decl_stmt|;
DECL|method|getOperationCount ()
specifier|protected
name|long
name|getOperationCount
parameter_list|()
block|{
return|return
name|getConf
argument_list|()
operator|.
name|getLong
argument_list|(
name|KEY_OPERATION_COUNT
argument_list|,
name|DEFAULT_OPERATION_COUNT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

