begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.swift.http
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|swift
operator|.
name|http
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|VersionInfo
import|;
end_import

begin_comment
comment|/**  * Constants used in the Swift REST protocol,  * and in the properties used to configure the {@link SwiftRestClient}.  */
end_comment

begin_class
DECL|class|SwiftProtocolConstants
specifier|public
class|class
name|SwiftProtocolConstants
block|{
comment|/**    * Swift-specific header for authentication: {@value}    */
DECL|field|HEADER_AUTH_KEY
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_AUTH_KEY
init|=
literal|"X-Auth-Token"
decl_stmt|;
comment|/**    * Default port used by Swift for HTTP    */
DECL|field|SWIFT_HTTP_PORT
specifier|public
specifier|static
specifier|final
name|int
name|SWIFT_HTTP_PORT
init|=
literal|8080
decl_stmt|;
comment|/**    * Default port used by Swift Auth for HTTPS    */
DECL|field|SWIFT_HTTPS_PORT
specifier|public
specifier|static
specifier|final
name|int
name|SWIFT_HTTPS_PORT
init|=
literal|443
decl_stmt|;
comment|/** HTTP standard {@value} header */
DECL|field|HEADER_RANGE
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_RANGE
init|=
literal|"Range"
decl_stmt|;
comment|/** HTTP standard {@value} header */
DECL|field|HEADER_DESTINATION
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_DESTINATION
init|=
literal|"Destination"
decl_stmt|;
comment|/** HTTP standard {@value} header */
DECL|field|HEADER_LAST_MODIFIED
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_LAST_MODIFIED
init|=
literal|"Last-Modified"
decl_stmt|;
comment|/** HTTP standard {@value} header */
DECL|field|HEADER_CONTENT_LENGTH
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_CONTENT_LENGTH
init|=
literal|"Content-Length"
decl_stmt|;
comment|/** HTTP standard {@value} header */
DECL|field|HEADER_CONTENT_RANGE
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_CONTENT_RANGE
init|=
literal|"Content-Range"
decl_stmt|;
comment|/**    * Patten for range headers    */
DECL|field|SWIFT_RANGE_HEADER_FORMAT_PATTERN
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_RANGE_HEADER_FORMAT_PATTERN
init|=
literal|"bytes=%d-%d"
decl_stmt|;
comment|/**    *  section in the JSON catalog provided after auth listing the swift FS:    *  {@value}    */
DECL|field|SERVICE_CATALOG_SWIFT
specifier|public
specifier|static
specifier|final
name|String
name|SERVICE_CATALOG_SWIFT
init|=
literal|"swift"
decl_stmt|;
comment|/**    *  section in the JSON catalog provided after auth listing the cloud files;    * this is an alternate catalog entry name    *  {@value}    */
DECL|field|SERVICE_CATALOG_CLOUD_FILES
specifier|public
specifier|static
specifier|final
name|String
name|SERVICE_CATALOG_CLOUD_FILES
init|=
literal|"cloudFiles"
decl_stmt|;
comment|/**    *  section in the JSON catalog provided after auth listing the object store;    * this is an alternate catalog entry name    *  {@value}    */
DECL|field|SERVICE_CATALOG_OBJECT_STORE
specifier|public
specifier|static
specifier|final
name|String
name|SERVICE_CATALOG_OBJECT_STORE
init|=
literal|"object-store"
decl_stmt|;
comment|/**    * entry in the swift catalog defining the prefix used to talk to objects    *  {@value}    */
DECL|field|SWIFT_OBJECT_AUTH_ENDPOINT
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_OBJECT_AUTH_ENDPOINT
init|=
literal|"/object_endpoint/"
decl_stmt|;
comment|/**    * Swift-specific header: object manifest used in the final upload    * of a multipart operation: {@value}    */
DECL|field|X_OBJECT_MANIFEST
specifier|public
specifier|static
specifier|final
name|String
name|X_OBJECT_MANIFEST
init|=
literal|"X-Object-Manifest"
decl_stmt|;
comment|/**    * Swift-specific header -#of objects in a container: {@value}    */
DECL|field|X_CONTAINER_OBJECT_COUNT
specifier|public
specifier|static
specifier|final
name|String
name|X_CONTAINER_OBJECT_COUNT
init|=
literal|"X-Container-Object-Count"
decl_stmt|;
comment|/**    * Swift-specific header: no. of bytes used in a container {@value}    */
DECL|field|X_CONTAINER_BYTES_USED
specifier|public
specifier|static
specifier|final
name|String
name|X_CONTAINER_BYTES_USED
init|=
literal|"X-Container-Bytes-Used"
decl_stmt|;
comment|/**    * Header to set when requesting the latest version of a file: : {@value}    */
DECL|field|X_NEWEST
specifier|public
specifier|static
specifier|final
name|String
name|X_NEWEST
init|=
literal|"X-Newest"
decl_stmt|;
comment|/**    * throttled response sent by some endpoints.    */
DECL|field|SC_THROTTLED_498
specifier|public
specifier|static
specifier|final
name|int
name|SC_THROTTLED_498
init|=
literal|498
decl_stmt|;
comment|/**    * W3C recommended status code for throttled operations    */
DECL|field|SC_TOO_MANY_REQUESTS_429
specifier|public
specifier|static
specifier|final
name|int
name|SC_TOO_MANY_REQUESTS_429
init|=
literal|429
decl_stmt|;
DECL|field|FS_SWIFT
specifier|public
specifier|static
specifier|final
name|String
name|FS_SWIFT
init|=
literal|"fs.swift"
decl_stmt|;
comment|/**    * Prefix for all instance-specific values in the configuration: {@value}    */
DECL|field|SWIFT_SERVICE_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_SERVICE_PREFIX
init|=
name|FS_SWIFT
operator|+
literal|".service."
decl_stmt|;
comment|/**    * timeout for all connections: {@value}    */
DECL|field|SWIFT_CONNECTION_TIMEOUT
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_CONNECTION_TIMEOUT
init|=
name|FS_SWIFT
operator|+
literal|".connect.timeout"
decl_stmt|;
comment|/**    * timeout for all connections: {@value}    */
DECL|field|SWIFT_SOCKET_TIMEOUT
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_SOCKET_TIMEOUT
init|=
name|FS_SWIFT
operator|+
literal|".socket.timeout"
decl_stmt|;
comment|/**    * the default socket timeout in millis {@value}.    * This controls how long the connection waits for responses from    * servers.    */
DECL|field|DEFAULT_SOCKET_TIMEOUT
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SOCKET_TIMEOUT
init|=
literal|60000
decl_stmt|;
comment|/**    * connection retry count for all connections: {@value}    */
DECL|field|SWIFT_RETRY_COUNT
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_RETRY_COUNT
init|=
name|FS_SWIFT
operator|+
literal|".connect.retry.count"
decl_stmt|;
comment|/**    * delay in millis between bulk (delete, rename, copy operations: {@value}    */
DECL|field|SWIFT_THROTTLE_DELAY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_THROTTLE_DELAY
init|=
name|FS_SWIFT
operator|+
literal|".connect.throttle.delay"
decl_stmt|;
comment|/**    * the default throttle delay in millis {@value}    */
DECL|field|DEFAULT_THROTTLE_DELAY
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_THROTTLE_DELAY
init|=
literal|0
decl_stmt|;
comment|/**    * blocksize for all filesystems: {@value}    */
DECL|field|SWIFT_BLOCKSIZE
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_BLOCKSIZE
init|=
name|FS_SWIFT
operator|+
literal|".blocksize"
decl_stmt|;
comment|/**    * the default blocksize for filesystems in KB: {@value}    */
DECL|field|DEFAULT_SWIFT_BLOCKSIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SWIFT_BLOCKSIZE
init|=
literal|32
operator|*
literal|1024
decl_stmt|;
comment|/**    * partition size for all filesystems in KB: {@value}    */
DECL|field|SWIFT_PARTITION_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_PARTITION_SIZE
init|=
name|FS_SWIFT
operator|+
literal|".partsize"
decl_stmt|;
comment|/**    * The default partition size for uploads: {@value}    */
DECL|field|DEFAULT_SWIFT_PARTITION_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SWIFT_PARTITION_SIZE
init|=
literal|4608
operator|*
literal|1024
decl_stmt|;
comment|/**    * request size for reads in KB: {@value}    */
DECL|field|SWIFT_REQUEST_SIZE
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_REQUEST_SIZE
init|=
name|FS_SWIFT
operator|+
literal|".requestsize"
decl_stmt|;
comment|/**    * The default request size for reads: {@value}    */
DECL|field|DEFAULT_SWIFT_REQUEST_SIZE
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_SWIFT_REQUEST_SIZE
init|=
literal|64
decl_stmt|;
DECL|field|HEADER_USER_AGENT
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_USER_AGENT
init|=
literal|"User-Agent"
decl_stmt|;
comment|/**    * The user agent sent in requests.    */
DECL|field|SWIFT_USER_AGENT
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_USER_AGENT
init|=
literal|"Apache Hadoop Swift Client "
operator|+
name|VersionInfo
operator|.
name|getBuildVersion
argument_list|()
decl_stmt|;
comment|/**    * Key for passing the service name as a property -not read from the    * configuration : {@value}    */
DECL|field|DOT_SERVICE
specifier|public
specifier|static
specifier|final
name|String
name|DOT_SERVICE
init|=
literal|".SERVICE-NAME"
decl_stmt|;
comment|/**    * Key for passing the container name as a property -not read from the    * configuration : {@value}    */
DECL|field|DOT_CONTAINER
specifier|public
specifier|static
specifier|final
name|String
name|DOT_CONTAINER
init|=
literal|".CONTAINER-NAME"
decl_stmt|;
DECL|field|DOT_AUTH_URL
specifier|public
specifier|static
specifier|final
name|String
name|DOT_AUTH_URL
init|=
literal|".auth.url"
decl_stmt|;
DECL|field|DOT_TENANT
specifier|public
specifier|static
specifier|final
name|String
name|DOT_TENANT
init|=
literal|".tenant"
decl_stmt|;
DECL|field|DOT_USERNAME
specifier|public
specifier|static
specifier|final
name|String
name|DOT_USERNAME
init|=
literal|".username"
decl_stmt|;
DECL|field|DOT_PASSWORD
specifier|public
specifier|static
specifier|final
name|String
name|DOT_PASSWORD
init|=
literal|".password"
decl_stmt|;
DECL|field|DOT_HTTP_PORT
specifier|public
specifier|static
specifier|final
name|String
name|DOT_HTTP_PORT
init|=
literal|".http.port"
decl_stmt|;
DECL|field|DOT_HTTPS_PORT
specifier|public
specifier|static
specifier|final
name|String
name|DOT_HTTPS_PORT
init|=
literal|".https.port"
decl_stmt|;
DECL|field|DOT_REGION
specifier|public
specifier|static
specifier|final
name|String
name|DOT_REGION
init|=
literal|".region"
decl_stmt|;
DECL|field|DOT_PROXY_HOST
specifier|public
specifier|static
specifier|final
name|String
name|DOT_PROXY_HOST
init|=
literal|".proxy.host"
decl_stmt|;
DECL|field|DOT_PROXY_PORT
specifier|public
specifier|static
specifier|final
name|String
name|DOT_PROXY_PORT
init|=
literal|".proxy.port"
decl_stmt|;
DECL|field|DOT_LOCATION_AWARE
specifier|public
specifier|static
specifier|final
name|String
name|DOT_LOCATION_AWARE
init|=
literal|".location-aware"
decl_stmt|;
DECL|field|DOT_APIKEY
specifier|public
specifier|static
specifier|final
name|String
name|DOT_APIKEY
init|=
literal|".apikey"
decl_stmt|;
DECL|field|DOT_USE_APIKEY
specifier|public
specifier|static
specifier|final
name|String
name|DOT_USE_APIKEY
init|=
literal|".useApikey"
decl_stmt|;
comment|/**    * flag to say use public URL    */
DECL|field|DOT_PUBLIC
specifier|public
specifier|static
specifier|final
name|String
name|DOT_PUBLIC
init|=
literal|".public"
decl_stmt|;
DECL|field|SWIFT_SERVICE_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_SERVICE_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_SERVICE
decl_stmt|;
DECL|field|SWIFT_CONTAINER_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_CONTAINER_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_CONTAINER
decl_stmt|;
DECL|field|SWIFT_AUTH_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_AUTH_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_AUTH_URL
decl_stmt|;
DECL|field|SWIFT_TENANT_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_TENANT_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_TENANT
decl_stmt|;
DECL|field|SWIFT_USERNAME_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_USERNAME_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_USERNAME
decl_stmt|;
DECL|field|SWIFT_PASSWORD_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_PASSWORD_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_PASSWORD
decl_stmt|;
DECL|field|SWIFT_APIKEY_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_APIKEY_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_APIKEY
decl_stmt|;
DECL|field|SWIFT_HTTP_PORT_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_HTTP_PORT_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_HTTP_PORT
decl_stmt|;
DECL|field|SWIFT_HTTPS_PORT_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_HTTPS_PORT_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_HTTPS_PORT
decl_stmt|;
DECL|field|SWIFT_REGION_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_REGION_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_REGION
decl_stmt|;
DECL|field|SWIFT_PUBLIC_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_PUBLIC_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_PUBLIC
decl_stmt|;
DECL|field|SWIFT_USE_API_KEY_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_USE_API_KEY_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_USE_APIKEY
decl_stmt|;
DECL|field|SWIFT_LOCATION_AWARE_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_LOCATION_AWARE_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_LOCATION_AWARE
decl_stmt|;
DECL|field|SWIFT_PROXY_HOST_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_PROXY_HOST_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_PROXY_HOST
decl_stmt|;
DECL|field|SWIFT_PROXY_PORT_PROPERTY
specifier|public
specifier|static
specifier|final
name|String
name|SWIFT_PROXY_PORT_PROPERTY
init|=
name|FS_SWIFT
operator|+
name|DOT_PROXY_PORT
decl_stmt|;
DECL|field|HTTP_ROUTE_DEFAULT_PROXY
specifier|public
specifier|static
specifier|final
name|String
name|HTTP_ROUTE_DEFAULT_PROXY
init|=
literal|"http.route.default-proxy"
decl_stmt|;
comment|/**    * Topology to return when a block location is requested    */
DECL|field|TOPOLOGY_PATH
specifier|public
specifier|static
specifier|final
name|String
name|TOPOLOGY_PATH
init|=
literal|"/swift/unknown"
decl_stmt|;
comment|/**    * Block location to return when a block location is requested    */
DECL|field|BLOCK_LOCATION
specifier|public
specifier|static
specifier|final
name|String
name|BLOCK_LOCATION
init|=
literal|"/default-rack/swift"
decl_stmt|;
comment|/**    * Default number of attempts to retry a connect request: {@value}    */
DECL|field|DEFAULT_RETRY_COUNT
specifier|static
specifier|final
name|int
name|DEFAULT_RETRY_COUNT
init|=
literal|3
decl_stmt|;
comment|/**    * Default timeout in milliseconds for connection requests: {@value}    */
DECL|field|DEFAULT_CONNECT_TIMEOUT
specifier|static
specifier|final
name|int
name|DEFAULT_CONNECT_TIMEOUT
init|=
literal|15000
decl_stmt|;
block|}
end_class

end_unit

