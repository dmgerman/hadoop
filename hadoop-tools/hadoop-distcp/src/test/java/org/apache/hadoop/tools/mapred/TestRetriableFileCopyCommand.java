begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|mapred
operator|.
name|CopyMapper
operator|.
name|FileAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_class
DECL|class|TestRetriableFileCopyCommand
specifier|public
class|class
name|TestRetriableFileCopyCommand
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Test
DECL|method|testFailOnCloseError ()
specifier|public
name|void
name|testFailOnCloseError
parameter_list|()
throws|throws
name|Exception
block|{
name|Mapper
operator|.
name|Context
name|context
init|=
name|mock
argument_list|(
name|Mapper
operator|.
name|Context
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
operator|.
name|when
argument_list|(
name|context
argument_list|)
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|Exception
name|expectedEx
init|=
operator|new
name|IOException
argument_list|(
literal|"boom"
argument_list|)
decl_stmt|;
name|OutputStream
name|out
init|=
name|mock
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
name|doThrow
argument_list|(
name|expectedEx
argument_list|)
operator|.
name|when
argument_list|(
name|out
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|f
init|=
name|File
operator|.
name|createTempFile
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|f
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|FileStatus
name|stat
init|=
operator|new
name|FileStatus
argument_list|(
literal|1L
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|1024
argument_list|,
literal|0
argument_list|,
operator|new
name|Path
argument_list|(
name|f
operator|.
name|toURI
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Exception
name|actualEx
init|=
literal|null
decl_stmt|;
try|try
block|{
operator|new
name|RetriableFileCopyCommand
argument_list|(
literal|"testFailOnCloseError"
argument_list|,
name|FileAction
operator|.
name|OVERWRITE
argument_list|)
operator|.
name|copyBytes
argument_list|(
name|stat
argument_list|,
literal|0
argument_list|,
name|out
argument_list|,
literal|512
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|actualEx
operator|=
name|e
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
literal|"close didn't fail"
argument_list|,
name|actualEx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedEx
argument_list|,
name|actualEx
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

