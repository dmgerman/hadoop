begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|DistCpOptions
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NoSuchElementException
import|;
end_import

begin_class
DECL|class|TestOptionsParser
specifier|public
class|class
name|TestOptionsParser
block|{
annotation|@
name|Test
DECL|method|testParseIgnoreFailure ()
specifier|public
name|void
name|testParseIgnoreFailure
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldIgnoreFailures
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-i"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldIgnoreFailures
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseOverwrite ()
specifier|public
name|void
name|testParseOverwrite
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldOverwrite
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-overwrite"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldOverwrite
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"-overwrite"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Update and overwrite aren't allowed together"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
DECL|method|testLogPath ()
specifier|public
name|void
name|testLogPath
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|options
operator|.
name|getLogPath
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-log"
block|,
literal|"hdfs://localhost:8020/logs"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getLogPath
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
literal|"hdfs://localhost:8020/logs"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseBlokcing ()
specifier|public
name|void
name|testParseBlokcing
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldBlock
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-async"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldBlock
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParsebandwidth ()
specifier|public
name|void
name|testParsebandwidth
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getMapBandwidth
argument_list|()
argument_list|,
name|DistCpConstants
operator|.
name|DEFAULT_BANDWIDTH_MB
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-bandwidth"
block|,
literal|"11"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getMapBandwidth
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testParseNonPositiveBandwidth ()
specifier|public
name|void
name|testParseNonPositiveBandwidth
parameter_list|()
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-bandwidth"
block|,
literal|"-11"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testParseZeroBandwidth ()
specifier|public
name|void
name|testParseZeroBandwidth
parameter_list|()
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-bandwidth"
block|,
literal|"0"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseSkipCRC ()
specifier|public
name|void
name|testParseSkipCRC
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldSkipCRC
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"-skipcrccheck"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldSyncFolder
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldSkipCRC
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseAtomicCommit ()
specifier|public
name|void
name|testParseAtomicCommit
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldAtomicCommit
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldAtomicCommit
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"-update"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Atomic and sync folders were allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{ }
block|}
annotation|@
name|Test
DECL|method|testParseWorkPath ()
specifier|public
name|void
name|testParseWorkPath
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|options
operator|.
name|getAtomicWorkPath
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|options
operator|.
name|getAtomicWorkPath
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"-tmp"
block|,
literal|"hdfs://localhost:8020/work"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getAtomicWorkPath
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
literal|"hdfs://localhost:8020/work"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-tmp"
block|,
literal|"hdfs://localhost:8020/work"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"work path was allowed without -atomic switch"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
block|}
annotation|@
name|Test
DECL|method|testParseSyncFolders ()
specifier|public
name|void
name|testParseSyncFolders
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldSyncFolder
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldSyncFolder
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseDeleteMissing ()
specifier|public
name|void
name|testParseDeleteMissing
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldDeleteMissing
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"-delete"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldSyncFolder
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldDeleteMissing
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-overwrite"
block|,
literal|"-delete"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldOverwrite
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldDeleteMissing
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"-delete"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Atomic and delete folders were allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{ }
block|}
annotation|@
name|Test
DECL|method|testParseSSLConf ()
specifier|public
name|void
name|testParseSSLConf
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|options
operator|.
name|getSslConfigurationFile
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-mapredSslConf"
block|,
literal|"/tmp/ssl-client.xml"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getSslConfigurationFile
argument_list|()
argument_list|,
literal|"/tmp/ssl-client.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testParseMaps ()
specifier|public
name|void
name|testParseMaps
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getMaxMaps
argument_list|()
argument_list|,
name|DistCpConstants
operator|.
name|DEFAULT_MAPS
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-m"
block|,
literal|"1"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getMaxMaps
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-m"
block|,
literal|"0"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getMaxMaps
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-m"
block|,
literal|"hello"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Non numberic map parsed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{ }
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-mapredXslConf"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Non numberic map parsed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{ }
block|}
annotation|@
name|Test
DECL|method|testSourceListing ()
specifier|public
name|void
name|testSourceListing
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getSourceFileListing
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
literal|"hdfs://localhost:8020/source/first"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSourceListingAndSourcePath ()
specifier|public
name|void
name|testSourceListingAndSourcePath
parameter_list|()
block|{
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Both source listing& source paths allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
block|}
annotation|@
name|Test
DECL|method|testMissingSourceInfo ()
specifier|public
name|void
name|testMissingSourceInfo
parameter_list|()
block|{
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Neither source listing not source paths present"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
block|}
annotation|@
name|Test
DECL|method|testMissingTarget ()
specifier|public
name|void
name|testMissingTarget
parameter_list|()
block|{
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Missing target allowed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
block|}
annotation|@
name|Test
DECL|method|testInvalidArgs ()
specifier|public
name|void
name|testInvalidArgs
parameter_list|()
block|{
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-m"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Missing map value"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
block|}
annotation|@
name|Test
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|DistCpOptions
name|option
init|=
operator|new
name|DistCpOptions
argument_list|(
operator|new
name|Path
argument_list|(
literal|"abc"
argument_list|)
argument_list|,
operator|new
name|Path
argument_list|(
literal|"xyz"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|val
init|=
literal|"DistCpOptions{atomicCommit=false, syncFolder=false, deleteMissing=false, "
operator|+
literal|"ignoreFailures=false, maxMaps=20, sslConfigurationFile='null', copyStrategy='uniformsize', "
operator|+
literal|"sourceFileListing=abc, sourcePaths=null, targetPath=xyz, targetPathExists=true, "
operator|+
literal|"preserveRawXattrs=false}"
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|val
argument_list|,
name|option
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotSame
argument_list|(
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|toString
argument_list|()
argument_list|,
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCopyStrategy ()
specifier|public
name|void
name|testCopyStrategy
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-strategy"
block|,
literal|"dynamic"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getCopyStrategy
argument_list|()
argument_list|,
literal|"dynamic"
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getCopyStrategy
argument_list|()
argument_list|,
name|DistCpConstants
operator|.
name|UNIFORMSIZE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTargetPath ()
specifier|public
name|void
name|testTargetPath
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|options
operator|.
name|getTargetPath
argument_list|()
argument_list|,
operator|new
name|Path
argument_list|(
literal|"hdfs://localhost:8020/target/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserve ()
specifier|public
name|void
name|testPreserve
parameter_list|()
block|{
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-p"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-p"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-pbr"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-pbrgup"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-pbrgupcax"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-pc"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-p"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|Iterator
argument_list|<
name|FileAttribute
argument_list|>
name|attribIterator
init|=
name|options
operator|.
name|preserveAttributes
argument_list|()
decl_stmt|;
while|while
condition|(
name|attribIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|attribIterator
operator|.
name|next
argument_list|()
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
name|i
argument_list|,
name|DistCpOptionSwitch
operator|.
name|PRESERVE_STATUS_DEFAULT
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
try|try
block|{
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-pabcd"
block|,
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Invalid preserve attribute"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ignore
parameter_list|)
block|{}
catch|catch
parameter_list|(
name|NoSuchElementException
name|ignore
parameter_list|)
block|{}
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-f"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|preserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|preserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|options
operator|.
name|shouldPreserve
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOptionsSwitchAddToConf ()
specifier|public
name|void
name|testOptionsSwitchAddToConf
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|getConfigLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|DistCpOptionSwitch
operator|.
name|addToConf
argument_list|(
name|conf
argument_list|,
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOptionsAppendToConf ()
specifier|public
name|void
name|testOptionsAppendToConf
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|IGNORE_FAILURES
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-atomic"
block|,
literal|"-i"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|options
operator|.
name|appendToConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|IGNORE_FAILURES
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|ATOMIC_COMMIT
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|conf
operator|.
name|getInt
argument_list|(
name|DistCpOptionSwitch
operator|.
name|BANDWIDTH
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|DistCpConstants
operator|.
name|DEFAULT_BANDWIDTH_MB
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|SYNC_FOLDERS
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|DELETE_MISSING
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|DistCpOptionSwitch
operator|.
name|PRESERVE_STATUS
operator|.
name|getConfigLabel
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"-delete"
block|,
literal|"-pu"
block|,
literal|"-bandwidth"
block|,
literal|"11"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|options
operator|.
name|appendToConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|SYNC_FOLDERS
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|DELETE_MISSING
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|DistCpOptionSwitch
operator|.
name|PRESERVE_STATUS
operator|.
name|getConfigLabel
argument_list|()
argument_list|)
argument_list|,
literal|"U"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|conf
operator|.
name|getInt
argument_list|(
name|DistCpOptionSwitch
operator|.
name|BANDWIDTH
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAppendOption ()
specifier|public
name|void
name|testAppendOption
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|APPEND
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|SYNC_FOLDERS
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|DistCpOptions
name|options
init|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-update"
block|,
literal|"-append"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
decl_stmt|;
name|options
operator|.
name|appendToConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|APPEND
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|DistCpOptionSwitch
operator|.
name|SYNC_FOLDERS
operator|.
name|getConfigLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure -append is only valid when -update is specified
try|try
block|{
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-append"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Append should fail if update option is not specified"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"Append is valid only with update options"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// make sure -append is invalid when skipCrc is specified
try|try
block|{
name|options
operator|=
name|OptionsParser
operator|.
name|parse
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-append"
block|,
literal|"-update"
block|,
literal|"-skipcrccheck"
block|,
literal|"hdfs://localhost:8020/source/first"
block|,
literal|"hdfs://localhost:8020/target/"
block|}
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Append should fail if skipCrc option is specified"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"Append is disallowed when skipping CRC"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

