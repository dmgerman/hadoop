begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.util
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|INodeFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|tools
operator|.
name|ECAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|GenericTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|CopyListingFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|DistCpOptionSwitch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|DistCpOptions
operator|.
name|FileAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ToolRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Stack
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|ACCESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|DEFAULT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|GROUP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|OTHER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|USER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|ALL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|EXECUTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ_EXECUTE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
operator|.
name|READ_WRITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|namenode
operator|.
name|AclTestHelpers
operator|.
name|aclEntry
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|TestDistCpUtils
specifier|public
class|class
name|TestDistCpUtils
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestDistCpUtils
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|config
specifier|private
specifier|static
specifier|final
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
DECL|field|cluster
specifier|private
specifier|static
name|MiniDFSCluster
name|cluster
decl_stmt|;
DECL|field|fullPerm
specifier|private
specifier|static
specifier|final
name|FsPermission
name|fullPerm
init|=
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|777
argument_list|)
decl_stmt|;
DECL|field|almostFullPerm
specifier|private
specifier|static
specifier|final
name|FsPermission
name|almostFullPerm
init|=
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|666
argument_list|)
decl_stmt|;
DECL|field|noPerm
specifier|private
specifier|static
specifier|final
name|FsPermission
name|noPerm
init|=
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|create ()
specifier|public
specifier|static
name|void
name|create
parameter_list|()
throws|throws
name|IOException
block|{
name|config
operator|.
name|setBoolean
argument_list|(
name|DFSConfigKeys
operator|.
name|DFS_NAMENODE_ACLS_ENABLED_KEY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|config
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|2
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|enableErasureCodingPolicy
argument_list|(
literal|"XOR-2-1-1024k"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|destroy ()
specifier|public
specifier|static
name|void
name|destroy
parameter_list|()
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetRelativePathRoot ()
specifier|public
name|void
name|testGetRelativePathRoot
parameter_list|()
block|{
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|Path
name|child
init|=
operator|new
name|Path
argument_list|(
literal|"/a"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|getRelativePath
argument_list|(
name|root
argument_list|,
name|child
argument_list|)
argument_list|,
literal|"/a"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetRelativePath ()
specifier|public
name|void
name|testGetRelativePath
parameter_list|()
block|{
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|child
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc/xyz/file"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|getRelativePath
argument_list|(
name|root
argument_list|,
name|child
argument_list|)
argument_list|,
literal|"/xyz/file"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPackAttributes ()
specifier|public
name|void
name|testPackAttributes
parameter_list|()
block|{
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"R"
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"RB"
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"RBUC"
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"RBUGC"
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"RBUGPC"
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|add
argument_list|(
name|FileAttribute
operator|.
name|TIMES
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DistCpUtils
operator|.
name|packAttributes
argument_list|(
name|attributes
argument_list|)
argument_list|,
literal|"RBUGPCT"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUnpackAttributes ()
specifier|public
name|void
name|testUnpackAttributes
parameter_list|()
block|{
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|allOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"RCBUGPAXT"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|CHECKSUMTYPE
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|XATTR
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"BUGPT"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|TIMES
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"BUGP"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|BLOCKSIZE
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"UGP"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"UP"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|"P"
argument_list|)
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|attributes
argument_list|,
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveDefaults ()
specifier|public
name|void
name|testPreserveDefaults
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
comment|// preserve replication, block size, user, group, permission,
comment|// checksum type and timestamps
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|DistCpUtils
operator|.
name|unpackAttributes
argument_list|(
name|DistCpOptionSwitch
operator|.
name|PRESERVE_STATUS_DEFAULT
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveAclsforDefaultACL ()
specifier|public
name|void
name|testPreserveAclsforDefaultACL
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|,
name|FileAttribute
operator|.
name|PERMISSION
argument_list|,
name|FileAttribute
operator|.
name|XATTR
argument_list|,
name|FileAttribute
operator|.
name|GROUP
argument_list|,
name|FileAttribute
operator|.
name|USER
argument_list|,
name|FileAttribute
operator|.
name|REPLICATION
argument_list|,
name|FileAttribute
operator|.
name|XATTR
argument_list|,
name|FileAttribute
operator|.
name|TIMES
argument_list|)
decl_stmt|;
name|Path
name|dest
init|=
operator|new
name|Path
argument_list|(
literal|"/tmpdest"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/testsrc"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|acls
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|AclEntry
argument_list|>
name|acls1
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"user1"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|src
argument_list|,
name|acls
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dest
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dest
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dest
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dest
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|dest
argument_list|,
name|acls1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|en1
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|src
argument_list|)
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|dd2
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|dest
argument_list|)
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotEquals
argument_list|(
name|en1
argument_list|,
name|dd2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|en1
operator|=
name|srcStatus
operator|.
name|getAclEntries
argument_list|()
expr_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dest
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dest
argument_list|)
argument_list|)
decl_stmt|;
name|dd2
operator|=
name|dstStatus
operator|.
name|getAclEntries
argument_list|()
expr_stmt|;
name|en1
operator|=
name|srcStatus
operator|.
name|getAclEntries
argument_list|()
expr_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all
comment|// fields
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"getPermission"
argument_list|,
name|srcStatus
operator|.
name|getPermission
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Owner"
argument_list|,
name|srcStatus
operator|.
name|getOwner
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Group"
argument_list|,
name|srcStatus
operator|.
name|getGroup
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"AccessTime"
argument_list|,
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ModificationTime"
argument_list|,
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Replication"
argument_list|,
name|srcStatus
operator|.
name|getReplication
argument_list|()
argument_list|,
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|en1
operator|.
name|toArray
argument_list|()
argument_list|,
name|dd2
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveNothingOnDirectory ()
specifier|public
name|void
name|testPreserveNothingOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
literal|100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|100
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dstStatus
operator|.
name|getReplication
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreservePermissionOnDirectory ()
specifier|public
name|void
name|testPreservePermissionOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveGroupOnDirectory ()
specifier|public
name|void
name|testPreserveGroupOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveUserOnDirectory ()
specifier|public
name|void
name|testPreserveUserOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveReplicationOnDirectory ()
specifier|public
name|void
name|testPreserveReplicationOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replication shouldn't apply to dirs so this should still be 0 == 0
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveTimestampOnDirectory ()
specifier|public
name|void
name|testPreserveTimestampOnDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|TIMES
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/abc"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src"
argument_list|)
decl_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createDirectory
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveNothingOnFile ()
specifier|public
name|void
name|testPreserveNothingOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreservePermissionOnFile ()
specifier|public
name|void
name|testPreservePermissionOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|PERMISSION
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveGroupOnFile ()
specifier|public
name|void
name|testPreserveGroupOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|GROUP
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveUserOnFile ()
specifier|public
name|void
name|testPreserveUserOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|USER
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveReplicationOnFile ()
specifier|public
name|void
name|testPreserveReplicationOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
DECL|method|testReplFactorNotPreservedOnErasureCodedFile ()
specifier|public
name|void
name|testReplFactorNotPreservedOnErasureCodedFile
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
comment|// Case 1: Verify replication attribute not preserved when the source
comment|// file is erasure coded and the target file is replicated.
name|Path
name|srcECDir
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/srcECDir"
argument_list|)
decl_stmt|;
name|Path
name|srcECFile
init|=
operator|new
name|Path
argument_list|(
name|srcECDir
argument_list|,
literal|"srcECFile"
argument_list|)
decl_stmt|;
name|Path
name|dstReplDir
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dstReplDir"
argument_list|)
decl_stmt|;
name|Path
name|dstReplFile
init|=
operator|new
name|Path
argument_list|(
name|dstReplDir
argument_list|,
literal|"destReplFile"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|srcECDir
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dstReplDir
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
block|{
literal|"-setPolicy"
block|,
literal|"-path"
block|,
literal|"/tmp/srcECDir"
block|,
literal|"-policy"
block|,
literal|"XOR-2-1-1024k"
block|}
decl_stmt|;
name|int
name|res
init|=
name|ToolRunner
operator|.
name|run
argument_list|(
name|config
argument_list|,
operator|new
name|ECAdmin
argument_list|(
name|config
argument_list|)
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Setting EC policy should succeed!"
argument_list|,
literal|0
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|verifyReplFactorNotPreservedOnErasureCodedFile
argument_list|(
name|srcECFile
argument_list|,
literal|true
argument_list|,
name|dstReplFile
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Case 2: Verify replication attribute not preserved when the source
comment|// file is replicated and the target file is erasure coded.
name|Path
name|srcReplDir
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/srcReplDir"
argument_list|)
decl_stmt|;
name|Path
name|srcReplFile
init|=
operator|new
name|Path
argument_list|(
name|srcReplDir
argument_list|,
literal|"srcReplFile"
argument_list|)
decl_stmt|;
name|Path
name|dstECDir
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dstECDir"
argument_list|)
decl_stmt|;
name|Path
name|dstECFile
init|=
operator|new
name|Path
argument_list|(
name|dstECDir
argument_list|,
literal|"destECFile"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|srcReplDir
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dstECDir
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"-setPolicy"
block|,
literal|"-path"
block|,
literal|"/tmp/dstECDir"
block|,
literal|"-policy"
block|,
literal|"XOR-2-1-1024k"
block|}
expr_stmt|;
name|res
operator|=
name|ToolRunner
operator|.
name|run
argument_list|(
name|config
argument_list|,
operator|new
name|ECAdmin
argument_list|(
name|config
argument_list|)
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Setting EC policy should succeed!"
argument_list|,
literal|0
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|verifyReplFactorNotPreservedOnErasureCodedFile
argument_list|(
name|srcReplFile
argument_list|,
literal|false
argument_list|,
name|dstECFile
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Case 3: Verify replication attribute not altered from the default
comment|// INodeFile.DEFAULT_REPL_FOR_STRIPED_BLOCKS when both source and
comment|// target files are erasure coded.
name|verifyReplFactorNotPreservedOnErasureCodedFile
argument_list|(
name|srcECFile
argument_list|,
literal|true
argument_list|,
name|dstECFile
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|verifyReplFactorNotPreservedOnErasureCodedFile (Path srcFile, boolean isSrcEC, Path dstFile, boolean isDstEC)
specifier|private
name|void
name|verifyReplFactorNotPreservedOnErasureCodedFile
parameter_list|(
name|Path
name|srcFile
parameter_list|,
name|boolean
name|isSrcEC
parameter_list|,
name|Path
name|dstFile
parameter_list|,
name|boolean
name|isDstEC
parameter_list|)
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|srcFile
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|srcFile
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|isSrcEC
condition|)
block|{
name|assertTrue
argument_list|(
name|srcFile
operator|+
literal|"should be erasure coded!"
argument_list|,
name|srcStatus
operator|.
name|isErasureCoded
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|INodeFile
operator|.
name|DEFAULT_REPL_FOR_STRIPED_BLOCKS
argument_list|,
name|srcStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"Unexpected replication factor for "
operator|+
name|srcFile
argument_list|,
name|fs
operator|.
name|getDefaultReplication
argument_list|(
name|srcFile
argument_list|)
argument_list|,
name|srcStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|createFile
argument_list|(
name|fs
argument_list|,
name|dstFile
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dstFile
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|isDstEC
condition|)
block|{
name|assertTrue
argument_list|(
name|dstFile
operator|+
literal|"should be erasure coded!"
argument_list|,
name|dstStatus
operator|.
name|isErasureCoded
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected replication factor for erasure coded file!"
argument_list|,
name|INodeFile
operator|.
name|DEFAULT_REPL_FOR_STRIPED_BLOCKS
argument_list|,
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"Unexpected replication factor for "
operator|+
name|dstFile
argument_list|,
name|fs
operator|.
name|getDefaultReplication
argument_list|(
name|dstFile
argument_list|)
argument_list|,
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Let srcFile and dstFile differ on their FileAttribute
name|fs
operator|.
name|setPermission
argument_list|(
name|srcFile
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|srcFile
argument_list|,
literal|"ec"
argument_list|,
literal|"ec-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|srcFile
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dstFile
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dstFile
argument_list|,
literal|"normal"
argument_list|,
literal|"normal-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dstFile
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// Running preserve operations only for replication attribute
name|srcStatus
operator|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|srcFile
argument_list|)
argument_list|)
expr_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|REPLICATION
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dstFile
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dstStatus
operator|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dstFile
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Permission for "
operator|+
name|srcFile
operator|+
literal|" and "
operator|+
name|dstFile
operator|+
literal|" should not be same after preserve only for replication attr!"
argument_list|,
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"File ownership should not match!"
argument_list|,
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isDstEC
condition|)
block|{
name|assertEquals
argument_list|(
literal|"Unexpected replication factor for erasure coded file!"
argument_list|,
name|INodeFile
operator|.
name|DEFAULT_REPL_FOR_STRIPED_BLOCKS
argument_list|,
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|dstFile
operator|+
literal|" replication factor should be same as dst "
operator|+
literal|"filesystem!"
argument_list|,
name|fs
operator|.
name|getDefaultReplication
argument_list|(
name|dstFile
argument_list|)
argument_list|,
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|isSrcEC
operator|||
operator|!
name|isDstEC
condition|)
block|{
name|assertFalse
argument_list|(
name|dstFile
operator|+
literal|" replication factor should not be "
operator|+
literal|"same as "
operator|+
name|srcFile
argument_list|,
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPreserveTimestampOnFile ()
specifier|public
name|void
name|testPreserveTimestampOnFile
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|FileAttribute
operator|.
name|TIMES
argument_list|)
decl_stmt|;
name|Path
name|dst
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/dest2"
argument_list|)
decl_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|dst
argument_list|,
name|noPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|dst
argument_list|,
literal|"nobody"
argument_list|,
literal|"nobody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|dst
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|dst
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|dst
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|dstStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|dst
argument_list|)
argument_list|)
decl_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|dstStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|dstStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|dstStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveOnFileUpwardRecursion ()
specifier|public
name|void
name|testPreserveOnFileUpwardRecursion
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|allOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Remove ACL because tests run with dfs.namenode.acls.enabled false
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
expr_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|Path
name|f0
init|=
operator|new
name|Path
argument_list|(
literal|"/f0"
argument_list|)
decl_stmt|;
name|Path
name|f1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/f1"
argument_list|)
decl_stmt|;
name|Path
name|f2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/f2"
argument_list|)
decl_stmt|;
name|Path
name|d1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/"
argument_list|)
decl_stmt|;
name|Path
name|d2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f0
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f1
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|almostFullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d1
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d2
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f0
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f0
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f0
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f1
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f2
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|f2
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|triggerHeartbeats
argument_list|()
expr_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
comment|// attributes of src -> f2 ? should be yes
name|CopyListingFileStatus
name|f2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f1 ? should be no
name|CopyListingFileStatus
name|f1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f0 ? should be no
name|CopyListingFileStatus
name|f0Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f0Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d2 ? should be no
name|CopyListingFileStatus
name|d2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d2Status
operator|.
name|getAccessTime
argument_list|()
operator|==
literal|300
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d2Status
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|300
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|d2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d1 ? should be no
name|CopyListingFileStatus
name|d1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d1Status
operator|.
name|getAccessTime
argument_list|()
operator|==
literal|400
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d1Status
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|400
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|d1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveOnDirectoryUpwardRecursion ()
specifier|public
name|void
name|testPreserveOnDirectoryUpwardRecursion
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|allOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Remove ACL because tests run with dfs.namenode.acls.enabled false
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
expr_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|Path
name|f0
init|=
operator|new
name|Path
argument_list|(
literal|"/f0"
argument_list|)
decl_stmt|;
name|Path
name|f1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/f1"
argument_list|)
decl_stmt|;
name|Path
name|f2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/f2"
argument_list|)
decl_stmt|;
name|Path
name|d1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/"
argument_list|)
decl_stmt|;
name|Path
name|d2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f0
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f1
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|almostFullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d1
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d2
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f0
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f0
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f0
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f1
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f2
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|d2
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|triggerHeartbeats
argument_list|()
expr_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
comment|// attributes of src -> d2 ? should be yes
name|CopyListingFileStatus
name|d2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|d2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|d2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|!=
name|d2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d1 ? should be no
name|CopyListingFileStatus
name|d1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|d1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|d1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|!=
name|d1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f2 ? should be no
name|CopyListingFileStatus
name|f2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f1 ? should be no
name|CopyListingFileStatus
name|f1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f0 ? should be no
name|CopyListingFileStatus
name|f0Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f0Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveOnFileDownwardRecursion ()
specifier|public
name|void
name|testPreserveOnFileDownwardRecursion
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|allOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Remove ACL because tests run with dfs.namenode.acls.enabled false
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
expr_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|Path
name|f0
init|=
operator|new
name|Path
argument_list|(
literal|"/f0"
argument_list|)
decl_stmt|;
name|Path
name|f1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/f1"
argument_list|)
decl_stmt|;
name|Path
name|f2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/f2"
argument_list|)
decl_stmt|;
name|Path
name|d1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/"
argument_list|)
decl_stmt|;
name|Path
name|d2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f0
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f1
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|almostFullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d1
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d2
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f0
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f0
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f0
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f1
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f2
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|f0
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|triggerHeartbeats
argument_list|()
expr_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
comment|// attributes of src -> f0 ? should be yes
name|CopyListingFileStatus
name|f0Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f0Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f1 ? should be no
name|CopyListingFileStatus
name|f1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f2 ? should be no
name|CopyListingFileStatus
name|f2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d1 ? should be no
name|CopyListingFileStatus
name|d1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d1Status
operator|.
name|getAccessTime
argument_list|()
operator|==
literal|400
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d1Status
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|400
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|d1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d2 ? should be no
name|CopyListingFileStatus
name|d2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d2Status
operator|.
name|getAccessTime
argument_list|()
operator|==
literal|300
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|d2Status
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|300
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|d2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreserveOnDirectoryDownwardRecursion ()
specifier|public
name|void
name|testPreserveOnDirectoryDownwardRecursion
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|FileAttribute
argument_list|>
name|attributes
init|=
name|EnumSet
operator|.
name|allOf
argument_list|(
name|FileAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Remove ACL because tests run with dfs.namenode.acls.enabled false
name|attributes
operator|.
name|remove
argument_list|(
name|FileAttribute
operator|.
name|ACL
argument_list|)
expr_stmt|;
name|Path
name|src
init|=
operator|new
name|Path
argument_list|(
literal|"/tmp/src2"
argument_list|)
decl_stmt|;
name|Path
name|f0
init|=
operator|new
name|Path
argument_list|(
literal|"/f0"
argument_list|)
decl_stmt|;
name|Path
name|f1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/f1"
argument_list|)
decl_stmt|;
name|Path
name|f2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/f2"
argument_list|)
decl_stmt|;
name|Path
name|d1
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/"
argument_list|)
decl_stmt|;
name|Path
name|d2
init|=
operator|new
name|Path
argument_list|(
literal|"/d1/d2/"
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f0
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f1
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|f2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|src
argument_list|,
name|almostFullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|src
argument_list|,
literal|"somebody"
argument_list|,
literal|"somebody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|src
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|src
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|root
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|root
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|root
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|root
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d1
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|d2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|d2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|d2
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|d2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f0
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f0
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f0
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f1
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f1
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f1
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f1
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|f2
argument_list|,
name|fullPerm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|f2
argument_list|,
literal|"anybody"
argument_list|,
literal|"anybody-group"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|f2
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setReplication
argument_list|(
name|f2
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
expr_stmt|;
name|CopyListingFileStatus
name|srcStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|DistCpUtils
operator|.
name|preserve
argument_list|(
name|fs
argument_list|,
name|root
argument_list|,
name|srcStatus
argument_list|,
name|attributes
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|cluster
operator|.
name|triggerHeartbeats
argument_list|()
expr_stmt|;
comment|// FileStatus.equals only compares path field, must explicitly compare all fields
comment|// attributes of src -> root ? should be yes
name|CopyListingFileStatus
name|rootStatus
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|root
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|rootStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|rootStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|rootStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|rootStatus
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|rootStatus
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|!=
name|rootStatus
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d1 ? should be no
name|CopyListingFileStatus
name|d1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|d1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|d1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|!=
name|d1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> d2 ? should be no
name|CopyListingFileStatus
name|d2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|d2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|d2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|d2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|d2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|!=
name|d2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f0 ? should be no
name|CopyListingFileStatus
name|f0Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f0
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f0Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f0Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f0Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f1 ? should be no
name|CopyListingFileStatus
name|f1Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f1Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f1Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f1Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
comment|// attributes of src -> f2 ? should be no
name|CopyListingFileStatus
name|f2Status
init|=
operator|new
name|CopyListingFileStatus
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|f2
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getPermission
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getGroup
argument_list|()
operator|.
name|equals
argument_list|(
name|f2Status
operator|.
name|getGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getAccessTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getModificationTime
argument_list|()
operator|==
name|f2Status
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|srcStatus
operator|.
name|getReplication
argument_list|()
operator|==
name|f2Status
operator|.
name|getReplication
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCompareFileLengthsAndChecksums ()
specifier|public
name|void
name|testCompareFileLengthsAndChecksums
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|base
init|=
literal|"/tmp/verify-checksum/"
decl_stmt|;
name|long
name|srcSeed
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|dstSeed
init|=
name|srcSeed
operator|+
name|rand
operator|.
name|nextLong
argument_list|()
decl_stmt|;
name|short
name|replFactor
init|=
literal|2
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|Path
name|basePath
init|=
operator|new
name|Path
argument_list|(
name|base
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|basePath
argument_list|)
expr_stmt|;
comment|// empty lengths comparison
name|Path
name|srcWithLen0
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"srcLen0"
argument_list|)
decl_stmt|;
name|Path
name|dstWithLen0
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"dstLen0"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|srcWithLen0
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|dstWithLen0
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithLen0
argument_list|,
literal|null
argument_list|,
name|fs
argument_list|,
name|dstWithLen0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// different lengths comparison
name|Path
name|srcWithLen1
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"srcLen1"
argument_list|)
decl_stmt|;
name|Path
name|dstWithLen2
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"dstLen2"
argument_list|)
decl_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|srcWithLen1
argument_list|,
literal|1
argument_list|,
name|replFactor
argument_list|,
name|srcSeed
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|dstWithLen2
argument_list|,
literal|2
argument_list|,
name|replFactor
argument_list|,
name|srcSeed
argument_list|)
expr_stmt|;
try|try
block|{
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithLen1
argument_list|,
literal|null
argument_list|,
name|fs
argument_list|,
name|dstWithLen2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected different lengths comparison to fail!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"Mismatch in length"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// checksums matched
name|Path
name|srcWithChecksum1
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"srcChecksum1"
argument_list|)
decl_stmt|;
name|Path
name|dstWithChecksum1
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"dstChecksum1"
argument_list|)
decl_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|srcWithChecksum1
argument_list|,
literal|1024
argument_list|,
name|replFactor
argument_list|,
name|srcSeed
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|dstWithChecksum1
argument_list|,
literal|1024
argument_list|,
name|replFactor
argument_list|,
name|srcSeed
argument_list|)
expr_stmt|;
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithChecksum1
argument_list|,
literal|null
argument_list|,
name|fs
argument_list|,
name|dstWithChecksum1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithChecksum1
argument_list|,
name|fs
operator|.
name|getFileChecksum
argument_list|(
name|srcWithChecksum1
argument_list|)
argument_list|,
name|fs
argument_list|,
name|dstWithChecksum1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// checksums mismatched
name|Path
name|dstWithChecksum2
init|=
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"dstChecksum2"
argument_list|)
decl_stmt|;
name|DFSTestUtil
operator|.
name|createFile
argument_list|(
name|fs
argument_list|,
name|dstWithChecksum2
argument_list|,
literal|1024
argument_list|,
name|replFactor
argument_list|,
name|dstSeed
argument_list|)
expr_stmt|;
try|try
block|{
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithChecksum1
argument_list|,
literal|null
argument_list|,
name|fs
argument_list|,
name|dstWithChecksum2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected different checksums comparison to fail!"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|GenericTestUtils
operator|.
name|assertExceptionContains
argument_list|(
literal|"Checksum mismatch"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
comment|// checksums mismatched but skipped
name|DistCpUtils
operator|.
name|compareFileLengthsAndChecksums
argument_list|(
name|fs
argument_list|,
name|srcWithChecksum1
argument_list|,
literal|null
argument_list|,
name|fs
argument_list|,
name|dstWithChecksum2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|field|rand
specifier|private
specifier|static
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
DECL|method|createTestSetup (FileSystem fs)
specifier|public
specifier|static
name|String
name|createTestSetup
parameter_list|(
name|FileSystem
name|fs
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|createTestSetup
argument_list|(
literal|"/tmp1"
argument_list|,
name|fs
argument_list|,
name|FsPermission
operator|.
name|getDefault
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createTestSetup (FileSystem fs, FsPermission perm)
specifier|public
specifier|static
name|String
name|createTestSetup
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|FsPermission
name|perm
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|createTestSetup
argument_list|(
literal|"/tmp1"
argument_list|,
name|fs
argument_list|,
name|perm
argument_list|)
return|;
block|}
DECL|method|createTestSetup (String baseDir, FileSystem fs, FsPermission perm)
specifier|public
specifier|static
name|String
name|createTestSetup
parameter_list|(
name|String
name|baseDir
parameter_list|,
name|FileSystem
name|fs
parameter_list|,
name|FsPermission
name|perm
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|base
init|=
name|getBase
argument_list|(
name|baseDir
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world1"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world2/newworld"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world3/oldworld"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world1"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world2"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world2/newworld"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world3"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|base
operator|+
literal|"/newTest/hello/world3/oldworld"
argument_list|)
argument_list|,
name|perm
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|base
argument_list|,
literal|"/newTest/1"
argument_list|)
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|base
argument_list|,
literal|"/newTest/hello/2"
argument_list|)
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|base
argument_list|,
literal|"/newTest/hello/world3/oldworld/3"
argument_list|)
argument_list|)
expr_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|base
argument_list|,
literal|"/newTest/hello/world2/4"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|base
return|;
block|}
DECL|method|getBase (String base)
specifier|private
specifier|static
name|String
name|getBase
parameter_list|(
name|String
name|base
parameter_list|)
block|{
name|String
name|location
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|rand
operator|.
name|nextLong
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|base
operator|+
literal|"/"
operator|+
name|location
return|;
block|}
DECL|method|delete (FileSystem fs, String path)
specifier|public
specifier|static
name|void
name|delete
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|String
name|path
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|fs
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|fs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|path
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Exception encountered "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createFile (FileSystem fs, String filePath)
specifier|public
specifier|static
name|void
name|createFile
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|String
name|filePath
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|fs
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
comment|/** Creates a new, empty file at filePath and always overwrites */
DECL|method|createFile (FileSystem fs, Path filePath)
specifier|public
specifier|static
name|void
name|createFile
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|filePath
parameter_list|)
throws|throws
name|IOException
block|{
name|OutputStream
name|out
init|=
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|IOUtils
operator|.
name|closeStream
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
comment|/** Creates a new, empty directory at dirPath and always overwrites */
DECL|method|createDirectory (FileSystem fs, Path dirPath)
specifier|public
specifier|static
name|void
name|createDirectory
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|dirPath
parameter_list|)
throws|throws
name|IOException
block|{
name|fs
operator|.
name|delete
argument_list|(
name|dirPath
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|boolean
name|created
init|=
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|created
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Could not create directory "
operator|+
name|dirPath
operator|+
literal|" this might cause test failures."
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyFoldersAreInSync (FileSystem fs, String targetBase, String sourceBase)
specifier|public
specifier|static
name|void
name|verifyFoldersAreInSync
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|String
name|targetBase
parameter_list|,
name|String
name|sourceBase
parameter_list|)
throws|throws
name|IOException
block|{
name|Path
name|base
init|=
operator|new
name|Path
argument_list|(
name|targetBase
argument_list|)
decl_stmt|;
name|Stack
argument_list|<
name|Path
argument_list|>
name|stack
init|=
operator|new
name|Stack
argument_list|<>
argument_list|()
decl_stmt|;
name|stack
operator|.
name|push
argument_list|(
name|base
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|stack
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Path
name|file
init|=
name|stack
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|file
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|FileStatus
index|[]
name|fStatus
init|=
name|fs
operator|.
name|listStatus
argument_list|(
name|file
argument_list|)
decl_stmt|;
if|if
condition|(
name|fStatus
operator|==
literal|null
operator|||
name|fStatus
operator|.
name|length
operator|==
literal|0
condition|)
block|{
continue|continue;
block|}
for|for
control|(
name|FileStatus
name|status
range|:
name|fStatus
control|)
block|{
if|if
condition|(
name|status
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|stack
operator|.
name|push
argument_list|(
name|status
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Path
name|p
init|=
operator|new
name|Path
argument_list|(
name|sourceBase
operator|+
literal|"/"
operator|+
name|DistCpUtils
operator|.
name|getRelativePath
argument_list|(
operator|new
name|Path
argument_list|(
name|targetBase
argument_list|)
argument_list|,
name|status
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"path in sync with "
operator|+
name|status
operator|.
name|getPath
argument_list|()
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

