begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|MapContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|map
operator|.
name|WrappedMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
operator|.
name|FileInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|StubContext
specifier|public
class|class
name|StubContext
block|{
DECL|field|reporter
specifier|private
name|StubStatusReporter
name|reporter
init|=
operator|new
name|StubStatusReporter
argument_list|()
decl_stmt|;
DECL|field|reader
specifier|private
name|RecordReader
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|>
name|reader
decl_stmt|;
DECL|field|writer
specifier|private
name|StubInMemoryWriter
name|writer
init|=
operator|new
name|StubInMemoryWriter
argument_list|()
decl_stmt|;
specifier|private
name|Mapper
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
operator|.
name|Context
name|mapperContext
decl_stmt|;
DECL|method|StubContext (Configuration conf, RecordReader<Text, CopyListingFileStatus> reader, int taskId)
specifier|public
name|StubContext
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|RecordReader
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|>
name|reader
parameter_list|,
name|int
name|taskId
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|WrappedMapper
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
name|wrappedMapper
init|=
operator|new
name|WrappedMapper
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|()
decl_stmt|;
name|MapContextImpl
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
name|contextImpl
init|=
operator|new
name|MapContextImpl
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
argument_list|(
name|conf
argument_list|,
name|getTaskAttemptID
argument_list|(
name|taskId
argument_list|)
argument_list|,
name|reader
argument_list|,
name|writer
argument_list|,
literal|null
argument_list|,
name|reporter
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
name|this
operator|.
name|mapperContext
operator|=
name|wrappedMapper
operator|.
name|getMapContext
argument_list|(
name|contextImpl
argument_list|)
expr_stmt|;
block|}
DECL|method|getContext ()
specifier|public
name|Mapper
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|,
name|Text
argument_list|,
name|Text
argument_list|>
operator|.
name|Context
name|getContext
parameter_list|()
block|{
return|return
name|mapperContext
return|;
block|}
DECL|method|getReporter ()
specifier|public
name|StatusReporter
name|getReporter
parameter_list|()
block|{
return|return
name|reporter
return|;
block|}
DECL|method|getReader ()
specifier|public
name|RecordReader
argument_list|<
name|Text
argument_list|,
name|CopyListingFileStatus
argument_list|>
name|getReader
parameter_list|()
block|{
return|return
name|reader
return|;
block|}
DECL|method|getWriter ()
specifier|public
name|StubInMemoryWriter
name|getWriter
parameter_list|()
block|{
return|return
name|writer
return|;
block|}
DECL|class|StubStatusReporter
specifier|public
specifier|static
class|class
name|StubStatusReporter
extends|extends
name|StatusReporter
block|{
DECL|field|counters
specifier|private
name|Counters
name|counters
init|=
operator|new
name|Counters
argument_list|()
decl_stmt|;
DECL|method|StubStatusReporter ()
specifier|public
name|StubStatusReporter
parameter_list|()
block|{
comment|/*       final CounterGroup counterGroup               = new CounterGroup("FileInputFormatCounters",                                  "FileInputFormatCounters");       counterGroup.addCounter(new Counter("BYTES_READ",                                           "BYTES_READ",                                           0));       counters.addGroup(counterGroup);       */
block|}
annotation|@
name|Override
DECL|method|getCounter (Enum<?> name)
specifier|public
name|Counter
name|getCounter
parameter_list|(
name|Enum
argument_list|<
name|?
argument_list|>
name|name
parameter_list|)
block|{
return|return
name|counters
operator|.
name|findCounter
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getCounter (String group, String name)
specifier|public
name|Counter
name|getCounter
parameter_list|(
name|String
name|group
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|counters
operator|.
name|findCounter
argument_list|(
name|group
argument_list|,
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|progress ()
specifier|public
name|void
name|progress
parameter_list|()
block|{}
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
block|{
return|return
literal|0F
return|;
block|}
annotation|@
name|Override
DECL|method|setStatus (String status)
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{}
block|}
DECL|class|StubInMemoryWriter
specifier|public
specifier|static
class|class
name|StubInMemoryWriter
extends|extends
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Text
argument_list|>
block|{
DECL|field|keys
name|List
argument_list|<
name|Text
argument_list|>
name|keys
init|=
operator|new
name|ArrayList
argument_list|<
name|Text
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|values
name|List
argument_list|<
name|Text
argument_list|>
name|values
init|=
operator|new
name|ArrayList
argument_list|<
name|Text
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|write (Text key, Text value)
specifier|public
name|void
name|write
parameter_list|(
name|Text
name|key
parameter_list|,
name|Text
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|keys
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close (TaskAttemptContext context)
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
DECL|method|keys ()
specifier|public
name|List
argument_list|<
name|Text
argument_list|>
name|keys
parameter_list|()
block|{
return|return
name|keys
return|;
block|}
DECL|method|values ()
specifier|public
name|List
argument_list|<
name|Text
argument_list|>
name|values
parameter_list|()
block|{
return|return
name|values
return|;
block|}
block|}
DECL|method|getTaskAttemptID (int taskId)
specifier|public
specifier|static
name|TaskAttemptID
name|getTaskAttemptID
parameter_list|(
name|int
name|taskId
parameter_list|)
block|{
return|return
operator|new
name|TaskAttemptID
argument_list|(
literal|""
argument_list|,
literal|0
argument_list|,
name|TaskType
operator|.
name|MAP
argument_list|,
name|taskId
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

