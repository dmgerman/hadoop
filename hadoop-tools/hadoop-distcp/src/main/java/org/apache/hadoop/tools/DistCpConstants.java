begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.tools
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
package|;
end_package

begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/**  * Utility class to hold commonly used constants.  */
end_comment

begin_class
DECL|class|DistCpConstants
specifier|public
class|class
name|DistCpConstants
block|{
comment|/* Default number of maps to use for DistCp */
DECL|field|DEFAULT_MAPS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAPS
init|=
literal|20
decl_stmt|;
comment|/* Default bandwidth if none specified */
DECL|field|DEFAULT_BANDWIDTH_MB
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_BANDWIDTH_MB
init|=
literal|100
decl_stmt|;
comment|/* Default strategy for copying. Implementation looked up      from distcp-default.xml    */
DECL|field|UNIFORMSIZE
specifier|public
specifier|static
specifier|final
name|String
name|UNIFORMSIZE
init|=
literal|"uniformsize"
decl_stmt|;
comment|/**    *  Constants mapping to command line switches/input options    */
DECL|field|CONF_LABEL_ATOMIC_COPY
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_ATOMIC_COPY
init|=
literal|"distcp.atomic.copy"
decl_stmt|;
DECL|field|CONF_LABEL_WORK_PATH
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_WORK_PATH
init|=
literal|"distcp.work.path"
decl_stmt|;
DECL|field|CONF_LABEL_LOG_PATH
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_LOG_PATH
init|=
literal|"distcp.log.path"
decl_stmt|;
DECL|field|CONF_LABEL_IGNORE_FAILURES
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_IGNORE_FAILURES
init|=
literal|"distcp.ignore.failures"
decl_stmt|;
DECL|field|CONF_LABEL_PRESERVE_STATUS
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_PRESERVE_STATUS
init|=
literal|"distcp.preserve.status"
decl_stmt|;
DECL|field|CONF_LABEL_SYNC_FOLDERS
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SYNC_FOLDERS
init|=
literal|"distcp.sync.folders"
decl_stmt|;
DECL|field|CONF_LABEL_DELETE_MISSING
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_DELETE_MISSING
init|=
literal|"distcp.delete.missing.source"
decl_stmt|;
DECL|field|CONF_LABEL_SSL_CONF
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SSL_CONF
init|=
literal|"distcp.keystore.resource"
decl_stmt|;
DECL|field|CONF_LABEL_MAX_MAPS
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_MAX_MAPS
init|=
literal|"distcp.max.maps"
decl_stmt|;
DECL|field|CONF_LABEL_SOURCE_LISTING
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SOURCE_LISTING
init|=
literal|"distcp.source.listing"
decl_stmt|;
DECL|field|CONF_LABEL_COPY_STRATEGY
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_COPY_STRATEGY
init|=
literal|"distcp.copy.strategy"
decl_stmt|;
DECL|field|CONF_LABEL_SKIP_CRC
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SKIP_CRC
init|=
literal|"distcp.skip.crc"
decl_stmt|;
DECL|field|CONF_LABEL_OVERWRITE
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_OVERWRITE
init|=
literal|"distcp.copy.overwrite"
decl_stmt|;
DECL|field|CONF_LABEL_BANDWIDTH_MB
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_BANDWIDTH_MB
init|=
literal|"distcp.map.bandwidth.mb"
decl_stmt|;
comment|/* Total bytes to be copied. Updated by copylisting. Unfiltered count */
DECL|field|CONF_LABEL_TOTAL_BYTES_TO_BE_COPIED
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_TOTAL_BYTES_TO_BE_COPIED
init|=
literal|"mapred.total.bytes.expected"
decl_stmt|;
comment|/* Total number of paths to copy, includes directories. Unfiltered count */
DECL|field|CONF_LABEL_TOTAL_NUMBER_OF_RECORDS
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_TOTAL_NUMBER_OF_RECORDS
init|=
literal|"mapred.number.of.records"
decl_stmt|;
comment|/* SSL keystore resource */
DECL|field|CONF_LABEL_SSL_KEYSTORE
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SSL_KEYSTORE
init|=
literal|"dfs.https.client.keystore.resource"
decl_stmt|;
comment|/* If input is based -f<<source listing>>, file containing the src paths */
DECL|field|CONF_LABEL_LISTING_FILE_PATH
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_LISTING_FILE_PATH
init|=
literal|"distcp.listing.file.path"
decl_stmt|;
comment|/* Directory where the mapreduce job will write to. If not atomic commit, then same     as CONF_LABEL_TARGET_FINAL_PATH    */
DECL|field|CONF_LABEL_TARGET_WORK_PATH
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_TARGET_WORK_PATH
init|=
literal|"distcp.target.work.path"
decl_stmt|;
comment|/* Directory where the final data will be committed to. If not atomic commit, then same     as CONF_LABEL_TARGET_WORK_PATH    */
DECL|field|CONF_LABEL_TARGET_FINAL_PATH
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_TARGET_FINAL_PATH
init|=
literal|"distcp.target.final.path"
decl_stmt|;
comment|/**    * DistCp job id for consumers of the Disctp     */
DECL|field|CONF_LABEL_DISTCP_JOB_ID
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_DISTCP_JOB_ID
init|=
literal|"distcp.job.id"
decl_stmt|;
comment|/* Meta folder where the job's intermediate data is kept */
DECL|field|CONF_LABEL_META_FOLDER
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_META_FOLDER
init|=
literal|"distcp.meta.folder"
decl_stmt|;
comment|/**    * Conf label for SSL Trust-store location.    */
DECL|field|CONF_LABEL_SSL_TRUST_STORE_LOCATION
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SSL_TRUST_STORE_LOCATION
init|=
literal|"ssl.client.truststore.location"
decl_stmt|;
comment|/**    * Conf label for SSL Key-store location.    */
DECL|field|CONF_LABEL_SSL_KEY_STORE_LOCATION
specifier|public
specifier|static
specifier|final
name|String
name|CONF_LABEL_SSL_KEY_STORE_LOCATION
init|=
literal|"ssl.client.keystore.location"
decl_stmt|;
comment|/**    * Constants for DistCp return code to shell / consumer of ToolRunner's run    */
DECL|field|SUCCESS
specifier|public
specifier|static
specifier|final
name|int
name|SUCCESS
init|=
literal|0
decl_stmt|;
DECL|field|INVALID_ARGUMENT
specifier|public
specifier|static
specifier|final
name|int
name|INVALID_ARGUMENT
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|DUPLICATE_INPUT
specifier|public
specifier|static
specifier|final
name|int
name|DUPLICATE_INPUT
init|=
operator|-
literal|2
decl_stmt|;
DECL|field|UNKNOWN_ERROR
specifier|public
specifier|static
specifier|final
name|int
name|UNKNOWN_ERROR
init|=
operator|-
literal|999
decl_stmt|;
block|}
end_class

end_unit

