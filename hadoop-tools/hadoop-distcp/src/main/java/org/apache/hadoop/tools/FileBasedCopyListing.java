begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * FileBasedCopyListing implements the CopyListing interface,  * to create the copy-listing for DistCp,  * by iterating over all source paths mentioned in a specified input-file.  */
end_comment

begin_class
DECL|class|FileBasedCopyListing
specifier|public
class|class
name|FileBasedCopyListing
extends|extends
name|CopyListing
block|{
DECL|field|globbedListing
specifier|private
specifier|final
name|CopyListing
name|globbedListing
decl_stmt|;
comment|/**    * Constructor, to initialize base-class.    * @param configuration The input Configuration object.    * @param credentials - Credentials object on which the FS delegation tokens are cached. If null    * delegation token caching is skipped    */
DECL|method|FileBasedCopyListing (Configuration configuration, Credentials credentials)
specifier|public
name|FileBasedCopyListing
parameter_list|(
name|Configuration
name|configuration
parameter_list|,
name|Credentials
name|credentials
parameter_list|)
block|{
name|super
argument_list|(
name|configuration
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
name|globbedListing
operator|=
operator|new
name|GlobbedCopyListing
argument_list|(
name|getConf
argument_list|()
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc} */
annotation|@
name|Override
DECL|method|validatePaths (DistCpContext context)
specifier|protected
name|void
name|validatePaths
parameter_list|(
name|DistCpContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InvalidInputException
block|{   }
comment|/**    * Implementation of CopyListing::buildListing().    *   Iterates over all source paths mentioned in the input-file.    * @param pathToListFile Path on HDFS where the listing file is written.    * @param context Distcp context with associated input options.    * @throws IOException    */
annotation|@
name|Override
DECL|method|doBuildListing (Path pathToListFile, DistCpContext context)
specifier|public
name|void
name|doBuildListing
parameter_list|(
name|Path
name|pathToListFile
parameter_list|,
name|DistCpContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|context
operator|.
name|setSourcePaths
argument_list|(
name|fetchFileList
argument_list|(
name|context
operator|.
name|getSourceFileListing
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|globbedListing
operator|.
name|buildListing
argument_list|(
name|pathToListFile
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
DECL|method|fetchFileList (Path sourceListing)
specifier|private
name|List
argument_list|<
name|Path
argument_list|>
name|fetchFileList
parameter_list|(
name|Path
name|sourceListing
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|Path
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Path
argument_list|>
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|sourceListing
operator|.
name|getFileSystem
argument_list|(
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|BufferedReader
name|input
init|=
literal|null
decl_stmt|;
try|try
block|{
name|input
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|fs
operator|.
name|open
argument_list|(
name|sourceListing
argument_list|)
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|line
init|=
name|input
operator|.
name|readLine
argument_list|()
decl_stmt|;
while|while
condition|(
name|line
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|Path
argument_list|(
name|line
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|=
name|input
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeStream
argument_list|(
name|input
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
comment|/** {@inheritDoc} */
annotation|@
name|Override
DECL|method|getBytesToCopy ()
specifier|protected
name|long
name|getBytesToCopy
parameter_list|()
block|{
return|return
name|globbedListing
operator|.
name|getBytesToCopy
argument_list|()
return|;
block|}
comment|/** {@inheritDoc} */
annotation|@
name|Override
DECL|method|getNumberOfPaths ()
specifier|protected
name|long
name|getNumberOfPaths
parameter_list|()
block|{
return|return
name|globbedListing
operator|.
name|getNumberOfPaths
argument_list|()
return|;
block|}
block|}
end_class

end_unit

