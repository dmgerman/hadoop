begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.mapred
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|mapred
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|util
operator|.
name|RetriableCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Mapper
import|;
end_import

begin_comment
comment|/**  * This class extends Retriable command to implement the creation of directories  * with retries on failure.  */
end_comment

begin_class
DECL|class|RetriableDirectoryCreateCommand
specifier|public
class|class
name|RetriableDirectoryCreateCommand
extends|extends
name|RetriableCommand
block|{
comment|/**    * Constructor, taking a description of the action.    * @param description Verbose description of the copy operation.    */
DECL|method|RetriableDirectoryCreateCommand (String description)
specifier|public
name|RetriableDirectoryCreateCommand
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|super
argument_list|(
name|description
argument_list|)
expr_stmt|;
block|}
comment|/**    * Implementation of RetriableCommand::doExecute().    * This implements the actual mkdirs() functionality.    * @param arguments Argument-list to the command.    * @return Boolean. True, if the directory could be created successfully.    * @throws Exception IOException, on failure to create the directory.    */
annotation|@
name|Override
DECL|method|doExecute (Object... arguments)
specifier|protected
name|Object
name|doExecute
parameter_list|(
name|Object
modifier|...
name|arguments
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|arguments
operator|.
name|length
operator|==
literal|2
operator|:
literal|"Unexpected argument list."
assert|;
name|Path
name|target
init|=
operator|(
name|Path
operator|)
name|arguments
index|[
literal|0
index|]
decl_stmt|;
name|Mapper
operator|.
name|Context
name|context
init|=
operator|(
name|Mapper
operator|.
name|Context
operator|)
name|arguments
index|[
literal|1
index|]
decl_stmt|;
name|FileSystem
name|targetFS
init|=
name|target
operator|.
name|getFileSystem
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|targetFS
operator|.
name|mkdirs
argument_list|(
name|target
argument_list|)
return|;
block|}
block|}
end_class

end_unit

