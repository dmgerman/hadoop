begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.yarn.sls
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|sls
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|protocolrecords
operator|.
name|ReservationSubmissionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Simple support class, used to create reservation requests.  */
end_comment

begin_class
DECL|class|ReservationClientUtil
specifier|public
specifier|final
class|class
name|ReservationClientUtil
block|{
DECL|method|ReservationClientUtil ()
specifier|private
name|ReservationClientUtil
parameter_list|()
block|{
comment|//avoid instantiation
block|}
comment|/**    * Creates a request that envelopes a MR jobs, picking max number of maps and    * reducers, max durations, and max resources per container.    *    * @param reservationId the id of the reservation    * @param name the name of a reservation    * @param maxMapRes maximum resources used by any mapper    * @param numberMaps number of mappers    * @param maxMapDur maximum duration of any mapper    * @param maxRedRes maximum resources used by any reducer    * @param numberReduces number of reducers    * @param maxRedDur maximum duration of any reducer    * @param arrival start time of valid range for reservation    * @param deadline deadline for this reservation    * @param queueName queue to submit to    * @return a submission request    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"checkstyle:parameternumber"
argument_list|)
DECL|method|createMRReservation ( ReservationId reservationId, String name, Resource maxMapRes, int numberMaps, long maxMapDur, Resource maxRedRes, int numberReduces, long maxRedDur, long arrival, long deadline, String queueName)
specifier|public
specifier|static
name|ReservationSubmissionRequest
name|createMRReservation
parameter_list|(
name|ReservationId
name|reservationId
parameter_list|,
name|String
name|name
parameter_list|,
name|Resource
name|maxMapRes
parameter_list|,
name|int
name|numberMaps
parameter_list|,
name|long
name|maxMapDur
parameter_list|,
name|Resource
name|maxRedRes
parameter_list|,
name|int
name|numberReduces
parameter_list|,
name|long
name|maxRedDur
parameter_list|,
name|long
name|arrival
parameter_list|,
name|long
name|deadline
parameter_list|,
name|String
name|queueName
parameter_list|)
block|{
name|ReservationRequest
name|mapRR
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|maxMapRes
argument_list|,
name|numberMaps
argument_list|,
name|numberMaps
argument_list|,
name|maxMapDur
argument_list|)
decl_stmt|;
name|ReservationRequest
name|redRR
init|=
name|ReservationRequest
operator|.
name|newInstance
argument_list|(
name|maxRedRes
argument_list|,
name|numberReduces
argument_list|,
name|numberReduces
argument_list|,
name|maxRedDur
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ReservationRequest
argument_list|>
name|listResReq
init|=
operator|new
name|ArrayList
argument_list|<
name|ReservationRequest
argument_list|>
argument_list|()
decl_stmt|;
name|listResReq
operator|.
name|add
argument_list|(
name|mapRR
argument_list|)
expr_stmt|;
name|listResReq
operator|.
name|add
argument_list|(
name|redRR
argument_list|)
expr_stmt|;
name|ReservationRequests
name|reservationRequests
init|=
name|ReservationRequests
operator|.
name|newInstance
argument_list|(
name|listResReq
argument_list|,
name|ReservationRequestInterpreter
operator|.
name|R_ORDER_NO_GAP
argument_list|)
decl_stmt|;
name|ReservationDefinition
name|resDef
init|=
name|ReservationDefinition
operator|.
name|newInstance
argument_list|(
name|arrival
argument_list|,
name|deadline
argument_list|,
name|reservationRequests
argument_list|,
name|name
argument_list|)
decl_stmt|;
comment|// outermost request
name|ReservationSubmissionRequest
name|request
init|=
name|ReservationSubmissionRequest
operator|.
name|newInstance
argument_list|(
name|resDef
argument_list|,
name|queueName
argument_list|,
name|reservationId
argument_list|)
decl_stmt|;
return|return
name|request
return|;
block|}
block|}
end_class

end_unit

