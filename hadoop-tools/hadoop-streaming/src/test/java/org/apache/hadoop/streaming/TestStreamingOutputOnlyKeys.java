begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.streaming
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|streaming
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|TestStreamingOutputOnlyKeys
specifier|public
class|class
name|TestStreamingOutputOnlyKeys
extends|extends
name|TestStreaming
block|{
DECL|method|TestStreamingOutputOnlyKeys ()
specifier|public
name|TestStreamingOutputOnlyKeys
parameter_list|()
throws|throws
name|IOException
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOutputOnlyKeys ()
specifier|public
name|void
name|testOutputOnlyKeys
parameter_list|()
throws|throws
name|Exception
block|{
name|args
operator|.
name|add
argument_list|(
literal|"-jobconf"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"stream.reduce.input"
operator|+
literal|"=keyonlytext"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-jobconf"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"stream.reduce.output"
operator|+
literal|"=keyonlytext"
argument_list|)
expr_stmt|;
name|super
operator|.
name|testCommandLine
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getExpectedOutput ()
specifier|public
name|String
name|getExpectedOutput
parameter_list|()
block|{
return|return
name|outputExpect
operator|.
name|replaceAll
argument_list|(
literal|"\t"
argument_list|,
literal|""
argument_list|)
return|;
block|}
annotation|@
name|Override
annotation|@
name|Test
DECL|method|testCommandLine ()
specifier|public
name|void
name|testCommandLine
parameter_list|()
block|{
comment|// Do nothing
block|}
block|}
end_class

end_unit

