begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.tools
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MiniMRCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|tools
operator|.
name|GetGroups
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|GetGroupsTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Tool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_comment
comment|/**  * Tests for the MR implementation of {@link GetGroups}  */
end_comment

begin_class
annotation|@
name|Ignore
DECL|class|TestGetGroups
specifier|public
class|class
name|TestGetGroups
extends|extends
name|GetGroupsTestBase
block|{
DECL|field|cluster
specifier|private
name|MiniMRCluster
name|cluster
decl_stmt|;
annotation|@
name|Before
DECL|method|setUpJobTracker ()
specifier|public
name|void
name|setUpJobTracker
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|cluster
operator|=
operator|new
name|MiniMRCluster
argument_list|(
literal|0
argument_list|,
literal|"file:///"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|conf
operator|=
name|cluster
operator|.
name|createJobConf
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDownJobTracker ()
specifier|public
name|void
name|tearDownJobTracker
parameter_list|()
throws|throws
name|IOException
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTool (PrintStream o)
specifier|protected
name|Tool
name|getTool
parameter_list|(
name|PrintStream
name|o
parameter_list|)
block|{
return|return
operator|new
name|GetGroups
argument_list|(
name|conf
argument_list|,
name|o
argument_list|)
return|;
block|}
block|}
end_class

end_unit

