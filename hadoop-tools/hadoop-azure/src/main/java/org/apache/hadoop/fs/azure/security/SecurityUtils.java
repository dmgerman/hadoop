begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
operator|.
name|RemoteWasbAuthorizerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * Security Utils class for WASB.  */
end_comment

begin_class
DECL|class|SecurityUtils
specifier|public
specifier|final
class|class
name|SecurityUtils
block|{
DECL|method|SecurityUtils ()
specifier|private
name|SecurityUtils
parameter_list|()
block|{   }
comment|/**    * Utility method to get remote service URLs from the configuration.    * @param conf configuration object.    * @return remote service URL    * @throws UnknownHostException thrown when getting the default value.    */
DECL|method|getCredServiceUrls (Configuration conf)
specifier|public
specifier|static
name|String
name|getCredServiceUrls
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|UnknownHostException
block|{
return|return
name|conf
operator|.
name|get
argument_list|(
name|Constants
operator|.
name|KEY_CRED_SERVICE_URL
argument_list|,
name|String
operator|.
name|format
argument_list|(
literal|"http://%s:%s"
argument_list|,
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getCanonicalHostName
argument_list|()
argument_list|,
name|Constants
operator|.
name|DEFAULT_CRED_SERVICE_PORT
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * Utility method to get remote Authorization service URLs from the configuration.    * @param conf Configuration object.    * @return remote Authorization server URL    * @throws UnknownHostException thrown when getting the default value.    */
DECL|method|getRemoteAuthServiceUrls (Configuration conf)
specifier|public
specifier|static
name|String
name|getRemoteAuthServiceUrls
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|UnknownHostException
block|{
return|return
name|conf
operator|.
name|get
argument_list|(
name|RemoteWasbAuthorizerImpl
operator|.
name|KEY_REMOTE_AUTH_SERVICE_URL
argument_list|,
name|String
operator|.
name|format
argument_list|(
literal|"http://%s:%s"
argument_list|,
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getCanonicalHostName
argument_list|()
argument_list|,
name|Constants
operator|.
name|DEFAULT_CRED_SERVICE_PORT
argument_list|)
argument_list|)
return|;
block|}
comment|/**    * Utility method to get delegation token from the UGI credentials.    * @return delegation token    * @throws IOException thrown when getting the current user.    */
DECL|method|getDelegationTokenFromCredentials ()
specifier|public
specifier|static
name|String
name|getDelegationTokenFromCredentials
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|delegationToken
init|=
literal|null
decl_stmt|;
name|Iterator
argument_list|<
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
argument_list|>
name|tokenIterator
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getCredentials
argument_list|()
operator|.
name|getAllTokens
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|tokenIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|iteratedToken
init|=
name|tokenIterator
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|iteratedToken
operator|.
name|getKind
argument_list|()
operator|.
name|equals
argument_list|(
name|WasbDelegationTokenIdentifier
operator|.
name|TOKEN_KIND
argument_list|)
condition|)
block|{
name|delegationToken
operator|=
name|iteratedToken
operator|.
name|encodeToUrlString
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|delegationToken
return|;
block|}
block|}
end_class

end_unit

