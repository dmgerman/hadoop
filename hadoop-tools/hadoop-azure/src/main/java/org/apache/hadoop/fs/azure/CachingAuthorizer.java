begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilder
import|;
end_import

begin_comment
comment|/**  * Class that provides caching for Authorize and getSasUri calls  * @param<K> -  The cache key type  * @param<V> - The cached value type  */
end_comment

begin_class
DECL|class|CachingAuthorizer
specifier|public
class|class
name|CachingAuthorizer
parameter_list|<
name|K
parameter_list|,
name|V
parameter_list|>
block|{
DECL|field|LOG
specifier|public
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CachingAuthorizer
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|cache
specifier|private
name|Cache
argument_list|<
name|K
argument_list|,
name|V
argument_list|>
name|cache
decl_stmt|;
DECL|field|isEnabled
specifier|private
name|boolean
name|isEnabled
init|=
literal|false
decl_stmt|;
DECL|field|cacheEntryExpiryPeriodInMinutes
specifier|private
name|long
name|cacheEntryExpiryPeriodInMinutes
decl_stmt|;
DECL|field|label
specifier|private
name|String
name|label
decl_stmt|;
DECL|field|KEY_AUTH_SERVICE_CACHING_ENABLE
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTH_SERVICE_CACHING_ENABLE
init|=
literal|"fs.azure.authorization.caching.enable"
decl_stmt|;
DECL|field|KEY_AUTH_SERVICE_CACHING_ENABLE_DEFAULT
specifier|public
specifier|static
specifier|final
name|boolean
name|KEY_AUTH_SERVICE_CACHING_ENABLE_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES
specifier|public
specifier|static
specifier|final
name|String
name|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES
init|=
literal|"fs.azure.authorization.caching.maxentries"
decl_stmt|;
DECL|field|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES_DEFAULT
specifier|public
specifier|static
specifier|final
name|int
name|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES_DEFAULT
init|=
literal|512
decl_stmt|;
DECL|method|CachingAuthorizer (long ttlInMinutes, String label)
specifier|public
name|CachingAuthorizer
parameter_list|(
name|long
name|ttlInMinutes
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|cacheEntryExpiryPeriodInMinutes
operator|=
name|ttlInMinutes
expr_stmt|;
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
if|if
condition|(
name|cacheEntryExpiryPeriodInMinutes
operator|<=
literal|0
condition|)
block|{
name|isEnabled
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|init (Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|isEnabled
operator|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|KEY_AUTH_SERVICE_CACHING_ENABLE
argument_list|,
name|KEY_AUTH_SERVICE_CACHING_ENABLE_DEFAULT
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"{} : Initializing CachingAuthorizer instance"
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|cache
operator|=
name|CacheBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumSize
argument_list|(
name|conf
operator|.
name|getInt
argument_list|(
name|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES
argument_list|,
name|KEY_AUTH_SERVICE_CACHING_MAX_ENTRIES_DEFAULT
argument_list|)
argument_list|)
operator|.
name|expireAfterWrite
argument_list|(
name|cacheEntryExpiryPeriodInMinutes
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * @param key - Cache key    * @return null on cache-miss. true/false on cache-hit    */
DECL|method|get (K key)
specifier|public
name|V
name|get
parameter_list|(
name|K
name|key
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isEnabled
condition|)
block|{
return|return
literal|null
return|;
block|}
name|V
name|result
init|=
name|cache
operator|.
name|getIfPresent
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"{}: CACHE MISS: {}"
argument_list|,
name|label
argument_list|,
name|key
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"{}: CACHE HIT: {}, {}"
argument_list|,
name|label
argument_list|,
name|key
operator|.
name|toString
argument_list|()
argument_list|,
name|result
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
DECL|method|put (K key, V value)
specifier|public
name|void
name|put
parameter_list|(
name|K
name|key
parameter_list|,
name|V
name|value
parameter_list|)
block|{
if|if
condition|(
name|isEnabled
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"{}: CACHE PUT: {}, {}"
argument_list|,
name|label
argument_list|,
name|key
operator|.
name|toString
argument_list|()
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|clear ()
specifier|public
name|void
name|clear
parameter_list|()
block|{
if|if
condition|(
name|isEnabled
condition|)
block|{
name|cache
operator|.
name|invalidateAll
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

begin_comment
comment|/**  * POJO representing the cache key for authorization calls  */
end_comment

begin_class
DECL|class|CachedAuthorizerEntry
class|class
name|CachedAuthorizerEntry
block|{
DECL|field|path
specifier|private
name|String
name|path
decl_stmt|;
DECL|field|accessType
specifier|private
name|String
name|accessType
decl_stmt|;
DECL|field|owner
specifier|private
name|String
name|owner
decl_stmt|;
DECL|method|CachedAuthorizerEntry (String path, String accessType, String owner)
name|CachedAuthorizerEntry
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|accessType
parameter_list|,
name|String
name|owner
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|accessType
operator|=
name|accessType
expr_stmt|;
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
block|}
DECL|method|getPath ()
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
DECL|method|getAccessType ()
specifier|public
name|String
name|getAccessType
parameter_list|()
block|{
return|return
name|accessType
return|;
block|}
DECL|method|getOwner ()
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|CachedAuthorizerEntry
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|CachedAuthorizerEntry
name|c
init|=
operator|(
name|CachedAuthorizerEntry
operator|)
name|o
decl_stmt|;
return|return
name|this
operator|.
name|getPath
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getPath
argument_list|()
argument_list|)
operator|&&
name|this
operator|.
name|getAccessType
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getAccessType
argument_list|()
argument_list|)
operator|&&
name|this
operator|.
name|getOwner
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getOwner
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|this
operator|.
name|toString
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|path
operator|+
literal|":"
operator|+
name|accessType
operator|+
literal|":"
operator|+
name|owner
return|;
block|}
block|}
end_class

begin_comment
comment|/**  * POJO representing the cache key for sas-key calls  */
end_comment

begin_class
DECL|class|CachedSASKeyEntry
class|class
name|CachedSASKeyEntry
block|{
DECL|field|storageAccount
specifier|private
name|String
name|storageAccount
decl_stmt|;
DECL|field|container
specifier|private
name|String
name|container
decl_stmt|;
DECL|field|path
specifier|private
name|String
name|path
decl_stmt|;
DECL|method|CachedSASKeyEntry (String storageAccount, String container, String path)
name|CachedSASKeyEntry
parameter_list|(
name|String
name|storageAccount
parameter_list|,
name|String
name|container
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|storageAccount
operator|=
name|storageAccount
expr_stmt|;
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
DECL|method|getStorageAccount ()
specifier|public
name|String
name|getStorageAccount
parameter_list|()
block|{
return|return
name|storageAccount
return|;
block|}
DECL|method|getContainer ()
specifier|public
name|String
name|getContainer
parameter_list|()
block|{
return|return
name|container
return|;
block|}
DECL|method|getPath ()
specifier|public
name|String
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|CachedSASKeyEntry
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|CachedSASKeyEntry
name|c
init|=
operator|(
name|CachedSASKeyEntry
operator|)
name|o
decl_stmt|;
return|return
name|this
operator|.
name|getStorageAccount
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getStorageAccount
argument_list|()
argument_list|)
operator|&&
name|this
operator|.
name|getContainer
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getContainer
argument_list|()
argument_list|)
operator|&&
name|this
operator|.
name|getPath
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getPath
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|this
operator|.
name|toString
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|storageAccount
operator|+
literal|":"
operator|+
name|container
operator|+
literal|":"
operator|+
name|path
return|;
block|}
block|}
end_class

end_unit

