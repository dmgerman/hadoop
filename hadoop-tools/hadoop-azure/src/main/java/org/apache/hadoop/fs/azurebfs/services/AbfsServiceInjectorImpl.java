begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.services
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|AbfsHttpClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|AbfsHttpService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|ConfigurationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|TracingService
import|;
end_import

begin_comment
comment|/**  * This class is responsible to configure all the services used by Azure Blob File System.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|AbfsServiceInjectorImpl
class|class
name|AbfsServiceInjectorImpl
extends|extends
name|AbstractModule
block|{
DECL|field|configuration
specifier|private
specifier|final
name|Configuration
name|configuration
decl_stmt|;
DECL|field|providers
specifier|private
specifier|final
name|Map
argument_list|<
name|Class
argument_list|,
name|Class
argument_list|>
name|providers
decl_stmt|;
DECL|field|instances
specifier|private
specifier|final
name|Map
argument_list|<
name|Class
argument_list|,
name|Object
argument_list|>
name|instances
decl_stmt|;
DECL|method|AbfsServiceInjectorImpl (Configuration configuration)
name|AbfsServiceInjectorImpl
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
name|this
operator|.
name|providers
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|instances
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|configuration
expr_stmt|;
name|this
operator|.
name|instances
operator|.
name|put
argument_list|(
name|Configuration
operator|.
name|class
argument_list|,
name|this
operator|.
name|configuration
argument_list|)
expr_stmt|;
name|this
operator|.
name|providers
operator|.
name|put
argument_list|(
name|ConfigurationService
operator|.
name|class
argument_list|,
name|ConfigurationServiceImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|providers
operator|.
name|put
argument_list|(
name|AbfsHttpService
operator|.
name|class
argument_list|,
name|AbfsHttpServiceImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|providers
operator|.
name|put
argument_list|(
name|AbfsHttpClientFactory
operator|.
name|class
argument_list|,
name|AbfsHttpClientFactoryImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|providers
operator|.
name|put
argument_list|(
name|TracingService
operator|.
name|class
argument_list|,
name|TracingServiceImpl
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure ()
specifier|protected
name|void
name|configure
parameter_list|()
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Class
argument_list|,
name|Object
argument_list|>
name|entrySet
range|:
name|this
operator|.
name|instances
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|bind
argument_list|(
name|entrySet
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|toInstance
argument_list|(
name|entrySet
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Class
argument_list|,
name|Class
argument_list|>
name|entrySet
range|:
name|this
operator|.
name|providers
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|bind
argument_list|(
name|entrySet
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|to
argument_list|(
name|entrySet
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getConfiguration ()
specifier|protected
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|this
operator|.
name|configuration
return|;
block|}
DECL|method|getProviders ()
specifier|protected
name|Map
argument_list|<
name|Class
argument_list|,
name|Class
argument_list|>
name|getProviders
parameter_list|()
block|{
return|return
name|this
operator|.
name|providers
return|;
block|}
DECL|method|getInstances ()
specifier|protected
name|Map
argument_list|<
name|Class
argument_list|,
name|Object
argument_list|>
name|getInstances
parameter_list|()
block|{
return|return
name|this
operator|.
name|instances
return|;
block|}
block|}
end_class

end_unit

