begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|AccessCondition
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|CloudStorageAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|OperationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|RetryPolicyFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|StorageCredentials
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|StorageUri
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobListingDetails
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobProperties
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobRequestOptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobDirectory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlockBlob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudPageBlob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CopyState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|DeleteSnapshotsOption
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|ListBlobItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|windowsazure
operator|.
name|storage
operator|.
name|blob
operator|.
name|PageRange
import|;
end_import

begin_comment
comment|/**  * A real implementation of the Azure interaction layer that just redirects  * calls to the Windows Azure storage SDK.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|StorageInterfaceImpl
class|class
name|StorageInterfaceImpl
extends|extends
name|StorageInterface
block|{
DECL|field|serviceClient
specifier|private
name|CloudBlobClient
name|serviceClient
decl_stmt|;
annotation|@
name|Override
DECL|method|setRetryPolicyFactory (final RetryPolicyFactory retryPolicyFactory)
specifier|public
name|void
name|setRetryPolicyFactory
parameter_list|(
specifier|final
name|RetryPolicyFactory
name|retryPolicyFactory
parameter_list|)
block|{
name|serviceClient
operator|.
name|setRetryPolicyFactory
argument_list|(
name|retryPolicyFactory
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setTimeoutInMs (int timeoutInMs)
specifier|public
name|void
name|setTimeoutInMs
parameter_list|(
name|int
name|timeoutInMs
parameter_list|)
block|{
name|serviceClient
operator|.
name|setTimeoutInMs
argument_list|(
name|timeoutInMs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createBlobClient (CloudStorageAccount account)
specifier|public
name|void
name|createBlobClient
parameter_list|(
name|CloudStorageAccount
name|account
parameter_list|)
block|{
name|serviceClient
operator|=
name|account
operator|.
name|createCloudBlobClient
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createBlobClient (URI baseUri)
specifier|public
name|void
name|createBlobClient
parameter_list|(
name|URI
name|baseUri
parameter_list|)
block|{
name|serviceClient
operator|=
operator|new
name|CloudBlobClient
argument_list|(
name|baseUri
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createBlobClient (URI baseUri, StorageCredentials credentials)
specifier|public
name|void
name|createBlobClient
parameter_list|(
name|URI
name|baseUri
parameter_list|,
name|StorageCredentials
name|credentials
parameter_list|)
block|{
name|serviceClient
operator|=
operator|new
name|CloudBlobClient
argument_list|(
name|baseUri
argument_list|,
name|credentials
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCredentials ()
specifier|public
name|StorageCredentials
name|getCredentials
parameter_list|()
block|{
return|return
name|serviceClient
operator|.
name|getCredentials
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getContainerReference (String uri)
specifier|public
name|CloudBlobContainerWrapper
name|getContainerReference
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
operator|new
name|CloudBlobContainerWrapperImpl
argument_list|(
name|serviceClient
operator|.
name|getContainerReference
argument_list|(
name|uri
argument_list|)
argument_list|)
return|;
block|}
comment|//
comment|// WrappingIterator
comment|//
comment|/**    * This iterator wraps every ListBlobItem as they come from the listBlobs()    * calls to their proper wrapping objects.    */
DECL|class|WrappingIterator
specifier|private
specifier|static
class|class
name|WrappingIterator
implements|implements
name|Iterator
argument_list|<
name|ListBlobItem
argument_list|>
block|{
DECL|field|present
specifier|private
specifier|final
name|Iterator
argument_list|<
name|ListBlobItem
argument_list|>
name|present
decl_stmt|;
DECL|method|WrappingIterator (Iterator<ListBlobItem> present)
specifier|public
name|WrappingIterator
parameter_list|(
name|Iterator
argument_list|<
name|ListBlobItem
argument_list|>
name|present
parameter_list|)
block|{
name|this
operator|.
name|present
operator|=
name|present
expr_stmt|;
block|}
DECL|method|wrap ( final Iterable<ListBlobItem> present)
specifier|public
specifier|static
name|Iterable
argument_list|<
name|ListBlobItem
argument_list|>
name|wrap
parameter_list|(
specifier|final
name|Iterable
argument_list|<
name|ListBlobItem
argument_list|>
name|present
parameter_list|)
block|{
return|return
operator|new
name|Iterable
argument_list|<
name|ListBlobItem
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|ListBlobItem
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|WrappingIterator
argument_list|(
name|present
operator|.
name|iterator
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|hasNext ()
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|present
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|next ()
specifier|public
name|ListBlobItem
name|next
parameter_list|()
block|{
name|ListBlobItem
name|unwrapped
init|=
name|present
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|unwrapped
operator|instanceof
name|CloudBlobDirectory
condition|)
block|{
return|return
operator|new
name|CloudBlobDirectoryWrapperImpl
argument_list|(
operator|(
name|CloudBlobDirectory
operator|)
name|unwrapped
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|unwrapped
operator|instanceof
name|CloudBlockBlob
condition|)
block|{
return|return
operator|new
name|CloudBlockBlobWrapperImpl
argument_list|(
operator|(
name|CloudBlockBlob
operator|)
name|unwrapped
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|unwrapped
operator|instanceof
name|CloudPageBlob
condition|)
block|{
return|return
operator|new
name|CloudPageBlobWrapperImpl
argument_list|(
operator|(
name|CloudPageBlob
operator|)
name|unwrapped
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|unwrapped
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|remove ()
specifier|public
name|void
name|remove
parameter_list|()
block|{
name|present
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
comment|//
comment|// CloudBlobDirectoryWrapperImpl
comment|//
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|CloudBlobDirectoryWrapperImpl
specifier|static
class|class
name|CloudBlobDirectoryWrapperImpl
extends|extends
name|CloudBlobDirectoryWrapper
block|{
DECL|field|directory
specifier|private
specifier|final
name|CloudBlobDirectory
name|directory
decl_stmt|;
DECL|method|CloudBlobDirectoryWrapperImpl (CloudBlobDirectory directory)
specifier|public
name|CloudBlobDirectoryWrapperImpl
parameter_list|(
name|CloudBlobDirectory
name|directory
parameter_list|)
block|{
name|this
operator|.
name|directory
operator|=
name|directory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getUri ()
specifier|public
name|URI
name|getUri
parameter_list|()
block|{
return|return
name|directory
operator|.
name|getUri
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|listBlobs (String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, BlobRequestOptions options, OperationContext opContext)
specifier|public
name|Iterable
argument_list|<
name|ListBlobItem
argument_list|>
name|listBlobs
parameter_list|(
name|String
name|prefix
parameter_list|,
name|boolean
name|useFlatBlobListing
parameter_list|,
name|EnumSet
argument_list|<
name|BlobListingDetails
argument_list|>
name|listingDetails
parameter_list|,
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
name|WrappingIterator
operator|.
name|wrap
argument_list|(
name|directory
operator|.
name|listBlobs
argument_list|(
name|prefix
argument_list|,
name|useFlatBlobListing
argument_list|,
name|listingDetails
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContainer ()
specifier|public
name|CloudBlobContainer
name|getContainer
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
name|directory
operator|.
name|getContainer
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getParent ()
specifier|public
name|CloudBlobDirectory
name|getParent
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
name|directory
operator|.
name|getParent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getStorageUri ()
specifier|public
name|StorageUri
name|getStorageUri
parameter_list|()
block|{
return|return
name|directory
operator|.
name|getStorageUri
argument_list|()
return|;
block|}
block|}
comment|//
comment|// CloudBlobContainerWrapperImpl
comment|//
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|CloudBlobContainerWrapperImpl
specifier|static
class|class
name|CloudBlobContainerWrapperImpl
extends|extends
name|CloudBlobContainerWrapper
block|{
DECL|field|container
specifier|private
specifier|final
name|CloudBlobContainer
name|container
decl_stmt|;
DECL|method|CloudBlobContainerWrapperImpl (CloudBlobContainer container)
specifier|public
name|CloudBlobContainerWrapperImpl
parameter_list|(
name|CloudBlobContainer
name|container
parameter_list|)
block|{
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|container
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|exists (OperationContext opContext)
specifier|public
name|boolean
name|exists
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
name|container
operator|.
name|exists
argument_list|(
name|AccessCondition
operator|.
name|generateEmptyCondition
argument_list|()
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|create (OperationContext opContext)
specifier|public
name|void
name|create
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|container
operator|.
name|create
argument_list|(
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMetadata ()
specifier|public
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getMetadata
parameter_list|()
block|{
return|return
name|container
operator|.
name|getMetadata
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setMetadata (HashMap<String, String> metadata)
specifier|public
name|void
name|setMetadata
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
name|container
operator|.
name|setMetadata
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|downloadAttributes (OperationContext opContext)
specifier|public
name|void
name|downloadAttributes
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|container
operator|.
name|downloadAttributes
argument_list|(
name|AccessCondition
operator|.
name|generateEmptyCondition
argument_list|()
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|uploadMetadata (OperationContext opContext)
specifier|public
name|void
name|uploadMetadata
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|container
operator|.
name|uploadMetadata
argument_list|(
name|AccessCondition
operator|.
name|generateEmptyCondition
argument_list|()
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDirectoryReference (String relativePath)
specifier|public
name|CloudBlobDirectoryWrapper
name|getDirectoryReference
parameter_list|(
name|String
name|relativePath
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
name|CloudBlobDirectory
name|dir
init|=
name|container
operator|.
name|getDirectoryReference
argument_list|(
name|relativePath
argument_list|)
decl_stmt|;
return|return
operator|new
name|CloudBlobDirectoryWrapperImpl
argument_list|(
name|dir
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getBlockBlobReference (String relativePath)
specifier|public
name|CloudBlobWrapper
name|getBlockBlobReference
parameter_list|(
name|String
name|relativePath
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
operator|new
name|CloudBlockBlobWrapperImpl
argument_list|(
name|container
operator|.
name|getBlockBlobReference
argument_list|(
name|relativePath
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getPageBlobReference (String relativePath)
specifier|public
name|CloudBlobWrapper
name|getPageBlobReference
parameter_list|(
name|String
name|relativePath
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
operator|new
name|CloudPageBlobWrapperImpl
argument_list|(
name|container
operator|.
name|getPageBlobReference
argument_list|(
name|relativePath
argument_list|)
argument_list|)
return|;
block|}
block|}
DECL|class|CloudBlobWrapperImpl
specifier|abstract
specifier|static
class|class
name|CloudBlobWrapperImpl
implements|implements
name|CloudBlobWrapper
block|{
DECL|field|blob
specifier|private
specifier|final
name|CloudBlob
name|blob
decl_stmt|;
annotation|@
name|Override
DECL|method|getBlob ()
specifier|public
name|CloudBlob
name|getBlob
parameter_list|()
block|{
return|return
name|blob
return|;
block|}
DECL|method|getUri ()
specifier|public
name|URI
name|getUri
parameter_list|()
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getUri
argument_list|()
return|;
block|}
DECL|method|CloudBlobWrapperImpl (CloudBlob blob)
specifier|protected
name|CloudBlobWrapperImpl
parameter_list|(
name|CloudBlob
name|blob
parameter_list|)
block|{
name|this
operator|.
name|blob
operator|=
name|blob
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMetadata ()
specifier|public
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getMetadata
parameter_list|()
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getMetadata
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|delete (OperationContext opContext, SelfRenewingLease lease)
specifier|public
name|void
name|delete
parameter_list|(
name|OperationContext
name|opContext
parameter_list|,
name|SelfRenewingLease
name|lease
parameter_list|)
throws|throws
name|StorageException
block|{
name|getBlob
argument_list|()
operator|.
name|delete
argument_list|(
name|DeleteSnapshotsOption
operator|.
name|NONE
argument_list|,
name|getLeaseCondition
argument_list|(
name|lease
argument_list|)
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
comment|/**      * Return and access condition for this lease, or else null if      * there's no lease.      */
DECL|method|getLeaseCondition (SelfRenewingLease lease)
specifier|private
name|AccessCondition
name|getLeaseCondition
parameter_list|(
name|SelfRenewingLease
name|lease
parameter_list|)
block|{
name|AccessCondition
name|leaseCondition
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|lease
operator|!=
literal|null
condition|)
block|{
name|leaseCondition
operator|=
name|AccessCondition
operator|.
name|generateLeaseCondition
argument_list|(
name|lease
operator|.
name|getLeaseID
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|leaseCondition
return|;
block|}
annotation|@
name|Override
DECL|method|exists (OperationContext opContext)
specifier|public
name|boolean
name|exists
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|exists
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|downloadAttributes ( OperationContext opContext)
specifier|public
name|void
name|downloadAttributes
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|getBlob
argument_list|()
operator|.
name|downloadAttributes
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getProperties ()
specifier|public
name|BlobProperties
name|getProperties
parameter_list|()
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getProperties
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|setMetadata (HashMap<String, String> metadata)
specifier|public
name|void
name|setMetadata
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|)
block|{
name|getBlob
argument_list|()
operator|.
name|setMetadata
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|openInputStream ( BlobRequestOptions options, OperationContext opContext)
specifier|public
name|InputStream
name|openInputStream
parameter_list|(
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|openInputStream
argument_list|(
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
return|;
block|}
DECL|method|openOutputStream ( BlobRequestOptions options, OperationContext opContext)
specifier|public
name|OutputStream
name|openOutputStream
parameter_list|(
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
operator|(
operator|(
name|CloudBlockBlob
operator|)
name|getBlob
argument_list|()
operator|)
operator|.
name|openOutputStream
argument_list|(
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
return|;
block|}
DECL|method|upload (InputStream sourceStream, OperationContext opContext)
specifier|public
name|void
name|upload
parameter_list|(
name|InputStream
name|sourceStream
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
throws|,
name|IOException
block|{
name|getBlob
argument_list|()
operator|.
name|upload
argument_list|(
name|sourceStream
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getContainer ()
specifier|public
name|CloudBlobContainer
name|getContainer
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getContainer
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getParent ()
specifier|public
name|CloudBlobDirectory
name|getParent
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|StorageException
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getParent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|uploadMetadata (OperationContext opContext)
specifier|public
name|void
name|uploadMetadata
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|getBlob
argument_list|()
operator|.
name|uploadMetadata
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
DECL|method|uploadProperties (OperationContext opContext, SelfRenewingLease lease)
specifier|public
name|void
name|uploadProperties
parameter_list|(
name|OperationContext
name|opContext
parameter_list|,
name|SelfRenewingLease
name|lease
parameter_list|)
throws|throws
name|StorageException
block|{
comment|// Include lease in request if lease not null.
name|getBlob
argument_list|()
operator|.
name|uploadProperties
argument_list|(
name|getLeaseCondition
argument_list|(
name|lease
argument_list|)
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setStreamMinimumReadSizeInBytes (int minimumReadSizeBytes)
specifier|public
name|void
name|setStreamMinimumReadSizeInBytes
parameter_list|(
name|int
name|minimumReadSizeBytes
parameter_list|)
block|{
name|getBlob
argument_list|()
operator|.
name|setStreamMinimumReadSizeInBytes
argument_list|(
name|minimumReadSizeBytes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setWriteBlockSizeInBytes (int writeBlockSizeBytes)
specifier|public
name|void
name|setWriteBlockSizeInBytes
parameter_list|(
name|int
name|writeBlockSizeBytes
parameter_list|)
block|{
name|getBlob
argument_list|()
operator|.
name|setStreamWriteSizeInBytes
argument_list|(
name|writeBlockSizeBytes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getStorageUri ()
specifier|public
name|StorageUri
name|getStorageUri
parameter_list|()
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getStorageUri
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCopyState ()
specifier|public
name|CopyState
name|getCopyState
parameter_list|()
block|{
return|return
name|getBlob
argument_list|()
operator|.
name|getCopyState
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|startCopyFromBlob (URI source, OperationContext opContext)
specifier|public
name|void
name|startCopyFromBlob
parameter_list|(
name|URI
name|source
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
throws|,
name|URISyntaxException
block|{
name|getBlob
argument_list|()
operator|.
name|startCopyFromBlob
argument_list|(
name|source
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|downloadRange (long offset, long length, OutputStream outStream, BlobRequestOptions options, OperationContext opContext)
specifier|public
name|void
name|downloadRange
parameter_list|(
name|long
name|offset
parameter_list|,
name|long
name|length
parameter_list|,
name|OutputStream
name|outStream
parameter_list|,
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
throws|,
name|IOException
block|{
name|getBlob
argument_list|()
operator|.
name|downloadRange
argument_list|(
name|offset
argument_list|,
name|length
argument_list|,
name|outStream
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|acquireLease ()
specifier|public
name|SelfRenewingLease
name|acquireLease
parameter_list|()
throws|throws
name|StorageException
block|{
return|return
operator|new
name|SelfRenewingLease
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
comment|//
comment|// CloudBlockBlobWrapperImpl
comment|//
DECL|class|CloudBlockBlobWrapperImpl
specifier|static
class|class
name|CloudBlockBlobWrapperImpl
extends|extends
name|CloudBlobWrapperImpl
implements|implements
name|CloudBlockBlobWrapper
block|{
DECL|method|CloudBlockBlobWrapperImpl (CloudBlockBlob blob)
specifier|public
name|CloudBlockBlobWrapperImpl
parameter_list|(
name|CloudBlockBlob
name|blob
parameter_list|)
block|{
name|super
argument_list|(
name|blob
argument_list|)
expr_stmt|;
block|}
DECL|method|openOutputStream ( BlobRequestOptions options, OperationContext opContext)
specifier|public
name|OutputStream
name|openOutputStream
parameter_list|(
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
operator|(
operator|(
name|CloudBlockBlob
operator|)
name|getBlob
argument_list|()
operator|)
operator|.
name|openOutputStream
argument_list|(
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
return|;
block|}
DECL|method|upload (InputStream sourceStream, OperationContext opContext)
specifier|public
name|void
name|upload
parameter_list|(
name|InputStream
name|sourceStream
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
throws|,
name|IOException
block|{
name|getBlob
argument_list|()
operator|.
name|upload
argument_list|(
name|sourceStream
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
DECL|method|uploadProperties (OperationContext opContext)
specifier|public
name|void
name|uploadProperties
parameter_list|(
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
name|getBlob
argument_list|()
operator|.
name|uploadProperties
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|CloudPageBlobWrapperImpl
specifier|static
class|class
name|CloudPageBlobWrapperImpl
extends|extends
name|CloudBlobWrapperImpl
implements|implements
name|CloudPageBlobWrapper
block|{
DECL|method|CloudPageBlobWrapperImpl (CloudPageBlob blob)
specifier|public
name|CloudPageBlobWrapperImpl
parameter_list|(
name|CloudPageBlob
name|blob
parameter_list|)
block|{
name|super
argument_list|(
name|blob
argument_list|)
expr_stmt|;
block|}
DECL|method|create (final long length, BlobRequestOptions options, OperationContext opContext)
specifier|public
name|void
name|create
parameter_list|(
specifier|final
name|long
name|length
parameter_list|,
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
operator|(
operator|(
name|CloudPageBlob
operator|)
name|getBlob
argument_list|()
operator|)
operator|.
name|create
argument_list|(
name|length
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
DECL|method|uploadPages (final InputStream sourceStream, final long offset, final long length, BlobRequestOptions options, OperationContext opContext)
specifier|public
name|void
name|uploadPages
parameter_list|(
specifier|final
name|InputStream
name|sourceStream
parameter_list|,
specifier|final
name|long
name|offset
parameter_list|,
specifier|final
name|long
name|length
parameter_list|,
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
throws|,
name|IOException
block|{
operator|(
operator|(
name|CloudPageBlob
operator|)
name|getBlob
argument_list|()
operator|)
operator|.
name|uploadPages
argument_list|(
name|sourceStream
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
expr_stmt|;
block|}
DECL|method|downloadPageRanges (BlobRequestOptions options, OperationContext opContext)
specifier|public
name|ArrayList
argument_list|<
name|PageRange
argument_list|>
name|downloadPageRanges
parameter_list|(
name|BlobRequestOptions
name|options
parameter_list|,
name|OperationContext
name|opContext
parameter_list|)
throws|throws
name|StorageException
block|{
return|return
operator|(
operator|(
name|CloudPageBlob
operator|)
name|getBlob
argument_list|()
operator|)
operator|.
name|downloadPageRanges
argument_list|(
literal|null
argument_list|,
name|options
argument_list|,
name|opContext
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

