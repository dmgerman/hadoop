begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.services
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|AbfsPerfLoggable
import|;
end_import

begin_comment
comment|/**  * {@code AbfsPerfInfo} holds information on ADLS Gen 2 API performance observed by {@code AbfsClient}. Every  * Abfs request keeps adding its information (success/failure, latency etc) to its {@code AbfsPerfInfo}'s object  * as and when it becomes available. When the request is over, the performance information is recorded while  * the {@code AutoCloseable} {@code AbfsPerfInfo} object is "closed".  */
end_comment

begin_class
DECL|class|AbfsPerfInfo
specifier|public
specifier|final
class|class
name|AbfsPerfInfo
implements|implements
name|AutoCloseable
block|{
comment|// the tracker which will be extracting perf info out of this object.
DECL|field|abfsPerfTracker
specifier|private
name|AbfsPerfTracker
name|abfsPerfTracker
decl_stmt|;
comment|// the caller name.
DECL|field|callerName
specifier|private
name|String
name|callerName
decl_stmt|;
comment|// the callee name.
DECL|field|calleeName
specifier|private
name|String
name|calleeName
decl_stmt|;
comment|// time when this tracking started.
DECL|field|trackingStart
specifier|private
name|Instant
name|trackingStart
decl_stmt|;
comment|// time when this tracking ended.
DECL|field|trackingEnd
specifier|private
name|Instant
name|trackingEnd
decl_stmt|;
comment|// whether the tracked request was successful.
DECL|field|success
specifier|private
name|boolean
name|success
decl_stmt|;
comment|// time when the aggregate operation (to which this request belongs) started.
DECL|field|aggregateStart
specifier|private
name|Instant
name|aggregateStart
decl_stmt|;
comment|// number of requests in the aggregate operation (to which this request belongs).
DECL|field|aggregateCount
specifier|private
name|long
name|aggregateCount
decl_stmt|;
comment|// result of the request.
DECL|field|res
specifier|private
name|AbfsPerfLoggable
name|res
decl_stmt|;
DECL|method|AbfsPerfInfo (AbfsPerfTracker abfsPerfTracker, String callerName, String calleeName)
specifier|public
name|AbfsPerfInfo
parameter_list|(
name|AbfsPerfTracker
name|abfsPerfTracker
parameter_list|,
name|String
name|callerName
parameter_list|,
name|String
name|calleeName
parameter_list|)
block|{
name|this
operator|.
name|callerName
operator|=
name|callerName
expr_stmt|;
name|this
operator|.
name|calleeName
operator|=
name|calleeName
expr_stmt|;
name|this
operator|.
name|abfsPerfTracker
operator|=
name|abfsPerfTracker
expr_stmt|;
name|this
operator|.
name|success
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|trackingStart
operator|=
name|abfsPerfTracker
operator|.
name|getLatencyInstant
argument_list|()
expr_stmt|;
block|}
DECL|method|registerSuccess (boolean success)
specifier|public
name|AbfsPerfInfo
name|registerSuccess
parameter_list|(
name|boolean
name|success
parameter_list|)
block|{
name|this
operator|.
name|success
operator|=
name|success
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|registerResult (AbfsPerfLoggable res)
specifier|public
name|AbfsPerfInfo
name|registerResult
parameter_list|(
name|AbfsPerfLoggable
name|res
parameter_list|)
block|{
name|this
operator|.
name|res
operator|=
name|res
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|registerAggregates (Instant aggregateStart, long aggregateCount)
specifier|public
name|AbfsPerfInfo
name|registerAggregates
parameter_list|(
name|Instant
name|aggregateStart
parameter_list|,
name|long
name|aggregateCount
parameter_list|)
block|{
name|this
operator|.
name|aggregateStart
operator|=
name|aggregateStart
expr_stmt|;
name|this
operator|.
name|aggregateCount
operator|=
name|aggregateCount
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|finishTracking ()
specifier|public
name|AbfsPerfInfo
name|finishTracking
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|trackingEnd
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|trackingEnd
operator|=
name|abfsPerfTracker
operator|.
name|getLatencyInstant
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|registerCallee (String calleeName)
specifier|public
name|AbfsPerfInfo
name|registerCallee
parameter_list|(
name|String
name|calleeName
parameter_list|)
block|{
name|this
operator|.
name|calleeName
operator|=
name|calleeName
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|abfsPerfTracker
operator|.
name|trackInfo
argument_list|(
name|this
operator|.
name|finishTracking
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getCallerName ()
specifier|public
name|String
name|getCallerName
parameter_list|()
block|{
return|return
name|callerName
return|;
block|}
empty_stmt|;
DECL|method|getCalleeName ()
specifier|public
name|String
name|getCalleeName
parameter_list|()
block|{
return|return
name|calleeName
return|;
block|}
DECL|method|getTrackingStart ()
specifier|public
name|Instant
name|getTrackingStart
parameter_list|()
block|{
return|return
name|trackingStart
return|;
block|}
DECL|method|getTrackingEnd ()
specifier|public
name|Instant
name|getTrackingEnd
parameter_list|()
block|{
return|return
name|trackingEnd
return|;
block|}
DECL|method|getSuccess ()
specifier|public
name|boolean
name|getSuccess
parameter_list|()
block|{
return|return
name|success
return|;
block|}
DECL|method|getAggregateStart ()
specifier|public
name|Instant
name|getAggregateStart
parameter_list|()
block|{
return|return
name|aggregateStart
return|;
block|}
DECL|method|getAggregateCount ()
specifier|public
name|long
name|getAggregateCount
parameter_list|()
block|{
return|return
name|aggregateCount
return|;
block|}
DECL|method|getResult ()
specifier|public
name|AbfsPerfLoggable
name|getResult
parameter_list|()
block|{
return|return
name|res
return|;
block|}
block|}
end_class

end_unit

