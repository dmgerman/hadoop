begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|InvalidKeyException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|CloudStorageAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|SharedAccessAccountPermissions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|SharedAccessAccountPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|SharedAccessAccountResourceType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|SharedAccessAccountService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageCredentialsAccountAndKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageCredentialsSharedAccessSignature
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobClient
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlockBlob
import|;
end_import

begin_comment
comment|/***  * Local SAS Key Generation implementation. This class resides in  * the same address space as the WASB driver.  *  * This class gets typically used for testing purposes.  *  */
end_comment

begin_class
DECL|class|LocalSASKeyGeneratorImpl
specifier|public
class|class
name|LocalSASKeyGeneratorImpl
extends|extends
name|SASKeyGeneratorImpl
block|{
comment|/**    * Map to cache CloudStorageAccount instances.    */
DECL|field|storageAccountMap
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|CloudStorageAccount
argument_list|>
name|storageAccountMap
decl_stmt|;
DECL|field|cache
specifier|private
name|CachingAuthorizer
argument_list|<
name|CachedSASKeyEntry
argument_list|,
name|URI
argument_list|>
name|cache
decl_stmt|;
DECL|field|HOURS_IN_DAY
specifier|private
specifier|static
specifier|final
name|int
name|HOURS_IN_DAY
init|=
literal|24
decl_stmt|;
DECL|method|LocalSASKeyGeneratorImpl (Configuration conf)
specifier|public
name|LocalSASKeyGeneratorImpl
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|storageAccountMap
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CloudStorageAccount
argument_list|>
argument_list|()
expr_stmt|;
name|cache
operator|=
operator|new
name|CachingAuthorizer
argument_list|<>
argument_list|(
name|getSasKeyExpiryPeriod
argument_list|()
argument_list|,
literal|"SASKEY"
argument_list|)
expr_stmt|;
name|cache
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
comment|/**    * Implementation to generate SAS Key for a container    */
annotation|@
name|Override
DECL|method|getContainerSASUri (String accountName, String container)
specifier|public
name|URI
name|getContainerSASUri
parameter_list|(
name|String
name|accountName
parameter_list|,
name|String
name|container
parameter_list|)
throws|throws
name|SASKeyGenerationException
block|{
try|try
block|{
name|CachedSASKeyEntry
name|cacheKey
init|=
operator|new
name|CachedSASKeyEntry
argument_list|(
name|accountName
argument_list|,
name|container
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|URI
name|cacheResult
init|=
name|cache
operator|.
name|get
argument_list|(
name|cacheKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|cacheResult
operator|!=
literal|null
condition|)
block|{
return|return
name|cacheResult
return|;
block|}
name|CloudStorageAccount
name|account
init|=
name|getSASKeyBasedStorageAccountInstance
argument_list|(
name|accountName
argument_list|)
decl_stmt|;
name|CloudBlobClient
name|client
init|=
name|account
operator|.
name|createCloudBlobClient
argument_list|()
decl_stmt|;
name|URI
name|sasKey
init|=
name|client
operator|.
name|getCredentials
argument_list|()
operator|.
name|transformUri
argument_list|(
name|client
operator|.
name|getContainerReference
argument_list|(
name|container
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|cacheKey
argument_list|,
name|sasKey
argument_list|)
expr_stmt|;
return|return
name|sasKey
return|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|stoEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered StorageException while"
operator|+
literal|" generating SAS Key for container "
operator|+
name|container
operator|+
literal|" inside "
operator|+
literal|"storage account "
operator|+
name|accountName
argument_list|,
name|stoEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException while"
operator|+
literal|" generating SAS Key for container "
operator|+
name|container
operator|+
literal|" inside storage"
operator|+
literal|" account "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
block|}
comment|/**    * Helper method that creates a CloudStorageAccount instance based on    *  SAS key for accountName    *    * @param accountName Storage Account Name    * @return CloudStorageAccount instance created using SAS key for    *   the Storage Account.    * @throws SASKeyGenerationException    */
DECL|method|getSASKeyBasedStorageAccountInstance ( String accountName)
specifier|private
name|CloudStorageAccount
name|getSASKeyBasedStorageAccountInstance
parameter_list|(
name|String
name|accountName
parameter_list|)
throws|throws
name|SASKeyGenerationException
block|{
try|try
block|{
name|String
name|accountNameWithoutDomain
init|=
name|getAccountNameWithoutDomain
argument_list|(
name|accountName
argument_list|)
decl_stmt|;
name|CloudStorageAccount
name|account
init|=
name|getStorageAccountInstance
argument_list|(
name|accountNameWithoutDomain
argument_list|,
name|AzureNativeFileSystemStore
operator|.
name|getAccountKeyFromConfiguration
argument_list|(
name|accountName
argument_list|,
name|getConf
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|CloudStorageAccount
argument_list|(
operator|new
name|StorageCredentialsSharedAccessSignature
argument_list|(
name|account
operator|.
name|generateSharedAccessSignature
argument_list|(
name|getDefaultAccountAccessPolicy
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|,
name|account
operator|.
name|getEndpointSuffix
argument_list|()
argument_list|,
name|accountNameWithoutDomain
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|KeyProviderException
name|keyProviderEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered KeyProviderException"
operator|+
literal|" while retrieving Storage key from configuration for account "
operator|+
name|accountName
argument_list|,
name|keyProviderEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InvalidKeyException
name|invalidKeyEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encoutered InvalidKeyException "
operator|+
literal|"while generating Account level SAS key for account"
operator|+
name|accountName
argument_list|,
name|invalidKeyEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|storeEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encoutered StorageException while "
operator|+
literal|"generating Account level SAS key for account"
operator|+
name|accountName
argument_list|,
name|storeEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException for"
operator|+
literal|" account "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
block|}
comment|/**    * Implementation for generation of Relative Path Blob SAS Uri.    */
annotation|@
name|Override
DECL|method|getRelativeBlobSASUri (String accountName, String container, String relativePath)
specifier|public
name|URI
name|getRelativeBlobSASUri
parameter_list|(
name|String
name|accountName
parameter_list|,
name|String
name|container
parameter_list|,
name|String
name|relativePath
parameter_list|)
throws|throws
name|SASKeyGenerationException
block|{
name|CloudBlobContainer
name|sc
init|=
literal|null
decl_stmt|;
name|CloudBlobClient
name|client
init|=
literal|null
decl_stmt|;
name|CachedSASKeyEntry
name|cacheKey
init|=
literal|null
decl_stmt|;
try|try
block|{
name|cacheKey
operator|=
operator|new
name|CachedSASKeyEntry
argument_list|(
name|accountName
argument_list|,
name|container
argument_list|,
name|relativePath
argument_list|)
expr_stmt|;
name|URI
name|cacheResult
init|=
name|cache
operator|.
name|get
argument_list|(
name|cacheKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|cacheResult
operator|!=
literal|null
condition|)
block|{
return|return
name|cacheResult
return|;
block|}
name|CloudStorageAccount
name|account
init|=
name|getSASKeyBasedStorageAccountInstance
argument_list|(
name|accountName
argument_list|)
decl_stmt|;
name|client
operator|=
name|account
operator|.
name|createCloudBlobClient
argument_list|()
expr_stmt|;
name|sc
operator|=
name|client
operator|.
name|getContainerReference
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException "
operator|+
literal|"while getting container references for container "
operator|+
name|container
operator|+
literal|" inside storage account : "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|stoEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered StorageException while "
operator|+
literal|"getting  container references for container "
operator|+
name|container
operator|+
literal|" inside storage account : "
operator|+
name|accountName
argument_list|,
name|stoEx
argument_list|)
throw|;
block|}
name|CloudBlockBlob
name|blob
init|=
literal|null
decl_stmt|;
try|try
block|{
name|blob
operator|=
name|sc
operator|.
name|getBlockBlobReference
argument_list|(
name|relativePath
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException while "
operator|+
literal|"getting Block Blob references for container "
operator|+
name|container
operator|+
literal|" inside storage account : "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|stoEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered StorageException while "
operator|+
literal|"getting Block Blob references for container "
operator|+
name|container
operator|+
literal|" inside storage account : "
operator|+
name|accountName
argument_list|,
name|stoEx
argument_list|)
throw|;
block|}
try|try
block|{
name|URI
name|sasKey
init|=
name|client
operator|.
name|getCredentials
argument_list|()
operator|.
name|transformUri
argument_list|(
name|blob
operator|.
name|getUri
argument_list|()
argument_list|)
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
name|cacheKey
argument_list|,
name|sasKey
argument_list|)
expr_stmt|;
return|return
name|sasKey
return|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|stoEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered StorageException while "
operator|+
literal|"generating SAS key for Blob: "
operator|+
name|relativePath
operator|+
literal|" inside "
operator|+
literal|"container : "
operator|+
name|container
operator|+
literal|" in Storage Account : "
operator|+
name|accountName
argument_list|,
name|stoEx
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException "
operator|+
literal|"while generating SAS key for Blob: "
operator|+
name|relativePath
operator|+
literal|" inside "
operator|+
literal|"container: "
operator|+
name|container
operator|+
literal|" in Storage Account : "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
block|}
comment|/**    * Helper method that creates CloudStorageAccount Instance using the    * storage account key.    * @param accountName Name of the storage account    * @param accountKey Storage Account key    * @return CloudStorageAccount instance for the storage account.    * @throws SASKeyGenerationException    */
DECL|method|getStorageAccountInstance (String accountName, String accountKey)
specifier|private
name|CloudStorageAccount
name|getStorageAccountInstance
parameter_list|(
name|String
name|accountName
parameter_list|,
name|String
name|accountKey
parameter_list|)
throws|throws
name|SASKeyGenerationException
block|{
if|if
condition|(
operator|!
name|storageAccountMap
operator|.
name|containsKey
argument_list|(
name|accountName
argument_list|)
condition|)
block|{
name|CloudStorageAccount
name|account
init|=
literal|null
decl_stmt|;
try|try
block|{
name|account
operator|=
operator|new
name|CloudStorageAccount
argument_list|(
operator|new
name|StorageCredentialsAccountAndKey
argument_list|(
name|accountName
argument_list|,
name|accountKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|uriSyntaxEx
parameter_list|)
block|{
throw|throw
operator|new
name|SASKeyGenerationException
argument_list|(
literal|"Encountered URISyntaxException "
operator|+
literal|"for account "
operator|+
name|accountName
argument_list|,
name|uriSyntaxEx
argument_list|)
throw|;
block|}
name|storageAccountMap
operator|.
name|put
argument_list|(
name|accountName
argument_list|,
name|account
argument_list|)
expr_stmt|;
block|}
return|return
name|storageAccountMap
operator|.
name|get
argument_list|(
name|accountName
argument_list|)
return|;
block|}
comment|/**    * Helper method that returns the Storage account name without    * the domain name suffix.    * @param fullAccountName Storage account name with domain name suffix    * @return String    */
DECL|method|getAccountNameWithoutDomain (String fullAccountName)
specifier|private
name|String
name|getAccountNameWithoutDomain
parameter_list|(
name|String
name|fullAccountName
parameter_list|)
block|{
name|StringTokenizer
name|tokenizer
init|=
operator|new
name|StringTokenizer
argument_list|(
name|fullAccountName
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
return|return
name|tokenizer
operator|.
name|nextToken
argument_list|()
return|;
block|}
comment|/**    * Helper method to generate Access Policy for the Storage Account SAS Key    * @return SharedAccessAccountPolicy    */
DECL|method|getDefaultAccountAccessPolicy ()
specifier|private
name|SharedAccessAccountPolicy
name|getDefaultAccountAccessPolicy
parameter_list|()
block|{
name|SharedAccessAccountPolicy
name|ap
init|=
operator|new
name|SharedAccessAccountPolicy
argument_list|()
decl_stmt|;
name|Calendar
name|cal
init|=
operator|new
name|GregorianCalendar
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
decl_stmt|;
name|cal
operator|.
name|setTime
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|cal
operator|.
name|add
argument_list|(
name|Calendar
operator|.
name|HOUR
argument_list|,
operator|(
name|int
operator|)
name|getSasKeyExpiryPeriod
argument_list|()
operator|*
name|HOURS_IN_DAY
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setSharedAccessExpiryTime
argument_list|(
name|cal
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setPermissions
argument_list|(
name|getDefaultAccoutSASKeyPermissions
argument_list|()
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setResourceTypes
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|SharedAccessAccountResourceType
operator|.
name|CONTAINER
argument_list|,
name|SharedAccessAccountResourceType
operator|.
name|OBJECT
argument_list|)
argument_list|)
expr_stmt|;
name|ap
operator|.
name|setServices
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|SharedAccessAccountService
operator|.
name|BLOB
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ap
return|;
block|}
DECL|method|getDefaultAccoutSASKeyPermissions ()
specifier|private
name|EnumSet
argument_list|<
name|SharedAccessAccountPermissions
argument_list|>
name|getDefaultAccoutSASKeyPermissions
parameter_list|()
block|{
return|return
name|EnumSet
operator|.
name|of
argument_list|(
name|SharedAccessAccountPermissions
operator|.
name|ADD
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|CREATE
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|DELETE
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|LIST
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|READ
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|UPDATE
argument_list|,
name|SharedAccessAccountPermissions
operator|.
name|WRITE
argument_list|)
return|;
block|}
block|}
end_class

end_unit

