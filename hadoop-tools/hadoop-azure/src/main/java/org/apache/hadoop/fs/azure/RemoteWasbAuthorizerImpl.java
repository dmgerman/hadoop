begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|JsonParseException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonMappingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
operator|.
name|WasbRemoteCallHelper
operator|.
name|REMOTE_CALL_SUCCESS_CODE
import|;
end_import

begin_comment
comment|/**  * Class implementing WasbAuthorizerInterface using a remote  * service that implements the authorization operation. This  * class expects the url of the remote service to be passed  * via config.  */
end_comment

begin_class
DECL|class|RemoteWasbAuthorizerImpl
specifier|public
class|class
name|RemoteWasbAuthorizerImpl
implements|implements
name|WasbAuthorizerInterface
block|{
DECL|field|remoteAuthorizerServiceUrl
specifier|private
name|String
name|remoteAuthorizerServiceUrl
init|=
literal|""
decl_stmt|;
comment|/**    * Configuration parameter name expected in the Configuration object to    * provide the url of the remote service. {@value}    */
DECL|field|KEY_REMOTE_AUTH_SERVICE_URL
specifier|public
specifier|static
specifier|final
name|String
name|KEY_REMOTE_AUTH_SERVICE_URL
init|=
literal|"fs.azure.authorization.remote.service.url"
decl_stmt|;
comment|/**    * Authorization operation OP name in the remote service {@value}    */
DECL|field|CHECK_AUTHORIZATION_OP
specifier|private
specifier|static
specifier|final
name|String
name|CHECK_AUTHORIZATION_OP
init|=
literal|"CHECK_AUTHORIZATION"
decl_stmt|;
comment|/**    * Query parameter specifying the access operation type. {@value}    */
DECL|field|ACCESS_OPERATION_QUERY_PARAM_NAME
specifier|private
specifier|static
specifier|final
name|String
name|ACCESS_OPERATION_QUERY_PARAM_NAME
init|=
literal|"operation_type"
decl_stmt|;
comment|/**    * Query parameter specifying the wasb absolute path. {@value}    */
DECL|field|WASB_ABSOLUTE_PATH_QUERY_PARAM_NAME
specifier|private
specifier|static
specifier|final
name|String
name|WASB_ABSOLUTE_PATH_QUERY_PARAM_NAME
init|=
literal|"wasb_absolute_path"
decl_stmt|;
comment|/**    * Query parameter name for user info {@value}    */
DECL|field|DELEGATION_TOKEN_QUERY_PARAM_NAME
specifier|private
specifier|static
specifier|final
name|String
name|DELEGATION_TOKEN_QUERY_PARAM_NAME
init|=
literal|"delegation_token"
decl_stmt|;
DECL|field|remoteCallHelper
specifier|private
name|WasbRemoteCallHelper
name|remoteCallHelper
init|=
literal|null
decl_stmt|;
annotation|@
name|VisibleForTesting
DECL|method|updateWasbRemoteCallHelper (WasbRemoteCallHelper helper)
specifier|public
name|void
name|updateWasbRemoteCallHelper
parameter_list|(
name|WasbRemoteCallHelper
name|helper
parameter_list|)
block|{
name|this
operator|.
name|remoteCallHelper
operator|=
name|helper
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|init (Configuration conf)
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|WasbAuthorizationException
throws|,
name|IOException
block|{
name|remoteAuthorizerServiceUrl
operator|=
name|conf
operator|.
name|get
argument_list|(
name|KEY_REMOTE_AUTH_SERVICE_URL
argument_list|)
expr_stmt|;
if|if
condition|(
name|remoteAuthorizerServiceUrl
operator|==
literal|null
operator|||
name|remoteAuthorizerServiceUrl
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|WasbAuthorizationException
argument_list|(
literal|"fs.azure.authorization.remote.service.url config not set"
operator|+
literal|" in configuration."
argument_list|)
throw|;
block|}
name|this
operator|.
name|remoteCallHelper
operator|=
operator|new
name|WasbRemoteCallHelper
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|authorize (String wasbAbsolutePath, String accessType, String delegationToken)
specifier|public
name|boolean
name|authorize
parameter_list|(
name|String
name|wasbAbsolutePath
parameter_list|,
name|String
name|accessType
parameter_list|,
name|String
name|delegationToken
parameter_list|)
throws|throws
name|WasbAuthorizationException
throws|,
name|IOException
block|{
try|try
block|{
name|URIBuilder
name|uriBuilder
init|=
operator|new
name|URIBuilder
argument_list|(
name|remoteAuthorizerServiceUrl
argument_list|)
decl_stmt|;
name|uriBuilder
operator|.
name|setPath
argument_list|(
literal|"/"
operator|+
name|CHECK_AUTHORIZATION_OP
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|addParameter
argument_list|(
name|WASB_ABSOLUTE_PATH_QUERY_PARAM_NAME
argument_list|,
name|wasbAbsolutePath
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|addParameter
argument_list|(
name|ACCESS_OPERATION_QUERY_PARAM_NAME
argument_list|,
name|accessType
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|addParameter
argument_list|(
name|DELEGATION_TOKEN_QUERY_PARAM_NAME
argument_list|,
name|delegationToken
argument_list|)
expr_stmt|;
name|String
name|responseBody
init|=
name|remoteCallHelper
operator|.
name|makeRemoteGetRequest
argument_list|(
operator|new
name|HttpGet
argument_list|(
name|uriBuilder
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectMapper
name|objectMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|RemoteAuthorizerResponse
name|authorizerResponse
init|=
name|objectMapper
operator|.
name|readValue
argument_list|(
name|responseBody
argument_list|,
name|RemoteAuthorizerResponse
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|authorizerResponse
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|WasbAuthorizationException
argument_list|(
literal|"RemoteAuthorizerResponse object null from remote call"
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|authorizerResponse
operator|.
name|getResponseCode
argument_list|()
operator|==
name|REMOTE_CALL_SUCCESS_CODE
condition|)
block|{
return|return
name|authorizerResponse
operator|.
name|getAuthorizationResult
argument_list|()
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|WasbAuthorizationException
argument_list|(
literal|"Remote authorization"
operator|+
literal|" service encountered an error "
operator|+
name|authorizerResponse
operator|.
name|getResponseMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|WasbRemoteCallException
decl||
name|JsonParseException
decl||
name|JsonMappingException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|WasbAuthorizationException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
end_class

begin_comment
comment|/**  * POJO representing the response expected from a remote  * authorization service.  * The remote service is expected to return the authorization  * response in the following JSON format  * {  *    "responseCode" : 0 or non-zero<int>,  *    "responseMessage" : relavant message of failure<String>  *    "authorizationResult" : authorization result<boolean>  *                            true - if auhorization allowed  *                            false - otherwise.  *  * }  */
end_comment

begin_class
DECL|class|RemoteAuthorizerResponse
class|class
name|RemoteAuthorizerResponse
block|{
DECL|field|responseCode
specifier|private
name|int
name|responseCode
decl_stmt|;
DECL|field|authorizationResult
specifier|private
name|boolean
name|authorizationResult
decl_stmt|;
DECL|field|responseMessage
specifier|private
name|String
name|responseMessage
decl_stmt|;
DECL|method|RemoteAuthorizerResponse (int responseCode, boolean authorizationResult, String message)
specifier|public
name|RemoteAuthorizerResponse
parameter_list|(
name|int
name|responseCode
parameter_list|,
name|boolean
name|authorizationResult
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|responseCode
operator|=
name|responseCode
expr_stmt|;
name|this
operator|.
name|authorizationResult
operator|=
name|authorizationResult
expr_stmt|;
name|this
operator|.
name|responseMessage
operator|=
name|message
expr_stmt|;
block|}
DECL|method|RemoteAuthorizerResponse ()
specifier|public
name|RemoteAuthorizerResponse
parameter_list|()
block|{   }
DECL|method|getResponseCode ()
specifier|public
name|int
name|getResponseCode
parameter_list|()
block|{
return|return
name|responseCode
return|;
block|}
DECL|method|setResponseCode (int responseCode)
specifier|public
name|void
name|setResponseCode
parameter_list|(
name|int
name|responseCode
parameter_list|)
block|{
name|this
operator|.
name|responseCode
operator|=
name|responseCode
expr_stmt|;
block|}
DECL|method|getAuthorizationResult ()
specifier|public
name|boolean
name|getAuthorizationResult
parameter_list|()
block|{
return|return
name|authorizationResult
return|;
block|}
DECL|method|setAuthorizationResult (boolean authorizationResult)
specifier|public
name|void
name|setAuthorizationResult
parameter_list|(
name|boolean
name|authorizationResult
parameter_list|)
block|{
name|this
operator|.
name|authorizationResult
operator|=
name|authorizationResult
expr_stmt|;
block|}
DECL|method|getResponseMessage ()
specifier|public
name|String
name|getResponseMessage
parameter_list|()
block|{
return|return
name|responseMessage
return|;
block|}
DECL|method|setResponseMessage (String message)
specifier|public
name|void
name|setResponseMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|responseMessage
operator|=
name|message
expr_stmt|;
block|}
block|}
end_class

end_unit

