begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure.security
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authentication
operator|.
name|client
operator|.
name|AuthenticatedURL
import|;
end_import

begin_comment
comment|/**  * Class to represent SPNEGO token.  */
end_comment

begin_class
DECL|class|SpnegoToken
specifier|public
class|class
name|SpnegoToken
block|{
DECL|field|token
specifier|private
name|AuthenticatedURL
operator|.
name|Token
name|token
decl_stmt|;
DECL|field|expiryTime
specifier|private
name|long
name|expiryTime
decl_stmt|;
DECL|field|TOKEN_VALIDITY_TIME_IN_MS
specifier|private
specifier|static
specifier|final
name|long
name|TOKEN_VALIDITY_TIME_IN_MS
init|=
literal|60
operator|*
literal|60
operator|*
literal|1000L
decl_stmt|;
DECL|method|SpnegoToken (AuthenticatedURL.Token token)
specifier|public
name|SpnegoToken
parameter_list|(
name|AuthenticatedURL
operator|.
name|Token
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
comment|//set the expiry time of the token to be 60 minutes,
comment|// actual token will be valid for more than few hours and treating token as opaque.
name|this
operator|.
name|expiryTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|TOKEN_VALIDITY_TIME_IN_MS
expr_stmt|;
block|}
DECL|method|getToken ()
specifier|public
name|AuthenticatedURL
operator|.
name|Token
name|getToken
parameter_list|()
block|{
return|return
name|token
return|;
block|}
DECL|method|getExpiryTime ()
specifier|public
name|long
name|getExpiryTime
parameter_list|()
block|{
return|return
name|expiryTime
return|;
block|}
DECL|method|isTokenValid ()
specifier|public
name|boolean
name|isTokenValid
parameter_list|()
block|{
return|return
operator|(
name|expiryTime
operator|>=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|)
return|;
block|}
block|}
end_class

end_unit

