begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.services
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|AzureBlobFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|constants
operator|.
name|AbfsHttpConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|constants
operator|.
name|FileSystemUriSchemes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|exceptions
operator|.
name|AzureBlobFileSystemException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|AbfsHttpClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|ConfigurationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|exceptions
operator|.
name|InvalidUriAuthorityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|exceptions
operator|.
name|InvalidUriException
import|;
end_import

begin_class
annotation|@
name|Singleton
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|AbfsHttpClientFactoryImpl
class|class
name|AbfsHttpClientFactoryImpl
implements|implements
name|AbfsHttpClientFactory
block|{
DECL|field|configurationService
specifier|private
specifier|final
name|ConfigurationService
name|configurationService
decl_stmt|;
annotation|@
name|Inject
DECL|method|AbfsHttpClientFactoryImpl ( final ConfigurationService configurationService)
name|AbfsHttpClientFactoryImpl
parameter_list|(
specifier|final
name|ConfigurationService
name|configurationService
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|configurationService
argument_list|,
literal|"configurationService"
argument_list|)
expr_stmt|;
name|this
operator|.
name|configurationService
operator|=
name|configurationService
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getURIBuilder (final String hostName, final FileSystem fs)
name|URIBuilder
name|getURIBuilder
parameter_list|(
specifier|final
name|String
name|hostName
parameter_list|,
specifier|final
name|FileSystem
name|fs
parameter_list|)
block|{
specifier|final
name|AzureBlobFileSystem
name|abfs
init|=
operator|(
name|AzureBlobFileSystem
operator|)
name|fs
decl_stmt|;
name|String
name|scheme
init|=
name|FileSystemUriSchemes
operator|.
name|HTTP_SCHEME
decl_stmt|;
if|if
condition|(
name|abfs
operator|.
name|isSecure
argument_list|()
condition|)
block|{
name|scheme
operator|=
name|FileSystemUriSchemes
operator|.
name|HTTPS_SCHEME
expr_stmt|;
block|}
specifier|final
name|URIBuilder
name|uriBuilder
init|=
operator|new
name|URIBuilder
argument_list|()
decl_stmt|;
name|uriBuilder
operator|.
name|setScheme
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|setHost
argument_list|(
name|hostName
argument_list|)
expr_stmt|;
return|return
name|uriBuilder
return|;
block|}
DECL|method|create (final AzureBlobFileSystem fs)
specifier|public
name|AbfsClient
name|create
parameter_list|(
specifier|final
name|AzureBlobFileSystem
name|fs
parameter_list|)
throws|throws
name|AzureBlobFileSystemException
block|{
specifier|final
name|URI
name|uri
init|=
name|fs
operator|.
name|getUri
argument_list|()
decl_stmt|;
specifier|final
name|String
name|authority
init|=
name|uri
operator|.
name|getRawAuthority
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|authority
condition|)
block|{
throw|throw
operator|new
name|InvalidUriAuthorityException
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|authority
operator|.
name|contains
argument_list|(
name|AbfsHttpConstants
operator|.
name|AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|InvalidUriAuthorityException
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|String
index|[]
name|authorityParts
init|=
name|authority
operator|.
name|split
argument_list|(
name|AbfsHttpConstants
operator|.
name|AZURE_DISTRIBUTED_FILE_SYSTEM_AUTHORITY_DELIMITER
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|authorityParts
operator|.
name|length
operator|<
literal|2
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|authorityParts
index|[
literal|0
index|]
argument_list|)
condition|)
block|{
specifier|final
name|String
name|errMsg
init|=
name|String
operator|.
name|format
argument_list|(
literal|"URI '%s' has a malformed authority, expected container name. "
operator|+
literal|"Authority takes the form "
operator|+
name|FileSystemUriSchemes
operator|.
name|ABFS_SCHEME
operator|+
literal|"://[<container name>@]<account name>"
argument_list|,
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|InvalidUriException
argument_list|(
name|errMsg
argument_list|)
throw|;
block|}
specifier|final
name|String
name|fileSystemName
init|=
name|authorityParts
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|String
name|accountName
init|=
name|authorityParts
index|[
literal|1
index|]
decl_stmt|;
specifier|final
name|URIBuilder
name|uriBuilder
init|=
name|getURIBuilder
argument_list|(
name|accountName
argument_list|,
name|fs
argument_list|)
decl_stmt|;
specifier|final
name|String
name|url
init|=
name|uriBuilder
operator|.
name|toString
argument_list|()
operator|+
name|AbfsHttpConstants
operator|.
name|FORWARD_SLASH
operator|+
name|fileSystemName
decl_stmt|;
name|URL
name|baseUrl
decl_stmt|;
try|try
block|{
name|baseUrl
operator|=
operator|new
name|URL
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|InvalidUriException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"URI '%s' is malformed"
argument_list|,
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
name|SharedKeyCredentials
name|creds
init|=
operator|new
name|SharedKeyCredentials
argument_list|(
name|accountName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|accountName
operator|.
name|indexOf
argument_list|(
name|AbfsHttpConstants
operator|.
name|DOT
argument_list|)
argument_list|)
argument_list|,
name|this
operator|.
name|configurationService
operator|.
name|getStorageAccountKey
argument_list|(
name|accountName
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|AbfsClient
argument_list|(
name|baseUrl
argument_list|,
name|creds
argument_list|,
name|configurationService
argument_list|,
operator|new
name|ExponentialRetryPolicy
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

