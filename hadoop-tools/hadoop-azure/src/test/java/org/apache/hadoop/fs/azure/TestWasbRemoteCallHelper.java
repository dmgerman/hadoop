begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|retry
operator|.
name|RetryUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|StatusLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|ProtocolVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HeaderElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|TypeSafeMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
operator|.
name|AzureNativeFileSystemStore
operator|.
name|KEY_USE_SECURE_MODE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|argThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|atLeast
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_comment
comment|/**  * Test class to hold all WasbRemoteCallHelper tests  */
end_comment

begin_class
DECL|class|TestWasbRemoteCallHelper
specifier|public
class|class
name|TestWasbRemoteCallHelper
extends|extends
name|AbstractWasbTestBase
block|{
DECL|field|EMPTY_STRING
specifier|public
specifier|static
specifier|final
name|String
name|EMPTY_STRING
init|=
literal|""
decl_stmt|;
DECL|field|INVALID_HTTP_STATUS_CODE_999
specifier|private
specifier|static
specifier|final
name|int
name|INVALID_HTTP_STATUS_CODE_999
init|=
literal|999
decl_stmt|;
annotation|@
name|Override
DECL|method|createTestAccount ()
specifier|protected
name|AzureBlobStorageTestAccount
name|createTestAccount
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|NativeAzureFileSystem
operator|.
name|KEY_AZURE_AUTHORIZATION
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RemoteWasbAuthorizerImpl
operator|.
name|KEY_REMOTE_AUTH_SERVICE_URLS
argument_list|,
literal|"http://localhost1/,http://localhost2/,http://localhost:8080"
argument_list|)
expr_stmt|;
return|return
name|AzureBlobStorageTestAccount
operator|.
name|create
argument_list|(
name|conf
argument_list|)
return|;
block|}
annotation|@
name|Before
DECL|method|beforeMethod ()
specifier|public
name|void
name|beforeMethod
parameter_list|()
block|{
name|boolean
name|useSecureMode
init|=
name|fs
operator|.
name|getConf
argument_list|()
operator|.
name|getBoolean
argument_list|(
name|KEY_USE_SECURE_MODE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|boolean
name|useAuthorization
init|=
name|fs
operator|.
name|getConf
argument_list|()
operator|.
name|getBoolean
argument_list|(
name|NativeAzureFileSystem
operator|.
name|KEY_AZURE_AUTHORIZATION
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
literal|"Test valid when both SecureMode and Authorization are enabled .. skipping"
argument_list|,
name|useSecureMode
operator|&&
name|useAuthorization
argument_list|)
expr_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|useSecureMode
operator|&&
name|useAuthorization
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Rule
DECL|field|expectedEx
specifier|public
name|ExpectedException
name|expectedEx
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
comment|/**    * Test invalid status-code    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testInvalidStatusCode ()
specifier|public
name|void
name|testInvalidStatusCode
parameter_list|()
throws|throws
name|Throwable
block|{
name|setupExpectations
argument_list|()
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|INVALID_HTTP_STATUS_CODE_999
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test invalid Content-Type    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testInvalidContentType ()
specifier|public
name|void
name|testInvalidContentType
parameter_list|()
throws|throws
name|Throwable
block|{
name|setupExpectations
argument_list|()
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/plain"
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test missing Content-Length    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testMissingContentLength ()
specifier|public
name|void
name|testMissingContentLength
parameter_list|()
throws|throws
name|Throwable
block|{
name|setupExpectations
argument_list|()
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test Content-Length exceeds max    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testContentLengthExceedsMax ()
specifier|public
name|void
name|testContentLengthExceedsMax
parameter_list|()
throws|throws
name|Throwable
block|{
name|setupExpectations
argument_list|()
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"2048"
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test invalid Content-Length value    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testInvalidContentLengthValue ()
specifier|public
name|void
name|testInvalidContentLengthValue
parameter_list|()
throws|throws
name|Throwable
block|{
name|setupExpectations
argument_list|()
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"20abc48"
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test valid JSON response    * @throws Throwable    */
annotation|@
name|Test
DECL|method|testValidJSONResponse ()
specifier|public
name|void
name|testValidJSONResponse
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test malformed JSON response    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testMalFormedJSONResponse ()
specifier|public
name|void
name|testMalFormedJSONResponse
parameter_list|()
throws|throws
name|Throwable
block|{
name|expectedEx
operator|.
name|expect
argument_list|(
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedEx
operator|.
name|expectMessage
argument_list|(
literal|"com.fasterxml.jackson.core.JsonParseException: Unexpected end-of-input in FIELD_NAME"
argument_list|)
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|malformedJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test valid JSON response failure response code    * @throws Throwable    */
annotation|@
name|Test
comment|// (expected = WasbAuthorizationException.class)
DECL|method|testFailureCodeJSONResponse ()
specifier|public
name|void
name|testFailureCodeJSONResponse
parameter_list|()
throws|throws
name|Throwable
block|{
name|expectedEx
operator|.
name|expect
argument_list|(
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
expr_stmt|;
name|expectedEx
operator|.
name|expectMessage
argument_list|(
literal|"Remote authorization service encountered an error Unauthorized"
argument_list|)
expr_stmt|;
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponse
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponse
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponse
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|failureCodeJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWhenOneInstanceIsDown ()
specifier|public
name|void
name|testWhenOneInstanceIsDown
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponseService1
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|HttpResponse
name|mockHttpResponseService2
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|HttpResponse
name|mockHttpResponseServiceLocal
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseServiceLocal
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseServiceLocal
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseServiceLocal
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseServiceLocal
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
class|class
name|HttpGetForService1
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost1"
argument_list|)
return|;
block|}
block|}
class|class
name|HttpGetForService2
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost2"
argument_list|)
return|;
block|}
block|}
class|class
name|HttpGetForServiceLocal
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
try|try
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getCanonicalHostName
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnknownHostException
name|e
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost"
argument_list|)
return|;
block|}
block|}
block|}
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService1
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseService1
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService2
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseService2
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForServiceLocal
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseServiceLocal
argument_list|)
expr_stmt|;
comment|//Need 2 times because performop()  does 2 fs operations.
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
name|argThat
argument_list|(
operator|new
name|HttpGetForServiceLocal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
name|argThat
argument_list|(
operator|new
name|HttpGetForService2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWhenServiceInstancesAreDown ()
specifier|public
name|void
name|testWhenServiceInstancesAreDown
parameter_list|()
throws|throws
name|Throwable
block|{
comment|//expectedEx.expect(WasbAuthorizationException.class);
comment|// set up mocks
name|HttpClient
name|mockHttpClient
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpEntity
name|mockHttpEntity
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpResponse
name|mockHttpResponseService1
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService1
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|HttpResponse
name|mockHttpResponseService2
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService2
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
name|HttpResponse
name|mockHttpResponseService3
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService3
operator|.
name|getStatusLine
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newStatusLine
argument_list|(
name|HttpStatus
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService3
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Type"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService3
operator|.
name|getFirstHeader
argument_list|(
literal|"Content-Length"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|newHeader
argument_list|(
literal|"Content-Length"
argument_list|,
literal|"1024"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpResponseService3
operator|.
name|getEntity
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpEntity
argument_list|)
expr_stmt|;
class|class
name|HttpGetForService1
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost1"
argument_list|)
return|;
block|}
block|}
class|class
name|HttpGetForService2
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost2"
argument_list|)
return|;
block|}
block|}
class|class
name|HttpGetForService3
extends|extends
name|ArgumentMatcher
argument_list|<
name|HttpGet
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
try|try
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getCanonicalHostName
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnknownHostException
name|e
parameter_list|)
block|{
return|return
name|checkHttpGetMatchHost
argument_list|(
operator|(
name|HttpGet
operator|)
name|o
argument_list|,
literal|"localhost"
argument_list|)
return|;
block|}
block|}
block|}
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService1
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseService1
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService2
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseService2
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpClient
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService3
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHttpResponseService3
argument_list|)
expr_stmt|;
comment|//Need 3 times because performop()  does 3 fs operations.
name|Mockito
operator|.
name|when
argument_list|(
name|mockHttpEntity
operator|.
name|getContent
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|validJsonResponse
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// finished setting up mocks
try|try
block|{
name|performop
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WasbAuthorizationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|atLeast
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|atLeast
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|atLeast
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|argThat
argument_list|(
operator|new
name|HttpGetForService3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockHttpClient
argument_list|,
name|times
argument_list|(
literal|7
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|Mockito
operator|.
expr|<
name|HttpGet
operator|>
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setupExpectations ()
specifier|private
name|void
name|setupExpectations
parameter_list|()
block|{
name|expectedEx
operator|.
name|expect
argument_list|(
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
expr_stmt|;
class|class
name|MatchesPattern
extends|extends
name|TypeSafeMatcher
argument_list|<
name|String
argument_list|>
block|{
specifier|private
name|String
name|pattern
decl_stmt|;
name|MatchesPattern
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
name|this
operator|.
name|pattern
operator|=
name|pattern
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|matchesSafely
parameter_list|(
name|String
name|item
parameter_list|)
block|{
return|return
name|item
operator|.
name|matches
argument_list|(
name|pattern
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|describeTo
parameter_list|(
name|Description
name|description
parameter_list|)
block|{
name|description
operator|.
name|appendText
argument_list|(
literal|"matches pattern "
argument_list|)
operator|.
name|appendValue
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|describeMismatchSafely
parameter_list|(
name|String
name|item
parameter_list|,
name|Description
name|mismatchDescription
parameter_list|)
block|{
name|mismatchDescription
operator|.
name|appendText
argument_list|(
literal|"does not match"
argument_list|)
expr_stmt|;
block|}
block|}
name|expectedEx
operator|.
name|expectMessage
argument_list|(
operator|new
name|MatchesPattern
argument_list|(
literal|"org\\.apache\\.hadoop\\.fs\\.azure\\.WasbRemoteCallException: "
operator|+
literal|"Encountered error while making remote call to "
operator|+
literal|"http:\\/\\/localhost1\\/,http:\\/\\/localhost2\\/,http:\\/\\/localhost:8080 retried 6 time\\(s\\)\\."
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|performop (HttpClient mockHttpClient)
specifier|private
name|void
name|performop
parameter_list|(
name|HttpClient
name|mockHttpClient
parameter_list|)
throws|throws
name|Throwable
block|{
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
literal|"/"
argument_list|,
literal|"test.dat"
argument_list|)
decl_stmt|;
name|RemoteWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|RemoteWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
name|fs
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
name|WasbRemoteCallHelper
name|mockWasbRemoteCallHelper
init|=
operator|new
name|WasbRemoteCallHelper
argument_list|(
name|RetryUtils
operator|.
name|getMultipleLinearRandomRetry
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|EMPTY_STRING
argument_list|,
literal|true
argument_list|,
name|EMPTY_STRING
argument_list|,
literal|"1000,3,10000,2"
argument_list|)
argument_list|)
decl_stmt|;
name|mockWasbRemoteCallHelper
operator|.
name|updateHttpClient
argument_list|(
name|mockHttpClient
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|updateWasbRemoteCallHelper
argument_list|(
name|mockWasbRemoteCallHelper
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|assertPathExists
argument_list|(
name|fs
argument_list|,
literal|"testPath was not created"
argument_list|,
name|testPath
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|validJsonResponse ()
specifier|private
name|String
name|validJsonResponse
parameter_list|()
block|{
return|return
literal|"{"
operator|+
literal|"\"responseCode\": 0,"
operator|+
literal|"\"authorizationResult\": true,"
operator|+
literal|"\"responseMessage\": \"Authorized\""
operator|+
literal|"}"
return|;
block|}
DECL|method|malformedJsonResponse ()
specifier|private
name|String
name|malformedJsonResponse
parameter_list|()
block|{
return|return
literal|"{"
operator|+
literal|"\"responseCode\": 0,"
operator|+
literal|"\"authorizationResult\": true,"
operator|+
literal|"\"responseMessage\":"
return|;
block|}
DECL|method|failureCodeJsonResponse ()
specifier|private
name|String
name|failureCodeJsonResponse
parameter_list|()
block|{
return|return
literal|"{"
operator|+
literal|"\"responseCode\": 1,"
operator|+
literal|"\"authorizationResult\": false,"
operator|+
literal|"\"responseMessage\": \"Unauthorized\""
operator|+
literal|"}"
return|;
block|}
DECL|method|newStatusLine (int statusCode)
specifier|private
name|StatusLine
name|newStatusLine
parameter_list|(
name|int
name|statusCode
parameter_list|)
block|{
return|return
operator|new
name|StatusLine
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ProtocolVersion
name|getProtocolVersion
parameter_list|()
block|{
return|return
operator|new
name|ProtocolVersion
argument_list|(
literal|"HTTP"
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getStatusCode
parameter_list|()
block|{
return|return
name|statusCode
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReasonPhrase
parameter_list|()
block|{
return|return
literal|"Reason Phrase"
return|;
block|}
block|}
return|;
block|}
DECL|method|newHeader (String name, String value)
specifier|private
name|Header
name|newHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
operator|new
name|Header
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|HeaderElement
index|[]
name|getElements
parameter_list|()
throws|throws
name|ParseException
block|{
return|return
operator|new
name|HeaderElement
index|[
literal|0
index|]
return|;
block|}
block|}
return|;
block|}
comment|/** Check that a HttpGet request is with given remote host. */
DECL|method|checkHttpGetMatchHost (HttpGet g, String h)
specifier|private
specifier|static
name|boolean
name|checkHttpGetMatchHost
parameter_list|(
name|HttpGet
name|g
parameter_list|,
name|String
name|h
parameter_list|)
block|{
return|return
name|g
operator|!=
literal|null
operator|&&
name|g
operator|.
name|getURI
argument_list|()
operator|.
name|getHost
argument_list|()
operator|.
name|equals
argument_list|(
name|h
argument_list|)
return|;
block|}
block|}
end_class

end_unit

