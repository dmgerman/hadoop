begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|OperationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|ResponseReceivedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|SendingRequestEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|StorageEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobInputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobOutputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudAppendBlob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlobContainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudBlockBlob
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|storage
operator|.
name|blob
operator|.
name|CloudPageBlob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Tests for<code>BlobOperationDescriptor</code>.  */
end_comment

begin_class
DECL|class|TestBlobOperationDescriptor
specifier|public
class|class
name|TestBlobOperationDescriptor
extends|extends
name|AbstractWasbTestBase
block|{
DECL|field|lastOperationTypeReceived
specifier|private
name|BlobOperationDescriptor
operator|.
name|OperationType
name|lastOperationTypeReceived
decl_stmt|;
DECL|field|lastOperationTypeSent
specifier|private
name|BlobOperationDescriptor
operator|.
name|OperationType
name|lastOperationTypeSent
decl_stmt|;
DECL|field|lastContentLengthReceived
specifier|private
name|long
name|lastContentLengthReceived
decl_stmt|;
annotation|@
name|Override
DECL|method|createTestAccount ()
specifier|protected
name|AzureBlobStorageTestAccount
name|createTestAccount
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|AzureBlobStorageTestAccount
operator|.
name|create
argument_list|()
return|;
block|}
annotation|@
name|Test
DECL|method|testAppendBlockOperations ()
specifier|public
name|void
name|testAppendBlockOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudBlobContainer
name|container
init|=
name|getTestAccount
argument_list|()
operator|.
name|getRealContainer
argument_list|()
decl_stmt|;
name|OperationContext
name|context
init|=
operator|new
name|OperationContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|getResponseReceivedEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|ResponseReceivedEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getSendingRequestEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|SendingRequestEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|CloudAppendBlob
name|appendBlob
init|=
name|container
operator|.
name|getAppendBlobReference
argument_list|(
literal|"testAppendBlockOperations"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
try|try
init|(
name|BlobOutputStream
name|output
init|=
name|appendBlob
operator|.
name|openWriteNew
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|context
argument_list|)
init|;
init|)
block|{
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|CreateBlob
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|String
name|message
init|=
literal|"this is a test"
decl_stmt|;
name|output
operator|.
name|write
argument_list|(
name|message
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|AppendBlock
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|AppendBlock
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|message
operator|.
name|length
argument_list|()
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPutBlockOperations ()
specifier|public
name|void
name|testPutBlockOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudBlobContainer
name|container
init|=
name|getTestAccount
argument_list|()
operator|.
name|getRealContainer
argument_list|()
decl_stmt|;
name|OperationContext
name|context
init|=
operator|new
name|OperationContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|getResponseReceivedEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|ResponseReceivedEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getSendingRequestEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|SendingRequestEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|CloudBlockBlob
name|blockBlob
init|=
name|container
operator|.
name|getBlockBlobReference
argument_list|(
literal|"testPutBlockOperations"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
try|try
init|(
name|BlobOutputStream
name|output
init|=
name|blockBlob
operator|.
name|openOutputStream
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|context
argument_list|)
init|;
init|)
block|{
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|String
name|message
init|=
literal|"this is a test"
decl_stmt|;
name|output
operator|.
name|write
argument_list|(
name|message
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlock
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlock
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|message
operator|.
name|length
argument_list|()
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlockList
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlockList
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutPageOperations ()
specifier|public
name|void
name|testPutPageOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudBlobContainer
name|container
init|=
name|getTestAccount
argument_list|()
operator|.
name|getRealContainer
argument_list|()
decl_stmt|;
name|OperationContext
name|context
init|=
operator|new
name|OperationContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|getResponseReceivedEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|ResponseReceivedEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getSendingRequestEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|SendingRequestEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|CloudPageBlob
name|pageBlob
init|=
name|container
operator|.
name|getPageBlobReference
argument_list|(
literal|"testPutPageOperations"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
try|try
init|(
name|BlobOutputStream
name|output
init|=
name|pageBlob
operator|.
name|openWriteNew
argument_list|(
literal|1024
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|context
argument_list|)
init|;
init|)
block|{
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|CreateBlob
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
specifier|final
name|int
name|pageSize
init|=
literal|512
decl_stmt|;
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
name|pageSize
index|]
decl_stmt|;
name|output
operator|.
name|write
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutPage
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutPage
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|buffer
operator|.
name|length
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testGetBlobOperations ()
specifier|public
name|void
name|testGetBlobOperations
parameter_list|()
throws|throws
name|Exception
block|{
name|CloudBlobContainer
name|container
init|=
name|getTestAccount
argument_list|()
operator|.
name|getRealContainer
argument_list|()
decl_stmt|;
name|OperationContext
name|context
init|=
operator|new
name|OperationContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|getResponseReceivedEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|ResponseReceivedEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|getSendingRequestEventHandler
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|SendingRequestEventHandler
argument_list|()
argument_list|)
expr_stmt|;
name|CloudBlockBlob
name|blockBlob
init|=
name|container
operator|.
name|getBlockBlobReference
argument_list|(
literal|"testGetBlobOperations"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|String
name|message
init|=
literal|"this is a test"
decl_stmt|;
try|try
init|(
name|BlobOutputStream
name|output
init|=
name|blockBlob
operator|.
name|openOutputStream
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|context
argument_list|)
init|;
init|)
block|{
name|assertNull
argument_list|(
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|output
operator|.
name|write
argument_list|(
name|message
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlock
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlock
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|message
operator|.
name|length
argument_list|()
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlockList
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|PutBlockList
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
try|try
init|(
name|BlobInputStream
name|input
init|=
name|blockBlob
operator|.
name|openInputStream
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|context
argument_list|)
init|;
init|)
block|{
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|GetProperties
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|GetProperties
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|numBytesRead
init|=
name|input
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|GetBlob
argument_list|,
name|lastOperationTypeSent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|BlobOperationDescriptor
operator|.
name|OperationType
operator|.
name|GetBlob
argument_list|,
name|lastOperationTypeReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|message
operator|.
name|length
argument_list|()
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numBytesRead
argument_list|,
name|lastContentLengthReceived
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Called after the Azure Storage SDK receives a response.    *    * @param event The connection, operation, and request state.    */
DECL|method|responseReceived (ResponseReceivedEvent event)
specifier|private
name|void
name|responseReceived
parameter_list|(
name|ResponseReceivedEvent
name|event
parameter_list|)
block|{
name|HttpURLConnection
name|conn
init|=
operator|(
name|HttpURLConnection
operator|)
name|event
operator|.
name|getConnectionObject
argument_list|()
decl_stmt|;
name|BlobOperationDescriptor
operator|.
name|OperationType
name|operationType
init|=
name|BlobOperationDescriptor
operator|.
name|getOperationType
argument_list|(
name|conn
argument_list|)
decl_stmt|;
name|lastOperationTypeReceived
operator|=
name|operationType
expr_stmt|;
switch|switch
condition|(
name|operationType
condition|)
block|{
case|case
name|AppendBlock
case|:
case|case
name|PutBlock
case|:
case|case
name|PutPage
case|:
name|lastContentLengthReceived
operator|=
name|BlobOperationDescriptor
operator|.
name|getContentLengthIfKnown
argument_list|(
name|conn
argument_list|,
name|operationType
argument_list|)
expr_stmt|;
break|break;
case|case
name|GetBlob
case|:
name|lastContentLengthReceived
operator|=
name|BlobOperationDescriptor
operator|.
name|getContentLengthIfKnown
argument_list|(
name|conn
argument_list|,
name|operationType
argument_list|)
expr_stmt|;
break|break;
default|default:
name|lastContentLengthReceived
operator|=
literal|0
expr_stmt|;
break|break;
block|}
block|}
comment|/**    * Called before the Azure Storage SDK sends a request.    *    * @param event The connection, operation, and request state.    */
DECL|method|sendingRequest (SendingRequestEvent event)
specifier|private
name|void
name|sendingRequest
parameter_list|(
name|SendingRequestEvent
name|event
parameter_list|)
block|{
name|this
operator|.
name|lastOperationTypeSent
operator|=
name|BlobOperationDescriptor
operator|.
name|getOperationType
argument_list|(
operator|(
name|HttpURLConnection
operator|)
name|event
operator|.
name|getConnectionObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * The ResponseReceivedEvent is fired after the Azure Storage SDK receives a    * response.    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|ResponseReceivedEventHandler
class|class
name|ResponseReceivedEventHandler
extends|extends
name|StorageEvent
argument_list|<
name|ResponseReceivedEvent
argument_list|>
block|{
comment|/**      * Called after the Azure Storage SDK receives a response.      *      * @param event The connection, operation, and request state.      */
annotation|@
name|Override
DECL|method|eventOccurred (ResponseReceivedEvent event)
specifier|public
name|void
name|eventOccurred
parameter_list|(
name|ResponseReceivedEvent
name|event
parameter_list|)
block|{
name|responseReceived
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * The SendingRequestEvent is fired before the Azure Storage SDK sends a    * request.    */
annotation|@
name|InterfaceAudience
operator|.
name|Private
DECL|class|SendingRequestEventHandler
class|class
name|SendingRequestEventHandler
extends|extends
name|StorageEvent
argument_list|<
name|SendingRequestEvent
argument_list|>
block|{
comment|/**      * Called before the Azure Storage SDK sends a request.      *      * @param event The connection, operation, and request state.      */
annotation|@
name|Override
DECL|method|eventOccurred (SendingRequestEvent event)
specifier|public
name|void
name|eventOccurred
parameter_list|(
name|SendingRequestEvent
name|event
parameter_list|)
block|{
name|sendingRequest
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

