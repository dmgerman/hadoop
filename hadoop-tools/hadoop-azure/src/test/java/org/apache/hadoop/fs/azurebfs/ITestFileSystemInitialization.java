begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|constants
operator|.
name|FileSystemUriSchemes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
operator|.
name|AuthType
import|;
end_import

begin_comment
comment|/**  * Test AzureBlobFileSystem initialization.  */
end_comment

begin_class
DECL|class|ITestFileSystemInitialization
specifier|public
class|class
name|ITestFileSystemInitialization
extends|extends
name|AbstractAbfsIntegrationTest
block|{
DECL|method|ITestFileSystemInitialization ()
specifier|public
name|ITestFileSystemInitialization
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ensureAzureBlobFileSystemIsInitialized ()
specifier|public
name|void
name|ensureAzureBlobFileSystemIsInitialized
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
specifier|final
name|String
name|accountName
init|=
name|getAccountName
argument_list|()
decl_stmt|;
specifier|final
name|String
name|filesystem
init|=
name|getFileSystemName
argument_list|()
decl_stmt|;
name|String
name|scheme
init|=
name|this
operator|.
name|getAuthType
argument_list|()
operator|==
name|AuthType
operator|.
name|SharedKey
condition|?
name|FileSystemUriSchemes
operator|.
name|ABFS_SCHEME
else|:
name|FileSystemUriSchemes
operator|.
name|ABFS_SECURE_SCHEME
decl_stmt|;
name|assertEquals
argument_list|(
name|fs
operator|.
name|getUri
argument_list|()
argument_list|,
operator|new
name|URI
argument_list|(
name|scheme
argument_list|,
name|filesystem
operator|+
literal|"@"
operator|+
name|accountName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"working directory"
argument_list|,
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|ensureSecureAzureBlobFileSystemIsInitialized ()
specifier|public
name|void
name|ensureSecureAzureBlobFileSystemIsInitialized
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|accountName
init|=
name|getAccountName
argument_list|()
decl_stmt|;
specifier|final
name|String
name|filesystem
init|=
name|getFileSystemName
argument_list|()
decl_stmt|;
specifier|final
name|URI
name|defaultUri
init|=
operator|new
name|URI
argument_list|(
name|FileSystemUriSchemes
operator|.
name|ABFS_SECURE_SCHEME
argument_list|,
name|filesystem
operator|+
literal|"@"
operator|+
name|accountName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
name|getConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_DEFAULT_NAME_KEY
argument_list|,
name|defaultUri
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|SecureAzureBlobFileSystem
name|fs
init|=
operator|(
name|SecureAzureBlobFileSystem
operator|)
name|FileSystem
operator|.
name|newInstance
argument_list|(
name|conf
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
name|fs
operator|.
name|getUri
argument_list|()
argument_list|,
operator|new
name|URI
argument_list|(
name|FileSystemUriSchemes
operator|.
name|ABFS_SECURE_SCHEME
argument_list|,
name|filesystem
operator|+
literal|"@"
operator|+
name|accountName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"working directory"
argument_list|,
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

