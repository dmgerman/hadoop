begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|utils
operator|.
name|CRC64
import|;
end_import

begin_comment
comment|/**  * Test for Crc64 in AzureBlobFileSystem, notice that ABFS CRC64 has its own polynomial.  * */
end_comment

begin_class
DECL|class|TestAbfsCrc64
specifier|public
class|class
name|TestAbfsCrc64
block|{
annotation|@
name|Test
DECL|method|tesCrc64Compute ()
specifier|public
name|void
name|tesCrc64Compute
parameter_list|()
block|{
name|CRC64
name|crc64
init|=
operator|new
name|CRC64
argument_list|()
decl_stmt|;
specifier|final
name|String
index|[]
name|testStr
init|=
block|{
literal|"#$"
block|,
literal|"dir_2_ac83abee"
block|,
literal|"dir_42_976df1f5"
block|}
decl_stmt|;
specifier|final
name|String
index|[]
name|expected
init|=
block|{
literal|"f91f7e6a837dbfa8"
block|,
literal|"203f9fefc38ae97b"
block|,
literal|"cc0d56eafe58a855"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testStr
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
index|[
name|i
index|]
argument_list|,
name|Long
operator|.
name|toHexString
argument_list|(
name|crc64
operator|.
name|compute
argument_list|(
name|testStr
index|[
name|i
index|]
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

