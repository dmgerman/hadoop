begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|utils
operator|.
name|AclTestHelpers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|ACCESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
operator|.
name|DEFAULT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|USER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|GROUP
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|OTHER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
operator|.
name|MASK
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|utils
operator|.
name|AclTestHelpers
operator|.
name|aclEntry
import|;
end_import

begin_comment
comment|/**  * Test acl operations.  */
end_comment

begin_class
DECL|class|ITestAzureBlobFilesystemAcl
specifier|public
class|class
name|ITestAzureBlobFilesystemAcl
extends|extends
name|AbstractAbfsIntegrationTest
block|{
DECL|field|ALL
specifier|private
specifier|static
specifier|final
name|FsAction
name|ALL
init|=
name|FsAction
operator|.
name|ALL
decl_stmt|;
DECL|field|NONE
specifier|private
specifier|static
specifier|final
name|FsAction
name|NONE
init|=
name|FsAction
operator|.
name|NONE
decl_stmt|;
DECL|field|READ
specifier|private
specifier|static
specifier|final
name|FsAction
name|READ
init|=
name|FsAction
operator|.
name|READ
decl_stmt|;
DECL|field|READ_EXECUTE
specifier|private
specifier|static
specifier|final
name|FsAction
name|READ_EXECUTE
init|=
name|FsAction
operator|.
name|READ_EXECUTE
decl_stmt|;
DECL|field|READ_WRITE
specifier|private
specifier|static
specifier|final
name|FsAction
name|READ_WRITE
init|=
name|FsAction
operator|.
name|READ_WRITE
decl_stmt|;
DECL|field|RW
specifier|private
specifier|static
specifier|final
name|short
name|RW
init|=
literal|0600
decl_stmt|;
DECL|field|RWX
specifier|private
specifier|static
specifier|final
name|short
name|RWX
init|=
literal|0700
decl_stmt|;
DECL|field|RWX_R
specifier|private
specifier|static
specifier|final
name|short
name|RWX_R
init|=
literal|0740
decl_stmt|;
DECL|field|RWX_RW
specifier|private
specifier|static
specifier|final
name|short
name|RWX_RW
init|=
literal|0760
decl_stmt|;
DECL|field|RWX_RWX
specifier|private
specifier|static
specifier|final
name|short
name|RWX_RWX
init|=
literal|0770
decl_stmt|;
DECL|field|RWX_RX
specifier|private
specifier|static
specifier|final
name|short
name|RWX_RX
init|=
literal|0750
decl_stmt|;
DECL|field|RWX_RX_RX
specifier|private
specifier|static
specifier|final
name|short
name|RWX_RX_RX
init|=
literal|0755
decl_stmt|;
DECL|field|RW_R
specifier|private
specifier|static
specifier|final
name|short
name|RW_R
init|=
literal|0640
decl_stmt|;
DECL|field|RW_RW
specifier|private
specifier|static
specifier|final
name|short
name|RW_RW
init|=
literal|0660
decl_stmt|;
DECL|field|RW_RWX
specifier|private
specifier|static
specifier|final
name|short
name|RW_RWX
init|=
literal|0670
decl_stmt|;
DECL|field|RW_R_R
specifier|private
specifier|static
specifier|final
name|short
name|RW_R_R
init|=
literal|0644
decl_stmt|;
DECL|field|STICKY_RWX_RWX
specifier|private
specifier|static
specifier|final
name|short
name|STICKY_RWX_RWX
init|=
literal|01770
decl_stmt|;
DECL|field|testRoot
specifier|private
specifier|static
name|Path
name|testRoot
init|=
operator|new
name|Path
argument_list|(
literal|"/test"
argument_list|)
decl_stmt|;
DECL|field|path
specifier|private
name|Path
name|path
decl_stmt|;
DECL|method|ITestAzureBlobFilesystemAcl ()
specifier|public
name|ITestAzureBlobFilesystemAcl
parameter_list|()
throws|throws
name|Exception
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntries ()
specifier|public
name|void
name|testModifyAclEntries
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesOnlyAccess ()
specifier|public
name|void
name|testModifyAclEntriesOnlyAccess
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesOnlyDefault ()
specifier|public
name|void
name|testModifyAclEntriesOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesMinimal ()
specifier|public
name|void
name|testModifyAclEntriesMinimal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_WRITE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW_RW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesMinimalDefault ()
specifier|public
name|void
name|testModifyAclEntriesMinimalDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesCustomMask ()
specifier|public
name|void
name|testModifyAclEntriesCustomMask
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesStickyBit ()
specifier|public
name|void
name|testModifyAclEntriesStickyBit
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|01750
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
literal|01750
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|FileNotFoundException
operator|.
name|class
argument_list|)
DECL|method|testModifyAclEntriesPathNotFound ()
specifier|public
name|void
name|testModifyAclEntriesPathNotFound
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Path has not been created.
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|Exception
operator|.
name|class
argument_list|)
DECL|method|testModifyAclEntriesDefaultOnFile ()
specifier|public
name|void
name|testModifyAclEntriesDefaultOnFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntries ()
specifier|public
name|void
name|testRemoveAclEntries
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesOnlyAccess ()
specifier|public
name|void
name|testRemoveAclEntriesOnlyAccess
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|READ_WRITE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesOnlyDefault ()
specifier|public
name|void
name|testRemoveAclEntriesOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesMinimal ()
specifier|public
name|void
name|testRemoveAclEntriesMinimal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RW
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesMinimalDefault ()
specifier|public
name|void
name|testRemoveAclEntriesMinimalDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesStickyBit ()
specifier|public
name|void
name|testRemoveAclEntriesStickyBit
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|01750
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
literal|01750
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|FileNotFoundException
operator|.
name|class
argument_list|)
DECL|method|testRemoveAclEntriesPathNotFound ()
specifier|public
name|void
name|testRemoveAclEntriesPathNotFound
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Path has not been created.
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAcl ()
specifier|public
name|void
name|testRemoveDefaultAcl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAclOnlyAccess ()
specifier|public
name|void
name|testRemoveDefaultAclOnlyAccess
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAclOnlyDefault ()
specifier|public
name|void
name|testRemoveDefaultAclOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAclMinimal ()
specifier|public
name|void
name|testRemoveDefaultAclMinimal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAclStickyBit ()
specifier|public
name|void
name|testRemoveDefaultAclStickyBit
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|01750
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|STICKY_RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|FileNotFoundException
operator|.
name|class
argument_list|)
DECL|method|testRemoveDefaultAclPathNotFound ()
specifier|public
name|void
name|testRemoveDefaultAclPathNotFound
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Path has not been created.
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAcl ()
specifier|public
name|void
name|testRemoveAcl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclMinimalAcl ()
specifier|public
name|void
name|testRemoveAclMinimalAcl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclStickyBit ()
specifier|public
name|void
name|testRemoveAclStickyBit
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|01750
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
literal|01750
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveAclOnlyDefault ()
specifier|public
name|void
name|testRemoveAclOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|FileNotFoundException
operator|.
name|class
argument_list|)
DECL|method|testRemoveAclPathNotFound ()
specifier|public
name|void
name|testRemoveAclPathNotFound
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Path has not been created.
name|fs
operator|.
name|removeAcl
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAcl ()
specifier|public
name|void
name|testSetAcl
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclOnlyAccess ()
specifier|public
name|void
name|testSetAclOnlyAccess
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclOnlyDefault ()
specifier|public
name|void
name|testSetAclOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclMinimal ()
specifier|public
name|void
name|testSetAclMinimal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|aclSpec
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclMinimalDefault ()
specifier|public
name|void
name|testSetAclMinimalDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclCustomMask ()
specifier|public
name|void
name|testSetAclCustomMask
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetAclStickyBit ()
specifier|public
name|void
name|testSetAclStickyBit
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
literal|01750
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|STICKY_RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|FileNotFoundException
operator|.
name|class
argument_list|)
DECL|method|testSetAclPathNotFound ()
specifier|public
name|void
name|testSetAclPathNotFound
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Path has not been created.
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|Exception
operator|.
name|class
argument_list|)
DECL|method|testSetAclDefaultOnFile ()
specifier|public
name|void
name|testSetAclDefaultOnFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetPermission ()
specifier|public
name|void
name|testSetPermission
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX
argument_list|)
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetPermissionOnlyAccess ()
specifier|public
name|void
name|testSetPermissionOnlyAccess
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|READ_WRITE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW
argument_list|)
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|READ
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetPermissionOnlyDefault ()
specifier|public
name|void
name|testSetPermissionOnlyDefault
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX
argument_list|)
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
operator|(
name|short
operator|)
name|RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclNewFile ()
specifier|public
name|void
name|testDefaultAclNewFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|filePath
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
comment|// wait umask fix to be deployed
DECL|method|testOnlyAccessAclNewFile ()
specifier|public
name|void
name|testOnlyAccessAclNewFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|filePath
argument_list|,
operator|(
name|short
operator|)
name|RW_R_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
comment|// wait investigation in service
DECL|method|testDefaultMinimalAclNewFile ()
specifier|public
name|void
name|testDefaultMinimalAclNewFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|filePath
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclNewDir ()
specifier|public
name|void
name|testDefaultAclNewDir
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirPath
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
operator|(
name|short
operator|)
name|RWX_RWX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
comment|// wait umask fix to be deployed
DECL|method|testOnlyAccessAclNewDir ()
specifier|public
name|void
name|testOnlyAccessAclNewDir
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirPath
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{ }
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
comment|// wait investigation in service
DECL|method|testDefaultMinimalAclNewDir ()
specifier|public
name|void
name|testDefaultMinimalAclNewDir
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirPath
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|NONE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclNewFileWithMode ()
specifier|public
name|void
name|testDefaultAclNewFileWithMode
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|int
name|bufferSize
init|=
literal|4
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|,
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
name|RWX_R
argument_list|)
argument_list|,
literal|false
argument_list|,
name|bufferSize
argument_list|,
name|fs
operator|.
name|getDefaultReplication
argument_list|(
name|filePath
argument_list|)
argument_list|,
name|fs
operator|.
name|getDefaultBlockSize
argument_list|(
name|path
argument_list|)
argument_list|,
literal|null
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|filePath
argument_list|,
operator|(
name|short
operator|)
name|RWX_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclNewDirWithMode ()
specifier|public
name|void
name|testDefaultAclNewDirWithMode
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|path
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirPath
argument_list|,
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
name|RWX_R
argument_list|)
argument_list|)
expr_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|AclEntry
index|[]
block|{
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
name|READ_EXECUTE
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|MASK
argument_list|,
name|ALL
argument_list|)
block|,
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|OTHER
argument_list|,
name|READ_EXECUTE
argument_list|)
block|}
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
operator|(
name|short
operator|)
name|RWX_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclRenamedFile ()
specifier|public
name|void
name|testDefaultAclRenamedFile
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir"
argument_list|)
decl_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|dirPath
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|filePath
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RW_R
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|renamedFilePath
init|=
operator|new
name|Path
argument_list|(
name|dirPath
argument_list|,
literal|"file1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|rename
argument_list|(
name|filePath
argument_list|,
name|renamedFilePath
argument_list|)
expr_stmt|;
name|AclEntry
index|[]
name|expected
init|=
operator|new
name|AclEntry
index|[]
block|{ }
decl_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|renamedFilePath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|renamedFilePath
argument_list|,
operator|(
name|short
operator|)
name|RW_R
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaultAclRenamedDir ()
specifier|public
name|void
name|testDefaultAclRenamedDir
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|Path
argument_list|(
name|testRoot
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|dirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"dir"
argument_list|)
decl_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|dirPath
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|dirPath
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|Path
name|subdirPath
init|=
operator|new
name|Path
argument_list|(
name|path
argument_list|,
literal|"subdir"
argument_list|)
decl_stmt|;
name|FileSystem
operator|.
name|mkdirs
argument_list|(
name|fs
argument_list|,
name|subdirPath
argument_list|,
name|FsPermission
operator|.
name|createImmutable
argument_list|(
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|renamedSubdirPath
init|=
operator|new
name|Path
argument_list|(
name|dirPath
argument_list|,
literal|"subdir"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|rename
argument_list|(
name|subdirPath
argument_list|,
name|renamedSubdirPath
argument_list|)
expr_stmt|;
name|AclEntry
index|[]
name|expected
init|=
operator|new
name|AclEntry
index|[]
block|{ }
decl_stmt|;
name|AclStatus
name|s
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|renamedSubdirPath
argument_list|)
decl_stmt|;
name|AclEntry
index|[]
name|returned
init|=
name|s
operator|.
name|getEntries
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|AclEntry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|expected
argument_list|,
name|returned
argument_list|)
expr_stmt|;
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|renamedSubdirPath
argument_list|,
operator|(
name|short
operator|)
name|RWX_RX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEnsureAclOperationWorksForRoot ()
specifier|public
name|void
name|testEnsureAclOperationWorksForRoot
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|assumeTrue
argument_list|(
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|rootPath
init|=
operator|new
name|Path
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec1
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|rootPath
argument_list|,
name|aclSpec1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|getAclStatus
argument_list|(
name|rootPath
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|rootPath
argument_list|,
literal|""
argument_list|,
literal|"testgroup"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|rootPath
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"777"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec2
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|USER
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|USER
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|rootPath
argument_list|,
name|aclSpec2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|rootPath
argument_list|,
name|aclSpec2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|rootPath
argument_list|)
expr_stmt|;
name|fs
operator|.
name|removeAcl
argument_list|(
name|rootPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetOwnerForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testSetOwnerForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|filePath
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|oldFileStatus
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
name|filePath
argument_list|,
literal|"Alice"
argument_list|,
literal|"testGroup"
argument_list|)
expr_stmt|;
name|FileStatus
name|newFileStatus
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|oldFileStatus
operator|.
name|getOwner
argument_list|()
argument_list|,
name|newFileStatus
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|oldFileStatus
operator|.
name|getGroup
argument_list|()
argument_list|,
name|newFileStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetPermissionForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testSetPermissionForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|filePath
argument_list|)
argument_list|)
expr_stmt|;
name|FsPermission
name|oldPermission
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|filePath
argument_list|)
operator|.
name|getPermission
argument_list|()
decl_stmt|;
comment|// default permission for non-namespace enabled account is "777"
name|FsPermission
name|newPermission
init|=
operator|new
name|FsPermission
argument_list|(
literal|"557"
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|oldPermission
argument_list|,
name|newPermission
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|filePath
argument_list|,
name|newPermission
argument_list|)
expr_stmt|;
name|FsPermission
name|updatedPermission
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|filePath
argument_list|)
operator|.
name|getPermission
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|oldPermission
argument_list|,
name|updatedPermission
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testModifyAclEntriesForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testModifyAclEntriesForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|modifyAclEntries
argument_list|(
name|filePath
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
annotation|@
name|Test
DECL|method|testRemoveAclEntriesEntriesForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testRemoveAclEntriesEntriesForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|removeAclEntries
argument_list|(
name|filePath
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
annotation|@
name|Test
DECL|method|testRemoveDefaultAclForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testRemoveDefaultAclForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|fs
operator|.
name|removeDefaultAcl
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
annotation|@
name|Test
DECL|method|testRemoveAclForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testRemoveAclForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|fs
operator|.
name|removeAcl
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
annotation|@
name|Test
DECL|method|testSetAclForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testSetAclForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclSpec
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|aclEntry
argument_list|(
name|DEFAULT
argument_list|,
name|GROUP
argument_list|,
literal|"foo"
argument_list|,
name|ALL
argument_list|)
argument_list|,
name|aclEntry
argument_list|(
name|ACCESS
argument_list|,
name|GROUP
argument_list|,
literal|"bar"
argument_list|,
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setAcl
argument_list|(
name|filePath
argument_list|,
name|aclSpec
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
annotation|@
name|Test
DECL|method|testGetAclStatusForNonNamespaceEnabledAccount ()
specifier|public
name|void
name|testGetAclStatusForNonNamespaceEnabledAccount
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|AzureBlobFileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
operator|!
name|fs
operator|.
name|getIsNamespaceEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|filePath
init|=
operator|new
name|Path
argument_list|(
name|methodName
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|filePath
argument_list|)
expr_stmt|;
try|try
block|{
name|AclStatus
name|aclSpec
init|=
name|fs
operator|.
name|getAclStatus
argument_list|(
name|filePath
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"UnsupportedOperationException is expected"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedOperationException
name|ex
parameter_list|)
block|{
comment|//no-op
block|}
block|}
DECL|method|assertPermission (FileSystem fs, short perm)
specifier|private
name|void
name|assertPermission
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|short
name|perm
parameter_list|)
throws|throws
name|Exception
block|{
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|perm
argument_list|)
expr_stmt|;
block|}
DECL|method|assertPermission (FileSystem fs, Path pathToCheck, short perm)
specifier|private
name|void
name|assertPermission
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|pathToCheck
parameter_list|,
name|short
name|perm
parameter_list|)
throws|throws
name|Exception
block|{
name|AclTestHelpers
operator|.
name|assertPermission
argument_list|(
name|fs
argument_list|,
name|pathToCheck
argument_list|,
name|perm
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

