begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.utils
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test ABFS UriUtils.  */
end_comment

begin_class
DECL|class|TestUriUtils
specifier|public
specifier|final
class|class
name|TestUriUtils
block|{
annotation|@
name|Test
DECL|method|testIfUriContainsAbfs ()
specifier|public
name|void
name|testIfUriContainsAbfs
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|"abfs.dfs.core.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|"abfs.dfs.preprod.core.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|"abfs.dfs.cores.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|"abfs.dfs.cores.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|UriUtils
operator|.
name|containsAbfsUrl
argument_list|(
literal|"xhdfs.blob.core.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExtractRawAccountName ()
specifier|public
name|void
name|testExtractRawAccountName
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"abfs"
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|"abfs.dfs.core.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"abfs"
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|"abfs.dfs.preprod.core.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|"abfs.dfs.cores.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
literal|"abfs.dfs.cores.windows.net"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

