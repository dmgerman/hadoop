begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.services
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|constants
operator|.
name|FileSystemUriSchemes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|constants
operator|.
name|TestConfigurationKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|ConfigurationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|utils
operator|.
name|UriUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_comment
comment|/**  * Mock AbfsHttpClientFactoryImpl.  */
end_comment

begin_class
annotation|@
name|Singleton
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|MockAbfsHttpClientFactoryImpl
specifier|public
class|class
name|MockAbfsHttpClientFactoryImpl
extends|extends
name|AbfsHttpClientFactoryImpl
block|{
DECL|field|configurationService
specifier|private
specifier|final
name|ConfigurationService
name|configurationService
decl_stmt|;
annotation|@
name|Inject
DECL|method|MockAbfsHttpClientFactoryImpl ( final ConfigurationService configurationService)
name|MockAbfsHttpClientFactoryImpl
parameter_list|(
specifier|final
name|ConfigurationService
name|configurationService
parameter_list|)
block|{
name|super
argument_list|(
name|configurationService
argument_list|)
expr_stmt|;
name|this
operator|.
name|configurationService
operator|=
name|configurationService
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|getURIBuilder (final String hostName, final FileSystem fs)
name|URIBuilder
name|getURIBuilder
parameter_list|(
specifier|final
name|String
name|hostName
parameter_list|,
specifier|final
name|FileSystem
name|fs
parameter_list|)
block|{
specifier|final
name|URIBuilder
name|uriBuilder
init|=
operator|new
name|URIBuilder
argument_list|()
decl_stmt|;
specifier|final
name|String
name|testHost
init|=
name|this
operator|.
name|configurationService
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TestConfigurationKeys
operator|.
name|FS_AZURE_TEST_HOST_NAME
argument_list|)
decl_stmt|;
specifier|final
name|Integer
name|testHostPort
init|=
name|this
operator|.
name|configurationService
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getInt
argument_list|(
name|TestConfigurationKeys
operator|.
name|FS_AZURE_TEST_HOST_PORT
argument_list|,
literal|80
argument_list|)
decl_stmt|;
specifier|final
name|String
name|testAccount
init|=
name|this
operator|.
name|configurationService
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TestConfigurationKeys
operator|.
name|FS_AZURE_TEST_ACCOUNT_NAME
argument_list|)
decl_stmt|;
name|String
name|scheme
init|=
name|FileSystemUriSchemes
operator|.
name|HTTP_SCHEME
decl_stmt|;
name|uriBuilder
operator|.
name|setScheme
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|setHost
argument_list|(
name|testHost
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|setPort
argument_list|(
name|testHostPort
argument_list|)
expr_stmt|;
name|uriBuilder
operator|.
name|setPath
argument_list|(
literal|"/"
operator|+
name|UriUtils
operator|.
name|extractRawAccountFromAccountName
argument_list|(
name|testAccount
argument_list|)
operator|+
literal|"/"
argument_list|)
expr_stmt|;
return|return
name|uriBuilder
return|;
block|}
block|}
end_class

end_unit

