begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|tools
operator|.
name|javac
operator|.
name|util
operator|.
name|Assert
import|;
end_import

begin_comment
comment|/**  * Test class to hold all WASB authorization tests.  */
end_comment

begin_class
DECL|class|TestNativeAzureFileSystemAuthorization
specifier|public
class|class
name|TestNativeAzureFileSystemAuthorization
extends|extends
name|AbstractWasbTestBase
block|{
annotation|@
name|Override
DECL|method|createTestAccount ()
specifier|protected
name|AzureBlobStorageTestAccount
name|createTestAccount
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|NativeAzureFileSystem
operator|.
name|KEY_AZURE_AUTHORIZATION
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RemoteWasbAuthorizerImpl
operator|.
name|KEY_REMOTE_AUTH_SERVICE_URL
argument_list|,
literal|"test_url"
argument_list|)
expr_stmt|;
return|return
name|AzureBlobStorageTestAccount
operator|.
name|create
argument_list|(
name|conf
argument_list|)
return|;
block|}
comment|/**    * Positive test to verify Create and delete access check    * @throws Throwable    */
annotation|@
name|Test
DECL|method|testCreateAccessCheckPositive ()
specifier|public
name|void
name|testCreateAccessCheckPositive
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Negative test to verify Create access check    * @throws Throwable    */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
DECL|method|testCreateAccessCheckNegative ()
specifier|public
name|void
name|testCreateAccessCheckNegative
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
operator|new
name|Path
argument_list|(
name|testFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Positive test to verify Create and delete access check    * @throws Throwable    */
annotation|@
name|Test
DECL|method|testListAccessCheckPositive ()
specifier|public
name|void
name|testListAccessCheckPositive
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFolder
init|=
literal|"\\"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFolder
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|listStatus
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Negative test to verify Create access check    * @throws Throwable    */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
DECL|method|testListAccessCheckNegative ()
specifier|public
name|void
name|testListAccessCheckNegative
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFolder
init|=
literal|"\\"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFolder
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|listStatus
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
block|}
comment|/**    * Positive test to verify rename access check.    * @throws Throwable    */
annotation|@
name|Test
DECL|method|testRenameAccessCheckPositive ()
specifier|public
name|void
name|testRenameAccessCheckPositive
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|String
name|renameFile
init|=
literal|"test2.dat"
decl_stmt|;
name|Path
name|renamePath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|renameFile
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|renamePath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|rename
argument_list|(
name|testPath
argument_list|,
name|renamePath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|renamePath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|renamePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Negative test to verify rename access check.    * @throws Throwable    */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
DECL|method|testRenameAccessCheckNegative ()
specifier|public
name|void
name|testRenameAccessCheckNegative
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|Path
name|renamePath
init|=
operator|new
name|Path
argument_list|(
literal|"test2.dat"
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
try|try
block|{
name|fs
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|rename
argument_list|(
name|testPath
argument_list|,
name|renamePath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|renamePath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|renamePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WasbAuthorizationException
name|ex
parameter_list|)
block|{
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|authorizer
operator|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
expr_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Positive test for read access check.    * @throws Throwable    */
annotation|@
name|Test
DECL|method|testReadAccessCheckPositive ()
specifier|public
name|void
name|testReadAccessCheckPositive
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|READ
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|inputStream
init|=
name|fs
operator|.
name|open
argument_list|(
name|testPath
argument_list|)
decl_stmt|;
name|inputStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Negative test to verify read access check.    * @throws Throwable    */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|WasbAuthorizationException
operator|.
name|class
argument_list|)
DECL|method|testReadAccessCheckNegative ()
specifier|public
name|void
name|testReadAccessCheckNegative
parameter_list|()
throws|throws
name|Throwable
block|{
name|AzureBlobStorageTestAccount
name|testAccount
init|=
name|createTestAccount
argument_list|()
decl_stmt|;
name|NativeAzureFileSystem
name|fs
init|=
name|testAccount
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|String
name|testFile
init|=
literal|"test.dat"
decl_stmt|;
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
name|fs
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|testFile
argument_list|)
decl_stmt|;
name|MockWasbAuthorizerImpl
name|authorizer
init|=
operator|new
name|MockWasbAuthorizerImpl
argument_list|()
decl_stmt|;
name|authorizer
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|WRITE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|EXECUTE
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|authorizer
operator|.
name|addAuthRule
argument_list|(
name|testPath
operator|.
name|toString
argument_list|()
argument_list|,
name|WasbAuthorizationOperations
operator|.
name|READ
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fs
operator|.
name|updateWasbAuthorizer
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
name|fs
operator|.
name|create
argument_list|(
operator|new
name|Path
argument_list|(
name|testFile
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|check
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|inputStream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|inputStream
operator|=
name|fs
operator|.
name|open
argument_list|(
operator|new
name|Path
argument_list|(
name|testFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|WasbAuthorizationException
name|ex
parameter_list|)
block|{
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
name|fs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|testFile
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|inputStream
operator|!=
literal|null
condition|)
block|{
name|inputStream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

