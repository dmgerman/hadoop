begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.services
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|services
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|AppenderSkeleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|spi
operator|.
name|LoggingEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|DependencyInjectedTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|contracts
operator|.
name|services
operator|.
name|TracingService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|MilliSpan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|htrace
operator|.
name|core
operator|.
name|TraceScope
import|;
end_import

begin_comment
comment|/**  * Test tracing service.  */
end_comment

begin_class
DECL|class|ITestTracingServiceImpl
specifier|public
class|class
name|ITestTracingServiceImpl
extends|extends
name|DependencyInjectedTest
block|{
DECL|field|messageStorage
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|messageStorage
decl_stmt|;
DECL|method|ITestTracingServiceImpl ()
specifier|public
name|ITestTracingServiceImpl
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|messageStorage
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|traceSerializationTest ()
specifier|public
name|void
name|traceSerializationTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Logger
name|rootLogger
init|=
name|Logger
operator|.
name|getRootLogger
argument_list|()
decl_stmt|;
name|rootLogger
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|TRACE
argument_list|)
expr_stmt|;
name|rootLogger
operator|.
name|addAppender
argument_list|(
operator|new
name|AppenderSkeleton
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|append
parameter_list|(
name|LoggingEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getLogger
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"AzureBlobFileSystem"
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|messageStorage
operator|.
name|add
argument_list|(
name|event
operator|.
name|getRenderedMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{        }
annotation|@
name|Override
specifier|public
name|boolean
name|requiresLayout
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|TracingService
name|tracingService
init|=
operator|new
name|TracingServiceImpl
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|TraceScope
name|traceScope
init|=
name|tracingService
operator|.
name|traceBegin
argument_list|(
literal|"Test Scope"
argument_list|)
decl_stmt|;
name|traceScope
operator|.
name|addTimelineAnnotation
argument_list|(
literal|"Timeline Annotations"
argument_list|)
expr_stmt|;
name|traceScope
operator|.
name|addKVAnnotation
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|traceScope
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// Should not throw exception.
name|MilliSpan
operator|.
name|fromJson
argument_list|(
name|messageStorage
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

