begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azurebfs.extensions
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|extensions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|AbfsConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|AbstractAbfsTestWithTimeout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|oauth2
operator|.
name|AzureADToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|oauth2
operator|.
name|CustomTokenProviderAdapter
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azurebfs
operator|.
name|extensions
operator|.
name|WrappingTokenProvider
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Test custom OAuth token providers.  * This is a unit test not an E2E integration test because that would  * require OAuth auth setup, always.  * Instead this just checks that the creation works and that everything  * is propagated.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"UseOfObsoleteDateTimeApi"
argument_list|)
DECL|class|TestCustomOauthTokenProvider
specifier|public
class|class
name|TestCustomOauthTokenProvider
extends|extends
name|AbstractAbfsTestWithTimeout
block|{
DECL|method|TestCustomOauthTokenProvider ()
specifier|public
name|TestCustomOauthTokenProvider
parameter_list|()
throws|throws
name|Exception
block|{   }
comment|/**    * If you switch to a custom provider, it is loaded and initialized.    */
annotation|@
name|Test
DECL|method|testCustomProviderBinding ()
specifier|public
name|void
name|testCustomProviderBinding
parameter_list|()
throws|throws
name|Throwable
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|WrappingTokenProvider
operator|.
name|enable
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|AbfsConfiguration
name|abfs
init|=
operator|new
name|AbfsConfiguration
argument_list|(
name|conf
argument_list|,
literal|"not-a-real-account"
argument_list|)
decl_stmt|;
name|CustomTokenProviderAdapter
name|provider
init|=
operator|(
name|CustomTokenProviderAdapter
operator|)
name|abfs
operator|.
name|getTokenProvider
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"User agent"
argument_list|,
name|INITED
argument_list|,
name|provider
operator|.
name|getUserAgentSuffix
argument_list|()
argument_list|)
expr_stmt|;
comment|// now mimic the bind call
name|ExtensionHelper
operator|.
name|bind
argument_list|(
name|provider
argument_list|,
operator|new
name|URI
argument_list|(
literal|"abfs://store@user.dfs.core.windows.net"
argument_list|)
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"User agent"
argument_list|,
name|BOUND
argument_list|,
name|ExtensionHelper
operator|.
name|getUserAgentSuffix
argument_list|(
name|provider
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|AzureADToken
name|token
init|=
name|provider
operator|.
name|getToken
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Access token propagation"
argument_list|,
name|ACCESS_TOKEN
argument_list|,
name|token
operator|.
name|getAccessToken
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|expiry
init|=
name|token
operator|.
name|getExpiry
argument_list|()
decl_stmt|;
name|long
name|time
init|=
name|expiry
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"date wrong: "
operator|+
name|expiry
argument_list|,
name|time
operator|<=
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
comment|// once closed, the UA state changes.
name|provider
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"User agent"
argument_list|,
name|CLOSED
argument_list|,
name|provider
operator|.
name|getUserAgentSuffix
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

