begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.azure
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|azure
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|test
operator|.
name|PlatformAssumptions
operator|.
name|assumeNotWindows
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSMainOperationsBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_class
DECL|class|TestNativeAzureFileSystemOperationsMocked
specifier|public
class|class
name|TestNativeAzureFileSystemOperationsMocked
extends|extends
name|FSMainOperationsBaseTest
block|{
DECL|field|TEST_ROOT_DIR
specifier|private
specifier|static
specifier|final
name|String
name|TEST_ROOT_DIR
init|=
literal|"/tmp/TestNativeAzureFileSystemOperationsMocked"
decl_stmt|;
DECL|method|TestNativeAzureFileSystemOperationsMocked ()
specifier|public
name|TestNativeAzureFileSystemOperationsMocked
parameter_list|()
block|{
name|super
argument_list|(
name|TEST_ROOT_DIR
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fSys
operator|=
name|AzureBlobStorageTestAccount
operator|.
name|createMock
argument_list|()
operator|.
name|getFileSystem
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createFileSystem ()
specifier|protected
name|FileSystem
name|createFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|AzureBlobStorageTestAccount
operator|.
name|createMock
argument_list|()
operator|.
name|getFileSystem
argument_list|()
return|;
block|}
DECL|method|testListStatusThrowsExceptionForUnreadableDir ()
specifier|public
name|void
name|testListStatusThrowsExceptionForUnreadableDir
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping testListStatusThrowsExceptionForUnreadableDir since WASB"
operator|+
literal|" doesn't honor directory permissions."
argument_list|)
expr_stmt|;
name|assumeNotWindows
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|testGlobStatusThrowsExceptionForUnreadableDir ()
specifier|public
name|void
name|testGlobStatusThrowsExceptionForUnreadableDir
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Skipping testGlobStatusThrowsExceptionForUnreadableDir since WASB"
operator|+
literal|" doesn't honor directory permissions."
argument_list|)
expr_stmt|;
name|assumeNotWindows
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTestRootDir ()
specifier|public
name|String
name|getTestRootDir
parameter_list|()
block|{
return|return
name|TEST_ROOT_DIR
return|;
block|}
annotation|@
name|Override
DECL|method|getTestRootPath (FileSystem fSys)
specifier|public
name|Path
name|getTestRootPath
parameter_list|(
name|FileSystem
name|fSys
parameter_list|)
block|{
return|return
name|fSys
operator|.
name|makeQualified
argument_list|(
operator|new
name|Path
argument_list|(
name|TEST_ROOT_DIR
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getTestRootPath (FileSystem fSys, String pathString)
specifier|public
name|Path
name|getTestRootPath
parameter_list|(
name|FileSystem
name|fSys
parameter_list|,
name|String
name|pathString
parameter_list|)
block|{
return|return
name|fSys
operator|.
name|makeQualified
argument_list|(
operator|new
name|Path
argument_list|(
name|TEST_ROOT_DIR
argument_list|,
name|pathString
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAbsoluteTestRootPath (FileSystem fSys)
specifier|public
name|Path
name|getAbsoluteTestRootPath
parameter_list|(
name|FileSystem
name|fSys
parameter_list|)
block|{
name|Path
name|testRootPath
init|=
operator|new
name|Path
argument_list|(
name|TEST_ROOT_DIR
argument_list|)
decl_stmt|;
if|if
condition|(
name|testRootPath
operator|.
name|isAbsolute
argument_list|()
condition|)
block|{
return|return
name|testRootPath
return|;
block|}
else|else
block|{
return|return
operator|new
name|Path
argument_list|(
name|fSys
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|,
name|TEST_ROOT_DIR
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

