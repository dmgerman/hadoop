begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.dynamometer.workloadgenerator.audit
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|dynamometer
operator|.
name|workloadgenerator
operator|.
name|audit
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Reducer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * AuditReplayReducer aggregates the returned latency values from  * {@link AuditReplayMapper} and sums them up by {@link UserCommandKey}, which  * combines the user's id that ran the command and the type of the command  * (READ/WRITE).  */
end_comment

begin_class
DECL|class|AuditReplayReducer
specifier|public
class|class
name|AuditReplayReducer
extends|extends
name|Reducer
argument_list|<
name|UserCommandKey
argument_list|,
name|CountTimeWritable
argument_list|,
name|UserCommandKey
argument_list|,
name|CountTimeWritable
argument_list|>
block|{
annotation|@
name|Override
DECL|method|reduce (UserCommandKey key, Iterable<CountTimeWritable> values, Context context)
specifier|protected
name|void
name|reduce
parameter_list|(
name|UserCommandKey
name|key
parameter_list|,
name|Iterable
argument_list|<
name|CountTimeWritable
argument_list|>
name|values
parameter_list|,
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|long
name|countSum
init|=
literal|0
decl_stmt|;
name|long
name|timeSum
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CountTimeWritable
name|v
range|:
name|values
control|)
block|{
name|countSum
operator|+=
name|v
operator|.
name|getCount
argument_list|()
expr_stmt|;
name|timeSum
operator|+=
name|v
operator|.
name|getTime
argument_list|()
expr_stmt|;
block|}
name|context
operator|.
name|write
argument_list|(
name|key
argument_list|,
operator|new
name|CountTimeWritable
argument_list|(
name|countSum
argument_list|,
name|timeSum
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

