begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.tools.dynamometer
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|dynamometer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|LocalResourceType
import|;
end_import

begin_class
DECL|class|DynoResource
class|class
name|DynoResource
block|{
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|type
specifier|private
specifier|final
name|LocalResourceType
name|type
decl_stmt|;
DECL|field|resourcePath
specifier|private
specifier|final
name|String
name|resourcePath
decl_stmt|;
DECL|method|DynoResource (String name, LocalResourceType type, String resourcePath)
name|DynoResource
parameter_list|(
name|String
name|name
parameter_list|,
name|LocalResourceType
name|type
parameter_list|,
name|String
name|resourcePath
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|resourcePath
operator|=
name|resourcePath
expr_stmt|;
block|}
DECL|method|getPath (Map<String, String> env)
specifier|public
name|Path
name|getPath
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
parameter_list|)
block|{
return|return
operator|new
name|Path
argument_list|(
name|env
operator|.
name|get
argument_list|(
name|getLocationEnvVar
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getTimestamp (Map<String, String> env)
specifier|public
name|long
name|getTimestamp
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
parameter_list|)
block|{
return|return
name|Long
operator|.
name|parseLong
argument_list|(
name|env
operator|.
name|get
argument_list|(
name|getTimestampEnvVar
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getLength (Map<String, String> env)
specifier|public
name|long
name|getLength
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
parameter_list|)
block|{
return|return
name|Long
operator|.
name|parseLong
argument_list|(
name|env
operator|.
name|get
argument_list|(
name|getLengthEnvVar
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getLocationEnvVar ()
specifier|public
name|String
name|getLocationEnvVar
parameter_list|()
block|{
return|return
name|name
operator|+
literal|"_LOCATION"
return|;
block|}
DECL|method|getTimestampEnvVar ()
specifier|public
name|String
name|getTimestampEnvVar
parameter_list|()
block|{
return|return
name|name
operator|+
literal|"_TIMESTAMP"
return|;
block|}
DECL|method|getLengthEnvVar ()
specifier|public
name|String
name|getLengthEnvVar
parameter_list|()
block|{
return|return
name|name
operator|+
literal|"_LENGTH"
return|;
block|}
DECL|method|getType ()
specifier|public
name|LocalResourceType
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
DECL|method|getResourcePath ()
specifier|public
name|String
name|getResourcePath
parameter_list|()
block|{
return|return
name|resourcePath
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

