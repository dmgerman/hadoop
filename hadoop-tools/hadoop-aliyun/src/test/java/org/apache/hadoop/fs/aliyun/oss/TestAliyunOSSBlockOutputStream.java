begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.aliyun.oss
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|aliyun
operator|.
name|oss
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|aliyun
operator|.
name|oss
operator|.
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_SIZE_DEFAULT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
operator|.
name|IO_CHUNK_BUFFER_SIZE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * Tests regular and multi-part upload functionality for  * AliyunOSSBlockOutputStream.  */
end_comment

begin_class
DECL|class|TestAliyunOSSBlockOutputStream
specifier|public
class|class
name|TestAliyunOSSBlockOutputStream
block|{
DECL|field|fs
specifier|private
name|FileSystem
name|fs
decl_stmt|;
DECL|field|testRootPath
specifier|private
specifier|static
name|String
name|testRootPath
init|=
name|AliyunOSSTestUtils
operator|.
name|generateUniqueTestPath
argument_list|()
decl_stmt|;
annotation|@
name|Rule
DECL|field|testTimeout
specifier|public
name|Timeout
name|testTimeout
init|=
operator|new
name|Timeout
argument_list|(
literal|30
operator|*
literal|60
operator|*
literal|1000
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|Constants
operator|.
name|MIN_MULTIPART_UPLOAD_THRESHOLD_KEY
argument_list|,
literal|5
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_SIZE_KEY
argument_list|,
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|IO_CHUNK_BUFFER_SIZE
argument_list|,
name|conf
operator|.
name|getInt
argument_list|(
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_SIZE_KEY
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|Constants
operator|.
name|UPLOAD_ACTIVE_BLOCKS_KEY
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|fs
operator|=
name|AliyunOSSTestUtils
operator|.
name|createTestFileSystem
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|fs
operator|!=
literal|null
condition|)
block|{
name|fs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|testRootPath
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getTestPath ()
specifier|private
name|Path
name|getTestPath
parameter_list|()
block|{
return|return
operator|new
name|Path
argument_list|(
name|testRootPath
operator|+
literal|"/test-aliyun-oss"
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testZeroByteUpload ()
specifier|public
name|void
name|testZeroByteUpload
parameter_list|()
throws|throws
name|IOException
block|{
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRegularUpload ()
specifier|public
name|void
name|testRegularUpload
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
operator|.
name|clearStatistics
argument_list|()
expr_stmt|;
name|long
name|size
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
name|FileSystem
operator|.
name|Statistics
name|statistics
init|=
name|FileSystem
operator|.
name|getStatistics
argument_list|(
literal|"oss"
argument_list|,
name|AliyunOSSFileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// This test is a little complicated for statistics, lifecycle is
comment|// generateTestFile
comment|//   fs.create(getFileStatus)    read 1
comment|//   output stream write         write 1
comment|// path exists(fs.exists)        read 1
comment|// verifyReceivedData
comment|//   fs.open(getFileStatus)      read 1
comment|//   input stream read           read 2(part size is 512K)
comment|// fs.delete
comment|//   getFileStatus& delete& exists& create fake dir read 2, write 2
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
operator|+
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|22
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
operator|*
name|size
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
operator|*
name|size
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiPartUpload ()
specifier|public
name|void
name|testMultiPartUpload
parameter_list|()
throws|throws
name|IOException
block|{
name|long
name|size
init|=
literal|6
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|FileSystem
operator|.
name|clearStatistics
argument_list|()
expr_stmt|;
name|FileSystem
operator|.
name|Statistics
name|statistics
init|=
name|FileSystem
operator|.
name|getStatistics
argument_list|(
literal|"oss"
argument_list|,
name|AliyunOSSFileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|*
name|size
operator|-
literal|1
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
operator|+
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|52
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
operator|*
name|size
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|25
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
operator|*
name|size
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiPartUploadConcurrent ()
specifier|public
name|void
name|testMultiPartUploadConcurrent
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
operator|.
name|clearStatistics
argument_list|()
expr_stmt|;
name|long
name|size
init|=
literal|50
operator|*
literal|1024
operator|*
literal|1024
operator|-
literal|1
decl_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|FileSystem
operator|.
name|Statistics
name|statistics
init|=
name|FileSystem
operator|.
name|getStatistics
argument_list|(
literal|"oss"
argument_list|,
name|AliyunOSSFileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|105
argument_list|,
name|statistics
operator|.
name|getReadOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|statistics
operator|.
name|getBytesRead
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|52
argument_list|,
name|statistics
operator|.
name|getWriteOps
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|size
argument_list|,
name|statistics
operator|.
name|getBytesWritten
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHugeUpload ()
specifier|public
name|void
name|testHugeUpload
parameter_list|()
throws|throws
name|IOException
block|{
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|MULTIPART_UPLOAD_PART_SIZE_DEFAULT
operator|-
literal|1
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|MULTIPART_UPLOAD_PART_SIZE_DEFAULT
argument_list|)
expr_stmt|;
name|ContractTestUtils
operator|.
name|createAndVerifyFile
argument_list|(
name|fs
argument_list|,
name|getTestPath
argument_list|()
argument_list|,
name|MULTIPART_UPLOAD_PART_SIZE_DEFAULT
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultiPartUploadLimit ()
specifier|public
name|void
name|testMultiPartUploadLimit
parameter_list|()
throws|throws
name|IOException
block|{
name|long
name|partSize1
init|=
name|AliyunOSSUtils
operator|.
name|calculatePartSize
argument_list|(
literal|10
operator|*
literal|1024
argument_list|,
literal|100
operator|*
literal|1024
argument_list|)
decl_stmt|;
assert|assert
operator|(
literal|10
operator|*
literal|1024
operator|/
name|partSize1
operator|<
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_NUM_LIMIT
operator|)
assert|;
name|long
name|partSize2
init|=
name|AliyunOSSUtils
operator|.
name|calculatePartSize
argument_list|(
literal|200
operator|*
literal|1024
argument_list|,
literal|100
operator|*
literal|1024
argument_list|)
decl_stmt|;
assert|assert
operator|(
literal|200
operator|*
literal|1024
operator|/
name|partSize2
operator|<
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_NUM_LIMIT
operator|)
assert|;
name|long
name|partSize3
init|=
name|AliyunOSSUtils
operator|.
name|calculatePartSize
argument_list|(
literal|10000
operator|*
literal|100
operator|*
literal|1024
argument_list|,
literal|100
operator|*
literal|1024
argument_list|)
decl_stmt|;
assert|assert
operator|(
literal|10000
operator|*
literal|100
operator|*
literal|1024
operator|/
name|partSize3
operator|<
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_NUM_LIMIT
operator|)
assert|;
name|long
name|partSize4
init|=
name|AliyunOSSUtils
operator|.
name|calculatePartSize
argument_list|(
literal|10001
operator|*
literal|100
operator|*
literal|1024
argument_list|,
literal|100
operator|*
literal|1024
argument_list|)
decl_stmt|;
assert|assert
operator|(
literal|10001
operator|*
literal|100
operator|*
literal|1024
operator|/
name|partSize4
operator|<
name|Constants
operator|.
name|MULTIPART_UPLOAD_PART_NUM_LIMIT
operator|)
assert|;
block|}
block|}
end_class

end_unit

