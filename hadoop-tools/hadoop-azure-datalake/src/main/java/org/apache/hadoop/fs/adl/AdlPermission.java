begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_comment
comment|/**  * Hadoop shell command -getfacl does not invoke getAclStatus if FsPermission  * from getFileStatus has not set ACL bit to true. By default getAclBit returns  * false.  *  * Provision to make additional call to invoke getAclStatus would be redundant  * when adls is running as additional FS. To avoid this redundancy, provided  * configuration to return true/false on getAclBit.  */
end_comment

begin_class
DECL|class|AdlPermission
class|class
name|AdlPermission
extends|extends
name|FsPermission
block|{
DECL|field|aclBit
specifier|private
specifier|final
name|boolean
name|aclBit
decl_stmt|;
DECL|method|AdlPermission (boolean aclBitStatus, Short aShort)
name|AdlPermission
parameter_list|(
name|boolean
name|aclBitStatus
parameter_list|,
name|Short
name|aShort
parameter_list|)
block|{
name|super
argument_list|(
name|aShort
argument_list|)
expr_stmt|;
name|this
operator|.
name|aclBit
operator|=
name|aclBitStatus
expr_stmt|;
block|}
comment|/**    * Returns true if "adl.feature.support.acl.bit" configuration is set to    * true.    *    * If configuration is not set then default value is true.    *    * @return If configuration is not set then default value is true.    */
DECL|method|getAclBit ()
specifier|public
name|boolean
name|getAclBit
parameter_list|()
block|{
return|return
name|aclBit
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|FsPermission
condition|)
block|{
name|FsPermission
name|that
init|=
operator|(
name|FsPermission
operator|)
name|obj
decl_stmt|;
return|return
name|this
operator|.
name|getUserAction
argument_list|()
operator|==
name|that
operator|.
name|getUserAction
argument_list|()
operator|&&
name|this
operator|.
name|getGroupAction
argument_list|()
operator|==
name|that
operator|.
name|getGroupAction
argument_list|()
operator|&&
name|this
operator|.
name|getOtherAction
argument_list|()
operator|==
name|that
operator|.
name|getOtherAction
argument_list|()
operator|&&
name|this
operator|.
name|getStickyBit
argument_list|()
operator|==
name|that
operator|.
name|getStickyBit
argument_list|()
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|toShort
argument_list|()
return|;
block|}
block|}
end_class

end_unit

