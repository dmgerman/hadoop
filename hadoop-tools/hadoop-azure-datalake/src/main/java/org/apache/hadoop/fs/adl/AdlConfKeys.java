begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
operator|.
name|DeprecationDelta
import|;
end_import

begin_comment
comment|/**  * Constants.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
DECL|class|AdlConfKeys
specifier|public
specifier|final
class|class
name|AdlConfKeys
block|{
comment|// OAuth2 Common Configuration
DECL|field|AZURE_AD_REFRESH_URL_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_REFRESH_URL_KEY
init|=
literal|"fs.adl.oauth2.refresh.url"
decl_stmt|;
DECL|field|AZURE_AD_ACCOUNT_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_ACCOUNT_PREFIX
init|=
literal|"fs.adl.account."
decl_stmt|;
DECL|field|AZURE_AD_PREFIX
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_PREFIX
init|=
literal|"fs.adl."
decl_stmt|;
comment|// optional when provider type is refresh or client id.
DECL|field|AZURE_AD_TOKEN_PROVIDER_CLASS_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_TOKEN_PROVIDER_CLASS_KEY
init|=
literal|"fs.adl.oauth2.access.token.provider"
decl_stmt|;
DECL|field|AZURE_AD_CLIENT_ID_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_CLIENT_ID_KEY
init|=
literal|"fs.adl.oauth2.client.id"
decl_stmt|;
DECL|field|AZURE_AD_TOKEN_PROVIDER_TYPE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_TOKEN_PROVIDER_TYPE_KEY
init|=
literal|"fs.adl.oauth2.access.token.provider.type"
decl_stmt|;
DECL|field|AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT
specifier|public
specifier|static
specifier|final
name|TokenProviderType
name|AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT
init|=
name|TokenProviderType
operator|.
name|ClientCredential
decl_stmt|;
comment|// OAuth Refresh Token Configuration
DECL|field|AZURE_AD_REFRESH_TOKEN_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_REFRESH_TOKEN_KEY
init|=
literal|"fs.adl.oauth2.refresh.token"
decl_stmt|;
DECL|field|TOKEN_PROVIDER_TYPE_REFRESH_TOKEN
specifier|public
specifier|static
specifier|final
name|String
name|TOKEN_PROVIDER_TYPE_REFRESH_TOKEN
init|=
literal|"RefreshToken"
decl_stmt|;
comment|// OAuth Client Cred Token Configuration
DECL|field|AZURE_AD_CLIENT_SECRET_KEY
specifier|public
specifier|static
specifier|final
name|String
name|AZURE_AD_CLIENT_SECRET_KEY
init|=
literal|"fs.adl.oauth2.credential"
decl_stmt|;
DECL|field|TOKEN_PROVIDER_TYPE_CLIENT_CRED
specifier|public
specifier|static
specifier|final
name|String
name|TOKEN_PROVIDER_TYPE_CLIENT_CRED
init|=
literal|"ClientCredential"
decl_stmt|;
comment|// MSI Auth Configuration
DECL|field|MSI_PORT
specifier|public
specifier|static
specifier|final
name|String
name|MSI_PORT
init|=
literal|"fs.adl.oauth2.msi.port"
decl_stmt|;
comment|// DeviceCode Auth configuration
DECL|field|DEVICE_CODE_CLIENT_APP_ID
specifier|public
specifier|static
specifier|final
name|String
name|DEVICE_CODE_CLIENT_APP_ID
init|=
literal|"fs.adl.oauth2.devicecode.clientapp.id"
decl_stmt|;
DECL|field|READ_AHEAD_BUFFER_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|READ_AHEAD_BUFFER_SIZE_KEY
init|=
literal|"adl.feature.client.cache.readahead"
decl_stmt|;
DECL|field|WRITE_BUFFER_SIZE_KEY
specifier|public
specifier|static
specifier|final
name|String
name|WRITE_BUFFER_SIZE_KEY
init|=
literal|"adl.feature.client.cache.drop.behind.writes"
decl_stmt|;
DECL|field|SECURE_TRANSPORT_SCHEME
specifier|static
specifier|final
name|String
name|SECURE_TRANSPORT_SCHEME
init|=
literal|"https"
decl_stmt|;
DECL|field|INSECURE_TRANSPORT_SCHEME
specifier|static
specifier|final
name|String
name|INSECURE_TRANSPORT_SCHEME
init|=
literal|"http"
decl_stmt|;
DECL|field|ADL_DEBUG_OVERRIDE_LOCAL_USER_AS_OWNER
specifier|static
specifier|final
name|String
name|ADL_DEBUG_OVERRIDE_LOCAL_USER_AS_OWNER
init|=
literal|"adl.debug.override.localuserasfileowner"
decl_stmt|;
DECL|field|ADL_DEBUG_SET_LOCAL_USER_AS_OWNER_DEFAULT
specifier|static
specifier|final
name|boolean
name|ADL_DEBUG_SET_LOCAL_USER_AS_OWNER_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|ADL_BLOCK_SIZE
specifier|static
specifier|final
name|long
name|ADL_BLOCK_SIZE
init|=
literal|256
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|ADL_REPLICATION_FACTOR
specifier|static
specifier|final
name|int
name|ADL_REPLICATION_FACTOR
init|=
literal|1
decl_stmt|;
DECL|field|ADL_HADOOP_CLIENT_NAME
specifier|static
specifier|final
name|String
name|ADL_HADOOP_CLIENT_NAME
init|=
literal|"hadoop-azure-datalake-"
decl_stmt|;
DECL|field|ADL_HADOOP_CLIENT_VERSION
specifier|static
specifier|final
name|String
name|ADL_HADOOP_CLIENT_VERSION
init|=
literal|"2.0.0-SNAPSHOT"
decl_stmt|;
DECL|field|ADL_EVENTS_TRACKING_CLUSTERNAME
specifier|static
specifier|final
name|String
name|ADL_EVENTS_TRACKING_CLUSTERNAME
init|=
literal|"adl.events.tracking.clustername"
decl_stmt|;
DECL|field|ADL_EVENTS_TRACKING_CLUSTERTYPE
specifier|static
specifier|final
name|String
name|ADL_EVENTS_TRACKING_CLUSTERTYPE
init|=
literal|"adl.events.tracking.clustertype"
decl_stmt|;
DECL|field|DEFAULT_READ_AHEAD_BUFFER_SIZE
specifier|static
specifier|final
name|int
name|DEFAULT_READ_AHEAD_BUFFER_SIZE
init|=
literal|4
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|DEFAULT_WRITE_AHEAD_BUFFER_SIZE
specifier|static
specifier|final
name|int
name|DEFAULT_WRITE_AHEAD_BUFFER_SIZE
init|=
literal|4
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
DECL|field|LATENCY_TRACKER_KEY
specifier|static
specifier|final
name|String
name|LATENCY_TRACKER_KEY
init|=
literal|"adl.enable.client.latency.tracker"
decl_stmt|;
DECL|field|LATENCY_TRACKER_DEFAULT
specifier|static
specifier|final
name|boolean
name|LATENCY_TRACKER_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|ADL_EXPERIMENT_POSITIONAL_READ_KEY
specifier|static
specifier|final
name|String
name|ADL_EXPERIMENT_POSITIONAL_READ_KEY
init|=
literal|"adl.feature.experiment.positional.read.enable"
decl_stmt|;
DECL|field|ADL_EXPERIMENT_POSITIONAL_READ_DEFAULT
specifier|static
specifier|final
name|boolean
name|ADL_EXPERIMENT_POSITIONAL_READ_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|ADL_SUPPORT_ACL_BIT_IN_FSPERMISSION
specifier|static
specifier|final
name|String
name|ADL_SUPPORT_ACL_BIT_IN_FSPERMISSION
init|=
literal|"adl.feature.support.acl.bit"
decl_stmt|;
DECL|field|ADL_SUPPORT_ACL_BIT_IN_FSPERMISSION_DEFAULT
specifier|static
specifier|final
name|boolean
name|ADL_SUPPORT_ACL_BIT_IN_FSPERMISSION_DEFAULT
init|=
literal|true
decl_stmt|;
DECL|field|ADL_ENABLEUPN_FOR_OWNERGROUP_KEY
specifier|static
specifier|final
name|String
name|ADL_ENABLEUPN_FOR_OWNERGROUP_KEY
init|=
literal|"adl.feature.ownerandgroup.enableupn"
decl_stmt|;
DECL|field|ADL_ENABLEUPN_FOR_OWNERGROUP_DEFAULT
specifier|static
specifier|final
name|boolean
name|ADL_ENABLEUPN_FOR_OWNERGROUP_DEFAULT
init|=
literal|false
decl_stmt|;
DECL|field|ADL_HTTP_TIMEOUT
specifier|public
specifier|static
specifier|final
name|String
name|ADL_HTTP_TIMEOUT
init|=
literal|"adl.http.timeout"
decl_stmt|;
DECL|method|addDeprecatedKeys ()
specifier|public
specifier|static
name|void
name|addDeprecatedKeys
parameter_list|()
block|{
name|Configuration
operator|.
name|addDeprecations
argument_list|(
operator|new
name|DeprecationDelta
index|[]
block|{
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.access.token.provider.type"
argument_list|,
name|AZURE_AD_TOKEN_PROVIDER_TYPE_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.client.id"
argument_list|,
name|AZURE_AD_CLIENT_ID_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.refresh.token"
argument_list|,
name|AZURE_AD_REFRESH_TOKEN_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.refresh.url"
argument_list|,
name|AZURE_AD_REFRESH_URL_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.credential"
argument_list|,
name|AZURE_AD_CLIENT_SECRET_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"dfs.adls.oauth2.access.token.provider"
argument_list|,
name|AZURE_AD_TOKEN_PROVIDER_CLASS_KEY
argument_list|)
block|,
operator|new
name|DeprecationDelta
argument_list|(
literal|"adl.dfs.enable.client.latency.tracker"
argument_list|,
name|LATENCY_TRACKER_KEY
argument_list|)
block|}
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|reloadExistingConfigurations
argument_list|()
expr_stmt|;
block|}
DECL|method|AdlConfKeys ()
specifier|private
name|AdlConfKeys
parameter_list|()
block|{   }
block|}
end_class

end_unit

