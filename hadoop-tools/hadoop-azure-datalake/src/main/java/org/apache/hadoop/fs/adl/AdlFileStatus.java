begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|datalake
operator|.
name|store
operator|.
name|DirectoryEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|microsoft
operator|.
name|azure
operator|.
name|datalake
operator|.
name|store
operator|.
name|DirectoryEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|AdlConfKeys
operator|.
name|ADL_BLOCK_SIZE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|AdlConfKeys
operator|.
name|ADL_REPLICATION_FACTOR
import|;
end_import

begin_comment
comment|/**  * Shim class supporting linking against 2.x clients.  */
end_comment

begin_class
DECL|class|AdlFileStatus
class|class
name|AdlFileStatus
extends|extends
name|FileStatus
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0x01fcbe5e
decl_stmt|;
DECL|field|hasAcl
specifier|private
name|boolean
name|hasAcl
init|=
literal|false
decl_stmt|;
DECL|method|AdlFileStatus (DirectoryEntry entry, Path path, boolean hasAcl)
name|AdlFileStatus
parameter_list|(
name|DirectoryEntry
name|entry
parameter_list|,
name|Path
name|path
parameter_list|,
name|boolean
name|hasAcl
parameter_list|)
block|{
name|this
argument_list|(
name|entry
argument_list|,
name|path
argument_list|,
name|entry
operator|.
name|user
argument_list|,
name|entry
operator|.
name|group
argument_list|,
name|hasAcl
argument_list|)
expr_stmt|;
block|}
DECL|method|AdlFileStatus (DirectoryEntry entry, Path path, String owner, String group, boolean hasAcl)
name|AdlFileStatus
parameter_list|(
name|DirectoryEntry
name|entry
parameter_list|,
name|Path
name|path
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|boolean
name|hasAcl
parameter_list|)
block|{
name|super
argument_list|(
name|entry
operator|.
name|length
argument_list|,
name|DirectoryEntryType
operator|.
name|DIRECTORY
operator|==
name|entry
operator|.
name|type
argument_list|,
name|ADL_REPLICATION_FACTOR
argument_list|,
name|ADL_BLOCK_SIZE
argument_list|,
name|entry
operator|.
name|lastModifiedTime
operator|.
name|getTime
argument_list|()
argument_list|,
name|entry
operator|.
name|lastAccessTime
operator|.
name|getTime
argument_list|()
argument_list|,
operator|new
name|AdlPermission
argument_list|(
name|hasAcl
argument_list|,
name|Short
operator|.
name|parseShort
argument_list|(
name|entry
operator|.
name|permission
argument_list|,
literal|8
argument_list|)
argument_list|)
argument_list|,
name|owner
argument_list|,
name|group
argument_list|,
literal|null
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|this
operator|.
name|hasAcl
operator|=
name|hasAcl
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hasAcl ()
specifier|public
name|boolean
name|hasAcl
parameter_list|()
block|{
return|return
name|hasAcl
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
comment|// satisfy findbugs
return|return
name|super
operator|.
name|equals
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
comment|// satisfy findbugs
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

