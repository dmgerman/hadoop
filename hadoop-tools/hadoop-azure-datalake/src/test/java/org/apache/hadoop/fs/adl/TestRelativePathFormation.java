begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|AdlConfKeys
operator|.
name|AZURE_AD_TOKEN_PROVIDER_CLASS_KEY
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|AdlConfKeys
operator|.
name|AZURE_AD_TOKEN_PROVIDER_TYPE_KEY
import|;
end_import

begin_comment
comment|/**  * This class verifies path conversion to SDK.  */
end_comment

begin_class
DECL|class|TestRelativePathFormation
specifier|public
class|class
name|TestRelativePathFormation
block|{
annotation|@
name|Test
DECL|method|testToRelativePath ()
specifier|public
name|void
name|testToRelativePath
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|AdlFileSystem
name|fs
init|=
operator|new
name|AdlFileSystem
argument_list|()
decl_stmt|;
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|configuration
operator|.
name|setEnum
argument_list|(
name|AZURE_AD_TOKEN_PROVIDER_TYPE_KEY
argument_list|,
name|TokenProviderType
operator|.
name|Custom
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|AZURE_AD_TOKEN_PROVIDER_CLASS_KEY
argument_list|,
literal|"org.apache.hadoop.fs.adl.common.CustomMockTokenProvider"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|initialize
argument_list|(
operator|new
name|URI
argument_list|(
literal|"adl://temp.account.net"
argument_list|)
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"adl://temp.account.net/usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// When working directory is set.
name|fs
operator|.
name|setWorkingDirectory
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/a/b/"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/a/b/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"adl://temp.account.net/usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/usr"
argument_list|,
name|fs
operator|.
name|toRelativeFilePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"wasb://temp.account.net/usr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

