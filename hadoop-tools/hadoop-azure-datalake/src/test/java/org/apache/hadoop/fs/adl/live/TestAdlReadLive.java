begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl.live
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|live
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Verify different data segment size read from the file to ensure the  * integrity and order of the data over  * BufferManger and BatchByteArrayInputStream implementation.  */
end_comment

begin_class
DECL|class|TestAdlReadLive
specifier|public
class|class
name|TestAdlReadLive
block|{
DECL|field|expectedData
specifier|private
name|String
name|expectedData
init|=
literal|"1234567890abcdefghijklmnopqrstuvwxyz"
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|AdlStorageConfiguration
operator|.
name|isContractTestEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getFileSystem ()
specifier|private
name|FileSystem
name|getFileSystem
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
return|return
name|AdlStorageConfiguration
operator|.
name|createAdlStorageConnector
argument_list|()
return|;
block|}
DECL|method|setupFile (Path path)
specifier|private
name|void
name|setupFile
parameter_list|(
name|Path
name|path
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|setupFile
argument_list|(
name|path
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
block|}
DECL|method|setupFile (Path path, String data)
specifier|private
name|void
name|setupFile
parameter_list|(
name|Path
name|path
parameter_list|,
name|String
name|data
parameter_list|)
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|expectedData
operator|=
name|data
expr_stmt|;
name|FileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FSDataOutputStream
name|fdis
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|fdis
operator|.
name|writeBytes
argument_list|(
name|expectedData
argument_list|)
expr_stmt|;
name|fdis
operator|.
name|close
argument_list|()
expr_stmt|;
name|fs
operator|.
name|listStatus
argument_list|(
name|path
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|actualLen
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
operator|.
name|getLen
argument_list|()
decl_stmt|;
name|long
name|expectedLen
init|=
name|expectedData
operator|.
name|length
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|" Length of file : "
operator|+
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
operator|.
name|getLen
argument_list|()
operator|+
literal|" "
operator|+
name|fs
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedLen
argument_list|,
name|actualLen
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
DECL|method|testOpenReadMoreThanAvailableBufferCrashFixIndexOutOfBoundsException ()
name|testOpenReadMoreThanAvailableBufferCrashFixIndexOutOfBoundsException
parameter_list|()
throws|throws
name|Throwable
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test1"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fs
operator|.
name|delete
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|FSDataOutputStream
name|outputStream
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
specifier|final
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|24
operator|*
literal|1024
operator|*
literal|1024
index|]
decl_stmt|;
name|Random
name|ran
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|ran
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|outputStream
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|byte
index|[]
name|expected
init|=
operator|new
name|byte
index|[
literal|4
operator|*
literal|1024
operator|*
literal|1024
index|]
decl_stmt|;
name|bb
operator|.
name|read
argument_list|()
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|16711581
argument_list|,
name|expected
argument_list|,
literal|33
argument_list|,
literal|65640
argument_list|)
expr_stmt|;
comment|// BugFix : Was causing crash IndexOutOfBoundsException
name|bb
operator|.
name|seek
argument_list|(
literal|16711581
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|16711576
argument_list|,
name|expected
argument_list|,
literal|33
argument_list|,
literal|65640
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|16711578
argument_list|,
name|expected
argument_list|,
literal|33
argument_list|,
literal|65640
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|16711580
argument_list|,
name|expected
argument_list|,
literal|33
argument_list|,
literal|65640
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|16711576
argument_list|,
name|expected
argument_list|,
literal|0
argument_list|,
name|expected
operator|.
name|length
argument_list|)
expr_stmt|;
name|bb
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|byte
index|[
literal|134144
index|]
expr_stmt|;
while|while
condition|(
name|bb
operator|.
name|read
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
continue|continue;
block|}
name|bb
operator|.
name|readFully
argument_list|(
literal|0
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readNullData ()
specifier|public
name|void
name|readNullData
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|String
name|data
init|=
literal|"SPL   \u0001Lorg.apache.hadoop.examples.terasort"
operator|+
literal|".TeraGen$RangeInputFormat$RangeInputSplit \u008DLK@Lorg.apache"
operator|+
literal|".hadoop.examples.terasort"
operator|+
literal|".TeraGen$RangeInputFormat$RangeInputSplit\u008DLK@\u008DLK@"
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test4"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|String
name|actualData
init|=
operator|new
name|String
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Data Length :"
operator|+
name|expectedData
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|arr
init|=
operator|new
name|byte
index|[
name|data
operator|.
name|length
argument_list|()
index|]
decl_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|0
argument_list|,
name|arr
argument_list|)
expr_stmt|;
name|actualData
operator|=
operator|new
name|String
argument_list|(
name|arr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|" Data : "
operator|+
name|actualData
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|actualData
operator|.
name|length
argument_list|()
argument_list|,
name|expectedData
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|arr
operator|=
operator|new
name|byte
index|[
name|data
operator|.
name|length
argument_list|()
operator|-
literal|7
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|7
argument_list|,
name|arr
argument_list|)
expr_stmt|;
name|actualData
operator|=
operator|new
name|String
argument_list|(
name|arr
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|actualData
operator|.
name|length
argument_list|()
argument_list|,
name|expectedData
operator|.
name|length
argument_list|()
operator|-
literal|7
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readTest ()
specifier|public
name|void
name|readTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test4"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|String
name|actualData
init|=
operator|new
name|String
argument_list|()
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|c
init|=
name|bb
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|c
operator|<
literal|0
condition|)
block|{
break|break;
block|}
name|actualData
operator|+=
operator|(
name|char
operator|)
name|c
expr_stmt|;
block|}
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
literal|100
index|]
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|(
name|b
argument_list|,
literal|9
argument_list|,
literal|91
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|bb
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|actualData
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|100
condition|;
operator|++
name|j
control|)
block|{
name|fs
operator|=
name|this
operator|.
name|getFileSystem
argument_list|()
expr_stmt|;
name|fs
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/test"
operator|+
name|j
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|readByteTest ()
specifier|public
name|void
name|readByteTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test3"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|expectedData
operator|.
name|length
argument_list|()
index|]
decl_stmt|;
name|int
name|readByte
init|=
name|bb
operator|.
name|read
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|readByte
argument_list|,
name|expectedData
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readByteFullyTest ()
specifier|public
name|void
name|readByteFullyTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test2"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|expectedData
operator|.
name|length
argument_list|()
index|]
decl_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
name|bb
operator|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readCombinationTest ()
specifier|public
name|void
name|readCombinationTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/test1"
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|setupFile
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|5
index|]
decl_stmt|;
name|int
name|readByte
init|=
name|bb
operator|.
name|read
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
operator|.
name|substring
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|bb
operator|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|5
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
operator|.
name|substring
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|bb
operator|.
name|read
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|)
argument_list|,
name|expectedData
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|bb
operator|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|bb
operator|.
name|read
argument_list|(
operator|new
name|byte
index|[
literal|100
index|]
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readMultiSeekTest ()
specifier|public
name|void
name|readMultiSeekTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/delete14/"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
specifier|final
name|byte
index|[]
name|actualData
init|=
operator|new
name|byte
index|[
literal|3267397
index|]
decl_stmt|;
name|Random
name|ran
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|ran
operator|.
name|nextBytes
argument_list|(
name|actualData
argument_list|)
expr_stmt|;
name|byte
index|[]
name|testData
init|=
literal|null
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FSDataOutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
name|actualData
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|16384
index|]
decl_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|3251013
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|16384
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|16384
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|3251013
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|16384
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|1921
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|3265476
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|1921
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|1921
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|3265476
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|1921
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|3267394
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|3
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|3267394
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|3267394
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|3
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|3267394
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|3266943
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|454
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|3266943
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|3266943
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|454
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|3266943
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|3265320
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|2077
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|3265320
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|3265320
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|2077
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|3265320
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|bb
operator|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|3263262
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|4135
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|3263262
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|3263262
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|4135
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|3263262
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|2992591
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|274806
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|2992591
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|2992591
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|274806
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|2992591
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|1985665
index|]
expr_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|1281732
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|1985665
argument_list|)
expr_stmt|;
name|testData
operator|=
operator|new
name|byte
index|[
literal|1985665
index|]
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|actualData
argument_list|,
literal|1281732
argument_list|,
name|testData
argument_list|,
literal|0
argument_list|,
literal|1985665
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|testData
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|byte
index|[
literal|3267394
index|]
expr_stmt|;
try|try
block|{
name|bb
operator|.
name|readFully
argument_list|(
literal|2420207
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
literal|3267394
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"EOF expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{     }
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|allASCIICharTest ()
specifier|public
name|void
name|allASCIICharTest
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"/delete14/"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|this
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
specifier|final
name|byte
index|[]
name|actualData
init|=
operator|new
name|byte
index|[
literal|127
index|]
decl_stmt|;
for|for
control|(
name|byte
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|127
condition|;
operator|++
name|i
control|)
block|{
name|actualData
index|[
name|i
index|]
operator|=
name|i
expr_stmt|;
block|}
name|fs
operator|.
name|delete
argument_list|(
name|path
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FSDataOutputStream
name|os
init|=
name|fs
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
name|actualData
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|FSDataInputStream
name|bb
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|127
index|]
decl_stmt|;
name|bb
operator|.
name|readFully
argument_list|(
literal|0
argument_list|,
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|data
argument_list|,
name|actualData
argument_list|)
expr_stmt|;
name|bb
operator|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|int
name|byteRead
init|=
literal|1
decl_stmt|;
while|while
condition|(
name|bb
operator|.
name|read
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|byteRead
operator|++
expr_stmt|;
block|}
name|bb
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|byteRead
operator|=
literal|1
expr_stmt|;
while|while
condition|(
name|bb
operator|.
name|read
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|byteRead
operator|++
expr_stmt|;
block|}
name|bb
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

