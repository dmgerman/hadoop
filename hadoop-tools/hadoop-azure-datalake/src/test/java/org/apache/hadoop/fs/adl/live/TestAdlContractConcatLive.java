begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl.live
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|live
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|AbstractContractConcatTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|AbstractFSContract
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|contract
operator|.
name|ContractTestUtils
operator|.
name|touch
import|;
end_import

begin_comment
comment|/**  * Test concat on Adl file system.  */
end_comment

begin_class
DECL|class|TestAdlContractConcatLive
specifier|public
class|class
name|TestAdlContractConcatLive
extends|extends
name|AbstractContractConcatTest
block|{
annotation|@
name|Override
DECL|method|createContract (Configuration configuration)
specifier|protected
name|AbstractFSContract
name|createContract
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
block|{
return|return
operator|new
name|AdlStorageContract
argument_list|(
name|configuration
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testConcatMissingTarget ()
specifier|public
name|void
name|testConcatMissingTarget
parameter_list|()
throws|throws
name|Throwable
block|{
name|Path
name|testPath
init|=
name|path
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Path
name|zeroByteFile
init|=
operator|new
name|Path
argument_list|(
name|testPath
argument_list|,
literal|"zero.txt"
argument_list|)
decl_stmt|;
name|Path
name|target
init|=
operator|new
name|Path
argument_list|(
name|testPath
argument_list|,
literal|"target"
argument_list|)
decl_stmt|;
name|touch
argument_list|(
name|getFileSystem
argument_list|()
argument_list|,
name|zeroByteFile
argument_list|)
expr_stmt|;
comment|// Concat on missing target is allowed on Adls file system.
name|getFileSystem
argument_list|()
operator|.
name|concat
argument_list|(
name|target
argument_list|,
operator|new
name|Path
index|[]
block|{
name|zeroByteFile
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

