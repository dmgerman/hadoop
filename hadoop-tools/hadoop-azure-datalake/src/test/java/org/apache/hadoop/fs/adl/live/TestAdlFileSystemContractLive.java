begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl.live
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|live
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystemContractBaseTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Verify Adls adhere to Hadoop file system semantics.  */
end_comment

begin_class
DECL|class|TestAdlFileSystemContractLive
specifier|public
class|class
name|TestAdlFileSystemContractLive
extends|extends
name|FileSystemContractBaseTest
block|{
DECL|field|adlStore
specifier|private
name|FileSystem
name|adlStore
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|adlStore
operator|=
name|AdlStorageConfiguration
operator|.
name|createAdlStorageConnector
argument_list|()
expr_stmt|;
if|if
condition|(
name|AdlStorageConfiguration
operator|.
name|isContractTestEnabled
argument_list|()
condition|)
block|{
name|fs
operator|=
name|adlStore
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|tearDown ()
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|AdlStorageConfiguration
operator|.
name|isContractTestEnabled
argument_list|()
condition|)
block|{
name|cleanup
argument_list|()
expr_stmt|;
name|adlStore
operator|=
literal|null
expr_stmt|;
name|fs
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|cleanup ()
specifier|private
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
name|adlStore
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/test"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|runTest ()
specifier|protected
name|void
name|runTest
parameter_list|()
throws|throws
name|Throwable
block|{
if|if
condition|(
name|AdlStorageConfiguration
operator|.
name|isContractTestEnabled
argument_list|()
condition|)
block|{
name|super
operator|.
name|runTest
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testGetFileStatus ()
specifier|public
name|void
name|testGetFileStatus
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|AdlStorageConfiguration
operator|.
name|isContractTestEnabled
argument_list|()
condition|)
block|{
return|return;
block|}
name|Path
name|testPath
init|=
operator|new
name|Path
argument_list|(
literal|"/test/adltest"
argument_list|)
decl_stmt|;
if|if
condition|(
name|adlStore
operator|.
name|exists
argument_list|(
name|testPath
argument_list|)
condition|)
block|{
name|adlStore
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|adlStore
operator|.
name|create
argument_list|(
name|testPath
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|adlStore
operator|.
name|delete
argument_list|(
name|testPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * The following tests are failing on Azure Data Lake and the Azure Data Lake    * file system code needs to be modified to make them pass.    * A separate work item has been opened for this.    */
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testMkdirsFailsForSubdirectoryOfExistingFile ()
specifier|public
name|void
name|testMkdirsFailsForSubdirectoryOfExistingFile
parameter_list|()
throws|throws
name|Exception
block|{
comment|// BUG : Adl should return exception instead of false.
block|}
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testMkdirsWithUmask ()
specifier|public
name|void
name|testMkdirsWithUmask
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Support under implementation in Adl
block|}
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testMoveFileUnderParent ()
specifier|public
name|void
name|testMoveFileUnderParent
parameter_list|()
throws|throws
name|Exception
block|{
comment|// BUG: Adl server should return expected status code.
block|}
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testRenameFileToSelf ()
specifier|public
name|void
name|testRenameFileToSelf
parameter_list|()
throws|throws
name|Exception
block|{
comment|// BUG: Adl server should return expected status code.
block|}
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testRenameToDirWithSamePrefixAllowed ()
specifier|public
name|void
name|testRenameToDirWithSamePrefixAllowed
parameter_list|()
throws|throws
name|Exception
block|{
comment|// BUG: Adl server should return expected status code.
block|}
block|}
end_class

end_unit

