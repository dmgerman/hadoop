begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.adl.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|common
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|adl
operator|.
name|oauth2
operator|.
name|AzureADTokenProvider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_comment
comment|/**  * Custom token management without cache enabled.  */
end_comment

begin_class
DECL|class|CustomMockTokenProvider
specifier|public
class|class
name|CustomMockTokenProvider
extends|extends
name|AzureADTokenProvider
block|{
DECL|field|random
specifier|private
name|Random
name|random
decl_stmt|;
DECL|field|expiryTime
specifier|private
name|long
name|expiryTime
decl_stmt|;
DECL|field|accessTokenRequestCount
specifier|private
name|int
name|accessTokenRequestCount
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
DECL|method|initialize (Configuration configuration)
specifier|public
name|void
name|initialize
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
throws|throws
name|IOException
block|{
name|random
operator|=
operator|new
name|Random
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAccessToken ()
specifier|public
name|String
name|getAccessToken
parameter_list|()
throws|throws
name|IOException
block|{
name|accessTokenRequestCount
operator|++
expr_stmt|;
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|random
operator|.
name|nextInt
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getExpiryTime ()
specifier|public
name|Date
name|getExpiryTime
parameter_list|()
block|{
name|Date
name|before10Min
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|before10Min
operator|.
name|setTime
argument_list|(
name|expiryTime
argument_list|)
expr_stmt|;
return|return
name|before10Min
return|;
block|}
DECL|method|setExpiryTimeInMillisAfter (long timeInMillis)
specifier|public
name|void
name|setExpiryTimeInMillisAfter
parameter_list|(
name|long
name|timeInMillis
parameter_list|)
block|{
name|expiryTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|timeInMillis
expr_stmt|;
block|}
DECL|method|getAccessTokenRequestCount ()
specifier|public
name|int
name|getAccessTokenRequestCount
parameter_list|()
block|{
return|return
name|accessTokenRequestCount
return|;
block|}
block|}
end_class

end_unit

