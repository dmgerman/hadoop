begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.common
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|common
package|;
end_package

begin_import
import|import
name|com
operator|.
name|squareup
operator|.
name|okhttp
operator|.
name|mockwebserver
operator|.
name|MockResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_comment
comment|/**  * Supporting class to hold expected MockResponse object along with parameters  * for validation in test methods.  */
end_comment

begin_class
DECL|class|ExpectedResponse
specifier|public
class|class
name|ExpectedResponse
block|{
DECL|field|response
specifier|private
name|MockResponse
name|response
decl_stmt|;
DECL|field|expectedQueryParameters
specifier|private
name|ArrayList
argument_list|<
name|String
argument_list|>
name|expectedQueryParameters
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|expectedBodySize
specifier|private
name|int
name|expectedBodySize
decl_stmt|;
DECL|field|httpRequestType
specifier|private
name|String
name|httpRequestType
decl_stmt|;
DECL|method|getExpectedBodySize ()
specifier|public
name|int
name|getExpectedBodySize
parameter_list|()
block|{
return|return
name|expectedBodySize
return|;
block|}
DECL|method|getHttpRequestType ()
specifier|public
name|String
name|getHttpRequestType
parameter_list|()
block|{
return|return
name|httpRequestType
return|;
block|}
DECL|method|getExpectedQueryParameters ()
specifier|public
name|ArrayList
argument_list|<
name|String
argument_list|>
name|getExpectedQueryParameters
parameter_list|()
block|{
return|return
name|expectedQueryParameters
return|;
block|}
DECL|method|getResponse ()
specifier|public
name|MockResponse
name|getResponse
parameter_list|()
block|{
return|return
name|response
return|;
block|}
DECL|method|set (MockResponse mockResponse)
name|ExpectedResponse
name|set
parameter_list|(
name|MockResponse
name|mockResponse
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
name|mockResponse
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addExpectedQueryParam (String param)
name|ExpectedResponse
name|addExpectedQueryParam
parameter_list|(
name|String
name|param
parameter_list|)
block|{
name|expectedQueryParameters
operator|.
name|add
argument_list|(
name|param
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addExpectedBodySize (int bodySize)
name|ExpectedResponse
name|addExpectedBodySize
parameter_list|(
name|int
name|bodySize
parameter_list|)
block|{
name|this
operator|.
name|expectedBodySize
operator|=
name|bodySize
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addExpectedHttpRequestType (String expectedHttpRequestType)
name|ExpectedResponse
name|addExpectedHttpRequestType
parameter_list|(
name|String
name|expectedHttpRequestType
parameter_list|)
block|{
name|this
operator|.
name|httpRequestType
operator|=
name|expectedHttpRequestType
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

