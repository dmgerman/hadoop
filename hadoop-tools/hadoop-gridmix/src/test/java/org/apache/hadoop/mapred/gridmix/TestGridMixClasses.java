begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.mapred.gridmix
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|CustomOutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|PositionedReadable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Seekable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataInputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|NullWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|RawComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RawKeyValueIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
operator|.
name|GridmixKey
operator|.
name|Spec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
operator|.
name|SleepJob
operator|.
name|SleepReducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|gridmix
operator|.
name|SleepJob
operator|.
name|SleepSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Counter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MRJobConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|MapContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|ReduceContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|StatusReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Mapper
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|counters
operator|.
name|GenericCounter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
operator|.
name|CombineFileSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|map
operator|.
name|WrappedMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|reduce
operator|.
name|WrappedReducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|MapContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|ReduceContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|TaskAttemptContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|task
operator|.
name|TaskAttemptContextImpl
operator|.
name|DummyReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|JobStory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|JobStoryProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|ResourceUsageMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|tools
operator|.
name|rumen
operator|.
name|ZombieJobProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
DECL|class|TestGridMixClasses
specifier|public
class|class
name|TestGridMixClasses
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestGridMixClasses
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/*    * simple test LoadSplit (getters,copy, write, read...)    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|testLoadSplit ()
specifier|public
name|void
name|testLoadSplit
parameter_list|()
throws|throws
name|Exception
block|{
name|LoadSplit
name|test
init|=
name|getLoadSplit
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|data
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|test
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|LoadSplit
name|copy
init|=
operator|new
name|LoadSplit
argument_list|()
decl_stmt|;
name|copy
operator|.
name|readFields
argument_list|(
operator|new
name|DataInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// data should be the same
name|assertEquals
argument_list|(
name|test
operator|.
name|getId
argument_list|()
argument_list|,
name|copy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getMapCount
argument_list|()
argument_list|,
name|copy
operator|.
name|getMapCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getInputRecords
argument_list|()
argument_list|,
name|copy
operator|.
name|getInputRecords
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getOutputBytes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|copy
operator|.
name|getOutputBytes
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getOutputRecords
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|copy
operator|.
name|getOutputRecords
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getReduceBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|copy
operator|.
name|getReduceBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getReduceRecords
argument_list|(
literal|0
argument_list|)
argument_list|,
name|copy
operator|.
name|getReduceRecords
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getMapResourceUsageMetrics
argument_list|()
operator|.
name|getCumulativeCpuUsage
argument_list|()
argument_list|,
name|copy
operator|.
name|getMapResourceUsageMetrics
argument_list|()
operator|.
name|getCumulativeCpuUsage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getReduceResourceUsageMetrics
argument_list|(
literal|0
argument_list|)
operator|.
name|getCumulativeCpuUsage
argument_list|()
argument_list|,
name|copy
operator|.
name|getReduceResourceUsageMetrics
argument_list|(
literal|0
argument_list|)
operator|.
name|getCumulativeCpuUsage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*    * simple test GridmixSplit (copy, getters, write, read..)    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|1000
argument_list|)
DECL|method|testGridmixSplit ()
specifier|public
name|void
name|testGridmixSplit
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
index|[]
name|files
init|=
block|{
operator|new
name|Path
argument_list|(
literal|"one"
argument_list|)
block|,
operator|new
name|Path
argument_list|(
literal|"two"
argument_list|)
block|}
decl_stmt|;
name|long
index|[]
name|start
init|=
block|{
literal|1
block|,
literal|2
block|}
decl_stmt|;
name|long
index|[]
name|lengths
init|=
block|{
literal|100
block|,
literal|200
block|}
decl_stmt|;
name|String
index|[]
name|locations
init|=
block|{
literal|"locOne"
block|,
literal|"loctwo"
block|}
decl_stmt|;
name|CombineFileSplit
name|cfSplit
init|=
operator|new
name|CombineFileSplit
argument_list|(
name|files
argument_list|,
name|start
argument_list|,
name|lengths
argument_list|,
name|locations
argument_list|)
decl_stmt|;
name|ResourceUsageMetrics
name|metrics
init|=
operator|new
name|ResourceUsageMetrics
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|setCumulativeCpuUsage
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|double
index|[]
name|reduceBytes
init|=
block|{
literal|8.1d
block|,
literal|8.2d
block|}
decl_stmt|;
name|double
index|[]
name|reduceRecords
init|=
block|{
literal|9.1d
block|,
literal|9.2d
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputBytes
init|=
block|{
literal|101L
block|,
literal|102L
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputRecords
init|=
block|{
literal|111L
block|,
literal|112L
block|}
decl_stmt|;
name|GridmixSplit
name|test
init|=
operator|new
name|GridmixSplit
argument_list|(
name|cfSplit
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4L
argument_list|,
literal|5L
argument_list|,
literal|6L
argument_list|,
literal|7L
argument_list|,
name|reduceBytes
argument_list|,
name|reduceRecords
argument_list|,
name|reduceOutputBytes
argument_list|,
name|reduceOutputRecords
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|data
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|test
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|GridmixSplit
name|copy
init|=
operator|new
name|GridmixSplit
argument_list|()
decl_stmt|;
name|copy
operator|.
name|readFields
argument_list|(
operator|new
name|DataInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// data should be the same
name|assertEquals
argument_list|(
name|test
operator|.
name|getId
argument_list|()
argument_list|,
name|copy
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getMapCount
argument_list|()
argument_list|,
name|copy
operator|.
name|getMapCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getInputRecords
argument_list|()
argument_list|,
name|copy
operator|.
name|getInputRecords
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getOutputBytes
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|copy
operator|.
name|getOutputBytes
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getOutputRecords
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|copy
operator|.
name|getOutputRecords
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getReduceBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|copy
operator|.
name|getReduceBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|test
operator|.
name|getReduceRecords
argument_list|(
literal|0
argument_list|)
argument_list|,
name|copy
operator|.
name|getReduceRecords
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*    * test LoadMapper loadMapper should write to writer record for each reduce    */
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|,
literal|"unchecked"
block|}
argument_list|)
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|10000
argument_list|)
DECL|method|testLoadMapper ()
specifier|public
name|void
name|testLoadMapper
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|NUM_REDUCES
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|taskId
init|=
operator|new
name|TaskAttemptID
argument_list|()
decl_stmt|;
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
name|reader
init|=
operator|new
name|FakeRecordReader
argument_list|()
decl_stmt|;
name|LoadRecordGkGrWriter
name|writer
init|=
operator|new
name|LoadRecordGkGrWriter
argument_list|()
decl_stmt|;
name|OutputCommitter
name|committer
init|=
operator|new
name|CustomOutputCommitter
argument_list|()
decl_stmt|;
name|StatusReporter
name|reporter
init|=
operator|new
name|TaskAttemptContextImpl
operator|.
name|DummyReporter
argument_list|()
decl_stmt|;
name|LoadSplit
name|split
init|=
name|getLoadSplit
argument_list|()
decl_stmt|;
name|MapContext
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|,
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
name|mapContext
init|=
operator|new
name|MapContextImpl
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|,
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|(
name|conf
argument_list|,
name|taskId
argument_list|,
name|reader
argument_list|,
name|writer
argument_list|,
name|committer
argument_list|,
name|reporter
argument_list|,
name|split
argument_list|)
decl_stmt|;
comment|// context
name|Context
name|ctx
init|=
operator|new
name|WrappedMapper
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|,
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|()
operator|.
name|getMapContext
argument_list|(
name|mapContext
argument_list|)
decl_stmt|;
name|reader
operator|.
name|initialize
argument_list|(
name|split
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|ctx
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|LoadJob
operator|.
name|LoadMapper
name|mapper
init|=
operator|new
name|LoadJob
operator|.
name|LoadMapper
argument_list|()
decl_stmt|;
comment|// setup, map, clean
name|mapper
operator|.
name|run
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
name|data
init|=
name|writer
operator|.
name|getData
argument_list|()
decl_stmt|;
comment|// check result
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|data
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getLoadSplit ()
specifier|private
name|LoadSplit
name|getLoadSplit
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
index|[]
name|files
init|=
block|{
operator|new
name|Path
argument_list|(
literal|"one"
argument_list|)
block|,
operator|new
name|Path
argument_list|(
literal|"two"
argument_list|)
block|}
decl_stmt|;
name|long
index|[]
name|start
init|=
block|{
literal|1
block|,
literal|2
block|}
decl_stmt|;
name|long
index|[]
name|lengths
init|=
block|{
literal|100
block|,
literal|200
block|}
decl_stmt|;
name|String
index|[]
name|locations
init|=
block|{
literal|"locOne"
block|,
literal|"loctwo"
block|}
decl_stmt|;
name|CombineFileSplit
name|cfSplit
init|=
operator|new
name|CombineFileSplit
argument_list|(
name|files
argument_list|,
name|start
argument_list|,
name|lengths
argument_list|,
name|locations
argument_list|)
decl_stmt|;
name|ResourceUsageMetrics
name|metrics
init|=
operator|new
name|ResourceUsageMetrics
argument_list|()
decl_stmt|;
name|metrics
operator|.
name|setCumulativeCpuUsage
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ResourceUsageMetrics
index|[]
name|rMetrics
init|=
block|{
name|metrics
block|}
decl_stmt|;
name|double
index|[]
name|reduceBytes
init|=
block|{
literal|8.1d
block|,
literal|8.2d
block|}
decl_stmt|;
name|double
index|[]
name|reduceRecords
init|=
block|{
literal|9.1d
block|,
literal|9.2d
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputBytes
init|=
block|{
literal|101L
block|,
literal|102L
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputRecords
init|=
block|{
literal|111L
block|,
literal|112L
block|}
decl_stmt|;
return|return
operator|new
name|LoadSplit
argument_list|(
name|cfSplit
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|4L
argument_list|,
literal|5L
argument_list|,
literal|6L
argument_list|,
literal|7L
argument_list|,
name|reduceBytes
argument_list|,
name|reduceRecords
argument_list|,
name|reduceOutputBytes
argument_list|,
name|reduceOutputRecords
argument_list|,
name|metrics
argument_list|,
name|rMetrics
argument_list|)
return|;
block|}
DECL|class|FakeRecordLLReader
specifier|private
class|class
name|FakeRecordLLReader
extends|extends
name|RecordReader
argument_list|<
name|LongWritable
argument_list|,
name|LongWritable
argument_list|>
block|{
DECL|field|counter
name|int
name|counter
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
DECL|method|initialize (InputSplit split, TaskAttemptContext context)
specifier|public
name|void
name|initialize
parameter_list|(
name|InputSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{      }
annotation|@
name|Override
DECL|method|nextKeyValue ()
specifier|public
name|boolean
name|nextKeyValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|counter
operator|--
expr_stmt|;
return|return
name|counter
operator|>
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentKey ()
specifier|public
name|LongWritable
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
operator|new
name|LongWritable
argument_list|(
name|counter
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentValue ()
specifier|public
name|LongWritable
name|getCurrentValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
operator|new
name|LongWritable
argument_list|(
name|counter
operator|*
literal|10
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|counter
operator|/
literal|10.0f
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
comment|// restore data
name|counter
operator|=
literal|10
expr_stmt|;
block|}
block|}
DECL|class|FakeRecordReader
specifier|private
class|class
name|FakeRecordReader
extends|extends
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|counter
name|int
name|counter
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
DECL|method|initialize (InputSplit split, TaskAttemptContext context)
specifier|public
name|void
name|initialize
parameter_list|(
name|InputSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{      }
annotation|@
name|Override
DECL|method|nextKeyValue ()
specifier|public
name|boolean
name|nextKeyValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|counter
operator|--
expr_stmt|;
return|return
name|counter
operator|>
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentKey ()
specifier|public
name|NullWritable
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|NullWritable
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getCurrentValue ()
specifier|public
name|GridmixRecord
name|getCurrentValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
operator|new
name|GridmixRecord
argument_list|(
literal|100
argument_list|,
literal|100L
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|counter
operator|/
literal|10.0f
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
comment|// restore data
name|counter
operator|=
literal|10
expr_stmt|;
block|}
block|}
DECL|class|LoadRecordGkGrWriter
specifier|private
class|class
name|LoadRecordGkGrWriter
extends|extends
name|RecordWriter
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|data
specifier|private
name|Map
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|write (GridmixKey key, GridmixRecord value)
specifier|public
name|void
name|write
parameter_list|(
name|GridmixKey
name|key
parameter_list|,
name|GridmixRecord
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|data
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close (TaskAttemptContext context)
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
DECL|method|getData ()
specifier|public
name|Map
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|>
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
block|}
DECL|class|LoadRecordGkNullWriter
specifier|private
class|class
name|LoadRecordGkNullWriter
extends|extends
name|RecordWriter
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
block|{
DECL|field|data
specifier|private
name|Map
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|write (GridmixKey key, NullWritable value)
specifier|public
name|void
name|write
parameter_list|(
name|GridmixKey
name|key
parameter_list|,
name|NullWritable
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|data
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close (TaskAttemptContext context)
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
DECL|method|getData ()
specifier|public
name|Map
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
block|}
DECL|class|LoadRecordWriter
specifier|private
class|class
name|LoadRecordWriter
extends|extends
name|RecordWriter
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
block|{
DECL|field|data
specifier|private
name|Map
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|write (NullWritable key, GridmixRecord value)
specifier|public
name|void
name|write
parameter_list|(
name|NullWritable
name|key
parameter_list|,
name|GridmixRecord
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|data
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close (TaskAttemptContext context)
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
DECL|method|getData ()
specifier|public
name|Map
argument_list|<
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
block|}
comment|/*    * test LoadSortComparator    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testLoadJobLoadSortComparator ()
specifier|public
name|void
name|testLoadJobLoadSortComparator
parameter_list|()
throws|throws
name|Exception
block|{
name|LoadJob
operator|.
name|LoadSortComparator
name|test
init|=
operator|new
name|LoadJob
operator|.
name|LoadSortComparator
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|data
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|dos
init|=
operator|new
name|DataOutputStream
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|byte
index|[]
name|b1
init|=
name|data
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b2
init|=
name|data
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
comment|// the same data should be equals
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|b2
index|[
literal|2
index|]
operator|=
literal|5
expr_stmt|;
comment|// compare like GridMixKey first byte: shift count -1=4-5
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|b2
index|[
literal|2
index|]
operator|=
literal|2
expr_stmt|;
comment|// compare like GridMixKey first byte: shift count 2=4-2
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// compare arrays by first byte witch offset (2-1) because 4==4
name|b2
index|[
literal|2
index|]
operator|=
literal|4
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*    * test SpecGroupingComparator    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testGridmixJobSpecGroupingComparator ()
specifier|public
name|void
name|testGridmixJobSpecGroupingComparator
parameter_list|()
throws|throws
name|Exception
block|{
name|GridmixJob
operator|.
name|SpecGroupingComparator
name|test
init|=
operator|new
name|GridmixJob
operator|.
name|SpecGroupingComparator
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|data
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|dos
init|=
operator|new
name|DataOutputStream
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 0: REDUCE SPEC
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|WritableUtils
operator|.
name|writeVInt
argument_list|(
name|dos
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|byte
index|[]
name|b1
init|=
name|data
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b2
init|=
name|data
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
comment|// the same object should be equals
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|b2
index|[
literal|2
index|]
operator|=
literal|1
expr_stmt|;
comment|// for Reduce
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// by Reduce spec
name|b2
index|[
literal|2
index|]
operator|=
literal|1
expr_stmt|;
comment|// 1: DATA SPEC
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
name|b1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|b2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// compare GridmixKey the same objects should be equals
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|test
operator|.
name|compare
argument_list|(
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// REDUSE SPEC
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|REDUCE_SPEC
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|test
operator|.
name|compare
argument_list|(
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|REDUCE_SPEC
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// only DATA
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|test
operator|.
name|compare
argument_list|(
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|102
argument_list|,
literal|2
argument_list|)
argument_list|,
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*    * test CompareGridmixJob only equals and compare    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testCompareGridmixJob ()
specifier|public
name|void
name|testCompareGridmixJob
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Path
name|outRoot
init|=
operator|new
name|Path
argument_list|(
literal|"target"
argument_list|)
decl_stmt|;
name|JobStory
name|jobDesc
init|=
name|mock
argument_list|(
name|JobStory
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|jobDesc
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"JobName"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|jobDesc
operator|.
name|getJobConf
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|JobConf
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
decl_stmt|;
name|GridmixJob
name|j1
init|=
operator|new
name|LoadJob
argument_list|(
name|conf
argument_list|,
literal|1000L
argument_list|,
name|jobDesc
argument_list|,
name|outRoot
argument_list|,
name|ugi
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|GridmixJob
name|j2
init|=
operator|new
name|LoadJob
argument_list|(
name|conf
argument_list|,
literal|1000L
argument_list|,
name|jobDesc
argument_list|,
name|outRoot
argument_list|,
name|ugi
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|GridmixJob
name|j3
init|=
operator|new
name|LoadJob
argument_list|(
name|conf
argument_list|,
literal|1000L
argument_list|,
name|jobDesc
argument_list|,
name|outRoot
argument_list|,
name|ugi
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|GridmixJob
name|j4
init|=
operator|new
name|LoadJob
argument_list|(
name|conf
argument_list|,
literal|1000L
argument_list|,
name|jobDesc
argument_list|,
name|outRoot
argument_list|,
name|ugi
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|j1
operator|.
name|equals
argument_list|(
name|j2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|j1
operator|.
name|compareTo
argument_list|(
name|j2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Only one parameter matters
name|assertFalse
argument_list|(
name|j1
operator|.
name|equals
argument_list|(
name|j3
argument_list|)
argument_list|)
expr_stmt|;
comment|// compare id and submissionMillis
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|j1
operator|.
name|compareTo
argument_list|(
name|j3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|j1
operator|.
name|compareTo
argument_list|(
name|j4
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*    * test ReadRecordFactory. should read all data from inputstream    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testReadRecordFactory ()
specifier|public
name|void
name|testReadRecordFactory
parameter_list|()
throws|throws
name|Exception
block|{
comment|// RecordFactory factory, InputStream src, Configuration conf
name|RecordFactory
name|rf
init|=
operator|new
name|FakeRecordFactory
argument_list|()
decl_stmt|;
name|FakeInputStream
name|input
init|=
operator|new
name|FakeInputStream
argument_list|()
decl_stmt|;
name|ReadRecordFactory
name|test
init|=
operator|new
name|ReadRecordFactory
argument_list|(
name|rf
argument_list|,
name|input
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|)
decl_stmt|;
name|GridmixKey
name|key
init|=
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|DATA
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|GridmixRecord
name|val
init|=
operator|new
name|GridmixRecord
argument_list|(
literal|200
argument_list|,
literal|2
argument_list|)
decl_stmt|;
while|while
condition|(
name|test
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
condition|)
block|{      }
comment|// should be read 10* (GridmixKey.size +GridmixRecord.value)
name|assertEquals
argument_list|(
literal|3000
argument_list|,
name|input
operator|.
name|getCounter
argument_list|()
argument_list|)
expr_stmt|;
comment|// should be -1 because all data readed;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|rf
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|test
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|FakeRecordFactory
specifier|private
class|class
name|FakeRecordFactory
extends|extends
name|RecordFactory
block|{
DECL|field|counter
specifier|private
name|int
name|counter
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{      }
annotation|@
name|Override
DECL|method|next (GridmixKey key, GridmixRecord val)
specifier|public
name|boolean
name|next
parameter_list|(
name|GridmixKey
name|key
parameter_list|,
name|GridmixRecord
name|val
parameter_list|)
throws|throws
name|IOException
block|{
name|counter
operator|--
expr_stmt|;
return|return
name|counter
operator|>=
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|float
name|getProgress
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|counter
return|;
block|}
block|}
DECL|class|FakeInputStream
specifier|private
class|class
name|FakeInputStream
extends|extends
name|InputStream
implements|implements
name|Seekable
implements|,
name|PositionedReadable
block|{
DECL|field|counter
specifier|private
name|long
name|counter
decl_stmt|;
annotation|@
name|Override
DECL|method|read ()
specifier|public
name|int
name|read
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|read (byte[] b, int off, int len)
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|realLen
init|=
name|len
operator|-
name|off
decl_stmt|;
name|counter
operator|+=
name|realLen
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|b
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|b
index|[
name|i
index|]
operator|=
literal|0
expr_stmt|;
block|}
return|return
name|realLen
return|;
block|}
DECL|method|getCounter ()
specifier|public
name|long
name|getCounter
parameter_list|()
block|{
return|return
name|counter
return|;
block|}
annotation|@
name|Override
DECL|method|seek (long pos)
specifier|public
name|void
name|seek
parameter_list|(
name|long
name|pos
parameter_list|)
throws|throws
name|IOException
block|{      }
annotation|@
name|Override
DECL|method|getPos ()
specifier|public
name|long
name|getPos
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|counter
return|;
block|}
annotation|@
name|Override
DECL|method|seekToNewSource (long targetPos)
specifier|public
name|boolean
name|seekToNewSource
parameter_list|(
name|long
name|targetPos
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|read (long position, byte[] buffer, int offset, int length)
specifier|public
name|int
name|read
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|buffer
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|readFully (long position, byte[] buffer, int offset, int length)
specifier|public
name|void
name|readFully
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|buffer
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{      }
annotation|@
name|Override
DECL|method|readFully (long position, byte[] buffer)
specifier|public
name|void
name|readFully
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|buffer
parameter_list|)
throws|throws
name|IOException
block|{      }
block|}
DECL|class|FakeFSDataInputStream
specifier|private
class|class
name|FakeFSDataInputStream
extends|extends
name|FSDataInputStream
block|{
DECL|method|FakeFSDataInputStream (InputStream in)
specifier|public
name|FakeFSDataInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*    * test LoadRecordReader. It class reads data from some files.    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testLoadJobLoadRecordReader ()
specifier|public
name|void
name|testLoadJobLoadRecordReader
parameter_list|()
throws|throws
name|Exception
block|{
name|LoadJob
operator|.
name|LoadRecordReader
name|test
init|=
operator|new
name|LoadJob
operator|.
name|LoadRecordReader
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FileSystem
name|fs1
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fs1
operator|.
name|open
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FakeFSDataInputStream
argument_list|(
operator|new
name|FakeInputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|p1
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|p1
operator|.
name|getFileSystem
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs1
argument_list|)
expr_stmt|;
name|FileSystem
name|fs2
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fs2
operator|.
name|open
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FakeFSDataInputStream
argument_list|(
operator|new
name|FakeInputStream
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|p2
init|=
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|p2
operator|.
name|getFileSystem
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fs2
argument_list|)
expr_stmt|;
name|Path
index|[]
name|paths
init|=
block|{
name|p1
block|,
name|p2
block|}
decl_stmt|;
name|long
index|[]
name|start
init|=
block|{
literal|0
block|,
literal|0
block|}
decl_stmt|;
name|long
index|[]
name|lengths
init|=
block|{
literal|1000
block|,
literal|1000
block|}
decl_stmt|;
name|String
index|[]
name|locations
init|=
block|{
literal|"temp1"
block|,
literal|"temp2"
block|}
decl_stmt|;
name|CombineFileSplit
name|cfsplit
init|=
operator|new
name|CombineFileSplit
argument_list|(
name|paths
argument_list|,
name|start
argument_list|,
name|lengths
argument_list|,
name|locations
argument_list|)
decl_stmt|;
name|double
index|[]
name|reduceBytes
init|=
block|{
literal|100
block|,
literal|100
block|}
decl_stmt|;
name|double
index|[]
name|reduceRecords
init|=
block|{
literal|2
block|,
literal|2
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputBytes
init|=
block|{
literal|500
block|,
literal|500
block|}
decl_stmt|;
name|long
index|[]
name|reduceOutputRecords
init|=
block|{
literal|2
block|,
literal|2
block|}
decl_stmt|;
name|ResourceUsageMetrics
name|metrics
init|=
operator|new
name|ResourceUsageMetrics
argument_list|()
decl_stmt|;
name|ResourceUsageMetrics
index|[]
name|rMetrics
init|=
block|{
operator|new
name|ResourceUsageMetrics
argument_list|()
block|,
operator|new
name|ResourceUsageMetrics
argument_list|()
block|}
decl_stmt|;
name|LoadSplit
name|input
init|=
operator|new
name|LoadSplit
argument_list|(
name|cfsplit
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|1500L
argument_list|,
literal|2L
argument_list|,
literal|3000L
argument_list|,
literal|2L
argument_list|,
name|reduceBytes
argument_list|,
name|reduceRecords
argument_list|,
name|reduceOutputBytes
argument_list|,
name|reduceOutputRecords
argument_list|,
name|metrics
argument_list|,
name|rMetrics
argument_list|)
decl_stmt|;
name|TaskAttemptID
name|taskId
init|=
operator|new
name|TaskAttemptID
argument_list|()
decl_stmt|;
name|TaskAttemptContext
name|ctx
init|=
operator|new
name|TaskAttemptContextImpl
argument_list|(
name|conf
argument_list|,
name|taskId
argument_list|)
decl_stmt|;
name|test
operator|.
name|initialize
argument_list|(
name|input
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
name|GridmixRecord
name|gr
init|=
name|test
operator|.
name|getCurrentValue
argument_list|()
decl_stmt|;
name|int
name|counter
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|test
operator|.
name|nextKeyValue
argument_list|()
condition|)
block|{
name|gr
operator|=
name|test
operator|.
name|getCurrentValue
argument_list|()
expr_stmt|;
if|if
condition|(
name|counter
operator|==
literal|0
condition|)
block|{
comment|// read first file
name|assertEquals
argument_list|(
literal|0.5
argument_list|,
name|test
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.001
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|counter
operator|==
literal|1
condition|)
block|{
comment|// read second file
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|test
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.001
argument_list|)
expr_stmt|;
block|}
comment|//
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|gr
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
name|counter
operator|++
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|gr
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Two files have been read
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|counter
argument_list|)
expr_stmt|;
name|test
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/*    * test LoadReducer    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testLoadJobLoadReducer ()
specifier|public
name|void
name|testLoadJobLoadReducer
parameter_list|()
throws|throws
name|Exception
block|{
name|LoadJob
operator|.
name|LoadReducer
name|test
init|=
operator|new
name|LoadJob
operator|.
name|LoadReducer
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|NUM_REDUCES
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|FileOutputFormat
operator|.
name|COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|taskid
init|=
operator|new
name|TaskAttemptID
argument_list|()
decl_stmt|;
name|RawKeyValueIterator
name|input
init|=
operator|new
name|FakeRawKeyValueIterator
argument_list|()
decl_stmt|;
name|Counter
name|counter
init|=
operator|new
name|GenericCounter
argument_list|()
decl_stmt|;
name|Counter
name|inputValueCounter
init|=
operator|new
name|GenericCounter
argument_list|()
decl_stmt|;
name|LoadRecordWriter
name|output
init|=
operator|new
name|LoadRecordWriter
argument_list|()
decl_stmt|;
name|OutputCommitter
name|committer
init|=
operator|new
name|CustomOutputCommitter
argument_list|()
decl_stmt|;
name|StatusReporter
name|reporter
init|=
operator|new
name|DummyReporter
argument_list|()
decl_stmt|;
name|RawComparator
argument_list|<
name|GridmixKey
argument_list|>
name|comparator
init|=
operator|new
name|FakeRawComparator
argument_list|()
decl_stmt|;
name|ReduceContext
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|,
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
name|reduceContext
init|=
operator|new
name|ReduceContextImpl
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|,
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|(
name|conf
argument_list|,
name|taskid
argument_list|,
name|input
argument_list|,
name|counter
argument_list|,
name|inputValueCounter
argument_list|,
name|output
argument_list|,
name|committer
argument_list|,
name|reporter
argument_list|,
name|comparator
argument_list|,
name|GridmixKey
operator|.
name|class
argument_list|,
name|GridmixRecord
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// read for previous data
name|reduceContext
operator|.
name|nextKeyValue
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Reducer
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|,
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
operator|.
name|Context
name|context
init|=
operator|new
name|WrappedReducer
argument_list|<
name|GridmixKey
argument_list|,
name|GridmixRecord
argument_list|,
name|NullWritable
argument_list|,
name|GridmixRecord
argument_list|>
argument_list|()
operator|.
name|getReducerContext
argument_list|(
name|reduceContext
argument_list|)
decl_stmt|;
comment|// test.setup(context);
name|test
operator|.
name|run
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// have been readed 9 records (-1 for previous)
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|counter
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|inputValueCounter
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|output
operator|.
name|getData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|GridmixRecord
name|record
init|=
name|output
operator|.
name|getData
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1593
argument_list|,
name|record
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|FakeRawKeyValueIterator
specifier|protected
class|class
name|FakeRawKeyValueIterator
implements|implements
name|RawKeyValueIterator
block|{
DECL|field|counter
name|int
name|counter
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
DECL|method|getKey ()
specifier|public
name|DataInputBuffer
name|getKey
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|dt
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|GridmixKey
name|key
init|=
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|REDUCE_SPEC
argument_list|,
literal|10
operator|*
name|counter
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
name|Spec
name|spec
init|=
operator|new
name|Spec
argument_list|()
decl_stmt|;
name|spec
operator|.
name|rec_in
operator|=
name|counter
expr_stmt|;
name|spec
operator|.
name|rec_out
operator|=
name|counter
expr_stmt|;
name|spec
operator|.
name|bytes_out
operator|=
name|counter
operator|*
literal|100
expr_stmt|;
name|key
operator|.
name|setSpec
argument_list|(
name|spec
argument_list|)
expr_stmt|;
name|key
operator|.
name|write
argument_list|(
operator|new
name|DataOutputStream
argument_list|(
name|dt
argument_list|)
argument_list|)
expr_stmt|;
name|DataInputBuffer
name|result
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b
init|=
name|dt
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|result
operator|.
name|reset
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|getValue ()
specifier|public
name|DataInputBuffer
name|getValue
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|dt
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|GridmixRecord
name|key
init|=
operator|new
name|GridmixRecord
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|key
operator|.
name|write
argument_list|(
operator|new
name|DataOutputStream
argument_list|(
name|dt
argument_list|)
argument_list|)
expr_stmt|;
name|DataInputBuffer
name|result
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b
init|=
name|dt
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|result
operator|.
name|reset
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|next ()
specifier|public
name|boolean
name|next
parameter_list|()
throws|throws
name|IOException
block|{
name|counter
operator|--
expr_stmt|;
return|return
name|counter
operator|>=
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{      }
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|Progress
name|getProgress
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|class|FakeRawComparator
specifier|private
class|class
name|FakeRawComparator
implements|implements
name|RawComparator
argument_list|<
name|GridmixKey
argument_list|>
block|{
annotation|@
name|Override
DECL|method|compare (GridmixKey o1, GridmixKey o2)
specifier|public
name|int
name|compare
parameter_list|(
name|GridmixKey
name|o1
parameter_list|,
name|GridmixKey
name|o2
parameter_list|)
block|{
return|return
name|o1
operator|.
name|compareTo
argument_list|(
name|o2
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|compare (byte[] b1, int s1, int l1, byte[] b2, int s2, int l2)
specifier|public
name|int
name|compare
parameter_list|(
name|byte
index|[]
name|b1
parameter_list|,
name|int
name|s1
parameter_list|,
name|int
name|l1
parameter_list|,
name|byte
index|[]
name|b2
parameter_list|,
name|int
name|s2
parameter_list|,
name|int
name|l2
parameter_list|)
block|{
if|if
condition|(
operator|(
name|l1
operator|-
name|s1
operator|)
operator|!=
operator|(
name|l2
operator|-
name|s2
operator|)
condition|)
block|{
return|return
operator|(
name|l1
operator|-
name|s1
operator|)
operator|-
operator|(
name|l2
operator|-
name|s2
operator|)
return|;
block|}
name|int
name|len
init|=
name|l1
operator|-
name|s1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|len
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|b1
index|[
name|s1
operator|+
name|i
index|]
operator|!=
name|b2
index|[
name|s2
operator|+
name|i
index|]
condition|)
block|{
return|return
name|b1
index|[
name|s1
operator|+
name|i
index|]
operator|-
name|b2
index|[
name|s2
operator|+
name|i
index|]
return|;
block|}
block|}
return|return
literal|0
return|;
block|}
block|}
comment|/*    * test SerialJobFactory    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|120000
argument_list|)
DECL|method|testSerialReaderThread ()
specifier|public
name|void
name|testSerialReaderThread
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|File
name|fin
init|=
operator|new
name|File
argument_list|(
literal|"src"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"resources"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"data"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"wordcount2.json"
argument_list|)
decl_stmt|;
comment|// read couple jobs from wordcount2.json
name|JobStoryProducer
name|jobProducer
init|=
operator|new
name|ZombieJobProducer
argument_list|(
operator|new
name|Path
argument_list|(
name|fin
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|CountDownLatch
name|startFlag
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|UserResolver
name|resolver
init|=
operator|new
name|SubmitterUserResolver
argument_list|()
decl_stmt|;
name|FakeJobSubmitter
name|submitter
init|=
operator|new
name|FakeJobSubmitter
argument_list|()
decl_stmt|;
name|File
name|ws
init|=
operator|new
name|File
argument_list|(
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ws
operator|.
name|exists
argument_list|()
condition|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ws
operator|.
name|mkdirs
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|SerialJobFactory
name|jobFactory
init|=
operator|new
name|SerialJobFactory
argument_list|(
name|submitter
argument_list|,
name|jobProducer
argument_list|,
operator|new
name|Path
argument_list|(
name|ws
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|,
name|conf
argument_list|,
name|startFlag
argument_list|,
name|resolver
argument_list|)
decl_stmt|;
name|Path
name|ioPath
init|=
operator|new
name|Path
argument_list|(
name|ws
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
decl_stmt|;
name|jobFactory
operator|.
name|setDistCacheEmulator
argument_list|(
operator|new
name|DistributedCacheEmulator
argument_list|(
name|conf
argument_list|,
name|ioPath
argument_list|)
argument_list|)
expr_stmt|;
name|Thread
name|test
init|=
name|jobFactory
operator|.
name|createReaderThread
argument_list|()
decl_stmt|;
name|test
operator|.
name|start
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// SerialReaderThread waits startFlag
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|submitter
operator|.
name|getJobs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// start!
name|startFlag
operator|.
name|countDown
argument_list|()
expr_stmt|;
while|while
condition|(
name|test
operator|.
name|isAlive
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|jobFactory
operator|.
name|update
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// submitter was called twice
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|submitter
operator|.
name|getJobs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|FakeJobSubmitter
specifier|private
class|class
name|FakeJobSubmitter
extends|extends
name|JobSubmitter
block|{
comment|// counter for submitted jobs
DECL|field|jobs
specifier|private
name|List
argument_list|<
name|GridmixJob
argument_list|>
name|jobs
init|=
operator|new
name|ArrayList
argument_list|<
name|GridmixJob
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|FakeJobSubmitter ()
specifier|public
name|FakeJobSubmitter
parameter_list|()
block|{
name|super
argument_list|(
literal|null
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|add (GridmixJob job)
specifier|public
name|void
name|add
parameter_list|(
name|GridmixJob
name|job
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|jobs
operator|.
name|add
argument_list|(
name|job
argument_list|)
expr_stmt|;
block|}
DECL|method|getJobs ()
specifier|public
name|List
argument_list|<
name|GridmixJob
argument_list|>
name|getJobs
parameter_list|()
block|{
return|return
name|jobs
return|;
block|}
block|}
comment|/*    * test SleepMapper    */
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
DECL|method|testSleepMapper ()
specifier|public
name|void
name|testSleepMapper
parameter_list|()
throws|throws
name|Exception
block|{
name|SleepJob
operator|.
name|SleepMapper
name|test
init|=
operator|new
name|SleepJob
operator|.
name|SleepMapper
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|NUM_REDUCES
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|taskId
init|=
operator|new
name|TaskAttemptID
argument_list|()
decl_stmt|;
name|FakeRecordLLReader
name|reader
init|=
operator|new
name|FakeRecordLLReader
argument_list|()
decl_stmt|;
name|LoadRecordGkNullWriter
name|writer
init|=
operator|new
name|LoadRecordGkNullWriter
argument_list|()
decl_stmt|;
name|OutputCommitter
name|committer
init|=
operator|new
name|CustomOutputCommitter
argument_list|()
decl_stmt|;
name|StatusReporter
name|reporter
init|=
operator|new
name|TaskAttemptContextImpl
operator|.
name|DummyReporter
argument_list|()
decl_stmt|;
name|SleepSplit
name|split
init|=
name|getSleepSplit
argument_list|()
decl_stmt|;
name|MapContext
argument_list|<
name|LongWritable
argument_list|,
name|LongWritable
argument_list|,
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
name|mapcontext
init|=
operator|new
name|MapContextImpl
argument_list|<
name|LongWritable
argument_list|,
name|LongWritable
argument_list|,
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
argument_list|(
name|conf
argument_list|,
name|taskId
argument_list|,
name|reader
argument_list|,
name|writer
argument_list|,
name|committer
argument_list|,
name|reporter
argument_list|,
name|split
argument_list|)
decl_stmt|;
name|Context
name|context
init|=
operator|new
name|WrappedMapper
argument_list|<
name|LongWritable
argument_list|,
name|LongWritable
argument_list|,
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|>
argument_list|()
operator|.
name|getMapContext
argument_list|(
name|mapcontext
argument_list|)
decl_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"start:"
operator|+
name|start
argument_list|)
expr_stmt|;
name|LongWritable
name|key
init|=
operator|new
name|LongWritable
argument_list|(
name|start
operator|+
literal|2000
argument_list|)
decl_stmt|;
name|LongWritable
name|value
init|=
operator|new
name|LongWritable
argument_list|(
name|start
operator|+
literal|2000
argument_list|)
decl_stmt|;
comment|// should slip 2 sec
name|test
operator|.
name|map
argument_list|(
name|key
argument_list|,
name|value
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"finish:"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|>=
operator|(
name|start
operator|+
literal|2000
operator|)
argument_list|)
expr_stmt|;
name|test
operator|.
name|cleanup
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|writer
operator|.
name|getData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getSleepSplit ()
specifier|private
name|SleepSplit
name|getSleepSplit
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|locations
init|=
block|{
literal|"locOne"
block|,
literal|"loctwo"
block|}
decl_stmt|;
name|long
index|[]
name|reduceDurations
init|=
block|{
literal|101L
block|,
literal|102L
block|}
decl_stmt|;
return|return
operator|new
name|SleepSplit
argument_list|(
literal|0
argument_list|,
literal|2000L
argument_list|,
name|reduceDurations
argument_list|,
literal|2
argument_list|,
name|locations
argument_list|)
return|;
block|}
comment|/*    * test SleepReducer    */
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
DECL|method|testSleepReducer ()
specifier|public
name|void
name|testSleepReducer
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|JobContext
operator|.
name|NUM_REDUCES
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|FileOutputFormat
operator|.
name|COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CompressionEmulationUtil
operator|.
name|setCompressionEmulationEnabled
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|MRJobConfig
operator|.
name|MAP_OUTPUT_COMPRESS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TaskAttemptID
name|taskId
init|=
operator|new
name|TaskAttemptID
argument_list|()
decl_stmt|;
name|RawKeyValueIterator
name|input
init|=
operator|new
name|FakeRawKeyValueReducerIterator
argument_list|()
decl_stmt|;
name|Counter
name|counter
init|=
operator|new
name|GenericCounter
argument_list|()
decl_stmt|;
name|Counter
name|inputValueCounter
init|=
operator|new
name|GenericCounter
argument_list|()
decl_stmt|;
name|RecordWriter
argument_list|<
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
name|output
init|=
operator|new
name|LoadRecordReduceWriter
argument_list|()
decl_stmt|;
name|OutputCommitter
name|committer
init|=
operator|new
name|CustomOutputCommitter
argument_list|()
decl_stmt|;
name|StatusReporter
name|reporter
init|=
operator|new
name|DummyReporter
argument_list|()
decl_stmt|;
name|RawComparator
argument_list|<
name|GridmixKey
argument_list|>
name|comparator
init|=
operator|new
name|FakeRawComparator
argument_list|()
decl_stmt|;
name|ReduceContext
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
name|reducecontext
init|=
operator|new
name|ReduceContextImpl
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
argument_list|(
name|conf
argument_list|,
name|taskId
argument_list|,
name|input
argument_list|,
name|counter
argument_list|,
name|inputValueCounter
argument_list|,
name|output
argument_list|,
name|committer
argument_list|,
name|reporter
argument_list|,
name|comparator
argument_list|,
name|GridmixKey
operator|.
name|class
argument_list|,
name|NullWritable
operator|.
name|class
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Reducer
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
operator|.
name|Context
name|context
init|=
operator|new
name|WrappedReducer
argument_list|<
name|GridmixKey
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
argument_list|()
operator|.
name|getReducerContext
argument_list|(
name|reducecontext
argument_list|)
decl_stmt|;
name|SleepReducer
name|test
init|=
operator|new
name|SleepReducer
argument_list|()
decl_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|test
operator|.
name|setup
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|long
name|sleeper
init|=
name|context
operator|.
name|getCurrentKey
argument_list|()
operator|.
name|getReduceOutputBytes
argument_list|()
decl_stmt|;
comment|// status has been changed
name|assertEquals
argument_list|(
literal|"Sleeping... "
operator|+
name|sleeper
operator|+
literal|" ms left"
argument_list|,
name|context
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// should sleep 0.9 sec
name|assertTrue
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|>=
operator|(
name|start
operator|+
name|sleeper
operator|)
argument_list|)
expr_stmt|;
name|test
operator|.
name|cleanup
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// status has been changed again
name|assertEquals
argument_list|(
literal|"Slept for "
operator|+
name|sleeper
argument_list|,
name|context
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|LoadRecordReduceWriter
specifier|private
class|class
name|LoadRecordReduceWriter
extends|extends
name|RecordWriter
argument_list|<
name|NullWritable
argument_list|,
name|NullWritable
argument_list|>
block|{
annotation|@
name|Override
DECL|method|write (NullWritable key, NullWritable value)
specifier|public
name|void
name|write
parameter_list|(
name|NullWritable
name|key
parameter_list|,
name|NullWritable
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
annotation|@
name|Override
DECL|method|close (TaskAttemptContext context)
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{     }
block|}
DECL|class|FakeRawKeyValueReducerIterator
specifier|protected
class|class
name|FakeRawKeyValueReducerIterator
implements|implements
name|RawKeyValueIterator
block|{
DECL|field|counter
name|int
name|counter
init|=
literal|10
decl_stmt|;
annotation|@
name|Override
DECL|method|getKey ()
specifier|public
name|DataInputBuffer
name|getKey
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|dt
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|GridmixKey
name|key
init|=
operator|new
name|GridmixKey
argument_list|(
name|GridmixKey
operator|.
name|REDUCE_SPEC
argument_list|,
literal|10
operator|*
name|counter
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
name|Spec
name|spec
init|=
operator|new
name|Spec
argument_list|()
decl_stmt|;
name|spec
operator|.
name|rec_in
operator|=
name|counter
expr_stmt|;
name|spec
operator|.
name|rec_out
operator|=
name|counter
expr_stmt|;
name|spec
operator|.
name|bytes_out
operator|=
name|counter
operator|*
literal|100
expr_stmt|;
name|key
operator|.
name|setSpec
argument_list|(
name|spec
argument_list|)
expr_stmt|;
name|key
operator|.
name|write
argument_list|(
operator|new
name|DataOutputStream
argument_list|(
name|dt
argument_list|)
argument_list|)
expr_stmt|;
name|DataInputBuffer
name|result
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b
init|=
name|dt
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|result
operator|.
name|reset
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|getValue ()
specifier|public
name|DataInputBuffer
name|getValue
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|dt
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|NullWritable
name|key
init|=
name|NullWritable
operator|.
name|get
argument_list|()
decl_stmt|;
name|key
operator|.
name|write
argument_list|(
operator|new
name|DataOutputStream
argument_list|(
name|dt
argument_list|)
argument_list|)
expr_stmt|;
name|DataInputBuffer
name|result
init|=
operator|new
name|DataInputBuffer
argument_list|()
decl_stmt|;
name|byte
index|[]
name|b
init|=
name|dt
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|result
operator|.
name|reset
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
name|b
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|next ()
specifier|public
name|boolean
name|next
parameter_list|()
throws|throws
name|IOException
block|{
name|counter
operator|--
expr_stmt|;
return|return
name|counter
operator|>=
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{      }
annotation|@
name|Override
DECL|method|getProgress ()
specifier|public
name|Progress
name|getProgress
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

