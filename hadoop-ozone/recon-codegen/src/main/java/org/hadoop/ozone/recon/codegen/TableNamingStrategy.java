begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.hadoop.ozone.recon.codegen
package|package
name|org
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|codegen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jooq
operator|.
name|codegen
operator|.
name|DefaultGeneratorStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jooq
operator|.
name|meta
operator|.
name|Definition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jooq
operator|.
name|meta
operator|.
name|TableDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jooq
operator|.
name|tools
operator|.
name|StringUtils
import|;
end_import

begin_comment
comment|/**  * Generate Table classes with a different name from POJOS to improve  * readability, loaded at runtime.  */
end_comment

begin_class
DECL|class|TableNamingStrategy
specifier|public
class|class
name|TableNamingStrategy
extends|extends
name|DefaultGeneratorStrategy
block|{
annotation|@
name|Override
DECL|method|getJavaClassName (Definition definition, Mode mode)
specifier|public
name|String
name|getJavaClassName
parameter_list|(
name|Definition
name|definition
parameter_list|,
name|Mode
name|mode
parameter_list|)
block|{
if|if
condition|(
name|definition
operator|instanceof
name|TableDefinition
operator|&&
name|mode
operator|==
name|Mode
operator|.
name|DEFAULT
condition|)
block|{
name|StringBuilder
name|result
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|result
operator|.
name|append
argument_list|(
name|StringUtils
operator|.
name|toCamelCase
argument_list|(
name|definition
operator|.
name|getOutputName
argument_list|()
operator|.
name|replace
argument_list|(
literal|' '
argument_list|,
literal|'_'
argument_list|)
operator|.
name|replace
argument_list|(
literal|'-'
argument_list|,
literal|'_'
argument_list|)
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'_'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|append
argument_list|(
literal|"Table"
argument_list|)
expr_stmt|;
return|return
name|result
operator|.
name|toString
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|getJavaClassName
argument_list|(
name|definition
argument_list|,
name|mode
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

