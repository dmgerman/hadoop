begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmDeleteVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeOwnerChangeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|protocol
operator|.
name|OzoneManagerServerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetBucketPropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetBucketPropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetVolumePropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetVolumePropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|VolumeList
import|;
end_import

begin_comment
comment|/**  * Command Handler for OM requests. OM State Machine calls this handler for  * deserializing the client request and sending it to OM.  */
end_comment

begin_class
DECL|class|OzoneManagerHARequestHandlerImpl
specifier|public
class|class
name|OzoneManagerHARequestHandlerImpl
extends|extends
name|OzoneManagerRequestHandler
implements|implements
name|OzoneManagerHARequestHandler
block|{
DECL|method|OzoneManagerHARequestHandlerImpl (OzoneManagerServerProtocol om)
specifier|public
name|OzoneManagerHARequestHandlerImpl
parameter_list|(
name|OzoneManagerServerProtocol
name|om
parameter_list|)
block|{
name|super
argument_list|(
name|om
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handleStartTransaction (OMRequest omRequest)
specifier|public
name|OMRequest
name|handleStartTransaction
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received OMRequest: {}, "
argument_list|,
name|omRequest
argument_list|)
expr_stmt|;
name|Type
name|cmdType
init|=
name|omRequest
operator|.
name|getCmdType
argument_list|()
decl_stmt|;
name|OMRequest
name|newOmRequest
init|=
literal|null
decl_stmt|;
switch|switch
condition|(
name|cmdType
condition|)
block|{
case|case
name|CreateVolume
case|:
name|newOmRequest
operator|=
name|handleCreateVolumeStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetVolumeProperty
case|:
name|newOmRequest
operator|=
name|handleSetVolumePropertyStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteVolume
case|:
name|newOmRequest
operator|=
name|handleDeleteVolumeStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
case|case
name|CreateBucket
case|:
name|newOmRequest
operator|=
name|handleCreateBucketStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetBucketProperty
case|:
name|newOmRequest
operator|=
name|handleSetBucketPropertyStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteBucket
case|:
name|newOmRequest
operator|=
name|handleDeleteBucketRequestStart
argument_list|(
name|omRequest
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unrecognized Command Type:"
operator|+
name|cmdType
argument_list|)
throw|;
block|}
return|return
name|newOmRequest
return|;
block|}
annotation|@
name|Override
DECL|method|handleApplyTransaction (OMRequest omRequest)
specifier|public
name|OMResponse
name|handleApplyTransaction
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received OMRequest: {}, "
argument_list|,
name|omRequest
argument_list|)
expr_stmt|;
name|Type
name|cmdType
init|=
name|omRequest
operator|.
name|getCmdType
argument_list|()
decl_stmt|;
name|OMResponse
operator|.
name|Builder
name|responseBuilder
init|=
name|OMResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|cmdType
argument_list|)
operator|.
name|setStatus
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
decl_stmt|;
try|try
block|{
switch|switch
condition|(
name|cmdType
condition|)
block|{
case|case
name|CreateVolume
case|:
name|responseBuilder
operator|.
name|setCreateVolumeResponse
argument_list|(
name|handleCreateVolumeApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetVolumeProperty
case|:
name|responseBuilder
operator|.
name|setSetVolumePropertyResponse
argument_list|(
name|handleSetVolumePropertyApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteVolume
case|:
name|responseBuilder
operator|.
name|setDeleteVolumeResponse
argument_list|(
name|handleDeleteVolumeApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|CreateBucket
case|:
name|responseBuilder
operator|.
name|setCreateBucketResponse
argument_list|(
name|handleCreateBucketApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetBucketProperty
case|:
name|responseBuilder
operator|.
name|setSetBucketPropertyResponse
argument_list|(
name|handleSetBucketPropertyApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteBucket
case|:
name|responseBuilder
operator|.
name|setDeleteBucketResponse
argument_list|(
name|handleDeleteBucketApply
argument_list|(
name|omRequest
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
comment|// As all request types are not changed so we need to call handle
comment|// here.
return|return
name|handle
argument_list|(
name|omRequest
argument_list|)
return|;
block|}
name|responseBuilder
operator|.
name|setSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|responseBuilder
operator|.
name|setSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|responseBuilder
operator|.
name|setStatus
argument_list|(
name|exceptionToResponseStatus
argument_list|(
name|ex
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|responseBuilder
operator|.
name|setMessage
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|responseBuilder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleCreateVolumeStart (OMRequest omRequest)
specifier|private
name|OMRequest
name|handleCreateVolumeStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|VolumeInfo
name|volumeInfo
init|=
name|omRequest
operator|.
name|getCreateVolumeRequest
argument_list|()
operator|.
name|getVolumeInfo
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|VolumeList
name|volumeList
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startCreateVolume
argument_list|(
name|OmVolumeArgs
operator|.
name|getFromProtobuf
argument_list|(
name|volumeInfo
argument_list|)
argument_list|)
decl_stmt|;
name|CreateVolumeRequest
name|createVolumeRequest
init|=
name|CreateVolumeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeInfo
argument_list|(
name|volumeInfo
argument_list|)
operator|.
name|setVolumeList
argument_list|(
name|volumeList
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setCreateVolumeRequest
argument_list|(
name|createVolumeRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleCreateVolumeApply (OMRequest omRequest)
specifier|private
name|CreateVolumeResponse
name|handleCreateVolumeApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
name|volumeInfo
init|=
name|omRequest
operator|.
name|getCreateVolumeRequest
argument_list|()
operator|.
name|getVolumeInfo
argument_list|()
decl_stmt|;
name|VolumeList
name|volumeList
init|=
name|omRequest
operator|.
name|getCreateVolumeRequest
argument_list|()
operator|.
name|getVolumeList
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applyCreateVolume
argument_list|(
name|OmVolumeArgs
operator|.
name|getFromProtobuf
argument_list|(
name|volumeInfo
argument_list|)
argument_list|,
name|volumeList
argument_list|)
expr_stmt|;
return|return
name|CreateVolumeResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleSetVolumePropertyStart (OMRequest omRequest)
specifier|private
name|OMRequest
name|handleSetVolumePropertyStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|SetVolumePropertyRequest
name|setVolumePropertyRequest
init|=
name|omRequest
operator|.
name|getSetVolumePropertyRequest
argument_list|()
decl_stmt|;
name|String
name|volume
init|=
name|setVolumePropertyRequest
operator|.
name|getVolumeName
argument_list|()
decl_stmt|;
name|OMRequest
name|newOmRequest
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|setVolumePropertyRequest
operator|.
name|hasQuotaInBytes
argument_list|()
condition|)
block|{
name|long
name|quota
init|=
name|setVolumePropertyRequest
operator|.
name|getQuotaInBytes
argument_list|()
decl_stmt|;
name|OmVolumeArgs
name|omVolumeArgs
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startSetQuota
argument_list|(
name|volume
argument_list|,
name|quota
argument_list|)
decl_stmt|;
name|SetVolumePropertyRequest
name|newSetVolumePropertyRequest
init|=
name|SetVolumePropertyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volume
argument_list|)
operator|.
name|setVolumeInfo
argument_list|(
name|omVolumeArgs
operator|.
name|getProtobuf
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|newOmRequest
operator|=
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setSetVolumePropertyRequest
argument_list|(
name|newSetVolumePropertyRequest
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|String
name|owner
init|=
name|setVolumePropertyRequest
operator|.
name|getOwnerName
argument_list|()
decl_stmt|;
name|OmVolumeOwnerChangeResponse
name|omVolumeOwnerChangeResponse
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startSetOwner
argument_list|(
name|volume
argument_list|,
name|owner
argument_list|)
decl_stmt|;
comment|// If volumeLists become large and as ratis writes the request to disk we
comment|// might take more space if the lists become very big in size. We might
comment|// need to revisit this if it becomes problem
name|SetVolumePropertyRequest
name|newSetVolumePropertyRequest
init|=
name|SetVolumePropertyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volume
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|owner
argument_list|)
operator|.
name|setOriginalOwner
argument_list|(
name|omVolumeOwnerChangeResponse
operator|.
name|getOriginalOwner
argument_list|()
argument_list|)
operator|.
name|setNewOwnerVolumeList
argument_list|(
name|omVolumeOwnerChangeResponse
operator|.
name|getNewOwnerVolumeList
argument_list|()
argument_list|)
operator|.
name|setOldOwnerVolumeList
argument_list|(
name|omVolumeOwnerChangeResponse
operator|.
name|getOriginalOwnerVolumeList
argument_list|()
argument_list|)
operator|.
name|setVolumeInfo
argument_list|(
name|omVolumeOwnerChangeResponse
operator|.
name|getNewOwnerVolumeArgs
argument_list|()
operator|.
name|getProtobuf
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|newOmRequest
operator|=
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setSetVolumePropertyRequest
argument_list|(
name|newSetVolumePropertyRequest
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
return|return
name|newOmRequest
return|;
block|}
DECL|method|handleSetVolumePropertyApply ( OMRequest omRequest)
specifier|private
name|SetVolumePropertyResponse
name|handleSetVolumePropertyApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|SetVolumePropertyRequest
name|setVolumePropertyRequest
init|=
name|omRequest
operator|.
name|getSetVolumePropertyRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|setVolumePropertyRequest
operator|.
name|hasQuotaInBytes
argument_list|()
condition|)
block|{
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applySetQuota
argument_list|(
name|OmVolumeArgs
operator|.
name|getFromProtobuf
argument_list|(
name|setVolumePropertyRequest
operator|.
name|getVolumeInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applySetOwner
argument_list|(
name|setVolumePropertyRequest
operator|.
name|getOriginalOwner
argument_list|()
argument_list|,
name|setVolumePropertyRequest
operator|.
name|getOldOwnerVolumeList
argument_list|()
argument_list|,
name|setVolumePropertyRequest
operator|.
name|getNewOwnerVolumeList
argument_list|()
argument_list|,
name|OmVolumeArgs
operator|.
name|getFromProtobuf
argument_list|(
name|setVolumePropertyRequest
operator|.
name|getVolumeInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|SetVolumePropertyResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleDeleteVolumeStart (OMRequest omRequest)
specifier|private
name|OMRequest
name|handleDeleteVolumeStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteVolumeRequest
name|deleteVolumeRequest
init|=
name|omRequest
operator|.
name|getDeleteVolumeRequest
argument_list|()
decl_stmt|;
name|String
name|volume
init|=
name|deleteVolumeRequest
operator|.
name|getVolumeName
argument_list|()
decl_stmt|;
name|OmDeleteVolumeResponse
name|omDeleteVolumeResponse
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startDeleteVolume
argument_list|(
name|volume
argument_list|)
decl_stmt|;
name|DeleteVolumeRequest
name|newDeleteVolumeRequest
init|=
name|DeleteVolumeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeList
argument_list|(
name|omDeleteVolumeResponse
operator|.
name|getUpdatedVolumeList
argument_list|()
argument_list|)
operator|.
name|setVolumeName
argument_list|(
name|omDeleteVolumeResponse
operator|.
name|getVolume
argument_list|()
argument_list|)
operator|.
name|setOwner
argument_list|(
name|omDeleteVolumeResponse
operator|.
name|getOwner
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setDeleteVolumeRequest
argument_list|(
name|newDeleteVolumeRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleDeleteVolumeApply (OMRequest omRequest)
specifier|private
name|DeleteVolumeResponse
name|handleDeleteVolumeApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteVolumeRequest
name|deleteVolumeRequest
init|=
name|omRequest
operator|.
name|getDeleteVolumeRequest
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applyDeleteVolume
argument_list|(
name|deleteVolumeRequest
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|deleteVolumeRequest
operator|.
name|getOwner
argument_list|()
argument_list|,
name|deleteVolumeRequest
operator|.
name|getVolumeList
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|DeleteVolumeResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleCreateBucketStart (OMRequest omRequest)
specifier|private
name|OMRequest
name|handleCreateBucketStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|CreateBucketRequest
name|createBucketRequest
init|=
name|omRequest
operator|.
name|getCreateBucketRequest
argument_list|()
decl_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startCreateBucket
argument_list|(
name|OmBucketInfo
operator|.
name|getFromProtobuf
argument_list|(
name|createBucketRequest
operator|.
name|getBucketInfo
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|CreateBucketRequest
name|newCreateBucketRequest
init|=
name|CreateBucketRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBucketInfo
argument_list|(
name|omBucketInfo
operator|.
name|getProtobuf
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setCreateBucketRequest
argument_list|(
name|newCreateBucketRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleCreateBucketApply (OMRequest omRequest)
specifier|private
name|CreateBucketResponse
name|handleCreateBucketApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|CreateBucketRequest
name|createBucketRequest
init|=
name|omRequest
operator|.
name|getCreateBucketRequest
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applyCreateBucket
argument_list|(
name|OmBucketInfo
operator|.
name|getFromProtobuf
argument_list|(
name|createBucketRequest
operator|.
name|getBucketInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|CreateBucketResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleDeleteBucketRequestStart (OMRequest omRequest)
specifier|private
name|OMRequest
name|handleDeleteBucketRequestStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteBucketRequest
name|deleteBucketRequest
init|=
name|omRequest
operator|.
name|getDeleteBucketRequest
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startDeleteBucket
argument_list|(
name|deleteBucketRequest
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|deleteBucketRequest
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|omRequest
return|;
block|}
DECL|method|handleDeleteBucketApply (OMRequest omRequest)
specifier|private
name|DeleteBucketResponse
name|handleDeleteBucketApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteBucketRequest
name|deleteBucketRequest
init|=
name|omRequest
operator|.
name|getDeleteBucketRequest
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applyDeleteBucket
argument_list|(
name|deleteBucketRequest
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|deleteBucketRequest
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|DeleteBucketResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleSetBucketPropertyStart ( OMRequest omRequest)
specifier|private
name|OMRequest
name|handleSetBucketPropertyStart
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|SetBucketPropertyRequest
name|setBucketPropertyRequest
init|=
name|omRequest
operator|.
name|getSetBucketPropertyRequest
argument_list|()
decl_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|startSetBucketProperty
argument_list|(
name|OmBucketArgs
operator|.
name|getFromProtobuf
argument_list|(
name|setBucketPropertyRequest
operator|.
name|getBucketArgs
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|SetBucketPropertyRequest
name|newSetBucketPropertyRequest
init|=
name|SetBucketPropertyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBucketInfo
argument_list|(
name|omBucketInfo
operator|.
name|getProtobuf
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|omRequest
operator|.
name|toBuilder
argument_list|()
operator|.
name|setSetBucketPropertyRequest
argument_list|(
name|newSetBucketPropertyRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|handleSetBucketPropertyApply ( OMRequest omRequest)
specifier|private
name|SetBucketPropertyResponse
name|handleSetBucketPropertyApply
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|SetBucketPropertyRequest
name|setBucketPropertyRequest
init|=
name|omRequest
operator|.
name|getSetBucketPropertyRequest
argument_list|()
decl_stmt|;
name|getOzoneManagerServerProtocol
argument_list|()
operator|.
name|applySetBucketProperty
argument_list|(
name|OmBucketInfo
operator|.
name|getFromProtobuf
argument_list|(
name|setBucketPropertyRequest
operator|.
name|getBucketInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|SetBucketPropertyResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

