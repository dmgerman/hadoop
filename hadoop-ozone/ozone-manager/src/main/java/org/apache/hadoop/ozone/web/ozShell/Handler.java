begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.ozShell
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|OzoneException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
operator|.
name|OZONE_HTTP_SCHEME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
operator|.
name|OZONE_URI_SCHEME
import|;
end_import

begin_comment
comment|/**  * Common interface for command handling.  */
end_comment

begin_class
DECL|class|Handler
specifier|public
specifier|abstract
class|class
name|Handler
block|{
DECL|field|LOG
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|Handler
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|client
specifier|protected
name|OzoneClient
name|client
decl_stmt|;
comment|/**    * Executes the Client command.    *    * @param cmd - CommandLine    * @throws IOException    * @throws OzoneException    * @throws URISyntaxException    */
DECL|method|execute (CommandLine cmd)
specifier|protected
specifier|abstract
name|void
name|execute
parameter_list|(
name|CommandLine
name|cmd
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
throws|,
name|URISyntaxException
function_decl|;
comment|/**    * verifies user provided URI.    *    * @param uri - UriString    * @return URI    * @throws URISyntaxException    * @throws OzoneException    */
DECL|method|verifyURI (String uri)
specifier|protected
name|URI
name|verifyURI
parameter_list|(
name|String
name|uri
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|OzoneException
throws|,
name|IOException
block|{
if|if
condition|(
operator|(
name|uri
operator|==
literal|null
operator|)
operator|||
name|uri
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|OzoneClientException
argument_list|(
literal|"Ozone URI is needed to execute this command."
argument_list|)
throw|;
block|}
name|URIBuilder
name|ozoneURI
init|=
operator|new
name|URIBuilder
argument_list|(
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|ozoneURI
operator|.
name|getPort
argument_list|()
operator|==
literal|0
condition|)
block|{
name|ozoneURI
operator|.
name|setPort
argument_list|(
name|Shell
operator|.
name|DEFAULT_OZONE_PORT
argument_list|)
expr_stmt|;
block|}
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|String
name|scheme
init|=
name|ozoneURI
operator|.
name|getScheme
argument_list|()
decl_stmt|;
if|if
condition|(
name|scheme
operator|.
name|equals
argument_list|(
name|OZONE_HTTP_SCHEME
argument_list|)
condition|)
block|{
if|if
condition|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ozoneURI
operator|.
name|getPort
argument_list|()
operator|==
operator|-
literal|1
condition|)
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRestClient
argument_list|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRestClient
argument_list|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
argument_list|,
name|ozoneURI
operator|.
name|getPort
argument_list|()
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRestClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|scheme
operator|.
name|equals
argument_list|(
name|OZONE_URI_SCHEME
argument_list|)
operator|||
name|scheme
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ozoneURI
operator|.
name|getPort
argument_list|()
operator|==
operator|-
literal|1
condition|)
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|ozoneURI
operator|.
name|getHost
argument_list|()
argument_list|,
name|ozoneURI
operator|.
name|getPort
argument_list|()
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|client
operator|=
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
throw|throw
operator|new
name|OzoneClientException
argument_list|(
literal|"Invalid URI: "
operator|+
name|ozoneURI
argument_list|)
throw|;
block|}
return|return
name|ozoneURI
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

