begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.ozShell.token
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|token
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneSecurityUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|OzoneAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_comment
comment|/**  * Executes cancelDelegationToken api.  */
end_comment

begin_class
annotation|@
name|Command
argument_list|(
name|name
operator|=
literal|"cancel"
argument_list|,
name|description
operator|=
literal|"cancel a delegation token."
argument_list|)
DECL|class|CancelTokenHandler
specifier|public
class|class
name|CancelTokenHandler
extends|extends
name|Handler
block|{
annotation|@
name|CommandLine
operator|.
name|Option
argument_list|(
name|names
operator|=
block|{
literal|"--token"
block|,
literal|"-t"
block|}
argument_list|,
name|description
operator|=
literal|"file containing encoded token"
argument_list|,
name|defaultValue
operator|=
literal|"/tmp/token.txt"
argument_list|,
name|showDefaultValue
operator|=
name|CommandLine
operator|.
name|Help
operator|.
name|Visibility
operator|.
name|ALWAYS
argument_list|)
DECL|field|tokenFile
specifier|private
name|String
name|tokenFile
decl_stmt|;
comment|/**    * Executes the Client Calls.    */
annotation|@
name|Override
DECL|method|call ()
specifier|public
name|Void
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|OzoneAddress
name|address
init|=
operator|new
name|OzoneAddress
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|OzoneClient
name|client
init|=
name|address
operator|.
name|createClient
argument_list|(
name|createOzoneConfiguration
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|OzoneSecurityUtil
operator|.
name|isSecurityEnabled
argument_list|(
name|createOzoneConfiguration
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error:Token operations work only when security is "
operator|+
literal|"enabled. To enable security set ozone.security.enabled to true."
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|Files
operator|.
name|notExists
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|tokenFile
argument_list|)
argument_list|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error:Cancel token operation failed as token file: "
operator|+
name|tokenFile
operator|+
literal|" containing encoded token doesn't exist."
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|Token
name|token
init|=
operator|new
name|Token
argument_list|()
decl_stmt|;
name|token
operator|.
name|decodeFromUrlString
argument_list|(
operator|new
name|String
argument_list|(
name|Files
operator|.
name|readAllBytes
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|tokenFile
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|getObjectStore
argument_list|()
operator|.
name|cancelDelegationToken
argument_list|(
name|token
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

