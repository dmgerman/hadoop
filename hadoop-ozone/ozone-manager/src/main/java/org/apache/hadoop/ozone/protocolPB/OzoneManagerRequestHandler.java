begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.protocolPB
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|exceptions
operator|.
name|OMException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyLocationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmMultipartCommitUploadPartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmMultipartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmMultipartUploadCompleteInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmMultipartUploadList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmMultipartUploadListParts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmPartInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OpenKeySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|protocol
operator|.
name|OzoneManagerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|AllocateBlockRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|AllocateBlockResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CancelDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CheckVolumeAccessRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CheckVolumeAccessResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CommitKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CommitKeyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateKeyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteKeyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|DeleteVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|GetDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|GetS3SecretResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|InfoBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|InfoBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|InfoVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|InfoVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|KeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListBucketsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListBucketsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListKeysRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListKeysResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListVolumeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ListVolumeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|LookupKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|LookupKeyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartCommitUploadPartRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartCommitUploadPartResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartInfoInitiateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartInfoInitiateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadAbortRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadAbortResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadCompleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadCompleteResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadListPartsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadListPartsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Part
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|RenameKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|RenameKeyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|RenewDelegationTokenResponseProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3BucketInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3BucketInfoResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3CreateBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3CreateBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3DeleteBucketRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3DeleteBucketResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3ListBucketsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|S3ListBucketsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ServiceListRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ServiceListResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetBucketPropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetBucketPropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetVolumePropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetVolumePropertyResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|OzoneTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|CancelDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|RenewDelegationTokenRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Command Handler for OM requests. OM State Machine calls this handler for  * deserializing the client request and sending it to OM.  */
end_comment

begin_class
DECL|class|OzoneManagerRequestHandler
specifier|public
class|class
name|OzoneManagerRequestHandler
block|{
DECL|field|LOG
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|OzoneManagerRequestHandler
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|impl
specifier|private
specifier|final
name|OzoneManagerProtocol
name|impl
decl_stmt|;
DECL|method|OzoneManagerRequestHandler (OzoneManagerProtocol om)
specifier|public
name|OzoneManagerRequestHandler
parameter_list|(
name|OzoneManagerProtocol
name|om
parameter_list|)
block|{
name|this
operator|.
name|impl
operator|=
name|om
expr_stmt|;
block|}
comment|//TODO simplify it to make it shorter
annotation|@
name|SuppressWarnings
argument_list|(
literal|"methodlength"
argument_list|)
DECL|method|handle (OMRequest request)
specifier|public
name|OMResponse
name|handle
parameter_list|(
name|OMRequest
name|request
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Received OMRequest: {}, "
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|Type
name|cmdType
init|=
name|request
operator|.
name|getCmdType
argument_list|()
decl_stmt|;
name|OMResponse
operator|.
name|Builder
name|responseBuilder
init|=
name|OMResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|cmdType
argument_list|)
operator|.
name|setStatus
argument_list|(
name|Status
operator|.
name|OK
argument_list|)
decl_stmt|;
try|try
block|{
switch|switch
condition|(
name|cmdType
condition|)
block|{
case|case
name|CreateVolume
case|:
name|CreateVolumeResponse
name|createVolumeResponse
init|=
name|createVolume
argument_list|(
name|request
operator|.
name|getCreateVolumeRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCreateVolumeResponse
argument_list|(
name|createVolumeResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetVolumeProperty
case|:
name|SetVolumePropertyResponse
name|setVolumePropertyResponse
init|=
name|setVolumeProperty
argument_list|(
name|request
operator|.
name|getSetVolumePropertyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setSetVolumePropertyResponse
argument_list|(
name|setVolumePropertyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CheckVolumeAccess
case|:
name|CheckVolumeAccessResponse
name|checkVolumeAccessResponse
init|=
name|checkVolumeAccess
argument_list|(
name|request
operator|.
name|getCheckVolumeAccessRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCheckVolumeAccessResponse
argument_list|(
name|checkVolumeAccessResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|InfoVolume
case|:
name|InfoVolumeResponse
name|infoVolumeResponse
init|=
name|infoVolume
argument_list|(
name|request
operator|.
name|getInfoVolumeRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setInfoVolumeResponse
argument_list|(
name|infoVolumeResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteVolume
case|:
name|DeleteVolumeResponse
name|deleteVolumeResponse
init|=
name|deleteVolume
argument_list|(
name|request
operator|.
name|getDeleteVolumeRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setDeleteVolumeResponse
argument_list|(
name|deleteVolumeResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ListVolume
case|:
name|ListVolumeResponse
name|listVolumeResponse
init|=
name|listVolumes
argument_list|(
name|request
operator|.
name|getListVolumeRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setListVolumeResponse
argument_list|(
name|listVolumeResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CreateBucket
case|:
name|CreateBucketResponse
name|createBucketResponse
init|=
name|createBucket
argument_list|(
name|request
operator|.
name|getCreateBucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCreateBucketResponse
argument_list|(
name|createBucketResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|InfoBucket
case|:
name|InfoBucketResponse
name|infoBucketResponse
init|=
name|infoBucket
argument_list|(
name|request
operator|.
name|getInfoBucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setInfoBucketResponse
argument_list|(
name|infoBucketResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|SetBucketProperty
case|:
name|SetBucketPropertyResponse
name|setBucketPropertyResponse
init|=
name|setBucketProperty
argument_list|(
name|request
operator|.
name|getSetBucketPropertyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setSetBucketPropertyResponse
argument_list|(
name|setBucketPropertyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteBucket
case|:
name|DeleteBucketResponse
name|deleteBucketResponse
init|=
name|deleteBucket
argument_list|(
name|request
operator|.
name|getDeleteBucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setDeleteBucketResponse
argument_list|(
name|deleteBucketResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ListBuckets
case|:
name|ListBucketsResponse
name|listBucketsResponse
init|=
name|listBuckets
argument_list|(
name|request
operator|.
name|getListBucketsRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setListBucketsResponse
argument_list|(
name|listBucketsResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CreateKey
case|:
name|CreateKeyResponse
name|createKeyResponse
init|=
name|createKey
argument_list|(
name|request
operator|.
name|getCreateKeyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCreateKeyResponse
argument_list|(
name|createKeyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|LookupKey
case|:
name|LookupKeyResponse
name|lookupKeyResponse
init|=
name|lookupKey
argument_list|(
name|request
operator|.
name|getLookupKeyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setLookupKeyResponse
argument_list|(
name|lookupKeyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|RenameKey
case|:
name|RenameKeyResponse
name|renameKeyResponse
init|=
name|renameKey
argument_list|(
name|request
operator|.
name|getRenameKeyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setRenameKeyResponse
argument_list|(
name|renameKeyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteKey
case|:
name|DeleteKeyResponse
name|deleteKeyResponse
init|=
name|deleteKey
argument_list|(
name|request
operator|.
name|getDeleteKeyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setDeleteKeyResponse
argument_list|(
name|deleteKeyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ListKeys
case|:
name|ListKeysResponse
name|listKeysResponse
init|=
name|listKeys
argument_list|(
name|request
operator|.
name|getListKeysRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setListKeysResponse
argument_list|(
name|listKeysResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CommitKey
case|:
name|CommitKeyResponse
name|commitKeyResponse
init|=
name|commitKey
argument_list|(
name|request
operator|.
name|getCommitKeyRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCommitKeyResponse
argument_list|(
name|commitKeyResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|AllocateBlock
case|:
name|AllocateBlockResponse
name|allocateBlockResponse
init|=
name|allocateBlock
argument_list|(
name|request
operator|.
name|getAllocateBlockRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setAllocateBlockResponse
argument_list|(
name|allocateBlockResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CreateS3Bucket
case|:
name|S3CreateBucketResponse
name|s3CreateBucketResponse
init|=
name|createS3Bucket
argument_list|(
name|request
operator|.
name|getCreateS3BucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCreateS3BucketResponse
argument_list|(
name|s3CreateBucketResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|DeleteS3Bucket
case|:
name|S3DeleteBucketResponse
name|s3DeleteBucketResponse
init|=
name|deleteS3Bucket
argument_list|(
name|request
operator|.
name|getDeleteS3BucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setDeleteS3BucketResponse
argument_list|(
name|s3DeleteBucketResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|InfoS3Bucket
case|:
name|S3BucketInfoResponse
name|s3BucketInfoResponse
init|=
name|getS3Bucketinfo
argument_list|(
name|request
operator|.
name|getInfoS3BucketRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setInfoS3BucketResponse
argument_list|(
name|s3BucketInfoResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ListS3Buckets
case|:
name|S3ListBucketsResponse
name|s3ListBucketsResponse
init|=
name|listS3Buckets
argument_list|(
name|request
operator|.
name|getListS3BucketsRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setListS3BucketsResponse
argument_list|(
name|s3ListBucketsResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|InitiateMultiPartUpload
case|:
name|MultipartInfoInitiateResponse
name|multipartInfoInitiateResponse
init|=
name|initiateMultiPartUpload
argument_list|(
name|request
operator|.
name|getInitiateMultiPartUploadRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setInitiateMultiPartUploadResponse
argument_list|(
name|multipartInfoInitiateResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CommitMultiPartUpload
case|:
name|MultipartCommitUploadPartResponse
name|commitUploadPartResponse
init|=
name|commitMultipartUploadPart
argument_list|(
name|request
operator|.
name|getCommitMultiPartUploadRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCommitMultiPartUploadResponse
argument_list|(
name|commitUploadPartResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|CompleteMultiPartUpload
case|:
name|MultipartUploadCompleteResponse
name|completeMultiPartUploadResponse
init|=
name|completeMultipartUpload
argument_list|(
name|request
operator|.
name|getCompleteMultiPartUploadRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCompleteMultiPartUploadResponse
argument_list|(
name|completeMultiPartUploadResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|AbortMultiPartUpload
case|:
name|MultipartUploadAbortResponse
name|abortMultiPartAbortResponse
init|=
name|abortMultipartUpload
argument_list|(
name|request
operator|.
name|getAbortMultiPartUploadRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setAbortMultiPartUploadResponse
argument_list|(
name|abortMultiPartAbortResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ListMultiPartUploadParts
case|:
name|MultipartUploadListPartsResponse
name|listPartsResponse
init|=
name|listParts
argument_list|(
name|request
operator|.
name|getListMultipartUploadPartsRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setListMultipartUploadPartsResponse
argument_list|(
name|listPartsResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|ServiceList
case|:
name|ServiceListResponse
name|serviceListResponse
init|=
name|getServiceList
argument_list|(
name|request
operator|.
name|getServiceListRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setServiceListResponse
argument_list|(
name|serviceListResponse
argument_list|)
expr_stmt|;
break|break;
case|case
name|GetDelegationToken
case|:
name|GetDelegationTokenResponseProto
name|getDtResp
init|=
name|getDelegationToken
argument_list|(
name|request
operator|.
name|getGetDelegationTokenRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setGetDelegationTokenResponse
argument_list|(
name|getDtResp
argument_list|)
expr_stmt|;
break|break;
case|case
name|RenewDelegationToken
case|:
name|RenewDelegationTokenResponseProto
name|renewDtResp
init|=
name|renewDelegationToken
argument_list|(
name|request
operator|.
name|getRenewDelegationTokenRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setRenewDelegationTokenResponse
argument_list|(
name|renewDtResp
argument_list|)
expr_stmt|;
break|break;
case|case
name|CancelDelegationToken
case|:
name|CancelDelegationTokenResponseProto
name|cancelDtResp
init|=
name|cancelDelegationToken
argument_list|(
name|request
operator|.
name|getCancelDelegationTokenRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setCancelDelegationTokenResponse
argument_list|(
name|cancelDtResp
argument_list|)
expr_stmt|;
break|break;
case|case
name|GetS3Secret
case|:
name|GetS3SecretResponse
name|getS3SecretResp
init|=
name|getS3Secret
argument_list|(
name|request
operator|.
name|getGetS3SecretRequest
argument_list|()
argument_list|)
decl_stmt|;
name|responseBuilder
operator|.
name|setGetS3SecretResponse
argument_list|(
name|getS3SecretResp
argument_list|)
expr_stmt|;
break|break;
default|default:
name|responseBuilder
operator|.
name|setSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|responseBuilder
operator|.
name|setMessage
argument_list|(
literal|"Unrecognized Command Type: "
operator|+
name|cmdType
argument_list|)
expr_stmt|;
break|break;
block|}
name|responseBuilder
operator|.
name|setSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|responseBuilder
operator|.
name|setSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|responseBuilder
operator|.
name|setStatus
argument_list|(
name|exceptionToResponseStatus
argument_list|(
name|ex
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|responseBuilder
operator|.
name|setMessage
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|responseBuilder
operator|.
name|build
argument_list|()
return|;
block|}
comment|// Convert and exception to corresponding status code
DECL|method|exceptionToResponseStatus (IOException ex)
specifier|private
name|Status
name|exceptionToResponseStatus
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|ex
operator|instanceof
name|OMException
condition|)
block|{
return|return
name|Status
operator|.
name|values
argument_list|()
index|[
operator|(
operator|(
name|OMException
operator|)
name|ex
operator|)
operator|.
name|getResult
argument_list|()
operator|.
name|ordinal
argument_list|()
index|]
return|;
block|}
else|else
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Unknown error occurs"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
return|return
name|Status
operator|.
name|INTERNAL_ERROR
return|;
block|}
block|}
comment|/**    * Validates that the incoming OM request has required parameters.    * TODO: Add more validation checks before writing the request to Ratis log.    *    * @param omRequest client request to OM    * @throws OMException thrown if required parameters are set to null.    */
DECL|method|validateRequest (OMRequest omRequest)
specifier|public
name|void
name|validateRequest
parameter_list|(
name|OMRequest
name|omRequest
parameter_list|)
throws|throws
name|OMException
block|{
name|Type
name|cmdType
init|=
name|omRequest
operator|.
name|getCmdType
argument_list|()
decl_stmt|;
if|if
condition|(
name|cmdType
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|OMException
argument_list|(
literal|"CmdType is null"
argument_list|,
name|OMException
operator|.
name|ResultCodes
operator|.
name|INVALID_REQUEST
argument_list|)
throw|;
block|}
if|if
condition|(
name|omRequest
operator|.
name|getClientId
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|OMException
argument_list|(
literal|"ClientId is null"
argument_list|,
name|OMException
operator|.
name|ResultCodes
operator|.
name|INVALID_REQUEST
argument_list|)
throw|;
block|}
block|}
DECL|method|createVolume (CreateVolumeRequest request)
specifier|private
name|CreateVolumeResponse
name|createVolume
parameter_list|(
name|CreateVolumeRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|impl
operator|.
name|createVolume
argument_list|(
name|OmVolumeArgs
operator|.
name|getFromProtobuf
argument_list|(
name|request
operator|.
name|getVolumeInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|CreateVolumeResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|setVolumeProperty ( SetVolumePropertyRequest request)
specifier|private
name|SetVolumePropertyResponse
name|setVolumeProperty
parameter_list|(
name|SetVolumePropertyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|SetVolumePropertyResponse
operator|.
name|Builder
name|resp
init|=
name|SetVolumePropertyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|String
name|volume
init|=
name|request
operator|.
name|getVolumeName
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasQuotaInBytes
argument_list|()
condition|)
block|{
name|long
name|quota
init|=
name|request
operator|.
name|getQuotaInBytes
argument_list|()
decl_stmt|;
name|impl
operator|.
name|setQuota
argument_list|(
name|volume
argument_list|,
name|quota
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|owner
init|=
name|request
operator|.
name|getOwnerName
argument_list|()
decl_stmt|;
name|impl
operator|.
name|setOwner
argument_list|(
name|volume
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|checkVolumeAccess ( CheckVolumeAccessRequest request)
specifier|private
name|CheckVolumeAccessResponse
name|checkVolumeAccess
parameter_list|(
name|CheckVolumeAccessRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|CheckVolumeAccessResponse
operator|.
name|Builder
name|resp
init|=
name|CheckVolumeAccessResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|boolean
name|access
init|=
name|impl
operator|.
name|checkVolumeAccess
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|request
operator|.
name|getUserAcl
argument_list|()
argument_list|)
decl_stmt|;
comment|// if no access, set the response status as access denied
if|if
condition|(
operator|!
name|access
condition|)
block|{
throw|throw
operator|new
name|OMException
argument_list|(
name|OMException
operator|.
name|ResultCodes
operator|.
name|ACCESS_DENIED
argument_list|)
throw|;
block|}
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|infoVolume (InfoVolumeRequest request)
specifier|private
name|InfoVolumeResponse
name|infoVolume
parameter_list|(
name|InfoVolumeRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|InfoVolumeResponse
operator|.
name|Builder
name|resp
init|=
name|InfoVolumeResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|String
name|volume
init|=
name|request
operator|.
name|getVolumeName
argument_list|()
decl_stmt|;
name|OmVolumeArgs
name|ret
init|=
name|impl
operator|.
name|getVolumeInfo
argument_list|(
name|volume
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setVolumeInfo
argument_list|(
name|ret
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|deleteVolume (DeleteVolumeRequest request)
specifier|private
name|DeleteVolumeResponse
name|deleteVolume
parameter_list|(
name|DeleteVolumeRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteVolumeResponse
operator|.
name|Builder
name|resp
init|=
name|DeleteVolumeResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|deleteVolume
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|listVolumes (ListVolumeRequest request)
specifier|private
name|ListVolumeResponse
name|listVolumes
parameter_list|(
name|ListVolumeRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|ListVolumeResponse
operator|.
name|Builder
name|resp
init|=
name|ListVolumeResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OmVolumeArgs
argument_list|>
name|result
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|getScope
argument_list|()
operator|==
name|ListVolumeRequest
operator|.
name|Scope
operator|.
name|VOLUMES_BY_USER
condition|)
block|{
name|result
operator|=
name|impl
operator|.
name|listVolumeByUser
argument_list|(
name|request
operator|.
name|getUserName
argument_list|()
argument_list|,
name|request
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|request
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|request
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|request
operator|.
name|getScope
argument_list|()
operator|==
name|ListVolumeRequest
operator|.
name|Scope
operator|.
name|VOLUMES_BY_CLUSTER
condition|)
block|{
name|result
operator|=
name|impl
operator|.
name|listAllVolumes
argument_list|(
name|request
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|request
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|request
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|.
name|forEach
argument_list|(
name|item
lambda|->
name|resp
operator|.
name|addVolumeInfo
argument_list|(
name|item
operator|.
name|getProtobuf
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createBucket (CreateBucketRequest request)
specifier|private
name|CreateBucketResponse
name|createBucket
parameter_list|(
name|CreateBucketRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|CreateBucketResponse
operator|.
name|Builder
name|resp
init|=
name|CreateBucketResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|createBucket
argument_list|(
name|OmBucketInfo
operator|.
name|getFromProtobuf
argument_list|(
name|request
operator|.
name|getBucketInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|infoBucket (InfoBucketRequest request)
specifier|private
name|InfoBucketResponse
name|infoBucket
parameter_list|(
name|InfoBucketRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|InfoBucketResponse
operator|.
name|Builder
name|resp
init|=
name|InfoBucketResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|impl
operator|.
name|getBucketInfo
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|request
operator|.
name|getBucketName
argument_list|()
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setBucketInfo
argument_list|(
name|omBucketInfo
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createKey (CreateKeyRequest request)
specifier|private
name|CreateKeyResponse
name|createKey
parameter_list|(
name|CreateKeyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|CreateKeyResponse
operator|.
name|Builder
name|resp
init|=
name|CreateKeyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|HddsProtos
operator|.
name|ReplicationType
name|type
init|=
name|keyArgs
operator|.
name|hasType
argument_list|()
condition|?
name|keyArgs
operator|.
name|getType
argument_list|()
else|:
literal|null
decl_stmt|;
name|HddsProtos
operator|.
name|ReplicationFactor
name|factor
init|=
name|keyArgs
operator|.
name|hasFactor
argument_list|()
condition|?
name|keyArgs
operator|.
name|getFactor
argument_list|()
else|:
literal|null
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|keyArgs
operator|.
name|getDataSize
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setFactor
argument_list|(
name|factor
argument_list|)
operator|.
name|setIsMultipartKey
argument_list|(
name|keyArgs
operator|.
name|getIsMultipartKey
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|keyArgs
operator|.
name|getMultipartUploadID
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadPartNumber
argument_list|(
name|keyArgs
operator|.
name|getMultipartNumber
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
if|if
condition|(
name|keyArgs
operator|.
name|hasDataSize
argument_list|()
condition|)
block|{
name|omKeyArgs
operator|.
name|setDataSize
argument_list|(
name|keyArgs
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|omKeyArgs
operator|.
name|setDataSize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|OpenKeySession
name|openKey
init|=
name|impl
operator|.
name|openKey
argument_list|(
name|omKeyArgs
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setKeyInfo
argument_list|(
name|openKey
operator|.
name|getKeyInfo
argument_list|()
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setID
argument_list|(
name|openKey
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setOpenVersion
argument_list|(
name|openKey
operator|.
name|getOpenVersion
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|lookupKey (LookupKeyRequest request)
specifier|private
name|LookupKeyResponse
name|lookupKey
parameter_list|(
name|LookupKeyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|LookupKeyResponse
operator|.
name|Builder
name|resp
init|=
name|LookupKeyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyInfo
name|keyInfo
init|=
name|impl
operator|.
name|lookupKey
argument_list|(
name|omKeyArgs
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setKeyInfo
argument_list|(
name|keyInfo
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|renameKey (RenameKeyRequest request)
specifier|private
name|RenameKeyResponse
name|renameKey
parameter_list|(
name|RenameKeyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|RenameKeyResponse
operator|.
name|Builder
name|resp
init|=
name|RenameKeyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|impl
operator|.
name|renameKey
argument_list|(
name|omKeyArgs
argument_list|,
name|request
operator|.
name|getToKeyName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|setBucketProperty ( SetBucketPropertyRequest request)
specifier|private
name|SetBucketPropertyResponse
name|setBucketProperty
parameter_list|(
name|SetBucketPropertyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|SetBucketPropertyResponse
operator|.
name|Builder
name|resp
init|=
name|SetBucketPropertyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|setBucketProperty
argument_list|(
name|OmBucketArgs
operator|.
name|getFromProtobuf
argument_list|(
name|request
operator|.
name|getBucketArgs
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|deleteKey (DeleteKeyRequest request)
specifier|private
name|DeleteKeyResponse
name|deleteKey
parameter_list|(
name|DeleteKeyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteKeyResponse
operator|.
name|Builder
name|resp
init|=
name|DeleteKeyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|impl
operator|.
name|deleteKey
argument_list|(
name|omKeyArgs
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|deleteBucket (DeleteBucketRequest request)
specifier|private
name|DeleteBucketResponse
name|deleteBucket
parameter_list|(
name|DeleteBucketRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteBucketResponse
operator|.
name|Builder
name|resp
init|=
name|DeleteBucketResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|deleteBucket
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|request
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|listBuckets (ListBucketsRequest request)
specifier|private
name|ListBucketsResponse
name|listBuckets
parameter_list|(
name|ListBucketsRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|ListBucketsResponse
operator|.
name|Builder
name|resp
init|=
name|ListBucketsResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OmBucketInfo
argument_list|>
name|buckets
init|=
name|impl
operator|.
name|listBuckets
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|request
operator|.
name|getStartKey
argument_list|()
argument_list|,
name|request
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|request
operator|.
name|getCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|OmBucketInfo
name|bucket
range|:
name|buckets
control|)
block|{
name|resp
operator|.
name|addBucketInfo
argument_list|(
name|bucket
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|listKeys (ListKeysRequest request)
specifier|private
name|ListKeysResponse
name|listKeys
parameter_list|(
name|ListKeysRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|ListKeysResponse
operator|.
name|Builder
name|resp
init|=
name|ListKeysResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OmKeyInfo
argument_list|>
name|keys
init|=
name|impl
operator|.
name|listKeys
argument_list|(
name|request
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|request
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|request
operator|.
name|getStartKey
argument_list|()
argument_list|,
name|request
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|request
operator|.
name|getCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|OmKeyInfo
name|key
range|:
name|keys
control|)
block|{
name|resp
operator|.
name|addKeyInfo
argument_list|(
name|key
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|commitKey (CommitKeyRequest request)
specifier|private
name|CommitKeyResponse
name|commitKey
parameter_list|(
name|CommitKeyRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|CommitKeyResponse
operator|.
name|Builder
name|resp
init|=
name|CommitKeyResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|HddsProtos
operator|.
name|ReplicationType
name|type
init|=
name|keyArgs
operator|.
name|hasType
argument_list|()
condition|?
name|keyArgs
operator|.
name|getType
argument_list|()
else|:
literal|null
decl_stmt|;
name|HddsProtos
operator|.
name|ReplicationFactor
name|factor
init|=
name|keyArgs
operator|.
name|hasFactor
argument_list|()
condition|?
name|keyArgs
operator|.
name|getFactor
argument_list|()
else|:
literal|null
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setLocationInfoList
argument_list|(
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|OmKeyLocationInfo
operator|::
name|getFromProtobuf
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setFactor
argument_list|(
name|factor
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|keyArgs
operator|.
name|getDataSize
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|impl
operator|.
name|commitKey
argument_list|(
name|omKeyArgs
argument_list|,
name|request
operator|.
name|getClientID
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|allocateBlock (AllocateBlockRequest request)
specifier|private
name|AllocateBlockResponse
name|allocateBlock
parameter_list|(
name|AllocateBlockRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|AllocateBlockResponse
operator|.
name|Builder
name|resp
init|=
name|AllocateBlockResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyLocationInfo
name|newLocation
init|=
name|impl
operator|.
name|allocateBlock
argument_list|(
name|omKeyArgs
argument_list|,
name|request
operator|.
name|getClientID
argument_list|()
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setKeyLocation
argument_list|(
name|newLocation
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getServiceList (ServiceListRequest request)
specifier|private
name|ServiceListResponse
name|getServiceList
parameter_list|(
name|ServiceListRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|ServiceListResponse
operator|.
name|Builder
name|resp
init|=
name|ServiceListResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|resp
operator|.
name|addAllServiceInfo
argument_list|(
name|impl
operator|.
name|getServiceList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|ServiceInfo
operator|::
name|getProtobuf
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createS3Bucket (S3CreateBucketRequest request)
specifier|private
name|S3CreateBucketResponse
name|createS3Bucket
parameter_list|(
name|S3CreateBucketRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|S3CreateBucketResponse
operator|.
name|Builder
name|resp
init|=
name|S3CreateBucketResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|createS3Bucket
argument_list|(
name|request
operator|.
name|getUserName
argument_list|()
argument_list|,
name|request
operator|.
name|getS3Bucketname
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|deleteS3Bucket (S3DeleteBucketRequest request)
specifier|private
name|S3DeleteBucketResponse
name|deleteS3Bucket
parameter_list|(
name|S3DeleteBucketRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|S3DeleteBucketResponse
operator|.
name|Builder
name|resp
init|=
name|S3DeleteBucketResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|impl
operator|.
name|deleteS3Bucket
argument_list|(
name|request
operator|.
name|getS3BucketName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getS3Bucketinfo (S3BucketInfoRequest request)
specifier|private
name|S3BucketInfoResponse
name|getS3Bucketinfo
parameter_list|(
name|S3BucketInfoRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|S3BucketInfoResponse
operator|.
name|Builder
name|resp
init|=
name|S3BucketInfoResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|resp
operator|.
name|setOzoneMapping
argument_list|(
name|impl
operator|.
name|getOzoneBucketMapping
argument_list|(
name|request
operator|.
name|getS3BucketName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|listS3Buckets (S3ListBucketsRequest request)
specifier|private
name|S3ListBucketsResponse
name|listS3Buckets
parameter_list|(
name|S3ListBucketsRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|S3ListBucketsResponse
operator|.
name|Builder
name|resp
init|=
name|S3ListBucketsResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OmBucketInfo
argument_list|>
name|buckets
init|=
name|impl
operator|.
name|listS3Buckets
argument_list|(
name|request
operator|.
name|getUserName
argument_list|()
argument_list|,
name|request
operator|.
name|getStartKey
argument_list|()
argument_list|,
name|request
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|request
operator|.
name|getCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|OmBucketInfo
name|bucket
range|:
name|buckets
control|)
block|{
name|resp
operator|.
name|addBucketInfo
argument_list|(
name|bucket
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|initiateMultiPartUpload ( MultipartInfoInitiateRequest request)
specifier|private
name|MultipartInfoInitiateResponse
name|initiateMultiPartUpload
parameter_list|(
name|MultipartInfoInitiateRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|MultipartInfoInitiateResponse
operator|.
name|Builder
name|resp
init|=
name|MultipartInfoInitiateResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|keyArgs
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|setFactor
argument_list|(
name|keyArgs
operator|.
name|getFactor
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmMultipartInfo
name|multipartInfo
init|=
name|impl
operator|.
name|initiateMultipartUpload
argument_list|(
name|omKeyArgs
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setVolumeName
argument_list|(
name|multipartInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setBucketName
argument_list|(
name|multipartInfo
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setKeyName
argument_list|(
name|multipartInfo
operator|.
name|getKeyName
argument_list|()
argument_list|)
expr_stmt|;
name|resp
operator|.
name|setMultipartUploadID
argument_list|(
name|multipartInfo
operator|.
name|getUploadID
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|commitMultipartUploadPart ( MultipartCommitUploadPartRequest request)
specifier|private
name|MultipartCommitUploadPartResponse
name|commitMultipartUploadPart
parameter_list|(
name|MultipartCommitUploadPartRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|MultipartCommitUploadPartResponse
operator|.
name|Builder
name|resp
init|=
name|MultipartCommitUploadPartResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|keyArgs
operator|.
name|getMultipartUploadID
argument_list|()
argument_list|)
operator|.
name|setIsMultipartKey
argument_list|(
name|keyArgs
operator|.
name|getIsMultipartKey
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadPartNumber
argument_list|(
name|keyArgs
operator|.
name|getMultipartNumber
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|keyArgs
operator|.
name|getDataSize
argument_list|()
argument_list|)
operator|.
name|setLocationInfoList
argument_list|(
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|OmKeyLocationInfo
operator|::
name|getFromProtobuf
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmMultipartCommitUploadPartInfo
name|commitUploadPartInfo
init|=
name|impl
operator|.
name|commitMultipartUploadPart
argument_list|(
name|omKeyArgs
argument_list|,
name|request
operator|.
name|getClientID
argument_list|()
argument_list|)
decl_stmt|;
name|resp
operator|.
name|setPartName
argument_list|(
name|commitUploadPartInfo
operator|.
name|getPartName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|resp
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|completeMultipartUpload ( MultipartUploadCompleteRequest request)
specifier|private
name|MultipartUploadCompleteResponse
name|completeMultipartUpload
parameter_list|(
name|MultipartUploadCompleteRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|MultipartUploadCompleteResponse
operator|.
name|Builder
name|response
init|=
name|MultipartUploadCompleteResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|request
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Part
argument_list|>
name|partsList
init|=
name|request
operator|.
name|getPartsListList
argument_list|()
decl_stmt|;
name|TreeMap
argument_list|<
name|Integer
argument_list|,
name|String
argument_list|>
name|partsMap
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Part
name|part
range|:
name|partsList
control|)
block|{
name|partsMap
operator|.
name|put
argument_list|(
name|part
operator|.
name|getPartNumber
argument_list|()
argument_list|,
name|part
operator|.
name|getPartName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|OmMultipartUploadList
name|omMultipartUploadList
init|=
operator|new
name|OmMultipartUploadList
argument_list|(
name|partsMap
argument_list|)
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|keyArgs
operator|.
name|getMultipartUploadID
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmMultipartUploadCompleteInfo
name|omMultipartUploadCompleteInfo
init|=
name|impl
operator|.
name|completeMultipartUpload
argument_list|(
name|omKeyArgs
argument_list|,
name|omMultipartUploadList
argument_list|)
decl_stmt|;
name|response
operator|.
name|setVolume
argument_list|(
name|omMultipartUploadCompleteInfo
operator|.
name|getVolume
argument_list|()
argument_list|)
operator|.
name|setBucket
argument_list|(
name|omMultipartUploadCompleteInfo
operator|.
name|getBucket
argument_list|()
argument_list|)
operator|.
name|setKey
argument_list|(
name|omMultipartUploadCompleteInfo
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|setHash
argument_list|(
name|omMultipartUploadCompleteInfo
operator|.
name|getHash
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|response
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|abortMultipartUpload ( MultipartUploadAbortRequest multipartUploadAbortRequest)
specifier|private
name|MultipartUploadAbortResponse
name|abortMultipartUpload
parameter_list|(
name|MultipartUploadAbortRequest
name|multipartUploadAbortRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|MultipartUploadAbortResponse
operator|.
name|Builder
name|response
init|=
name|MultipartUploadAbortResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|multipartUploadAbortRequest
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|OmKeyArgs
name|omKeyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|keyArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|keyArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyArgs
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|keyArgs
operator|.
name|getMultipartUploadID
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|impl
operator|.
name|abortMultipartUpload
argument_list|(
name|omKeyArgs
argument_list|)
expr_stmt|;
return|return
name|response
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|listParts ( MultipartUploadListPartsRequest multipartUploadListPartsRequest)
specifier|private
name|MultipartUploadListPartsResponse
name|listParts
parameter_list|(
name|MultipartUploadListPartsRequest
name|multipartUploadListPartsRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|MultipartUploadListPartsResponse
operator|.
name|Builder
name|response
init|=
name|MultipartUploadListPartsResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|OmMultipartUploadListParts
name|omMultipartUploadListParts
init|=
name|impl
operator|.
name|listParts
argument_list|(
name|multipartUploadListPartsRequest
operator|.
name|getVolume
argument_list|()
argument_list|,
name|multipartUploadListPartsRequest
operator|.
name|getBucket
argument_list|()
argument_list|,
name|multipartUploadListPartsRequest
operator|.
name|getKey
argument_list|()
argument_list|,
name|multipartUploadListPartsRequest
operator|.
name|getUploadID
argument_list|()
argument_list|,
name|multipartUploadListPartsRequest
operator|.
name|getPartNumbermarker
argument_list|()
argument_list|,
name|multipartUploadListPartsRequest
operator|.
name|getMaxParts
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OmPartInfo
argument_list|>
name|omPartInfoList
init|=
name|omMultipartUploadListParts
operator|.
name|getPartInfoList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneManagerProtocolProtos
operator|.
name|PartInfo
argument_list|>
name|partInfoList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|omPartInfoList
operator|.
name|forEach
argument_list|(
name|partInfo
lambda|->
name|partInfoList
operator|.
name|add
argument_list|(
name|partInfo
operator|.
name|getProto
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setType
argument_list|(
name|omMultipartUploadListParts
operator|.
name|getReplicationType
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setNextPartNumberMarker
argument_list|(
name|omMultipartUploadListParts
operator|.
name|getNextPartNumberMarker
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setIsTruncated
argument_list|(
name|omMultipartUploadListParts
operator|.
name|isTruncated
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|response
operator|.
name|addAllPartsList
argument_list|(
name|partInfoList
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getDelegationToken ( GetDelegationTokenRequestProto request)
specifier|private
name|GetDelegationTokenResponseProto
name|getDelegationToken
parameter_list|(
name|GetDelegationTokenRequestProto
name|request
parameter_list|)
throws|throws
name|OMException
block|{
name|GetDelegationTokenResponseProto
operator|.
name|Builder
name|rb
init|=
name|GetDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|Token
argument_list|<
name|OzoneTokenIdentifier
argument_list|>
name|token
init|=
name|impl
operator|.
name|getDelegationToken
argument_list|(
operator|new
name|Text
argument_list|(
name|request
operator|.
name|getRenewer
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|token
operator|!=
literal|null
condition|)
block|{
name|rb
operator|.
name|setResponse
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|GetDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setToken
argument_list|(
name|OMPBHelper
operator|.
name|convertToTokenProto
argument_list|(
name|token
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|rb
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|renewDelegationToken ( RenewDelegationTokenRequestProto request)
specifier|private
name|RenewDelegationTokenResponseProto
name|renewDelegationToken
parameter_list|(
name|RenewDelegationTokenRequestProto
name|request
parameter_list|)
throws|throws
name|OMException
block|{
name|RenewDelegationTokenResponseProto
operator|.
name|Builder
name|rb
init|=
name|RenewDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasToken
argument_list|()
condition|)
block|{
name|long
name|expiryTime
init|=
name|impl
operator|.
name|renewDelegationToken
argument_list|(
name|OMPBHelper
operator|.
name|convertToDelegationToken
argument_list|(
name|request
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|rb
operator|.
name|setResponse
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|RenewDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNewExpiryTime
argument_list|(
name|expiryTime
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|rb
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|cancelDelegationToken ( CancelDelegationTokenRequestProto req)
specifier|private
name|CancelDelegationTokenResponseProto
name|cancelDelegationToken
parameter_list|(
name|CancelDelegationTokenRequestProto
name|req
parameter_list|)
throws|throws
name|OMException
block|{
name|CancelDelegationTokenResponseProto
operator|.
name|Builder
name|rb
init|=
name|CancelDelegationTokenResponseProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|.
name|hasToken
argument_list|()
condition|)
block|{
name|impl
operator|.
name|cancelDelegationToken
argument_list|(
name|OMPBHelper
operator|.
name|convertToDelegationToken
argument_list|(
name|req
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rb
operator|.
name|setResponse
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|proto
operator|.
name|SecurityProtos
operator|.
name|CancelDelegationTokenResponseProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rb
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getS3Secret ( OzoneManagerProtocolProtos.GetS3SecretRequest request)
specifier|private
name|OzoneManagerProtocolProtos
operator|.
name|GetS3SecretResponse
name|getS3Secret
parameter_list|(
name|OzoneManagerProtocolProtos
operator|.
name|GetS3SecretRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|OzoneManagerProtocolProtos
operator|.
name|GetS3SecretResponse
operator|.
name|Builder
name|rb
init|=
name|OzoneManagerProtocolProtos
operator|.
name|GetS3SecretResponse
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|rb
operator|.
name|setS3Secret
argument_list|(
name|impl
operator|.
name|getS3Secret
argument_list|(
name|request
operator|.
name|getKerberosID
argument_list|()
argument_list|)
operator|.
name|getProtobuf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rb
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

