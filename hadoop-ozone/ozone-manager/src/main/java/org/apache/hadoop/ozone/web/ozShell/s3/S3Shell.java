begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.ozShell.s3
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|io
operator|.
name|opentracing
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|io
operator|.
name|opentracing
operator|.
name|util
operator|.
name|GlobalTracer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|tracing
operator|.
name|TracingUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|Shell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|ozShell
operator|.
name|bucket
operator|.
name|S3BucketMapping
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
operator|.
name|Command
import|;
end_import

begin_comment
comment|/**  * Shell for s3 related operations.  */
end_comment

begin_class
annotation|@
name|Command
argument_list|(
name|name
operator|=
literal|"ozone s3"
argument_list|,
name|description
operator|=
literal|"Shell for S3 specific operations"
argument_list|,
name|subcommands
operator|=
block|{
name|GetS3SecretHandler
operator|.
name|class
block|,
name|S3BucketMapping
operator|.
name|class
block|}
argument_list|)
DECL|class|S3Shell
specifier|public
class|class
name|S3Shell
extends|extends
name|Shell
block|{
annotation|@
name|Override
DECL|method|execute (String[] argv)
specifier|public
name|void
name|execute
parameter_list|(
name|String
index|[]
name|argv
parameter_list|)
block|{
name|TracingUtil
operator|.
name|initTracing
argument_list|(
literal|"s3shell"
argument_list|)
expr_stmt|;
try|try
init|(
name|Scope
name|scope
init|=
name|GlobalTracer
operator|.
name|get
argument_list|()
operator|.
name|buildSpan
argument_list|(
literal|"main"
argument_list|)
operator|.
name|startActive
argument_list|(
literal|true
argument_list|)
init|)
block|{
name|super
operator|.
name|execute
argument_list|(
name|argv
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Main for the S3Shell Command handling.    *    * @param argv - System Args Strings[]    * @throws Exception    */
DECL|method|main (String[] argv)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|argv
parameter_list|)
throws|throws
name|Exception
block|{
operator|new
name|S3Shell
argument_list|()
operator|.
name|run
argument_list|(
name|argv
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

