begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
package|;
end_package

begin_import
import|import
name|edu
operator|.
name|umd
operator|.
name|cs
operator|.
name|findbugs
operator|.
name|annotations
operator|.
name|SuppressFBWarnings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
operator|.
name|Private
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
operator|.
name|Unstable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|protocol
operator|.
name|OzoneManagerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|PolicyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMConfigKeys
operator|.
name|OZONE_OM_SECURITY_CLIENT_PROTOCOL_ACL
import|;
end_import

begin_comment
comment|/**  * {@link PolicyProvider} for OM protocols.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
DECL|class|OMPolicyProvider
specifier|public
specifier|final
class|class
name|OMPolicyProvider
extends|extends
name|PolicyProvider
block|{
DECL|field|atomicReference
specifier|private
specifier|static
name|AtomicReference
argument_list|<
name|OMPolicyProvider
argument_list|>
name|atomicReference
init|=
operator|new
name|AtomicReference
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|OMPolicyProvider ()
specifier|private
name|OMPolicyProvider
parameter_list|()
block|{   }
annotation|@
name|Private
annotation|@
name|Unstable
DECL|method|getInstance ()
specifier|public
specifier|static
name|OMPolicyProvider
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|atomicReference
operator|.
name|get
argument_list|()
operator|==
literal|null
condition|)
block|{
name|atomicReference
operator|.
name|compareAndSet
argument_list|(
literal|null
argument_list|,
operator|new
name|OMPolicyProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|atomicReference
operator|.
name|get
argument_list|()
return|;
block|}
DECL|field|OM_SERVICES
specifier|private
specifier|static
specifier|final
name|Service
index|[]
name|OM_SERVICES
init|=
operator|new
name|Service
index|[]
block|{
operator|new
name|Service
argument_list|(
name|OZONE_OM_SECURITY_CLIENT_PROTOCOL_ACL
argument_list|,
name|OzoneManagerProtocol
operator|.
name|class
argument_list|)
block|,       }
decl_stmt|;
annotation|@
name|SuppressFBWarnings
argument_list|(
literal|"EI_EXPOSE_REP"
argument_list|)
annotation|@
name|Override
DECL|method|getServices ()
specifier|public
name|Service
index|[]
name|getServices
parameter_list|()
block|{
return|return
name|OM_SERVICES
return|;
block|}
block|}
end_class

end_unit

