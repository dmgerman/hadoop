begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|mockit
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|mockit
operator|.
name|MockUp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|ProtobufRpcEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OmMetadataManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OzoneManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|bucket
operator|.
name|OMBucketCreateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Test OMClient Request with user information.  */
end_comment

begin_class
DECL|class|TestOMClientRequestWithUserInfo
specifier|public
class|class
name|TestOMClientRequestWithUserInfo
block|{
annotation|@
name|Rule
DECL|field|folder
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
DECL|field|ozoneManager
specifier|private
name|OzoneManager
name|ozoneManager
decl_stmt|;
DECL|field|omMetrics
specifier|private
name|OMMetrics
name|omMetrics
decl_stmt|;
DECL|field|omMetadataManager
specifier|private
name|OMMetadataManager
name|omMetadataManager
decl_stmt|;
DECL|field|userGroupInformation
specifier|private
name|UserGroupInformation
name|userGroupInformation
init|=
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
literal|"temp"
argument_list|)
decl_stmt|;
DECL|field|inetAddress
specifier|private
name|InetAddress
name|inetAddress
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|ozoneManager
operator|=
name|Mockito
operator|.
name|mock
argument_list|(
name|OzoneManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|omMetrics
operator|=
name|OMMetrics
operator|.
name|create
argument_list|()
expr_stmt|;
name|OzoneConfiguration
name|ozoneConfiguration
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|ozoneConfiguration
operator|.
name|set
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_DB_DIRS
argument_list|,
name|folder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|omMetadataManager
operator|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|ozoneConfiguration
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ozoneManager
operator|.
name|getMetrics
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|omMetrics
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ozoneManager
operator|.
name|getMetadataManager
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|omMetadataManager
argument_list|)
expr_stmt|;
name|inetAddress
operator|=
name|InetAddress
operator|.
name|getByName
argument_list|(
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
operator|new
name|MockUp
argument_list|<
name|ProtobufRpcEngine
operator|.
name|Server
argument_list|>
argument_list|()
block|{
annotation|@
name|Mock
specifier|public
name|UserGroupInformation
name|getRemoteUser
parameter_list|()
block|{
return|return
name|userGroupInformation
return|;
block|}
specifier|public
name|InetAddress
name|getRemoteAddress
parameter_list|()
block|{
return|return
name|inetAddress
return|;
block|}
block|}
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUserInfo ()
specifier|public
name|void
name|testUserInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|bucketName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|volumeName
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|omRequest
init|=
name|TestOMRequestUtils
operator|.
name|createBucketRequest
argument_list|(
name|bucketName
argument_list|,
name|volumeName
argument_list|,
literal|true
argument_list|,
name|OzoneManagerProtocolProtos
operator|.
name|StorageTypeProto
operator|.
name|DISK
argument_list|)
decl_stmt|;
name|OMBucketCreateRequest
name|omBucketCreateRequest
init|=
operator|new
name|OMBucketCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|omRequest
operator|.
name|hasUserInfo
argument_list|()
argument_list|)
expr_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|modifiedRequest
init|=
name|omBucketCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|modifiedRequest
operator|.
name|hasUserInfo
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now pass modified request to OMBucketCreateRequest and check ugi and
comment|// remote Address.
name|omBucketCreateRequest
operator|=
operator|new
name|OMBucketCreateRequest
argument_list|(
name|modifiedRequest
argument_list|)
expr_stmt|;
name|InetAddress
name|remoteAddress
init|=
name|omBucketCreateRequest
operator|.
name|getRemoteAddress
argument_list|()
decl_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|omBucketCreateRequest
operator|.
name|createUGI
argument_list|()
decl_stmt|;
comment|// Now check we have original user info and remote address or not.
comment|// Here from OMRequest user info, converted to UGI and InetAddress.
name|Assert
operator|.
name|assertEquals
argument_list|(
name|inetAddress
operator|.
name|getHostAddress
argument_list|()
argument_list|,
name|remoteAddress
operator|.
name|getHostAddress
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|userGroupInformation
operator|.
name|getUserName
argument_list|()
argument_list|,
name|ugi
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

