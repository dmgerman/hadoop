begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.response.key
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|response
operator|.
name|key
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|BlockID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|pipeline
operator|.
name|Pipeline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|pipeline
operator|.
name|PipelineID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OmUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyLocationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|TestOMRequestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests OMKeyDeleteResponse.  */
end_comment

begin_class
DECL|class|TestOMKeyDeleteResponse
specifier|public
class|class
name|TestOMKeyDeleteResponse
extends|extends
name|TestOMKeyResponse
block|{
annotation|@
name|Test
DECL|method|testAddToDBBatch ()
specifier|public
name|void
name|testAddToDBBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|OmKeyInfo
name|omKeyInfo
init|=
name|TestOMRequestUtils
operator|.
name|createOmKeyInfo
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|replicationType
argument_list|,
name|replicationFactor
argument_list|)
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
name|omResponse
init|=
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDeleteKeyResponse
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|DeleteKeyResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
operator|.
name|setStatus
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|DeleteKey
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|long
name|deletionTime
init|=
name|Time
operator|.
name|now
argument_list|()
decl_stmt|;
name|OMKeyDeleteResponse
name|omKeyDeleteResponse
init|=
operator|new
name|OMKeyDeleteResponse
argument_list|(
name|omKeyInfo
argument_list|,
name|deletionTime
argument_list|,
name|omResponse
argument_list|)
decl_stmt|;
name|String
name|ozoneKey
init|=
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|)
decl_stmt|;
name|String
name|deletedOzoneKeyName
init|=
name|OmUtils
operator|.
name|getDeletedKeyName
argument_list|(
name|ozoneKey
argument_list|,
name|deletionTime
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|clientID
argument_list|,
name|replicationType
argument_list|,
name|replicationFactor
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
name|omKeyDeleteResponse
operator|.
name|addToDBBatch
argument_list|(
name|omMetadataManager
argument_list|,
name|batchOperation
argument_list|)
expr_stmt|;
comment|// Do manual commit and see whether addToBatch is successful or not.
name|omMetadataManager
operator|.
name|getStore
argument_list|()
operator|.
name|commitBatchOperation
argument_list|(
name|batchOperation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
comment|// As default key entry does not have any blocks, it should not be in
comment|// deletedKeyTable.
name|Assert
operator|.
name|assertFalse
argument_list|(
name|omMetadataManager
operator|.
name|getDeletedTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|deletedOzoneKeyName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddToDBBatchWithNonEmptyBlocks ()
specifier|public
name|void
name|testAddToDBBatchWithNonEmptyBlocks
parameter_list|()
throws|throws
name|Exception
block|{
name|OmKeyInfo
name|omKeyInfo
init|=
name|TestOMRequestUtils
operator|.
name|createOmKeyInfo
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|replicationType
argument_list|,
name|replicationFactor
argument_list|)
decl_stmt|;
comment|// Add block to key.
name|List
argument_list|<
name|OmKeyLocationInfo
argument_list|>
name|omKeyLocationInfoList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|Pipeline
name|pipeline
init|=
name|Pipeline
operator|.
name|newBuilder
argument_list|()
operator|.
name|setState
argument_list|(
name|Pipeline
operator|.
name|PipelineState
operator|.
name|OPEN
argument_list|)
operator|.
name|setId
argument_list|(
name|PipelineID
operator|.
name|randomId
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|replicationType
argument_list|)
operator|.
name|setFactor
argument_list|(
name|replicationFactor
argument_list|)
operator|.
name|setNodes
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyLocationInfo
name|omKeyLocationInfo
init|=
operator|new
name|OmKeyLocationInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setBlockID
argument_list|(
operator|new
name|BlockID
argument_list|(
literal|100L
argument_list|,
literal|1000L
argument_list|)
argument_list|)
operator|.
name|setOffset
argument_list|(
literal|0
argument_list|)
operator|.
name|setLength
argument_list|(
literal|100L
argument_list|)
operator|.
name|setPipeline
argument_list|(
name|pipeline
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|omKeyLocationInfoList
operator|.
name|add
argument_list|(
name|omKeyLocationInfo
argument_list|)
expr_stmt|;
name|omKeyInfo
operator|.
name|appendNewBlocks
argument_list|(
name|omKeyLocationInfoList
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
name|ozoneKey
init|=
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|)
decl_stmt|;
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|put
argument_list|(
name|ozoneKey
argument_list|,
name|omKeyInfo
argument_list|)
expr_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
name|omResponse
init|=
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDeleteKeyResponse
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|DeleteKeyResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
operator|.
name|setStatus
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|OK
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|DeleteKey
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|long
name|deletionTime
init|=
name|Time
operator|.
name|now
argument_list|()
decl_stmt|;
name|OMKeyDeleteResponse
name|omKeyDeleteResponse
init|=
operator|new
name|OMKeyDeleteResponse
argument_list|(
name|omKeyInfo
argument_list|,
name|deletionTime
argument_list|,
name|omResponse
argument_list|)
decl_stmt|;
name|String
name|deletedOzoneKeyName
init|=
name|OmUtils
operator|.
name|getDeletedKeyName
argument_list|(
name|ozoneKey
argument_list|,
name|deletionTime
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
name|omKeyDeleteResponse
operator|.
name|addToDBBatch
argument_list|(
name|omMetadataManager
argument_list|,
name|batchOperation
argument_list|)
expr_stmt|;
comment|// Do manual commit and see whether addToBatch is successful or not.
name|omMetadataManager
operator|.
name|getStore
argument_list|()
operator|.
name|commitBatchOperation
argument_list|(
name|batchOperation
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
comment|// Key has blocks, it should not be in deletedKeyTable.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omMetadataManager
operator|.
name|getDeletedTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|deletedOzoneKeyName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddToDBBatchWithErrorResponse ()
specifier|public
name|void
name|testAddToDBBatchWithErrorResponse
parameter_list|()
throws|throws
name|Exception
block|{
name|OmKeyInfo
name|omKeyInfo
init|=
name|TestOMRequestUtils
operator|.
name|createOmKeyInfo
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|replicationType
argument_list|,
name|replicationFactor
argument_list|)
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
name|omResponse
init|=
name|OzoneManagerProtocolProtos
operator|.
name|OMResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDeleteKeyResponse
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|DeleteKeyResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
operator|.
name|setStatus
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|KEY_NOT_FOUND
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|DeleteKey
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OMKeyDeleteResponse
name|omKeyDeleteResponse
init|=
operator|new
name|OMKeyDeleteResponse
argument_list|(
name|omKeyInfo
argument_list|,
name|Time
operator|.
name|now
argument_list|()
argument_list|,
name|omResponse
argument_list|)
decl_stmt|;
name|String
name|ozoneKey
init|=
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|clientID
argument_list|,
name|replicationType
argument_list|,
name|replicationFactor
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
name|omKeyDeleteResponse
operator|.
name|addToDBBatch
argument_list|(
name|omMetadataManager
argument_list|,
name|batchOperation
argument_list|)
expr_stmt|;
comment|// Do manual commit and see whether addToBatch is successful or not.
name|omMetadataManager
operator|.
name|getStore
argument_list|()
operator|.
name|commitBatchOperation
argument_list|(
name|batchOperation
argument_list|)
expr_stmt|;
comment|// As omResponse is error it is a no-op. So, entry should be still in the
comment|// keyTable.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|ozoneKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

