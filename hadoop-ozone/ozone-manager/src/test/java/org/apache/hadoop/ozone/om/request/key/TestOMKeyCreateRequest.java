begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.request.key
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|key
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyLocationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|TestOMRequestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|response
operator|.
name|OMClientResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|KeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
import|;
end_import

begin_comment
comment|/**  * Tests OMCreateKeyRequest class.  */
end_comment

begin_class
DECL|class|TestOMKeyCreateRequest
specifier|public
class|class
name|TestOMKeyCreateRequest
extends|extends
name|TestOMKeyRequest
block|{
annotation|@
name|Test
DECL|method|testPreExecuteWithNormalKey ()
specifier|public
name|void
name|testPreExecuteWithNormalKey
parameter_list|()
throws|throws
name|Exception
block|{
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|false
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreExecuteWithMultipartKey ()
specifier|public
name|void
name|testPreExecuteWithMultipartKey
parameter_list|()
throws|throws
name|Exception
block|{
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|true
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCache ()
specifier|public
name|void
name|testValidateAndUpdateCache
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|modifiedOmRequest
init|=
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|false
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|OMKeyCreateRequest
name|omKeyCreateRequest
init|=
operator|new
name|OMKeyCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
decl_stmt|;
comment|// Add volume and bucket entries to DB.
name|TestOMRequestUtils
operator|.
name|addVolumeAndBucketToDB
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|id
argument_list|)
decl_stmt|;
comment|// Before calling
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omKeyCreateResponse
init|=
name|omKeyCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|OK
argument_list|,
name|omKeyCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check open table whether key is added or not.
name|omKeyInfo
operator|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OmKeyLocationInfo
argument_list|>
name|omKeyLocationInfoList
init|=
name|omKeyInfo
operator|.
name|getLatestVersionLocations
argument_list|()
operator|.
name|getLocationList
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omKeyLocationInfoList
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|OmKeyLocationInfo
name|omKeyLocationInfo
init|=
name|omKeyLocationInfoList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Check modification time
name|Assert
operator|.
name|assertEquals
argument_list|(
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|omKeyInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check data of the block
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
name|keyLocation
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getKeyLocations
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getContainerID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getLocalID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getLocalID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithNoSuchMultipartUploadError ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithNoSuchMultipartUploadError
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|partNumber
init|=
literal|1
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|true
argument_list|,
name|partNumber
argument_list|)
argument_list|)
decl_stmt|;
name|OMKeyCreateRequest
name|omKeyCreateRequest
init|=
operator|new
name|OMKeyCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
decl_stmt|;
comment|// Add volume and bucket entries to DB.
name|TestOMRequestUtils
operator|.
name|addVolumeAndBucketToDB
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|id
argument_list|)
decl_stmt|;
comment|// Before calling
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omKeyCreateResponse
init|=
name|omKeyCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|NO_SUCH_MULTIPART_UPLOAD_ERROR
argument_list|,
name|omKeyCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// As we got error, no entry should be created in openKeyTable.
name|omKeyInfo
operator|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithVolumeNotFound ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithVolumeNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|modifiedOmRequest
init|=
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|false
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|OMKeyCreateRequest
name|omKeyCreateRequest
init|=
operator|new
name|OMKeyCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
decl_stmt|;
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|id
argument_list|)
decl_stmt|;
comment|// Before calling
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omKeyCreateResponse
init|=
name|omKeyCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|VOLUME_NOT_FOUND
argument_list|,
name|omKeyCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// As We got an error, openKey Table should not have entry.
name|omKeyInfo
operator|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithBucketNotFound ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithBucketNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|modifiedOmRequest
init|=
name|doPreExecute
argument_list|(
name|createKeyRequest
argument_list|(
literal|false
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|OMKeyCreateRequest
name|omKeyCreateRequest
init|=
operator|new
name|OMKeyCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
decl_stmt|;
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addVolumeToDB
argument_list|(
name|volumeName
argument_list|,
literal|"ozone"
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
comment|// Before calling
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omKeyCreateResponse
init|=
name|omKeyCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|BUCKET_NOT_FOUND
argument_list|,
name|omKeyCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// As We got an error, openKey Table should not have entry.
name|omKeyInfo
operator|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
block|}
comment|/**    * This method calls preExecute and verify the modified request.    * @param originalOMRequest    * @return OMRequest - modified request returned from preExecute.    * @throws Exception    */
DECL|method|doPreExecute (OMRequest originalOMRequest)
specifier|private
name|OMRequest
name|doPreExecute
parameter_list|(
name|OMRequest
name|originalOMRequest
parameter_list|)
throws|throws
name|Exception
block|{
name|OMKeyCreateRequest
name|omKeyCreateRequest
init|=
operator|new
name|OMKeyCreateRequest
argument_list|(
name|originalOMRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omKeyCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|originalOMRequest
operator|.
name|getCmdType
argument_list|()
argument_list|,
name|modifiedOmRequest
operator|.
name|getCmdType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|originalOMRequest
operator|.
name|getClientId
argument_list|()
argument_list|,
name|modifiedOmRequest
operator|.
name|getClientId
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|modifiedOmRequest
operator|.
name|hasCreateKeyRequest
argument_list|()
argument_list|)
expr_stmt|;
name|CreateKeyRequest
name|createKeyRequest
init|=
name|modifiedOmRequest
operator|.
name|getCreateKeyRequest
argument_list|()
decl_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|createKeyRequest
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
comment|// Time should be set
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyArgs
operator|.
name|getModificationTime
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Client ID should be set.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|createKeyRequest
operator|.
name|hasClientID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|createKeyRequest
operator|.
name|getClientID
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|originalOMRequest
operator|.
name|getCreateKeyRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getIsMultipartKey
argument_list|()
condition|)
block|{
comment|// As our data size is 100, and scmBlockSize is default to 1000, so we
comment|// shall have only one block.
name|List
argument_list|<
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
argument_list|>
name|keyLocations
init|=
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
decl_stmt|;
comment|// KeyLocation should be set.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyLocations
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|containerID
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|localID
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getLocalID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|hasPipeline
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|scmBlockSize
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// We don't create blocks for multipart key in createKey preExecute.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
return|return
name|modifiedOmRequest
return|;
block|}
comment|/**    * Create OMRequest which encapsulates CreateKeyRequest.    * @param isMultipartKey    * @param partNumber    * @return OMRequest.    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"parameterNumber"
argument_list|)
DECL|method|createKeyRequest (boolean isMultipartKey, int partNumber)
specifier|private
name|OMRequest
name|createKeyRequest
parameter_list|(
name|boolean
name|isMultipartKey
parameter_list|,
name|int
name|partNumber
parameter_list|)
block|{
name|KeyArgs
operator|.
name|Builder
name|keyArgs
init|=
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setIsMultipartKey
argument_list|(
name|isMultipartKey
argument_list|)
operator|.
name|setFactor
argument_list|(
name|replicationFactor
argument_list|)
operator|.
name|setType
argument_list|(
name|replicationType
argument_list|)
decl_stmt|;
if|if
condition|(
name|isMultipartKey
condition|)
block|{
name|keyArgs
operator|.
name|setDataSize
argument_list|(
name|dataSize
argument_list|)
operator|.
name|setMultipartNumber
argument_list|(
name|partNumber
argument_list|)
expr_stmt|;
block|}
name|OzoneManagerProtocolProtos
operator|.
name|CreateKeyRequest
name|createKeyRequest
init|=
name|CreateKeyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|keyArgs
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateKey
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCreateKeyRequest
argument_list|(
name|createKeyRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

