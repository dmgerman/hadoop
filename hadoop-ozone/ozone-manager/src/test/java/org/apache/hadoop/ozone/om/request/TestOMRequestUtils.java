begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_comment
comment|/**  * Helper class to test OMClientRequest classes.  */
end_comment

begin_class
DECL|class|TestOMRequestUtils
specifier|public
specifier|final
class|class
name|TestOMRequestUtils
block|{
DECL|method|TestOMRequestUtils ()
specifier|private
name|TestOMRequestUtils
parameter_list|()
block|{
comment|//Do nothing
block|}
comment|/**    * Add's volume and bucket creation entries to OM DB.    * @param volumeName    * @param bucketName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addVolumeAndBucketToDB (String volumeName, String bucketName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addVolumeAndBucketToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|addVolumeToDB
argument_list|(
name|volumeName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|OmBucketInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|omMetadataManager
operator|.
name|getBucketTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getBucketKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
argument_list|,
name|omBucketInfo
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add's volume creation entry to OM DB.    * @param volumeName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addVolumeToDB (String volumeName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addVolumeToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|OmVolumeArgs
name|omVolumeArgs
init|=
name|OmVolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setAdminName
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|omMetadataManager
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getVolumeKey
argument_list|(
name|volumeName
argument_list|)
argument_list|,
name|omVolumeArgs
argument_list|)
expr_stmt|;
block|}
DECL|method|createBucketRequest ( String bucketName, String volumeName, boolean isVersionEnabled, OzoneManagerProtocolProtos.StorageTypeProto storageTypeProto)
specifier|public
specifier|static
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|createBucketRequest
parameter_list|(
name|String
name|bucketName
parameter_list|,
name|String
name|volumeName
parameter_list|,
name|boolean
name|isVersionEnabled
parameter_list|,
name|OzoneManagerProtocolProtos
operator|.
name|StorageTypeProto
name|storageTypeProto
parameter_list|)
block|{
name|OzoneManagerProtocolProtos
operator|.
name|BucketInfo
name|bucketInfo
init|=
name|OzoneManagerProtocolProtos
operator|.
name|BucketInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setIsVersionEnabled
argument_list|(
name|isVersionEnabled
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|storageTypeProto
argument_list|)
operator|.
name|addAllMetadata
argument_list|(
name|getMetadataList
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
operator|.
name|Builder
name|req
init|=
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|req
operator|.
name|setBucketInfo
argument_list|(
name|bucketInfo
argument_list|)
expr_stmt|;
return|return
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCreateBucketRequest
argument_list|(
name|req
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateBucket
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getMetadataList ()
specifier|public
specifier|static
name|List
argument_list|<
name|HddsProtos
operator|.
name|KeyValue
argument_list|>
name|getMetadataList
parameter_list|()
block|{
name|List
argument_list|<
name|HddsProtos
operator|.
name|KeyValue
argument_list|>
name|metadataList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|HddsProtos
operator|.
name|KeyValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"value1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|HddsProtos
operator|.
name|KeyValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"key2"
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"value2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|metadataList
return|;
block|}
block|}
end_class

end_unit

