begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.request
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneAcl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyLocationInfoGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|RepeatedOmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|s3
operator|.
name|bucket
operator|.
name|S3BucketCreateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadAbortRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartCommitUploadPartRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartUploadCompleteRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|KeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|MultipartInfoInitiateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetVolumePropertyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|AddAclRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|RemoveAclRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|SetAclRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
operator|.
name|OzoneObj
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
operator|.
name|OzoneObj
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
operator|.
name|OzoneObj
operator|.
name|StoreType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
operator|.
name|OzoneObjInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|cache
operator|.
name|CacheKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|utils
operator|.
name|db
operator|.
name|cache
operator|.
name|CacheValue
import|;
end_import

begin_comment
comment|/**  * Helper class to test OMClientRequest classes.  */
end_comment

begin_class
DECL|class|TestOMRequestUtils
specifier|public
specifier|final
class|class
name|TestOMRequestUtils
block|{
DECL|method|TestOMRequestUtils ()
specifier|private
name|TestOMRequestUtils
parameter_list|()
block|{
comment|//Do nothing
block|}
comment|/**    * Add's volume and bucket creation entries to OM DB.    * @param volumeName    * @param bucketName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addVolumeAndBucketToDB (String volumeName, String bucketName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addVolumeAndBucketToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|addVolumeToDB
argument_list|(
name|volumeName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|OmBucketInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Add to cache.
name|omMetadataManager
operator|.
name|getBucketTable
argument_list|()
operator|.
name|addCacheEntry
argument_list|(
operator|new
name|CacheKey
argument_list|<>
argument_list|(
name|omMetadataManager
operator|.
name|getBucketKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
argument_list|)
argument_list|,
operator|new
name|CacheValue
argument_list|<>
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|omBucketInfo
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add key entry to KeyTable. if openKeyTable flag is true, add's entries    * to openKeyTable, else add's it to keyTable.    * @param openKeyTable    * @param volumeName    * @param bucketName    * @param keyName    * @param clientID    * @param replicationType    * @param replicationFactor    * @param omMetadataManager    * @throws Exception    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"parameterNumber"
argument_list|)
DECL|method|addKeyToTable (boolean openKeyTable, String volumeName, String bucketName, String keyName, long clientID, HddsProtos.ReplicationType replicationType, HddsProtos.ReplicationFactor replicationFactor, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addKeyToTable
parameter_list|(
name|boolean
name|openKeyTable
parameter_list|,
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|long
name|clientID
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationType
name|replicationType
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
name|replicationFactor
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|OmKeyInfo
operator|.
name|Builder
name|builder
init|=
operator|new
name|OmKeyInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setOmKeyLocationInfos
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|OmKeyLocationInfoGroup
argument_list|(
literal|0
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setModificationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
literal|1000L
argument_list|)
operator|.
name|setReplicationType
argument_list|(
name|replicationType
argument_list|)
operator|.
name|setReplicationFactor
argument_list|(
name|replicationFactor
argument_list|)
decl_stmt|;
if|if
condition|(
name|openKeyTable
condition|)
block|{
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|clientID
argument_list|)
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|)
argument_list|,
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Create OmKeyInfo.    */
DECL|method|createOmKeyInfo (String volumeName, String bucketName, String keyName, HddsProtos.ReplicationType replicationType, HddsProtos.ReplicationFactor replicationFactor)
specifier|public
specifier|static
name|OmKeyInfo
name|createOmKeyInfo
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationType
name|replicationType
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
name|replicationFactor
parameter_list|)
block|{
return|return
operator|new
name|OmKeyInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setOmKeyLocationInfos
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|OmKeyLocationInfoGroup
argument_list|(
literal|0
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setModificationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
literal|1000L
argument_list|)
operator|.
name|setReplicationType
argument_list|(
name|replicationType
argument_list|)
operator|.
name|setReplicationFactor
argument_list|(
name|replicationFactor
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Add volume creation entry to OM DB.    * @param volumeName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addVolumeToDB (String volumeName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addVolumeToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|addVolumeToDB
argument_list|(
name|volumeName
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
block|}
DECL|method|addS3BucketToDB (String volumeName, String s3BucketName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addS3BucketToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|s3BucketName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|omMetadataManager
operator|.
name|getS3Table
argument_list|()
operator|.
name|put
argument_list|(
name|s3BucketName
argument_list|,
name|S3BucketCreateRequest
operator|.
name|formatS3MappingName
argument_list|(
name|volumeName
argument_list|,
name|s3BucketName
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add volume creation entry to OM DB.    * @param volumeName    * @param ownerName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addVolumeToDB (String volumeName, String ownerName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addVolumeToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|ownerName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|OmVolumeArgs
name|omVolumeArgs
init|=
name|OmVolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCreationTime
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|.
name|setVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setAdminName
argument_list|(
name|ownerName
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|ownerName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|omMetadataManager
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getVolumeKey
argument_list|(
name|volumeName
argument_list|)
argument_list|,
name|omVolumeArgs
argument_list|)
expr_stmt|;
comment|// Add to cache.
name|omMetadataManager
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|addCacheEntry
argument_list|(
operator|new
name|CacheKey
argument_list|<>
argument_list|(
name|omMetadataManager
operator|.
name|getVolumeKey
argument_list|(
name|volumeName
argument_list|)
argument_list|)
argument_list|,
operator|new
name|CacheValue
argument_list|<>
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|omVolumeArgs
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createBucketRequest ( String bucketName, String volumeName, boolean isVersionEnabled, OzoneManagerProtocolProtos.StorageTypeProto storageTypeProto)
specifier|public
specifier|static
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|createBucketRequest
parameter_list|(
name|String
name|bucketName
parameter_list|,
name|String
name|volumeName
parameter_list|,
name|boolean
name|isVersionEnabled
parameter_list|,
name|OzoneManagerProtocolProtos
operator|.
name|StorageTypeProto
name|storageTypeProto
parameter_list|)
block|{
name|OzoneManagerProtocolProtos
operator|.
name|BucketInfo
name|bucketInfo
init|=
name|OzoneManagerProtocolProtos
operator|.
name|BucketInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setIsVersionEnabled
argument_list|(
name|isVersionEnabled
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|storageTypeProto
argument_list|)
operator|.
name|addAllMetadata
argument_list|(
name|getMetadataList
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
operator|.
name|Builder
name|req
init|=
name|OzoneManagerProtocolProtos
operator|.
name|CreateBucketRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|req
operator|.
name|setBucketInfo
argument_list|(
name|bucketInfo
argument_list|)
expr_stmt|;
return|return
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCreateBucketRequest
argument_list|(
name|req
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateBucket
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createS3BucketRequest ( String userName, String s3BucketName)
specifier|public
specifier|static
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|createS3BucketRequest
parameter_list|(
name|String
name|userName
parameter_list|,
name|String
name|s3BucketName
parameter_list|)
block|{
name|OzoneManagerProtocolProtos
operator|.
name|S3CreateBucketRequest
name|request
init|=
name|OzoneManagerProtocolProtos
operator|.
name|S3CreateBucketRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserName
argument_list|(
name|userName
argument_list|)
operator|.
name|setS3Bucketname
argument_list|(
name|s3BucketName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCreateS3BucketRequest
argument_list|(
name|request
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateS3Bucket
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|deleteS3BucketRequest ( String s3BucketName)
specifier|public
specifier|static
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
name|deleteS3BucketRequest
parameter_list|(
name|String
name|s3BucketName
parameter_list|)
block|{
name|OzoneManagerProtocolProtos
operator|.
name|S3DeleteBucketRequest
name|request
init|=
name|OzoneManagerProtocolProtos
operator|.
name|S3DeleteBucketRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setS3BucketName
argument_list|(
name|s3BucketName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDeleteS3BucketRequest
argument_list|(
name|request
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|DeleteS3Bucket
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getMetadataList ()
specifier|public
specifier|static
name|List
argument_list|<
name|HddsProtos
operator|.
name|KeyValue
argument_list|>
name|getMetadataList
parameter_list|()
block|{
name|List
argument_list|<
name|HddsProtos
operator|.
name|KeyValue
argument_list|>
name|metadataList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|HddsProtos
operator|.
name|KeyValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"key1"
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"value1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|HddsProtos
operator|.
name|KeyValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"key2"
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"value2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|metadataList
return|;
block|}
comment|/**    * Add user to user table.    * @param volumeName    * @param ownerName    * @param omMetadataManager    * @throws Exception    */
DECL|method|addUserToDB (String volumeName, String ownerName, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|void
name|addUserToDB
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|ownerName
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|Exception
block|{
name|OzoneManagerProtocolProtos
operator|.
name|VolumeList
name|volumeList
init|=
name|OzoneManagerProtocolProtos
operator|.
name|VolumeList
operator|.
name|newBuilder
argument_list|()
operator|.
name|addVolumeNames
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setObjectID
argument_list|(
literal|1
argument_list|)
operator|.
name|setUpdateID
argument_list|(
literal|1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|omMetadataManager
operator|.
name|getUserTable
argument_list|()
operator|.
name|put
argument_list|(
name|omMetadataManager
operator|.
name|getUserKey
argument_list|(
name|ownerName
argument_list|)
argument_list|,
name|volumeList
argument_list|)
expr_stmt|;
block|}
comment|/**    * Create OMRequest for set volume property request with owner set.    * @param volumeName    * @param newOwner    * @return OMRequest    */
DECL|method|createSetVolumePropertyRequest (String volumeName, String newOwner)
specifier|public
specifier|static
name|OMRequest
name|createSetVolumePropertyRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|newOwner
parameter_list|)
block|{
name|SetVolumePropertyRequest
name|setVolumePropertyRequest
init|=
name|SetVolumePropertyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|newOwner
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|SetVolumeProperty
argument_list|)
operator|.
name|setSetVolumePropertyRequest
argument_list|(
name|setVolumePropertyRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create OMRequest for set volume property request with quota set.    * @param volumeName    * @param quota    * @return OMRequest    */
DECL|method|createSetVolumePropertyRequest (String volumeName, long quota)
specifier|public
specifier|static
name|OMRequest
name|createSetVolumePropertyRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|long
name|quota
parameter_list|)
block|{
name|SetVolumePropertyRequest
name|setVolumePropertyRequest
init|=
name|SetVolumePropertyRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setQuotaInBytes
argument_list|(
name|quota
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|SetVolumeProperty
argument_list|)
operator|.
name|setSetVolumePropertyRequest
argument_list|(
name|setVolumePropertyRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createVolumeAddAclRequest (String volumeName, OzoneAcl acl)
specifier|public
specifier|static
name|OMRequest
name|createVolumeAddAclRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneAcl
name|acl
parameter_list|)
block|{
name|AddAclRequest
operator|.
name|Builder
name|addAclRequestBuilder
init|=
name|AddAclRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|addAclRequestBuilder
operator|.
name|setObj
argument_list|(
name|OzoneObj
operator|.
name|toProtobuf
argument_list|(
operator|new
name|OzoneObjInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setResType
argument_list|(
name|ResourceType
operator|.
name|VOLUME
argument_list|)
operator|.
name|setStoreType
argument_list|(
name|StoreType
operator|.
name|OZONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
block|{
name|addAclRequestBuilder
operator|.
name|setAcl
argument_list|(
name|OzoneAcl
operator|.
name|toProtobuf
argument_list|(
name|acl
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|AddAcl
argument_list|)
operator|.
name|setAddAclRequest
argument_list|(
name|addAclRequestBuilder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createVolumeRemoveAclRequest (String volumeName, OzoneAcl acl)
specifier|public
specifier|static
name|OMRequest
name|createVolumeRemoveAclRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneAcl
name|acl
parameter_list|)
block|{
name|RemoveAclRequest
operator|.
name|Builder
name|removeAclRequestBuilder
init|=
name|RemoveAclRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|removeAclRequestBuilder
operator|.
name|setObj
argument_list|(
name|OzoneObj
operator|.
name|toProtobuf
argument_list|(
operator|new
name|OzoneObjInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setResType
argument_list|(
name|ResourceType
operator|.
name|VOLUME
argument_list|)
operator|.
name|setStoreType
argument_list|(
name|StoreType
operator|.
name|OZONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
block|{
name|removeAclRequestBuilder
operator|.
name|setAcl
argument_list|(
name|OzoneAcl
operator|.
name|toProtobuf
argument_list|(
name|acl
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|RemoveAcl
argument_list|)
operator|.
name|setRemoveAclRequest
argument_list|(
name|removeAclRequestBuilder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createVolumeSetAclRequest (String volumeName, List<OzoneAcl> acls)
specifier|public
specifier|static
name|OMRequest
name|createVolumeSetAclRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|acls
parameter_list|)
block|{
name|SetAclRequest
operator|.
name|Builder
name|setAclRequestBuilder
init|=
name|SetAclRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|setAclRequestBuilder
operator|.
name|setObj
argument_list|(
name|OzoneObj
operator|.
name|toProtobuf
argument_list|(
operator|new
name|OzoneObjInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setResType
argument_list|(
name|ResourceType
operator|.
name|VOLUME
argument_list|)
operator|.
name|setStoreType
argument_list|(
name|StoreType
operator|.
name|OZONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|acls
operator|!=
literal|null
condition|)
block|{
name|acls
operator|.
name|forEach
argument_list|(
name|acl
lambda|->
name|setAclRequestBuilder
operator|.
name|addAcl
argument_list|(
name|OzoneAcl
operator|.
name|toProtobuf
argument_list|(
name|acl
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|SetAcl
argument_list|)
operator|.
name|setSetAclRequest
argument_list|(
name|setAclRequestBuilder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Deletes key from Key table and adds it to DeletedKeys table.    * @return the deletedKey name    */
DECL|method|deleteKey (String ozoneKey, OMMetadataManager omMetadataManager)
specifier|public
specifier|static
name|String
name|deleteKey
parameter_list|(
name|String
name|ozoneKey
parameter_list|,
name|OMMetadataManager
name|omMetadataManager
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Retrieve the keyInfo
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|ozoneKey
argument_list|)
decl_stmt|;
comment|// Delete key from KeyTable and put in DeletedKeyTable
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|delete
argument_list|(
name|ozoneKey
argument_list|)
expr_stmt|;
name|RepeatedOmKeyInfo
name|repeatedOmKeyInfo
init|=
name|omMetadataManager
operator|.
name|getDeletedTable
argument_list|()
operator|.
name|get
argument_list|(
name|ozoneKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|repeatedOmKeyInfo
operator|==
literal|null
condition|)
block|{
name|repeatedOmKeyInfo
operator|=
operator|new
name|RepeatedOmKeyInfo
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|repeatedOmKeyInfo
operator|.
name|addOmKeyInfo
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
block|}
name|omMetadataManager
operator|.
name|getDeletedTable
argument_list|()
operator|.
name|put
argument_list|(
name|ozoneKey
argument_list|,
name|repeatedOmKeyInfo
argument_list|)
expr_stmt|;
return|return
name|ozoneKey
return|;
block|}
comment|/**    * Create OMRequest which encapsulates InitiateMultipartUpload request.    * @param volumeName    * @param bucketName    * @param keyName    */
DECL|method|createInitiateMPURequest (String volumeName, String bucketName, String keyName)
specifier|public
specifier|static
name|OMRequest
name|createInitiateMPURequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
block|{
name|MultipartInfoInitiateRequest
name|multipartInfoInitiateRequest
init|=
name|MultipartInfoInitiateRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|InitiateMultiPartUpload
argument_list|)
operator|.
name|setInitiateMultiPartUploadRequest
argument_list|(
name|multipartInfoInitiateRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create OMRequest which encapsulates InitiateMultipartUpload request.    * @param volumeName    * @param bucketName    * @param keyName    */
DECL|method|createCommitPartMPURequest (String volumeName, String bucketName, String keyName, long clientID, long size, String multipartUploadID, int partNumber)
specifier|public
specifier|static
name|OMRequest
name|createCommitPartMPURequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|long
name|clientID
parameter_list|,
name|long
name|size
parameter_list|,
name|String
name|multipartUploadID
parameter_list|,
name|int
name|partNumber
parameter_list|)
block|{
comment|// Just set dummy size.
name|KeyArgs
operator|.
name|Builder
name|keyArgs
init|=
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|size
argument_list|)
operator|.
name|setMultipartNumber
argument_list|(
name|partNumber
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|multipartUploadID
argument_list|)
operator|.
name|addAllKeyLocations
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
decl_stmt|;
comment|// Just adding dummy list. As this is for UT only.
name|MultipartCommitUploadPartRequest
name|multipartCommitUploadPartRequest
init|=
name|MultipartCommitUploadPartRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|keyArgs
argument_list|)
operator|.
name|setClientID
argument_list|(
name|clientID
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CommitMultiPartUpload
argument_list|)
operator|.
name|setCommitMultiPartUploadRequest
argument_list|(
name|multipartCommitUploadPartRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createAbortMPURequest (String volumeName, String bucketName, String keyName, String multipartUploadID)
specifier|public
specifier|static
name|OMRequest
name|createAbortMPURequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|String
name|multipartUploadID
parameter_list|)
block|{
name|KeyArgs
operator|.
name|Builder
name|keyArgs
init|=
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|multipartUploadID
argument_list|)
decl_stmt|;
name|MultipartUploadAbortRequest
name|multipartUploadAbortRequest
init|=
name|MultipartUploadAbortRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|keyArgs
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|AbortMultiPartUpload
argument_list|)
operator|.
name|setAbortMultiPartUploadRequest
argument_list|(
name|multipartUploadAbortRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createCompleteMPURequest (String volumeName, String bucketName, String keyName, String multipartUploadID, List<OzoneManagerProtocolProtos.Part> partList)
specifier|public
specifier|static
name|OMRequest
name|createCompleteMPURequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|String
name|multipartUploadID
parameter_list|,
name|List
argument_list|<
name|OzoneManagerProtocolProtos
operator|.
name|Part
argument_list|>
name|partList
parameter_list|)
block|{
name|KeyArgs
operator|.
name|Builder
name|keyArgs
init|=
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setMultipartUploadID
argument_list|(
name|multipartUploadID
argument_list|)
decl_stmt|;
name|MultipartUploadCompleteRequest
name|multipartUploadCompleteRequest
init|=
name|MultipartUploadCompleteRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|keyArgs
argument_list|)
operator|.
name|addAllPartsList
argument_list|(
name|partList
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CompleteMultiPartUpload
argument_list|)
operator|.
name|setCompleteMultiPartUploadRequest
argument_list|(
name|multipartUploadCompleteRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create OMRequest for create volume.    * @param volumeName    * @param adminName    * @param ownerName    * @return OMRequest    */
DECL|method|createVolumeRequest (String volumeName, String adminName, String ownerName)
specifier|public
specifier|static
name|OMRequest
name|createVolumeRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|adminName
parameter_list|,
name|String
name|ownerName
parameter_list|)
block|{
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
name|volumeInfo
init|=
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setAdminName
argument_list|(
name|adminName
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|ownerName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeRequest
name|createVolumeRequest
init|=
name|OzoneManagerProtocolProtos
operator|.
name|CreateVolumeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeInfo
argument_list|(
name|volumeInfo
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateVolume
argument_list|)
operator|.
name|setCreateVolumeRequest
argument_list|(
name|createVolumeRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create OMRequest for delete bucket.    * @param volumeName    * @param bucketName    */
DECL|method|createDeleteBucketRequest (String volumeName, String bucketName)
specifier|public
specifier|static
name|OMRequest
name|createDeleteBucketRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
block|{
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDeleteBucketRequest
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|DeleteBucketRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
argument_list|)
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|DeleteBucket
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Add the Bucket information to OzoneManager DB and cache.    * @param omMetadataManager    * @param omBucketInfo    * @throws IOException    */
DECL|method|addBucketToOM (OMMetadataManager omMetadataManager, OmBucketInfo omBucketInfo)
specifier|public
specifier|static
name|void
name|addBucketToOM
parameter_list|(
name|OMMetadataManager
name|omMetadataManager
parameter_list|,
name|OmBucketInfo
name|omBucketInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|dbBucketKey
init|=
name|omMetadataManager
operator|.
name|getBucketKey
argument_list|(
name|omBucketInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|omBucketInfo
operator|.
name|getBucketName
argument_list|()
argument_list|)
decl_stmt|;
name|omMetadataManager
operator|.
name|getBucketTable
argument_list|()
operator|.
name|put
argument_list|(
name|dbBucketKey
argument_list|,
name|omBucketInfo
argument_list|)
expr_stmt|;
name|omMetadataManager
operator|.
name|getBucketTable
argument_list|()
operator|.
name|addCacheEntry
argument_list|(
operator|new
name|CacheKey
argument_list|<>
argument_list|(
name|dbBucketKey
argument_list|)
argument_list|,
operator|new
name|CacheValue
argument_list|<>
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|omBucketInfo
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add the Volume information to OzoneManager DB and Cache.    * @param omMetadataManager    * @param omVolumeArgs    * @throws IOException    */
DECL|method|addVolumeToOM (OMMetadataManager omMetadataManager, OmVolumeArgs omVolumeArgs)
specifier|public
specifier|static
name|void
name|addVolumeToOM
parameter_list|(
name|OMMetadataManager
name|omMetadataManager
parameter_list|,
name|OmVolumeArgs
name|omVolumeArgs
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|dbVolumeKey
init|=
name|omMetadataManager
operator|.
name|getVolumeKey
argument_list|(
name|omVolumeArgs
operator|.
name|getVolume
argument_list|()
argument_list|)
decl_stmt|;
name|omMetadataManager
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|put
argument_list|(
name|dbVolumeKey
argument_list|,
name|omVolumeArgs
argument_list|)
expr_stmt|;
name|omMetadataManager
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|addCacheEntry
argument_list|(
operator|new
name|CacheKey
argument_list|<>
argument_list|(
name|dbVolumeKey
argument_list|)
argument_list|,
operator|new
name|CacheValue
argument_list|<>
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|omVolumeArgs
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

