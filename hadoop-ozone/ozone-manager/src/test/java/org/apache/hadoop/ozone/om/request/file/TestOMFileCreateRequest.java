begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.request.file
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|file
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyLocationInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|TestOMRequestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|request
operator|.
name|key
operator|.
name|TestOMKeyRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|response
operator|.
name|OMClientResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|CreateFileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|KeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OMRequest
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|BUCKET_NOT_FOUND
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|FILE_ALREADY_EXISTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|NOT_A_FILE
import|;
end_import

begin_comment
comment|/**  * Tests OMFileCreateRequest.  */
end_comment

begin_class
DECL|class|TestOMFileCreateRequest
specifier|public
class|class
name|TestOMFileCreateRequest
extends|extends
name|TestOMKeyRequest
block|{
annotation|@
name|Test
DECL|method|testPreExecute ()
specifier|public
name|void
name|testPreExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|omRequest
init|=
name|createFileRequest
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|OMFileCreateRequest
name|omFileCreateRequest
init|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omFileCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotEquals
argument_list|(
name|omRequest
argument_list|,
name|modifiedOmRequest
argument_list|)
expr_stmt|;
comment|// Check clientID and modification time is set or not.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|modifiedOmRequest
operator|.
name|hasCreateFileRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|keyArgs
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyArgs
operator|.
name|getModificationTime
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// As our data size is 100, and scmBlockSize is default to 1000, so we
comment|// shall have only one block.
name|List
argument_list|<
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
argument_list|>
name|keyLocations
init|=
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
decl_stmt|;
comment|// KeyLocation should be set.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyLocations
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|containerID
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|localID
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getLocalID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|hasPipeline
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|scmBlockSize
argument_list|,
name|keyLocations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreExecuteWithBlankKey ()
specifier|public
name|void
name|testPreExecuteWithBlankKey
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|omRequest
init|=
name|createFileRequest
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|""
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|OMFileCreateRequest
name|omFileCreateRequest
init|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omFileCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotEquals
argument_list|(
name|omRequest
argument_list|,
name|modifiedOmRequest
argument_list|)
expr_stmt|;
comment|// When KeyName is root, nothing will be set.
name|Assert
operator|.
name|assertTrue
argument_list|(
name|modifiedOmRequest
operator|.
name|hasCreateFileRequest
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|KeyArgs
name|keyArgs
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|keyArgs
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyArgs
operator|.
name|getModificationTime
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|keyArgs
operator|.
name|getKeyLocationsList
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCache ()
specifier|public
name|void
name|testValidateAndUpdateCache
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|omRequest
init|=
name|createFileRequest
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addVolumeAndBucketToDB
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OMFileCreateRequest
name|omFileCreateRequest
init|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omFileCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|id
argument_list|)
decl_stmt|;
comment|// Before calling
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|omFileCreateRequest
operator|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omFileCreateResponse
init|=
name|omFileCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Status
operator|.
name|OK
argument_list|,
name|omFileCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check open table whether key is added or not.
name|omKeyInfo
operator|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OmKeyLocationInfo
argument_list|>
name|omKeyLocationInfoList
init|=
name|omKeyInfo
operator|.
name|getLatestVersionLocations
argument_list|()
operator|.
name|getLocationList
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omKeyLocationInfoList
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|OmKeyLocationInfo
name|omKeyLocationInfo
init|=
name|omKeyLocationInfoList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Check modification time
name|Assert
operator|.
name|assertEquals
argument_list|(
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|omKeyInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check data of the block
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
name|keyLocation
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getKeyLocations
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getContainerID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getLocalID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getLocalID
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithBucketNotFound ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithBucketNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|OMRequest
name|omRequest
init|=
name|createFileRequest
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addVolumeToDB
argument_list|(
name|volumeName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OMFileCreateRequest
name|omFileCreateRequest
init|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omFileCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|omFileCreateRequest
operator|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omFileCreateResponse
init|=
name|omFileCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|BUCKET_NOT_FOUND
argument_list|,
name|omFileCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithNonRecursive ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithNonRecursive
parameter_list|()
throws|throws
name|Exception
block|{
name|testNonRecursivePath
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
literal|"a/b"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Create some child keys for the path
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"a/b/c/d"
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
literal|"a/b/c"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Delete child key and add a path "a/b/ to key table
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|delete
argument_list|(
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"a/b/c/d"
argument_list|)
argument_list|)
expr_stmt|;
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"a/b/"
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
literal|"a/b/e"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithRecursive ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithRecursive
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Should be able to create file even if parent directories does not
comment|// exist and key already exist, as this is with overwrite enabled.
name|testNonRecursivePath
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"c/d/e/f"
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
literal|"c/d/e/f"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Create some child keys for the path
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"a/b/c/d"
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
literal|"a/b/c"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithRecursiveAndOverWrite ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithRecursiveAndOverWrite
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|key
init|=
literal|"c/d/e/f"
decl_stmt|;
comment|// Should be able to create file even if parent directories does not exist
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Add the key to key table
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|key
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
comment|// Even if key exists, should be able to create file as overwrite is set
comment|// to true
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testValidateAndUpdateCacheWithNonRecursiveAndOverWrite ()
specifier|public
name|void
name|testValidateAndUpdateCacheWithNonRecursiveAndOverWrite
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|key
init|=
literal|"c/d/e/f"
decl_stmt|;
comment|// Need to add the path which starts with "c/d/e" to keyTable as this is
comment|// non-recursive parent should exist.
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
literal|"c/d/e/h"
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Add the key to key table
name|TestOMRequestUtils
operator|.
name|addKeyToTable
argument_list|(
literal|false
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|key
argument_list|,
literal|0L
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
comment|// Even if key exists, should be able to create file as overwrite is set
comment|// to true
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|testNonRecursivePath
argument_list|(
name|key
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|testNonRecursivePath (String key, boolean overWrite, boolean recursive, boolean fail)
specifier|private
name|void
name|testNonRecursivePath
parameter_list|(
name|String
name|key
parameter_list|,
name|boolean
name|overWrite
parameter_list|,
name|boolean
name|recursive
parameter_list|,
name|boolean
name|fail
parameter_list|)
throws|throws
name|Exception
block|{
name|OMRequest
name|omRequest
init|=
name|createFileRequest
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|key
argument_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|RATIS
argument_list|,
name|overWrite
argument_list|,
name|recursive
argument_list|)
decl_stmt|;
name|TestOMRequestUtils
operator|.
name|addVolumeAndBucketToDB
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OMFileCreateRequest
name|omFileCreateRequest
init|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|omRequest
argument_list|)
decl_stmt|;
name|OMRequest
name|modifiedOmRequest
init|=
name|omFileCreateRequest
operator|.
name|preExecute
argument_list|(
name|ozoneManager
argument_list|)
decl_stmt|;
name|omFileCreateRequest
operator|=
operator|new
name|OMFileCreateRequest
argument_list|(
name|modifiedOmRequest
argument_list|)
expr_stmt|;
name|OMClientResponse
name|omFileCreateResponse
init|=
name|omFileCreateRequest
operator|.
name|validateAndUpdateCache
argument_list|(
name|ozoneManager
argument_list|,
literal|100L
argument_list|)
decl_stmt|;
if|if
condition|(
name|fail
condition|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omFileCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|==
name|NOT_A_FILE
operator|||
name|omFileCreateResponse
operator|.
name|getOMResponse
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|==
name|FILE_ALREADY_EXISTS
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|long
name|id
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getClientID
argument_list|()
decl_stmt|;
name|String
name|openKey
init|=
name|omMetadataManager
operator|.
name|getOpenKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|key
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|OmKeyInfo
name|omKeyInfo
init|=
name|omMetadataManager
operator|.
name|getOpenKeyTable
argument_list|()
operator|.
name|get
argument_list|(
name|openKey
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|omKeyInfo
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OmKeyLocationInfo
argument_list|>
name|omKeyLocationInfoList
init|=
name|omKeyInfo
operator|.
name|getLatestVersionLocations
argument_list|()
operator|.
name|getLocationList
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|omKeyLocationInfoList
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|OmKeyLocationInfo
name|omKeyLocationInfo
init|=
name|omKeyLocationInfoList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Check modification time
name|Assert
operator|.
name|assertEquals
argument_list|(
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getModificationTime
argument_list|()
argument_list|,
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check data of the block
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
name|keyLocation
init|=
name|modifiedOmRequest
operator|.
name|getCreateFileRequest
argument_list|()
operator|.
name|getKeyArgs
argument_list|()
operator|.
name|getKeyLocations
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getContainerID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getContainerID
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
operator|.
name|getContainerBlockID
argument_list|()
operator|.
name|getLocalID
argument_list|()
argument_list|,
name|omKeyLocationInfo
operator|.
name|getLocalID
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Create OMRequest which encapsulates OMFileCreateRequest.    * @param volumeName    * @param bucketName    * @param keyName    * @param replicationFactor    * @param replicationType    * @return OMRequest    */
DECL|method|createFileRequest ( String volumeName, String bucketName, String keyName, HddsProtos.ReplicationFactor replicationFactor, HddsProtos.ReplicationType replicationType, boolean overWrite, boolean recursive)
specifier|private
name|OMRequest
name|createFileRequest
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationFactor
name|replicationFactor
parameter_list|,
name|HddsProtos
operator|.
name|ReplicationType
name|replicationType
parameter_list|,
name|boolean
name|overWrite
parameter_list|,
name|boolean
name|recursive
parameter_list|)
block|{
name|KeyArgs
operator|.
name|Builder
name|keyArgs
init|=
name|KeyArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|volumeName
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|bucketName
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|keyName
argument_list|)
operator|.
name|setFactor
argument_list|(
name|replicationFactor
argument_list|)
operator|.
name|setType
argument_list|(
name|replicationType
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|dataSize
argument_list|)
decl_stmt|;
name|CreateFileRequest
name|createFileRequest
init|=
name|CreateFileRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKeyArgs
argument_list|(
name|keyArgs
argument_list|)
operator|.
name|setIsOverwrite
argument_list|(
name|overWrite
argument_list|)
operator|.
name|setIsRecursive
argument_list|(
name|recursive
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|OMRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|Type
operator|.
name|CreateKey
argument_list|)
operator|.
name|setClientId
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setCreateFileRequest
argument_list|(
name|createFileRequest
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

