begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.storage
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|client
operator|.
name|HddsClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|datanode
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ChecksumType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|KeyInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|KeyOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|LengthInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OpenKeySession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|protocolPB
operator|.
name|OzoneManagerProtocolClientSideTranslatorPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
operator|.
name|Versioning
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocolPB
operator|.
name|OMPBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneAcl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|request
operator|.
name|OzoneQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|ScmConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|XceiverClientManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|protocolPB
operator|.
name|StorageContainerLocationProtocolClientSideTranslatorPB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|OzoneException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
operator|.
name|BucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
operator|.
name|KeyArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
operator|.
name|ListArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
operator|.
name|VolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|handlers
operator|.
name|UserArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|interfaces
operator|.
name|StorageHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|response
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * A {@link StorageHandler} implementation that distributes object storage  * across the nodes of an HDFS cluster.  */
end_comment

begin_class
DECL|class|DistributedStorageHandler
specifier|public
specifier|final
class|class
name|DistributedStorageHandler
implements|implements
name|StorageHandler
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DistributedStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|StorageContainerLocationProtocolClientSideTranslatorPB
DECL|field|storageContainerLocationClient
name|storageContainerLocationClient
decl_stmt|;
specifier|private
specifier|final
name|OzoneManagerProtocolClientSideTranslatorPB
DECL|field|ozoneManagerClient
name|ozoneManagerClient
decl_stmt|;
DECL|field|xceiverClientManager
specifier|private
specifier|final
name|XceiverClientManager
name|xceiverClientManager
decl_stmt|;
DECL|field|userRights
specifier|private
specifier|final
name|OzoneAcl
operator|.
name|OzoneACLRights
name|userRights
decl_stmt|;
DECL|field|groupRights
specifier|private
specifier|final
name|OzoneAcl
operator|.
name|OzoneACLRights
name|groupRights
decl_stmt|;
DECL|field|chunkSize
specifier|private
name|int
name|chunkSize
decl_stmt|;
DECL|field|streamBufferFlushSize
specifier|private
specifier|final
name|long
name|streamBufferFlushSize
decl_stmt|;
DECL|field|streamBufferMaxSize
specifier|private
specifier|final
name|long
name|streamBufferMaxSize
decl_stmt|;
DECL|field|watchTimeout
specifier|private
specifier|final
name|long
name|watchTimeout
decl_stmt|;
DECL|field|blockSize
specifier|private
specifier|final
name|long
name|blockSize
decl_stmt|;
DECL|field|checksumType
specifier|private
specifier|final
name|ChecksumType
name|checksumType
decl_stmt|;
DECL|field|bytesPerChecksum
specifier|private
specifier|final
name|int
name|bytesPerChecksum
decl_stmt|;
comment|/**    * Creates a new DistributedStorageHandler.    *    * @param conf configuration    * @param storageContainerLocation StorageContainerLocationProtocol proxy    * @param ozoneManagerClient OzoneManager proxy    */
DECL|method|DistributedStorageHandler (OzoneConfiguration conf, StorageContainerLocationProtocolClientSideTranslatorPB storageContainerLocation, OzoneManagerProtocolClientSideTranslatorPB ozoneManagerClient)
specifier|public
name|DistributedStorageHandler
parameter_list|(
name|OzoneConfiguration
name|conf
parameter_list|,
name|StorageContainerLocationProtocolClientSideTranslatorPB
name|storageContainerLocation
parameter_list|,
name|OzoneManagerProtocolClientSideTranslatorPB
name|ozoneManagerClient
parameter_list|)
block|{
name|this
operator|.
name|ozoneManagerClient
operator|=
name|ozoneManagerClient
expr_stmt|;
name|this
operator|.
name|storageContainerLocationClient
operator|=
name|storageContainerLocation
expr_stmt|;
name|this
operator|.
name|xceiverClientManager
operator|=
operator|new
name|XceiverClientManager
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|chunkSize
operator|=
operator|(
name|int
operator|)
name|conf
operator|.
name|getStorageSize
argument_list|(
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_SIZE_KEY
argument_list|,
name|ScmConfigKeys
operator|.
name|OZONE_SCM_CHUNK_SIZE_DEFAULT
argument_list|,
name|StorageUnit
operator|.
name|BYTES
argument_list|)
expr_stmt|;
name|userRights
operator|=
name|conf
operator|.
name|getEnum
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_USER_RIGHTS
argument_list|,
name|OMConfigKeys
operator|.
name|OZONE_OM_USER_RIGHTS_DEFAULT
argument_list|)
expr_stmt|;
name|groupRights
operator|=
name|conf
operator|.
name|getEnum
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_GROUP_RIGHTS
argument_list|,
name|OMConfigKeys
operator|.
name|OZONE_OM_GROUP_RIGHTS_DEFAULT
argument_list|)
expr_stmt|;
if|if
condition|(
name|chunkSize
operator|>
name|OzoneConsts
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"The chunk size ({}) is not allowed to be more than"
operator|+
literal|" the maximum size ({}),"
operator|+
literal|" resetting to the maximum size."
argument_list|,
name|chunkSize
argument_list|,
name|OzoneConsts
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
argument_list|)
expr_stmt|;
name|chunkSize
operator|=
name|OzoneConsts
operator|.
name|OZONE_SCM_CHUNK_MAX_SIZE
expr_stmt|;
block|}
name|streamBufferFlushSize
operator|=
operator|(
name|long
operator|)
name|conf
operator|.
name|getStorageSize
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_STREAM_BUFFER_FLUSH_SIZE
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_STREAM_BUFFER_FLUSH_SIZE_DEFAULT
argument_list|,
name|StorageUnit
operator|.
name|BYTES
argument_list|)
expr_stmt|;
name|streamBufferMaxSize
operator|=
operator|(
name|long
operator|)
name|conf
operator|.
name|getStorageSize
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_STREAM_BUFFER_MAX_SIZE
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_STREAM_BUFFER_MAX_SIZE_DEFAULT
argument_list|,
name|StorageUnit
operator|.
name|BYTES
argument_list|)
expr_stmt|;
name|blockSize
operator|=
operator|(
name|long
operator|)
name|conf
operator|.
name|getStorageSize
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_SCM_BLOCK_SIZE
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_SCM_BLOCK_SIZE_DEFAULT
argument_list|,
name|StorageUnit
operator|.
name|BYTES
argument_list|)
expr_stmt|;
name|watchTimeout
operator|=
name|conf
operator|.
name|getTimeDuration
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_WATCH_REQUEST_TIMEOUT
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_WATCH_REQUEST_TIMEOUT_DEFAULT
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|int
name|configuredChecksumSize
init|=
operator|(
name|int
operator|)
name|conf
operator|.
name|getStorageSize
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_BYTES_PER_CHECKSUM
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_BYTES_PER_CHECKSUM_DEFAULT
argument_list|,
name|StorageUnit
operator|.
name|BYTES
argument_list|)
decl_stmt|;
if|if
condition|(
name|configuredChecksumSize
operator|<
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_BYTES_PER_CHECKSUM_MIN_SIZE
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"The checksum size ({}) is not allowed to be less than the "
operator|+
literal|"minimum size ({}), resetting to the minimum size."
argument_list|,
name|configuredChecksumSize
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_BYTES_PER_CHECKSUM_MIN_SIZE
argument_list|)
expr_stmt|;
name|bytesPerChecksum
operator|=
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_BYTES_PER_CHECKSUM_MIN_SIZE
expr_stmt|;
block|}
else|else
block|{
name|bytesPerChecksum
operator|=
name|configuredChecksumSize
expr_stmt|;
block|}
name|String
name|checksumTypeStr
init|=
name|conf
operator|.
name|get
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_CHECKSUM_TYPE
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_CHECKSUM_TYPE_DEFAULT
argument_list|)
decl_stmt|;
name|this
operator|.
name|checksumType
operator|=
name|ChecksumType
operator|.
name|valueOf
argument_list|(
name|checksumTypeStr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createVolume (VolumeArgs args)
specifier|public
name|void
name|createVolume
parameter_list|(
name|VolumeArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|long
name|quota
init|=
name|args
operator|.
name|getQuota
argument_list|()
operator|==
literal|null
condition|?
name|OzoneConsts
operator|.
name|MAX_QUOTA_IN_BYTES
else|:
name|args
operator|.
name|getQuota
argument_list|()
operator|.
name|sizeInBytes
argument_list|()
decl_stmt|;
name|OzoneAcl
name|userAcl
init|=
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|USER
argument_list|,
name|args
operator|.
name|getUserName
argument_list|()
argument_list|,
name|userRights
argument_list|)
decl_stmt|;
name|OmVolumeArgs
operator|.
name|Builder
name|builder
init|=
name|OmVolumeArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setAdminName
argument_list|(
name|args
operator|.
name|getAdminName
argument_list|()
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|args
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|setVolume
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setQuotaInBytes
argument_list|(
name|quota
argument_list|)
operator|.
name|addOzoneAcls
argument_list|(
name|OMPBHelper
operator|.
name|convertOzoneAcl
argument_list|(
name|userAcl
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|args
operator|.
name|getGroups
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|group
range|:
name|args
operator|.
name|getGroups
argument_list|()
control|)
block|{
name|OzoneAcl
name|groupAcl
init|=
operator|new
name|OzoneAcl
argument_list|(
name|OzoneAcl
operator|.
name|OzoneACLType
operator|.
name|GROUP
argument_list|,
name|group
argument_list|,
name|groupRights
argument_list|)
decl_stmt|;
name|builder
operator|.
name|addOzoneAcls
argument_list|(
name|OMPBHelper
operator|.
name|convertOzoneAcl
argument_list|(
name|groupAcl
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ozoneManagerClient
operator|.
name|createVolume
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setVolumeOwner (VolumeArgs args)
specifier|public
name|void
name|setVolumeOwner
parameter_list|(
name|VolumeArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|ozoneManagerClient
operator|.
name|setOwner
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|args
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setVolumeQuota (VolumeArgs args, boolean remove)
specifier|public
name|void
name|setVolumeQuota
parameter_list|(
name|VolumeArgs
name|args
parameter_list|,
name|boolean
name|remove
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|long
name|quota
init|=
name|remove
condition|?
name|OzoneConsts
operator|.
name|MAX_QUOTA_IN_BYTES
else|:
name|args
operator|.
name|getQuota
argument_list|()
operator|.
name|sizeInBytes
argument_list|()
decl_stmt|;
name|ozoneManagerClient
operator|.
name|setQuota
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|quota
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|checkVolumeAccess (String volume, OzoneAcl acl)
specifier|public
name|boolean
name|checkVolumeAccess
parameter_list|(
name|String
name|volume
parameter_list|,
name|OzoneAcl
name|acl
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
return|return
name|ozoneManagerClient
operator|.
name|checkVolumeAccess
argument_list|(
name|volume
argument_list|,
name|OMPBHelper
operator|.
name|convertOzoneAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|listVolumes (ListArgs args)
specifier|public
name|ListVolumes
name|listVolumes
parameter_list|(
name|ListArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|int
name|maxNumOfKeys
init|=
name|args
operator|.
name|getMaxKeys
argument_list|()
decl_stmt|;
if|if
condition|(
name|maxNumOfKeys
operator|<=
literal|0
operator|||
name|maxNumOfKeys
operator|>
name|OzoneConsts
operator|.
name|MAX_LISTVOLUMES_SIZE
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Illegal max number of keys specified,"
operator|+
literal|" the value must be in range (0, %d], actual : %d."
argument_list|,
name|OzoneConsts
operator|.
name|MAX_LISTVOLUMES_SIZE
argument_list|,
name|maxNumOfKeys
argument_list|)
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|OmVolumeArgs
argument_list|>
name|listResult
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|isRootScan
argument_list|()
condition|)
block|{
name|listResult
operator|=
name|ozoneManagerClient
operator|.
name|listAllVolumes
argument_list|(
name|args
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|args
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|args
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|UserArgs
name|userArgs
init|=
name|args
operator|.
name|getArgs
argument_list|()
decl_stmt|;
if|if
condition|(
name|userArgs
operator|==
literal|null
operator|||
name|userArgs
operator|.
name|getUserName
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument,"
operator|+
literal|" missing user argument."
argument_list|)
throw|;
block|}
name|listResult
operator|=
name|ozoneManagerClient
operator|.
name|listVolumeByUser
argument_list|(
name|args
operator|.
name|getArgs
argument_list|()
operator|.
name|getUserName
argument_list|()
argument_list|,
name|args
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|args
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|args
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// TODO Add missing fields createdBy, bucketCount and bytesUsed
name|ListVolumes
name|result
init|=
operator|new
name|ListVolumes
argument_list|()
decl_stmt|;
for|for
control|(
name|OmVolumeArgs
name|volumeArgs
range|:
name|listResult
control|)
block|{
name|VolumeInfo
name|info
init|=
operator|new
name|VolumeInfo
argument_list|()
decl_stmt|;
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
name|infoProto
init|=
name|volumeArgs
operator|.
name|getProtobuf
argument_list|()
decl_stmt|;
name|info
operator|.
name|setOwner
argument_list|(
operator|new
name|VolumeOwner
argument_list|(
name|infoProto
operator|.
name|getOwnerName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|info
operator|.
name|setQuota
argument_list|(
name|OzoneQuota
operator|.
name|getOzoneQuota
argument_list|(
name|infoProto
operator|.
name|getQuotaInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|info
operator|.
name|setVolumeName
argument_list|(
name|infoProto
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|info
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|infoProto
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addVolume
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Override
DECL|method|deleteVolume (VolumeArgs args)
specifier|public
name|void
name|deleteVolume
parameter_list|(
name|VolumeArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|ozoneManagerClient
operator|.
name|deleteVolume
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getVolumeInfo (VolumeArgs args)
specifier|public
name|VolumeInfo
name|getVolumeInfo
parameter_list|(
name|VolumeArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmVolumeArgs
name|volumeArgs
init|=
name|ozoneManagerClient
operator|.
name|getVolumeInfo
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
decl_stmt|;
comment|//TODO: add support for createdOn and other fields in getVolumeInfo
name|VolumeInfo
name|volInfo
init|=
operator|new
name|VolumeInfo
argument_list|(
name|volumeArgs
operator|.
name|getVolume
argument_list|()
argument_list|,
literal|null
argument_list|,
name|volumeArgs
operator|.
name|getAdminName
argument_list|()
argument_list|)
decl_stmt|;
name|volInfo
operator|.
name|setOwner
argument_list|(
operator|new
name|VolumeOwner
argument_list|(
name|volumeArgs
operator|.
name|getOwnerName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|volInfo
operator|.
name|setQuota
argument_list|(
name|OzoneQuota
operator|.
name|getOzoneQuota
argument_list|(
name|volumeArgs
operator|.
name|getQuotaInBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|volInfo
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|volumeArgs
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|volInfo
return|;
block|}
annotation|@
name|Override
DECL|method|createBucket (final BucketArgs args)
specifier|public
name|void
name|createBucket
parameter_list|(
specifier|final
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmBucketInfo
operator|.
name|Builder
name|builder
init|=
name|OmBucketInfo
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|args
operator|.
name|getAddAcls
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setAcls
argument_list|(
name|args
operator|.
name|getAddAcls
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|args
operator|.
name|getStorageType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setStorageType
argument_list|(
name|args
operator|.
name|getStorageType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|args
operator|.
name|getVersioning
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setIsVersionEnabled
argument_list|(
name|getBucketVersioningProtobuf
argument_list|(
name|args
operator|.
name|getVersioning
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ozoneManagerClient
operator|.
name|createBucket
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Converts OzoneConts.Versioning enum to boolean.    *    * @param version    * @return corresponding boolean value    */
DECL|method|getBucketVersioningProtobuf ( Versioning version)
specifier|private
name|boolean
name|getBucketVersioningProtobuf
parameter_list|(
name|Versioning
name|version
parameter_list|)
block|{
if|if
condition|(
name|version
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|version
condition|)
block|{
case|case
name|ENABLED
case|:
return|return
literal|true
return|;
case|case
name|NOT_DEFINED
case|:
case|case
name|DISABLED
case|:
default|default:
return|return
literal|false
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|setBucketAcls (BucketArgs args)
specifier|public
name|void
name|setBucketAcls
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|removeAcls
init|=
name|args
operator|.
name|getRemoveAcls
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|addAcls
init|=
name|args
operator|.
name|getAddAcls
argument_list|()
decl_stmt|;
if|if
condition|(
name|removeAcls
operator|!=
literal|null
operator|||
name|addAcls
operator|!=
literal|null
condition|)
block|{
name|OmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|OmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|removeAcls
operator|!=
literal|null
operator|&&
operator|!
name|removeAcls
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setRemoveAcls
argument_list|(
name|args
operator|.
name|getRemoveAcls
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|addAcls
operator|!=
literal|null
operator|&&
operator|!
name|addAcls
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|builder
operator|.
name|setAddAcls
argument_list|(
name|args
operator|.
name|getAddAcls
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ozoneManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|setBucketVersioning (BucketArgs args)
specifier|public
name|void
name|setBucketVersioning
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|OmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setIsVersionEnabled
argument_list|(
name|getBucketVersioningProtobuf
argument_list|(
name|args
operator|.
name|getVersioning
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ozoneManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setBucketStorageClass (BucketArgs args)
specifier|public
name|void
name|setBucketStorageClass
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmBucketArgs
operator|.
name|Builder
name|builder
init|=
name|OmBucketArgs
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setStorageType
argument_list|(
name|args
operator|.
name|getStorageType
argument_list|()
argument_list|)
expr_stmt|;
name|ozoneManagerClient
operator|.
name|setBucketProperty
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deleteBucket (BucketArgs args)
specifier|public
name|void
name|deleteBucket
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|ozoneManagerClient
operator|.
name|deleteBucket
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|checkBucketAccess (BucketArgs args)
specifier|public
name|void
name|checkBucketAccess
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"checkBucketAccess not implemented"
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|listBuckets (ListArgs args)
specifier|public
name|ListBuckets
name|listBuckets
parameter_list|(
name|ListArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|ListBuckets
name|result
init|=
operator|new
name|ListBuckets
argument_list|()
decl_stmt|;
name|UserArgs
name|userArgs
init|=
name|args
operator|.
name|getArgs
argument_list|()
decl_stmt|;
if|if
condition|(
name|userArgs
operator|instanceof
name|VolumeArgs
condition|)
block|{
name|VolumeArgs
name|va
init|=
operator|(
name|VolumeArgs
operator|)
name|userArgs
decl_stmt|;
if|if
condition|(
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|va
operator|.
name|getVolumeName
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument,"
operator|+
literal|" volume name cannot be null or empty."
argument_list|)
throw|;
block|}
name|int
name|maxNumOfKeys
init|=
name|args
operator|.
name|getMaxKeys
argument_list|()
decl_stmt|;
if|if
condition|(
name|maxNumOfKeys
operator|<=
literal|0
operator|||
name|maxNumOfKeys
operator|>
name|OzoneConsts
operator|.
name|MAX_LISTBUCKETS_SIZE
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Illegal max number of keys specified,"
operator|+
literal|" the value must be in range (0, %d], actual : %d."
argument_list|,
name|OzoneConsts
operator|.
name|MAX_LISTBUCKETS_SIZE
argument_list|,
name|maxNumOfKeys
argument_list|)
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|OmBucketInfo
argument_list|>
name|buckets
init|=
name|ozoneManagerClient
operator|.
name|listBuckets
argument_list|(
name|va
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|args
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|args
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|args
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
decl_stmt|;
comment|// Convert the result for the web layer.
for|for
control|(
name|OmBucketInfo
name|bucketInfo
range|:
name|buckets
control|)
block|{
name|BucketInfo
name|bk
init|=
operator|new
name|BucketInfo
argument_list|()
decl_stmt|;
name|bk
operator|.
name|setVolumeName
argument_list|(
name|bucketInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|)
expr_stmt|;
name|bk
operator|.
name|setBucketName
argument_list|(
name|bucketInfo
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
name|bk
operator|.
name|setStorageType
argument_list|(
name|bucketInfo
operator|.
name|getStorageType
argument_list|()
argument_list|)
expr_stmt|;
name|bk
operator|.
name|setAcls
argument_list|(
name|bucketInfo
operator|.
name|getAcls
argument_list|()
argument_list|)
expr_stmt|;
name|bk
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|bucketInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addBucket
argument_list|(
name|bk
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument provided,"
operator|+
literal|" expecting VolumeArgs type but met "
operator|+
name|userArgs
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getBucketInfo (BucketArgs args)
specifier|public
name|BucketInfo
name|getBucketInfo
parameter_list|(
name|BucketArgs
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|volumeName
init|=
name|args
operator|.
name|getVolumeName
argument_list|()
decl_stmt|;
name|String
name|bucketName
init|=
name|args
operator|.
name|getBucketName
argument_list|()
decl_stmt|;
name|OmBucketInfo
name|omBucketInfo
init|=
name|ozoneManagerClient
operator|.
name|getBucketInfo
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
decl_stmt|;
name|BucketInfo
name|bucketInfo
init|=
operator|new
name|BucketInfo
argument_list|(
name|omBucketInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|omBucketInfo
operator|.
name|getBucketName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|omBucketInfo
operator|.
name|getIsVersionEnabled
argument_list|()
condition|)
block|{
name|bucketInfo
operator|.
name|setVersioning
argument_list|(
name|Versioning
operator|.
name|ENABLED
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bucketInfo
operator|.
name|setVersioning
argument_list|(
name|Versioning
operator|.
name|DISABLED
argument_list|)
expr_stmt|;
block|}
name|bucketInfo
operator|.
name|setStorageType
argument_list|(
name|omBucketInfo
operator|.
name|getStorageType
argument_list|()
argument_list|)
expr_stmt|;
name|bucketInfo
operator|.
name|setAcls
argument_list|(
name|omBucketInfo
operator|.
name|getAcls
argument_list|()
argument_list|)
expr_stmt|;
name|bucketInfo
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|omBucketInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|bucketInfo
return|;
block|}
annotation|@
name|Override
DECL|method|newKeyWriter (KeyArgs args)
specifier|public
name|OutputStream
name|newKeyWriter
parameter_list|(
name|KeyArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|args
operator|.
name|getSize
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|xceiverClientManager
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|setFactor
argument_list|(
name|xceiverClientManager
operator|.
name|getFactor
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// contact OM to allocate a block for key.
name|OpenKeySession
name|openKey
init|=
name|ozoneManagerClient
operator|.
name|openKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
name|KeyOutputStream
name|groupOutputStream
init|=
operator|new
name|KeyOutputStream
operator|.
name|Builder
argument_list|()
operator|.
name|setHandler
argument_list|(
name|openKey
argument_list|)
operator|.
name|setXceiverClientManager
argument_list|(
name|xceiverClientManager
argument_list|)
operator|.
name|setScmClient
argument_list|(
name|storageContainerLocationClient
argument_list|)
operator|.
name|setOmClient
argument_list|(
name|ozoneManagerClient
argument_list|)
operator|.
name|setChunkSize
argument_list|(
name|chunkSize
argument_list|)
operator|.
name|setRequestID
argument_list|(
name|args
operator|.
name|getRequestID
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|xceiverClientManager
operator|.
name|getType
argument_list|()
argument_list|)
operator|.
name|setFactor
argument_list|(
name|xceiverClientManager
operator|.
name|getFactor
argument_list|()
argument_list|)
operator|.
name|setStreamBufferFlushSize
argument_list|(
name|streamBufferFlushSize
argument_list|)
operator|.
name|setStreamBufferMaxSize
argument_list|(
name|streamBufferMaxSize
argument_list|)
operator|.
name|setBlockSize
argument_list|(
name|blockSize
argument_list|)
operator|.
name|setWatchTimeout
argument_list|(
name|watchTimeout
argument_list|)
operator|.
name|setChecksumType
argument_list|(
name|checksumType
argument_list|)
operator|.
name|setBytesPerChecksum
argument_list|(
name|bytesPerChecksum
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|groupOutputStream
operator|.
name|addPreallocateBlocks
argument_list|(
name|openKey
operator|.
name|getKeyInfo
argument_list|()
operator|.
name|getLatestVersionLocations
argument_list|()
argument_list|,
name|openKey
operator|.
name|getOpenVersion
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|OzoneOutputStream
argument_list|(
name|groupOutputStream
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|commitKey (KeyArgs args, OutputStream stream)
specifier|public
name|void
name|commitKey
parameter_list|(
name|KeyArgs
name|args
parameter_list|,
name|OutputStream
name|stream
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|newKeyReader (KeyArgs args)
specifier|public
name|LengthInputStream
name|newKeyReader
parameter_list|(
name|KeyArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|setDataSize
argument_list|(
name|args
operator|.
name|getSize
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyInfo
name|keyInfo
init|=
name|ozoneManagerClient
operator|.
name|lookupKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
return|return
name|KeyInputStream
operator|.
name|getFromOmKeyInfo
argument_list|(
name|keyInfo
argument_list|,
name|xceiverClientManager
argument_list|,
name|storageContainerLocationClient
argument_list|,
name|args
operator|.
name|getRequestID
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteKey (KeyArgs args)
specifier|public
name|void
name|deleteKey
parameter_list|(
name|KeyArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ozoneManagerClient
operator|.
name|deleteKey
argument_list|(
name|keyArgs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|renameKey (KeyArgs args, String toKeyName)
specifier|public
name|void
name|renameKey
parameter_list|(
name|KeyArgs
name|args
parameter_list|,
name|String
name|toKeyName
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ozoneManagerClient
operator|.
name|renameKey
argument_list|(
name|keyArgs
argument_list|,
name|toKeyName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getKeyInfo (KeyArgs args)
specifier|public
name|KeyInfo
name|getKeyInfo
parameter_list|(
name|KeyArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyInfo
name|omKeyInfo
init|=
name|ozoneManagerClient
operator|.
name|lookupKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
name|KeyInfo
name|keyInfo
init|=
operator|new
name|KeyInfo
argument_list|()
decl_stmt|;
name|keyInfo
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|keyInfo
operator|.
name|setKeyName
argument_list|(
name|omKeyInfo
operator|.
name|getKeyName
argument_list|()
argument_list|)
expr_stmt|;
name|keyInfo
operator|.
name|setSize
argument_list|(
name|omKeyInfo
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|keyInfo
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|omKeyInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyInfo
operator|.
name|setModifiedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyInfo
operator|.
name|setType
argument_list|(
name|ReplicationType
operator|.
name|valueOf
argument_list|(
name|omKeyInfo
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|keyInfo
return|;
block|}
annotation|@
name|Override
DECL|method|getKeyInfoDetails (KeyArgs args)
specifier|public
name|KeyInfo
name|getKeyInfoDetails
parameter_list|(
name|KeyArgs
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|OmKeyArgs
name|keyArgs
init|=
operator|new
name|OmKeyArgs
operator|.
name|Builder
argument_list|()
operator|.
name|setVolumeName
argument_list|(
name|args
operator|.
name|getVolumeName
argument_list|()
argument_list|)
operator|.
name|setBucketName
argument_list|(
name|args
operator|.
name|getBucketName
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|args
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OmKeyInfo
name|omKeyInfo
init|=
name|ozoneManagerClient
operator|.
name|lookupKey
argument_list|(
name|keyArgs
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|KeyLocation
argument_list|>
name|keyLocations
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|omKeyInfo
operator|.
name|getLatestVersionLocations
argument_list|()
operator|.
name|getBlocksLatestVersionOnly
argument_list|()
operator|.
name|forEach
argument_list|(
parameter_list|(
name|a
parameter_list|)
lambda|->
name|keyLocations
operator|.
name|add
argument_list|(
operator|new
name|KeyLocation
argument_list|(
name|a
operator|.
name|getContainerID
argument_list|()
argument_list|,
name|a
operator|.
name|getLocalID
argument_list|()
argument_list|,
name|a
operator|.
name|getLength
argument_list|()
argument_list|,
name|a
operator|.
name|getOffset
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|KeyInfoDetails
name|keyInfoDetails
init|=
operator|new
name|KeyInfoDetails
argument_list|()
decl_stmt|;
name|keyInfoDetails
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setKeyName
argument_list|(
name|omKeyInfo
operator|.
name|getKeyName
argument_list|()
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setSize
argument_list|(
name|omKeyInfo
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|omKeyInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setModifiedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|omKeyInfo
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setKeyLocations
argument_list|(
name|keyLocations
argument_list|)
expr_stmt|;
name|keyInfoDetails
operator|.
name|setType
argument_list|(
name|ReplicationType
operator|.
name|valueOf
argument_list|(
name|omKeyInfo
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|keyInfoDetails
return|;
block|}
annotation|@
name|Override
DECL|method|listKeys (ListArgs args)
specifier|public
name|ListKeys
name|listKeys
parameter_list|(
name|ListArgs
name|args
parameter_list|)
throws|throws
name|IOException
throws|,
name|OzoneException
block|{
name|ListKeys
name|result
init|=
operator|new
name|ListKeys
argument_list|()
decl_stmt|;
name|UserArgs
name|userArgs
init|=
name|args
operator|.
name|getArgs
argument_list|()
decl_stmt|;
if|if
condition|(
name|userArgs
operator|instanceof
name|BucketArgs
condition|)
block|{
name|BucketArgs
name|bucketArgs
init|=
operator|(
name|BucketArgs
operator|)
name|userArgs
decl_stmt|;
if|if
condition|(
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|bucketArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument,"
operator|+
literal|" volume name cannot be null or empty."
argument_list|)
throw|;
block|}
if|if
condition|(
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|bucketArgs
operator|.
name|getBucketName
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument,"
operator|+
literal|" bucket name cannot be null or empty."
argument_list|)
throw|;
block|}
name|int
name|maxNumOfKeys
init|=
name|args
operator|.
name|getMaxKeys
argument_list|()
decl_stmt|;
if|if
condition|(
name|maxNumOfKeys
operator|<=
literal|0
operator|||
name|maxNumOfKeys
operator|>
name|OzoneConsts
operator|.
name|MAX_LISTKEYS_SIZE
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Illegal max number of keys specified,"
operator|+
literal|" the value must be in range (0, %d], actual : %d."
argument_list|,
name|OzoneConsts
operator|.
name|MAX_LISTKEYS_SIZE
argument_list|,
name|maxNumOfKeys
argument_list|)
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|OmKeyInfo
argument_list|>
name|keys
init|=
name|ozoneManagerClient
operator|.
name|listKeys
argument_list|(
name|bucketArgs
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|bucketArgs
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|args
operator|.
name|getPrevKey
argument_list|()
argument_list|,
name|args
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|args
operator|.
name|getMaxKeys
argument_list|()
argument_list|)
decl_stmt|;
comment|// Convert the result for the web layer.
for|for
control|(
name|OmKeyInfo
name|info
range|:
name|keys
control|)
block|{
name|KeyInfo
name|tempInfo
init|=
operator|new
name|KeyInfo
argument_list|()
decl_stmt|;
name|tempInfo
operator|.
name|setVersion
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|tempInfo
operator|.
name|setKeyName
argument_list|(
name|info
operator|.
name|getKeyName
argument_list|()
argument_list|)
expr_stmt|;
name|tempInfo
operator|.
name|setSize
argument_list|(
name|info
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|tempInfo
operator|.
name|setCreatedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|info
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tempInfo
operator|.
name|setModifiedOn
argument_list|(
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|info
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tempInfo
operator|.
name|setType
argument_list|(
name|ReplicationType
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addKey
argument_list|(
name|tempInfo
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Illegal argument provided,"
operator|+
literal|" expecting BucketArgs type but met "
operator|+
name|userArgs
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
throw|;
block|}
block|}
comment|/**    * Closes DistributedStorageHandler.    */
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|xceiverClientManager
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|ozoneManagerClient
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|cleanupWithLogger
argument_list|(
name|LOG
argument_list|,
name|storageContainerLocationClient
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

