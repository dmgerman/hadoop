begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.interfaces
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|interfaces
package|;
end_package

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|Api
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiImplicitParam
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiImplicitParams
import|;
end_import

begin_import
import|import
name|io
operator|.
name|swagger
operator|.
name|annotations
operator|.
name|ApiOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|OzoneException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DELETE
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|POST
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PUT
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_comment
comment|/**  * Volume Interface acts as the HTTP entry point for  * volume related functionality.  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|Path
argument_list|(
literal|"/{volume}"
argument_list|)
annotation|@
name|Api
argument_list|(
name|tags
operator|=
literal|"volume"
argument_list|)
DECL|interface|Volume
specifier|public
interface|interface
name|Volume
block|{
comment|/**    * Creates a Volume owned by the user.    *    * Params :    * Quota - Specifies the Maximum usable size by the user    * the valid parameters for quota are {@literal<int>(<BYTES| MB|GB|TB>)}    * | remove. For example 10GB or "remove".    *    * @param volume Volume Name, this has to be unique at Ozone Level    * @param quota Quota for this Storage Volume - {@literal<int>(<MB|GB|TB>)}    *             | remove    * @param req - Request Object - Request Object    * @param uriInfo - Http UriInfo    * @param headers Http Headers HttpHeaders    *    * @return Response    *    * @throws OzoneException    */
annotation|@
name|POST
annotation|@
name|ApiOperation
argument_list|(
literal|"Creates a Volume owned by the user"
argument_list|)
annotation|@
name|ApiImplicitParams
argument_list|(
block|{
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-version"
argument_list|,
name|example
operator|=
literal|"v1"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-user"
argument_list|,
name|example
operator|=
literal|"user"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Date"
argument_list|,
name|example
operator|=
literal|"Date: Mon, 26 Jun 2017 "
operator|+
literal|"04:23:30 GMT"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Authorization"
argument_list|,
name|example
operator|=
literal|"OZONE"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|}
argument_list|)
DECL|method|createVolume (@athParamR) String volume, @DefaultValue(Header.OZONE_QUOTA_UNDEFINED) @QueryParam(Header.OZONE_QUOTA_QUERY_TAG) String quota, @Context Request req, @Context UriInfo uriInfo, @Context HttpHeaders headers)
name|Response
name|createVolume
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_UNDEFINED
argument_list|)
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_QUERY_TAG
argument_list|)
name|String
name|quota
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * Updates a Volume owned by the user.    *    * Params :    * Owner - Specifies the name of the owner    * Quota - Specifies the Maximum usable size by the user    * the valid parameters for quota are {@literal<int>(<MB|GB|TB>)} | remove.    * For example 10GB or "remove".    *    * @param volume Volume Name, this has to be unique at Ozone Level    * @param quota Quota for this Storage Volume - {@literal<int>(<MB|GB|TB>)}    *             | remove    * @param req - Request Object - Request Object    * @param headers Http Headers HttpHeaders    *    * @return Response    *    * @throws OzoneException    */
annotation|@
name|PUT
annotation|@
name|ApiOperation
argument_list|(
literal|"Updates a Volume owned by the user"
argument_list|)
annotation|@
name|ApiImplicitParams
argument_list|(
block|{
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-version"
argument_list|,
name|example
operator|=
literal|"v1"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-user"
argument_list|,
name|example
operator|=
literal|"user"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Date"
argument_list|,
name|example
operator|=
literal|"Date: Mon, 26 Jun 2017 "
operator|+
literal|"04:23:30 GMT"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Authorization"
argument_list|,
name|example
operator|=
literal|"OZONE"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|}
argument_list|)
DECL|method|updateVolume (@athParamR) String volume, @DefaultValue(Header.OZONE_QUOTA_UNDEFINED) @QueryParam(Header.OZONE_QUOTA_QUERY_TAG) String quota, @Context Request req, @Context UriInfo uriInfo, @Context HttpHeaders headers)
name|Response
name|updateVolume
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_UNDEFINED
argument_list|)
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_QUERY_TAG
argument_list|)
name|String
name|quota
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * Deletes a Volume if it is empty.    *    * @param volume Storage Volume Name    *    * @return Response Response    *    * @throws OzoneException    */
annotation|@
name|DELETE
annotation|@
name|ApiOperation
argument_list|(
literal|"Deletes a Volume if it is empty"
argument_list|)
annotation|@
name|ApiImplicitParams
argument_list|(
block|{
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-version"
argument_list|,
name|example
operator|=
literal|"v1"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-user"
argument_list|,
name|example
operator|=
literal|"user"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Date"
argument_list|,
name|example
operator|=
literal|"Date: Mon, 26 Jun 2017 "
operator|+
literal|"04:23:30 GMT"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Authorization"
argument_list|,
name|example
operator|=
literal|"OZONE"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|}
argument_list|)
DECL|method|deleteVolume (@athParamR) String volume, @Context Request req, @Context UriInfo uriInfo, @Context HttpHeaders headers)
name|Response
name|deleteVolume
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
comment|/**    * Returns Volume info. This API can be invoked either    * by admin or the owner    *    * @param volume - Storage Volume Name    * @param req - Http Req    * @param headers - Http headers    *    * @return - Response    *    * @throws OzoneException    */
annotation|@
name|GET
annotation|@
name|ApiOperation
argument_list|(
name|value
operator|=
literal|"Returns Volume info"
argument_list|,
name|notes
operator|=
literal|"This API can be "
operator|+
literal|"invoked either by admin or the owner"
argument_list|)
annotation|@
name|ApiImplicitParams
argument_list|(
block|{
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-version"
argument_list|,
name|example
operator|=
literal|"v1"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"x-ozone-user"
argument_list|,
name|example
operator|=
literal|"user"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Date"
argument_list|,
name|example
operator|=
literal|"Date: Mon, 26 Jun 2017 "
operator|+
literal|"04:23:30 GMT"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|,
annotation|@
name|ApiImplicitParam
argument_list|(
name|name
operator|=
literal|"Authorization"
argument_list|,
name|example
operator|=
literal|"OZONE"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|paramType
operator|=
literal|"header"
argument_list|)
block|}
argument_list|)
DECL|method|getVolumeInfo (@athParamR) String volume, @DefaultValue(Header.OZONE_INFO_QUERY_BUCKET) @QueryParam(Header.OZONE_INFO_QUERY_TAG) String info, @QueryParam(Header.OZONE_LIST_QUERY_PREFIX) String prefix, @DefaultValue(Header.OZONE_DEFAULT_LIST_SIZE) @QueryParam(Header.OZONE_LIST_QUERY_MAXKEYS) int keys, @QueryParam(Header.OZONE_LIST_QUERY_PREVKEY) String prevKey, @QueryParam(Header.OZONE_LIST_QUERY_ROOTSCAN) boolean rootScan, @Context Request req, @Context UriInfo uriInfo, @Context HttpHeaders headers)
name|Response
name|getVolumeInfo
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volume
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_BUCKET
argument_list|)
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|)
name|String
name|info
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREFIX
argument_list|)
name|String
name|prefix
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
name|Header
operator|.
name|OZONE_DEFAULT_LIST_SIZE
argument_list|)
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_MAXKEYS
argument_list|)
name|int
name|keys
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREVKEY
argument_list|)
name|String
name|prevKey
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_ROOTSCAN
argument_list|)
name|boolean
name|rootScan
parameter_list|,
annotation|@
name|Context
name|Request
name|req
parameter_list|,
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|headers
parameter_list|)
throws|throws
name|OzoneException
function_decl|;
block|}
end_interface

end_unit

