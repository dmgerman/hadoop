begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.fs.ozone
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ozone
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OmUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|ObjectStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneBucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneVolume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|api
operator|.
name|mockito
operator|.
name|PowerMockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|core
operator|.
name|classloader
operator|.
name|annotations
operator|.
name|PrepareForTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|modules
operator|.
name|junit4
operator|.
name|PowerMockRunner
import|;
end_import

begin_comment
comment|/**  * Ozone File system tests that are light weight and use mocks.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|PowerMockRunner
operator|.
name|class
argument_list|)
annotation|@
name|PrepareForTest
argument_list|(
block|{
name|OzoneClientFactory
operator|.
name|class
block|,
name|UserGroupInformation
operator|.
name|class
block|}
argument_list|)
DECL|class|TestOzoneFileSystemWithMocks
specifier|public
class|class
name|TestOzoneFileSystemWithMocks
block|{
annotation|@
name|Test
DECL|method|testFSUriWithHostPortOverrides ()
specifier|public
name|void
name|testFSUriWithHostPortOverrides
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|OzoneClient
name|ozoneClient
init|=
name|mock
argument_list|(
name|OzoneClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectStore
name|objectStore
init|=
name|mock
argument_list|(
name|ObjectStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneVolume
name|volume
init|=
name|mock
argument_list|(
name|OzoneVolume
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneBucket
name|bucket
init|=
name|mock
argument_list|(
name|OzoneBucket
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ozoneClient
operator|.
name|getObjectStore
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectStore
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|objectStore
operator|.
name|getVolume
argument_list|(
name|eq
argument_list|(
literal|"volume1"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|volume
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|volume
operator|.
name|getBucket
argument_list|(
literal|"bucket1"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucket
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|OzoneClientFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|eq
argument_list|(
literal|"local.host"
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|5899
argument_list|)
argument_list|,
name|eq
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ozoneClient
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|mock
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
decl_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ugi
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user1"
argument_list|)
expr_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"o3fs://bucket1.volume1.local.host:5899"
argument_list|)
decl_stmt|;
name|FileSystem
name|fileSystem
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|OzoneFileSystem
name|ozfs
init|=
operator|(
name|OzoneFileSystem
operator|)
name|fileSystem
decl_stmt|;
name|assertEquals
argument_list|(
name|ozfs
operator|.
name|getUri
argument_list|()
operator|.
name|getAuthority
argument_list|()
argument_list|,
literal|"bucket1.volume1.local.host:5899"
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|verifyStatic
argument_list|()
expr_stmt|;
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
literal|"local.host"
argument_list|,
literal|5899
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFSUriWithHostPortUnspecified ()
specifier|public
name|void
name|testFSUriWithHostPortUnspecified
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|int
name|omPort
init|=
name|OmUtils
operator|.
name|getOmRpcPort
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|OzoneClient
name|ozoneClient
init|=
name|mock
argument_list|(
name|OzoneClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectStore
name|objectStore
init|=
name|mock
argument_list|(
name|ObjectStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneVolume
name|volume
init|=
name|mock
argument_list|(
name|OzoneVolume
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneBucket
name|bucket
init|=
name|mock
argument_list|(
name|OzoneBucket
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ozoneClient
operator|.
name|getObjectStore
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectStore
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|objectStore
operator|.
name|getVolume
argument_list|(
name|eq
argument_list|(
literal|"volume1"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|volume
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|volume
operator|.
name|getBucket
argument_list|(
literal|"bucket1"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucket
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|OzoneClientFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|eq
argument_list|(
literal|"local.host"
argument_list|)
argument_list|,
name|eq
argument_list|(
name|omPort
argument_list|)
argument_list|,
name|eq
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ozoneClient
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|mock
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
decl_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ugi
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user1"
argument_list|)
expr_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"o3fs://bucket1.volume1.local.host"
argument_list|)
decl_stmt|;
name|FileSystem
name|fileSystem
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|OzoneFileSystem
name|ozfs
init|=
operator|(
name|OzoneFileSystem
operator|)
name|fileSystem
decl_stmt|;
name|assertEquals
argument_list|(
name|ozfs
operator|.
name|getUri
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|,
literal|"bucket1.volume1.local.host"
argument_list|)
expr_stmt|;
comment|// The URI doesn't contain a port number, expect -1 from getPort()
name|assertEquals
argument_list|(
name|ozfs
operator|.
name|getUri
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|verifyStatic
argument_list|()
expr_stmt|;
comment|// Check the actual port number in use
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
literal|"local.host"
argument_list|,
name|omPort
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFSUriHostVersionDefault ()
specifier|public
name|void
name|testFSUriHostVersionDefault
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|OzoneClient
name|ozoneClient
init|=
name|mock
argument_list|(
name|OzoneClient
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectStore
name|objectStore
init|=
name|mock
argument_list|(
name|ObjectStore
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneVolume
name|volume
init|=
name|mock
argument_list|(
name|OzoneVolume
operator|.
name|class
argument_list|)
decl_stmt|;
name|OzoneBucket
name|bucket
init|=
name|mock
argument_list|(
name|OzoneBucket
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ozoneClient
operator|.
name|getObjectStore
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectStore
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|objectStore
operator|.
name|getVolume
argument_list|(
name|eq
argument_list|(
literal|"volume1"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|volume
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|volume
operator|.
name|getBucket
argument_list|(
literal|"bucket1"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucket
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|OzoneClientFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|eq
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ozoneClient
argument_list|)
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
name|mock
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
decl_stmt|;
name|PowerMockito
operator|.
name|mockStatic
argument_list|(
name|UserGroupInformation
operator|.
name|class
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|when
argument_list|(
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ugi
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"user1"
argument_list|)
expr_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"o3fs://bucket1.volume1/key"
argument_list|)
decl_stmt|;
name|FileSystem
name|fileSystem
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|uri
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|OzoneFileSystem
name|ozfs
init|=
operator|(
name|OzoneFileSystem
operator|)
name|fileSystem
decl_stmt|;
name|assertEquals
argument_list|(
name|ozfs
operator|.
name|getUri
argument_list|()
operator|.
name|getAuthority
argument_list|()
argument_list|,
literal|"bucket1.volume1"
argument_list|)
expr_stmt|;
name|PowerMockito
operator|.
name|verifyStatic
argument_list|()
expr_stmt|;
name|OzoneClientFactory
operator|.
name|getRpcClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

