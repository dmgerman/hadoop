begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.endpoint
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|endpoint
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|OS3Exception
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|tuple
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test static utility methods of the ObjectEndpoint.  */
end_comment

begin_class
DECL|class|TestObjectEndpoint
specifier|public
class|class
name|TestObjectEndpoint
block|{
annotation|@
name|Test
DECL|method|parseSourceHeader ()
specifier|public
name|void
name|parseSourceHeader
parameter_list|()
throws|throws
name|OS3Exception
block|{
name|Pair
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bucketKey
init|=
name|ObjectEndpoint
operator|.
name|parseSourceHeader
argument_list|(
literal|"bucket1/key1"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"bucket1"
argument_list|,
name|bucketKey
operator|.
name|getLeft
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"key1"
argument_list|,
name|bucketKey
operator|.
name|getRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|parseSourceHeaderWithPrefix ()
specifier|public
name|void
name|parseSourceHeaderWithPrefix
parameter_list|()
throws|throws
name|OS3Exception
block|{
name|Pair
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|bucketKey
init|=
name|ObjectEndpoint
operator|.
name|parseSourceHeader
argument_list|(
literal|"/bucket1/key1"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"bucket1"
argument_list|,
name|bucketKey
operator|.
name|getLeft
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"key1"
argument_list|,
name|bucketKey
operator|.
name|getRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

