begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.endpoint
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|endpoint
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|ObjectStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientStub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|OS3Exception
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|S3ErrorTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|util
operator|.
name|S3Consts
operator|.
name|COPY_SOURCE_HEADER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|util
operator|.
name|S3Consts
operator|.
name|STORAGE_CLASS_HEADER
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Test put object.  */
end_comment

begin_class
DECL|class|TestPutObject
specifier|public
class|class
name|TestPutObject
block|{
DECL|field|CONTENT
specifier|public
specifier|static
specifier|final
name|String
name|CONTENT
init|=
literal|"0123456789"
decl_stmt|;
DECL|field|userName
specifier|private
name|String
name|userName
init|=
literal|"ozone"
decl_stmt|;
DECL|field|bucketName
specifier|private
name|String
name|bucketName
init|=
literal|"b1"
decl_stmt|;
DECL|field|keyName
specifier|private
name|String
name|keyName
init|=
literal|"key1"
decl_stmt|;
DECL|field|destBucket
specifier|private
name|String
name|destBucket
init|=
literal|"b2"
decl_stmt|;
DECL|field|destkey
specifier|private
name|String
name|destkey
init|=
literal|"key2"
decl_stmt|;
DECL|field|nonexist
specifier|private
name|String
name|nonexist
init|=
literal|"nonexist"
decl_stmt|;
DECL|field|clientStub
specifier|private
name|OzoneClientStub
name|clientStub
decl_stmt|;
DECL|field|objectStoreStub
specifier|private
name|ObjectStore
name|objectStoreStub
decl_stmt|;
DECL|field|objectEndpoint
specifier|private
name|ObjectEndpoint
name|objectEndpoint
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
comment|//Create client stub and object store stub.
name|clientStub
operator|=
operator|new
name|OzoneClientStub
argument_list|()
expr_stmt|;
name|objectStoreStub
operator|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
expr_stmt|;
comment|// Create bucket
name|objectStoreStub
operator|.
name|createS3Bucket
argument_list|(
name|userName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|objectStoreStub
operator|.
name|createS3Bucket
argument_list|(
literal|"ozone1"
argument_list|,
name|destBucket
argument_list|)
expr_stmt|;
comment|// Create PutObject and setClient to OzoneClientStub
name|objectEndpoint
operator|=
operator|new
name|ObjectEndpoint
argument_list|()
expr_stmt|;
name|objectEndpoint
operator|.
name|setClient
argument_list|(
name|clientStub
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutObject ()
specifier|public
name|void
name|testPutObject
parameter_list|()
throws|throws
name|IOException
throws|,
name|OS3Exception
block|{
comment|//GIVEN
name|HttpHeaders
name|headers
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpHeaders
operator|.
name|class
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|body
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|CONTENT
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|objectEndpoint
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
comment|//WHEN
name|Response
name|response
init|=
name|objectEndpoint
operator|.
name|put
argument_list|(
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
decl_stmt|;
comment|//THEN
name|String
name|volumeName
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getOzoneVolumeName
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|OzoneInputStream
name|ozoneInputStream
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
operator|.
name|readKey
argument_list|(
name|keyName
argument_list|)
decl_stmt|;
name|String
name|keyContent
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ozoneInputStream
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CONTENT
argument_list|,
name|keyContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPutObjectWithSignedChunks ()
specifier|public
name|void
name|testPutObjectWithSignedChunks
parameter_list|()
throws|throws
name|IOException
throws|,
name|OS3Exception
block|{
comment|//GIVEN
name|HttpHeaders
name|headers
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpHeaders
operator|.
name|class
argument_list|)
decl_stmt|;
name|objectEndpoint
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|String
name|chunkedContent
init|=
literal|"0a;chunk-signature=signature\r\n"
operator|+
literal|"1234567890\r\n"
operator|+
literal|"05;chunk-signature=signature\r\n"
operator|+
literal|"abcde\r\n"
decl_stmt|;
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
literal|"x-amz-content-sha256"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"STREAMING-AWS4-HMAC-SHA256-PAYLOAD"
argument_list|)
expr_stmt|;
comment|//WHEN
name|Response
name|response
init|=
name|objectEndpoint
operator|.
name|put
argument_list|(
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|chunkedContent
operator|.
name|length
argument_list|()
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|chunkedContent
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|//THEN
name|String
name|volumeName
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getOzoneVolumeName
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|OzoneInputStream
name|ozoneInputStream
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
operator|.
name|readKey
argument_list|(
name|keyName
argument_list|)
decl_stmt|;
name|String
name|keyContent
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ozoneInputStream
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1234567890abcde"
argument_list|,
name|keyContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCopyObject ()
specifier|public
name|void
name|testCopyObject
parameter_list|()
throws|throws
name|IOException
throws|,
name|OS3Exception
block|{
comment|// Put object in to source bucket
name|HttpHeaders
name|headers
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpHeaders
operator|.
name|class
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|body
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|CONTENT
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|objectEndpoint
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|keyName
operator|=
literal|"sourceKey"
expr_stmt|;
name|Response
name|response
init|=
name|objectEndpoint
operator|.
name|put
argument_list|(
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
decl_stmt|;
name|String
name|volumeName
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getOzoneVolumeName
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|OzoneInputStream
name|ozoneInputStream
init|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
operator|.
name|readKey
argument_list|(
name|keyName
argument_list|)
decl_stmt|;
name|String
name|keyContent
init|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ozoneInputStream
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CONTENT
argument_list|,
name|keyContent
argument_list|)
expr_stmt|;
comment|// Add copy header, and then call put
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|COPY_SOURCE_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucketName
operator|+
literal|"/"
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|response
operator|=
name|objectEndpoint
operator|.
name|put
argument_list|(
name|destBucket
argument_list|,
name|destkey
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
comment|// Check destination key and response
name|volumeName
operator|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getOzoneVolumeName
argument_list|(
name|destBucket
argument_list|)
expr_stmt|;
name|ozoneInputStream
operator|=
name|clientStub
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|getBucket
argument_list|(
name|destBucket
argument_list|)
operator|.
name|readKey
argument_list|(
name|destkey
argument_list|)
expr_stmt|;
name|keyContent
operator|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|ozoneInputStream
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CONTENT
argument_list|,
name|keyContent
argument_list|)
expr_stmt|;
comment|// source and dest same
try|try
block|{
name|objectEndpoint
operator|.
name|put
argument_list|(
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"test copy object failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"This copy request is "
operator|+
literal|"illegal"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// source bucket not found
try|try
block|{
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|COPY_SOURCE_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|nonexist
operator|+
literal|"/"
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|objectEndpoint
operator|.
name|put
argument_list|(
name|destBucket
argument_list|,
name|destkey
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"test copy object failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCode
argument_list|()
operator|.
name|contains
argument_list|(
literal|"NoSuchBucket"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// dest bucket not found
try|try
block|{
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|COPY_SOURCE_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucketName
operator|+
literal|"/"
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|objectEndpoint
operator|.
name|put
argument_list|(
name|nonexist
argument_list|,
name|destkey
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"test copy object failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCode
argument_list|()
operator|.
name|contains
argument_list|(
literal|"NoSuchBucket"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//Both source and dest bucket not found
try|try
block|{
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|COPY_SOURCE_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|nonexist
operator|+
literal|"/"
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|objectEndpoint
operator|.
name|put
argument_list|(
name|nonexist
argument_list|,
name|destkey
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"test copy object failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCode
argument_list|()
operator|.
name|contains
argument_list|(
literal|"NoSuchBucket"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// source key not found
try|try
block|{
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|COPY_SOURCE_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|bucketName
operator|+
literal|"/"
operator|+
name|nonexist
argument_list|)
expr_stmt|;
name|objectEndpoint
operator|.
name|put
argument_list|(
literal|"nonexistent"
argument_list|,
name|keyName
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"test copy object failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ex
operator|.
name|getCode
argument_list|()
operator|.
name|contains
argument_list|(
literal|"NoSuchBucket"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testInvalidStorageType ()
specifier|public
name|void
name|testInvalidStorageType
parameter_list|()
throws|throws
name|IOException
block|{
name|HttpHeaders
name|headers
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HttpHeaders
operator|.
name|class
argument_list|)
decl_stmt|;
name|ByteArrayInputStream
name|body
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|CONTENT
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|objectEndpoint
operator|.
name|setHeaders
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|keyName
operator|=
literal|"sourceKey"
expr_stmt|;
name|when
argument_list|(
name|headers
operator|.
name|getHeaderString
argument_list|(
name|STORAGE_CLASS_HEADER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"random"
argument_list|)
expr_stmt|;
try|try
block|{
name|Response
name|response
init|=
name|objectEndpoint
operator|.
name|put
argument_list|(
name|bucketName
argument_list|,
name|keyName
argument_list|,
name|CONTENT
operator|.
name|length
argument_list|()
argument_list|,
name|body
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"testInvalidStorageType"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OS3Exception
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|S3ErrorTable
operator|.
name|INVALID_ARGUMENT
operator|.
name|getErrorMessage
argument_list|()
argument_list|,
name|ex
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"random"
argument_list|,
name|ex
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

