begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.exception
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|utils
operator|.
name|OzoneUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * This class tests OS3Exception class.  */
end_comment

begin_class
DECL|class|TestOS3Exception
specifier|public
class|class
name|TestOS3Exception
block|{
annotation|@
name|Test
DECL|method|testOS3Exception ()
specifier|public
name|void
name|testOS3Exception
parameter_list|()
block|{
name|OS3Exception
name|ex
init|=
operator|new
name|OS3Exception
argument_list|(
literal|"AccessDenied"
argument_list|,
literal|"Access Denied"
argument_list|,
literal|403
argument_list|)
decl_stmt|;
name|String
name|requestId
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
decl_stmt|;
name|ex
operator|=
name|S3ErrorTable
operator|.
name|newError
argument_list|(
name|ex
argument_list|,
name|requestId
argument_list|,
name|S3ErrorTable
operator|.
name|Resource
operator|.
name|BUCKET
argument_list|)
expr_stmt|;
name|String
name|val
init|=
name|ex
operator|.
name|toXml
argument_list|()
decl_stmt|;
name|String
name|formatString
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<Error>\n"
operator|+
literal|"<Code>%s</Code>\n"
operator|+
literal|"<Message>%s</Message>\n"
operator|+
literal|"<Resource>%s</Resource>\n"
operator|+
literal|"<RequestId>%s</RequestId>\n"
operator|+
literal|"</Error>\n"
decl_stmt|;
name|String
name|expected
init|=
name|String
operator|.
name|format
argument_list|(
name|formatString
argument_list|,
name|ex
operator|.
name|getCode
argument_list|()
argument_list|,
name|ex
operator|.
name|getErrorMessage
argument_list|()
argument_list|,
name|ex
operator|.
name|getResource
argument_list|()
argument_list|,
name|ex
operator|.
name|getRequestId
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

