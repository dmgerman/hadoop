begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.object
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|object
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|HEAD
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneKeyDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|EndpointBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|OS3Exception
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|S3ErrorTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Get object info rest endpoint.  */
end_comment

begin_class
annotation|@
name|Path
argument_list|(
literal|"/{volume}/{bucket}/{path:.+}"
argument_list|)
DECL|class|HeadObject
specifier|public
class|class
name|HeadObject
extends|extends
name|EndpointBase
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|HeadObject
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|HEAD
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
DECL|method|head ( @athParamR) String volumeName, @PathParam(R) String bucketName, @PathParam(R) String keyPath)
specifier|public
name|Response
name|head
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volumeName
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucketName
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"path"
argument_list|)
name|String
name|keyPath
parameter_list|)
throws|throws
name|Exception
block|{
name|OzoneKeyDetails
name|key
decl_stmt|;
try|try
block|{
name|key
operator|=
name|getVolume
argument_list|(
name|volumeName
argument_list|)
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
operator|.
name|getKey
argument_list|(
name|keyPath
argument_list|)
expr_stmt|;
comment|// TODO: return the specified range bytes of this object.
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception occurred in HeadObject"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
if|if
condition|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"KEY_NOT_FOUND"
argument_list|)
condition|)
block|{
name|OS3Exception
name|os3Exception
init|=
name|S3ErrorTable
operator|.
name|newError
argument_list|(
name|S3ErrorTable
operator|.
name|NO_SUCH_OBJECT
argument_list|,
name|S3ErrorTable
operator|.
name|Resource
operator|.
name|OBJECT
argument_list|)
decl_stmt|;
throw|throw
name|os3Exception
throw|;
block|}
else|else
block|{
throw|throw
name|ex
throw|;
block|}
block|}
return|return
name|Response
operator|.
name|ok
argument_list|()
operator|.
name|status
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
operator|.
name|header
argument_list|(
literal|"Last-Modified"
argument_list|,
name|key
operator|.
name|getModificationTime
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"ETag"
argument_list|,
literal|""
operator|+
name|key
operator|.
name|getModificationTime
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"Content-Length"
argument_list|,
name|key
operator|.
name|getDataSize
argument_list|()
argument_list|)
operator|.
name|header
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"binary/octet-stream"
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

