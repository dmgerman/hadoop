begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|BaseHttpServer
import|;
end_import

begin_comment
comment|/**  * S3 Gateway specific configuration keys.  */
end_comment

begin_class
DECL|class|S3GatewayHttpServer
specifier|public
class|class
name|S3GatewayHttpServer
extends|extends
name|BaseHttpServer
block|{
comment|/**    * Default offset between two filters.    */
DECL|field|FILTER_PRIORITY_DO_AFTER
specifier|public
specifier|static
specifier|final
name|int
name|FILTER_PRIORITY_DO_AFTER
init|=
literal|50
decl_stmt|;
DECL|method|S3GatewayHttpServer (Configuration conf, String name)
specifier|public
name|S3GatewayHttpServer
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|conf
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getHttpAddressKey ()
specifier|protected
name|String
name|getHttpAddressKey
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTP_ADDRESS_KEY
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpBindHostKey ()
specifier|protected
name|String
name|getHttpBindHostKey
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTP_BIND_HOST_KEY
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpsAddressKey ()
specifier|protected
name|String
name|getHttpsAddressKey
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTPS_ADDRESS_KEY
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpsBindHostKey ()
specifier|protected
name|String
name|getHttpsBindHostKey
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTPS_BIND_HOST_KEY
return|;
block|}
annotation|@
name|Override
DECL|method|getBindHostDefault ()
specifier|protected
name|String
name|getBindHostDefault
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTP_BIND_HOST_DEFAULT
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpBindPortDefault ()
specifier|protected
name|int
name|getHttpBindPortDefault
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTP_BIND_PORT_DEFAULT
return|;
block|}
annotation|@
name|Override
DECL|method|getHttpsBindPortDefault ()
specifier|protected
name|int
name|getHttpsBindPortDefault
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTPS_BIND_PORT_DEFAULT
return|;
block|}
annotation|@
name|Override
DECL|method|getKeytabFile ()
specifier|protected
name|String
name|getKeytabFile
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_KEYTAB_FILE
return|;
block|}
annotation|@
name|Override
DECL|method|getSpnegoPrincipal ()
specifier|protected
name|String
name|getSpnegoPrincipal
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL
return|;
block|}
annotation|@
name|Override
DECL|method|getEnabledKey ()
specifier|protected
name|String
name|getEnabledKey
parameter_list|()
block|{
return|return
name|S3GatewayConfigKeys
operator|.
name|OZONE_S3G_HTTP_ENABLED_KEY
return|;
block|}
block|}
end_class

end_unit

