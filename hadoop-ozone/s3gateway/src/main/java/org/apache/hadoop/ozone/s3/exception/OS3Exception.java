begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.exception
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializationFeature
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|dataformat
operator|.
name|xml
operator|.
name|XmlMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|module
operator|.
name|jaxb
operator|.
name|JaxbAnnotationModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_comment
comment|/**  * This class represents exceptions raised from Ozone S3 service.  *  * Ref:https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"Error"
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|NONE
argument_list|)
DECL|class|OS3Exception
specifier|public
class|class
name|OS3Exception
extends|extends
name|Exception
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|OS3Exception
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mapper
specifier|private
specifier|static
name|ObjectMapper
name|mapper
decl_stmt|;
static|static
block|{
name|mapper
operator|=
operator|new
name|XmlMapper
argument_list|()
expr_stmt|;
name|mapper
operator|.
name|registerModule
argument_list|(
operator|new
name|JaxbAnnotationModule
argument_list|()
argument_list|)
expr_stmt|;
name|mapper
operator|.
name|enable
argument_list|(
name|SerializationFeature
operator|.
name|INDENT_OUTPUT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Code"
argument_list|)
DECL|field|code
specifier|private
name|String
name|code
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Message"
argument_list|)
DECL|field|errorMessage
specifier|private
name|String
name|errorMessage
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Resource"
argument_list|)
DECL|field|resource
specifier|private
name|String
name|resource
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"RequestId"
argument_list|)
DECL|field|requestId
specifier|private
name|String
name|requestId
decl_stmt|;
annotation|@
name|XmlTransient
DECL|field|httpCode
specifier|private
name|int
name|httpCode
decl_stmt|;
DECL|method|OS3Exception ()
specifier|public
name|OS3Exception
parameter_list|()
block|{
comment|//Added for JaxB.
block|}
comment|/**    * Create an object OS3Exception.    * @param codeVal    * @param messageVal    * @param requestIdVal    * @param resourceVal    */
DECL|method|OS3Exception (String codeVal, String messageVal, String requestIdVal, String resourceVal)
specifier|public
name|OS3Exception
parameter_list|(
name|String
name|codeVal
parameter_list|,
name|String
name|messageVal
parameter_list|,
name|String
name|requestIdVal
parameter_list|,
name|String
name|resourceVal
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|codeVal
expr_stmt|;
name|this
operator|.
name|errorMessage
operator|=
name|messageVal
expr_stmt|;
name|this
operator|.
name|requestId
operator|=
name|requestIdVal
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|resourceVal
expr_stmt|;
block|}
comment|/**    * Create an object OS3Exception.    * @param codeVal    * @param messageVal    * @param httpCode    */
DECL|method|OS3Exception (String codeVal, String messageVal, int httpCode)
specifier|public
name|OS3Exception
parameter_list|(
name|String
name|codeVal
parameter_list|,
name|String
name|messageVal
parameter_list|,
name|int
name|httpCode
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|codeVal
expr_stmt|;
name|this
operator|.
name|errorMessage
operator|=
name|messageVal
expr_stmt|;
name|this
operator|.
name|httpCode
operator|=
name|httpCode
expr_stmt|;
block|}
DECL|method|getCode ()
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
DECL|method|setCode (String code)
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
block|}
DECL|method|getErrorMessage ()
specifier|public
name|String
name|getErrorMessage
parameter_list|()
block|{
return|return
name|errorMessage
return|;
block|}
DECL|method|setErrorMessage (String errorMessage)
specifier|public
name|void
name|setErrorMessage
parameter_list|(
name|String
name|errorMessage
parameter_list|)
block|{
name|this
operator|.
name|errorMessage
operator|=
name|errorMessage
expr_stmt|;
block|}
DECL|method|getRequestId ()
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|requestId
return|;
block|}
DECL|method|setRequestId (String requestId)
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|this
operator|.
name|requestId
operator|=
name|requestId
expr_stmt|;
block|}
DECL|method|getResource ()
specifier|public
name|String
name|getResource
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
DECL|method|setResource (String resource)
specifier|public
name|void
name|setResource
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
block|}
DECL|method|getHttpCode ()
specifier|public
name|int
name|getHttpCode
parameter_list|()
block|{
return|return
name|httpCode
return|;
block|}
DECL|method|setHttpCode (int httpCode)
specifier|public
name|void
name|setHttpCode
parameter_list|(
name|int
name|httpCode
parameter_list|)
block|{
name|this
operator|.
name|httpCode
operator|=
name|httpCode
expr_stmt|;
block|}
DECL|method|toXml ()
specifier|public
name|String
name|toXml
parameter_list|()
block|{
try|try
block|{
name|String
name|val
init|=
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"toXml val is {}"
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|String
name|xmlLine
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
name|val
decl_stmt|;
return|return
name|xmlLine
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception occurred {}"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
comment|//When we get exception log it, and return exception as xml from actual
comment|// exception data. So, falling back to construct from exception.
name|String
name|formatString
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
operator|+
literal|"<Error>"
operator|+
literal|"<Code>%s</Code>"
operator|+
literal|"<Message>%s</Message>"
operator|+
literal|"<Resource>%s</Resource>"
operator|+
literal|"<RequestId>%s</RequestId>"
operator|+
literal|"</Error>"
decl_stmt|;
return|return
name|String
operator|.
name|format
argument_list|(
name|formatString
argument_list|,
name|this
operator|.
name|getCode
argument_list|()
argument_list|,
name|this
operator|.
name|getErrorMessage
argument_list|()
argument_list|,
name|this
operator|.
name|getResource
argument_list|()
argument_list|,
name|this
operator|.
name|getRequestId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

