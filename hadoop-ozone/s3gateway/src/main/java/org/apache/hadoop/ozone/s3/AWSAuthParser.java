begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZoneOffset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_comment
comment|/*  * Parser to request auth parser for http request.  * */
end_comment

begin_interface
DECL|interface|AWSAuthParser
interface|interface
name|AWSAuthParser
block|{
DECL|field|UNSIGNED_PAYLOAD
name|String
name|UNSIGNED_PAYLOAD
init|=
literal|"UNSIGNED-PAYLOAD"
decl_stmt|;
DECL|field|NEWLINE
name|String
name|NEWLINE
init|=
literal|"\n"
decl_stmt|;
DECL|field|CONTENT_TYPE
name|String
name|CONTENT_TYPE
init|=
literal|"content-type"
decl_stmt|;
DECL|field|X_AMAZ_DATE
name|String
name|X_AMAZ_DATE
init|=
literal|"X-Amz-Date"
decl_stmt|;
DECL|field|CONTENT_MD5
name|String
name|CONTENT_MD5
init|=
literal|"content-md5"
decl_stmt|;
DECL|field|AUTHORIZATION_HEADER
name|String
name|AUTHORIZATION_HEADER
init|=
literal|"Authorization"
decl_stmt|;
DECL|field|UTF_8
name|Charset
name|UTF_8
init|=
name|Charset
operator|.
name|forName
argument_list|(
literal|"utf-8"
argument_list|)
decl_stmt|;
DECL|field|X_AMZ_CONTENT_SHA256
name|String
name|X_AMZ_CONTENT_SHA256
init|=
literal|"X-Amz-Content-SHA256"
decl_stmt|;
DECL|field|HOST
name|String
name|HOST
init|=
literal|"host"
decl_stmt|;
DECL|field|AWS4_TERMINATOR
name|String
name|AWS4_TERMINATOR
init|=
literal|"aws4_request"
decl_stmt|;
DECL|field|AWS4_SIGNING_ALGORITHM
name|String
name|AWS4_SIGNING_ALGORITHM
init|=
literal|"AWS4-HMAC-SHA256"
decl_stmt|;
comment|/**    * Seconds in a week, which is the max expiration time Sig-v4 accepts.    */
DECL|field|PRESIGN_URL_MAX_EXPIRATION_SECONDS
name|long
name|PRESIGN_URL_MAX_EXPIRATION_SECONDS
init|=
literal|60
operator|*
literal|60
operator|*
literal|24
operator|*
literal|7
decl_stmt|;
DECL|field|X_AMZ_SECURITY_TOKEN
name|String
name|X_AMZ_SECURITY_TOKEN
init|=
literal|"X-Amz-Security-Token"
decl_stmt|;
DECL|field|X_AMZ_CREDENTIAL
name|String
name|X_AMZ_CREDENTIAL
init|=
literal|"X-Amz-Credential"
decl_stmt|;
DECL|field|X_AMZ_DATE
name|String
name|X_AMZ_DATE
init|=
literal|"X-Amz-Date"
decl_stmt|;
DECL|field|X_AMZ_EXPIRES
name|String
name|X_AMZ_EXPIRES
init|=
literal|"X-Amz-Expires"
decl_stmt|;
DECL|field|X_AMZ_SIGNED_HEADER
name|String
name|X_AMZ_SIGNED_HEADER
init|=
literal|"X-Amz-SignedHeaders"
decl_stmt|;
DECL|field|X_AMZ_SIGNATURE
name|String
name|X_AMZ_SIGNATURE
init|=
literal|"X-Amz-Signature"
decl_stmt|;
DECL|field|X_AMZ_ALGORITHM
name|String
name|X_AMZ_ALGORITHM
init|=
literal|"X-Amz-Algorithm"
decl_stmt|;
DECL|field|AUTHORIZATION
name|String
name|AUTHORIZATION
init|=
literal|"Authorization"
decl_stmt|;
DECL|field|HOST_HEADER
name|String
name|HOST_HEADER
init|=
literal|"Host"
decl_stmt|;
DECL|field|DATE_FORMATTER
name|DateTimeFormatter
name|DATE_FORMATTER
init|=
name|DateTimeFormatter
operator|.
name|ofPattern
argument_list|(
literal|"yyyyMMdd"
argument_list|)
decl_stmt|;
DECL|field|TIME_FORMATTER
name|DateTimeFormatter
name|TIME_FORMATTER
init|=
name|DateTimeFormatter
operator|.
name|ofPattern
argument_list|(
literal|"yyyyMMdd'T'HHmmss'Z'"
argument_list|)
operator|.
name|withZone
argument_list|(
name|ZoneOffset
operator|.
name|UTC
argument_list|)
decl_stmt|;
comment|/**    * API to return string to sign.    */
DECL|method|getStringToSign ()
name|String
name|getStringToSign
parameter_list|()
throws|throws
name|Exception
function_decl|;
block|}
end_interface

end_unit

