begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.endpoint
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|endpoint
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|commontypes
operator|.
name|CommonPrefix
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|commontypes
operator|.
name|KeyMetadata
import|;
end_import

begin_comment
comment|/**  * Response from the ListObject RPC Call.  */
end_comment

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"ListBucketResult"
argument_list|,
name|namespace
operator|=
literal|"http://s3.amazonaws"
operator|+
literal|".com/doc/2006-03-01/"
argument_list|)
DECL|class|ListObjectResponse
specifier|public
class|class
name|ListObjectResponse
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Name"
argument_list|)
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Prefix"
argument_list|)
DECL|field|prefix
specifier|private
name|String
name|prefix
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Marker"
argument_list|)
DECL|field|marker
specifier|private
name|String
name|marker
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"MaxKeys"
argument_list|)
DECL|field|maxKeys
specifier|private
name|int
name|maxKeys
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"KeyCount"
argument_list|)
DECL|field|keyCount
specifier|private
name|int
name|keyCount
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Delimiter"
argument_list|)
DECL|field|delimiter
specifier|private
name|String
name|delimiter
init|=
literal|"/"
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"EncodingType"
argument_list|)
DECL|field|encodingType
specifier|private
name|String
name|encodingType
init|=
literal|"url"
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"IsTruncated"
argument_list|)
DECL|field|isTruncated
specifier|private
name|boolean
name|isTruncated
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"NextContinuationToken"
argument_list|)
DECL|field|nextToken
specifier|private
name|String
name|nextToken
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"continueToken"
argument_list|)
DECL|field|continueToken
specifier|private
name|String
name|continueToken
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Contents"
argument_list|)
DECL|field|contents
specifier|private
name|List
argument_list|<
name|KeyMetadata
argument_list|>
name|contents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"CommonPrefixes"
argument_list|)
DECL|field|commonPrefixes
specifier|private
name|List
argument_list|<
name|CommonPrefix
argument_list|>
name|commonPrefixes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|setName (String name)
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|getPrefix ()
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
DECL|method|setPrefix (String prefix)
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|this
operator|.
name|prefix
operator|=
name|prefix
expr_stmt|;
block|}
DECL|method|getMarker ()
specifier|public
name|String
name|getMarker
parameter_list|()
block|{
return|return
name|marker
return|;
block|}
DECL|method|setMarker (String marker)
specifier|public
name|void
name|setMarker
parameter_list|(
name|String
name|marker
parameter_list|)
block|{
name|this
operator|.
name|marker
operator|=
name|marker
expr_stmt|;
block|}
DECL|method|getMaxKeys ()
specifier|public
name|int
name|getMaxKeys
parameter_list|()
block|{
return|return
name|maxKeys
return|;
block|}
DECL|method|setMaxKeys (int maxKeys)
specifier|public
name|void
name|setMaxKeys
parameter_list|(
name|int
name|maxKeys
parameter_list|)
block|{
name|this
operator|.
name|maxKeys
operator|=
name|maxKeys
expr_stmt|;
block|}
DECL|method|getDelimiter ()
specifier|public
name|String
name|getDelimiter
parameter_list|()
block|{
return|return
name|delimiter
return|;
block|}
DECL|method|setDelimiter (String delimiter)
specifier|public
name|void
name|setDelimiter
parameter_list|(
name|String
name|delimiter
parameter_list|)
block|{
name|this
operator|.
name|delimiter
operator|=
name|delimiter
expr_stmt|;
block|}
DECL|method|getEncodingType ()
specifier|public
name|String
name|getEncodingType
parameter_list|()
block|{
return|return
name|encodingType
return|;
block|}
DECL|method|setEncodingType (String encodingType)
specifier|public
name|void
name|setEncodingType
parameter_list|(
name|String
name|encodingType
parameter_list|)
block|{
name|this
operator|.
name|encodingType
operator|=
name|encodingType
expr_stmt|;
block|}
DECL|method|isTruncated ()
specifier|public
name|boolean
name|isTruncated
parameter_list|()
block|{
return|return
name|isTruncated
return|;
block|}
DECL|method|setTruncated (boolean truncated)
specifier|public
name|void
name|setTruncated
parameter_list|(
name|boolean
name|truncated
parameter_list|)
block|{
name|isTruncated
operator|=
name|truncated
expr_stmt|;
block|}
DECL|method|getContents ()
specifier|public
name|List
argument_list|<
name|KeyMetadata
argument_list|>
name|getContents
parameter_list|()
block|{
return|return
name|contents
return|;
block|}
DECL|method|setContents ( List<KeyMetadata> contents)
specifier|public
name|void
name|setContents
parameter_list|(
name|List
argument_list|<
name|KeyMetadata
argument_list|>
name|contents
parameter_list|)
block|{
name|this
operator|.
name|contents
operator|=
name|contents
expr_stmt|;
block|}
DECL|method|getCommonPrefixes ()
specifier|public
name|List
argument_list|<
name|CommonPrefix
argument_list|>
name|getCommonPrefixes
parameter_list|()
block|{
return|return
name|commonPrefixes
return|;
block|}
DECL|method|setCommonPrefixes ( List<CommonPrefix> commonPrefixes)
specifier|public
name|void
name|setCommonPrefixes
parameter_list|(
name|List
argument_list|<
name|CommonPrefix
argument_list|>
name|commonPrefixes
parameter_list|)
block|{
name|this
operator|.
name|commonPrefixes
operator|=
name|commonPrefixes
expr_stmt|;
block|}
DECL|method|addKey (KeyMetadata keyMetadata)
specifier|public
name|void
name|addKey
parameter_list|(
name|KeyMetadata
name|keyMetadata
parameter_list|)
block|{
name|contents
operator|.
name|add
argument_list|(
name|keyMetadata
argument_list|)
expr_stmt|;
block|}
DECL|method|addPrefix (String relativeKeyName)
specifier|public
name|void
name|addPrefix
parameter_list|(
name|String
name|relativeKeyName
parameter_list|)
block|{
name|commonPrefixes
operator|.
name|add
argument_list|(
operator|new
name|CommonPrefix
argument_list|(
name|relativeKeyName
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getNextToken ()
specifier|public
name|String
name|getNextToken
parameter_list|()
block|{
return|return
name|nextToken
return|;
block|}
DECL|method|setNextToken (String nextToken)
specifier|public
name|void
name|setNextToken
parameter_list|(
name|String
name|nextToken
parameter_list|)
block|{
name|this
operator|.
name|nextToken
operator|=
name|nextToken
expr_stmt|;
block|}
DECL|method|getContinueToken ()
specifier|public
name|String
name|getContinueToken
parameter_list|()
block|{
return|return
name|continueToken
return|;
block|}
DECL|method|setContinueToken (String continueToken)
specifier|public
name|void
name|setContinueToken
parameter_list|(
name|String
name|continueToken
parameter_list|)
block|{
name|this
operator|.
name|continueToken
operator|=
name|continueToken
expr_stmt|;
block|}
DECL|method|getKeyCount ()
specifier|public
name|int
name|getKeyCount
parameter_list|()
block|{
return|return
name|keyCount
return|;
block|}
DECL|method|setKeyCount (int keyCount)
specifier|public
name|void
name|setKeyCount
parameter_list|(
name|int
name|keyCount
parameter_list|)
block|{
name|this
operator|.
name|keyCount
operator|=
name|keyCount
expr_stmt|;
block|}
block|}
end_class

end_unit

