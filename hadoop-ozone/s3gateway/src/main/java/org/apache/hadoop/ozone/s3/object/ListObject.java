begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.s3.object
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|object
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|DefaultValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|PathParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|QueryParam
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneBucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneVolume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|EndpointBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|commontypes
operator|.
name|KeyMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|s3
operator|.
name|exception
operator|.
name|OS3Exception
import|;
end_import

begin_comment
comment|/**  * List Object Rest endpoint.  */
end_comment

begin_class
annotation|@
name|Path
argument_list|(
literal|"/{volume}/{bucket}"
argument_list|)
DECL|class|ListObject
specifier|public
class|class
name|ListObject
extends|extends
name|EndpointBase
block|{
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
name|MediaType
operator|.
name|APPLICATION_XML
argument_list|)
DECL|method|get ( @athParamR) String volumeName, @PathParam(R) String bucketName, @QueryParam(R) String delimiter, @QueryParam(R) String encodingType, @QueryParam(R) String marker, @DefaultValue(R) @QueryParam(R) int maxKeys, @QueryParam(R) String prefix, @Context HttpHeaders hh)
specifier|public
name|ListObjectResponse
name|get
parameter_list|(
annotation|@
name|PathParam
argument_list|(
literal|"volume"
argument_list|)
name|String
name|volumeName
parameter_list|,
annotation|@
name|PathParam
argument_list|(
literal|"bucket"
argument_list|)
name|String
name|bucketName
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"delimiter"
argument_list|)
name|String
name|delimiter
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"encoding-type"
argument_list|)
name|String
name|encodingType
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"marker"
argument_list|)
name|String
name|marker
parameter_list|,
annotation|@
name|DefaultValue
argument_list|(
literal|"1000"
argument_list|)
annotation|@
name|QueryParam
argument_list|(
literal|"max-keys"
argument_list|)
name|int
name|maxKeys
parameter_list|,
annotation|@
name|QueryParam
argument_list|(
literal|"prefix"
argument_list|)
name|String
name|prefix
parameter_list|,
annotation|@
name|Context
name|HttpHeaders
name|hh
parameter_list|)
throws|throws
name|OS3Exception
throws|,
name|IOException
block|{
if|if
condition|(
name|delimiter
operator|==
literal|null
condition|)
block|{
name|delimiter
operator|=
literal|"/"
expr_stmt|;
block|}
if|if
condition|(
name|prefix
operator|==
literal|null
condition|)
block|{
name|prefix
operator|=
literal|""
expr_stmt|;
block|}
name|OzoneVolume
name|volume
init|=
name|getVolume
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|OzoneBucket
name|bucket
init|=
name|getBucket
argument_list|(
name|volume
argument_list|,
name|bucketName
argument_list|)
decl_stmt|;
name|Iterator
argument_list|<
name|?
extends|extends
name|OzoneKey
argument_list|>
name|ozoneKeyIterator
init|=
name|bucket
operator|.
name|listKeys
argument_list|(
name|prefix
argument_list|)
decl_stmt|;
name|ListObjectResponse
name|response
init|=
operator|new
name|ListObjectResponse
argument_list|()
decl_stmt|;
name|response
operator|.
name|setDelimiter
argument_list|(
name|delimiter
argument_list|)
expr_stmt|;
name|response
operator|.
name|setName
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|response
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|response
operator|.
name|setMarker
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|response
operator|.
name|setMaxKeys
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|response
operator|.
name|setEncodingType
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|response
operator|.
name|setTruncated
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|prevDir
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|ozoneKeyIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|OzoneKey
name|next
init|=
name|ozoneKeyIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|relativeKeyName
init|=
name|next
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
name|prefix
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|depth
init|=
name|StringUtils
operator|.
name|countMatches
argument_list|(
name|relativeKeyName
argument_list|,
name|delimiter
argument_list|)
decl_stmt|;
if|if
condition|(
name|prefix
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
operator|!
name|prefix
operator|.
name|endsWith
argument_list|(
name|delimiter
argument_list|)
operator|&&
name|relativeKeyName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|response
operator|.
name|addPrefix
argument_list|(
name|prefix
operator|+
literal|"/"
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|depth
operator|>
literal|0
condition|)
block|{
name|String
name|dirName
init|=
name|relativeKeyName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|relativeKeyName
operator|.
name|indexOf
argument_list|(
name|delimiter
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dirName
operator|.
name|equals
argument_list|(
name|prevDir
argument_list|)
condition|)
block|{
name|response
operator|.
name|addPrefix
argument_list|(
name|prefix
operator|+
name|dirName
operator|+
name|delimiter
argument_list|)
expr_stmt|;
name|prevDir
operator|=
name|dirName
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|relativeKeyName
operator|.
name|endsWith
argument_list|(
name|delimiter
argument_list|)
condition|)
block|{
name|response
operator|.
name|addPrefix
argument_list|(
name|relativeKeyName
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|relativeKeyName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|KeyMetadata
name|keyMetadata
init|=
operator|new
name|KeyMetadata
argument_list|()
decl_stmt|;
name|keyMetadata
operator|.
name|setKey
argument_list|(
name|next
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|keyMetadata
operator|.
name|setSize
argument_list|(
name|next
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|keyMetadata
operator|.
name|setETag
argument_list|(
literal|""
operator|+
name|next
operator|.
name|getModificationTime
argument_list|()
argument_list|)
expr_stmt|;
name|keyMetadata
operator|.
name|setStorageClass
argument_list|(
literal|"STANDARD"
argument_list|)
expr_stmt|;
name|keyMetadata
operator|.
name|setLastModified
argument_list|(
name|Instant
operator|.
name|ofEpochMilli
argument_list|(
name|next
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|addKey
argument_list|(
name|keyMetadata
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

