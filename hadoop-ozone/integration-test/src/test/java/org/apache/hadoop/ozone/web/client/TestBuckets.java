begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.web.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|MiniOzoneCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneAcl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|BucketArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|VolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneVolume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneBucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|OzoneException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|RestClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rpc
operator|.
name|RpcClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|request
operator|.
name|OzoneQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|utils
operator|.
name|OzoneUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|Timeout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * Test Ozone Bucket Lifecycle.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
DECL|class|TestBuckets
specifier|public
class|class
name|TestBuckets
block|{
comment|/**    * Set the timeout for every test.    */
annotation|@
name|Rule
DECL|field|testTimeout
specifier|public
name|Timeout
name|testTimeout
init|=
operator|new
name|Timeout
argument_list|(
literal|300000
argument_list|)
decl_stmt|;
DECL|field|cluster
specifier|private
specifier|static
name|MiniOzoneCluster
name|cluster
init|=
literal|null
decl_stmt|;
DECL|field|client
specifier|private
specifier|static
name|ClientProtocol
name|client
init|=
literal|null
decl_stmt|;
DECL|field|conf
specifier|private
specifier|static
name|OzoneConfiguration
name|conf
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
DECL|method|clientProtocol ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|clientProtocol
parameter_list|()
block|{
name|Object
index|[]
index|[]
name|params
init|=
operator|new
name|Object
index|[]
index|[]
block|{
block|{
name|RpcClient
operator|.
name|class
block|}
block|,
block|{
name|RestClient
operator|.
name|class
block|}
block|}
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|params
argument_list|)
return|;
block|}
annotation|@
name|Parameterized
operator|.
name|Parameter
DECL|field|clientProtocol
specifier|public
specifier|static
name|Class
name|clientProtocol
decl_stmt|;
comment|/**    * Create a MiniDFSCluster for testing.    *<p>    * Ozone is made active by setting OZONE_ENABLED = true    *    * @throws IOException    */
annotation|@
name|BeforeClass
DECL|method|init ()
specifier|public
specifier|static
name|void
name|init
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
throws|,
name|OzoneException
throws|,
name|TimeoutException
throws|,
name|InterruptedException
block|{
name|conf
operator|=
operator|new
name|OzoneConfiguration
argument_list|()
expr_stmt|;
name|cluster
operator|=
name|MiniOzoneCluster
operator|.
name|newBuilder
argument_list|(
name|conf
argument_list|)
operator|.
name|setNumDatanodes
argument_list|(
literal|3
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|cluster
operator|.
name|waitForClusterToBeReady
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|clientProtocol
operator|.
name|equals
argument_list|(
name|RestClient
operator|.
name|class
argument_list|)
condition|)
block|{
name|client
operator|=
operator|new
name|RestClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|client
operator|=
operator|new
name|RpcClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * shutdown MiniDFSCluster.    */
annotation|@
name|AfterClass
DECL|method|shutdown ()
specifier|public
specifier|static
name|void
name|shutdown
parameter_list|()
block|{
if|if
condition|(
name|cluster
operator|!=
literal|null
condition|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testCreateBucket ()
specifier|public
name|void
name|testCreateBucket
parameter_list|()
throws|throws
name|Exception
block|{
name|runTestCreateBucket
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
DECL|method|runTestCreateBucket (ClientProtocol client)
specifier|static
name|void
name|runTestCreateBucket
parameter_list|(
name|ClientProtocol
name|client
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|volumeName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|VolumeArgs
name|volumeArgs
init|=
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOwner
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|setAdmin
argument_list|(
literal|"hdfs"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|volumeArgs
argument_list|)
expr_stmt|;
name|OzoneVolume
name|vol
init|=
name|client
operator|.
name|getVolumeDetails
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|String
index|[]
name|acls
init|=
block|{
literal|"user:frodo:rw"
block|,
literal|"user:samwise:rw"
block|}
decl_stmt|;
comment|// create 10 buckets under same volume
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|10
condition|;
name|x
operator|++
control|)
block|{
name|long
name|currentTime
init|=
name|Time
operator|.
name|now
argument_list|()
decl_stmt|;
name|String
name|bucketName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|aclList
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|acls
argument_list|)
operator|.
name|map
argument_list|(
name|acl
lambda|->
name|OzoneAcl
operator|.
name|parseAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|BucketArgs
name|bucketArgs
init|=
name|BucketArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAcls
argument_list|(
name|aclList
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|,
name|bucketArgs
argument_list|)
expr_stmt|;
name|OzoneBucket
name|bucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bucket
operator|.
name|getName
argument_list|()
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
comment|// verify the bucket creation time
name|assertTrue
argument_list|(
operator|(
name|bucket
operator|.
name|getCreationTime
argument_list|()
operator|/
literal|1000
operator|)
operator|>=
operator|(
name|currentTime
operator|/
literal|1000
operator|)
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|vol
operator|.
name|getName
argument_list|()
argument_list|,
name|volumeName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|vol
operator|.
name|getAdmin
argument_list|()
argument_list|,
literal|"hdfs"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|vol
operator|.
name|getOwner
argument_list|()
argument_list|,
literal|"bilbo"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|vol
operator|.
name|getQuota
argument_list|()
argument_list|,
name|OzoneQuota
operator|.
name|parseQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|sizeInBytes
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test create a bucket with invalid bucket name,
comment|// not use Rule here because the test method is static.
try|try
block|{
name|String
name|invalidBucketName
init|=
literal|"#"
operator|+
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|invalidBucketName
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Except the bucket creation to be failed because the"
operator|+
literal|" bucket name starts with an invalid char #"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Bucket or Volume name has an unsupported character : #"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testAddBucketAcls ()
specifier|public
name|void
name|testAddBucketAcls
parameter_list|()
throws|throws
name|Exception
block|{
name|runTestAddBucketAcls
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
DECL|method|runTestAddBucketAcls (ClientProtocol client)
specifier|static
name|void
name|runTestAddBucketAcls
parameter_list|(
name|ClientProtocol
name|client
parameter_list|)
throws|throws
name|OzoneException
throws|,
name|IOException
throws|,
name|ParseException
block|{
name|String
name|volumeName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|VolumeArgs
name|volumeArgs
init|=
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOwner
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|setAdmin
argument_list|(
literal|"hdfs"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|volumeArgs
argument_list|)
expr_stmt|;
name|OzoneVolume
name|vol
init|=
name|client
operator|.
name|getVolumeDetails
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|String
index|[]
name|acls
init|=
block|{
literal|"user:frodo:rw"
block|,
literal|"user:samwise:rw"
block|}
decl_stmt|;
name|String
name|bucketName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|OzoneBucket
name|bucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|aclList
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|acls
argument_list|)
operator|.
name|map
argument_list|(
name|acl
lambda|->
name|OzoneAcl
operator|.
name|parseAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|numAcls
init|=
name|bucket
operator|.
name|getAcls
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|bucket
operator|.
name|addAcls
argument_list|(
name|aclList
argument_list|)
expr_stmt|;
name|OzoneBucket
name|updatedBucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|updatedBucket
operator|.
name|getAcls
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
operator|+
name|numAcls
argument_list|)
expr_stmt|;
comment|// verify if the creation time is missing after update operation
name|assertTrue
argument_list|(
operator|(
name|updatedBucket
operator|.
name|getCreationTime
argument_list|()
operator|)
operator|/
literal|1000
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRemoveBucketAcls ()
specifier|public
name|void
name|testRemoveBucketAcls
parameter_list|()
throws|throws
name|Exception
block|{
name|runTestRemoveBucketAcls
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
DECL|method|runTestRemoveBucketAcls (ClientProtocol client)
specifier|static
name|void
name|runTestRemoveBucketAcls
parameter_list|(
name|ClientProtocol
name|client
parameter_list|)
throws|throws
name|OzoneException
throws|,
name|IOException
throws|,
name|ParseException
block|{
name|String
name|volumeName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|VolumeArgs
name|volumeArgs
init|=
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOwner
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|setAdmin
argument_list|(
literal|"hdfs"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|volumeArgs
argument_list|)
expr_stmt|;
name|OzoneVolume
name|vol
init|=
name|client
operator|.
name|getVolumeDetails
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|String
index|[]
name|acls
init|=
block|{
literal|"user:frodo:rw"
block|,
literal|"user:samwise:rw"
block|}
decl_stmt|;
name|String
name|bucketName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|aclList
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|acls
argument_list|)
operator|.
name|map
argument_list|(
name|acl
lambda|->
name|OzoneAcl
operator|.
name|parseAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|OzoneBucket
name|bucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|int
name|numAcls
init|=
name|bucket
operator|.
name|getAcls
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|bucket
operator|.
name|addAcls
argument_list|(
name|aclList
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bucket
operator|.
name|getAcls
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
operator|+
name|numAcls
argument_list|)
expr_stmt|;
name|bucket
operator|.
name|removeAcls
argument_list|(
name|aclList
argument_list|)
expr_stmt|;
name|OzoneBucket
name|updatedBucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
comment|// We removed all acls
name|assertEquals
argument_list|(
name|updatedBucket
operator|.
name|getAcls
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|numAcls
argument_list|)
expr_stmt|;
comment|// verify if the creation time is missing after update operation
name|assertTrue
argument_list|(
operator|(
name|updatedBucket
operator|.
name|getCreationTime
argument_list|()
operator|/
literal|1000
operator|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteBucket ()
specifier|public
name|void
name|testDeleteBucket
parameter_list|()
throws|throws
name|OzoneException
throws|,
name|IOException
block|{
name|runTestDeleteBucket
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
DECL|method|runTestDeleteBucket (ClientProtocol client)
specifier|static
name|void
name|runTestDeleteBucket
parameter_list|(
name|ClientProtocol
name|client
parameter_list|)
throws|throws
name|OzoneException
throws|,
name|IOException
block|{
name|String
name|volumeName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|VolumeArgs
name|volumeArgs
init|=
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOwner
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|setAdmin
argument_list|(
literal|"hdfs"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|volumeArgs
argument_list|)
expr_stmt|;
name|OzoneVolume
name|vol
init|=
name|client
operator|.
name|getVolumeDetails
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|String
index|[]
name|acls
init|=
block|{
literal|"user:frodo:rw"
block|,
literal|"user:samwise:rw"
block|}
decl_stmt|;
name|String
name|bucketName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|aclList
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|acls
argument_list|)
operator|.
name|map
argument_list|(
name|acl
lambda|->
name|OzoneAcl
operator|.
name|parseAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|BucketArgs
name|bucketArgs
init|=
name|BucketArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAcls
argument_list|(
name|aclList
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|,
name|bucketArgs
argument_list|)
expr_stmt|;
name|vol
operator|.
name|deleteBucket
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
try|try
block|{
name|OzoneBucket
name|updatedBucket
init|=
name|vol
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"Fetching deleted bucket, Should not reach here."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// must throw
name|assertNotNull
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListBucket ()
specifier|public
name|void
name|testListBucket
parameter_list|()
throws|throws
name|Exception
block|{
name|runTestListBucket
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
DECL|method|runTestListBucket (ClientProtocol client)
specifier|static
name|void
name|runTestListBucket
parameter_list|(
name|ClientProtocol
name|client
parameter_list|)
throws|throws
name|OzoneException
throws|,
name|IOException
throws|,
name|ParseException
block|{
name|String
name|volumeName
init|=
name|OzoneUtils
operator|.
name|getRequestID
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|VolumeArgs
name|volumeArgs
init|=
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOwner
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setQuota
argument_list|(
literal|"100TB"
argument_list|)
operator|.
name|setAdmin
argument_list|(
literal|"hdfs"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|volumeArgs
argument_list|)
expr_stmt|;
name|OzoneVolume
name|vol
init|=
name|client
operator|.
name|getVolumeDetails
argument_list|(
name|volumeName
argument_list|)
decl_stmt|;
name|String
index|[]
name|acls
init|=
block|{
literal|"user:frodo:rw"
block|,
literal|"user:samwise:rw"
block|}
decl_stmt|;
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|aclList
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|acls
argument_list|)
operator|.
name|map
argument_list|(
name|acl
lambda|->
name|OzoneAcl
operator|.
name|parseAcl
argument_list|(
name|acl
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|currentTime
init|=
name|Time
operator|.
name|now
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|10
condition|;
name|x
operator|++
control|)
block|{
name|String
name|bucketName
init|=
literal|"listbucket-test-"
operator|+
name|x
decl_stmt|;
name|BucketArgs
name|bucketArgs
init|=
name|BucketArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAcls
argument_list|(
name|aclList
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|vol
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|,
name|bucketArgs
argument_list|)
expr_stmt|;
block|}
name|Iterator
argument_list|<
name|?
extends|extends
name|OzoneBucket
argument_list|>
name|bucketIterator
init|=
name|vol
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|bucketIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|assertTrue
argument_list|(
operator|(
name|bucketIterator
operator|.
name|next
argument_list|()
operator|.
name|getCreationTime
argument_list|()
operator|/
literal|1000
operator|)
operator|>=
operator|(
name|currentTime
operator|/
literal|1000
operator|)
argument_list|)
expr_stmt|;
name|count
operator|++
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|count
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|bucketIterator
operator|=
name|vol
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|,
literal|"listbucket-test-4"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getSize
argument_list|(
name|bucketIterator
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|bucketIterator
operator|=
name|vol
operator|.
name|listBuckets
argument_list|(
literal|null
argument_list|,
literal|"listbucket-test-3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getSize
argument_list|(
name|bucketIterator
argument_list|)
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|getSize (Iterator<? extends OzoneBucket> bucketIterator)
specifier|private
specifier|static
name|int
name|getSize
parameter_list|(
name|Iterator
argument_list|<
name|?
extends|extends
name|OzoneBucket
argument_list|>
name|bucketIterator
parameter_list|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|bucketIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|count
operator|++
expr_stmt|;
name|bucketIterator
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
return|return
name|count
return|;
block|}
block|}
end_class

end_unit

