begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.snapshot
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|ratis
operator|.
name|OMRatisSnapshotInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_comment
comment|/**  * Tests {@link org.apache.hadoop.ozone.om.ratis.OMRatisSnapshotInfo}.  */
end_comment

begin_class
DECL|class|TestOMRatisSnapshotInfo
specifier|public
class|class
name|TestOMRatisSnapshotInfo
block|{
annotation|@
name|Rule
DECL|field|folder
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
annotation|@
name|Test
DECL|method|testSaveAndLoadSnapshotInfo ()
specifier|public
name|void
name|testSaveAndLoadSnapshotInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|rootDir
init|=
name|folder
operator|.
name|newFolder
argument_list|()
decl_stmt|;
name|OMRatisSnapshotInfo
name|omRatisSnapshotInfo
init|=
operator|new
name|OMRatisSnapshotInfo
argument_list|(
name|rootDir
argument_list|)
decl_stmt|;
comment|// Initially term and index should be 0 and -1
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|omRatisSnapshotInfo
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|omRatisSnapshotInfo
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|int
name|snapshotIndex
init|=
name|random
operator|.
name|nextInt
argument_list|(
literal|50
argument_list|)
decl_stmt|;
name|int
name|termIndex
init|=
name|random
operator|.
name|nextInt
argument_list|(
literal|10
argument_list|)
decl_stmt|;
comment|// Save snapshotInfo to disk
name|omRatisSnapshotInfo
operator|.
name|updateTerm
argument_list|(
name|termIndex
argument_list|)
expr_stmt|;
name|omRatisSnapshotInfo
operator|.
name|saveRatisSnapshotToDisk
argument_list|(
name|snapshotIndex
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|termIndex
argument_list|,
name|omRatisSnapshotInfo
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|snapshotIndex
argument_list|,
name|omRatisSnapshotInfo
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// Load the snapshot file into new SnapshotInfo
name|OMRatisSnapshotInfo
name|newSnapshotInfo
init|=
operator|new
name|OMRatisSnapshotInfo
argument_list|(
name|rootDir
argument_list|)
decl_stmt|;
comment|// Verify that the snapshot file loaded properly
name|Assert
operator|.
name|assertEquals
argument_list|(
name|termIndex
argument_list|,
name|newSnapshotInfo
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|snapshotIndex
argument_list|,
name|newSnapshotInfo
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

