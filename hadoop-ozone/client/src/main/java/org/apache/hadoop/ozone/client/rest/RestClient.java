begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.client.rest
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|core
operator|.
name|type
operator|.
name|TypeReference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|StorageType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|client
operator|.
name|HddsClientUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneAcl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|OzoneQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationFactor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|protocol
operator|.
name|ClientProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|headers
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|response
operator|.
name|BucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|response
operator|.
name|KeyInfoDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|rest
operator|.
name|response
operator|.
name|VolumeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMConfigKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|ServiceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|ServicePort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|response
operator|.
name|ListBuckets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|response
operator|.
name|ListKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|response
operator|.
name|ListVolumes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHeaders
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|config
operator|.
name|RequestConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpDelete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpPut
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpUriRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|entity
operator|.
name|InputStreamEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|CloseableHttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|HttpClients
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|conn
operator|.
name|PoolingHttpClientConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|util
operator|.
name|EntityUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PipedInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PipedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|FutureTask
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
operator|.
name|HTTP_CREATED
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
operator|.
name|HTTP_OK
import|;
end_import

begin_comment
comment|/**  * Ozone Client REST protocol implementation. It uses REST protocol to  * connect to Ozone Handler that executes client calls.  */
end_comment

begin_class
DECL|class|RestClient
specifier|public
class|class
name|RestClient
implements|implements
name|ClientProtocol
block|{
DECL|field|PATH_SEPARATOR
specifier|private
specifier|static
specifier|final
name|String
name|PATH_SEPARATOR
init|=
literal|"/"
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RestClient
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|conf
specifier|private
specifier|final
name|Configuration
name|conf
decl_stmt|;
DECL|field|ozoneRestUri
specifier|private
specifier|final
name|URI
name|ozoneRestUri
decl_stmt|;
DECL|field|httpClient
specifier|private
specifier|final
name|CloseableHttpClient
name|httpClient
decl_stmt|;
DECL|field|ugi
specifier|private
specifier|final
name|UserGroupInformation
name|ugi
decl_stmt|;
DECL|field|userRights
specifier|private
specifier|final
name|OzoneAcl
operator|.
name|OzoneACLRights
name|userRights
decl_stmt|;
comment|/**     * Creates RestClient instance with the given configuration.     * @param conf Configuration     * @throws IOException     */
DECL|method|RestClient (Configuration conf)
specifier|public
name|RestClient
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|long
name|socketTimeout
init|=
name|conf
operator|.
name|getTimeDuration
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_SOCKET_TIMEOUT
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_SOCKET_TIMEOUT_DEFAULT
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
name|long
name|connectionTimeout
init|=
name|conf
operator|.
name|getTimeDuration
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_CONNECTION_TIMEOUT
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_CLIENT_CONNECTION_TIMEOUT_DEFAULT
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
name|int
name|maxConnection
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_REST_CLIENT_HTTP_CONNECTION_MAX
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_REST_CLIENT_HTTP_CONNECTION_DEFAULT
argument_list|)
decl_stmt|;
name|int
name|maxConnectionPerRoute
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|OzoneConfigKeys
operator|.
name|OZONE_REST_CLIENT_HTTP_CONNECTION_PER_ROUTE_MAX
argument_list|,
name|OzoneConfigKeys
operator|.
name|OZONE_REST_CLIENT_HTTP_CONNECTION_PER_ROUTE_MAX_DEFAULT
argument_list|)
decl_stmt|;
comment|/*       To make RestClient Thread safe, creating the HttpClient with       ThreadSafeClientConnManager.       */
name|PoolingHttpClientConnectionManager
name|connManager
init|=
operator|new
name|PoolingHttpClientConnectionManager
argument_list|()
decl_stmt|;
name|connManager
operator|.
name|setMaxTotal
argument_list|(
name|maxConnection
argument_list|)
expr_stmt|;
name|connManager
operator|.
name|setDefaultMaxPerRoute
argument_list|(
name|maxConnectionPerRoute
argument_list|)
expr_stmt|;
name|this
operator|.
name|httpClient
operator|=
name|HttpClients
operator|.
name|custom
argument_list|()
operator|.
name|setConnectionManager
argument_list|(
name|connManager
argument_list|)
operator|.
name|setDefaultRequestConfig
argument_list|(
name|RequestConfig
operator|.
name|custom
argument_list|()
operator|.
name|setSocketTimeout
argument_list|(
name|Math
operator|.
name|toIntExact
argument_list|(
name|socketTimeout
argument_list|)
argument_list|)
operator|.
name|setConnectTimeout
argument_list|(
name|Math
operator|.
name|toIntExact
argument_list|(
name|connectionTimeout
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|this
operator|.
name|ugi
operator|=
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
expr_stmt|;
name|this
operator|.
name|userRights
operator|=
name|conf
operator|.
name|getEnum
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_USER_RIGHTS
argument_list|,
name|OMConfigKeys
operator|.
name|OZONE_OM_USER_RIGHTS_DEFAULT
argument_list|)
expr_stmt|;
comment|// TODO: Add new configuration parameter to configure RestServerSelector.
name|RestServerSelector
name|defaultSelector
init|=
operator|new
name|DefaultRestServerSelector
argument_list|()
decl_stmt|;
name|InetSocketAddress
name|restServer
init|=
name|getOzoneRestServerAddress
argument_list|(
name|defaultSelector
argument_list|)
decl_stmt|;
name|URIBuilder
name|uriBuilder
init|=
operator|new
name|URIBuilder
argument_list|()
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
operator|.
name|setHost
argument_list|(
name|restServer
operator|.
name|getHostName
argument_list|()
argument_list|)
operator|.
name|setPort
argument_list|(
name|restServer
operator|.
name|getPort
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|ozoneRestUri
operator|=
name|uriBuilder
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getOzoneRestServerAddress ( RestServerSelector selector)
specifier|private
name|InetSocketAddress
name|getOzoneRestServerAddress
parameter_list|(
name|RestServerSelector
name|selector
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|httpAddress
init|=
name|conf
operator|.
name|get
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_HTTP_ADDRESS_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|httpAddress
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|OMConfigKeys
operator|.
name|OZONE_OM_HTTP_ADDRESS_KEY
operator|+
literal|" must be defined. See"
operator|+
literal|" https://wiki.apache.org/hadoop/Ozone#Configuration for"
operator|+
literal|" details on configuring Ozone."
argument_list|)
throw|;
block|}
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
literal|"http://"
operator|+
name|httpAddress
operator|+
literal|"/serviceList"
argument_list|)
decl_stmt|;
name|HttpEntity
name|entity
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|serviceListJson
init|=
name|EntityUtils
operator|.
name|toString
argument_list|(
name|entity
argument_list|)
decl_stmt|;
name|ObjectMapper
name|objectMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|TypeReference
argument_list|<
name|List
argument_list|<
name|ServiceInfo
argument_list|>
argument_list|>
name|serviceInfoReference
init|=
operator|new
name|TypeReference
argument_list|<
name|List
argument_list|<
name|ServiceInfo
argument_list|>
argument_list|>
argument_list|()
block|{           }
decl_stmt|;
name|List
argument_list|<
name|ServiceInfo
argument_list|>
name|services
init|=
name|objectMapper
operator|.
name|readValue
argument_list|(
name|serviceListJson
argument_list|,
name|serviceInfoReference
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ServiceInfo
argument_list|>
name|dataNodeInfos
init|=
name|services
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|a
lambda|->
name|a
operator|.
name|getNodeType
argument_list|()
operator|.
name|equals
argument_list|(
name|HddsProtos
operator|.
name|NodeType
operator|.
name|DATANODE
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|ServiceInfo
name|restServer
init|=
name|selector
operator|.
name|getRestServer
argument_list|(
name|dataNodeInfos
argument_list|)
decl_stmt|;
return|return
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|NetUtils
operator|.
name|normalizeHostName
argument_list|(
name|restServer
operator|.
name|getHostname
argument_list|()
argument_list|)
operator|+
literal|":"
operator|+
name|restServer
operator|.
name|getPort
argument_list|(
name|ServicePort
operator|.
name|Type
operator|.
name|HTTP
argument_list|)
argument_list|)
return|;
block|}
finally|finally
block|{
name|EntityUtils
operator|.
name|consume
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|createVolume (String volumeName)
specifier|public
name|void
name|createVolume
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
name|createVolume
argument_list|(
name|volumeName
argument_list|,
name|VolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createVolume (String volumeName, VolumeArgs volArgs)
specifier|public
name|void
name|createVolume
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|VolumeArgs
name|volArgs
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volArgs
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|String
name|owner
init|=
name|volArgs
operator|.
name|getOwner
argument_list|()
operator|==
literal|null
condition|?
name|ugi
operator|.
name|getUserName
argument_list|()
else|:
name|volArgs
operator|.
name|getOwner
argument_list|()
decl_stmt|;
comment|//TODO: support for ACLs has to be done in OzoneHandler (rest server)
comment|/**       List<OzoneAcl> listOfAcls = new ArrayList<>();       //User ACL       listOfAcls.add(new OzoneAcl(OzoneAcl.OzoneACLType.USER,           owner, userRights));       //ACLs from VolumeArgs       if(volArgs.getAcls() != null) {         listOfAcls.addAll(volArgs.getAcls());       }        */
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|String
name|quota
init|=
name|volArgs
operator|.
name|getQuota
argument_list|()
decl_stmt|;
if|if
condition|(
name|quota
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setParameter
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_QUERY_TAG
argument_list|,
name|quota
argument_list|)
expr_stmt|;
block|}
name|HttpPost
name|httpPost
init|=
operator|new
name|HttpPost
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPost
argument_list|)
expr_stmt|;
comment|//use admin from VolumeArgs, if it's present
if|if
condition|(
name|volArgs
operator|.
name|getAdmin
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|httpPost
operator|.
name|removeHeaders
argument_list|(
name|HttpHeaders
operator|.
name|AUTHORIZATION
argument_list|)
expr_stmt|;
name|httpPost
operator|.
name|addHeader
argument_list|(
name|HttpHeaders
operator|.
name|AUTHORIZATION
argument_list|,
name|Header
operator|.
name|OZONE_SIMPLE_AUTHENTICATION_SCHEME
operator|+
literal|" "
operator|+
name|volArgs
operator|.
name|getAdmin
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|httpPost
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_USER
argument_list|,
name|owner
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Creating Volume: {}, with {} as owner and quota set to {}."
argument_list|,
name|volumeName
argument_list|,
name|owner
argument_list|,
name|quota
operator|==
literal|null
condition|?
literal|"default"
else|:
name|quota
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPost
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setVolumeOwner (String volumeName, String owner)
specifier|public
name|void
name|setVolumeOwner
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|owner
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
name|httpPut
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_USER
argument_list|,
name|owner
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setVolumeQuota (String volumeName, OzoneQuota quota)
specifier|public
name|void
name|setVolumeQuota
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneQuota
name|quota
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|quota
argument_list|)
expr_stmt|;
name|String
name|quotaString
init|=
name|quota
operator|.
name|toString
argument_list|()
decl_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setParameter
argument_list|(
name|Header
operator|.
name|OZONE_QUOTA_QUERY_TAG
argument_list|,
name|quotaString
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getVolumeDetails (String volumeName)
specifier|public
name|OzoneVolume
name|getVolumeDetails
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_INFO_QUERY_VOLUME
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|VolumeInfo
name|volInfo
init|=
name|VolumeInfo
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
comment|//TODO: OzoneHandler in datanode has to be modified to send ACLs
name|OzoneVolume
name|volume
init|=
operator|new
name|OzoneVolume
argument_list|(
name|conf
argument_list|,
name|this
argument_list|,
name|volInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getCreatedBy
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getOwner
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getQuota
argument_list|()
operator|.
name|sizeInBytes
argument_list|()
argument_list|,
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|volInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|volume
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|checkVolumeAccess (String volumeName, OzoneAcl acl)
specifier|public
name|boolean
name|checkVolumeAccess
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|OzoneAcl
name|acl
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteVolume (String volumeName)
specifier|public
name|void
name|deleteVolume
parameter_list|(
name|String
name|volumeName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|HttpDelete
name|httpDelete
init|=
operator|new
name|HttpDelete
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpDelete
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpDelete
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listVolumes (String volumePrefix, String prevKey, int maxListResult)
specifier|public
name|List
argument_list|<
name|OzoneVolume
argument_list|>
name|listVolumes
parameter_list|(
name|String
name|volumePrefix
parameter_list|,
name|String
name|prevKey
parameter_list|,
name|int
name|maxListResult
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|listVolumes
argument_list|(
literal|null
argument_list|,
name|volumePrefix
argument_list|,
name|prevKey
argument_list|,
name|maxListResult
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|listVolumes (String user, String volumePrefix, String prevKey, int maxListResult)
specifier|public
name|List
argument_list|<
name|OzoneVolume
argument_list|>
name|listVolumes
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|volumePrefix
parameter_list|,
name|String
name|prevKey
parameter_list|,
name|int
name|maxListResult
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_LIST_QUERY_SERVICE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_MAXKEYS
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|maxListResult
argument_list|)
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREFIX
argument_list|,
name|volumePrefix
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREVKEY
argument_list|,
name|prevKey
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|user
argument_list|)
condition|)
block|{
name|httpGet
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_USER
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|ListVolumes
name|volumeList
init|=
name|ListVolumes
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|volumeList
operator|.
name|getVolumes
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|volInfo
lambda|->
block|{
name|long
name|creationTime
init|=
literal|0
decl_stmt|;
try|try
block|{
name|creationTime
operator|=
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|volInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Parse exception in getting creation time for volume"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|OzoneVolume
argument_list|(
name|conf
argument_list|,
name|this
argument_list|,
name|volInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getCreatedBy
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getOwner
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getQuota
argument_list|()
operator|.
name|sizeInBytes
argument_list|()
argument_list|,
name|creationTime
argument_list|,
literal|null
argument_list|)
return|;
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createBucket (String volumeName, String bucketName)
specifier|public
name|void
name|createBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
name|createBucket
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|BucketArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createBucket ( String volumeName, String bucketName, BucketArgs bucketArgs)
specifier|public
name|void
name|createBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|BucketArgs
name|bucketArgs
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|bucketArgs
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|OzoneConsts
operator|.
name|Versioning
name|versioning
init|=
name|OzoneConsts
operator|.
name|Versioning
operator|.
name|DISABLED
decl_stmt|;
if|if
condition|(
name|bucketArgs
operator|.
name|getVersioning
argument_list|()
operator|!=
literal|null
operator|&&
name|bucketArgs
operator|.
name|getVersioning
argument_list|()
condition|)
block|{
name|versioning
operator|=
name|OzoneConsts
operator|.
name|Versioning
operator|.
name|ENABLED
expr_stmt|;
block|}
name|StorageType
name|storageType
init|=
name|bucketArgs
operator|.
name|getStorageType
argument_list|()
operator|==
literal|null
condition|?
name|StorageType
operator|.
name|DEFAULT
else|:
name|bucketArgs
operator|.
name|getStorageType
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpPost
name|httpPost
init|=
operator|new
name|HttpPost
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPost
argument_list|)
expr_stmt|;
comment|//ACLs from BucketArgs
if|if
condition|(
name|bucketArgs
operator|.
name|getAcls
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|OzoneAcl
name|acl
range|:
name|bucketArgs
operator|.
name|getAcls
argument_list|()
control|)
block|{
name|httpPost
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_ACLS
argument_list|,
name|Header
operator|.
name|OZONE_ACL_ADD
operator|+
literal|" "
operator|+
name|acl
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|httpPost
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_STORAGE_TYPE
argument_list|,
name|storageType
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|httpPost
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_BUCKET_VERSIONING
argument_list|,
name|versioning
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Creating Bucket: {}/{}, with Versioning {} and Storage Type"
operator|+
literal|" set to {}"
argument_list|,
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|versioning
argument_list|,
name|storageType
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPost
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addBucketAcls ( String volumeName, String bucketName, List<OzoneAcl> addAcls)
specifier|public
name|void
name|addBucketAcls
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|addAcls
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|addAcls
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
for|for
control|(
name|OzoneAcl
name|acl
range|:
name|addAcls
control|)
block|{
name|httpPut
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_ACLS
argument_list|,
name|Header
operator|.
name|OZONE_ACL_ADD
operator|+
literal|" "
operator|+
name|acl
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeBucketAcls ( String volumeName, String bucketName, List<OzoneAcl> removeAcls)
specifier|public
name|void
name|removeBucketAcls
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|List
argument_list|<
name|OzoneAcl
argument_list|>
name|removeAcls
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|removeAcls
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
for|for
control|(
name|OzoneAcl
name|acl
range|:
name|removeAcls
control|)
block|{
name|httpPut
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_ACLS
argument_list|,
name|Header
operator|.
name|OZONE_ACL_REMOVE
operator|+
literal|" "
operator|+
name|acl
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setBucketVersioning ( String volumeName, String bucketName, Boolean versioning)
specifier|public
name|void
name|setBucketVersioning
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|Boolean
name|versioning
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|versioning
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
name|httpPut
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_BUCKET_VERSIONING
argument_list|,
name|getBucketVersioning
argument_list|(
name|versioning
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|setBucketStorageType ( String volumeName, String bucketName, StorageType storageType)
specifier|public
name|void
name|setBucketStorageType
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|StorageType
name|storageType
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|storageType
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpPut
name|httpPut
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPut
argument_list|)
expr_stmt|;
name|httpPut
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_STORAGE_TYPE
argument_list|,
name|storageType
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPut
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deleteBucket (String volumeName, String bucketName)
specifier|public
name|void
name|deleteBucket
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|HttpDelete
name|httpDelete
init|=
operator|new
name|HttpDelete
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpDelete
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpDelete
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|checkBucketAccess (String volumeName, String bucketName)
specifier|public
name|void
name|checkBucketAccess
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not yet implemented."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getBucketDetails (String volumeName, String bucketName)
specifier|public
name|OzoneBucket
name|getBucketDetails
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_INFO_QUERY_BUCKET
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|BucketInfo
name|bucketInfo
init|=
name|BucketInfo
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
name|OzoneBucket
name|bucket
init|=
operator|new
name|OzoneBucket
argument_list|(
name|conf
argument_list|,
name|this
argument_list|,
name|bucketInfo
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|bucketInfo
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|bucketInfo
operator|.
name|getAcls
argument_list|()
argument_list|,
name|bucketInfo
operator|.
name|getStorageType
argument_list|()
argument_list|,
name|getBucketVersioningFlag
argument_list|(
name|bucketInfo
operator|.
name|getVersioning
argument_list|()
argument_list|)
argument_list|,
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|bucketInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|bucket
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listBuckets (String volumeName, String bucketPrefix, String prevBucket, int maxListResult)
specifier|public
name|List
argument_list|<
name|OzoneBucket
argument_list|>
name|listBuckets
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketPrefix
parameter_list|,
name|String
name|prevBucket
parameter_list|,
name|int
name|maxListResult
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_INFO_QUERY_BUCKET
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_MAXKEYS
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|maxListResult
argument_list|)
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREFIX
argument_list|,
name|bucketPrefix
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREVKEY
argument_list|,
name|prevBucket
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|ListBuckets
name|bucketList
init|=
name|ListBuckets
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|bucketList
operator|.
name|getBuckets
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|bucketInfo
lambda|->
block|{
name|long
name|creationTime
init|=
literal|0
decl_stmt|;
try|try
block|{
name|creationTime
operator|=
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|bucketInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Parse exception in getting creation time for volume"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|OzoneBucket
argument_list|(
name|conf
argument_list|,
name|this
argument_list|,
name|volumeName
argument_list|,
name|bucketInfo
operator|.
name|getBucketName
argument_list|()
argument_list|,
name|bucketInfo
operator|.
name|getAcls
argument_list|()
argument_list|,
name|bucketInfo
operator|.
name|getStorageType
argument_list|()
argument_list|,
name|getBucketVersioningFlag
argument_list|(
name|bucketInfo
operator|.
name|getVersioning
argument_list|()
argument_list|)
argument_list|,
name|creationTime
argument_list|)
return|;
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**    * Writes a key in an existing bucket.    *    * @param volumeName Name of the Volume    * @param bucketName Name of the Bucket    * @param keyName Name of the Key    * @param size Size of the data    * @param type    * @param factor @return {@link OzoneOutputStream}    */
annotation|@
name|Override
DECL|method|createKey ( String volumeName, String bucketName, String keyName, long size, ReplicationType type, ReplicationFactor factor)
specifier|public
name|OzoneOutputStream
name|createKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|,
name|long
name|size
parameter_list|,
name|ReplicationType
name|type
parameter_list|,
name|ReplicationFactor
name|factor
parameter_list|)
throws|throws
name|IOException
block|{
comment|// TODO: Once ReplicationType and ReplicationFactor are supported in
comment|// OzoneHandler (in Datanode), set them in header.
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|HddsClientUtils
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|,
name|type
argument_list|,
name|factor
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
operator|+
name|PATH_SEPARATOR
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|HttpPut
name|putRequest
init|=
operator|new
name|HttpPut
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|putRequest
argument_list|)
expr_stmt|;
name|PipedInputStream
name|in
init|=
operator|new
name|PipedInputStream
argument_list|()
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|PipedOutputStream
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|putRequest
operator|.
name|setEntity
argument_list|(
operator|new
name|InputStreamEntity
argument_list|(
name|in
argument_list|,
name|size
argument_list|)
argument_list|)
expr_stmt|;
name|FutureTask
argument_list|<
name|HttpEntity
argument_list|>
name|futureTask
init|=
operator|new
name|FutureTask
argument_list|<>
argument_list|(
parameter_list|()
lambda|->
name|executeHttpRequest
argument_list|(
name|putRequest
argument_list|)
argument_list|)
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|futureTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
name|OzoneOutputStream
name|outputStream
init|=
operator|new
name|OzoneOutputStream
argument_list|(
operator|new
name|OutputStream
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|futureTask
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
decl||
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
decl_stmt|;
return|return
name|outputStream
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getKey ( String volumeName, String bucketName, String keyName)
specifier|public
name|OzoneInputStream
name|getKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
operator|+
name|PATH_SEPARATOR
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|HttpGet
name|getRequest
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|getRequest
argument_list|)
expr_stmt|;
name|HttpEntity
name|entity
init|=
name|executeHttpRequest
argument_list|(
name|getRequest
argument_list|)
decl_stmt|;
name|PipedInputStream
name|in
init|=
operator|new
name|PipedInputStream
argument_list|()
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|PipedOutputStream
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|FutureTask
argument_list|<
name|Void
argument_list|>
name|futureTask
init|=
operator|new
name|FutureTask
argument_list|<>
argument_list|(
parameter_list|()
lambda|->
block|{
name|entity
operator|.
name|writeTo
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
argument_list|)
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|futureTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
name|OzoneInputStream
name|inputStream
init|=
operator|new
name|OzoneInputStream
argument_list|(
operator|new
name|InputStream
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|in
operator|.
name|read
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
return|return
name|inputStream
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deleteKey (String volumeName, String bucketName, String keyName)
specifier|public
name|void
name|deleteKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
operator|+
name|PATH_SEPARATOR
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|HttpDelete
name|httpDelete
init|=
operator|new
name|HttpDelete
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpDelete
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpDelete
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|renameKey (String volumeName, String bucketName, String fromKeyName, String toKeyName)
specifier|public
name|void
name|renameKey
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|fromKeyName
parameter_list|,
name|String
name|toKeyName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|HddsClientUtils
operator|.
name|checkNotNull
argument_list|(
name|fromKeyName
argument_list|,
name|toKeyName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
operator|+
name|PATH_SEPARATOR
operator|+
name|fromKeyName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_RENAME_TO_KEY_PARAM_NAME
argument_list|,
name|toKeyName
argument_list|)
expr_stmt|;
name|HttpPost
name|httpPost
init|=
operator|new
name|HttpPost
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpPost
argument_list|)
expr_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|executeHttpRequest
argument_list|(
name|httpPost
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|listKeys (String volumeName, String bucketName, String keyPrefix, String prevKey, int maxListResult)
specifier|public
name|List
argument_list|<
name|OzoneKey
argument_list|>
name|listKeys
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyPrefix
parameter_list|,
name|String
name|prevKey
parameter_list|,
name|int
name|maxListResult
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_INFO_QUERY_KEY
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addParameter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_MAXKEYS
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|maxListResult
argument_list|)
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREFIX
argument_list|,
name|keyPrefix
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|addQueryParamter
argument_list|(
name|Header
operator|.
name|OZONE_LIST_QUERY_PREVKEY
argument_list|,
name|prevKey
argument_list|,
name|builder
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|ListKeys
name|keyList
init|=
name|ListKeys
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|keyList
operator|.
name|getKeyList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|keyInfo
lambda|->
block|{
name|long
name|creationTime
init|=
literal|0
decl_stmt|,
name|modificationTime
init|=
literal|0
decl_stmt|;
try|try
block|{
name|creationTime
operator|=
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|keyInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
expr_stmt|;
name|modificationTime
operator|=
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|keyInfo
operator|.
name|getModifiedOn
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Parse exception in getting creation time for volume"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|OzoneKey
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyInfo
operator|.
name|getKeyName
argument_list|()
argument_list|,
name|keyInfo
operator|.
name|getSize
argument_list|()
argument_list|,
name|creationTime
argument_list|,
name|modificationTime
argument_list|)
return|;
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|getKeyDetails ( String volumeName, String bucketName, String keyName)
specifier|public
name|OzoneKeyDetails
name|getKeyDetails
parameter_list|(
name|String
name|volumeName
parameter_list|,
name|String
name|bucketName
parameter_list|,
name|String
name|keyName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|HddsClientUtils
operator|.
name|verifyResourceName
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|keyName
argument_list|)
expr_stmt|;
name|URIBuilder
name|builder
init|=
operator|new
name|URIBuilder
argument_list|(
name|ozoneRestUri
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setPath
argument_list|(
name|PATH_SEPARATOR
operator|+
name|volumeName
operator|+
name|PATH_SEPARATOR
operator|+
name|bucketName
operator|+
name|PATH_SEPARATOR
operator|+
name|keyName
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setParameter
argument_list|(
name|Header
operator|.
name|OZONE_INFO_QUERY_TAG
argument_list|,
name|Header
operator|.
name|OZONE_INFO_QUERY_KEY_DETAIL
argument_list|)
expr_stmt|;
name|HttpGet
name|httpGet
init|=
operator|new
name|HttpGet
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|addOzoneHeaders
argument_list|(
name|httpGet
argument_list|)
expr_stmt|;
name|HttpEntity
name|response
init|=
name|executeHttpRequest
argument_list|(
name|httpGet
argument_list|)
decl_stmt|;
name|KeyInfoDetails
name|keyInfo
init|=
name|KeyInfoDetails
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|response
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OzoneKeyLocation
argument_list|>
name|ozoneKeyLocations
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|keyInfo
operator|.
name|getKeyLocations
argument_list|()
operator|.
name|forEach
argument_list|(
parameter_list|(
name|a
parameter_list|)
lambda|->
name|ozoneKeyLocations
operator|.
name|add
argument_list|(
operator|new
name|OzoneKeyLocation
argument_list|(
name|a
operator|.
name|getContainerID
argument_list|()
argument_list|,
name|a
operator|.
name|getLocalID
argument_list|()
argument_list|,
name|a
operator|.
name|getLength
argument_list|()
argument_list|,
name|a
operator|.
name|getOffset
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|OzoneKeyDetails
name|key
init|=
operator|new
name|OzoneKeyDetails
argument_list|(
name|volumeName
argument_list|,
name|bucketName
argument_list|,
name|keyInfo
operator|.
name|getKeyName
argument_list|()
argument_list|,
name|keyInfo
operator|.
name|getSize
argument_list|()
argument_list|,
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|keyInfo
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
argument_list|,
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|keyInfo
operator|.
name|getModifiedOn
argument_list|()
argument_list|)
argument_list|,
name|ozoneKeyLocations
argument_list|)
decl_stmt|;
name|EntityUtils
operator|.
name|consume
argument_list|(
name|response
argument_list|)
expr_stmt|;
return|return
name|key
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|createS3Bucket (String userName, String s3BucketName)
specifier|public
name|void
name|createS3Bucket
parameter_list|(
name|String
name|userName
parameter_list|,
name|String
name|s3BucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Ozone REST protocol does not "
operator|+
literal|"support this operation."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|deleteS3Bucket (String s3BucketName)
specifier|public
name|void
name|deleteS3Bucket
parameter_list|(
name|String
name|s3BucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Ozone REST protocol does not "
operator|+
literal|"support this operation."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getOzoneBucketMapping (String s3BucketName)
specifier|public
name|String
name|getOzoneBucketMapping
parameter_list|(
name|String
name|s3BucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Ozone REST protocol does not "
operator|+
literal|"support this operation."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getOzoneVolumeName (String s3BucketName)
specifier|public
name|String
name|getOzoneVolumeName
parameter_list|(
name|String
name|s3BucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Ozone REST protocol does not "
operator|+
literal|"support this operation."
argument_list|)
throw|;
block|}
annotation|@
name|Override
DECL|method|getOzoneBucketName (String s3BucketName)
specifier|public
name|String
name|getOzoneBucketName
parameter_list|(
name|String
name|s3BucketName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Ozone REST protocol does not "
operator|+
literal|"support this operation."
argument_list|)
throw|;
block|}
comment|/**    * Adds Ozone headers to http request.    *    * @param httpRequest Http Request    */
DECL|method|addOzoneHeaders (HttpUriRequest httpRequest)
specifier|private
name|void
name|addOzoneHeaders
parameter_list|(
name|HttpUriRequest
name|httpRequest
parameter_list|)
block|{
name|httpRequest
operator|.
name|addHeader
argument_list|(
name|HttpHeaders
operator|.
name|AUTHORIZATION
argument_list|,
name|Header
operator|.
name|OZONE_SIMPLE_AUTHENTICATION_SCHEME
operator|+
literal|" "
operator|+
name|ugi
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|httpRequest
operator|.
name|addHeader
argument_list|(
name|HttpHeaders
operator|.
name|DATE
argument_list|,
name|HddsClientUtils
operator|.
name|formatDateTime
argument_list|(
name|Time
operator|.
name|monotonicNow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|httpRequest
operator|.
name|addHeader
argument_list|(
name|Header
operator|.
name|OZONE_VERSION_HEADER
argument_list|,
name|Header
operator|.
name|OZONE_V1_VERSION_HEADER
argument_list|)
expr_stmt|;
block|}
comment|/**    * Sends the http request to server and returns the response HttpEntity.    * It's responsibility of the caller to consume and close response HttpEntity    * by calling {@code EntityUtils.consume}    *    * @param httpUriRequest http request    * @throws IOException    */
DECL|method|executeHttpRequest (HttpUriRequest httpUriRequest)
specifier|private
name|HttpEntity
name|executeHttpRequest
parameter_list|(
name|HttpUriRequest
name|httpUriRequest
parameter_list|)
throws|throws
name|IOException
block|{
name|HttpResponse
name|response
init|=
name|httpClient
operator|.
name|execute
argument_list|(
name|httpUriRequest
argument_list|)
decl_stmt|;
name|int
name|errorCode
init|=
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
decl_stmt|;
name|HttpEntity
name|entity
init|=
name|response
operator|.
name|getEntity
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|errorCode
operator|==
name|HTTP_OK
operator|)
operator|||
operator|(
name|errorCode
operator|==
name|HTTP_CREATED
operator|)
condition|)
block|{
return|return
name|entity
return|;
block|}
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|OzoneException
operator|.
name|parse
argument_list|(
name|EntityUtils
operator|.
name|toString
argument_list|(
name|entity
argument_list|)
argument_list|)
argument_list|)
throw|;
block|}
else|else
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unexpected null in http payload,"
operator|+
literal|" while processing request"
argument_list|)
throw|;
block|}
block|}
comment|/**    * Converts OzoneConts.Versioning to boolean.    *    * @param version    * @return corresponding boolean value    */
DECL|method|getBucketVersioningFlag ( OzoneConsts.Versioning version)
specifier|private
name|Boolean
name|getBucketVersioningFlag
parameter_list|(
name|OzoneConsts
operator|.
name|Versioning
name|version
parameter_list|)
block|{
if|if
condition|(
name|version
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|version
condition|)
block|{
case|case
name|ENABLED
case|:
return|return
literal|true
return|;
case|case
name|NOT_DEFINED
case|:
case|case
name|DISABLED
case|:
default|default:
return|return
literal|false
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
comment|/**    * Converts Bucket versioning flag into OzoneConts.Versioning.    *    * @param flag versioning flag    * @return corresponding OzoneConts.Versionin    */
DECL|method|getBucketVersioning (Boolean flag)
specifier|private
name|OzoneConsts
operator|.
name|Versioning
name|getBucketVersioning
parameter_list|(
name|Boolean
name|flag
parameter_list|)
block|{
if|if
condition|(
name|flag
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|flag
condition|)
block|{
return|return
name|OzoneConsts
operator|.
name|Versioning
operator|.
name|ENABLED
return|;
block|}
else|else
block|{
return|return
name|OzoneConsts
operator|.
name|Versioning
operator|.
name|DISABLED
return|;
block|}
block|}
return|return
name|OzoneConsts
operator|.
name|Versioning
operator|.
name|NOT_DEFINED
return|;
block|}
annotation|@
name|Override
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|httpClient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|addQueryParamter (String param, String value, URIBuilder builder)
specifier|private
name|void
name|addQueryParamter
parameter_list|(
name|String
name|param
parameter_list|,
name|String
name|value
parameter_list|,
name|URIBuilder
name|builder
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|builder
operator|.
name|addParameter
argument_list|(
name|param
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

