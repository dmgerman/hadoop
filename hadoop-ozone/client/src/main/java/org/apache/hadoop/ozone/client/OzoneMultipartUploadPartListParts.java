begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.client
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Class that represents Multipart upload List parts response.  */
end_comment

begin_class
DECL|class|OzoneMultipartUploadPartListParts
specifier|public
class|class
name|OzoneMultipartUploadPartListParts
block|{
DECL|field|replicationType
specifier|private
name|ReplicationType
name|replicationType
decl_stmt|;
comment|//When a list is truncated, this element specifies the last part in the list,
comment|// as well as the value to use for the part-number-marker request parameter
comment|// in a subsequent request.
DECL|field|nextPartNumberMarker
specifier|private
name|int
name|nextPartNumberMarker
decl_stmt|;
comment|// Indicates whether the returned list of parts is truncated. A true value
comment|// indicates that the list was truncated.
comment|// A list can be truncated if the number of parts exceeds the limit
comment|// returned in the MaxParts element.
DECL|field|truncated
specifier|private
name|boolean
name|truncated
decl_stmt|;
DECL|field|partInfoList
specifier|private
name|List
argument_list|<
name|PartInfo
argument_list|>
name|partInfoList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|OzoneMultipartUploadPartListParts (ReplicationType type, int nextMarker, boolean truncate)
specifier|public
name|OzoneMultipartUploadPartListParts
parameter_list|(
name|ReplicationType
name|type
parameter_list|,
name|int
name|nextMarker
parameter_list|,
name|boolean
name|truncate
parameter_list|)
block|{
name|this
operator|.
name|replicationType
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|nextPartNumberMarker
operator|=
name|nextMarker
expr_stmt|;
name|this
operator|.
name|truncated
operator|=
name|truncate
expr_stmt|;
block|}
DECL|method|addAllParts (List<PartInfo> partInfos)
specifier|public
name|void
name|addAllParts
parameter_list|(
name|List
argument_list|<
name|PartInfo
argument_list|>
name|partInfos
parameter_list|)
block|{
name|partInfoList
operator|.
name|addAll
argument_list|(
name|partInfos
argument_list|)
expr_stmt|;
block|}
DECL|method|addPart (PartInfo partInfo)
specifier|public
name|void
name|addPart
parameter_list|(
name|PartInfo
name|partInfo
parameter_list|)
block|{
name|this
operator|.
name|partInfoList
operator|.
name|add
argument_list|(
name|partInfo
argument_list|)
expr_stmt|;
block|}
DECL|method|getReplicationType ()
specifier|public
name|ReplicationType
name|getReplicationType
parameter_list|()
block|{
return|return
name|replicationType
return|;
block|}
DECL|method|getNextPartNumberMarker ()
specifier|public
name|int
name|getNextPartNumberMarker
parameter_list|()
block|{
return|return
name|nextPartNumberMarker
return|;
block|}
DECL|method|isTruncated ()
specifier|public
name|boolean
name|isTruncated
parameter_list|()
block|{
return|return
name|truncated
return|;
block|}
DECL|method|getPartInfoList ()
specifier|public
name|List
argument_list|<
name|PartInfo
argument_list|>
name|getPartInfoList
parameter_list|()
block|{
return|return
name|partInfoList
return|;
block|}
comment|/**    * Class that represents each Part information of a multipart upload part.    */
DECL|class|PartInfo
specifier|public
specifier|static
class|class
name|PartInfo
block|{
DECL|field|partNumber
specifier|private
name|int
name|partNumber
decl_stmt|;
DECL|field|partName
specifier|private
name|String
name|partName
decl_stmt|;
DECL|field|modificationTime
specifier|private
name|long
name|modificationTime
decl_stmt|;
DECL|field|size
specifier|private
name|long
name|size
decl_stmt|;
DECL|method|PartInfo (int number, String name, long time, long size)
specifier|public
name|PartInfo
parameter_list|(
name|int
name|number
parameter_list|,
name|String
name|name
parameter_list|,
name|long
name|time
parameter_list|,
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|partNumber
operator|=
name|number
expr_stmt|;
name|this
operator|.
name|partName
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|modificationTime
operator|=
name|time
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
DECL|method|getPartNumber ()
specifier|public
name|int
name|getPartNumber
parameter_list|()
block|{
return|return
name|partNumber
return|;
block|}
DECL|method|getPartName ()
specifier|public
name|String
name|getPartName
parameter_list|()
block|{
return|return
name|partName
return|;
block|}
DECL|method|getModificationTime ()
specifier|public
name|long
name|getModificationTime
parameter_list|()
block|{
return|return
name|modificationTime
return|;
block|}
DECL|method|getSize ()
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
block|}
block|}
end_class

end_unit

