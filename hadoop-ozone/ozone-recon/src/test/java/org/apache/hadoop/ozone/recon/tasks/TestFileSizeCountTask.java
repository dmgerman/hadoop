begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.recon.tasks
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OmMetadataManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
operator|.
name|TypedTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|core
operator|.
name|classloader
operator|.
name|annotations
operator|.
name|PowerMockIgnore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|core
operator|.
name|classloader
operator|.
name|annotations
operator|.
name|PrepareForTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|powermock
operator|.
name|modules
operator|.
name|junit4
operator|.
name|PowerMockRunner
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
operator|.
name|OMDBUpdateEvent
operator|.
name|OMDBUpdateAction
operator|.
name|PUT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|BDDMockito
operator|.
name|given
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|powermock
operator|.
name|api
operator|.
name|mockito
operator|.
name|PowerMockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|powermock
operator|.
name|api
operator|.
name|mockito
operator|.
name|PowerMockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Unit test for File Size Count Task.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|PowerMockRunner
operator|.
name|class
argument_list|)
annotation|@
name|PowerMockIgnore
argument_list|(
block|{
literal|"javax.management.*"
block|,
literal|"javax.net.ssl.*"
block|}
argument_list|)
annotation|@
name|PrepareForTest
argument_list|(
name|OmKeyInfo
operator|.
name|class
argument_list|)
DECL|class|TestFileSizeCountTask
specifier|public
class|class
name|TestFileSizeCountTask
block|{
annotation|@
name|Test
DECL|method|testCalculateBinIndex ()
specifier|public
name|void
name|testCalculateBinIndex
parameter_list|()
block|{
name|FileSizeCountTask
name|fileSizeCountTask
init|=
name|mock
argument_list|(
name|FileSizeCountTask
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|getMaxFileSizeUpperBound
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1125899906842624L
argument_list|)
expr_stmt|;
comment|// 1 PB
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|getOneKB
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1024L
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|getMaxBinSize
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|nextClosestPowerIndexOfTwo
argument_list|(
name|anyLong
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|long
name|fileSize
init|=
literal|1024L
decl_stmt|;
comment|// 1 KB
name|int
name|binIndex
init|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|1023L
expr_stmt|;
comment|// 1KB - 1B
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|562949953421312L
expr_stmt|;
comment|// 512 TB
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|562949953421313L
expr_stmt|;
comment|// (512 TB + 1B)
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|562949953421311L
expr_stmt|;
comment|// (512 TB - 1B)
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|39
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|1125899906842624L
expr_stmt|;
comment|// 1 PB - last (extra) bin
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|41
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|100000L
expr_stmt|;
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|1125899906842623L
expr_stmt|;
comment|// (1 PB - 1B)
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
literal|1125899906842624L
operator|*
literal|4
expr_stmt|;
comment|// 4 PB - last extra bin
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|41
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
name|fileSize
operator|=
name|Long
operator|.
name|MAX_VALUE
expr_stmt|;
comment|// extra bin
name|binIndex
operator|=
name|fileSizeCountTask
operator|.
name|calculateBinIndex
argument_list|(
name|fileSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|41
argument_list|,
name|binIndex
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFileCountBySizeReprocess ()
specifier|public
name|void
name|testFileCountBySizeReprocess
parameter_list|()
throws|throws
name|IOException
block|{
name|OmKeyInfo
name|omKeyInfo1
init|=
name|mock
argument_list|(
name|OmKeyInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|given
argument_list|(
name|omKeyInfo1
operator|.
name|getKeyName
argument_list|()
argument_list|)
operator|.
name|willReturn
argument_list|(
literal|"key1"
argument_list|)
expr_stmt|;
name|given
argument_list|(
name|omKeyInfo1
operator|.
name|getDataSize
argument_list|()
argument_list|)
operator|.
name|willReturn
argument_list|(
literal|1000L
argument_list|)
expr_stmt|;
name|OMMetadataManager
name|omMetadataManager
init|=
name|mock
argument_list|(
name|OmMetadataManagerImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|TypedTable
argument_list|<
name|String
argument_list|,
name|OmKeyInfo
argument_list|>
name|keyTable
init|=
name|mock
argument_list|(
name|TypedTable
operator|.
name|class
argument_list|)
decl_stmt|;
name|TypedTable
operator|.
name|TypedTableIterator
name|mockKeyIter
init|=
name|mock
argument_list|(
name|TypedTable
operator|.
name|TypedTableIterator
operator|.
name|class
argument_list|)
decl_stmt|;
name|TypedTable
operator|.
name|TypedKeyValue
name|mockKeyValue
init|=
name|mock
argument_list|(
name|TypedTable
operator|.
name|TypedKeyValue
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|keyTable
operator|.
name|iterator
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockKeyIter
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|omMetadataManager
operator|.
name|getKeyTable
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|keyTable
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockKeyIter
operator|.
name|hasNext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockKeyIter
operator|.
name|next
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockKeyValue
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockKeyValue
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|omKeyInfo1
argument_list|)
expr_stmt|;
name|FileSizeCountTask
name|fileSizeCountTask
init|=
name|mock
argument_list|(
name|FileSizeCountTask
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|getMaxFileSizeUpperBound
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|4096L
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|getOneKB
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1024L
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|fileSizeCountTask
operator|.
name|reprocess
argument_list|(
name|omMetadataManager
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
comment|//call reprocess()
name|fileSizeCountTask
operator|.
name|reprocess
argument_list|(
name|omMetadataManager
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|fileSizeCountTask
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|updateUpperBoundCount
argument_list|(
name|omKeyInfo1
argument_list|,
name|PUT
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|fileSizeCountTask
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|populateFileCountBySizeDB
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

