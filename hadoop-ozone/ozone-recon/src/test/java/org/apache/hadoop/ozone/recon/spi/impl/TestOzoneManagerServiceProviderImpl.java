begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.recon.spi.impl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|spi
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|ReconServerConfigKeys
operator|.
name|OZONE_RECON_DB_DIR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|ReconServerConfigKeys
operator|.
name|OZONE_RECON_OM_SNAPSHOT_DB_DIR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doCallRealMethod
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doNothing
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OmUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|protocol
operator|.
name|OzoneManagerProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|AbstractOMMetadataManagerTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|ReconUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|recovery
operator|.
name|ReconOMMetadataManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
operator|.
name|OMDBUpdatesHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
operator|.
name|OMUpdateEventBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
operator|.
name|ReconTaskController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
operator|.
name|DBCheckpoint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
operator|.
name|DBUpdatesWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
operator|.
name|RDBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|schema
operator|.
name|tables
operator|.
name|daos
operator|.
name|ReconTaskStatusDao
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|schema
operator|.
name|tables
operator|.
name|pojos
operator|.
name|ReconTaskStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|RocksDB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|TransactionLogIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|WriteBatch
import|;
end_import

begin_comment
comment|/**  * Class to test Ozone Manager Service Provider Implementation.  */
end_comment

begin_class
DECL|class|TestOzoneManagerServiceProviderImpl
specifier|public
class|class
name|TestOzoneManagerServiceProviderImpl
extends|extends
name|AbstractOMMetadataManagerTest
block|{
DECL|field|configuration
specifier|private
name|OzoneConfiguration
name|configuration
decl_stmt|;
DECL|field|ozoneManagerProtocol
specifier|private
name|OzoneManagerProtocol
name|ozoneManagerProtocol
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|configuration
operator|=
operator|new
name|OzoneConfiguration
argument_list|()
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|OZONE_RECON_OM_SNAPSHOT_DB_DIR
argument_list|,
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
name|OZONE_RECON_DB_DIR
argument_list|,
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|set
argument_list|(
literal|"ozone.om.address"
argument_list|,
literal|"localhost:9862"
argument_list|)
expr_stmt|;
name|ozoneManagerProtocol
operator|=
name|getMockOzoneManagerClient
argument_list|(
operator|new
name|DBUpdatesWrapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateReconOmDBWithNewSnapshot ()
specifier|public
name|void
name|testUpdateReconOmDBWithNewSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|OMMetadataManager
name|omMetadataManager
init|=
name|initializeNewOmMetadataManager
argument_list|()
decl_stmt|;
name|ReconOMMetadataManager
name|reconOMMetadataManager
init|=
name|getTestMetadataManager
argument_list|(
name|omMetadataManager
argument_list|)
decl_stmt|;
name|writeDataToOm
argument_list|(
name|omMetadataManager
argument_list|,
literal|"key_one"
argument_list|)
expr_stmt|;
name|writeDataToOm
argument_list|(
name|omMetadataManager
argument_list|,
literal|"key_two"
argument_list|)
expr_stmt|;
name|DBCheckpoint
name|checkpoint
init|=
name|omMetadataManager
operator|.
name|getStore
argument_list|()
operator|.
name|getCheckpoint
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|File
name|tarFile
init|=
name|OmUtils
operator|.
name|createTarFile
argument_list|(
name|checkpoint
operator|.
name|getCheckpointLocation
argument_list|()
argument_list|)
decl_stmt|;
name|InputStream
name|inputStream
init|=
operator|new
name|FileInputStream
argument_list|(
name|tarFile
argument_list|)
decl_stmt|;
name|ReconUtils
name|reconUtilsMock
init|=
name|getMockReconUtils
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|reconUtilsMock
operator|.
name|makeHttpCall
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|inputStream
argument_list|)
expr_stmt|;
name|ReconTaskController
name|reconTaskController
init|=
name|getMockTaskController
argument_list|()
decl_stmt|;
name|OzoneManagerServiceProviderImpl
name|ozoneManagerServiceProvider
init|=
operator|new
name|OzoneManagerServiceProviderImpl
argument_list|(
name|configuration
argument_list|,
name|reconOMMetadataManager
argument_list|,
name|reconTaskController
argument_list|,
name|reconUtilsMock
argument_list|,
name|ozoneManagerProtocol
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|reconOMMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|get
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|reconOMMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|get
argument_list|(
literal|"/sampleVol/bucketOne/key_two"
argument_list|)
argument_list|)
expr_stmt|;
name|ozoneManagerServiceProvider
operator|.
name|updateReconOmDBWithNewSnapshot
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|reconOMMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|get
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|reconOMMetadataManager
operator|.
name|getKeyTable
argument_list|()
operator|.
name|get
argument_list|(
literal|"/sampleVol/bucketOne/key_two"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetOzoneManagerDBSnapshot ()
specifier|public
name|void
name|testGetOzoneManagerDBSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|reconOmSnapshotDbDir
init|=
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
decl_stmt|;
name|File
name|checkpointDir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|reconOmSnapshotDbDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"testGetOzoneManagerDBSnapshot"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|checkpointDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|File
name|file1
init|=
name|Paths
operator|.
name|get
argument_list|(
name|checkpointDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"file1"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|String
name|str
init|=
literal|"File1 Contents"
decl_stmt|;
name|BufferedWriter
name|writer
init|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|file1
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|File
name|file2
init|=
name|Paths
operator|.
name|get
argument_list|(
name|checkpointDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"file2"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|str
operator|=
literal|"File2 Contents"
expr_stmt|;
name|writer
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|file2
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|//Create test tar file.
name|File
name|tarFile
init|=
name|OmUtils
operator|.
name|createTarFile
argument_list|(
name|checkpointDir
operator|.
name|toPath
argument_list|()
argument_list|)
decl_stmt|;
name|InputStream
name|fileInputStream
init|=
operator|new
name|FileInputStream
argument_list|(
name|tarFile
argument_list|)
decl_stmt|;
name|ReconUtils
name|reconUtilsMock
init|=
name|getMockReconUtils
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|reconUtilsMock
operator|.
name|makeHttpCall
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fileInputStream
argument_list|)
expr_stmt|;
name|ReconOMMetadataManager
name|reconOMMetadataManager
init|=
name|mock
argument_list|(
name|ReconOMMetadataManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|ReconTaskController
name|reconTaskController
init|=
name|getMockTaskController
argument_list|()
decl_stmt|;
name|OzoneManagerServiceProviderImpl
name|ozoneManagerServiceProvider
init|=
operator|new
name|OzoneManagerServiceProviderImpl
argument_list|(
name|configuration
argument_list|,
name|reconOMMetadataManager
argument_list|,
name|reconTaskController
argument_list|,
name|reconUtilsMock
argument_list|,
name|ozoneManagerProtocol
argument_list|)
decl_stmt|;
name|DBCheckpoint
name|checkpoint
init|=
name|ozoneManagerServiceProvider
operator|.
name|getOzoneManagerDBSnapshot
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|checkpoint
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkpoint
operator|.
name|getCheckpointLocation
argument_list|()
operator|.
name|toFile
argument_list|()
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkpoint
operator|.
name|getCheckpointLocation
argument_list|()
operator|.
name|toFile
argument_list|()
operator|.
name|listFiles
argument_list|()
operator|.
name|length
operator|==
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetAndApplyDeltaUpdatesFromOM ()
specifier|public
name|void
name|testGetAndApplyDeltaUpdatesFromOM
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Writing 2 Keys into a source OM DB and collecting it in a
comment|// DBUpdatesWrapper.
name|OMMetadataManager
name|sourceOMMetadataMgr
init|=
name|initializeNewOmMetadataManager
argument_list|()
decl_stmt|;
name|writeDataToOm
argument_list|(
name|sourceOMMetadataMgr
argument_list|,
literal|"key_one"
argument_list|)
expr_stmt|;
name|writeDataToOm
argument_list|(
name|sourceOMMetadataMgr
argument_list|,
literal|"key_two"
argument_list|)
expr_stmt|;
name|RocksDB
name|rocksDB
init|=
operator|(
operator|(
name|RDBStore
operator|)
name|sourceOMMetadataMgr
operator|.
name|getStore
argument_list|()
operator|)
operator|.
name|getDb
argument_list|()
decl_stmt|;
name|TransactionLogIterator
name|transactionLogIterator
init|=
name|rocksDB
operator|.
name|getUpdatesSince
argument_list|(
literal|0L
argument_list|)
decl_stmt|;
name|DBUpdatesWrapper
name|dbUpdatesWrapper
init|=
operator|new
name|DBUpdatesWrapper
argument_list|()
decl_stmt|;
while|while
condition|(
name|transactionLogIterator
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|TransactionLogIterator
operator|.
name|BatchResult
name|result
init|=
name|transactionLogIterator
operator|.
name|getBatch
argument_list|()
decl_stmt|;
name|result
operator|.
name|writeBatch
argument_list|()
operator|.
name|markWalTerminationPoint
argument_list|()
expr_stmt|;
name|WriteBatch
name|writeBatch
init|=
name|result
operator|.
name|writeBatch
argument_list|()
decl_stmt|;
name|dbUpdatesWrapper
operator|.
name|addWriteBatch
argument_list|(
name|writeBatch
operator|.
name|data
argument_list|()
argument_list|,
name|result
operator|.
name|sequenceNumber
argument_list|()
argument_list|)
expr_stmt|;
name|transactionLogIterator
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
comment|// OM Service Provider's Metadata Manager.
name|OMMetadataManager
name|omMetadataManager
init|=
name|initializeNewOmMetadataManager
argument_list|()
decl_stmt|;
name|OzoneManagerServiceProviderImpl
name|ozoneManagerServiceProvider
init|=
operator|new
name|OzoneManagerServiceProviderImpl
argument_list|(
name|configuration
argument_list|,
name|getTestMetadataManager
argument_list|(
name|omMetadataManager
argument_list|)
argument_list|,
name|getMockTaskController
argument_list|()
argument_list|,
operator|new
name|ReconUtils
argument_list|()
argument_list|,
name|getMockOzoneManagerClient
argument_list|(
name|dbUpdatesWrapper
argument_list|)
argument_list|)
decl_stmt|;
name|OMDBUpdatesHandler
name|updatesHandler
init|=
operator|new
name|OMDBUpdatesHandler
argument_list|(
name|omMetadataManager
argument_list|)
decl_stmt|;
name|ozoneManagerServiceProvider
operator|.
name|getAndApplyDeltaUpdatesFromOM
argument_list|(
literal|0L
argument_list|,
name|updatesHandler
argument_list|)
expr_stmt|;
comment|// In this method, we have to assert the "GET" part and the "APPLY" path.
comment|// Assert GET path --> verify if the OMDBUpdatesHandler picked up the 4
comment|// events ( 1 Vol PUT + 1 Bucket PUT + 2 Key PUTs).
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|updatesHandler
operator|.
name|getEvents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Assert APPLY path --> Verify if the OM service provider's RocksDB got
comment|// the changes.
name|String
name|fullKey
init|=
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
literal|"sampleVol"
argument_list|,
literal|"bucketOne"
argument_list|,
literal|"key_one"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ozoneManagerServiceProvider
operator|.
name|getOMMetadataManagerInstance
argument_list|()
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|fullKey
argument_list|)
argument_list|)
expr_stmt|;
name|fullKey
operator|=
name|omMetadataManager
operator|.
name|getOzoneKey
argument_list|(
literal|"sampleVol"
argument_list|,
literal|"bucketOne"
argument_list|,
literal|"key_two"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ozoneManagerServiceProvider
operator|.
name|getOMMetadataManagerInstance
argument_list|()
operator|.
name|getKeyTable
argument_list|()
operator|.
name|isExist
argument_list|(
name|fullKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSyncDataFromOMFullSnapshot ()
specifier|public
name|void
name|testSyncDataFromOMFullSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Empty OM DB to start with.
name|ReconOMMetadataManager
name|omMetadataManager
init|=
name|getTestMetadataManager
argument_list|(
name|initializeEmptyOmMetadataManager
argument_list|()
argument_list|)
decl_stmt|;
name|ReconTaskStatusDao
name|reconTaskStatusDaoMock
init|=
name|mock
argument_list|(
name|ReconTaskStatusDao
operator|.
name|class
argument_list|)
decl_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|reconTaskStatusDaoMock
argument_list|)
operator|.
name|update
argument_list|(
name|any
argument_list|(
name|ReconTaskStatus
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ReconTaskController
name|reconTaskControllerMock
init|=
name|getMockTaskController
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|reconTaskControllerMock
operator|.
name|getReconTaskStatusDao
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|reconTaskStatusDaoMock
argument_list|)
expr_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|reconTaskControllerMock
argument_list|)
operator|.
name|reInitializeTasks
argument_list|(
name|omMetadataManager
argument_list|)
expr_stmt|;
name|OzoneManagerServiceProviderImpl
name|ozoneManagerServiceProvider
init|=
operator|new
name|OzoneManagerServiceProviderImpl
argument_list|(
name|configuration
argument_list|,
name|omMetadataManager
argument_list|,
name|reconTaskControllerMock
argument_list|,
operator|new
name|ReconUtils
argument_list|()
argument_list|,
name|ozoneManagerProtocol
argument_list|)
decl_stmt|;
comment|//Should trigger full snapshot request.
name|ozoneManagerServiceProvider
operator|.
name|syncDataFromOM
argument_list|()
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ReconTaskStatus
argument_list|>
name|captor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ReconTaskStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|reconTaskStatusDaoMock
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|update
argument_list|(
name|captor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|captor
operator|.
name|getValue
argument_list|()
operator|.
name|getTaskName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"OM_DB_FULL_SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|reconTaskControllerMock
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|reInitializeTasks
argument_list|(
name|omMetadataManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSyncDataFromOMDeltaUpdates ()
specifier|public
name|void
name|testSyncDataFromOMDeltaUpdates
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Non-Empty OM DB to start with.
name|ReconOMMetadataManager
name|omMetadataManager
init|=
name|getTestMetadataManager
argument_list|(
name|initializeNewOmMetadataManager
argument_list|()
argument_list|)
decl_stmt|;
name|ReconTaskStatusDao
name|reconTaskStatusDaoMock
init|=
name|mock
argument_list|(
name|ReconTaskStatusDao
operator|.
name|class
argument_list|)
decl_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|reconTaskStatusDaoMock
argument_list|)
operator|.
name|update
argument_list|(
name|any
argument_list|(
name|ReconTaskStatus
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|ReconTaskController
name|reconTaskControllerMock
init|=
name|getMockTaskController
argument_list|()
decl_stmt|;
name|when
argument_list|(
name|reconTaskControllerMock
operator|.
name|getReconTaskStatusDao
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|reconTaskStatusDaoMock
argument_list|)
expr_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|reconTaskControllerMock
argument_list|)
operator|.
name|consumeOMEvents
argument_list|(
name|any
argument_list|(
name|OMUpdateEventBatch
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|OMMetadataManager
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|OzoneManagerServiceProviderImpl
name|ozoneManagerServiceProvider
init|=
operator|new
name|OzoneManagerServiceProviderImpl
argument_list|(
name|configuration
argument_list|,
name|omMetadataManager
argument_list|,
name|reconTaskControllerMock
argument_list|,
operator|new
name|ReconUtils
argument_list|()
argument_list|,
name|ozoneManagerProtocol
argument_list|)
decl_stmt|;
comment|// Should trigger delta updates.
name|ozoneManagerServiceProvider
operator|.
name|syncDataFromOM
argument_list|()
expr_stmt|;
name|ArgumentCaptor
argument_list|<
name|ReconTaskStatus
argument_list|>
name|captor
init|=
name|ArgumentCaptor
operator|.
name|forClass
argument_list|(
name|ReconTaskStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|verify
argument_list|(
name|reconTaskStatusDaoMock
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|update
argument_list|(
name|captor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|captor
operator|.
name|getValue
argument_list|()
operator|.
name|getTaskName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"OM_DB_DELTA_UPDATES"
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|reconTaskControllerMock
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|consumeOMEvents
argument_list|(
name|any
argument_list|(
name|OMUpdateEventBatch
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|OMMetadataManager
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getMockTaskController ()
specifier|private
name|ReconTaskController
name|getMockTaskController
parameter_list|()
block|{
name|ReconTaskController
name|reconTaskControllerMock
init|=
name|mock
argument_list|(
name|ReconTaskController
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|reconTaskControllerMock
return|;
block|}
DECL|method|getMockReconUtils ()
specifier|private
name|ReconUtils
name|getMockReconUtils
parameter_list|()
throws|throws
name|IOException
block|{
name|ReconUtils
name|reconUtilsMock
init|=
name|mock
argument_list|(
name|ReconUtils
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|reconUtilsMock
operator|.
name|getReconDbDir
argument_list|(
name|any
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|reconUtilsMock
argument_list|)
operator|.
name|untarCheckpointFile
argument_list|(
name|any
argument_list|()
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|reconUtilsMock
return|;
block|}
DECL|method|getMockOzoneManagerClient ( DBUpdatesWrapper dbUpdatesWrapper)
specifier|private
name|OzoneManagerProtocol
name|getMockOzoneManagerClient
parameter_list|(
name|DBUpdatesWrapper
name|dbUpdatesWrapper
parameter_list|)
throws|throws
name|IOException
block|{
name|OzoneManagerProtocol
name|ozoneManagerProtocolMock
init|=
name|mock
argument_list|(
name|OzoneManagerProtocol
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|ozoneManagerProtocolMock
operator|.
name|getDBUpdates
argument_list|(
name|any
argument_list|(
name|OzoneManagerProtocolProtos
operator|.
name|DBUpdatesRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|dbUpdatesWrapper
argument_list|)
expr_stmt|;
return|return
name|ozoneManagerProtocolMock
return|;
block|}
block|}
end_class

end_unit

