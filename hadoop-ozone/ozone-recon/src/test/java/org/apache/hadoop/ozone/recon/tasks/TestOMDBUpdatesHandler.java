begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.recon.tasks
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|tasks
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|server
operator|.
name|ServerUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|OmMetadataManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmBucketInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmKeyInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
operator|.
name|OmVolumeArgs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|db
operator|.
name|RDBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|RocksDB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|TransactionLogIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|WriteBatch
import|;
end_import

begin_comment
comment|/**  * Class used to test OMDBUpdatesHandler.  */
end_comment

begin_class
DECL|class|TestOMDBUpdatesHandler
specifier|public
class|class
name|TestOMDBUpdatesHandler
block|{
annotation|@
name|Rule
DECL|field|folder
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
DECL|method|createNewTestPath ()
specifier|private
name|OzoneConfiguration
name|createNewTestPath
parameter_list|()
throws|throws
name|IOException
block|{
name|OzoneConfiguration
name|configuration
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|File
name|newFolder
init|=
name|folder
operator|.
name|newFolder
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|newFolder
operator|.
name|exists
argument_list|()
condition|)
block|{
name|assertTrue
argument_list|(
name|newFolder
operator|.
name|mkdirs
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ServerUtils
operator|.
name|setOzoneMetaDirPath
argument_list|(
name|configuration
argument_list|,
name|newFolder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|configuration
return|;
block|}
annotation|@
name|Test
DECL|method|testPut ()
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|Exception
block|{
name|OzoneConfiguration
name|configuration
init|=
name|createNewTestPath
argument_list|()
decl_stmt|;
name|OmMetadataManagerImpl
name|metaMgr
init|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|String
name|volumeKey
init|=
name|metaMgr
operator|.
name|getVolumeKey
argument_list|(
literal|"sampleVol"
argument_list|)
decl_stmt|;
name|OmVolumeArgs
name|args
init|=
name|OmVolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolume
argument_list|(
literal|"sampleVol"
argument_list|)
operator|.
name|setAdminName
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setOwnerName
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metaMgr
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|put
argument_list|(
name|volumeKey
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|OmKeyInfo
name|omKeyInfo
init|=
operator|new
name|OmKeyInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setBucketName
argument_list|(
literal|"bucketOne"
argument_list|)
operator|.
name|setVolumeName
argument_list|(
literal|"sampleVol"
argument_list|)
operator|.
name|setKeyName
argument_list|(
literal|"key_one"
argument_list|)
operator|.
name|setReplicationFactor
argument_list|(
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|)
operator|.
name|setReplicationType
argument_list|(
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|STAND_ALONE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metaMgr
operator|.
name|getKeyTable
argument_list|()
operator|.
name|put
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|,
name|omKeyInfo
argument_list|)
expr_stmt|;
name|RDBStore
name|rdbStore
init|=
operator|(
name|RDBStore
operator|)
name|metaMgr
operator|.
name|getStore
argument_list|()
decl_stmt|;
name|RocksDB
name|rocksDB
init|=
name|rdbStore
operator|.
name|getDb
argument_list|()
decl_stmt|;
name|TransactionLogIterator
name|transactionLogIterator
init|=
name|rocksDB
operator|.
name|getUpdatesSince
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|writeBatches
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
name|transactionLogIterator
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|TransactionLogIterator
operator|.
name|BatchResult
name|result
init|=
name|transactionLogIterator
operator|.
name|getBatch
argument_list|()
decl_stmt|;
name|result
operator|.
name|writeBatch
argument_list|()
operator|.
name|markWalTerminationPoint
argument_list|()
expr_stmt|;
name|WriteBatch
name|writeBatch
init|=
name|result
operator|.
name|writeBatch
argument_list|()
decl_stmt|;
name|writeBatches
operator|.
name|add
argument_list|(
name|writeBatch
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|transactionLogIterator
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
name|OzoneConfiguration
name|conf2
init|=
name|createNewTestPath
argument_list|()
decl_stmt|;
name|OmMetadataManagerImpl
name|reconOmmetaMgr
init|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|conf2
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OMDBUpdateEvent
argument_list|>
name|events
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|byte
index|[]
name|data
range|:
name|writeBatches
control|)
block|{
name|WriteBatch
name|writeBatch
init|=
operator|new
name|WriteBatch
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|OMDBUpdatesHandler
name|omdbUpdatesHandler
init|=
operator|new
name|OMDBUpdatesHandler
argument_list|(
name|reconOmmetaMgr
argument_list|)
decl_stmt|;
name|writeBatch
operator|.
name|iterate
argument_list|(
name|omdbUpdatesHandler
argument_list|)
expr_stmt|;
name|events
operator|.
name|addAll
argument_list|(
name|omdbUpdatesHandler
operator|.
name|getEvents
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|events
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|events
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|OMDBUpdateEvent
name|volEvent
init|=
name|events
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OMDBUpdateEvent
operator|.
name|OMDBUpdateAction
operator|.
name|PUT
argument_list|,
name|volEvent
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|volumeKey
argument_list|,
name|volEvent
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|args
operator|.
name|getVolume
argument_list|()
argument_list|,
operator|(
operator|(
name|OmVolumeArgs
operator|)
name|volEvent
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|OMDBUpdateEvent
name|keyEvent
init|=
name|events
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OMDBUpdateEvent
operator|.
name|OMDBUpdateAction
operator|.
name|PUT
argument_list|,
name|keyEvent
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|,
name|keyEvent
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|omKeyInfo
operator|.
name|getBucketName
argument_list|()
argument_list|,
operator|(
operator|(
name|OmKeyInfo
operator|)
name|keyEvent
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|getBucketName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDelete ()
specifier|public
name|void
name|testDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|OzoneConfiguration
name|configuration
init|=
name|createNewTestPath
argument_list|()
decl_stmt|;
name|OmMetadataManagerImpl
name|metaMgr
init|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|String
name|volumeKey
init|=
name|metaMgr
operator|.
name|getVolumeKey
argument_list|(
literal|"sampleVol"
argument_list|)
decl_stmt|;
name|OmVolumeArgs
name|args
init|=
name|OmVolumeArgs
operator|.
name|newBuilder
argument_list|()
operator|.
name|setVolume
argument_list|(
literal|"sampleVol"
argument_list|)
operator|.
name|setAdminName
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|setOwnerName
argument_list|(
literal|"bilbo"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metaMgr
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|put
argument_list|(
name|volumeKey
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|OmKeyInfo
name|omKeyInfo
init|=
operator|new
name|OmKeyInfo
operator|.
name|Builder
argument_list|()
operator|.
name|setBucketName
argument_list|(
literal|"bucketOne"
argument_list|)
operator|.
name|setVolumeName
argument_list|(
literal|"sampleVol"
argument_list|)
operator|.
name|setKeyName
argument_list|(
literal|"key_one"
argument_list|)
operator|.
name|setReplicationFactor
argument_list|(
name|HddsProtos
operator|.
name|ReplicationFactor
operator|.
name|ONE
argument_list|)
operator|.
name|setReplicationType
argument_list|(
name|HddsProtos
operator|.
name|ReplicationType
operator|.
name|STAND_ALONE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|metaMgr
operator|.
name|getKeyTable
argument_list|()
operator|.
name|put
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|,
name|omKeyInfo
argument_list|)
expr_stmt|;
name|metaMgr
operator|.
name|getKeyTable
argument_list|()
operator|.
name|delete
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|)
expr_stmt|;
name|metaMgr
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|delete
argument_list|(
name|volumeKey
argument_list|)
expr_stmt|;
name|RDBStore
name|rdbStore
init|=
operator|(
name|RDBStore
operator|)
name|metaMgr
operator|.
name|getStore
argument_list|()
decl_stmt|;
name|RocksDB
name|rocksDB
init|=
name|rdbStore
operator|.
name|getDb
argument_list|()
decl_stmt|;
name|TransactionLogIterator
name|transactionLogIterator
init|=
name|rocksDB
operator|.
name|getUpdatesSince
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|writeBatches
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
name|transactionLogIterator
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|TransactionLogIterator
operator|.
name|BatchResult
name|result
init|=
name|transactionLogIterator
operator|.
name|getBatch
argument_list|()
decl_stmt|;
name|result
operator|.
name|writeBatch
argument_list|()
operator|.
name|markWalTerminationPoint
argument_list|()
expr_stmt|;
name|WriteBatch
name|writeBatch
init|=
name|result
operator|.
name|writeBatch
argument_list|()
decl_stmt|;
name|writeBatches
operator|.
name|add
argument_list|(
name|writeBatch
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|transactionLogIterator
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
name|OzoneConfiguration
name|conf2
init|=
name|createNewTestPath
argument_list|()
decl_stmt|;
name|OmMetadataManagerImpl
name|reconOmmetaMgr
init|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|conf2
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OMDBUpdateEvent
argument_list|>
name|events
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|byte
index|[]
name|data
range|:
name|writeBatches
control|)
block|{
name|WriteBatch
name|writeBatch
init|=
operator|new
name|WriteBatch
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|OMDBUpdatesHandler
name|omdbUpdatesHandler
init|=
operator|new
name|OMDBUpdatesHandler
argument_list|(
name|reconOmmetaMgr
argument_list|)
decl_stmt|;
name|writeBatch
operator|.
name|iterate
argument_list|(
name|omdbUpdatesHandler
argument_list|)
expr_stmt|;
name|events
operator|.
name|addAll
argument_list|(
name|omdbUpdatesHandler
operator|.
name|getEvents
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|events
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|events
operator|.
name|size
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|OMDBUpdateEvent
name|keyEvent
init|=
name|events
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OMDBUpdateEvent
operator|.
name|OMDBUpdateAction
operator|.
name|DELETE
argument_list|,
name|keyEvent
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/sampleVol/bucketOne/key_one"
argument_list|,
name|keyEvent
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|OMDBUpdateEvent
name|volEvent
init|=
name|events
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OMDBUpdateEvent
operator|.
name|OMDBUpdateAction
operator|.
name|DELETE
argument_list|,
name|volEvent
operator|.
name|getAction
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|volumeKey
argument_list|,
name|volEvent
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetValueType ()
specifier|public
name|void
name|testGetValueType
parameter_list|()
throws|throws
name|IOException
block|{
name|OzoneConfiguration
name|configuration
init|=
name|createNewTestPath
argument_list|()
decl_stmt|;
name|OmMetadataManagerImpl
name|metaMgr
init|=
operator|new
name|OmMetadataManagerImpl
argument_list|(
name|configuration
argument_list|)
decl_stmt|;
name|OMDBUpdatesHandler
name|omdbUpdatesHandler
init|=
operator|new
name|OMDBUpdatesHandler
argument_list|(
name|metaMgr
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OmKeyInfo
operator|.
name|class
argument_list|,
name|omdbUpdatesHandler
operator|.
name|getValueType
argument_list|(
name|metaMgr
operator|.
name|getKeyTable
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OmVolumeArgs
operator|.
name|class
argument_list|,
name|omdbUpdatesHandler
operator|.
name|getValueType
argument_list|(
name|metaMgr
operator|.
name|getVolumeTable
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OmBucketInfo
operator|.
name|class
argument_list|,
name|omdbUpdatesHandler
operator|.
name|getValueType
argument_list|(
name|metaMgr
operator|.
name|getBucketTable
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

