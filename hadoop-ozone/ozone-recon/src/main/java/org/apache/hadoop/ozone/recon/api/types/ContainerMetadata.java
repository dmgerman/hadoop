begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.recon.api.types
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|api
operator|.
name|types
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_comment
comment|/**  * Metadata object that represents a Container.  */
end_comment

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
DECL|class|ContainerMetadata
specifier|public
class|class
name|ContainerMetadata
block|{
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"ContainerId"
argument_list|)
DECL|field|containerId
specifier|private
name|long
name|containerId
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"UserBytes"
argument_list|)
DECL|field|usedBytes
specifier|private
name|long
name|usedBytes
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"NumberOfKeys"
argument_list|)
DECL|field|numberOfKeys
specifier|private
name|long
name|numberOfKeys
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Owner"
argument_list|)
DECL|field|owner
specifier|private
name|String
name|owner
decl_stmt|;
DECL|method|getContainerId ()
specifier|public
name|long
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
DECL|method|setContainerId (long containerId)
specifier|public
name|void
name|setContainerId
parameter_list|(
name|long
name|containerId
parameter_list|)
block|{
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
block|}
DECL|method|getUsedBytes ()
specifier|public
name|long
name|getUsedBytes
parameter_list|()
block|{
return|return
name|usedBytes
return|;
block|}
DECL|method|setUsedBytes (long usedBytes)
specifier|public
name|void
name|setUsedBytes
parameter_list|(
name|long
name|usedBytes
parameter_list|)
block|{
name|this
operator|.
name|usedBytes
operator|=
name|usedBytes
expr_stmt|;
block|}
DECL|method|getNumberOfKeys ()
specifier|public
name|long
name|getNumberOfKeys
parameter_list|()
block|{
return|return
name|numberOfKeys
return|;
block|}
DECL|method|setNumberOfKeys (long numberOfKeys)
specifier|public
name|void
name|setNumberOfKeys
parameter_list|(
name|long
name|numberOfKeys
parameter_list|)
block|{
name|this
operator|.
name|numberOfKeys
operator|=
name|numberOfKeys
expr_stmt|;
block|}
DECL|method|getOwner ()
specifier|public
name|String
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
DECL|method|setOwner (String owner)
specifier|public
name|void
name|setOwner
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
block|}
block|}
end_class

end_unit

