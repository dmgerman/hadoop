begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.recon.api.types
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|recon
operator|.
name|api
operator|.
name|types
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|web
operator|.
name|utils
operator|.
name|JsonUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_comment
comment|/**  * Class that represents the API Response structure of Containers.  */
end_comment

begin_class
DECL|class|ContainersResponse
specifier|public
class|class
name|ContainersResponse
block|{
comment|/**    * Contains a map with total count of containers and list of containers.    */
annotation|@
name|JsonProperty
argument_list|(
literal|"data"
argument_list|)
DECL|field|containersResponseData
specifier|private
name|ContainersResponseData
name|containersResponseData
decl_stmt|;
DECL|method|ContainersResponse ()
specifier|public
name|ContainersResponse
parameter_list|()
block|{
name|this
argument_list|(
literal|0
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|ContainersResponse (long totalCount, Collection<ContainerMetadata> containers)
specifier|public
name|ContainersResponse
parameter_list|(
name|long
name|totalCount
parameter_list|,
name|Collection
argument_list|<
name|ContainerMetadata
argument_list|>
name|containers
parameter_list|)
block|{
name|this
operator|.
name|containersResponseData
operator|=
operator|new
name|ContainersResponseData
argument_list|(
name|totalCount
argument_list|,
name|containers
argument_list|)
expr_stmt|;
block|}
DECL|method|toJsonString ()
specifier|public
name|String
name|toJsonString
parameter_list|()
block|{
try|try
block|{
return|return
name|JsonUtils
operator|.
name|toJsonString
argument_list|(
name|this
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|method|getContainersResponseData ()
specifier|public
name|ContainersResponseData
name|getContainersResponseData
parameter_list|()
block|{
return|return
name|containersResponseData
return|;
block|}
DECL|method|setContainersResponseData (ContainersResponseData containersResponseData)
specifier|public
name|void
name|setContainersResponseData
parameter_list|(
name|ContainersResponseData
name|containersResponseData
parameter_list|)
block|{
name|this
operator|.
name|containersResponseData
operator|=
name|containersResponseData
expr_stmt|;
block|}
comment|/**    * Class that encapsulates the data presented in Containers API Response.    */
DECL|class|ContainersResponseData
specifier|public
specifier|static
class|class
name|ContainersResponseData
block|{
comment|/**      * Total count of the containers.      */
annotation|@
name|JsonProperty
argument_list|(
literal|"totalCount"
argument_list|)
DECL|field|totalCount
specifier|private
name|long
name|totalCount
decl_stmt|;
comment|/**      * An array of containers.      */
annotation|@
name|JsonProperty
argument_list|(
literal|"containers"
argument_list|)
DECL|field|containers
specifier|private
name|Collection
argument_list|<
name|ContainerMetadata
argument_list|>
name|containers
decl_stmt|;
DECL|method|ContainersResponseData (long totalCount, Collection<ContainerMetadata> containers)
name|ContainersResponseData
parameter_list|(
name|long
name|totalCount
parameter_list|,
name|Collection
argument_list|<
name|ContainerMetadata
argument_list|>
name|containers
parameter_list|)
block|{
name|this
operator|.
name|totalCount
operator|=
name|totalCount
expr_stmt|;
name|this
operator|.
name|containers
operator|=
name|containers
expr_stmt|;
block|}
DECL|method|getTotalCount ()
specifier|public
name|long
name|getTotalCount
parameter_list|()
block|{
return|return
name|totalCount
return|;
block|}
DECL|method|getContainers ()
specifier|public
name|Collection
argument_list|<
name|ContainerMetadata
argument_list|>
name|getContainers
parameter_list|()
block|{
return|return
name|containers
return|;
block|}
block|}
block|}
end_class

end_unit

