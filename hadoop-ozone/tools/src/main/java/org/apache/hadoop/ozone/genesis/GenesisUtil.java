begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.ozone.genesis
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|genesis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|RandomStringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|DatanodeDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|MetadataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|MetadataStoreBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_comment
comment|/**  * Utility class for benchmark test cases.  */
end_comment

begin_class
DECL|class|GenesisUtil
specifier|public
specifier|final
class|class
name|GenesisUtil
block|{
DECL|method|GenesisUtil ()
specifier|private
name|GenesisUtil
parameter_list|()
block|{
comment|// private constructor.
block|}
DECL|field|DEFAULT_TYPE
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_TYPE
init|=
literal|"default"
decl_stmt|;
DECL|field|CACHE_10MB_TYPE
specifier|public
specifier|static
specifier|final
name|String
name|CACHE_10MB_TYPE
init|=
literal|"Cache10MB"
decl_stmt|;
DECL|field|CACHE_1GB_TYPE
specifier|public
specifier|static
specifier|final
name|String
name|CACHE_1GB_TYPE
init|=
literal|"Cache1GB"
decl_stmt|;
DECL|field|CLOSED_TYPE
specifier|public
specifier|static
specifier|final
name|String
name|CLOSED_TYPE
init|=
literal|"ClosedContainer"
decl_stmt|;
DECL|field|DB_FILE_LEN
specifier|private
specifier|static
specifier|final
name|int
name|DB_FILE_LEN
init|=
literal|7
decl_stmt|;
DECL|field|TMP_DIR
specifier|private
specifier|static
specifier|final
name|String
name|TMP_DIR
init|=
literal|"java.io.tmpdir"
decl_stmt|;
DECL|method|getMetadataStore (String dbType)
specifier|public
specifier|static
name|MetadataStore
name|getMetadataStore
parameter_list|(
name|String
name|dbType
parameter_list|)
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|MetadataStoreBuilder
name|builder
init|=
name|MetadataStoreBuilder
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCreateIfMissing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setDbFile
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TMP_DIR
argument_list|)
argument_list|)
operator|.
name|resolve
argument_list|(
name|RandomStringUtils
operator|.
name|randomNumeric
argument_list|(
name|DB_FILE_LEN
argument_list|)
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|dbType
condition|)
block|{
case|case
name|DEFAULT_TYPE
case|:
break|break;
case|case
name|CLOSED_TYPE
case|:
break|break;
case|case
name|CACHE_10MB_TYPE
case|:
name|builder
operator|.
name|setCacheSize
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|CACHE_1GB_TYPE
case|:
name|builder
operator|.
name|setCacheSize
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|GB
operator|.
name|toBytes
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unknown type: "
operator|+
name|dbType
argument_list|)
throw|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|createDatanodeDetails (String uuid)
specifier|public
specifier|static
name|DatanodeDetails
name|createDatanodeDetails
parameter_list|(
name|String
name|uuid
parameter_list|)
block|{
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|String
name|ipAddress
init|=
name|random
operator|.
name|nextInt
argument_list|(
literal|256
argument_list|)
operator|+
literal|"."
operator|+
name|random
operator|.
name|nextInt
argument_list|(
literal|256
argument_list|)
operator|+
literal|"."
operator|+
name|random
operator|.
name|nextInt
argument_list|(
literal|256
argument_list|)
operator|+
literal|"."
operator|+
name|random
operator|.
name|nextInt
argument_list|(
literal|256
argument_list|)
decl_stmt|;
name|DatanodeDetails
operator|.
name|Builder
name|builder
init|=
name|DatanodeDetails
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setUuid
argument_list|(
name|uuid
argument_list|)
operator|.
name|setHostName
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|setIpAddress
argument_list|(
name|ipAddress
argument_list|)
operator|.
name|setContainerPort
argument_list|(
literal|0
argument_list|)
operator|.
name|setRatisPort
argument_list|(
literal|0
argument_list|)
operator|.
name|setOzoneRestPort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

