begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.freon
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|freon
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ArrayBlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|digest
operator|.
name|DigestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|cli
operator|.
name|HddsVersionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|OzoneQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationFactor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|ObjectStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneBucket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneClientFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|OzoneVolume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|client
operator|.
name|io
operator|.
name|OzoneOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|VersionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Histogram
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Snapshot
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|UniformReservoir
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|JsonAutoDetect
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|annotation
operator|.
name|PropertyAccessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectWriter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|lang
operator|.
name|Math
operator|.
name|min
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|ArrayUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|RandomStringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|time
operator|.
name|DurationFormatUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|picocli
operator|.
name|CommandLine
operator|.
name|ParentCommand
import|;
end_import

begin_comment
comment|/**  * Data generator tool to generate as much keys as possible.  */
end_comment

begin_class
annotation|@
name|Command
argument_list|(
name|name
operator|=
literal|"randomkeys"
argument_list|,
name|aliases
operator|=
literal|"rk"
argument_list|,
name|description
operator|=
literal|"Generate volumes/buckets and put generated keys."
argument_list|,
name|versionProvider
operator|=
name|HddsVersionProvider
operator|.
name|class
argument_list|,
name|mixinStandardHelpOptions
operator|=
literal|true
argument_list|,
name|showDefaultValues
operator|=
literal|true
argument_list|)
DECL|class|RandomKeyGenerator
specifier|public
specifier|final
class|class
name|RandomKeyGenerator
implements|implements
name|Callable
argument_list|<
name|Void
argument_list|>
block|{
annotation|@
name|ParentCommand
DECL|field|freon
specifier|private
name|Freon
name|freon
decl_stmt|;
DECL|enum|FreonOps
enum|enum
name|FreonOps
block|{
DECL|enumConstant|VOLUME_CREATE
name|VOLUME_CREATE
block|,
DECL|enumConstant|BUCKET_CREATE
name|BUCKET_CREATE
block|,
DECL|enumConstant|KEY_CREATE
name|KEY_CREATE
block|,
DECL|enumConstant|KEY_WRITE
name|KEY_WRITE
block|}
DECL|field|RATIS
specifier|private
specifier|static
specifier|final
name|String
name|RATIS
init|=
literal|"ratis"
decl_stmt|;
DECL|field|DURATION_FORMAT
specifier|private
specifier|static
specifier|final
name|String
name|DURATION_FORMAT
init|=
literal|"HH:mm:ss,SSS"
decl_stmt|;
DECL|field|QUANTILES
specifier|private
specifier|static
specifier|final
name|int
name|QUANTILES
init|=
literal|10
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RandomKeyGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|completed
specifier|private
name|boolean
name|completed
init|=
literal|false
decl_stmt|;
DECL|field|exception
specifier|private
name|boolean
name|exception
init|=
literal|false
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--numOfThreads"
argument_list|,
name|description
operator|=
literal|"number of threads to be launched for the run"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|numOfThreads
specifier|private
name|int
name|numOfThreads
init|=
literal|10
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--numOfVolumes"
argument_list|,
name|description
operator|=
literal|"specifies number of Volumes to be created in offline mode"
argument_list|,
name|defaultValue
operator|=
literal|"10"
argument_list|)
DECL|field|numOfVolumes
specifier|private
name|int
name|numOfVolumes
init|=
literal|10
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--numOfBuckets"
argument_list|,
name|description
operator|=
literal|"specifies number of Buckets to be created per Volume"
argument_list|,
name|defaultValue
operator|=
literal|"1000"
argument_list|)
DECL|field|numOfBuckets
specifier|private
name|int
name|numOfBuckets
init|=
literal|1000
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--numOfKeys"
argument_list|,
name|description
operator|=
literal|"specifies number of Keys to be created per Bucket"
argument_list|,
name|defaultValue
operator|=
literal|"500000"
argument_list|)
DECL|field|numOfKeys
specifier|private
name|int
name|numOfKeys
init|=
literal|500000
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--keySize"
argument_list|,
name|description
operator|=
literal|"Specifies the size of Key in bytes to be created"
argument_list|,
name|defaultValue
operator|=
literal|"10240"
argument_list|)
DECL|field|keySize
specifier|private
name|int
name|keySize
init|=
literal|10240
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--json"
argument_list|,
name|description
operator|=
literal|"directory where json is created."
argument_list|)
DECL|field|jsonDir
specifier|private
name|String
name|jsonDir
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--replicationType"
argument_list|,
name|description
operator|=
literal|"Replication type (STAND_ALONE, RATIS)"
argument_list|,
name|defaultValue
operator|=
literal|"STAND_ALONE"
argument_list|)
DECL|field|type
specifier|private
name|ReplicationType
name|type
init|=
name|ReplicationType
operator|.
name|STAND_ALONE
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|names
operator|=
literal|"--factor"
argument_list|,
name|description
operator|=
literal|"Replication factor (ONE, THREE)"
argument_list|,
name|defaultValue
operator|=
literal|"ONE"
argument_list|)
DECL|field|factor
specifier|private
name|ReplicationFactor
name|factor
init|=
name|ReplicationFactor
operator|.
name|ONE
decl_stmt|;
DECL|field|threadPoolSize
specifier|private
name|int
name|threadPoolSize
decl_stmt|;
DECL|field|keyValue
specifier|private
name|byte
index|[]
name|keyValue
init|=
literal|null
decl_stmt|;
DECL|field|validateWrites
specifier|private
name|boolean
name|validateWrites
decl_stmt|;
DECL|field|ozoneClient
specifier|private
name|OzoneClient
name|ozoneClient
decl_stmt|;
DECL|field|objectStore
specifier|private
name|ObjectStore
name|objectStore
decl_stmt|;
DECL|field|processor
specifier|private
name|ExecutorService
name|processor
decl_stmt|;
DECL|field|startTime
specifier|private
name|long
name|startTime
decl_stmt|;
DECL|field|jobStartTime
specifier|private
name|long
name|jobStartTime
decl_stmt|;
DECL|field|volumeCreationTime
specifier|private
name|AtomicLong
name|volumeCreationTime
decl_stmt|;
DECL|field|bucketCreationTime
specifier|private
name|AtomicLong
name|bucketCreationTime
decl_stmt|;
DECL|field|keyCreationTime
specifier|private
name|AtomicLong
name|keyCreationTime
decl_stmt|;
DECL|field|keyWriteTime
specifier|private
name|AtomicLong
name|keyWriteTime
decl_stmt|;
DECL|field|totalBytesWritten
specifier|private
name|AtomicLong
name|totalBytesWritten
decl_stmt|;
DECL|field|numberOfVolumesCreated
specifier|private
name|AtomicInteger
name|numberOfVolumesCreated
decl_stmt|;
DECL|field|numberOfBucketsCreated
specifier|private
name|AtomicInteger
name|numberOfBucketsCreated
decl_stmt|;
DECL|field|numberOfKeysAdded
specifier|private
name|AtomicLong
name|numberOfKeysAdded
decl_stmt|;
DECL|field|totalWritesValidated
specifier|private
name|Long
name|totalWritesValidated
decl_stmt|;
DECL|field|writeValidationSuccessCount
specifier|private
name|Long
name|writeValidationSuccessCount
decl_stmt|;
DECL|field|writeValidationFailureCount
specifier|private
name|Long
name|writeValidationFailureCount
decl_stmt|;
DECL|field|validationQueue
specifier|private
name|BlockingQueue
argument_list|<
name|KeyValue
argument_list|>
name|validationQueue
decl_stmt|;
DECL|field|histograms
specifier|private
name|ArrayList
argument_list|<
name|Histogram
argument_list|>
name|histograms
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|ozoneConfiguration
specifier|private
name|OzoneConfiguration
name|ozoneConfiguration
decl_stmt|;
DECL|field|progressbar
specifier|private
name|ProgressBar
name|progressbar
decl_stmt|;
DECL|method|RandomKeyGenerator ()
name|RandomKeyGenerator
parameter_list|()
block|{   }
annotation|@
name|VisibleForTesting
DECL|method|RandomKeyGenerator (OzoneConfiguration ozoneConfiguration)
name|RandomKeyGenerator
parameter_list|(
name|OzoneConfiguration
name|ozoneConfiguration
parameter_list|)
block|{
name|this
operator|.
name|ozoneConfiguration
operator|=
name|ozoneConfiguration
expr_stmt|;
block|}
DECL|method|init (OzoneConfiguration configuration)
specifier|public
name|void
name|init
parameter_list|(
name|OzoneConfiguration
name|configuration
parameter_list|)
throws|throws
name|IOException
block|{
name|startTime
operator|=
name|System
operator|.
name|nanoTime
argument_list|()
expr_stmt|;
name|jobStartTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|volumeCreationTime
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|bucketCreationTime
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|keyCreationTime
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|keyWriteTime
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|totalBytesWritten
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|numberOfVolumesCreated
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
name|numberOfBucketsCreated
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
name|numberOfKeysAdded
operator|=
operator|new
name|AtomicLong
argument_list|()
expr_stmt|;
name|ozoneClient
operator|=
name|OzoneClientFactory
operator|.
name|getClient
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|objectStore
operator|=
name|ozoneClient
operator|.
name|getObjectStore
argument_list|()
expr_stmt|;
for|for
control|(
name|FreonOps
name|ops
range|:
name|FreonOps
operator|.
name|values
argument_list|()
control|)
block|{
name|histograms
operator|.
name|add
argument_list|(
name|ops
operator|.
name|ordinal
argument_list|()
argument_list|,
operator|new
name|Histogram
argument_list|(
operator|new
name|UniformReservoir
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|call ()
specifier|public
name|Void
name|call
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|ozoneConfiguration
operator|!=
literal|null
condition|)
block|{
name|init
argument_list|(
name|ozoneConfiguration
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|init
argument_list|(
name|freon
operator|.
name|createOzoneConfiguration
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|keyValue
operator|=
name|DFSUtil
operator|.
name|string2Bytes
argument_list|(
name|RandomStringUtils
operator|.
name|randomAscii
argument_list|(
name|keySize
operator|-
literal|36
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Number of Threads: "
operator|+
name|numOfThreads
argument_list|)
expr_stmt|;
name|threadPoolSize
operator|=
name|min
argument_list|(
name|numOfVolumes
argument_list|,
name|numOfThreads
argument_list|)
expr_stmt|;
name|processor
operator|=
name|Executors
operator|.
name|newFixedThreadPool
argument_list|(
name|threadPoolSize
argument_list|)
expr_stmt|;
name|addShutdownHook
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Number of Volumes: {}."
argument_list|,
name|numOfVolumes
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Number of Buckets per Volume: {}."
argument_list|,
name|numOfBuckets
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Number of Keys per Bucket: {}."
argument_list|,
name|numOfKeys
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Key size: {} bytes"
argument_list|,
name|keySize
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numOfVolumes
condition|;
name|i
operator|++
control|)
block|{
name|String
name|volume
init|=
literal|"vol-"
operator|+
name|i
operator|+
literal|"-"
operator|+
name|RandomStringUtils
operator|.
name|randomNumeric
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|processor
operator|.
name|submit
argument_list|(
operator|new
name|OfflineProcessor
argument_list|(
name|volume
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Thread
name|validator
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|validateWrites
condition|)
block|{
name|totalWritesValidated
operator|=
literal|0L
expr_stmt|;
name|writeValidationSuccessCount
operator|=
literal|0L
expr_stmt|;
name|writeValidationFailureCount
operator|=
literal|0L
expr_stmt|;
name|validationQueue
operator|=
operator|new
name|ArrayBlockingQueue
argument_list|<>
argument_list|(
name|numOfThreads
argument_list|)
expr_stmt|;
name|validator
operator|=
operator|new
name|Thread
argument_list|(
operator|new
name|Validator
argument_list|()
argument_list|)
expr_stmt|;
name|validator
operator|.
name|start
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Data validation is enabled."
argument_list|)
expr_stmt|;
block|}
name|Supplier
argument_list|<
name|Long
argument_list|>
name|currentValue
decl_stmt|;
name|long
name|maxValue
decl_stmt|;
name|currentValue
operator|=
parameter_list|()
lambda|->
name|numberOfKeysAdded
operator|.
name|get
argument_list|()
expr_stmt|;
name|maxValue
operator|=
name|numOfVolumes
operator|*
name|numOfBuckets
operator|*
name|numOfKeys
expr_stmt|;
name|progressbar
operator|=
operator|new
name|ProgressBar
argument_list|(
name|System
operator|.
name|out
argument_list|,
name|maxValue
argument_list|,
name|currentValue
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting progress bar Thread."
argument_list|)
expr_stmt|;
name|progressbar
operator|.
name|start
argument_list|()
expr_stmt|;
name|processor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|processor
operator|.
name|awaitTermination
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|completed
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|exception
condition|)
block|{
name|progressbar
operator|.
name|terminate
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|progressbar
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|validator
operator|!=
literal|null
condition|)
block|{
name|validator
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
name|ozoneClient
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
comment|/**    * Adds ShutdownHook to print statistics.    */
DECL|method|addShutdownHook ()
specifier|private
name|void
name|addShutdownHook
parameter_list|()
block|{
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|addShutdownHook
argument_list|(
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
name|printStats
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Prints stats of {@link Freon} run to the PrintStream.    *    * @param out PrintStream    */
DECL|method|printStats (PrintStream out)
specifier|private
name|void
name|printStats
parameter_list|(
name|PrintStream
name|out
parameter_list|)
block|{
name|long
name|endTime
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|startTime
decl_stmt|;
name|String
name|execTime
init|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
name|endTime
argument_list|)
argument_list|,
name|DURATION_FORMAT
argument_list|)
decl_stmt|;
name|long
name|volumeTime
init|=
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
name|volumeCreationTime
operator|.
name|get
argument_list|()
argument_list|)
operator|/
name|threadPoolSize
decl_stmt|;
name|String
name|prettyAverageVolumeTime
init|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|volumeTime
argument_list|,
name|DURATION_FORMAT
argument_list|)
decl_stmt|;
name|long
name|bucketTime
init|=
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
name|bucketCreationTime
operator|.
name|get
argument_list|()
argument_list|)
operator|/
name|threadPoolSize
decl_stmt|;
name|String
name|prettyAverageBucketTime
init|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|bucketTime
argument_list|,
name|DURATION_FORMAT
argument_list|)
decl_stmt|;
name|long
name|averageKeyCreationTime
init|=
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
name|keyCreationTime
operator|.
name|get
argument_list|()
argument_list|)
operator|/
name|threadPoolSize
decl_stmt|;
name|String
name|prettyAverageKeyCreationTime
init|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|averageKeyCreationTime
argument_list|,
name|DURATION_FORMAT
argument_list|)
decl_stmt|;
name|long
name|averageKeyWriteTime
init|=
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
name|keyWriteTime
operator|.
name|get
argument_list|()
argument_list|)
operator|/
name|threadPoolSize
decl_stmt|;
name|String
name|prettyAverageKeyWriteTime
init|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|averageKeyWriteTime
argument_list|,
name|DURATION_FORMAT
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"***************************************************"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Status: "
operator|+
operator|(
name|exception
condition|?
literal|"Failed"
else|:
literal|"Success"
operator|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Git Base Revision: "
operator|+
name|VersionInfo
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Number of Volumes created: "
operator|+
name|numberOfVolumesCreated
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Number of Buckets created: "
operator|+
name|numberOfBucketsCreated
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Number of Keys added: "
operator|+
name|numberOfKeysAdded
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Ratis replication factor: "
operator|+
name|factor
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Ratis replication type: "
operator|+
name|type
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Average Time spent in volume creation: "
operator|+
name|prettyAverageVolumeTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Average Time spent in bucket creation: "
operator|+
name|prettyAverageBucketTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Average Time spent in key creation: "
operator|+
name|prettyAverageKeyCreationTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Average Time spent in key write: "
operator|+
name|prettyAverageKeyWriteTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Total bytes written: "
operator|+
name|totalBytesWritten
argument_list|)
expr_stmt|;
if|if
condition|(
name|validateWrites
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"Total number of writes validated: "
operator|+
name|totalWritesValidated
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Writes validated: "
operator|+
operator|(
literal|100.0
operator|*
name|totalWritesValidated
operator|/
name|numberOfKeysAdded
operator|.
name|get
argument_list|()
operator|)
operator|+
literal|" %"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Successful validation: "
operator|+
name|writeValidationSuccessCount
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Unsuccessful validation: "
operator|+
name|writeValidationFailureCount
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"Total Execution time: "
operator|+
name|execTime
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"***************************************************"
argument_list|)
expr_stmt|;
if|if
condition|(
name|jsonDir
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
index|[]
name|quantileTime
init|=
operator|new
name|String
index|[
name|FreonOps
operator|.
name|values
argument_list|()
operator|.
name|length
index|]
index|[
name|QUANTILES
operator|+
literal|1
index|]
decl_stmt|;
name|String
index|[]
name|deviations
init|=
operator|new
name|String
index|[
name|FreonOps
operator|.
name|values
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
name|String
index|[]
name|means
init|=
operator|new
name|String
index|[
name|FreonOps
operator|.
name|values
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|FreonOps
name|ops
range|:
name|FreonOps
operator|.
name|values
argument_list|()
control|)
block|{
name|Snapshot
name|snapshot
init|=
name|histograms
operator|.
name|get
argument_list|(
name|ops
operator|.
name|ordinal
argument_list|()
argument_list|)
operator|.
name|getSnapshot
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|QUANTILES
condition|;
name|i
operator|++
control|)
block|{
name|quantileTime
index|[
name|ops
operator|.
name|ordinal
argument_list|()
index|]
index|[
name|i
index|]
operator|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
operator|(
name|long
operator|)
name|snapshot
operator|.
name|getValue
argument_list|(
operator|(
literal|1.0
operator|/
name|QUANTILES
operator|)
operator|*
name|i
argument_list|)
argument_list|)
argument_list|,
name|DURATION_FORMAT
argument_list|)
expr_stmt|;
block|}
name|deviations
index|[
name|ops
operator|.
name|ordinal
argument_list|()
index|]
operator|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
operator|(
name|long
operator|)
name|snapshot
operator|.
name|getStdDev
argument_list|()
argument_list|)
argument_list|,
name|DURATION_FORMAT
argument_list|)
expr_stmt|;
name|means
index|[
name|ops
operator|.
name|ordinal
argument_list|()
index|]
operator|=
name|DurationFormatUtils
operator|.
name|formatDuration
argument_list|(
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toMillis
argument_list|(
operator|(
name|long
operator|)
name|snapshot
operator|.
name|getMean
argument_list|()
argument_list|)
argument_list|,
name|DURATION_FORMAT
argument_list|)
expr_stmt|;
block|}
name|FreonJobInfo
name|jobInfo
init|=
operator|new
name|FreonJobInfo
argument_list|()
operator|.
name|setExecTime
argument_list|(
name|execTime
argument_list|)
operator|.
name|setGitBaseRevision
argument_list|(
name|VersionInfo
operator|.
name|getRevision
argument_list|()
argument_list|)
operator|.
name|setMeanVolumeCreateTime
argument_list|(
name|means
index|[
name|FreonOps
operator|.
name|VOLUME_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setDeviationVolumeCreateTime
argument_list|(
name|deviations
index|[
name|FreonOps
operator|.
name|VOLUME_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setTenQuantileVolumeCreateTime
argument_list|(
name|quantileTime
index|[
name|FreonOps
operator|.
name|VOLUME_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setMeanBucketCreateTime
argument_list|(
name|means
index|[
name|FreonOps
operator|.
name|BUCKET_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setDeviationBucketCreateTime
argument_list|(
name|deviations
index|[
name|FreonOps
operator|.
name|BUCKET_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setTenQuantileBucketCreateTime
argument_list|(
name|quantileTime
index|[
name|FreonOps
operator|.
name|BUCKET_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setMeanKeyCreateTime
argument_list|(
name|means
index|[
name|FreonOps
operator|.
name|KEY_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setDeviationKeyCreateTime
argument_list|(
name|deviations
index|[
name|FreonOps
operator|.
name|KEY_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setTenQuantileKeyCreateTime
argument_list|(
name|quantileTime
index|[
name|FreonOps
operator|.
name|KEY_CREATE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setMeanKeyWriteTime
argument_list|(
name|means
index|[
name|FreonOps
operator|.
name|KEY_WRITE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setDeviationKeyWriteTime
argument_list|(
name|deviations
index|[
name|FreonOps
operator|.
name|KEY_WRITE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
operator|.
name|setTenQuantileKeyWriteTime
argument_list|(
name|quantileTime
index|[
name|FreonOps
operator|.
name|KEY_WRITE
operator|.
name|ordinal
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|String
name|jsonName
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyyMMddHHmmss"
argument_list|)
operator|.
name|format
argument_list|(
name|Time
operator|.
name|now
argument_list|()
argument_list|)
operator|+
literal|".json"
decl_stmt|;
name|String
name|jsonPath
init|=
name|jsonDir
operator|+
literal|"/"
operator|+
name|jsonName
decl_stmt|;
name|FileOutputStream
name|os
init|=
literal|null
decl_stmt|;
try|try
block|{
name|os
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|jsonPath
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|mapper
operator|.
name|setVisibility
argument_list|(
name|PropertyAccessor
operator|.
name|FIELD
argument_list|,
name|JsonAutoDetect
operator|.
name|Visibility
operator|.
name|ANY
argument_list|)
expr_stmt|;
name|ObjectWriter
name|writer
init|=
name|mapper
operator|.
name|writerWithDefaultPrettyPrinter
argument_list|()
decl_stmt|;
name|writer
operator|.
name|writeValue
argument_list|(
name|os
argument_list|,
name|jobInfo
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"Json File could not be created for the path: "
operator|+
name|jsonPath
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"Json object could not be created"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
block|{
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Could not close the output stream for json"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|/**    * Returns the number of volumes created.    *    * @return volume count.    */
annotation|@
name|VisibleForTesting
DECL|method|getNumberOfVolumesCreated ()
name|int
name|getNumberOfVolumesCreated
parameter_list|()
block|{
return|return
name|numberOfVolumesCreated
operator|.
name|get
argument_list|()
return|;
block|}
comment|/**    * Returns the number of buckets created.    *    * @return bucket count.    */
annotation|@
name|VisibleForTesting
DECL|method|getNumberOfBucketsCreated ()
name|int
name|getNumberOfBucketsCreated
parameter_list|()
block|{
return|return
name|numberOfBucketsCreated
operator|.
name|get
argument_list|()
return|;
block|}
comment|/**    * Returns the number of keys added.    *    * @return keys count.    */
annotation|@
name|VisibleForTesting
DECL|method|getNumberOfKeysAdded ()
name|long
name|getNumberOfKeysAdded
parameter_list|()
block|{
return|return
name|numberOfKeysAdded
operator|.
name|get
argument_list|()
return|;
block|}
comment|/**    * Returns true if random validation of write is enabled.    *    * @return validateWrites    */
annotation|@
name|VisibleForTesting
DECL|method|getValidateWrites ()
name|boolean
name|getValidateWrites
parameter_list|()
block|{
return|return
name|validateWrites
return|;
block|}
comment|/**    * Returns the number of keys validated.    *    * @return validated key count.    */
annotation|@
name|VisibleForTesting
DECL|method|getTotalKeysValidated ()
name|long
name|getTotalKeysValidated
parameter_list|()
block|{
return|return
name|totalWritesValidated
return|;
block|}
comment|/**    * Returns the number of successful validation.    *    * @return successful validation count.    */
annotation|@
name|VisibleForTesting
DECL|method|getSuccessfulValidationCount ()
name|long
name|getSuccessfulValidationCount
parameter_list|()
block|{
return|return
name|writeValidationSuccessCount
return|;
block|}
comment|/**    * Returns the number of unsuccessful validation.    *    * @return unsuccessful validation count.    */
annotation|@
name|VisibleForTesting
DECL|method|getUnsuccessfulValidationCount ()
name|long
name|getUnsuccessfulValidationCount
parameter_list|()
block|{
return|return
name|writeValidationFailureCount
return|;
block|}
comment|/**    * Returns the length of the common key value initialized.    *    * @return key value length initialized.    */
annotation|@
name|VisibleForTesting
DECL|method|getKeyValueLength ()
name|long
name|getKeyValueLength
parameter_list|()
block|{
return|return
name|keyValue
operator|.
name|length
return|;
block|}
comment|/**    * Wrapper to hold ozone key-value pair.    */
DECL|class|KeyValue
specifier|private
specifier|static
class|class
name|KeyValue
block|{
comment|/**      * Bucket name associated with the key-value.      */
DECL|field|bucket
specifier|private
name|OzoneBucket
name|bucket
decl_stmt|;
comment|/**      * Key name associated with the key-value.      */
DECL|field|key
specifier|private
name|String
name|key
decl_stmt|;
comment|/**      * Value associated with the key-value.      */
DECL|field|value
specifier|private
name|byte
index|[]
name|value
decl_stmt|;
comment|/**      * Constructs a new ozone key-value pair.      *      * @param key   key part      * @param value value part      */
DECL|method|KeyValue (OzoneBucket bucket, String key, byte[] value)
name|KeyValue
parameter_list|(
name|OzoneBucket
name|bucket
parameter_list|,
name|String
name|key
parameter_list|,
name|byte
index|[]
name|value
parameter_list|)
block|{
name|this
operator|.
name|bucket
operator|=
name|bucket
expr_stmt|;
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
block|}
DECL|class|OfflineProcessor
specifier|private
class|class
name|OfflineProcessor
implements|implements
name|Runnable
block|{
DECL|field|totalBuckets
specifier|private
name|int
name|totalBuckets
decl_stmt|;
DECL|field|totalKeys
specifier|private
name|int
name|totalKeys
decl_stmt|;
DECL|field|volumeName
specifier|private
name|String
name|volumeName
decl_stmt|;
DECL|method|OfflineProcessor (String volumeName)
name|OfflineProcessor
parameter_list|(
name|String
name|volumeName
parameter_list|)
block|{
name|this
operator|.
name|totalBuckets
operator|=
name|numOfBuckets
expr_stmt|;
name|this
operator|.
name|totalKeys
operator|=
name|numOfKeys
expr_stmt|;
name|this
operator|.
name|volumeName
operator|=
name|volumeName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"Creating volume: {}"
argument_list|,
name|volumeName
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|OzoneVolume
name|volume
decl_stmt|;
try|try
block|{
name|objectStore
operator|.
name|createVolume
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
name|long
name|volumeCreationDuration
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|start
decl_stmt|;
name|volumeCreationTime
operator|.
name|getAndAdd
argument_list|(
name|volumeCreationDuration
argument_list|)
expr_stmt|;
name|histograms
operator|.
name|get
argument_list|(
name|FreonOps
operator|.
name|VOLUME_CREATE
operator|.
name|ordinal
argument_list|()
argument_list|)
operator|.
name|update
argument_list|(
name|volumeCreationDuration
argument_list|)
expr_stmt|;
name|numberOfVolumesCreated
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
name|volume
operator|=
name|objectStore
operator|.
name|getVolume
argument_list|(
name|volumeName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|exception
operator|=
literal|true
expr_stmt|;
name|LOG
operator|.
name|error
argument_list|(
literal|"Could not create volume"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|Long
name|threadKeyWriteTime
init|=
literal|0L
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|totalBuckets
condition|;
name|j
operator|++
control|)
block|{
name|String
name|bucketName
init|=
literal|"bucket-"
operator|+
name|j
operator|+
literal|"-"
operator|+
name|RandomStringUtils
operator|.
name|randomNumeric
argument_list|(
literal|5
argument_list|)
decl_stmt|;
try|try
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"Creating bucket: {} in volume: {}"
argument_list|,
name|bucketName
argument_list|,
name|volume
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|start
operator|=
name|System
operator|.
name|nanoTime
argument_list|()
expr_stmt|;
name|volume
operator|.
name|createBucket
argument_list|(
name|bucketName
argument_list|)
expr_stmt|;
name|long
name|bucketCreationDuration
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|start
decl_stmt|;
name|histograms
operator|.
name|get
argument_list|(
name|FreonOps
operator|.
name|BUCKET_CREATE
operator|.
name|ordinal
argument_list|()
argument_list|)
operator|.
name|update
argument_list|(
name|bucketCreationDuration
argument_list|)
expr_stmt|;
name|bucketCreationTime
operator|.
name|getAndAdd
argument_list|(
name|bucketCreationDuration
argument_list|)
expr_stmt|;
name|numberOfBucketsCreated
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
name|OzoneBucket
name|bucket
init|=
name|volume
operator|.
name|getBucket
argument_list|(
name|bucketName
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|totalKeys
condition|;
name|k
operator|++
control|)
block|{
name|String
name|key
init|=
literal|"key-"
operator|+
name|k
operator|+
literal|"-"
operator|+
name|RandomStringUtils
operator|.
name|randomNumeric
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|byte
index|[]
name|randomValue
init|=
name|DFSUtil
operator|.
name|string2Bytes
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"Adding key: {} in bucket: {} of volume: {}"
argument_list|,
name|key
argument_list|,
name|bucket
argument_list|,
name|volume
argument_list|)
expr_stmt|;
name|long
name|keyCreateStart
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|OzoneOutputStream
name|os
init|=
name|bucket
operator|.
name|createKey
argument_list|(
name|key
argument_list|,
name|keySize
argument_list|,
name|type
argument_list|,
name|factor
argument_list|)
decl_stmt|;
name|long
name|keyCreationDuration
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|keyCreateStart
decl_stmt|;
name|histograms
operator|.
name|get
argument_list|(
name|FreonOps
operator|.
name|KEY_CREATE
operator|.
name|ordinal
argument_list|()
argument_list|)
operator|.
name|update
argument_list|(
name|keyCreationDuration
argument_list|)
expr_stmt|;
name|keyCreationTime
operator|.
name|getAndAdd
argument_list|(
name|keyCreationDuration
argument_list|)
expr_stmt|;
name|long
name|keyWriteStart
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
name|keyValue
argument_list|)
expr_stmt|;
name|os
operator|.
name|write
argument_list|(
name|randomValue
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|long
name|keyWriteDuration
init|=
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|keyWriteStart
decl_stmt|;
name|threadKeyWriteTime
operator|+=
name|keyWriteDuration
expr_stmt|;
name|histograms
operator|.
name|get
argument_list|(
name|FreonOps
operator|.
name|KEY_WRITE
operator|.
name|ordinal
argument_list|()
argument_list|)
operator|.
name|update
argument_list|(
name|keyWriteDuration
argument_list|)
expr_stmt|;
name|totalBytesWritten
operator|.
name|getAndAdd
argument_list|(
name|keySize
argument_list|)
expr_stmt|;
name|numberOfKeysAdded
operator|.
name|getAndIncrement
argument_list|()
expr_stmt|;
if|if
condition|(
name|validateWrites
condition|)
block|{
name|byte
index|[]
name|value
init|=
name|ArrayUtils
operator|.
name|addAll
argument_list|(
name|keyValue
argument_list|,
name|randomValue
argument_list|)
decl_stmt|;
name|boolean
name|validate
init|=
name|validationQueue
operator|.
name|offer
argument_list|(
operator|new
name|KeyValue
argument_list|(
name|bucket
argument_list|,
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|validate
condition|)
block|{
name|LOG
operator|.
name|trace
argument_list|(
literal|"Key {}, is queued for validation."
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exception
operator|=
literal|true
expr_stmt|;
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while adding key: {} in bucket: {}"
operator|+
literal|" of volume: {}."
argument_list|,
name|key
argument_list|,
name|bucket
argument_list|,
name|volume
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exception
operator|=
literal|true
expr_stmt|;
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while creating bucket: {}"
operator|+
literal|" in volume: {}."
argument_list|,
name|bucketName
argument_list|,
name|volume
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|keyWriteTime
operator|.
name|getAndAdd
argument_list|(
name|threadKeyWriteTime
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|FreonJobInfo
specifier|private
specifier|final
class|class
name|FreonJobInfo
block|{
DECL|field|status
specifier|private
name|String
name|status
decl_stmt|;
DECL|field|gitBaseRevision
specifier|private
name|String
name|gitBaseRevision
decl_stmt|;
DECL|field|jobStartTime
specifier|private
name|String
name|jobStartTime
decl_stmt|;
DECL|field|numOfVolumes
specifier|private
name|int
name|numOfVolumes
decl_stmt|;
DECL|field|numOfBuckets
specifier|private
name|int
name|numOfBuckets
decl_stmt|;
DECL|field|numOfKeys
specifier|private
name|int
name|numOfKeys
decl_stmt|;
DECL|field|numOfThreads
specifier|private
name|int
name|numOfThreads
decl_stmt|;
DECL|field|dataWritten
specifier|private
name|String
name|dataWritten
decl_stmt|;
DECL|field|execTime
specifier|private
name|String
name|execTime
decl_stmt|;
DECL|field|replicationFactor
specifier|private
name|String
name|replicationFactor
decl_stmt|;
DECL|field|replicationType
specifier|private
name|String
name|replicationType
decl_stmt|;
DECL|field|keySize
specifier|private
name|int
name|keySize
decl_stmt|;
DECL|field|totalThroughputPerSecond
specifier|private
name|String
name|totalThroughputPerSecond
decl_stmt|;
DECL|field|meanVolumeCreateTime
specifier|private
name|String
name|meanVolumeCreateTime
decl_stmt|;
DECL|field|deviationVolumeCreateTime
specifier|private
name|String
name|deviationVolumeCreateTime
decl_stmt|;
DECL|field|tenQuantileVolumeCreateTime
specifier|private
name|String
index|[]
name|tenQuantileVolumeCreateTime
decl_stmt|;
DECL|field|meanBucketCreateTime
specifier|private
name|String
name|meanBucketCreateTime
decl_stmt|;
DECL|field|deviationBucketCreateTime
specifier|private
name|String
name|deviationBucketCreateTime
decl_stmt|;
DECL|field|tenQuantileBucketCreateTime
specifier|private
name|String
index|[]
name|tenQuantileBucketCreateTime
decl_stmt|;
DECL|field|meanKeyCreateTime
specifier|private
name|String
name|meanKeyCreateTime
decl_stmt|;
DECL|field|deviationKeyCreateTime
specifier|private
name|String
name|deviationKeyCreateTime
decl_stmt|;
DECL|field|tenQuantileKeyCreateTime
specifier|private
name|String
index|[]
name|tenQuantileKeyCreateTime
decl_stmt|;
DECL|field|meanKeyWriteTime
specifier|private
name|String
name|meanKeyWriteTime
decl_stmt|;
DECL|field|deviationKeyWriteTime
specifier|private
name|String
name|deviationKeyWriteTime
decl_stmt|;
DECL|field|tenQuantileKeyWriteTime
specifier|private
name|String
index|[]
name|tenQuantileKeyWriteTime
decl_stmt|;
DECL|method|FreonJobInfo ()
specifier|private
name|FreonJobInfo
parameter_list|()
block|{
name|this
operator|.
name|status
operator|=
name|exception
condition|?
literal|"Failed"
else|:
literal|"Success"
expr_stmt|;
name|this
operator|.
name|numOfVolumes
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|numOfVolumes
expr_stmt|;
name|this
operator|.
name|numOfBuckets
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|numOfBuckets
expr_stmt|;
name|this
operator|.
name|numOfKeys
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|numOfKeys
expr_stmt|;
name|this
operator|.
name|numOfThreads
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|numOfThreads
expr_stmt|;
name|this
operator|.
name|keySize
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|keySize
expr_stmt|;
name|this
operator|.
name|jobStartTime
operator|=
name|Time
operator|.
name|formatTime
argument_list|(
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|jobStartTime
argument_list|)
expr_stmt|;
name|this
operator|.
name|replicationFactor
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|factor
operator|.
name|name
argument_list|()
expr_stmt|;
name|this
operator|.
name|replicationType
operator|=
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|type
operator|.
name|name
argument_list|()
expr_stmt|;
name|long
name|totalBytes
init|=
operator|(
name|long
operator|)
name|numOfVolumes
operator|*
name|numOfBuckets
operator|*
name|numOfKeys
operator|*
name|keySize
decl_stmt|;
name|this
operator|.
name|dataWritten
operator|=
name|getInStorageUnits
argument_list|(
operator|(
name|double
operator|)
name|totalBytes
argument_list|)
expr_stmt|;
name|this
operator|.
name|totalThroughputPerSecond
operator|=
name|getInStorageUnits
argument_list|(
operator|(
name|totalBytes
operator|*
literal|1.0
operator|)
operator|/
name|TimeUnit
operator|.
name|NANOSECONDS
operator|.
name|toSeconds
argument_list|(
name|RandomKeyGenerator
operator|.
name|this
operator|.
name|keyWriteTime
operator|.
name|get
argument_list|()
operator|/
name|threadPoolSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getInStorageUnits (Double value)
specifier|private
name|String
name|getInStorageUnits
parameter_list|(
name|Double
name|value
parameter_list|)
block|{
name|double
name|size
decl_stmt|;
name|OzoneQuota
operator|.
name|Units
name|unit
decl_stmt|;
if|if
condition|(
call|(
name|long
call|)
argument_list|(
name|value
operator|/
name|OzoneConsts
operator|.
name|TB
argument_list|)
operator|!=
literal|0
condition|)
block|{
name|size
operator|=
name|value
operator|/
name|OzoneConsts
operator|.
name|TB
expr_stmt|;
name|unit
operator|=
name|OzoneQuota
operator|.
name|Units
operator|.
name|TB
expr_stmt|;
block|}
elseif|else
if|if
condition|(
call|(
name|long
call|)
argument_list|(
name|value
operator|/
name|OzoneConsts
operator|.
name|GB
argument_list|)
operator|!=
literal|0
condition|)
block|{
name|size
operator|=
name|value
operator|/
name|OzoneConsts
operator|.
name|GB
expr_stmt|;
name|unit
operator|=
name|OzoneQuota
operator|.
name|Units
operator|.
name|GB
expr_stmt|;
block|}
elseif|else
if|if
condition|(
call|(
name|long
call|)
argument_list|(
name|value
operator|/
name|OzoneConsts
operator|.
name|MB
argument_list|)
operator|!=
literal|0
condition|)
block|{
name|size
operator|=
name|value
operator|/
name|OzoneConsts
operator|.
name|MB
expr_stmt|;
name|unit
operator|=
name|OzoneQuota
operator|.
name|Units
operator|.
name|MB
expr_stmt|;
block|}
elseif|else
if|if
condition|(
call|(
name|long
call|)
argument_list|(
name|value
operator|/
name|OzoneConsts
operator|.
name|KB
argument_list|)
operator|!=
literal|0
condition|)
block|{
name|size
operator|=
name|value
operator|/
name|OzoneConsts
operator|.
name|KB
expr_stmt|;
name|unit
operator|=
name|OzoneQuota
operator|.
name|Units
operator|.
name|KB
expr_stmt|;
block|}
else|else
block|{
name|size
operator|=
name|value
expr_stmt|;
name|unit
operator|=
name|OzoneQuota
operator|.
name|Units
operator|.
name|BYTES
expr_stmt|;
block|}
return|return
name|size
operator|+
literal|" "
operator|+
name|unit
return|;
block|}
DECL|method|setGitBaseRevision (String gitBaseRevisionVal)
specifier|public
name|FreonJobInfo
name|setGitBaseRevision
parameter_list|(
name|String
name|gitBaseRevisionVal
parameter_list|)
block|{
name|gitBaseRevision
operator|=
name|gitBaseRevisionVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setExecTime (String execTimeVal)
specifier|public
name|FreonJobInfo
name|setExecTime
parameter_list|(
name|String
name|execTimeVal
parameter_list|)
block|{
name|execTime
operator|=
name|execTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMeanKeyWriteTime (String deviationKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setMeanKeyWriteTime
parameter_list|(
name|String
name|deviationKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|meanKeyWriteTime
operator|=
name|deviationKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDeviationKeyWriteTime ( String deviationKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setDeviationKeyWriteTime
parameter_list|(
name|String
name|deviationKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|deviationKeyWriteTime
operator|=
name|deviationKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTenQuantileKeyWriteTime ( String[] tenQuantileKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setTenQuantileKeyWriteTime
parameter_list|(
name|String
index|[]
name|tenQuantileKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|tenQuantileKeyWriteTime
operator|=
name|tenQuantileKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMeanKeyCreateTime (String deviationKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setMeanKeyCreateTime
parameter_list|(
name|String
name|deviationKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|meanKeyCreateTime
operator|=
name|deviationKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDeviationKeyCreateTime ( String deviationKeyCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setDeviationKeyCreateTime
parameter_list|(
name|String
name|deviationKeyCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|deviationKeyCreateTime
operator|=
name|deviationKeyCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTenQuantileKeyCreateTime ( String[] tenQuantileKeyCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setTenQuantileKeyCreateTime
parameter_list|(
name|String
index|[]
name|tenQuantileKeyCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|tenQuantileKeyCreateTime
operator|=
name|tenQuantileKeyCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMeanBucketCreateTime ( String deviationKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setMeanBucketCreateTime
parameter_list|(
name|String
name|deviationKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|meanBucketCreateTime
operator|=
name|deviationKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDeviationBucketCreateTime ( String deviationBucketCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setDeviationBucketCreateTime
parameter_list|(
name|String
name|deviationBucketCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|deviationBucketCreateTime
operator|=
name|deviationBucketCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTenQuantileBucketCreateTime ( String[] tenQuantileBucketCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setTenQuantileBucketCreateTime
parameter_list|(
name|String
index|[]
name|tenQuantileBucketCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|tenQuantileBucketCreateTime
operator|=
name|tenQuantileBucketCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setMeanVolumeCreateTime ( String deviationKeyWriteTimeVal)
specifier|public
name|FreonJobInfo
name|setMeanVolumeCreateTime
parameter_list|(
name|String
name|deviationKeyWriteTimeVal
parameter_list|)
block|{
name|this
operator|.
name|meanVolumeCreateTime
operator|=
name|deviationKeyWriteTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setDeviationVolumeCreateTime ( String deviationVolumeCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setDeviationVolumeCreateTime
parameter_list|(
name|String
name|deviationVolumeCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|deviationVolumeCreateTime
operator|=
name|deviationVolumeCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setTenQuantileVolumeCreateTime ( String[] tenQuantileVolumeCreateTimeVal)
specifier|public
name|FreonJobInfo
name|setTenQuantileVolumeCreateTime
parameter_list|(
name|String
index|[]
name|tenQuantileVolumeCreateTimeVal
parameter_list|)
block|{
name|this
operator|.
name|tenQuantileVolumeCreateTime
operator|=
name|tenQuantileVolumeCreateTimeVal
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|getJobStartTime ()
specifier|public
name|String
name|getJobStartTime
parameter_list|()
block|{
return|return
name|jobStartTime
return|;
block|}
DECL|method|getNumOfVolumes ()
specifier|public
name|int
name|getNumOfVolumes
parameter_list|()
block|{
return|return
name|numOfVolumes
return|;
block|}
DECL|method|getNumOfBuckets ()
specifier|public
name|int
name|getNumOfBuckets
parameter_list|()
block|{
return|return
name|numOfBuckets
return|;
block|}
DECL|method|getNumOfKeys ()
specifier|public
name|int
name|getNumOfKeys
parameter_list|()
block|{
return|return
name|numOfKeys
return|;
block|}
DECL|method|getNumOfThreads ()
specifier|public
name|int
name|getNumOfThreads
parameter_list|()
block|{
return|return
name|numOfThreads
return|;
block|}
DECL|method|getExecTime ()
specifier|public
name|String
name|getExecTime
parameter_list|()
block|{
return|return
name|execTime
return|;
block|}
DECL|method|getReplicationFactor ()
specifier|public
name|String
name|getReplicationFactor
parameter_list|()
block|{
return|return
name|replicationFactor
return|;
block|}
DECL|method|getReplicationType ()
specifier|public
name|String
name|getReplicationType
parameter_list|()
block|{
return|return
name|replicationType
return|;
block|}
DECL|method|getStatus ()
specifier|public
name|String
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
DECL|method|getKeySize ()
specifier|public
name|int
name|getKeySize
parameter_list|()
block|{
return|return
name|keySize
return|;
block|}
DECL|method|getGitBaseRevision ()
specifier|public
name|String
name|getGitBaseRevision
parameter_list|()
block|{
return|return
name|gitBaseRevision
return|;
block|}
DECL|method|getDataWritten ()
specifier|public
name|String
name|getDataWritten
parameter_list|()
block|{
return|return
name|dataWritten
return|;
block|}
DECL|method|getTotalThroughputPerSecond ()
specifier|public
name|String
name|getTotalThroughputPerSecond
parameter_list|()
block|{
return|return
name|totalThroughputPerSecond
return|;
block|}
DECL|method|getMeanVolumeCreateTime ()
specifier|public
name|String
name|getMeanVolumeCreateTime
parameter_list|()
block|{
return|return
name|meanVolumeCreateTime
return|;
block|}
DECL|method|getDeviationVolumeCreateTime ()
specifier|public
name|String
name|getDeviationVolumeCreateTime
parameter_list|()
block|{
return|return
name|deviationVolumeCreateTime
return|;
block|}
DECL|method|getTenQuantileVolumeCreateTime ()
specifier|public
name|String
index|[]
name|getTenQuantileVolumeCreateTime
parameter_list|()
block|{
return|return
name|tenQuantileVolumeCreateTime
return|;
block|}
DECL|method|getMeanBucketCreateTime ()
specifier|public
name|String
name|getMeanBucketCreateTime
parameter_list|()
block|{
return|return
name|meanBucketCreateTime
return|;
block|}
DECL|method|getDeviationBucketCreateTime ()
specifier|public
name|String
name|getDeviationBucketCreateTime
parameter_list|()
block|{
return|return
name|deviationBucketCreateTime
return|;
block|}
DECL|method|getTenQuantileBucketCreateTime ()
specifier|public
name|String
index|[]
name|getTenQuantileBucketCreateTime
parameter_list|()
block|{
return|return
name|tenQuantileBucketCreateTime
return|;
block|}
DECL|method|getMeanKeyCreateTime ()
specifier|public
name|String
name|getMeanKeyCreateTime
parameter_list|()
block|{
return|return
name|meanKeyCreateTime
return|;
block|}
DECL|method|getDeviationKeyCreateTime ()
specifier|public
name|String
name|getDeviationKeyCreateTime
parameter_list|()
block|{
return|return
name|deviationKeyCreateTime
return|;
block|}
DECL|method|getTenQuantileKeyCreateTime ()
specifier|public
name|String
index|[]
name|getTenQuantileKeyCreateTime
parameter_list|()
block|{
return|return
name|tenQuantileKeyCreateTime
return|;
block|}
DECL|method|getMeanKeyWriteTime ()
specifier|public
name|String
name|getMeanKeyWriteTime
parameter_list|()
block|{
return|return
name|meanKeyWriteTime
return|;
block|}
DECL|method|getDeviationKeyWriteTime ()
specifier|public
name|String
name|getDeviationKeyWriteTime
parameter_list|()
block|{
return|return
name|deviationKeyWriteTime
return|;
block|}
DECL|method|getTenQuantileKeyWriteTime ()
specifier|public
name|String
index|[]
name|getTenQuantileKeyWriteTime
parameter_list|()
block|{
return|return
name|tenQuantileKeyWriteTime
return|;
block|}
block|}
comment|/**    * Validates the write done in ozone cluster.    */
DECL|class|Validator
specifier|private
class|class
name|Validator
implements|implements
name|Runnable
block|{
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
operator|!
name|completed
condition|)
block|{
try|try
block|{
name|KeyValue
name|kv
init|=
name|validationQueue
operator|.
name|poll
argument_list|(
literal|5
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
name|kv
operator|!=
literal|null
condition|)
block|{
name|OzoneInputStream
name|is
init|=
name|kv
operator|.
name|bucket
operator|.
name|readKey
argument_list|(
name|kv
operator|.
name|key
argument_list|)
decl_stmt|;
name|byte
index|[]
name|value
init|=
operator|new
name|byte
index|[
name|kv
operator|.
name|value
operator|.
name|length
index|]
decl_stmt|;
name|int
name|length
init|=
name|is
operator|.
name|read
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|totalWritesValidated
operator|++
expr_stmt|;
if|if
condition|(
name|length
operator|==
name|kv
operator|.
name|value
operator|.
name|length
operator|&&
name|Arrays
operator|.
name|equals
argument_list|(
name|value
argument_list|,
name|kv
operator|.
name|value
argument_list|)
condition|)
block|{
name|writeValidationSuccessCount
operator|++
expr_stmt|;
block|}
else|else
block|{
name|writeValidationFailureCount
operator|++
expr_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
literal|"Data validation error for key {}/{}/{}"
argument_list|,
name|kv
operator|.
name|bucket
operator|.
name|getVolumeName
argument_list|()
argument_list|,
name|kv
operator|.
name|bucket
argument_list|,
name|kv
operator|.
name|key
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
literal|"Expected checksum: {}, Actual checksum: {}"
argument_list|,
name|DigestUtils
operator|.
name|md5Hex
argument_list|(
name|kv
operator|.
name|value
argument_list|)
argument_list|,
name|DigestUtils
operator|.
name|md5Hex
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
decl||
name|InterruptedException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while validating write: "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|VisibleForTesting
DECL|method|setNumOfVolumes (int numOfVolumes)
specifier|public
name|void
name|setNumOfVolumes
parameter_list|(
name|int
name|numOfVolumes
parameter_list|)
block|{
name|this
operator|.
name|numOfVolumes
operator|=
name|numOfVolumes
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setNumOfBuckets (int numOfBuckets)
specifier|public
name|void
name|setNumOfBuckets
parameter_list|(
name|int
name|numOfBuckets
parameter_list|)
block|{
name|this
operator|.
name|numOfBuckets
operator|=
name|numOfBuckets
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setNumOfKeys (int numOfKeys)
specifier|public
name|void
name|setNumOfKeys
parameter_list|(
name|int
name|numOfKeys
parameter_list|)
block|{
name|this
operator|.
name|numOfKeys
operator|=
name|numOfKeys
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setNumOfThreads (int numOfThreads)
specifier|public
name|void
name|setNumOfThreads
parameter_list|(
name|int
name|numOfThreads
parameter_list|)
block|{
name|this
operator|.
name|numOfThreads
operator|=
name|numOfThreads
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setKeySize (int keySize)
specifier|public
name|void
name|setKeySize
parameter_list|(
name|int
name|keySize
parameter_list|)
block|{
name|this
operator|.
name|keySize
operator|=
name|keySize
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setType (ReplicationType type)
specifier|public
name|void
name|setType
parameter_list|(
name|ReplicationType
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setFactor (ReplicationFactor factor)
specifier|public
name|void
name|setFactor
parameter_list|(
name|ReplicationFactor
name|factor
parameter_list|)
block|{
name|this
operator|.
name|factor
operator|=
name|factor
expr_stmt|;
block|}
annotation|@
name|VisibleForTesting
DECL|method|setValidateWrites (boolean validateWrites)
specifier|public
name|void
name|setValidateWrites
parameter_list|(
name|boolean
name|validateWrites
parameter_list|)
block|{
name|this
operator|.
name|validateWrites
operator|=
name|validateWrites
expr_stmt|;
block|}
block|}
end_class

end_unit

