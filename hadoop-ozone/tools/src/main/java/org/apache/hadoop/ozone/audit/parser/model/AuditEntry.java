begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.audit.parser.model
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|audit
operator|.
name|parser
operator|.
name|model
package|;
end_package

begin_comment
comment|/**  * POJO used for ozone audit parser tool.  */
end_comment

begin_class
DECL|class|AuditEntry
specifier|public
class|class
name|AuditEntry
block|{
DECL|field|timestamp
specifier|private
name|String
name|timestamp
decl_stmt|;
DECL|field|level
specifier|private
name|String
name|level
decl_stmt|;
DECL|field|logger
specifier|private
name|String
name|logger
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|ip
specifier|private
name|String
name|ip
decl_stmt|;
DECL|field|op
specifier|private
name|String
name|op
decl_stmt|;
DECL|field|params
specifier|private
name|String
name|params
decl_stmt|;
DECL|field|result
specifier|private
name|String
name|result
decl_stmt|;
DECL|field|exception
specifier|private
name|String
name|exception
decl_stmt|;
DECL|method|AuditEntry ()
specifier|public
name|AuditEntry
parameter_list|()
block|{}
DECL|method|getUser ()
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
DECL|method|setUser (String user)
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
DECL|method|getIp ()
specifier|public
name|String
name|getIp
parameter_list|()
block|{
return|return
name|ip
return|;
block|}
DECL|method|setIp (String ip)
specifier|public
name|void
name|setIp
parameter_list|(
name|String
name|ip
parameter_list|)
block|{
name|this
operator|.
name|ip
operator|=
name|ip
expr_stmt|;
block|}
DECL|method|getTimestamp ()
specifier|public
name|String
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
DECL|method|setTimestamp (String timestamp)
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|String
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
DECL|method|getLevel ()
specifier|public
name|String
name|getLevel
parameter_list|()
block|{
return|return
name|level
return|;
block|}
DECL|method|setLevel (String level)
specifier|public
name|void
name|setLevel
parameter_list|(
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|level
operator|=
name|level
expr_stmt|;
block|}
DECL|method|getLogger ()
specifier|public
name|String
name|getLogger
parameter_list|()
block|{
return|return
name|logger
return|;
block|}
DECL|method|setLogger (String logger)
specifier|public
name|void
name|setLogger
parameter_list|(
name|String
name|logger
parameter_list|)
block|{
name|this
operator|.
name|logger
operator|=
name|logger
expr_stmt|;
block|}
DECL|method|getOp ()
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
DECL|method|setOp (String op)
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
DECL|method|getParams ()
specifier|public
name|String
name|getParams
parameter_list|()
block|{
return|return
name|params
return|;
block|}
DECL|method|setParams (String params)
specifier|public
name|void
name|setParams
parameter_list|(
name|String
name|params
parameter_list|)
block|{
name|this
operator|.
name|params
operator|=
name|params
expr_stmt|;
block|}
DECL|method|getResult ()
specifier|public
name|String
name|getResult
parameter_list|()
block|{
return|return
name|result
return|;
block|}
DECL|method|setResult (String result)
specifier|public
name|void
name|setResult
parameter_list|(
name|String
name|result
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
block|}
DECL|method|getException ()
specifier|public
name|String
name|getException
parameter_list|()
block|{
return|return
name|exception
return|;
block|}
DECL|method|setException (String exception)
specifier|public
name|void
name|setException
parameter_list|(
name|String
name|exception
parameter_list|)
block|{
name|this
operator|.
name|exception
operator|=
name|exception
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
DECL|method|appendException (String text)
specifier|public
name|void
name|appendException
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|this
operator|.
name|exception
operator|+=
literal|"\n"
operator|+
name|text
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
comment|/**    * Builder for AuditEntry.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|timestamp
specifier|private
name|String
name|timestamp
decl_stmt|;
DECL|field|level
specifier|private
name|String
name|level
decl_stmt|;
DECL|field|logger
specifier|private
name|String
name|logger
decl_stmt|;
DECL|field|user
specifier|private
name|String
name|user
decl_stmt|;
DECL|field|ip
specifier|private
name|String
name|ip
decl_stmt|;
DECL|field|op
specifier|private
name|String
name|op
decl_stmt|;
DECL|field|params
specifier|private
name|String
name|params
decl_stmt|;
DECL|field|result
specifier|private
name|String
name|result
decl_stmt|;
DECL|field|exception
specifier|private
name|String
name|exception
decl_stmt|;
DECL|method|Builder ()
specifier|public
name|Builder
parameter_list|()
block|{      }
DECL|method|setTimestamp (String ts)
specifier|public
name|Builder
name|setTimestamp
parameter_list|(
name|String
name|ts
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|ts
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLevel (String lvl)
specifier|public
name|Builder
name|setLevel
parameter_list|(
name|String
name|lvl
parameter_list|)
block|{
name|this
operator|.
name|level
operator|=
name|lvl
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLogger (String lgr)
specifier|public
name|Builder
name|setLogger
parameter_list|(
name|String
name|lgr
parameter_list|)
block|{
name|this
operator|.
name|logger
operator|=
name|lgr
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setUser (String usr)
specifier|public
name|Builder
name|setUser
parameter_list|(
name|String
name|usr
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|usr
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIp (String ipAddress)
specifier|public
name|Builder
name|setIp
parameter_list|(
name|String
name|ipAddress
parameter_list|)
block|{
name|this
operator|.
name|ip
operator|=
name|ipAddress
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setOp (String operation)
specifier|public
name|Builder
name|setOp
parameter_list|(
name|String
name|operation
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|operation
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setParams (String prms)
specifier|public
name|Builder
name|setParams
parameter_list|(
name|String
name|prms
parameter_list|)
block|{
name|this
operator|.
name|params
operator|=
name|prms
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setResult (String res)
specifier|public
name|Builder
name|setResult
parameter_list|(
name|String
name|res
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|res
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setException (String exp)
specifier|public
name|Builder
name|setException
parameter_list|(
name|String
name|exp
parameter_list|)
block|{
name|this
operator|.
name|exception
operator|=
name|exp
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|AuditEntry
name|build
parameter_list|()
block|{
name|AuditEntry
name|aentry
init|=
operator|new
name|AuditEntry
argument_list|()
decl_stmt|;
name|aentry
operator|.
name|timestamp
operator|=
name|this
operator|.
name|timestamp
expr_stmt|;
name|aentry
operator|.
name|level
operator|=
name|this
operator|.
name|level
expr_stmt|;
name|aentry
operator|.
name|logger
operator|=
name|this
operator|.
name|logger
expr_stmt|;
name|aentry
operator|.
name|user
operator|=
name|this
operator|.
name|user
expr_stmt|;
name|aentry
operator|.
name|ip
operator|=
name|this
operator|.
name|ip
expr_stmt|;
name|aentry
operator|.
name|op
operator|=
name|this
operator|.
name|op
expr_stmt|;
name|aentry
operator|.
name|params
operator|=
name|this
operator|.
name|params
expr_stmt|;
name|aentry
operator|.
name|result
operator|=
name|this
operator|.
name|result
expr_stmt|;
name|aentry
operator|.
name|exception
operator|=
name|this
operator|.
name|exception
expr_stmt|;
return|return
name|aentry
return|;
block|}
block|}
block|}
end_class

end_unit

