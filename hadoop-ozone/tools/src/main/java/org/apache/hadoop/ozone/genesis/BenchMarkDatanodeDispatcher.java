begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.apache.hadoop.ozone.genesis
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|genesis
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|digest
operator|.
name|DigestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|RandomStringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|server
operator|.
name|datanode
operator|.
name|StorageLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|OzoneConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|ChunkManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|ContainerManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|Dispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|impl
operator|.
name|KeyManagerImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|container
operator|.
name|common
operator|.
name|interfaces
operator|.
name|ContainerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|Pipeline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|container
operator|.
name|common
operator|.
name|helpers
operator|.
name|PipelineChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Benchmark
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Setup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|State
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|TearDown
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
operator|.
name|CONTAINER_ROOT_PREFIX
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|LifeCycleState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerCommandRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|CreateContainerRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ReadChunkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|WriteChunkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|PutKeyRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|GetKeyRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
operator|.
name|ContainerData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|ContainerProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|ReplicationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|protocol
operator|.
name|proto
operator|.
name|HddsProtos
operator|.
name|ReplicationFactor
import|;
end_import

begin_class
annotation|@
name|State
argument_list|(
name|Scope
operator|.
name|Benchmark
argument_list|)
DECL|class|BenchMarkDatanodeDispatcher
specifier|public
class|class
name|BenchMarkDatanodeDispatcher
block|{
DECL|field|baseDir
specifier|private
name|String
name|baseDir
decl_stmt|;
DECL|field|datanodeUuid
specifier|private
name|String
name|datanodeUuid
decl_stmt|;
DECL|field|dispatcher
specifier|private
name|Dispatcher
name|dispatcher
decl_stmt|;
DECL|field|pipelineChannel
specifier|private
name|PipelineChannel
name|pipelineChannel
decl_stmt|;
DECL|field|data
specifier|private
name|ByteString
name|data
decl_stmt|;
DECL|field|random
specifier|private
name|Random
name|random
decl_stmt|;
DECL|field|containerCount
specifier|private
name|AtomicInteger
name|containerCount
decl_stmt|;
DECL|field|keyCount
specifier|private
name|AtomicInteger
name|keyCount
decl_stmt|;
DECL|field|chunkCount
specifier|private
name|AtomicInteger
name|chunkCount
decl_stmt|;
annotation|@
name|Setup
argument_list|(
name|Level
operator|.
name|Trial
argument_list|)
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|IOException
block|{
name|datanodeUuid
operator|=
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|pipelineChannel
operator|=
operator|new
name|PipelineChannel
argument_list|(
literal|"127.0.0.1"
argument_list|,
name|LifeCycleState
operator|.
name|OPEN
argument_list|,
name|ReplicationType
operator|.
name|STAND_ALONE
argument_list|,
name|ReplicationFactor
operator|.
name|ONE
argument_list|,
literal|"SA-"
operator|+
name|UUID
operator|.
name|randomUUID
argument_list|()
argument_list|)
expr_stmt|;
comment|// 1 MB of data
name|data
operator|=
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|RandomStringUtils
operator|.
name|randomAscii
argument_list|(
literal|1048576
argument_list|)
argument_list|)
expr_stmt|;
name|random
operator|=
operator|new
name|Random
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|OzoneConfiguration
argument_list|()
decl_stmt|;
name|ContainerManager
name|manager
init|=
operator|new
name|ContainerManagerImpl
argument_list|()
decl_stmt|;
name|baseDir
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
name|datanodeUuid
expr_stmt|;
comment|// data directory
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.datanode.data.dir"
argument_list|,
name|baseDir
operator|+
name|File
operator|.
name|separator
operator|+
literal|"data"
argument_list|)
expr_stmt|;
comment|// metadata directory
name|StorageLocation
name|metadataDir
init|=
name|StorageLocation
operator|.
name|parse
argument_list|(
name|baseDir
operator|+
name|File
operator|.
name|separator
operator|+
name|CONTAINER_ROOT_PREFIX
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|StorageLocation
argument_list|>
name|locations
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|metadataDir
argument_list|)
decl_stmt|;
name|manager
operator|.
name|init
argument_list|(
name|conf
argument_list|,
name|locations
argument_list|,
name|GenesisUtil
operator|.
name|createDatanodeDetails
argument_list|(
name|datanodeUuid
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|.
name|setChunkManager
argument_list|(
operator|new
name|ChunkManagerImpl
argument_list|(
name|manager
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|.
name|setKeyManager
argument_list|(
operator|new
name|KeyManagerImpl
argument_list|(
name|manager
argument_list|,
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|dispatcher
operator|=
operator|new
name|Dispatcher
argument_list|(
name|manager
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|init
argument_list|()
expr_stmt|;
name|containerCount
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
name|keyCount
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
name|chunkCount
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
comment|// Create containers
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|100
condition|;
name|x
operator|++
control|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|containerCount
operator|.
name|getAndIncrement
argument_list|()
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getCreateContainerCommand
argument_list|(
name|containerName
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Add chunk and keys to the containers
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|50
condition|;
name|x
operator|++
control|)
block|{
name|String
name|chunkName
init|=
literal|"chunk-"
operator|+
name|chunkCount
operator|.
name|getAndIncrement
argument_list|()
decl_stmt|;
name|String
name|keyName
init|=
literal|"key-"
operator|+
name|keyCount
operator|.
name|getAndIncrement
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|100
condition|;
name|y
operator|++
control|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|y
decl_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getWriteChunkCommand
argument_list|(
name|containerName
argument_list|,
name|chunkName
argument_list|)
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getPutKeyCommand
argument_list|(
name|containerName
argument_list|,
name|chunkName
argument_list|,
name|keyName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|TearDown
argument_list|(
name|Level
operator|.
name|Trial
argument_list|)
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
name|dispatcher
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|baseDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getCreateContainerCommand ( String containerName)
specifier|private
name|ContainerCommandRequestProto
name|getCreateContainerCommand
parameter_list|(
name|String
name|containerName
parameter_list|)
block|{
name|CreateContainerRequestProto
operator|.
name|Builder
name|createRequest
init|=
name|CreateContainerRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|createRequest
operator|.
name|setPipeline
argument_list|(
operator|new
name|Pipeline
argument_list|(
name|containerName
argument_list|,
name|pipelineChannel
argument_list|)
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
expr_stmt|;
name|createRequest
operator|.
name|setContainerData
argument_list|(
name|ContainerData
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|containerName
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|ContainerCommandRequestProto
operator|.
name|Builder
name|request
init|=
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|request
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|CreateContainer
argument_list|)
expr_stmt|;
name|request
operator|.
name|setCreateContainer
argument_list|(
name|createRequest
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDatanodeUuid
argument_list|(
name|datanodeUuid
argument_list|)
expr_stmt|;
name|request
operator|.
name|setTraceID
argument_list|(
name|containerName
operator|+
literal|"-trace"
argument_list|)
expr_stmt|;
return|return
name|request
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getWriteChunkCommand ( String containerName, String key)
specifier|private
name|ContainerCommandRequestProto
name|getWriteChunkCommand
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|WriteChunkRequestProto
operator|.
name|Builder
name|writeChunkRequest
init|=
name|WriteChunkRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPipeline
argument_list|(
operator|new
name|Pipeline
argument_list|(
name|containerName
argument_list|,
name|pipelineChannel
argument_list|)
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|key
argument_list|)
operator|.
name|setChunkData
argument_list|(
name|getChunkInfo
argument_list|(
name|containerName
argument_list|,
name|key
argument_list|)
argument_list|)
operator|.
name|setData
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|ContainerCommandRequestProto
operator|.
name|Builder
name|request
init|=
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|request
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|WriteChunk
argument_list|)
operator|.
name|setTraceID
argument_list|(
name|containerName
operator|+
literal|"-"
operator|+
name|key
operator|+
literal|"-trace"
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|datanodeUuid
argument_list|)
operator|.
name|setWriteChunk
argument_list|(
name|writeChunkRequest
argument_list|)
expr_stmt|;
return|return
name|request
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getReadChunkCommand ( String containerName, String key)
specifier|private
name|ContainerCommandRequestProto
name|getReadChunkCommand
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|ReadChunkRequestProto
operator|.
name|Builder
name|readChunkRequest
init|=
name|ReadChunkRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPipeline
argument_list|(
operator|new
name|Pipeline
argument_list|(
name|containerName
argument_list|,
name|pipelineChannel
argument_list|)
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
operator|.
name|setKeyName
argument_list|(
name|key
argument_list|)
operator|.
name|setChunkData
argument_list|(
name|getChunkInfo
argument_list|(
name|containerName
argument_list|,
name|key
argument_list|)
argument_list|)
decl_stmt|;
name|ContainerCommandRequestProto
operator|.
name|Builder
name|request
init|=
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|request
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|ReadChunk
argument_list|)
operator|.
name|setTraceID
argument_list|(
name|containerName
operator|+
literal|"-"
operator|+
name|key
operator|+
literal|"-trace"
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|datanodeUuid
argument_list|)
operator|.
name|setReadChunk
argument_list|(
name|readChunkRequest
argument_list|)
expr_stmt|;
return|return
name|request
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getChunkInfo ( String containerName, String key)
specifier|private
name|ContainerProtos
operator|.
name|ChunkInfo
name|getChunkInfo
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|ContainerProtos
operator|.
name|ChunkInfo
operator|.
name|Builder
name|builder
init|=
name|ContainerProtos
operator|.
name|ChunkInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setChunkName
argument_list|(
name|DigestUtils
operator|.
name|md5Hex
argument_list|(
name|key
argument_list|)
operator|+
literal|"_stream_"
operator|+
name|containerName
operator|+
literal|"_chunk_"
operator|+
name|key
argument_list|)
operator|.
name|setOffset
argument_list|(
literal|0
argument_list|)
operator|.
name|setLen
argument_list|(
name|data
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getPutKeyCommand ( String containerName, String chunkKey, String key)
specifier|private
name|ContainerCommandRequestProto
name|getPutKeyCommand
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|chunkKey
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|PutKeyRequestProto
operator|.
name|Builder
name|putKeyRequest
init|=
name|PutKeyRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPipeline
argument_list|(
operator|new
name|Pipeline
argument_list|(
name|containerName
argument_list|,
name|pipelineChannel
argument_list|)
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
operator|.
name|setKeyData
argument_list|(
name|getKeyData
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|,
name|key
argument_list|)
argument_list|)
decl_stmt|;
name|ContainerCommandRequestProto
operator|.
name|Builder
name|request
init|=
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|request
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|PutKey
argument_list|)
operator|.
name|setTraceID
argument_list|(
name|containerName
operator|+
literal|"-"
operator|+
name|key
operator|+
literal|"-trace"
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|datanodeUuid
argument_list|)
operator|.
name|setPutKey
argument_list|(
name|putKeyRequest
argument_list|)
expr_stmt|;
return|return
name|request
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getGetKeyCommand ( String containerName, String chunkKey, String key)
specifier|private
name|ContainerCommandRequestProto
name|getGetKeyCommand
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|chunkKey
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|GetKeyRequestProto
operator|.
name|Builder
name|readKeyRequest
init|=
name|GetKeyRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setPipeline
argument_list|(
operator|new
name|Pipeline
argument_list|(
name|containerName
argument_list|,
name|pipelineChannel
argument_list|)
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
operator|.
name|setKeyData
argument_list|(
name|getKeyData
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|,
name|key
argument_list|)
argument_list|)
decl_stmt|;
name|ContainerCommandRequestProto
operator|.
name|Builder
name|request
init|=
name|ContainerCommandRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCmdType
argument_list|(
name|ContainerProtos
operator|.
name|Type
operator|.
name|GetKey
argument_list|)
operator|.
name|setTraceID
argument_list|(
name|containerName
operator|+
literal|"-"
operator|+
name|key
operator|+
literal|"-trace"
argument_list|)
operator|.
name|setDatanodeUuid
argument_list|(
name|datanodeUuid
argument_list|)
operator|.
name|setGetKey
argument_list|(
name|readKeyRequest
argument_list|)
decl_stmt|;
return|return
name|request
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getKeyData ( String containerName, String chunkKey, String key)
specifier|private
name|ContainerProtos
operator|.
name|KeyData
name|getKeyData
parameter_list|(
name|String
name|containerName
parameter_list|,
name|String
name|chunkKey
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|ContainerProtos
operator|.
name|KeyData
operator|.
name|Builder
name|builder
init|=
name|ContainerProtos
operator|.
name|KeyData
operator|.
name|newBuilder
argument_list|()
operator|.
name|setContainerName
argument_list|(
name|containerName
argument_list|)
operator|.
name|setName
argument_list|(
name|key
argument_list|)
operator|.
name|addChunks
argument_list|(
name|getChunkInfo
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Benchmark
DECL|method|createContainer (BenchMarkDatanodeDispatcher bmdd)
specifier|public
name|void
name|createContainer
parameter_list|(
name|BenchMarkDatanodeDispatcher
name|bmdd
parameter_list|)
block|{
name|bmdd
operator|.
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getCreateContainerCommand
argument_list|(
literal|"container-"
operator|+
name|containerCount
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
DECL|method|writeChunk (BenchMarkDatanodeDispatcher bmdd)
specifier|public
name|void
name|writeChunk
parameter_list|(
name|BenchMarkDatanodeDispatcher
name|bmdd
parameter_list|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|containerCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|bmdd
operator|.
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getWriteChunkCommand
argument_list|(
name|containerName
argument_list|,
literal|"chunk-"
operator|+
name|chunkCount
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
DECL|method|readChunk (BenchMarkDatanodeDispatcher bmdd)
specifier|public
name|void
name|readChunk
parameter_list|(
name|BenchMarkDatanodeDispatcher
name|bmdd
parameter_list|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|containerCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|chunkKey
init|=
literal|"chunk-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|chunkCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|bmdd
operator|.
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getReadChunkCommand
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
DECL|method|putKey (BenchMarkDatanodeDispatcher bmdd)
specifier|public
name|void
name|putKey
parameter_list|(
name|BenchMarkDatanodeDispatcher
name|bmdd
parameter_list|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|containerCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|chunkKey
init|=
literal|"chunk-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|chunkCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|bmdd
operator|.
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getPutKeyCommand
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|,
literal|"key-"
operator|+
name|keyCount
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
DECL|method|getKey (BenchMarkDatanodeDispatcher bmdd)
specifier|public
name|void
name|getKey
parameter_list|(
name|BenchMarkDatanodeDispatcher
name|bmdd
parameter_list|)
block|{
name|String
name|containerName
init|=
literal|"container-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|containerCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|chunkKey
init|=
literal|"chunk-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|chunkCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|key
init|=
literal|"key-"
operator|+
name|random
operator|.
name|nextInt
argument_list|(
name|keyCount
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|bmdd
operator|.
name|dispatcher
operator|.
name|dispatch
argument_list|(
name|getGetKeyCommand
argument_list|(
name|containerName
argument_list|,
name|chunkKey
argument_list|,
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

