begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  *  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.genesis
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|genesis
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|RandomStringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|StorageUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|MetadataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|utils
operator|.
name|RocksDBStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|infra
operator|.
name|Blackhole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|rocksdb
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_class
annotation|@
name|State
argument_list|(
name|Scope
operator|.
name|Thread
argument_list|)
DECL|class|BenchMarkRocksDbStore
specifier|public
class|class
name|BenchMarkRocksDbStore
block|{
DECL|field|DATA_LEN
specifier|private
specifier|static
specifier|final
name|int
name|DATA_LEN
init|=
literal|1024
decl_stmt|;
DECL|field|MAX_KEYS
specifier|private
specifier|static
specifier|final
name|long
name|MAX_KEYS
init|=
literal|1024
operator|*
literal|10
decl_stmt|;
DECL|field|DB_FILE_LEN
specifier|private
specifier|static
specifier|final
name|int
name|DB_FILE_LEN
init|=
literal|7
decl_stmt|;
DECL|field|TMP_DIR
specifier|private
specifier|static
specifier|final
name|String
name|TMP_DIR
init|=
literal|"java.io.tmpdir"
decl_stmt|;
DECL|field|store
specifier|private
name|MetadataStore
name|store
decl_stmt|;
DECL|field|data
specifier|private
name|byte
index|[]
name|data
decl_stmt|;
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"8"
block|}
argument_list|)
DECL|field|blockSize
specifier|private
name|String
name|blockSize
decl_stmt|;
comment|// 4KB default
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"64"
block|}
argument_list|)
DECL|field|writeBufferSize
specifier|private
name|String
name|writeBufferSize
decl_stmt|;
comment|//64 MB default
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"16"
block|}
argument_list|)
DECL|field|maxWriteBufferNumber
specifier|private
name|String
name|maxWriteBufferNumber
decl_stmt|;
comment|// 2 default
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"4"
block|}
argument_list|)
DECL|field|maxBackgroundFlushes
specifier|private
name|String
name|maxBackgroundFlushes
decl_stmt|;
comment|// 1 default
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"512"
block|}
argument_list|)
DECL|field|maxBytesForLevelBase
specifier|private
name|String
name|maxBytesForLevelBase
decl_stmt|;
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"4"
block|}
argument_list|)
DECL|field|backgroundThreads
specifier|private
name|String
name|backgroundThreads
decl_stmt|;
annotation|@
name|Param
argument_list|(
name|value
operator|=
block|{
literal|"5000"
block|}
argument_list|)
DECL|field|maxOpenFiles
specifier|private
name|String
name|maxOpenFiles
decl_stmt|;
annotation|@
name|Setup
argument_list|(
name|Level
operator|.
name|Trial
argument_list|)
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
throws|throws
name|IOException
block|{
name|data
operator|=
name|RandomStringUtils
operator|.
name|randomAlphanumeric
argument_list|(
name|DATA_LEN
argument_list|)
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
name|org
operator|.
name|rocksdb
operator|.
name|Options
name|opts
init|=
operator|new
name|org
operator|.
name|rocksdb
operator|.
name|Options
argument_list|()
decl_stmt|;
name|File
name|dbFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
name|TMP_DIR
argument_list|)
argument_list|)
operator|.
name|resolve
argument_list|(
name|RandomStringUtils
operator|.
name|randomNumeric
argument_list|(
name|DB_FILE_LEN
argument_list|)
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|opts
operator|.
name|setCreateIfMissing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setWriteBufferSize
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|writeBufferSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setMaxWriteBufferNumber
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|maxWriteBufferNumber
argument_list|)
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setMaxBackgroundFlushes
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|maxBackgroundFlushes
argument_list|)
argument_list|)
expr_stmt|;
name|BlockBasedTableConfig
name|tableConfig
init|=
operator|new
name|BlockBasedTableConfig
argument_list|()
decl_stmt|;
name|tableConfig
operator|.
name|setBlockSize
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|KB
operator|.
name|toBytes
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|blockSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setMaxOpenFiles
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|maxOpenFiles
argument_list|)
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setMaxBytesForLevelBase
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|maxBytesForLevelBase
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setCompactionStyle
argument_list|(
name|CompactionStyle
operator|.
name|UNIVERSAL
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setLevel0FileNumCompactionTrigger
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setLevel0SlowdownWritesTrigger
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setLevel0StopWritesTrigger
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setTargetFileSizeBase
argument_list|(
operator|(
name|long
operator|)
name|StorageUnit
operator|.
name|MB
operator|.
name|toBytes
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|maxBytesForLevelBase
argument_list|)
argument_list|)
operator|/
literal|10
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setMaxBackgroundCompactions
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setUseFsync
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setBytesPerSync
argument_list|(
literal|8388608
argument_list|)
expr_stmt|;
name|org
operator|.
name|rocksdb
operator|.
name|Filter
name|bloomFilter
init|=
operator|new
name|org
operator|.
name|rocksdb
operator|.
name|BloomFilter
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|tableConfig
operator|.
name|setCacheIndexAndFilterBlocks
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tableConfig
operator|.
name|setIndexType
argument_list|(
name|IndexType
operator|.
name|kHashSearch
argument_list|)
expr_stmt|;
name|tableConfig
operator|.
name|setFilter
argument_list|(
name|bloomFilter
argument_list|)
expr_stmt|;
name|opts
operator|.
name|setTableFormatConfig
argument_list|(
name|tableConfig
argument_list|)
expr_stmt|;
name|opts
operator|.
name|useCappedPrefixExtractor
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|store
operator|=
operator|new
name|RocksDBStore
argument_list|(
name|dbFile
argument_list|,
name|opts
argument_list|)
expr_stmt|;
block|}
annotation|@
name|TearDown
argument_list|(
name|Level
operator|.
name|Trial
argument_list|)
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
name|store
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|TMP_DIR
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
DECL|method|test (Blackhole bh)
specifier|public
name|void
name|test
parameter_list|(
name|Blackhole
name|bh
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|x
init|=
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|RandomUtils
operator|.
name|nextLong
argument_list|(
literal|0L
argument_list|,
name|MAX_KEYS
argument_list|)
decl_stmt|;
name|store
operator|.
name|put
argument_list|(
name|Long
operator|.
name|toHexString
argument_list|(
name|x
argument_list|)
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|bh
operator|.
name|consume
argument_list|(
name|store
operator|.
name|get
argument_list|(
name|Long
operator|.
name|toHexString
argument_list|(
name|x
argument_list|)
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

