begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.security.acl
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|conf
operator|.
name|ConfigType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|security
operator|.
name|acl
operator|.
name|IAccessAuthorizer
operator|.
name|ACLType
import|;
end_import

begin_comment
comment|/**  * Ozone ACL config pojo.  * */
end_comment

begin_class
annotation|@
name|ConfigGroup
argument_list|(
name|prefix
operator|=
literal|"ozone.om"
argument_list|)
DECL|class|OzoneAclConfig
specifier|public
class|class
name|OzoneAclConfig
block|{
comment|// OM Default user/group permissions
DECL|field|userDefaultRights
specifier|private
name|ACLType
name|userDefaultRights
init|=
name|ACLType
operator|.
name|ALL
decl_stmt|;
DECL|field|groupDefaultRights
specifier|private
name|ACLType
name|groupDefaultRights
init|=
name|ACLType
operator|.
name|ALL
decl_stmt|;
annotation|@
name|Config
argument_list|(
name|key
operator|=
literal|"user.rights"
argument_list|,
name|defaultValue
operator|=
literal|"ALL"
argument_list|,
name|type
operator|=
name|ConfigType
operator|.
name|STRING
argument_list|,
name|tags
operator|=
block|{
name|ConfigTag
operator|.
name|OM
block|,
name|ConfigTag
operator|.
name|SECURITY
block|}
argument_list|,
name|description
operator|=
literal|"Default user permissions set for an object in "
operator|+
literal|"OzoneManager."
argument_list|)
DECL|method|setUserDefaultRights (String userRights)
specifier|public
name|void
name|setUserDefaultRights
parameter_list|(
name|String
name|userRights
parameter_list|)
block|{
if|if
condition|(
name|userRights
operator|==
literal|null
condition|)
block|{
name|userRights
operator|=
literal|"ALL"
expr_stmt|;
block|}
name|this
operator|.
name|userDefaultRights
operator|=
name|ACLType
operator|.
name|valueOf
argument_list|(
name|userRights
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Config
argument_list|(
name|key
operator|=
literal|"group.rights"
argument_list|,
name|defaultValue
operator|=
literal|"ALL"
argument_list|,
name|type
operator|=
name|ConfigType
operator|.
name|STRING
argument_list|,
name|tags
operator|=
block|{
name|ConfigTag
operator|.
name|OM
block|,
name|ConfigTag
operator|.
name|SECURITY
block|}
argument_list|,
name|description
operator|=
literal|"Default group permissions set for an object in "
operator|+
literal|"OzoneManager."
argument_list|)
DECL|method|setGroupDefaultRights (String groupRights)
specifier|public
name|void
name|setGroupDefaultRights
parameter_list|(
name|String
name|groupRights
parameter_list|)
block|{
if|if
condition|(
name|groupRights
operator|==
literal|null
condition|)
block|{
name|groupRights
operator|=
literal|"ALL"
expr_stmt|;
block|}
name|this
operator|.
name|groupDefaultRights
operator|=
name|ACLType
operator|.
name|valueOf
argument_list|(
name|groupRights
argument_list|)
expr_stmt|;
block|}
DECL|method|getUserDefaultRights ()
specifier|public
name|ACLType
name|getUserDefaultRights
parameter_list|()
block|{
return|return
name|userDefaultRights
return|;
block|}
DECL|method|getGroupDefaultRights ()
specifier|public
name|ACLType
name|getGroupDefaultRights
parameter_list|()
block|{
return|return
name|groupDefaultRights
return|;
block|}
block|}
end_class

end_unit

