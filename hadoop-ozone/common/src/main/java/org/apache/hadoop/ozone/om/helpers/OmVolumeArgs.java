begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|OzoneConsts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|audit
operator|.
name|Auditable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|OzoneAclInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|VolumeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_comment
comment|/**  * A class that encapsulates the OmVolumeArgs Args.  */
end_comment

begin_class
DECL|class|OmVolumeArgs
specifier|public
specifier|final
class|class
name|OmVolumeArgs
extends|extends
name|WithMetadata
implements|implements
name|Auditable
block|{
DECL|field|adminName
specifier|private
specifier|final
name|String
name|adminName
decl_stmt|;
DECL|field|ownerName
specifier|private
specifier|final
name|String
name|ownerName
decl_stmt|;
DECL|field|volume
specifier|private
specifier|final
name|String
name|volume
decl_stmt|;
DECL|field|creationTime
specifier|private
specifier|final
name|long
name|creationTime
decl_stmt|;
DECL|field|quotaInBytes
specifier|private
specifier|final
name|long
name|quotaInBytes
decl_stmt|;
DECL|field|aclMap
specifier|private
specifier|final
name|OmOzoneAclMap
name|aclMap
decl_stmt|;
comment|/**    * Private constructor, constructed via builder.    * @param adminName  - Administrator's name.    * @param ownerName  - Volume owner's name    * @param volume - volume name    * @param quotaInBytes - Volume Quota in bytes.    * @param metadata - metadata map for custom key/value data.    * @param aclMap - User to access rights map.    * @param creationTime - Volume creation time.    */
DECL|method|OmVolumeArgs (String adminName, String ownerName, String volume, long quotaInBytes, Map<String, String> metadata, OmOzoneAclMap aclMap, long creationTime)
specifier|private
name|OmVolumeArgs
parameter_list|(
name|String
name|adminName
parameter_list|,
name|String
name|ownerName
parameter_list|,
name|String
name|volume
parameter_list|,
name|long
name|quotaInBytes
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
parameter_list|,
name|OmOzoneAclMap
name|aclMap
parameter_list|,
name|long
name|creationTime
parameter_list|)
block|{
name|this
operator|.
name|adminName
operator|=
name|adminName
expr_stmt|;
name|this
operator|.
name|ownerName
operator|=
name|ownerName
expr_stmt|;
name|this
operator|.
name|volume
operator|=
name|volume
expr_stmt|;
name|this
operator|.
name|quotaInBytes
operator|=
name|quotaInBytes
expr_stmt|;
name|this
operator|.
name|metadata
operator|=
name|metadata
expr_stmt|;
name|this
operator|.
name|aclMap
operator|=
name|aclMap
expr_stmt|;
name|this
operator|.
name|creationTime
operator|=
name|creationTime
expr_stmt|;
block|}
comment|/**    * Returns the Admin Name.    * @return String.    */
DECL|method|getAdminName ()
specifier|public
name|String
name|getAdminName
parameter_list|()
block|{
return|return
name|adminName
return|;
block|}
comment|/**    * Returns the owner Name.    * @return String    */
DECL|method|getOwnerName ()
specifier|public
name|String
name|getOwnerName
parameter_list|()
block|{
return|return
name|ownerName
return|;
block|}
comment|/**    * Returns the volume Name.    * @return String    */
DECL|method|getVolume ()
specifier|public
name|String
name|getVolume
parameter_list|()
block|{
return|return
name|volume
return|;
block|}
comment|/**    * Returns creation time.    * @return long    */
DECL|method|getCreationTime ()
specifier|public
name|long
name|getCreationTime
parameter_list|()
block|{
return|return
name|creationTime
return|;
block|}
comment|/**    * Returns Quota in Bytes.    * @return long, Quota in bytes.    */
DECL|method|getQuotaInBytes ()
specifier|public
name|long
name|getQuotaInBytes
parameter_list|()
block|{
return|return
name|quotaInBytes
return|;
block|}
DECL|method|getAclMap ()
specifier|public
name|OmOzoneAclMap
name|getAclMap
parameter_list|()
block|{
return|return
name|aclMap
return|;
block|}
comment|/**    * Returns new builder class that builds a OmVolumeArgs.    *    * @return Builder    */
DECL|method|newBuilder ()
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toAuditMap ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|toAuditMap
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|auditMap
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|auditMap
operator|.
name|put
argument_list|(
name|OzoneConsts
operator|.
name|ADMIN
argument_list|,
name|this
operator|.
name|adminName
argument_list|)
expr_stmt|;
name|auditMap
operator|.
name|put
argument_list|(
name|OzoneConsts
operator|.
name|OWNER
argument_list|,
name|this
operator|.
name|ownerName
argument_list|)
expr_stmt|;
name|auditMap
operator|.
name|put
argument_list|(
name|OzoneConsts
operator|.
name|VOLUME
argument_list|,
name|this
operator|.
name|volume
argument_list|)
expr_stmt|;
name|auditMap
operator|.
name|put
argument_list|(
name|OzoneConsts
operator|.
name|CREATION_TIME
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|this
operator|.
name|creationTime
argument_list|)
argument_list|)
expr_stmt|;
name|auditMap
operator|.
name|put
argument_list|(
name|OzoneConsts
operator|.
name|QUOTA_IN_BYTES
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|this
operator|.
name|quotaInBytes
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|auditMap
return|;
block|}
comment|/**    * Builder for OmVolumeArgs.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|adminName
specifier|private
name|String
name|adminName
decl_stmt|;
DECL|field|ownerName
specifier|private
name|String
name|ownerName
decl_stmt|;
DECL|field|volume
specifier|private
name|String
name|volume
decl_stmt|;
DECL|field|creationTime
specifier|private
name|long
name|creationTime
decl_stmt|;
DECL|field|quotaInBytes
specifier|private
name|long
name|quotaInBytes
decl_stmt|;
DECL|field|metadata
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
decl_stmt|;
DECL|field|aclMap
specifier|private
name|OmOzoneAclMap
name|aclMap
decl_stmt|;
comment|/**      * Constructs a builder.      */
DECL|method|Builder ()
specifier|public
name|Builder
parameter_list|()
block|{
name|metadata
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|aclMap
operator|=
operator|new
name|OmOzoneAclMap
argument_list|()
expr_stmt|;
block|}
DECL|method|setAdminName (String admin)
specifier|public
name|Builder
name|setAdminName
parameter_list|(
name|String
name|admin
parameter_list|)
block|{
name|this
operator|.
name|adminName
operator|=
name|admin
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setOwnerName (String owner)
specifier|public
name|Builder
name|setOwnerName
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|this
operator|.
name|ownerName
operator|=
name|owner
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setVolume (String volumeName)
specifier|public
name|Builder
name|setVolume
parameter_list|(
name|String
name|volumeName
parameter_list|)
block|{
name|this
operator|.
name|volume
operator|=
name|volumeName
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setCreationTime (long createdOn)
specifier|public
name|Builder
name|setCreationTime
parameter_list|(
name|long
name|createdOn
parameter_list|)
block|{
name|this
operator|.
name|creationTime
operator|=
name|createdOn
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setQuotaInBytes (long quota)
specifier|public
name|Builder
name|setQuotaInBytes
parameter_list|(
name|long
name|quota
parameter_list|)
block|{
name|this
operator|.
name|quotaInBytes
operator|=
name|quota
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|addMetadata (String key, String value)
specifier|public
name|Builder
name|addMetadata
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|metadata
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
comment|// overwrite if present.
return|return
name|this
return|;
block|}
DECL|method|addAllMetadata (Map<String, String> additionalMetaData)
specifier|public
name|Builder
name|addAllMetadata
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|additionalMetaData
parameter_list|)
block|{
if|if
condition|(
name|additionalMetaData
operator|!=
literal|null
condition|)
block|{
name|metadata
operator|.
name|putAll
argument_list|(
name|additionalMetaData
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
DECL|method|addOzoneAcls (OzoneAclInfo acl)
specifier|public
name|Builder
name|addOzoneAcls
parameter_list|(
name|OzoneAclInfo
name|acl
parameter_list|)
throws|throws
name|IOException
block|{
name|aclMap
operator|.
name|addAcl
argument_list|(
name|acl
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Constructs a CreateVolumeArgument.      * @return CreateVolumeArgs.      */
DECL|method|build ()
specifier|public
name|OmVolumeArgs
name|build
parameter_list|()
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|adminName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|ownerName
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|volume
argument_list|)
expr_stmt|;
return|return
operator|new
name|OmVolumeArgs
argument_list|(
name|adminName
argument_list|,
name|ownerName
argument_list|,
name|volume
argument_list|,
name|quotaInBytes
argument_list|,
name|metadata
argument_list|,
name|aclMap
argument_list|,
name|creationTime
argument_list|)
return|;
block|}
block|}
DECL|method|getProtobuf ()
specifier|public
name|VolumeInfo
name|getProtobuf
parameter_list|()
block|{
name|List
argument_list|<
name|OzoneAclInfo
argument_list|>
name|aclList
init|=
name|aclMap
operator|.
name|ozoneAclGetProtobuf
argument_list|()
decl_stmt|;
return|return
name|VolumeInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAdminName
argument_list|(
name|adminName
argument_list|)
operator|.
name|setOwnerName
argument_list|(
name|ownerName
argument_list|)
operator|.
name|setVolume
argument_list|(
name|volume
argument_list|)
operator|.
name|setQuotaInBytes
argument_list|(
name|quotaInBytes
argument_list|)
operator|.
name|addAllMetadata
argument_list|(
name|KeyValueUtil
operator|.
name|toProtobuf
argument_list|(
name|metadata
argument_list|)
argument_list|)
operator|.
name|addAllVolumeAcls
argument_list|(
name|aclList
argument_list|)
operator|.
name|setCreationTime
argument_list|(
name|creationTime
operator|==
literal|0
condition|?
name|System
operator|.
name|currentTimeMillis
argument_list|()
else|:
name|creationTime
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getFromProtobuf (VolumeInfo volInfo)
specifier|public
specifier|static
name|OmVolumeArgs
name|getFromProtobuf
parameter_list|(
name|VolumeInfo
name|volInfo
parameter_list|)
block|{
name|OmOzoneAclMap
name|aclMap
init|=
name|OmOzoneAclMap
operator|.
name|ozoneAclGetFromProtobuf
argument_list|(
name|volInfo
operator|.
name|getVolumeAclsList
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|OmVolumeArgs
argument_list|(
name|volInfo
operator|.
name|getAdminName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getOwnerName
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getVolume
argument_list|()
argument_list|,
name|volInfo
operator|.
name|getQuotaInBytes
argument_list|()
argument_list|,
name|KeyValueUtil
operator|.
name|getFromProtobuf
argument_list|(
name|volInfo
operator|.
name|getMetadataList
argument_list|()
argument_list|)
argument_list|,
name|aclMap
argument_list|,
name|volInfo
operator|.
name|getCreationTime
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

