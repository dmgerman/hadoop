begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with this  * work for additional information regarding copyright ownership.  The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
DECL|package|org.apache.hadoop.ozone.om.helpers
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|om
operator|.
name|helpers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|client
operator|.
name|BlockID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|pipeline
operator|.
name|Pipeline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|scm
operator|.
name|pipeline
operator|.
name|UnknownPipelineStateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdds
operator|.
name|security
operator|.
name|token
operator|.
name|OzoneBlockTokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ozone
operator|.
name|protocol
operator|.
name|proto
operator|.
name|OzoneManagerProtocolProtos
operator|.
name|KeyLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * One key can be too huge to fit in one container. In which case it gets split  * into a number of subkeys. This class represents one such subkey instance.  */
end_comment

begin_class
DECL|class|OmKeyLocationInfo
specifier|public
specifier|final
class|class
name|OmKeyLocationInfo
block|{
DECL|field|blockID
specifier|private
specifier|final
name|BlockID
name|blockID
decl_stmt|;
comment|// the id of this subkey in all the subkeys.
DECL|field|length
specifier|private
name|long
name|length
decl_stmt|;
DECL|field|offset
specifier|private
specifier|final
name|long
name|offset
decl_stmt|;
comment|// Block token, required for client authentication when security is enabled.
DECL|field|token
specifier|private
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|token
decl_stmt|;
comment|// the version number indicating when this block was added
DECL|field|createVersion
specifier|private
name|long
name|createVersion
decl_stmt|;
DECL|field|pipeline
specifier|private
name|Pipeline
name|pipeline
decl_stmt|;
DECL|method|OmKeyLocationInfo (BlockID blockID, Pipeline pipeline, long length, long offset)
specifier|private
name|OmKeyLocationInfo
parameter_list|(
name|BlockID
name|blockID
parameter_list|,
name|Pipeline
name|pipeline
parameter_list|,
name|long
name|length
parameter_list|,
name|long
name|offset
parameter_list|)
block|{
name|this
operator|.
name|blockID
operator|=
name|blockID
expr_stmt|;
name|this
operator|.
name|pipeline
operator|=
name|pipeline
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
block|}
DECL|method|OmKeyLocationInfo (BlockID blockID, Pipeline pipeline, long length, long offset, Token<OzoneBlockTokenIdentifier> token)
specifier|private
name|OmKeyLocationInfo
parameter_list|(
name|BlockID
name|blockID
parameter_list|,
name|Pipeline
name|pipeline
parameter_list|,
name|long
name|length
parameter_list|,
name|long
name|offset
parameter_list|,
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|token
parameter_list|)
block|{
name|this
operator|.
name|blockID
operator|=
name|blockID
expr_stmt|;
name|this
operator|.
name|pipeline
operator|=
name|pipeline
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|offset
operator|=
name|offset
expr_stmt|;
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
block|}
DECL|method|setCreateVersion (long version)
specifier|public
name|void
name|setCreateVersion
parameter_list|(
name|long
name|version
parameter_list|)
block|{
name|createVersion
operator|=
name|version
expr_stmt|;
block|}
DECL|method|getCreateVersion ()
specifier|public
name|long
name|getCreateVersion
parameter_list|()
block|{
return|return
name|createVersion
return|;
block|}
DECL|method|getBlockID ()
specifier|public
name|BlockID
name|getBlockID
parameter_list|()
block|{
return|return
name|blockID
return|;
block|}
DECL|method|getContainerID ()
specifier|public
name|long
name|getContainerID
parameter_list|()
block|{
return|return
name|blockID
operator|.
name|getContainerID
argument_list|()
return|;
block|}
DECL|method|getLocalID ()
specifier|public
name|long
name|getLocalID
parameter_list|()
block|{
return|return
name|blockID
operator|.
name|getLocalID
argument_list|()
return|;
block|}
DECL|method|getPipeline ()
specifier|public
name|Pipeline
name|getPipeline
parameter_list|()
block|{
return|return
name|pipeline
return|;
block|}
DECL|method|getLength ()
specifier|public
name|long
name|getLength
parameter_list|()
block|{
return|return
name|length
return|;
block|}
DECL|method|setLength (long length)
specifier|public
name|void
name|setLength
parameter_list|(
name|long
name|length
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
DECL|method|getOffset ()
specifier|public
name|long
name|getOffset
parameter_list|()
block|{
return|return
name|offset
return|;
block|}
DECL|method|getBlockCommitSequenceId ()
specifier|public
name|long
name|getBlockCommitSequenceId
parameter_list|()
block|{
return|return
name|blockID
operator|.
name|getBlockCommitSequenceId
argument_list|()
return|;
block|}
DECL|method|getToken ()
specifier|public
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|getToken
parameter_list|()
block|{
return|return
name|token
return|;
block|}
DECL|method|setToken (Token<OzoneBlockTokenIdentifier> token)
specifier|public
name|void
name|setToken
parameter_list|(
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|token
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|token
expr_stmt|;
block|}
DECL|method|setPipeline (Pipeline pipeline)
specifier|public
name|void
name|setPipeline
parameter_list|(
name|Pipeline
name|pipeline
parameter_list|)
block|{
name|this
operator|.
name|pipeline
operator|=
name|pipeline
expr_stmt|;
block|}
comment|/**    * Builder of OmKeyLocationInfo.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
block|{
DECL|field|blockID
specifier|private
name|BlockID
name|blockID
decl_stmt|;
DECL|field|length
specifier|private
name|long
name|length
decl_stmt|;
DECL|field|offset
specifier|private
name|long
name|offset
decl_stmt|;
DECL|field|token
specifier|private
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|token
decl_stmt|;
DECL|field|pipeline
specifier|private
name|Pipeline
name|pipeline
decl_stmt|;
DECL|method|setBlockID (BlockID blockId)
specifier|public
name|Builder
name|setBlockID
parameter_list|(
name|BlockID
name|blockId
parameter_list|)
block|{
name|this
operator|.
name|blockID
operator|=
name|blockId
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"checkstyle:hiddenfield"
argument_list|)
DECL|method|setPipeline (Pipeline pipeline)
specifier|public
name|Builder
name|setPipeline
parameter_list|(
name|Pipeline
name|pipeline
parameter_list|)
block|{
name|this
operator|.
name|pipeline
operator|=
name|pipeline
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLength (long len)
specifier|public
name|Builder
name|setLength
parameter_list|(
name|long
name|len
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|len
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setOffset (long off)
specifier|public
name|Builder
name|setOffset
parameter_list|(
name|long
name|off
parameter_list|)
block|{
name|this
operator|.
name|offset
operator|=
name|off
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setToken (Token<OzoneBlockTokenIdentifier> bToken)
specifier|public
name|Builder
name|setToken
parameter_list|(
name|Token
argument_list|<
name|OzoneBlockTokenIdentifier
argument_list|>
name|bToken
parameter_list|)
block|{
name|this
operator|.
name|token
operator|=
name|bToken
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build ()
specifier|public
name|OmKeyLocationInfo
name|build
parameter_list|()
block|{
if|if
condition|(
name|token
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|OmKeyLocationInfo
argument_list|(
name|blockID
argument_list|,
name|pipeline
argument_list|,
name|length
argument_list|,
name|offset
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|OmKeyLocationInfo
argument_list|(
name|blockID
argument_list|,
name|pipeline
argument_list|,
name|length
argument_list|,
name|offset
argument_list|,
name|token
argument_list|)
return|;
block|}
block|}
block|}
DECL|method|getProtobuf ()
specifier|public
name|KeyLocation
name|getProtobuf
parameter_list|()
block|{
name|KeyLocation
operator|.
name|Builder
name|builder
init|=
name|KeyLocation
operator|.
name|newBuilder
argument_list|()
operator|.
name|setBlockID
argument_list|(
name|blockID
operator|.
name|getProtobuf
argument_list|()
argument_list|)
operator|.
name|setLength
argument_list|(
name|length
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
operator|.
name|setCreateVersion
argument_list|(
name|createVersion
argument_list|)
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|token
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setToken
argument_list|(
name|this
operator|.
name|token
operator|.
name|toTokenProto
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|builder
operator|.
name|setPipeline
argument_list|(
name|pipeline
operator|.
name|getProtobufMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnknownPipelineStateException
name|e
parameter_list|)
block|{
comment|//TODO: fix me: we should not return KeyLocation without pipeline.
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
DECL|method|getPipeline (KeyLocation keyLocation)
specifier|private
specifier|static
name|Pipeline
name|getPipeline
parameter_list|(
name|KeyLocation
name|keyLocation
parameter_list|)
block|{
try|try
block|{
return|return
name|keyLocation
operator|.
name|hasPipeline
argument_list|()
condition|?
name|Pipeline
operator|.
name|getFromProtobuf
argument_list|(
name|keyLocation
operator|.
name|getPipeline
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|UnknownPipelineStateException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|method|getFromProtobuf (KeyLocation keyLocation)
specifier|public
specifier|static
name|OmKeyLocationInfo
name|getFromProtobuf
parameter_list|(
name|KeyLocation
name|keyLocation
parameter_list|)
block|{
name|OmKeyLocationInfo
name|info
init|=
operator|new
name|OmKeyLocationInfo
argument_list|(
name|BlockID
operator|.
name|getFromProtobuf
argument_list|(
name|keyLocation
operator|.
name|getBlockID
argument_list|()
argument_list|)
argument_list|,
name|getPipeline
argument_list|(
name|keyLocation
argument_list|)
argument_list|,
name|keyLocation
operator|.
name|getLength
argument_list|()
argument_list|,
name|keyLocation
operator|.
name|getOffset
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|keyLocation
operator|.
name|hasToken
argument_list|()
condition|)
block|{
name|info
operator|.
name|token
operator|=
operator|new
name|Token
argument_list|<>
argument_list|(
name|keyLocation
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|info
operator|.
name|setCreateVersion
argument_list|(
name|keyLocation
operator|.
name|getCreateVersion
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{blockID={containerID="
operator|+
name|blockID
operator|.
name|getContainerID
argument_list|()
operator|+
literal|", localID="
operator|+
name|blockID
operator|.
name|getLocalID
argument_list|()
operator|+
literal|"}"
operator|+
literal|", length="
operator|+
name|length
operator|+
literal|", offset="
operator|+
name|offset
operator|+
literal|", token="
operator|+
name|token
operator|+
literal|", pipeline="
operator|+
name|pipeline
operator|+
literal|", createVersion="
operator|+
name|createVersion
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

